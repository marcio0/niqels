


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>angular-seed/test/lib/angular/angular-scenario.js at master · angular/angular-seed · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe120-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (2012-05-25, TCS patched 2012-05-27, GitHub v1.0.36) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="B18EAD86:5B07:2884AE:524A490E" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="+HZnoPDbPwFiOq4TtjPPTrJOvgIHiwj6csIfJE5PVQI=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-ae794206d0e4e8a84619ca476b2b906ec038d487.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-4e9347ae8f53d7710a27ba7dfdfb83229471a306.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-4e5aeedcc7a86dcff8294cb84644a333b46202a2.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-0c6e6b57b385c52ea52784f1accc11d4e71e1c62.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="e2ea29d653cc85291b32697b527de68d">

        <link data-pjax-transient rel='permalink' href='/angular/angular-seed/blob/16fc9a21550c95e0fa6df958530841f8ba7f7343/test/lib/angular/angular-scenario.js'>
  <meta property="og:title" content="angular-seed"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/angular/angular-seed"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="angular-seed - Seed project for angular apps. "/>

  <meta name="description" content="angular-seed - Seed project for angular apps. " />

  <meta content="139426" name="octolytics-dimension-user_id" /><meta content="angular" name="octolytics-dimension-user_login" /><meta content="1195004" name="octolytics-dimension-repository_id" /><meta content="angular/angular-seed" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="1195004" name="octolytics-dimension-repository_network_root_id" /><meta content="angular/angular-seed" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/angular/angular-seed/commits/master.atom" rel="alternate" title="Recent Commits to angular-seed:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production  vis-public  page-blob">
    <div class="wrapper">
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/signup">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fangular%2Fangular-seed%2Fblob%2Fmaster%2Ftest%2Flib%2Fangular%2Fangular-scenario.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="angular/angular-seed"
      data-branch="master"
      data-sha="eba537b0816b2eb692258be1e409bc6e519b5c13"
  >

    <input type="hidden" name="nwo" value="angular/angular-seed" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
  <a href="/login?return_to=%2Fangular%2Fangular-seed"
  class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
  title="You must be signed in to use this feature" rel="nofollow">
  <span class="octicon octicon-star"></span>Star
</a>
<a class="social-count js-social-count" href="/angular/angular-seed/stargazers">
  2,862
</a>

  </li>

    <li>
      <a href="/login?return_to=%2Fangular%2Fangular-seed"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/angular/angular-seed/network" class="social-count">
        1,495
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/angular" class="url fn" itemprop="url" rel="author"><span itemprop="title">angular</span></a></span
          ><span class="repohead-name-divider">/</span><strong
          ><a href="/angular/angular-seed" class="js-current-repository js-repo-home-link">angular-seed</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container ">

        <div class="repository-sidebar">
            

<div class="repo-nav repo-nav-full js-repository-container-pjax js-octicon-loaders">
  <div class="repo-nav-contents">
    <ul class="repo-menu">
      <li class="tooltipped leftwards" title="Code">
        <a href="/angular/angular-seed" aria-label="Code" class="js-selected-navigation-item selected" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /angular/angular-seed">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/angular/angular-seed/issues" aria-label="Issues" class="js-selected-navigation-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /angular/angular-seed/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>31</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/angular/angular-seed/pulls" aria-label="Pull Requests" class="js-selected-navigation-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /angular/angular-seed/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>13</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="repo-menu-separator"></div>
    <ul class="repo-menu">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/angular/angular-seed/pulse" aria-label="Pulse" class="js-selected-navigation-item " data-pjax="true" data-selected-links="pulse /angular/angular-seed/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/angular/angular-seed/graphs" aria-label="Graphs" class="js-selected-navigation-item " data-pjax="true" data-selected-links="repo_graphs repo_contributors /angular/angular-seed/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/angular/angular-seed/network" aria-label="Network" class="js-selected-navigation-item js-disable-pjax" data-selected-links="repo_network /angular/angular-seed/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular/angular-seed.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular/angular-seed.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular/angular-seed" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular/angular-seed" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



              <a href="/angular/angular-seed/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:7a490b36f425ed4e56f71e0e9841bc37 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/angular/angular-seed/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  


<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular/angular-seed/blob/master/test/lib/angular/angular-scenario.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular/angular-seed/blob/v0.10.x/test/lib/angular/angular-scenario.js"
                 data-name="v0.10.x"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.10.x">v0.10.x</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/angular-seed" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">angular-seed</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/angular-seed/tree/master/test" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">test</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/angular-seed/tree/master/test/lib" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/angular-seed/tree/master/test/lib/angular" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">angular</span></a></span><span class="separator"> / </span><strong class="final-path">angular-scenario.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="test/lib/angular/angular-scenario.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>



  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://1.gravatar.com/avatar/fc5dc0d579fb554752763792a2d5f449?d=https%3A%2F%2Fidenticons.github.com%2Faa9c063177ca69eec92c9dda4e7aec59.png&amp;s=140" width="24" />
    <span class="author"><a href="/IgorMinar" rel="author">IgorMinar</a></span>
    <time class="js-relative-date" datetime="2013-05-22T21:13:33-07:00" title="2013-05-22 21:13:33">May 22, 2013</time>
    <div class="commit-title">
        <a href="/angular/angular-seed/commit/8111a5d6042a45a0fe2dc1b2fa5af337c2f139e3" class="message" data-pjax="true" title="upgrade to angular 1.0.7 monochromatic-rainbow">upgrade to angular 1.0.7 monochromatic-rainbow</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>4</strong> contributors</a></p>
          <a class="avatar tooltipped downwards" title="IgorMinar" href="/angular/angular-seed/commits/master/test/lib/angular/angular-scenario.js?author=IgorMinar"><img height="20" src="https://1.gravatar.com/avatar/fc5dc0d579fb554752763792a2d5f449?d=https%3A%2F%2Fidenticons.github.com%2Faa9c063177ca69eec92c9dda4e7aec59.png&amp;s=140" width="20" /></a>
    <a class="avatar tooltipped downwards" title="mhevery" href="/angular/angular-seed/commits/master/test/lib/angular/angular-scenario.js?author=mhevery"><img height="20" src="https://1.gravatar.com/avatar/8d67eedc1442e8392a7add197abacd66?d=https%3A%2F%2Fidenticons.github.com%2F65b8376e9cd93c4ab07aedbf3ef4d89d.png&amp;s=140" width="20" /></a>
    <a class="avatar tooltipped downwards" title="vojtajina" href="/angular/angular-seed/commits/master/test/lib/angular/angular-scenario.js?author=vojtajina"><img height="20" src="https://0.gravatar.com/avatar/d59bdceef864e67df13167d806d6da63?d=https%3A%2F%2Fidenticons.github.com%2F5bb0b4dd9a4f5c0de3564b63d74bcf5f.png&amp;s=140" width="20" /></a>
    <a class="avatar tooltipped downwards" title="cburgdorf" href="/angular/angular-seed/commits/master/test/lib/angular/angular-scenario.js?author=cburgdorf"><img height="20" src="https://2.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?d=https%3A%2F%2Fidenticons.github.com%2Fc94ab8cc222b741c3b8ca0f9fc60dd3b.png&amp;s=140" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li class="facebox-user-list-item">
          <img height="24" src="https://1.gravatar.com/avatar/fc5dc0d579fb554752763792a2d5f449?d=https%3A%2F%2Fidenticons.github.com%2Faa9c063177ca69eec92c9dda4e7aec59.png&amp;s=140" width="24" />
          <a href="/IgorMinar">IgorMinar</a>
        </li>
        <li class="facebox-user-list-item">
          <img height="24" src="https://1.gravatar.com/avatar/8d67eedc1442e8392a7add197abacd66?d=https%3A%2F%2Fidenticons.github.com%2F65b8376e9cd93c4ab07aedbf3ef4d89d.png&amp;s=140" width="24" />
          <a href="/mhevery">mhevery</a>
        </li>
        <li class="facebox-user-list-item">
          <img height="24" src="https://0.gravatar.com/avatar/d59bdceef864e67df13167d806d6da63?d=https%3A%2F%2Fidenticons.github.com%2F5bb0b4dd9a4f5c0de3564b63d74bcf5f.png&amp;s=140" width="24" />
          <a href="/vojtajina">vojtajina</a>
        </li>
        <li class="facebox-user-list-item">
          <img height="24" src="https://2.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?d=https%3A%2F%2Fidenticons.github.com%2Fc94ab8cc222b741c3b8ca0f9fc60dd3b.png&amp;s=140" width="24" />
          <a href="/cburgdorf">cburgdorf</a>
        </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>26310 lines (23003 sloc)</span>
        <span>810.395 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
              <a class="minibutton disabled js-entice" href=""
                 data-entice="You must be signed in to make or propose changes">Edit</a>
          <a href="/angular/angular-seed/raw/master/test/lib/angular/angular-scenario.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/angular/angular-seed/blame/master/test/lib/angular/angular-scenario.js" class="button minibutton ">Blame</a>
          <a href="/angular/angular-seed/commits/master/test/lib/angular/angular-scenario.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
            <a class="minibutton danger empty-icon js-entice" href=""
               data-entice="You must be signed in and on a branch to make or propose changes">
            Delete
          </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
<span id="L262" rel="#L262">262</span>
<span id="L263" rel="#L263">263</span>
<span id="L264" rel="#L264">264</span>
<span id="L265" rel="#L265">265</span>
<span id="L266" rel="#L266">266</span>
<span id="L267" rel="#L267">267</span>
<span id="L268" rel="#L268">268</span>
<span id="L269" rel="#L269">269</span>
<span id="L270" rel="#L270">270</span>
<span id="L271" rel="#L271">271</span>
<span id="L272" rel="#L272">272</span>
<span id="L273" rel="#L273">273</span>
<span id="L274" rel="#L274">274</span>
<span id="L275" rel="#L275">275</span>
<span id="L276" rel="#L276">276</span>
<span id="L277" rel="#L277">277</span>
<span id="L278" rel="#L278">278</span>
<span id="L279" rel="#L279">279</span>
<span id="L280" rel="#L280">280</span>
<span id="L281" rel="#L281">281</span>
<span id="L282" rel="#L282">282</span>
<span id="L283" rel="#L283">283</span>
<span id="L284" rel="#L284">284</span>
<span id="L285" rel="#L285">285</span>
<span id="L286" rel="#L286">286</span>
<span id="L287" rel="#L287">287</span>
<span id="L288" rel="#L288">288</span>
<span id="L289" rel="#L289">289</span>
<span id="L290" rel="#L290">290</span>
<span id="L291" rel="#L291">291</span>
<span id="L292" rel="#L292">292</span>
<span id="L293" rel="#L293">293</span>
<span id="L294" rel="#L294">294</span>
<span id="L295" rel="#L295">295</span>
<span id="L296" rel="#L296">296</span>
<span id="L297" rel="#L297">297</span>
<span id="L298" rel="#L298">298</span>
<span id="L299" rel="#L299">299</span>
<span id="L300" rel="#L300">300</span>
<span id="L301" rel="#L301">301</span>
<span id="L302" rel="#L302">302</span>
<span id="L303" rel="#L303">303</span>
<span id="L304" rel="#L304">304</span>
<span id="L305" rel="#L305">305</span>
<span id="L306" rel="#L306">306</span>
<span id="L307" rel="#L307">307</span>
<span id="L308" rel="#L308">308</span>
<span id="L309" rel="#L309">309</span>
<span id="L310" rel="#L310">310</span>
<span id="L311" rel="#L311">311</span>
<span id="L312" rel="#L312">312</span>
<span id="L313" rel="#L313">313</span>
<span id="L314" rel="#L314">314</span>
<span id="L315" rel="#L315">315</span>
<span id="L316" rel="#L316">316</span>
<span id="L317" rel="#L317">317</span>
<span id="L318" rel="#L318">318</span>
<span id="L319" rel="#L319">319</span>
<span id="L320" rel="#L320">320</span>
<span id="L321" rel="#L321">321</span>
<span id="L322" rel="#L322">322</span>
<span id="L323" rel="#L323">323</span>
<span id="L324" rel="#L324">324</span>
<span id="L325" rel="#L325">325</span>
<span id="L326" rel="#L326">326</span>
<span id="L327" rel="#L327">327</span>
<span id="L328" rel="#L328">328</span>
<span id="L329" rel="#L329">329</span>
<span id="L330" rel="#L330">330</span>
<span id="L331" rel="#L331">331</span>
<span id="L332" rel="#L332">332</span>
<span id="L333" rel="#L333">333</span>
<span id="L334" rel="#L334">334</span>
<span id="L335" rel="#L335">335</span>
<span id="L336" rel="#L336">336</span>
<span id="L337" rel="#L337">337</span>
<span id="L338" rel="#L338">338</span>
<span id="L339" rel="#L339">339</span>
<span id="L340" rel="#L340">340</span>
<span id="L341" rel="#L341">341</span>
<span id="L342" rel="#L342">342</span>
<span id="L343" rel="#L343">343</span>
<span id="L344" rel="#L344">344</span>
<span id="L345" rel="#L345">345</span>
<span id="L346" rel="#L346">346</span>
<span id="L347" rel="#L347">347</span>
<span id="L348" rel="#L348">348</span>
<span id="L349" rel="#L349">349</span>
<span id="L350" rel="#L350">350</span>
<span id="L351" rel="#L351">351</span>
<span id="L352" rel="#L352">352</span>
<span id="L353" rel="#L353">353</span>
<span id="L354" rel="#L354">354</span>
<span id="L355" rel="#L355">355</span>
<span id="L356" rel="#L356">356</span>
<span id="L357" rel="#L357">357</span>
<span id="L358" rel="#L358">358</span>
<span id="L359" rel="#L359">359</span>
<span id="L360" rel="#L360">360</span>
<span id="L361" rel="#L361">361</span>
<span id="L362" rel="#L362">362</span>
<span id="L363" rel="#L363">363</span>
<span id="L364" rel="#L364">364</span>
<span id="L365" rel="#L365">365</span>
<span id="L366" rel="#L366">366</span>
<span id="L367" rel="#L367">367</span>
<span id="L368" rel="#L368">368</span>
<span id="L369" rel="#L369">369</span>
<span id="L370" rel="#L370">370</span>
<span id="L371" rel="#L371">371</span>
<span id="L372" rel="#L372">372</span>
<span id="L373" rel="#L373">373</span>
<span id="L374" rel="#L374">374</span>
<span id="L375" rel="#L375">375</span>
<span id="L376" rel="#L376">376</span>
<span id="L377" rel="#L377">377</span>
<span id="L378" rel="#L378">378</span>
<span id="L379" rel="#L379">379</span>
<span id="L380" rel="#L380">380</span>
<span id="L381" rel="#L381">381</span>
<span id="L382" rel="#L382">382</span>
<span id="L383" rel="#L383">383</span>
<span id="L384" rel="#L384">384</span>
<span id="L385" rel="#L385">385</span>
<span id="L386" rel="#L386">386</span>
<span id="L387" rel="#L387">387</span>
<span id="L388" rel="#L388">388</span>
<span id="L389" rel="#L389">389</span>
<span id="L390" rel="#L390">390</span>
<span id="L391" rel="#L391">391</span>
<span id="L392" rel="#L392">392</span>
<span id="L393" rel="#L393">393</span>
<span id="L394" rel="#L394">394</span>
<span id="L395" rel="#L395">395</span>
<span id="L396" rel="#L396">396</span>
<span id="L397" rel="#L397">397</span>
<span id="L398" rel="#L398">398</span>
<span id="L399" rel="#L399">399</span>
<span id="L400" rel="#L400">400</span>
<span id="L401" rel="#L401">401</span>
<span id="L402" rel="#L402">402</span>
<span id="L403" rel="#L403">403</span>
<span id="L404" rel="#L404">404</span>
<span id="L405" rel="#L405">405</span>
<span id="L406" rel="#L406">406</span>
<span id="L407" rel="#L407">407</span>
<span id="L408" rel="#L408">408</span>
<span id="L409" rel="#L409">409</span>
<span id="L410" rel="#L410">410</span>
<span id="L411" rel="#L411">411</span>
<span id="L412" rel="#L412">412</span>
<span id="L413" rel="#L413">413</span>
<span id="L414" rel="#L414">414</span>
<span id="L415" rel="#L415">415</span>
<span id="L416" rel="#L416">416</span>
<span id="L417" rel="#L417">417</span>
<span id="L418" rel="#L418">418</span>
<span id="L419" rel="#L419">419</span>
<span id="L420" rel="#L420">420</span>
<span id="L421" rel="#L421">421</span>
<span id="L422" rel="#L422">422</span>
<span id="L423" rel="#L423">423</span>
<span id="L424" rel="#L424">424</span>
<span id="L425" rel="#L425">425</span>
<span id="L426" rel="#L426">426</span>
<span id="L427" rel="#L427">427</span>
<span id="L428" rel="#L428">428</span>
<span id="L429" rel="#L429">429</span>
<span id="L430" rel="#L430">430</span>
<span id="L431" rel="#L431">431</span>
<span id="L432" rel="#L432">432</span>
<span id="L433" rel="#L433">433</span>
<span id="L434" rel="#L434">434</span>
<span id="L435" rel="#L435">435</span>
<span id="L436" rel="#L436">436</span>
<span id="L437" rel="#L437">437</span>
<span id="L438" rel="#L438">438</span>
<span id="L439" rel="#L439">439</span>
<span id="L440" rel="#L440">440</span>
<span id="L441" rel="#L441">441</span>
<span id="L442" rel="#L442">442</span>
<span id="L443" rel="#L443">443</span>
<span id="L444" rel="#L444">444</span>
<span id="L445" rel="#L445">445</span>
<span id="L446" rel="#L446">446</span>
<span id="L447" rel="#L447">447</span>
<span id="L448" rel="#L448">448</span>
<span id="L449" rel="#L449">449</span>
<span id="L450" rel="#L450">450</span>
<span id="L451" rel="#L451">451</span>
<span id="L452" rel="#L452">452</span>
<span id="L453" rel="#L453">453</span>
<span id="L454" rel="#L454">454</span>
<span id="L455" rel="#L455">455</span>
<span id="L456" rel="#L456">456</span>
<span id="L457" rel="#L457">457</span>
<span id="L458" rel="#L458">458</span>
<span id="L459" rel="#L459">459</span>
<span id="L460" rel="#L460">460</span>
<span id="L461" rel="#L461">461</span>
<span id="L462" rel="#L462">462</span>
<span id="L463" rel="#L463">463</span>
<span id="L464" rel="#L464">464</span>
<span id="L465" rel="#L465">465</span>
<span id="L466" rel="#L466">466</span>
<span id="L467" rel="#L467">467</span>
<span id="L468" rel="#L468">468</span>
<span id="L469" rel="#L469">469</span>
<span id="L470" rel="#L470">470</span>
<span id="L471" rel="#L471">471</span>
<span id="L472" rel="#L472">472</span>
<span id="L473" rel="#L473">473</span>
<span id="L474" rel="#L474">474</span>
<span id="L475" rel="#L475">475</span>
<span id="L476" rel="#L476">476</span>
<span id="L477" rel="#L477">477</span>
<span id="L478" rel="#L478">478</span>
<span id="L479" rel="#L479">479</span>
<span id="L480" rel="#L480">480</span>
<span id="L481" rel="#L481">481</span>
<span id="L482" rel="#L482">482</span>
<span id="L483" rel="#L483">483</span>
<span id="L484" rel="#L484">484</span>
<span id="L485" rel="#L485">485</span>
<span id="L486" rel="#L486">486</span>
<span id="L487" rel="#L487">487</span>
<span id="L488" rel="#L488">488</span>
<span id="L489" rel="#L489">489</span>
<span id="L490" rel="#L490">490</span>
<span id="L491" rel="#L491">491</span>
<span id="L492" rel="#L492">492</span>
<span id="L493" rel="#L493">493</span>
<span id="L494" rel="#L494">494</span>
<span id="L495" rel="#L495">495</span>
<span id="L496" rel="#L496">496</span>
<span id="L497" rel="#L497">497</span>
<span id="L498" rel="#L498">498</span>
<span id="L499" rel="#L499">499</span>
<span id="L500" rel="#L500">500</span>
<span id="L501" rel="#L501">501</span>
<span id="L502" rel="#L502">502</span>
<span id="L503" rel="#L503">503</span>
<span id="L504" rel="#L504">504</span>
<span id="L505" rel="#L505">505</span>
<span id="L506" rel="#L506">506</span>
<span id="L507" rel="#L507">507</span>
<span id="L508" rel="#L508">508</span>
<span id="L509" rel="#L509">509</span>
<span id="L510" rel="#L510">510</span>
<span id="L511" rel="#L511">511</span>
<span id="L512" rel="#L512">512</span>
<span id="L513" rel="#L513">513</span>
<span id="L514" rel="#L514">514</span>
<span id="L515" rel="#L515">515</span>
<span id="L516" rel="#L516">516</span>
<span id="L517" rel="#L517">517</span>
<span id="L518" rel="#L518">518</span>
<span id="L519" rel="#L519">519</span>
<span id="L520" rel="#L520">520</span>
<span id="L521" rel="#L521">521</span>
<span id="L522" rel="#L522">522</span>
<span id="L523" rel="#L523">523</span>
<span id="L524" rel="#L524">524</span>
<span id="L525" rel="#L525">525</span>
<span id="L526" rel="#L526">526</span>
<span id="L527" rel="#L527">527</span>
<span id="L528" rel="#L528">528</span>
<span id="L529" rel="#L529">529</span>
<span id="L530" rel="#L530">530</span>
<span id="L531" rel="#L531">531</span>
<span id="L532" rel="#L532">532</span>
<span id="L533" rel="#L533">533</span>
<span id="L534" rel="#L534">534</span>
<span id="L535" rel="#L535">535</span>
<span id="L536" rel="#L536">536</span>
<span id="L537" rel="#L537">537</span>
<span id="L538" rel="#L538">538</span>
<span id="L539" rel="#L539">539</span>
<span id="L540" rel="#L540">540</span>
<span id="L541" rel="#L541">541</span>
<span id="L542" rel="#L542">542</span>
<span id="L543" rel="#L543">543</span>
<span id="L544" rel="#L544">544</span>
<span id="L545" rel="#L545">545</span>
<span id="L546" rel="#L546">546</span>
<span id="L547" rel="#L547">547</span>
<span id="L548" rel="#L548">548</span>
<span id="L549" rel="#L549">549</span>
<span id="L550" rel="#L550">550</span>
<span id="L551" rel="#L551">551</span>
<span id="L552" rel="#L552">552</span>
<span id="L553" rel="#L553">553</span>
<span id="L554" rel="#L554">554</span>
<span id="L555" rel="#L555">555</span>
<span id="L556" rel="#L556">556</span>
<span id="L557" rel="#L557">557</span>
<span id="L558" rel="#L558">558</span>
<span id="L559" rel="#L559">559</span>
<span id="L560" rel="#L560">560</span>
<span id="L561" rel="#L561">561</span>
<span id="L562" rel="#L562">562</span>
<span id="L563" rel="#L563">563</span>
<span id="L564" rel="#L564">564</span>
<span id="L565" rel="#L565">565</span>
<span id="L566" rel="#L566">566</span>
<span id="L567" rel="#L567">567</span>
<span id="L568" rel="#L568">568</span>
<span id="L569" rel="#L569">569</span>
<span id="L570" rel="#L570">570</span>
<span id="L571" rel="#L571">571</span>
<span id="L572" rel="#L572">572</span>
<span id="L573" rel="#L573">573</span>
<span id="L574" rel="#L574">574</span>
<span id="L575" rel="#L575">575</span>
<span id="L576" rel="#L576">576</span>
<span id="L577" rel="#L577">577</span>
<span id="L578" rel="#L578">578</span>
<span id="L579" rel="#L579">579</span>
<span id="L580" rel="#L580">580</span>
<span id="L581" rel="#L581">581</span>
<span id="L582" rel="#L582">582</span>
<span id="L583" rel="#L583">583</span>
<span id="L584" rel="#L584">584</span>
<span id="L585" rel="#L585">585</span>
<span id="L586" rel="#L586">586</span>
<span id="L587" rel="#L587">587</span>
<span id="L588" rel="#L588">588</span>
<span id="L589" rel="#L589">589</span>
<span id="L590" rel="#L590">590</span>
<span id="L591" rel="#L591">591</span>
<span id="L592" rel="#L592">592</span>
<span id="L593" rel="#L593">593</span>
<span id="L594" rel="#L594">594</span>
<span id="L595" rel="#L595">595</span>
<span id="L596" rel="#L596">596</span>
<span id="L597" rel="#L597">597</span>
<span id="L598" rel="#L598">598</span>
<span id="L599" rel="#L599">599</span>
<span id="L600" rel="#L600">600</span>
<span id="L601" rel="#L601">601</span>
<span id="L602" rel="#L602">602</span>
<span id="L603" rel="#L603">603</span>
<span id="L604" rel="#L604">604</span>
<span id="L605" rel="#L605">605</span>
<span id="L606" rel="#L606">606</span>
<span id="L607" rel="#L607">607</span>
<span id="L608" rel="#L608">608</span>
<span id="L609" rel="#L609">609</span>
<span id="L610" rel="#L610">610</span>
<span id="L611" rel="#L611">611</span>
<span id="L612" rel="#L612">612</span>
<span id="L613" rel="#L613">613</span>
<span id="L614" rel="#L614">614</span>
<span id="L615" rel="#L615">615</span>
<span id="L616" rel="#L616">616</span>
<span id="L617" rel="#L617">617</span>
<span id="L618" rel="#L618">618</span>
<span id="L619" rel="#L619">619</span>
<span id="L620" rel="#L620">620</span>
<span id="L621" rel="#L621">621</span>
<span id="L622" rel="#L622">622</span>
<span id="L623" rel="#L623">623</span>
<span id="L624" rel="#L624">624</span>
<span id="L625" rel="#L625">625</span>
<span id="L626" rel="#L626">626</span>
<span id="L627" rel="#L627">627</span>
<span id="L628" rel="#L628">628</span>
<span id="L629" rel="#L629">629</span>
<span id="L630" rel="#L630">630</span>
<span id="L631" rel="#L631">631</span>
<span id="L632" rel="#L632">632</span>
<span id="L633" rel="#L633">633</span>
<span id="L634" rel="#L634">634</span>
<span id="L635" rel="#L635">635</span>
<span id="L636" rel="#L636">636</span>
<span id="L637" rel="#L637">637</span>
<span id="L638" rel="#L638">638</span>
<span id="L639" rel="#L639">639</span>
<span id="L640" rel="#L640">640</span>
<span id="L641" rel="#L641">641</span>
<span id="L642" rel="#L642">642</span>
<span id="L643" rel="#L643">643</span>
<span id="L644" rel="#L644">644</span>
<span id="L645" rel="#L645">645</span>
<span id="L646" rel="#L646">646</span>
<span id="L647" rel="#L647">647</span>
<span id="L648" rel="#L648">648</span>
<span id="L649" rel="#L649">649</span>
<span id="L650" rel="#L650">650</span>
<span id="L651" rel="#L651">651</span>
<span id="L652" rel="#L652">652</span>
<span id="L653" rel="#L653">653</span>
<span id="L654" rel="#L654">654</span>
<span id="L655" rel="#L655">655</span>
<span id="L656" rel="#L656">656</span>
<span id="L657" rel="#L657">657</span>
<span id="L658" rel="#L658">658</span>
<span id="L659" rel="#L659">659</span>
<span id="L660" rel="#L660">660</span>
<span id="L661" rel="#L661">661</span>
<span id="L662" rel="#L662">662</span>
<span id="L663" rel="#L663">663</span>
<span id="L664" rel="#L664">664</span>
<span id="L665" rel="#L665">665</span>
<span id="L666" rel="#L666">666</span>
<span id="L667" rel="#L667">667</span>
<span id="L668" rel="#L668">668</span>
<span id="L669" rel="#L669">669</span>
<span id="L670" rel="#L670">670</span>
<span id="L671" rel="#L671">671</span>
<span id="L672" rel="#L672">672</span>
<span id="L673" rel="#L673">673</span>
<span id="L674" rel="#L674">674</span>
<span id="L675" rel="#L675">675</span>
<span id="L676" rel="#L676">676</span>
<span id="L677" rel="#L677">677</span>
<span id="L678" rel="#L678">678</span>
<span id="L679" rel="#L679">679</span>
<span id="L680" rel="#L680">680</span>
<span id="L681" rel="#L681">681</span>
<span id="L682" rel="#L682">682</span>
<span id="L683" rel="#L683">683</span>
<span id="L684" rel="#L684">684</span>
<span id="L685" rel="#L685">685</span>
<span id="L686" rel="#L686">686</span>
<span id="L687" rel="#L687">687</span>
<span id="L688" rel="#L688">688</span>
<span id="L689" rel="#L689">689</span>
<span id="L690" rel="#L690">690</span>
<span id="L691" rel="#L691">691</span>
<span id="L692" rel="#L692">692</span>
<span id="L693" rel="#L693">693</span>
<span id="L694" rel="#L694">694</span>
<span id="L695" rel="#L695">695</span>
<span id="L696" rel="#L696">696</span>
<span id="L697" rel="#L697">697</span>
<span id="L698" rel="#L698">698</span>
<span id="L699" rel="#L699">699</span>
<span id="L700" rel="#L700">700</span>
<span id="L701" rel="#L701">701</span>
<span id="L702" rel="#L702">702</span>
<span id="L703" rel="#L703">703</span>
<span id="L704" rel="#L704">704</span>
<span id="L705" rel="#L705">705</span>
<span id="L706" rel="#L706">706</span>
<span id="L707" rel="#L707">707</span>
<span id="L708" rel="#L708">708</span>
<span id="L709" rel="#L709">709</span>
<span id="L710" rel="#L710">710</span>
<span id="L711" rel="#L711">711</span>
<span id="L712" rel="#L712">712</span>
<span id="L713" rel="#L713">713</span>
<span id="L714" rel="#L714">714</span>
<span id="L715" rel="#L715">715</span>
<span id="L716" rel="#L716">716</span>
<span id="L717" rel="#L717">717</span>
<span id="L718" rel="#L718">718</span>
<span id="L719" rel="#L719">719</span>
<span id="L720" rel="#L720">720</span>
<span id="L721" rel="#L721">721</span>
<span id="L722" rel="#L722">722</span>
<span id="L723" rel="#L723">723</span>
<span id="L724" rel="#L724">724</span>
<span id="L725" rel="#L725">725</span>
<span id="L726" rel="#L726">726</span>
<span id="L727" rel="#L727">727</span>
<span id="L728" rel="#L728">728</span>
<span id="L729" rel="#L729">729</span>
<span id="L730" rel="#L730">730</span>
<span id="L731" rel="#L731">731</span>
<span id="L732" rel="#L732">732</span>
<span id="L733" rel="#L733">733</span>
<span id="L734" rel="#L734">734</span>
<span id="L735" rel="#L735">735</span>
<span id="L736" rel="#L736">736</span>
<span id="L737" rel="#L737">737</span>
<span id="L738" rel="#L738">738</span>
<span id="L739" rel="#L739">739</span>
<span id="L740" rel="#L740">740</span>
<span id="L741" rel="#L741">741</span>
<span id="L742" rel="#L742">742</span>
<span id="L743" rel="#L743">743</span>
<span id="L744" rel="#L744">744</span>
<span id="L745" rel="#L745">745</span>
<span id="L746" rel="#L746">746</span>
<span id="L747" rel="#L747">747</span>
<span id="L748" rel="#L748">748</span>
<span id="L749" rel="#L749">749</span>
<span id="L750" rel="#L750">750</span>
<span id="L751" rel="#L751">751</span>
<span id="L752" rel="#L752">752</span>
<span id="L753" rel="#L753">753</span>
<span id="L754" rel="#L754">754</span>
<span id="L755" rel="#L755">755</span>
<span id="L756" rel="#L756">756</span>
<span id="L757" rel="#L757">757</span>
<span id="L758" rel="#L758">758</span>
<span id="L759" rel="#L759">759</span>
<span id="L760" rel="#L760">760</span>
<span id="L761" rel="#L761">761</span>
<span id="L762" rel="#L762">762</span>
<span id="L763" rel="#L763">763</span>
<span id="L764" rel="#L764">764</span>
<span id="L765" rel="#L765">765</span>
<span id="L766" rel="#L766">766</span>
<span id="L767" rel="#L767">767</span>
<span id="L768" rel="#L768">768</span>
<span id="L769" rel="#L769">769</span>
<span id="L770" rel="#L770">770</span>
<span id="L771" rel="#L771">771</span>
<span id="L772" rel="#L772">772</span>
<span id="L773" rel="#L773">773</span>
<span id="L774" rel="#L774">774</span>
<span id="L775" rel="#L775">775</span>
<span id="L776" rel="#L776">776</span>
<span id="L777" rel="#L777">777</span>
<span id="L778" rel="#L778">778</span>
<span id="L779" rel="#L779">779</span>
<span id="L780" rel="#L780">780</span>
<span id="L781" rel="#L781">781</span>
<span id="L782" rel="#L782">782</span>
<span id="L783" rel="#L783">783</span>
<span id="L784" rel="#L784">784</span>
<span id="L785" rel="#L785">785</span>
<span id="L786" rel="#L786">786</span>
<span id="L787" rel="#L787">787</span>
<span id="L788" rel="#L788">788</span>
<span id="L789" rel="#L789">789</span>
<span id="L790" rel="#L790">790</span>
<span id="L791" rel="#L791">791</span>
<span id="L792" rel="#L792">792</span>
<span id="L793" rel="#L793">793</span>
<span id="L794" rel="#L794">794</span>
<span id="L795" rel="#L795">795</span>
<span id="L796" rel="#L796">796</span>
<span id="L797" rel="#L797">797</span>
<span id="L798" rel="#L798">798</span>
<span id="L799" rel="#L799">799</span>
<span id="L800" rel="#L800">800</span>
<span id="L801" rel="#L801">801</span>
<span id="L802" rel="#L802">802</span>
<span id="L803" rel="#L803">803</span>
<span id="L804" rel="#L804">804</span>
<span id="L805" rel="#L805">805</span>
<span id="L806" rel="#L806">806</span>
<span id="L807" rel="#L807">807</span>
<span id="L808" rel="#L808">808</span>
<span id="L809" rel="#L809">809</span>
<span id="L810" rel="#L810">810</span>
<span id="L811" rel="#L811">811</span>
<span id="L812" rel="#L812">812</span>
<span id="L813" rel="#L813">813</span>
<span id="L814" rel="#L814">814</span>
<span id="L815" rel="#L815">815</span>
<span id="L816" rel="#L816">816</span>
<span id="L817" rel="#L817">817</span>
<span id="L818" rel="#L818">818</span>
<span id="L819" rel="#L819">819</span>
<span id="L820" rel="#L820">820</span>
<span id="L821" rel="#L821">821</span>
<span id="L822" rel="#L822">822</span>
<span id="L823" rel="#L823">823</span>
<span id="L824" rel="#L824">824</span>
<span id="L825" rel="#L825">825</span>
<span id="L826" rel="#L826">826</span>
<span id="L827" rel="#L827">827</span>
<span id="L828" rel="#L828">828</span>
<span id="L829" rel="#L829">829</span>
<span id="L830" rel="#L830">830</span>
<span id="L831" rel="#L831">831</span>
<span id="L832" rel="#L832">832</span>
<span id="L833" rel="#L833">833</span>
<span id="L834" rel="#L834">834</span>
<span id="L835" rel="#L835">835</span>
<span id="L836" rel="#L836">836</span>
<span id="L837" rel="#L837">837</span>
<span id="L838" rel="#L838">838</span>
<span id="L839" rel="#L839">839</span>
<span id="L840" rel="#L840">840</span>
<span id="L841" rel="#L841">841</span>
<span id="L842" rel="#L842">842</span>
<span id="L843" rel="#L843">843</span>
<span id="L844" rel="#L844">844</span>
<span id="L845" rel="#L845">845</span>
<span id="L846" rel="#L846">846</span>
<span id="L847" rel="#L847">847</span>
<span id="L848" rel="#L848">848</span>
<span id="L849" rel="#L849">849</span>
<span id="L850" rel="#L850">850</span>
<span id="L851" rel="#L851">851</span>
<span id="L852" rel="#L852">852</span>
<span id="L853" rel="#L853">853</span>
<span id="L854" rel="#L854">854</span>
<span id="L855" rel="#L855">855</span>
<span id="L856" rel="#L856">856</span>
<span id="L857" rel="#L857">857</span>
<span id="L858" rel="#L858">858</span>
<span id="L859" rel="#L859">859</span>
<span id="L860" rel="#L860">860</span>
<span id="L861" rel="#L861">861</span>
<span id="L862" rel="#L862">862</span>
<span id="L863" rel="#L863">863</span>
<span id="L864" rel="#L864">864</span>
<span id="L865" rel="#L865">865</span>
<span id="L866" rel="#L866">866</span>
<span id="L867" rel="#L867">867</span>
<span id="L868" rel="#L868">868</span>
<span id="L869" rel="#L869">869</span>
<span id="L870" rel="#L870">870</span>
<span id="L871" rel="#L871">871</span>
<span id="L872" rel="#L872">872</span>
<span id="L873" rel="#L873">873</span>
<span id="L874" rel="#L874">874</span>
<span id="L875" rel="#L875">875</span>
<span id="L876" rel="#L876">876</span>
<span id="L877" rel="#L877">877</span>
<span id="L878" rel="#L878">878</span>
<span id="L879" rel="#L879">879</span>
<span id="L880" rel="#L880">880</span>
<span id="L881" rel="#L881">881</span>
<span id="L882" rel="#L882">882</span>
<span id="L883" rel="#L883">883</span>
<span id="L884" rel="#L884">884</span>
<span id="L885" rel="#L885">885</span>
<span id="L886" rel="#L886">886</span>
<span id="L887" rel="#L887">887</span>
<span id="L888" rel="#L888">888</span>
<span id="L889" rel="#L889">889</span>
<span id="L890" rel="#L890">890</span>
<span id="L891" rel="#L891">891</span>
<span id="L892" rel="#L892">892</span>
<span id="L893" rel="#L893">893</span>
<span id="L894" rel="#L894">894</span>
<span id="L895" rel="#L895">895</span>
<span id="L896" rel="#L896">896</span>
<span id="L897" rel="#L897">897</span>
<span id="L898" rel="#L898">898</span>
<span id="L899" rel="#L899">899</span>
<span id="L900" rel="#L900">900</span>
<span id="L901" rel="#L901">901</span>
<span id="L902" rel="#L902">902</span>
<span id="L903" rel="#L903">903</span>
<span id="L904" rel="#L904">904</span>
<span id="L905" rel="#L905">905</span>
<span id="L906" rel="#L906">906</span>
<span id="L907" rel="#L907">907</span>
<span id="L908" rel="#L908">908</span>
<span id="L909" rel="#L909">909</span>
<span id="L910" rel="#L910">910</span>
<span id="L911" rel="#L911">911</span>
<span id="L912" rel="#L912">912</span>
<span id="L913" rel="#L913">913</span>
<span id="L914" rel="#L914">914</span>
<span id="L915" rel="#L915">915</span>
<span id="L916" rel="#L916">916</span>
<span id="L917" rel="#L917">917</span>
<span id="L918" rel="#L918">918</span>
<span id="L919" rel="#L919">919</span>
<span id="L920" rel="#L920">920</span>
<span id="L921" rel="#L921">921</span>
<span id="L922" rel="#L922">922</span>
<span id="L923" rel="#L923">923</span>
<span id="L924" rel="#L924">924</span>
<span id="L925" rel="#L925">925</span>
<span id="L926" rel="#L926">926</span>
<span id="L927" rel="#L927">927</span>
<span id="L928" rel="#L928">928</span>
<span id="L929" rel="#L929">929</span>
<span id="L930" rel="#L930">930</span>
<span id="L931" rel="#L931">931</span>
<span id="L932" rel="#L932">932</span>
<span id="L933" rel="#L933">933</span>
<span id="L934" rel="#L934">934</span>
<span id="L935" rel="#L935">935</span>
<span id="L936" rel="#L936">936</span>
<span id="L937" rel="#L937">937</span>
<span id="L938" rel="#L938">938</span>
<span id="L939" rel="#L939">939</span>
<span id="L940" rel="#L940">940</span>
<span id="L941" rel="#L941">941</span>
<span id="L942" rel="#L942">942</span>
<span id="L943" rel="#L943">943</span>
<span id="L944" rel="#L944">944</span>
<span id="L945" rel="#L945">945</span>
<span id="L946" rel="#L946">946</span>
<span id="L947" rel="#L947">947</span>
<span id="L948" rel="#L948">948</span>
<span id="L949" rel="#L949">949</span>
<span id="L950" rel="#L950">950</span>
<span id="L951" rel="#L951">951</span>
<span id="L952" rel="#L952">952</span>
<span id="L953" rel="#L953">953</span>
<span id="L954" rel="#L954">954</span>
<span id="L955" rel="#L955">955</span>
<span id="L956" rel="#L956">956</span>
<span id="L957" rel="#L957">957</span>
<span id="L958" rel="#L958">958</span>
<span id="L959" rel="#L959">959</span>
<span id="L960" rel="#L960">960</span>
<span id="L961" rel="#L961">961</span>
<span id="L962" rel="#L962">962</span>
<span id="L963" rel="#L963">963</span>
<span id="L964" rel="#L964">964</span>
<span id="L965" rel="#L965">965</span>
<span id="L966" rel="#L966">966</span>
<span id="L967" rel="#L967">967</span>
<span id="L968" rel="#L968">968</span>
<span id="L969" rel="#L969">969</span>
<span id="L970" rel="#L970">970</span>
<span id="L971" rel="#L971">971</span>
<span id="L972" rel="#L972">972</span>
<span id="L973" rel="#L973">973</span>
<span id="L974" rel="#L974">974</span>
<span id="L975" rel="#L975">975</span>
<span id="L976" rel="#L976">976</span>
<span id="L977" rel="#L977">977</span>
<span id="L978" rel="#L978">978</span>
<span id="L979" rel="#L979">979</span>
<span id="L980" rel="#L980">980</span>
<span id="L981" rel="#L981">981</span>
<span id="L982" rel="#L982">982</span>
<span id="L983" rel="#L983">983</span>
<span id="L984" rel="#L984">984</span>
<span id="L985" rel="#L985">985</span>
<span id="L986" rel="#L986">986</span>
<span id="L987" rel="#L987">987</span>
<span id="L988" rel="#L988">988</span>
<span id="L989" rel="#L989">989</span>
<span id="L990" rel="#L990">990</span>
<span id="L991" rel="#L991">991</span>
<span id="L992" rel="#L992">992</span>
<span id="L993" rel="#L993">993</span>
<span id="L994" rel="#L994">994</span>
<span id="L995" rel="#L995">995</span>
<span id="L996" rel="#L996">996</span>
<span id="L997" rel="#L997">997</span>
<span id="L998" rel="#L998">998</span>
<span id="L999" rel="#L999">999</span>
<span id="L1000" rel="#L1000">1000</span>
<span id="L1001" rel="#L1001">1001</span>
<span id="L1002" rel="#L1002">1002</span>
<span id="L1003" rel="#L1003">1003</span>
<span id="L1004" rel="#L1004">1004</span>
<span id="L1005" rel="#L1005">1005</span>
<span id="L1006" rel="#L1006">1006</span>
<span id="L1007" rel="#L1007">1007</span>
<span id="L1008" rel="#L1008">1008</span>
<span id="L1009" rel="#L1009">1009</span>
<span id="L1010" rel="#L1010">1010</span>
<span id="L1011" rel="#L1011">1011</span>
<span id="L1012" rel="#L1012">1012</span>
<span id="L1013" rel="#L1013">1013</span>
<span id="L1014" rel="#L1014">1014</span>
<span id="L1015" rel="#L1015">1015</span>
<span id="L1016" rel="#L1016">1016</span>
<span id="L1017" rel="#L1017">1017</span>
<span id="L1018" rel="#L1018">1018</span>
<span id="L1019" rel="#L1019">1019</span>
<span id="L1020" rel="#L1020">1020</span>
<span id="L1021" rel="#L1021">1021</span>
<span id="L1022" rel="#L1022">1022</span>
<span id="L1023" rel="#L1023">1023</span>
<span id="L1024" rel="#L1024">1024</span>
<span id="L1025" rel="#L1025">1025</span>
<span id="L1026" rel="#L1026">1026</span>
<span id="L1027" rel="#L1027">1027</span>
<span id="L1028" rel="#L1028">1028</span>
<span id="L1029" rel="#L1029">1029</span>
<span id="L1030" rel="#L1030">1030</span>
<span id="L1031" rel="#L1031">1031</span>
<span id="L1032" rel="#L1032">1032</span>
<span id="L1033" rel="#L1033">1033</span>
<span id="L1034" rel="#L1034">1034</span>
<span id="L1035" rel="#L1035">1035</span>
<span id="L1036" rel="#L1036">1036</span>
<span id="L1037" rel="#L1037">1037</span>
<span id="L1038" rel="#L1038">1038</span>
<span id="L1039" rel="#L1039">1039</span>
<span id="L1040" rel="#L1040">1040</span>
<span id="L1041" rel="#L1041">1041</span>
<span id="L1042" rel="#L1042">1042</span>
<span id="L1043" rel="#L1043">1043</span>
<span id="L1044" rel="#L1044">1044</span>
<span id="L1045" rel="#L1045">1045</span>
<span id="L1046" rel="#L1046">1046</span>
<span id="L1047" rel="#L1047">1047</span>
<span id="L1048" rel="#L1048">1048</span>
<span id="L1049" rel="#L1049">1049</span>
<span id="L1050" rel="#L1050">1050</span>
<span id="L1051" rel="#L1051">1051</span>
<span id="L1052" rel="#L1052">1052</span>
<span id="L1053" rel="#L1053">1053</span>
<span id="L1054" rel="#L1054">1054</span>
<span id="L1055" rel="#L1055">1055</span>
<span id="L1056" rel="#L1056">1056</span>
<span id="L1057" rel="#L1057">1057</span>
<span id="L1058" rel="#L1058">1058</span>
<span id="L1059" rel="#L1059">1059</span>
<span id="L1060" rel="#L1060">1060</span>
<span id="L1061" rel="#L1061">1061</span>
<span id="L1062" rel="#L1062">1062</span>
<span id="L1063" rel="#L1063">1063</span>
<span id="L1064" rel="#L1064">1064</span>
<span id="L1065" rel="#L1065">1065</span>
<span id="L1066" rel="#L1066">1066</span>
<span id="L1067" rel="#L1067">1067</span>
<span id="L1068" rel="#L1068">1068</span>
<span id="L1069" rel="#L1069">1069</span>
<span id="L1070" rel="#L1070">1070</span>
<span id="L1071" rel="#L1071">1071</span>
<span id="L1072" rel="#L1072">1072</span>
<span id="L1073" rel="#L1073">1073</span>
<span id="L1074" rel="#L1074">1074</span>
<span id="L1075" rel="#L1075">1075</span>
<span id="L1076" rel="#L1076">1076</span>
<span id="L1077" rel="#L1077">1077</span>
<span id="L1078" rel="#L1078">1078</span>
<span id="L1079" rel="#L1079">1079</span>
<span id="L1080" rel="#L1080">1080</span>
<span id="L1081" rel="#L1081">1081</span>
<span id="L1082" rel="#L1082">1082</span>
<span id="L1083" rel="#L1083">1083</span>
<span id="L1084" rel="#L1084">1084</span>
<span id="L1085" rel="#L1085">1085</span>
<span id="L1086" rel="#L1086">1086</span>
<span id="L1087" rel="#L1087">1087</span>
<span id="L1088" rel="#L1088">1088</span>
<span id="L1089" rel="#L1089">1089</span>
<span id="L1090" rel="#L1090">1090</span>
<span id="L1091" rel="#L1091">1091</span>
<span id="L1092" rel="#L1092">1092</span>
<span id="L1093" rel="#L1093">1093</span>
<span id="L1094" rel="#L1094">1094</span>
<span id="L1095" rel="#L1095">1095</span>
<span id="L1096" rel="#L1096">1096</span>
<span id="L1097" rel="#L1097">1097</span>
<span id="L1098" rel="#L1098">1098</span>
<span id="L1099" rel="#L1099">1099</span>
<span id="L1100" rel="#L1100">1100</span>
<span id="L1101" rel="#L1101">1101</span>
<span id="L1102" rel="#L1102">1102</span>
<span id="L1103" rel="#L1103">1103</span>
<span id="L1104" rel="#L1104">1104</span>
<span id="L1105" rel="#L1105">1105</span>
<span id="L1106" rel="#L1106">1106</span>
<span id="L1107" rel="#L1107">1107</span>
<span id="L1108" rel="#L1108">1108</span>
<span id="L1109" rel="#L1109">1109</span>
<span id="L1110" rel="#L1110">1110</span>
<span id="L1111" rel="#L1111">1111</span>
<span id="L1112" rel="#L1112">1112</span>
<span id="L1113" rel="#L1113">1113</span>
<span id="L1114" rel="#L1114">1114</span>
<span id="L1115" rel="#L1115">1115</span>
<span id="L1116" rel="#L1116">1116</span>
<span id="L1117" rel="#L1117">1117</span>
<span id="L1118" rel="#L1118">1118</span>
<span id="L1119" rel="#L1119">1119</span>
<span id="L1120" rel="#L1120">1120</span>
<span id="L1121" rel="#L1121">1121</span>
<span id="L1122" rel="#L1122">1122</span>
<span id="L1123" rel="#L1123">1123</span>
<span id="L1124" rel="#L1124">1124</span>
<span id="L1125" rel="#L1125">1125</span>
<span id="L1126" rel="#L1126">1126</span>
<span id="L1127" rel="#L1127">1127</span>
<span id="L1128" rel="#L1128">1128</span>
<span id="L1129" rel="#L1129">1129</span>
<span id="L1130" rel="#L1130">1130</span>
<span id="L1131" rel="#L1131">1131</span>
<span id="L1132" rel="#L1132">1132</span>
<span id="L1133" rel="#L1133">1133</span>
<span id="L1134" rel="#L1134">1134</span>
<span id="L1135" rel="#L1135">1135</span>
<span id="L1136" rel="#L1136">1136</span>
<span id="L1137" rel="#L1137">1137</span>
<span id="L1138" rel="#L1138">1138</span>
<span id="L1139" rel="#L1139">1139</span>
<span id="L1140" rel="#L1140">1140</span>
<span id="L1141" rel="#L1141">1141</span>
<span id="L1142" rel="#L1142">1142</span>
<span id="L1143" rel="#L1143">1143</span>
<span id="L1144" rel="#L1144">1144</span>
<span id="L1145" rel="#L1145">1145</span>
<span id="L1146" rel="#L1146">1146</span>
<span id="L1147" rel="#L1147">1147</span>
<span id="L1148" rel="#L1148">1148</span>
<span id="L1149" rel="#L1149">1149</span>
<span id="L1150" rel="#L1150">1150</span>
<span id="L1151" rel="#L1151">1151</span>
<span id="L1152" rel="#L1152">1152</span>
<span id="L1153" rel="#L1153">1153</span>
<span id="L1154" rel="#L1154">1154</span>
<span id="L1155" rel="#L1155">1155</span>
<span id="L1156" rel="#L1156">1156</span>
<span id="L1157" rel="#L1157">1157</span>
<span id="L1158" rel="#L1158">1158</span>
<span id="L1159" rel="#L1159">1159</span>
<span id="L1160" rel="#L1160">1160</span>
<span id="L1161" rel="#L1161">1161</span>
<span id="L1162" rel="#L1162">1162</span>
<span id="L1163" rel="#L1163">1163</span>
<span id="L1164" rel="#L1164">1164</span>
<span id="L1165" rel="#L1165">1165</span>
<span id="L1166" rel="#L1166">1166</span>
<span id="L1167" rel="#L1167">1167</span>
<span id="L1168" rel="#L1168">1168</span>
<span id="L1169" rel="#L1169">1169</span>
<span id="L1170" rel="#L1170">1170</span>
<span id="L1171" rel="#L1171">1171</span>
<span id="L1172" rel="#L1172">1172</span>
<span id="L1173" rel="#L1173">1173</span>
<span id="L1174" rel="#L1174">1174</span>
<span id="L1175" rel="#L1175">1175</span>
<span id="L1176" rel="#L1176">1176</span>
<span id="L1177" rel="#L1177">1177</span>
<span id="L1178" rel="#L1178">1178</span>
<span id="L1179" rel="#L1179">1179</span>
<span id="L1180" rel="#L1180">1180</span>
<span id="L1181" rel="#L1181">1181</span>
<span id="L1182" rel="#L1182">1182</span>
<span id="L1183" rel="#L1183">1183</span>
<span id="L1184" rel="#L1184">1184</span>
<span id="L1185" rel="#L1185">1185</span>
<span id="L1186" rel="#L1186">1186</span>
<span id="L1187" rel="#L1187">1187</span>
<span id="L1188" rel="#L1188">1188</span>
<span id="L1189" rel="#L1189">1189</span>
<span id="L1190" rel="#L1190">1190</span>
<span id="L1191" rel="#L1191">1191</span>
<span id="L1192" rel="#L1192">1192</span>
<span id="L1193" rel="#L1193">1193</span>
<span id="L1194" rel="#L1194">1194</span>
<span id="L1195" rel="#L1195">1195</span>
<span id="L1196" rel="#L1196">1196</span>
<span id="L1197" rel="#L1197">1197</span>
<span id="L1198" rel="#L1198">1198</span>
<span id="L1199" rel="#L1199">1199</span>
<span id="L1200" rel="#L1200">1200</span>
<span id="L1201" rel="#L1201">1201</span>
<span id="L1202" rel="#L1202">1202</span>
<span id="L1203" rel="#L1203">1203</span>
<span id="L1204" rel="#L1204">1204</span>
<span id="L1205" rel="#L1205">1205</span>
<span id="L1206" rel="#L1206">1206</span>
<span id="L1207" rel="#L1207">1207</span>
<span id="L1208" rel="#L1208">1208</span>
<span id="L1209" rel="#L1209">1209</span>
<span id="L1210" rel="#L1210">1210</span>
<span id="L1211" rel="#L1211">1211</span>
<span id="L1212" rel="#L1212">1212</span>
<span id="L1213" rel="#L1213">1213</span>
<span id="L1214" rel="#L1214">1214</span>
<span id="L1215" rel="#L1215">1215</span>
<span id="L1216" rel="#L1216">1216</span>
<span id="L1217" rel="#L1217">1217</span>
<span id="L1218" rel="#L1218">1218</span>
<span id="L1219" rel="#L1219">1219</span>
<span id="L1220" rel="#L1220">1220</span>
<span id="L1221" rel="#L1221">1221</span>
<span id="L1222" rel="#L1222">1222</span>
<span id="L1223" rel="#L1223">1223</span>
<span id="L1224" rel="#L1224">1224</span>
<span id="L1225" rel="#L1225">1225</span>
<span id="L1226" rel="#L1226">1226</span>
<span id="L1227" rel="#L1227">1227</span>
<span id="L1228" rel="#L1228">1228</span>
<span id="L1229" rel="#L1229">1229</span>
<span id="L1230" rel="#L1230">1230</span>
<span id="L1231" rel="#L1231">1231</span>
<span id="L1232" rel="#L1232">1232</span>
<span id="L1233" rel="#L1233">1233</span>
<span id="L1234" rel="#L1234">1234</span>
<span id="L1235" rel="#L1235">1235</span>
<span id="L1236" rel="#L1236">1236</span>
<span id="L1237" rel="#L1237">1237</span>
<span id="L1238" rel="#L1238">1238</span>
<span id="L1239" rel="#L1239">1239</span>
<span id="L1240" rel="#L1240">1240</span>
<span id="L1241" rel="#L1241">1241</span>
<span id="L1242" rel="#L1242">1242</span>
<span id="L1243" rel="#L1243">1243</span>
<span id="L1244" rel="#L1244">1244</span>
<span id="L1245" rel="#L1245">1245</span>
<span id="L1246" rel="#L1246">1246</span>
<span id="L1247" rel="#L1247">1247</span>
<span id="L1248" rel="#L1248">1248</span>
<span id="L1249" rel="#L1249">1249</span>
<span id="L1250" rel="#L1250">1250</span>
<span id="L1251" rel="#L1251">1251</span>
<span id="L1252" rel="#L1252">1252</span>
<span id="L1253" rel="#L1253">1253</span>
<span id="L1254" rel="#L1254">1254</span>
<span id="L1255" rel="#L1255">1255</span>
<span id="L1256" rel="#L1256">1256</span>
<span id="L1257" rel="#L1257">1257</span>
<span id="L1258" rel="#L1258">1258</span>
<span id="L1259" rel="#L1259">1259</span>
<span id="L1260" rel="#L1260">1260</span>
<span id="L1261" rel="#L1261">1261</span>
<span id="L1262" rel="#L1262">1262</span>
<span id="L1263" rel="#L1263">1263</span>
<span id="L1264" rel="#L1264">1264</span>
<span id="L1265" rel="#L1265">1265</span>
<span id="L1266" rel="#L1266">1266</span>
<span id="L1267" rel="#L1267">1267</span>
<span id="L1268" rel="#L1268">1268</span>
<span id="L1269" rel="#L1269">1269</span>
<span id="L1270" rel="#L1270">1270</span>
<span id="L1271" rel="#L1271">1271</span>
<span id="L1272" rel="#L1272">1272</span>
<span id="L1273" rel="#L1273">1273</span>
<span id="L1274" rel="#L1274">1274</span>
<span id="L1275" rel="#L1275">1275</span>
<span id="L1276" rel="#L1276">1276</span>
<span id="L1277" rel="#L1277">1277</span>
<span id="L1278" rel="#L1278">1278</span>
<span id="L1279" rel="#L1279">1279</span>
<span id="L1280" rel="#L1280">1280</span>
<span id="L1281" rel="#L1281">1281</span>
<span id="L1282" rel="#L1282">1282</span>
<span id="L1283" rel="#L1283">1283</span>
<span id="L1284" rel="#L1284">1284</span>
<span id="L1285" rel="#L1285">1285</span>
<span id="L1286" rel="#L1286">1286</span>
<span id="L1287" rel="#L1287">1287</span>
<span id="L1288" rel="#L1288">1288</span>
<span id="L1289" rel="#L1289">1289</span>
<span id="L1290" rel="#L1290">1290</span>
<span id="L1291" rel="#L1291">1291</span>
<span id="L1292" rel="#L1292">1292</span>
<span id="L1293" rel="#L1293">1293</span>
<span id="L1294" rel="#L1294">1294</span>
<span id="L1295" rel="#L1295">1295</span>
<span id="L1296" rel="#L1296">1296</span>
<span id="L1297" rel="#L1297">1297</span>
<span id="L1298" rel="#L1298">1298</span>
<span id="L1299" rel="#L1299">1299</span>
<span id="L1300" rel="#L1300">1300</span>
<span id="L1301" rel="#L1301">1301</span>
<span id="L1302" rel="#L1302">1302</span>
<span id="L1303" rel="#L1303">1303</span>
<span id="L1304" rel="#L1304">1304</span>
<span id="L1305" rel="#L1305">1305</span>
<span id="L1306" rel="#L1306">1306</span>
<span id="L1307" rel="#L1307">1307</span>
<span id="L1308" rel="#L1308">1308</span>
<span id="L1309" rel="#L1309">1309</span>
<span id="L1310" rel="#L1310">1310</span>
<span id="L1311" rel="#L1311">1311</span>
<span id="L1312" rel="#L1312">1312</span>
<span id="L1313" rel="#L1313">1313</span>
<span id="L1314" rel="#L1314">1314</span>
<span id="L1315" rel="#L1315">1315</span>
<span id="L1316" rel="#L1316">1316</span>
<span id="L1317" rel="#L1317">1317</span>
<span id="L1318" rel="#L1318">1318</span>
<span id="L1319" rel="#L1319">1319</span>
<span id="L1320" rel="#L1320">1320</span>
<span id="L1321" rel="#L1321">1321</span>
<span id="L1322" rel="#L1322">1322</span>
<span id="L1323" rel="#L1323">1323</span>
<span id="L1324" rel="#L1324">1324</span>
<span id="L1325" rel="#L1325">1325</span>
<span id="L1326" rel="#L1326">1326</span>
<span id="L1327" rel="#L1327">1327</span>
<span id="L1328" rel="#L1328">1328</span>
<span id="L1329" rel="#L1329">1329</span>
<span id="L1330" rel="#L1330">1330</span>
<span id="L1331" rel="#L1331">1331</span>
<span id="L1332" rel="#L1332">1332</span>
<span id="L1333" rel="#L1333">1333</span>
<span id="L1334" rel="#L1334">1334</span>
<span id="L1335" rel="#L1335">1335</span>
<span id="L1336" rel="#L1336">1336</span>
<span id="L1337" rel="#L1337">1337</span>
<span id="L1338" rel="#L1338">1338</span>
<span id="L1339" rel="#L1339">1339</span>
<span id="L1340" rel="#L1340">1340</span>
<span id="L1341" rel="#L1341">1341</span>
<span id="L1342" rel="#L1342">1342</span>
<span id="L1343" rel="#L1343">1343</span>
<span id="L1344" rel="#L1344">1344</span>
<span id="L1345" rel="#L1345">1345</span>
<span id="L1346" rel="#L1346">1346</span>
<span id="L1347" rel="#L1347">1347</span>
<span id="L1348" rel="#L1348">1348</span>
<span id="L1349" rel="#L1349">1349</span>
<span id="L1350" rel="#L1350">1350</span>
<span id="L1351" rel="#L1351">1351</span>
<span id="L1352" rel="#L1352">1352</span>
<span id="L1353" rel="#L1353">1353</span>
<span id="L1354" rel="#L1354">1354</span>
<span id="L1355" rel="#L1355">1355</span>
<span id="L1356" rel="#L1356">1356</span>
<span id="L1357" rel="#L1357">1357</span>
<span id="L1358" rel="#L1358">1358</span>
<span id="L1359" rel="#L1359">1359</span>
<span id="L1360" rel="#L1360">1360</span>
<span id="L1361" rel="#L1361">1361</span>
<span id="L1362" rel="#L1362">1362</span>
<span id="L1363" rel="#L1363">1363</span>
<span id="L1364" rel="#L1364">1364</span>
<span id="L1365" rel="#L1365">1365</span>
<span id="L1366" rel="#L1366">1366</span>
<span id="L1367" rel="#L1367">1367</span>
<span id="L1368" rel="#L1368">1368</span>
<span id="L1369" rel="#L1369">1369</span>
<span id="L1370" rel="#L1370">1370</span>
<span id="L1371" rel="#L1371">1371</span>
<span id="L1372" rel="#L1372">1372</span>
<span id="L1373" rel="#L1373">1373</span>
<span id="L1374" rel="#L1374">1374</span>
<span id="L1375" rel="#L1375">1375</span>
<span id="L1376" rel="#L1376">1376</span>
<span id="L1377" rel="#L1377">1377</span>
<span id="L1378" rel="#L1378">1378</span>
<span id="L1379" rel="#L1379">1379</span>
<span id="L1380" rel="#L1380">1380</span>
<span id="L1381" rel="#L1381">1381</span>
<span id="L1382" rel="#L1382">1382</span>
<span id="L1383" rel="#L1383">1383</span>
<span id="L1384" rel="#L1384">1384</span>
<span id="L1385" rel="#L1385">1385</span>
<span id="L1386" rel="#L1386">1386</span>
<span id="L1387" rel="#L1387">1387</span>
<span id="L1388" rel="#L1388">1388</span>
<span id="L1389" rel="#L1389">1389</span>
<span id="L1390" rel="#L1390">1390</span>
<span id="L1391" rel="#L1391">1391</span>
<span id="L1392" rel="#L1392">1392</span>
<span id="L1393" rel="#L1393">1393</span>
<span id="L1394" rel="#L1394">1394</span>
<span id="L1395" rel="#L1395">1395</span>
<span id="L1396" rel="#L1396">1396</span>
<span id="L1397" rel="#L1397">1397</span>
<span id="L1398" rel="#L1398">1398</span>
<span id="L1399" rel="#L1399">1399</span>
<span id="L1400" rel="#L1400">1400</span>
<span id="L1401" rel="#L1401">1401</span>
<span id="L1402" rel="#L1402">1402</span>
<span id="L1403" rel="#L1403">1403</span>
<span id="L1404" rel="#L1404">1404</span>
<span id="L1405" rel="#L1405">1405</span>
<span id="L1406" rel="#L1406">1406</span>
<span id="L1407" rel="#L1407">1407</span>
<span id="L1408" rel="#L1408">1408</span>
<span id="L1409" rel="#L1409">1409</span>
<span id="L1410" rel="#L1410">1410</span>
<span id="L1411" rel="#L1411">1411</span>
<span id="L1412" rel="#L1412">1412</span>
<span id="L1413" rel="#L1413">1413</span>
<span id="L1414" rel="#L1414">1414</span>
<span id="L1415" rel="#L1415">1415</span>
<span id="L1416" rel="#L1416">1416</span>
<span id="L1417" rel="#L1417">1417</span>
<span id="L1418" rel="#L1418">1418</span>
<span id="L1419" rel="#L1419">1419</span>
<span id="L1420" rel="#L1420">1420</span>
<span id="L1421" rel="#L1421">1421</span>
<span id="L1422" rel="#L1422">1422</span>
<span id="L1423" rel="#L1423">1423</span>
<span id="L1424" rel="#L1424">1424</span>
<span id="L1425" rel="#L1425">1425</span>
<span id="L1426" rel="#L1426">1426</span>
<span id="L1427" rel="#L1427">1427</span>
<span id="L1428" rel="#L1428">1428</span>
<span id="L1429" rel="#L1429">1429</span>
<span id="L1430" rel="#L1430">1430</span>
<span id="L1431" rel="#L1431">1431</span>
<span id="L1432" rel="#L1432">1432</span>
<span id="L1433" rel="#L1433">1433</span>
<span id="L1434" rel="#L1434">1434</span>
<span id="L1435" rel="#L1435">1435</span>
<span id="L1436" rel="#L1436">1436</span>
<span id="L1437" rel="#L1437">1437</span>
<span id="L1438" rel="#L1438">1438</span>
<span id="L1439" rel="#L1439">1439</span>
<span id="L1440" rel="#L1440">1440</span>
<span id="L1441" rel="#L1441">1441</span>
<span id="L1442" rel="#L1442">1442</span>
<span id="L1443" rel="#L1443">1443</span>
<span id="L1444" rel="#L1444">1444</span>
<span id="L1445" rel="#L1445">1445</span>
<span id="L1446" rel="#L1446">1446</span>
<span id="L1447" rel="#L1447">1447</span>
<span id="L1448" rel="#L1448">1448</span>
<span id="L1449" rel="#L1449">1449</span>
<span id="L1450" rel="#L1450">1450</span>
<span id="L1451" rel="#L1451">1451</span>
<span id="L1452" rel="#L1452">1452</span>
<span id="L1453" rel="#L1453">1453</span>
<span id="L1454" rel="#L1454">1454</span>
<span id="L1455" rel="#L1455">1455</span>
<span id="L1456" rel="#L1456">1456</span>
<span id="L1457" rel="#L1457">1457</span>
<span id="L1458" rel="#L1458">1458</span>
<span id="L1459" rel="#L1459">1459</span>
<span id="L1460" rel="#L1460">1460</span>
<span id="L1461" rel="#L1461">1461</span>
<span id="L1462" rel="#L1462">1462</span>
<span id="L1463" rel="#L1463">1463</span>
<span id="L1464" rel="#L1464">1464</span>
<span id="L1465" rel="#L1465">1465</span>
<span id="L1466" rel="#L1466">1466</span>
<span id="L1467" rel="#L1467">1467</span>
<span id="L1468" rel="#L1468">1468</span>
<span id="L1469" rel="#L1469">1469</span>
<span id="L1470" rel="#L1470">1470</span>
<span id="L1471" rel="#L1471">1471</span>
<span id="L1472" rel="#L1472">1472</span>
<span id="L1473" rel="#L1473">1473</span>
<span id="L1474" rel="#L1474">1474</span>
<span id="L1475" rel="#L1475">1475</span>
<span id="L1476" rel="#L1476">1476</span>
<span id="L1477" rel="#L1477">1477</span>
<span id="L1478" rel="#L1478">1478</span>
<span id="L1479" rel="#L1479">1479</span>
<span id="L1480" rel="#L1480">1480</span>
<span id="L1481" rel="#L1481">1481</span>
<span id="L1482" rel="#L1482">1482</span>
<span id="L1483" rel="#L1483">1483</span>
<span id="L1484" rel="#L1484">1484</span>
<span id="L1485" rel="#L1485">1485</span>
<span id="L1486" rel="#L1486">1486</span>
<span id="L1487" rel="#L1487">1487</span>
<span id="L1488" rel="#L1488">1488</span>
<span id="L1489" rel="#L1489">1489</span>
<span id="L1490" rel="#L1490">1490</span>
<span id="L1491" rel="#L1491">1491</span>
<span id="L1492" rel="#L1492">1492</span>
<span id="L1493" rel="#L1493">1493</span>
<span id="L1494" rel="#L1494">1494</span>
<span id="L1495" rel="#L1495">1495</span>
<span id="L1496" rel="#L1496">1496</span>
<span id="L1497" rel="#L1497">1497</span>
<span id="L1498" rel="#L1498">1498</span>
<span id="L1499" rel="#L1499">1499</span>
<span id="L1500" rel="#L1500">1500</span>
<span id="L1501" rel="#L1501">1501</span>
<span id="L1502" rel="#L1502">1502</span>
<span id="L1503" rel="#L1503">1503</span>
<span id="L1504" rel="#L1504">1504</span>
<span id="L1505" rel="#L1505">1505</span>
<span id="L1506" rel="#L1506">1506</span>
<span id="L1507" rel="#L1507">1507</span>
<span id="L1508" rel="#L1508">1508</span>
<span id="L1509" rel="#L1509">1509</span>
<span id="L1510" rel="#L1510">1510</span>
<span id="L1511" rel="#L1511">1511</span>
<span id="L1512" rel="#L1512">1512</span>
<span id="L1513" rel="#L1513">1513</span>
<span id="L1514" rel="#L1514">1514</span>
<span id="L1515" rel="#L1515">1515</span>
<span id="L1516" rel="#L1516">1516</span>
<span id="L1517" rel="#L1517">1517</span>
<span id="L1518" rel="#L1518">1518</span>
<span id="L1519" rel="#L1519">1519</span>
<span id="L1520" rel="#L1520">1520</span>
<span id="L1521" rel="#L1521">1521</span>
<span id="L1522" rel="#L1522">1522</span>
<span id="L1523" rel="#L1523">1523</span>
<span id="L1524" rel="#L1524">1524</span>
<span id="L1525" rel="#L1525">1525</span>
<span id="L1526" rel="#L1526">1526</span>
<span id="L1527" rel="#L1527">1527</span>
<span id="L1528" rel="#L1528">1528</span>
<span id="L1529" rel="#L1529">1529</span>
<span id="L1530" rel="#L1530">1530</span>
<span id="L1531" rel="#L1531">1531</span>
<span id="L1532" rel="#L1532">1532</span>
<span id="L1533" rel="#L1533">1533</span>
<span id="L1534" rel="#L1534">1534</span>
<span id="L1535" rel="#L1535">1535</span>
<span id="L1536" rel="#L1536">1536</span>
<span id="L1537" rel="#L1537">1537</span>
<span id="L1538" rel="#L1538">1538</span>
<span id="L1539" rel="#L1539">1539</span>
<span id="L1540" rel="#L1540">1540</span>
<span id="L1541" rel="#L1541">1541</span>
<span id="L1542" rel="#L1542">1542</span>
<span id="L1543" rel="#L1543">1543</span>
<span id="L1544" rel="#L1544">1544</span>
<span id="L1545" rel="#L1545">1545</span>
<span id="L1546" rel="#L1546">1546</span>
<span id="L1547" rel="#L1547">1547</span>
<span id="L1548" rel="#L1548">1548</span>
<span id="L1549" rel="#L1549">1549</span>
<span id="L1550" rel="#L1550">1550</span>
<span id="L1551" rel="#L1551">1551</span>
<span id="L1552" rel="#L1552">1552</span>
<span id="L1553" rel="#L1553">1553</span>
<span id="L1554" rel="#L1554">1554</span>
<span id="L1555" rel="#L1555">1555</span>
<span id="L1556" rel="#L1556">1556</span>
<span id="L1557" rel="#L1557">1557</span>
<span id="L1558" rel="#L1558">1558</span>
<span id="L1559" rel="#L1559">1559</span>
<span id="L1560" rel="#L1560">1560</span>
<span id="L1561" rel="#L1561">1561</span>
<span id="L1562" rel="#L1562">1562</span>
<span id="L1563" rel="#L1563">1563</span>
<span id="L1564" rel="#L1564">1564</span>
<span id="L1565" rel="#L1565">1565</span>
<span id="L1566" rel="#L1566">1566</span>
<span id="L1567" rel="#L1567">1567</span>
<span id="L1568" rel="#L1568">1568</span>
<span id="L1569" rel="#L1569">1569</span>
<span id="L1570" rel="#L1570">1570</span>
<span id="L1571" rel="#L1571">1571</span>
<span id="L1572" rel="#L1572">1572</span>
<span id="L1573" rel="#L1573">1573</span>
<span id="L1574" rel="#L1574">1574</span>
<span id="L1575" rel="#L1575">1575</span>
<span id="L1576" rel="#L1576">1576</span>
<span id="L1577" rel="#L1577">1577</span>
<span id="L1578" rel="#L1578">1578</span>
<span id="L1579" rel="#L1579">1579</span>
<span id="L1580" rel="#L1580">1580</span>
<span id="L1581" rel="#L1581">1581</span>
<span id="L1582" rel="#L1582">1582</span>
<span id="L1583" rel="#L1583">1583</span>
<span id="L1584" rel="#L1584">1584</span>
<span id="L1585" rel="#L1585">1585</span>
<span id="L1586" rel="#L1586">1586</span>
<span id="L1587" rel="#L1587">1587</span>
<span id="L1588" rel="#L1588">1588</span>
<span id="L1589" rel="#L1589">1589</span>
<span id="L1590" rel="#L1590">1590</span>
<span id="L1591" rel="#L1591">1591</span>
<span id="L1592" rel="#L1592">1592</span>
<span id="L1593" rel="#L1593">1593</span>
<span id="L1594" rel="#L1594">1594</span>
<span id="L1595" rel="#L1595">1595</span>
<span id="L1596" rel="#L1596">1596</span>
<span id="L1597" rel="#L1597">1597</span>
<span id="L1598" rel="#L1598">1598</span>
<span id="L1599" rel="#L1599">1599</span>
<span id="L1600" rel="#L1600">1600</span>
<span id="L1601" rel="#L1601">1601</span>
<span id="L1602" rel="#L1602">1602</span>
<span id="L1603" rel="#L1603">1603</span>
<span id="L1604" rel="#L1604">1604</span>
<span id="L1605" rel="#L1605">1605</span>
<span id="L1606" rel="#L1606">1606</span>
<span id="L1607" rel="#L1607">1607</span>
<span id="L1608" rel="#L1608">1608</span>
<span id="L1609" rel="#L1609">1609</span>
<span id="L1610" rel="#L1610">1610</span>
<span id="L1611" rel="#L1611">1611</span>
<span id="L1612" rel="#L1612">1612</span>
<span id="L1613" rel="#L1613">1613</span>
<span id="L1614" rel="#L1614">1614</span>
<span id="L1615" rel="#L1615">1615</span>
<span id="L1616" rel="#L1616">1616</span>
<span id="L1617" rel="#L1617">1617</span>
<span id="L1618" rel="#L1618">1618</span>
<span id="L1619" rel="#L1619">1619</span>
<span id="L1620" rel="#L1620">1620</span>
<span id="L1621" rel="#L1621">1621</span>
<span id="L1622" rel="#L1622">1622</span>
<span id="L1623" rel="#L1623">1623</span>
<span id="L1624" rel="#L1624">1624</span>
<span id="L1625" rel="#L1625">1625</span>
<span id="L1626" rel="#L1626">1626</span>
<span id="L1627" rel="#L1627">1627</span>
<span id="L1628" rel="#L1628">1628</span>
<span id="L1629" rel="#L1629">1629</span>
<span id="L1630" rel="#L1630">1630</span>
<span id="L1631" rel="#L1631">1631</span>
<span id="L1632" rel="#L1632">1632</span>
<span id="L1633" rel="#L1633">1633</span>
<span id="L1634" rel="#L1634">1634</span>
<span id="L1635" rel="#L1635">1635</span>
<span id="L1636" rel="#L1636">1636</span>
<span id="L1637" rel="#L1637">1637</span>
<span id="L1638" rel="#L1638">1638</span>
<span id="L1639" rel="#L1639">1639</span>
<span id="L1640" rel="#L1640">1640</span>
<span id="L1641" rel="#L1641">1641</span>
<span id="L1642" rel="#L1642">1642</span>
<span id="L1643" rel="#L1643">1643</span>
<span id="L1644" rel="#L1644">1644</span>
<span id="L1645" rel="#L1645">1645</span>
<span id="L1646" rel="#L1646">1646</span>
<span id="L1647" rel="#L1647">1647</span>
<span id="L1648" rel="#L1648">1648</span>
<span id="L1649" rel="#L1649">1649</span>
<span id="L1650" rel="#L1650">1650</span>
<span id="L1651" rel="#L1651">1651</span>
<span id="L1652" rel="#L1652">1652</span>
<span id="L1653" rel="#L1653">1653</span>
<span id="L1654" rel="#L1654">1654</span>
<span id="L1655" rel="#L1655">1655</span>
<span id="L1656" rel="#L1656">1656</span>
<span id="L1657" rel="#L1657">1657</span>
<span id="L1658" rel="#L1658">1658</span>
<span id="L1659" rel="#L1659">1659</span>
<span id="L1660" rel="#L1660">1660</span>
<span id="L1661" rel="#L1661">1661</span>
<span id="L1662" rel="#L1662">1662</span>
<span id="L1663" rel="#L1663">1663</span>
<span id="L1664" rel="#L1664">1664</span>
<span id="L1665" rel="#L1665">1665</span>
<span id="L1666" rel="#L1666">1666</span>
<span id="L1667" rel="#L1667">1667</span>
<span id="L1668" rel="#L1668">1668</span>
<span id="L1669" rel="#L1669">1669</span>
<span id="L1670" rel="#L1670">1670</span>
<span id="L1671" rel="#L1671">1671</span>
<span id="L1672" rel="#L1672">1672</span>
<span id="L1673" rel="#L1673">1673</span>
<span id="L1674" rel="#L1674">1674</span>
<span id="L1675" rel="#L1675">1675</span>
<span id="L1676" rel="#L1676">1676</span>
<span id="L1677" rel="#L1677">1677</span>
<span id="L1678" rel="#L1678">1678</span>
<span id="L1679" rel="#L1679">1679</span>
<span id="L1680" rel="#L1680">1680</span>
<span id="L1681" rel="#L1681">1681</span>
<span id="L1682" rel="#L1682">1682</span>
<span id="L1683" rel="#L1683">1683</span>
<span id="L1684" rel="#L1684">1684</span>
<span id="L1685" rel="#L1685">1685</span>
<span id="L1686" rel="#L1686">1686</span>
<span id="L1687" rel="#L1687">1687</span>
<span id="L1688" rel="#L1688">1688</span>
<span id="L1689" rel="#L1689">1689</span>
<span id="L1690" rel="#L1690">1690</span>
<span id="L1691" rel="#L1691">1691</span>
<span id="L1692" rel="#L1692">1692</span>
<span id="L1693" rel="#L1693">1693</span>
<span id="L1694" rel="#L1694">1694</span>
<span id="L1695" rel="#L1695">1695</span>
<span id="L1696" rel="#L1696">1696</span>
<span id="L1697" rel="#L1697">1697</span>
<span id="L1698" rel="#L1698">1698</span>
<span id="L1699" rel="#L1699">1699</span>
<span id="L1700" rel="#L1700">1700</span>
<span id="L1701" rel="#L1701">1701</span>
<span id="L1702" rel="#L1702">1702</span>
<span id="L1703" rel="#L1703">1703</span>
<span id="L1704" rel="#L1704">1704</span>
<span id="L1705" rel="#L1705">1705</span>
<span id="L1706" rel="#L1706">1706</span>
<span id="L1707" rel="#L1707">1707</span>
<span id="L1708" rel="#L1708">1708</span>
<span id="L1709" rel="#L1709">1709</span>
<span id="L1710" rel="#L1710">1710</span>
<span id="L1711" rel="#L1711">1711</span>
<span id="L1712" rel="#L1712">1712</span>
<span id="L1713" rel="#L1713">1713</span>
<span id="L1714" rel="#L1714">1714</span>
<span id="L1715" rel="#L1715">1715</span>
<span id="L1716" rel="#L1716">1716</span>
<span id="L1717" rel="#L1717">1717</span>
<span id="L1718" rel="#L1718">1718</span>
<span id="L1719" rel="#L1719">1719</span>
<span id="L1720" rel="#L1720">1720</span>
<span id="L1721" rel="#L1721">1721</span>
<span id="L1722" rel="#L1722">1722</span>
<span id="L1723" rel="#L1723">1723</span>
<span id="L1724" rel="#L1724">1724</span>
<span id="L1725" rel="#L1725">1725</span>
<span id="L1726" rel="#L1726">1726</span>
<span id="L1727" rel="#L1727">1727</span>
<span id="L1728" rel="#L1728">1728</span>
<span id="L1729" rel="#L1729">1729</span>
<span id="L1730" rel="#L1730">1730</span>
<span id="L1731" rel="#L1731">1731</span>
<span id="L1732" rel="#L1732">1732</span>
<span id="L1733" rel="#L1733">1733</span>
<span id="L1734" rel="#L1734">1734</span>
<span id="L1735" rel="#L1735">1735</span>
<span id="L1736" rel="#L1736">1736</span>
<span id="L1737" rel="#L1737">1737</span>
<span id="L1738" rel="#L1738">1738</span>
<span id="L1739" rel="#L1739">1739</span>
<span id="L1740" rel="#L1740">1740</span>
<span id="L1741" rel="#L1741">1741</span>
<span id="L1742" rel="#L1742">1742</span>
<span id="L1743" rel="#L1743">1743</span>
<span id="L1744" rel="#L1744">1744</span>
<span id="L1745" rel="#L1745">1745</span>
<span id="L1746" rel="#L1746">1746</span>
<span id="L1747" rel="#L1747">1747</span>
<span id="L1748" rel="#L1748">1748</span>
<span id="L1749" rel="#L1749">1749</span>
<span id="L1750" rel="#L1750">1750</span>
<span id="L1751" rel="#L1751">1751</span>
<span id="L1752" rel="#L1752">1752</span>
<span id="L1753" rel="#L1753">1753</span>
<span id="L1754" rel="#L1754">1754</span>
<span id="L1755" rel="#L1755">1755</span>
<span id="L1756" rel="#L1756">1756</span>
<span id="L1757" rel="#L1757">1757</span>
<span id="L1758" rel="#L1758">1758</span>
<span id="L1759" rel="#L1759">1759</span>
<span id="L1760" rel="#L1760">1760</span>
<span id="L1761" rel="#L1761">1761</span>
<span id="L1762" rel="#L1762">1762</span>
<span id="L1763" rel="#L1763">1763</span>
<span id="L1764" rel="#L1764">1764</span>
<span id="L1765" rel="#L1765">1765</span>
<span id="L1766" rel="#L1766">1766</span>
<span id="L1767" rel="#L1767">1767</span>
<span id="L1768" rel="#L1768">1768</span>
<span id="L1769" rel="#L1769">1769</span>
<span id="L1770" rel="#L1770">1770</span>
<span id="L1771" rel="#L1771">1771</span>
<span id="L1772" rel="#L1772">1772</span>
<span id="L1773" rel="#L1773">1773</span>
<span id="L1774" rel="#L1774">1774</span>
<span id="L1775" rel="#L1775">1775</span>
<span id="L1776" rel="#L1776">1776</span>
<span id="L1777" rel="#L1777">1777</span>
<span id="L1778" rel="#L1778">1778</span>
<span id="L1779" rel="#L1779">1779</span>
<span id="L1780" rel="#L1780">1780</span>
<span id="L1781" rel="#L1781">1781</span>
<span id="L1782" rel="#L1782">1782</span>
<span id="L1783" rel="#L1783">1783</span>
<span id="L1784" rel="#L1784">1784</span>
<span id="L1785" rel="#L1785">1785</span>
<span id="L1786" rel="#L1786">1786</span>
<span id="L1787" rel="#L1787">1787</span>
<span id="L1788" rel="#L1788">1788</span>
<span id="L1789" rel="#L1789">1789</span>
<span id="L1790" rel="#L1790">1790</span>
<span id="L1791" rel="#L1791">1791</span>
<span id="L1792" rel="#L1792">1792</span>
<span id="L1793" rel="#L1793">1793</span>
<span id="L1794" rel="#L1794">1794</span>
<span id="L1795" rel="#L1795">1795</span>
<span id="L1796" rel="#L1796">1796</span>
<span id="L1797" rel="#L1797">1797</span>
<span id="L1798" rel="#L1798">1798</span>
<span id="L1799" rel="#L1799">1799</span>
<span id="L1800" rel="#L1800">1800</span>
<span id="L1801" rel="#L1801">1801</span>
<span id="L1802" rel="#L1802">1802</span>
<span id="L1803" rel="#L1803">1803</span>
<span id="L1804" rel="#L1804">1804</span>
<span id="L1805" rel="#L1805">1805</span>
<span id="L1806" rel="#L1806">1806</span>
<span id="L1807" rel="#L1807">1807</span>
<span id="L1808" rel="#L1808">1808</span>
<span id="L1809" rel="#L1809">1809</span>
<span id="L1810" rel="#L1810">1810</span>
<span id="L1811" rel="#L1811">1811</span>
<span id="L1812" rel="#L1812">1812</span>
<span id="L1813" rel="#L1813">1813</span>
<span id="L1814" rel="#L1814">1814</span>
<span id="L1815" rel="#L1815">1815</span>
<span id="L1816" rel="#L1816">1816</span>
<span id="L1817" rel="#L1817">1817</span>
<span id="L1818" rel="#L1818">1818</span>
<span id="L1819" rel="#L1819">1819</span>
<span id="L1820" rel="#L1820">1820</span>
<span id="L1821" rel="#L1821">1821</span>
<span id="L1822" rel="#L1822">1822</span>
<span id="L1823" rel="#L1823">1823</span>
<span id="L1824" rel="#L1824">1824</span>
<span id="L1825" rel="#L1825">1825</span>
<span id="L1826" rel="#L1826">1826</span>
<span id="L1827" rel="#L1827">1827</span>
<span id="L1828" rel="#L1828">1828</span>
<span id="L1829" rel="#L1829">1829</span>
<span id="L1830" rel="#L1830">1830</span>
<span id="L1831" rel="#L1831">1831</span>
<span id="L1832" rel="#L1832">1832</span>
<span id="L1833" rel="#L1833">1833</span>
<span id="L1834" rel="#L1834">1834</span>
<span id="L1835" rel="#L1835">1835</span>
<span id="L1836" rel="#L1836">1836</span>
<span id="L1837" rel="#L1837">1837</span>
<span id="L1838" rel="#L1838">1838</span>
<span id="L1839" rel="#L1839">1839</span>
<span id="L1840" rel="#L1840">1840</span>
<span id="L1841" rel="#L1841">1841</span>
<span id="L1842" rel="#L1842">1842</span>
<span id="L1843" rel="#L1843">1843</span>
<span id="L1844" rel="#L1844">1844</span>
<span id="L1845" rel="#L1845">1845</span>
<span id="L1846" rel="#L1846">1846</span>
<span id="L1847" rel="#L1847">1847</span>
<span id="L1848" rel="#L1848">1848</span>
<span id="L1849" rel="#L1849">1849</span>
<span id="L1850" rel="#L1850">1850</span>
<span id="L1851" rel="#L1851">1851</span>
<span id="L1852" rel="#L1852">1852</span>
<span id="L1853" rel="#L1853">1853</span>
<span id="L1854" rel="#L1854">1854</span>
<span id="L1855" rel="#L1855">1855</span>
<span id="L1856" rel="#L1856">1856</span>
<span id="L1857" rel="#L1857">1857</span>
<span id="L1858" rel="#L1858">1858</span>
<span id="L1859" rel="#L1859">1859</span>
<span id="L1860" rel="#L1860">1860</span>
<span id="L1861" rel="#L1861">1861</span>
<span id="L1862" rel="#L1862">1862</span>
<span id="L1863" rel="#L1863">1863</span>
<span id="L1864" rel="#L1864">1864</span>
<span id="L1865" rel="#L1865">1865</span>
<span id="L1866" rel="#L1866">1866</span>
<span id="L1867" rel="#L1867">1867</span>
<span id="L1868" rel="#L1868">1868</span>
<span id="L1869" rel="#L1869">1869</span>
<span id="L1870" rel="#L1870">1870</span>
<span id="L1871" rel="#L1871">1871</span>
<span id="L1872" rel="#L1872">1872</span>
<span id="L1873" rel="#L1873">1873</span>
<span id="L1874" rel="#L1874">1874</span>
<span id="L1875" rel="#L1875">1875</span>
<span id="L1876" rel="#L1876">1876</span>
<span id="L1877" rel="#L1877">1877</span>
<span id="L1878" rel="#L1878">1878</span>
<span id="L1879" rel="#L1879">1879</span>
<span id="L1880" rel="#L1880">1880</span>
<span id="L1881" rel="#L1881">1881</span>
<span id="L1882" rel="#L1882">1882</span>
<span id="L1883" rel="#L1883">1883</span>
<span id="L1884" rel="#L1884">1884</span>
<span id="L1885" rel="#L1885">1885</span>
<span id="L1886" rel="#L1886">1886</span>
<span id="L1887" rel="#L1887">1887</span>
<span id="L1888" rel="#L1888">1888</span>
<span id="L1889" rel="#L1889">1889</span>
<span id="L1890" rel="#L1890">1890</span>
<span id="L1891" rel="#L1891">1891</span>
<span id="L1892" rel="#L1892">1892</span>
<span id="L1893" rel="#L1893">1893</span>
<span id="L1894" rel="#L1894">1894</span>
<span id="L1895" rel="#L1895">1895</span>
<span id="L1896" rel="#L1896">1896</span>
<span id="L1897" rel="#L1897">1897</span>
<span id="L1898" rel="#L1898">1898</span>
<span id="L1899" rel="#L1899">1899</span>
<span id="L1900" rel="#L1900">1900</span>
<span id="L1901" rel="#L1901">1901</span>
<span id="L1902" rel="#L1902">1902</span>
<span id="L1903" rel="#L1903">1903</span>
<span id="L1904" rel="#L1904">1904</span>
<span id="L1905" rel="#L1905">1905</span>
<span id="L1906" rel="#L1906">1906</span>
<span id="L1907" rel="#L1907">1907</span>
<span id="L1908" rel="#L1908">1908</span>
<span id="L1909" rel="#L1909">1909</span>
<span id="L1910" rel="#L1910">1910</span>
<span id="L1911" rel="#L1911">1911</span>
<span id="L1912" rel="#L1912">1912</span>
<span id="L1913" rel="#L1913">1913</span>
<span id="L1914" rel="#L1914">1914</span>
<span id="L1915" rel="#L1915">1915</span>
<span id="L1916" rel="#L1916">1916</span>
<span id="L1917" rel="#L1917">1917</span>
<span id="L1918" rel="#L1918">1918</span>
<span id="L1919" rel="#L1919">1919</span>
<span id="L1920" rel="#L1920">1920</span>
<span id="L1921" rel="#L1921">1921</span>
<span id="L1922" rel="#L1922">1922</span>
<span id="L1923" rel="#L1923">1923</span>
<span id="L1924" rel="#L1924">1924</span>
<span id="L1925" rel="#L1925">1925</span>
<span id="L1926" rel="#L1926">1926</span>
<span id="L1927" rel="#L1927">1927</span>
<span id="L1928" rel="#L1928">1928</span>
<span id="L1929" rel="#L1929">1929</span>
<span id="L1930" rel="#L1930">1930</span>
<span id="L1931" rel="#L1931">1931</span>
<span id="L1932" rel="#L1932">1932</span>
<span id="L1933" rel="#L1933">1933</span>
<span id="L1934" rel="#L1934">1934</span>
<span id="L1935" rel="#L1935">1935</span>
<span id="L1936" rel="#L1936">1936</span>
<span id="L1937" rel="#L1937">1937</span>
<span id="L1938" rel="#L1938">1938</span>
<span id="L1939" rel="#L1939">1939</span>
<span id="L1940" rel="#L1940">1940</span>
<span id="L1941" rel="#L1941">1941</span>
<span id="L1942" rel="#L1942">1942</span>
<span id="L1943" rel="#L1943">1943</span>
<span id="L1944" rel="#L1944">1944</span>
<span id="L1945" rel="#L1945">1945</span>
<span id="L1946" rel="#L1946">1946</span>
<span id="L1947" rel="#L1947">1947</span>
<span id="L1948" rel="#L1948">1948</span>
<span id="L1949" rel="#L1949">1949</span>
<span id="L1950" rel="#L1950">1950</span>
<span id="L1951" rel="#L1951">1951</span>
<span id="L1952" rel="#L1952">1952</span>
<span id="L1953" rel="#L1953">1953</span>
<span id="L1954" rel="#L1954">1954</span>
<span id="L1955" rel="#L1955">1955</span>
<span id="L1956" rel="#L1956">1956</span>
<span id="L1957" rel="#L1957">1957</span>
<span id="L1958" rel="#L1958">1958</span>
<span id="L1959" rel="#L1959">1959</span>
<span id="L1960" rel="#L1960">1960</span>
<span id="L1961" rel="#L1961">1961</span>
<span id="L1962" rel="#L1962">1962</span>
<span id="L1963" rel="#L1963">1963</span>
<span id="L1964" rel="#L1964">1964</span>
<span id="L1965" rel="#L1965">1965</span>
<span id="L1966" rel="#L1966">1966</span>
<span id="L1967" rel="#L1967">1967</span>
<span id="L1968" rel="#L1968">1968</span>
<span id="L1969" rel="#L1969">1969</span>
<span id="L1970" rel="#L1970">1970</span>
<span id="L1971" rel="#L1971">1971</span>
<span id="L1972" rel="#L1972">1972</span>
<span id="L1973" rel="#L1973">1973</span>
<span id="L1974" rel="#L1974">1974</span>
<span id="L1975" rel="#L1975">1975</span>
<span id="L1976" rel="#L1976">1976</span>
<span id="L1977" rel="#L1977">1977</span>
<span id="L1978" rel="#L1978">1978</span>
<span id="L1979" rel="#L1979">1979</span>
<span id="L1980" rel="#L1980">1980</span>
<span id="L1981" rel="#L1981">1981</span>
<span id="L1982" rel="#L1982">1982</span>
<span id="L1983" rel="#L1983">1983</span>
<span id="L1984" rel="#L1984">1984</span>
<span id="L1985" rel="#L1985">1985</span>
<span id="L1986" rel="#L1986">1986</span>
<span id="L1987" rel="#L1987">1987</span>
<span id="L1988" rel="#L1988">1988</span>
<span id="L1989" rel="#L1989">1989</span>
<span id="L1990" rel="#L1990">1990</span>
<span id="L1991" rel="#L1991">1991</span>
<span id="L1992" rel="#L1992">1992</span>
<span id="L1993" rel="#L1993">1993</span>
<span id="L1994" rel="#L1994">1994</span>
<span id="L1995" rel="#L1995">1995</span>
<span id="L1996" rel="#L1996">1996</span>
<span id="L1997" rel="#L1997">1997</span>
<span id="L1998" rel="#L1998">1998</span>
<span id="L1999" rel="#L1999">1999</span>
<span id="L2000" rel="#L2000">2000</span>
<span id="L2001" rel="#L2001">2001</span>
<span id="L2002" rel="#L2002">2002</span>
<span id="L2003" rel="#L2003">2003</span>
<span id="L2004" rel="#L2004">2004</span>
<span id="L2005" rel="#L2005">2005</span>
<span id="L2006" rel="#L2006">2006</span>
<span id="L2007" rel="#L2007">2007</span>
<span id="L2008" rel="#L2008">2008</span>
<span id="L2009" rel="#L2009">2009</span>
<span id="L2010" rel="#L2010">2010</span>
<span id="L2011" rel="#L2011">2011</span>
<span id="L2012" rel="#L2012">2012</span>
<span id="L2013" rel="#L2013">2013</span>
<span id="L2014" rel="#L2014">2014</span>
<span id="L2015" rel="#L2015">2015</span>
<span id="L2016" rel="#L2016">2016</span>
<span id="L2017" rel="#L2017">2017</span>
<span id="L2018" rel="#L2018">2018</span>
<span id="L2019" rel="#L2019">2019</span>
<span id="L2020" rel="#L2020">2020</span>
<span id="L2021" rel="#L2021">2021</span>
<span id="L2022" rel="#L2022">2022</span>
<span id="L2023" rel="#L2023">2023</span>
<span id="L2024" rel="#L2024">2024</span>
<span id="L2025" rel="#L2025">2025</span>
<span id="L2026" rel="#L2026">2026</span>
<span id="L2027" rel="#L2027">2027</span>
<span id="L2028" rel="#L2028">2028</span>
<span id="L2029" rel="#L2029">2029</span>
<span id="L2030" rel="#L2030">2030</span>
<span id="L2031" rel="#L2031">2031</span>
<span id="L2032" rel="#L2032">2032</span>
<span id="L2033" rel="#L2033">2033</span>
<span id="L2034" rel="#L2034">2034</span>
<span id="L2035" rel="#L2035">2035</span>
<span id="L2036" rel="#L2036">2036</span>
<span id="L2037" rel="#L2037">2037</span>
<span id="L2038" rel="#L2038">2038</span>
<span id="L2039" rel="#L2039">2039</span>
<span id="L2040" rel="#L2040">2040</span>
<span id="L2041" rel="#L2041">2041</span>
<span id="L2042" rel="#L2042">2042</span>
<span id="L2043" rel="#L2043">2043</span>
<span id="L2044" rel="#L2044">2044</span>
<span id="L2045" rel="#L2045">2045</span>
<span id="L2046" rel="#L2046">2046</span>
<span id="L2047" rel="#L2047">2047</span>
<span id="L2048" rel="#L2048">2048</span>
<span id="L2049" rel="#L2049">2049</span>
<span id="L2050" rel="#L2050">2050</span>
<span id="L2051" rel="#L2051">2051</span>
<span id="L2052" rel="#L2052">2052</span>
<span id="L2053" rel="#L2053">2053</span>
<span id="L2054" rel="#L2054">2054</span>
<span id="L2055" rel="#L2055">2055</span>
<span id="L2056" rel="#L2056">2056</span>
<span id="L2057" rel="#L2057">2057</span>
<span id="L2058" rel="#L2058">2058</span>
<span id="L2059" rel="#L2059">2059</span>
<span id="L2060" rel="#L2060">2060</span>
<span id="L2061" rel="#L2061">2061</span>
<span id="L2062" rel="#L2062">2062</span>
<span id="L2063" rel="#L2063">2063</span>
<span id="L2064" rel="#L2064">2064</span>
<span id="L2065" rel="#L2065">2065</span>
<span id="L2066" rel="#L2066">2066</span>
<span id="L2067" rel="#L2067">2067</span>
<span id="L2068" rel="#L2068">2068</span>
<span id="L2069" rel="#L2069">2069</span>
<span id="L2070" rel="#L2070">2070</span>
<span id="L2071" rel="#L2071">2071</span>
<span id="L2072" rel="#L2072">2072</span>
<span id="L2073" rel="#L2073">2073</span>
<span id="L2074" rel="#L2074">2074</span>
<span id="L2075" rel="#L2075">2075</span>
<span id="L2076" rel="#L2076">2076</span>
<span id="L2077" rel="#L2077">2077</span>
<span id="L2078" rel="#L2078">2078</span>
<span id="L2079" rel="#L2079">2079</span>
<span id="L2080" rel="#L2080">2080</span>
<span id="L2081" rel="#L2081">2081</span>
<span id="L2082" rel="#L2082">2082</span>
<span id="L2083" rel="#L2083">2083</span>
<span id="L2084" rel="#L2084">2084</span>
<span id="L2085" rel="#L2085">2085</span>
<span id="L2086" rel="#L2086">2086</span>
<span id="L2087" rel="#L2087">2087</span>
<span id="L2088" rel="#L2088">2088</span>
<span id="L2089" rel="#L2089">2089</span>
<span id="L2090" rel="#L2090">2090</span>
<span id="L2091" rel="#L2091">2091</span>
<span id="L2092" rel="#L2092">2092</span>
<span id="L2093" rel="#L2093">2093</span>
<span id="L2094" rel="#L2094">2094</span>
<span id="L2095" rel="#L2095">2095</span>
<span id="L2096" rel="#L2096">2096</span>
<span id="L2097" rel="#L2097">2097</span>
<span id="L2098" rel="#L2098">2098</span>
<span id="L2099" rel="#L2099">2099</span>
<span id="L2100" rel="#L2100">2100</span>
<span id="L2101" rel="#L2101">2101</span>
<span id="L2102" rel="#L2102">2102</span>
<span id="L2103" rel="#L2103">2103</span>
<span id="L2104" rel="#L2104">2104</span>
<span id="L2105" rel="#L2105">2105</span>
<span id="L2106" rel="#L2106">2106</span>
<span id="L2107" rel="#L2107">2107</span>
<span id="L2108" rel="#L2108">2108</span>
<span id="L2109" rel="#L2109">2109</span>
<span id="L2110" rel="#L2110">2110</span>
<span id="L2111" rel="#L2111">2111</span>
<span id="L2112" rel="#L2112">2112</span>
<span id="L2113" rel="#L2113">2113</span>
<span id="L2114" rel="#L2114">2114</span>
<span id="L2115" rel="#L2115">2115</span>
<span id="L2116" rel="#L2116">2116</span>
<span id="L2117" rel="#L2117">2117</span>
<span id="L2118" rel="#L2118">2118</span>
<span id="L2119" rel="#L2119">2119</span>
<span id="L2120" rel="#L2120">2120</span>
<span id="L2121" rel="#L2121">2121</span>
<span id="L2122" rel="#L2122">2122</span>
<span id="L2123" rel="#L2123">2123</span>
<span id="L2124" rel="#L2124">2124</span>
<span id="L2125" rel="#L2125">2125</span>
<span id="L2126" rel="#L2126">2126</span>
<span id="L2127" rel="#L2127">2127</span>
<span id="L2128" rel="#L2128">2128</span>
<span id="L2129" rel="#L2129">2129</span>
<span id="L2130" rel="#L2130">2130</span>
<span id="L2131" rel="#L2131">2131</span>
<span id="L2132" rel="#L2132">2132</span>
<span id="L2133" rel="#L2133">2133</span>
<span id="L2134" rel="#L2134">2134</span>
<span id="L2135" rel="#L2135">2135</span>
<span id="L2136" rel="#L2136">2136</span>
<span id="L2137" rel="#L2137">2137</span>
<span id="L2138" rel="#L2138">2138</span>
<span id="L2139" rel="#L2139">2139</span>
<span id="L2140" rel="#L2140">2140</span>
<span id="L2141" rel="#L2141">2141</span>
<span id="L2142" rel="#L2142">2142</span>
<span id="L2143" rel="#L2143">2143</span>
<span id="L2144" rel="#L2144">2144</span>
<span id="L2145" rel="#L2145">2145</span>
<span id="L2146" rel="#L2146">2146</span>
<span id="L2147" rel="#L2147">2147</span>
<span id="L2148" rel="#L2148">2148</span>
<span id="L2149" rel="#L2149">2149</span>
<span id="L2150" rel="#L2150">2150</span>
<span id="L2151" rel="#L2151">2151</span>
<span id="L2152" rel="#L2152">2152</span>
<span id="L2153" rel="#L2153">2153</span>
<span id="L2154" rel="#L2154">2154</span>
<span id="L2155" rel="#L2155">2155</span>
<span id="L2156" rel="#L2156">2156</span>
<span id="L2157" rel="#L2157">2157</span>
<span id="L2158" rel="#L2158">2158</span>
<span id="L2159" rel="#L2159">2159</span>
<span id="L2160" rel="#L2160">2160</span>
<span id="L2161" rel="#L2161">2161</span>
<span id="L2162" rel="#L2162">2162</span>
<span id="L2163" rel="#L2163">2163</span>
<span id="L2164" rel="#L2164">2164</span>
<span id="L2165" rel="#L2165">2165</span>
<span id="L2166" rel="#L2166">2166</span>
<span id="L2167" rel="#L2167">2167</span>
<span id="L2168" rel="#L2168">2168</span>
<span id="L2169" rel="#L2169">2169</span>
<span id="L2170" rel="#L2170">2170</span>
<span id="L2171" rel="#L2171">2171</span>
<span id="L2172" rel="#L2172">2172</span>
<span id="L2173" rel="#L2173">2173</span>
<span id="L2174" rel="#L2174">2174</span>
<span id="L2175" rel="#L2175">2175</span>
<span id="L2176" rel="#L2176">2176</span>
<span id="L2177" rel="#L2177">2177</span>
<span id="L2178" rel="#L2178">2178</span>
<span id="L2179" rel="#L2179">2179</span>
<span id="L2180" rel="#L2180">2180</span>
<span id="L2181" rel="#L2181">2181</span>
<span id="L2182" rel="#L2182">2182</span>
<span id="L2183" rel="#L2183">2183</span>
<span id="L2184" rel="#L2184">2184</span>
<span id="L2185" rel="#L2185">2185</span>
<span id="L2186" rel="#L2186">2186</span>
<span id="L2187" rel="#L2187">2187</span>
<span id="L2188" rel="#L2188">2188</span>
<span id="L2189" rel="#L2189">2189</span>
<span id="L2190" rel="#L2190">2190</span>
<span id="L2191" rel="#L2191">2191</span>
<span id="L2192" rel="#L2192">2192</span>
<span id="L2193" rel="#L2193">2193</span>
<span id="L2194" rel="#L2194">2194</span>
<span id="L2195" rel="#L2195">2195</span>
<span id="L2196" rel="#L2196">2196</span>
<span id="L2197" rel="#L2197">2197</span>
<span id="L2198" rel="#L2198">2198</span>
<span id="L2199" rel="#L2199">2199</span>
<span id="L2200" rel="#L2200">2200</span>
<span id="L2201" rel="#L2201">2201</span>
<span id="L2202" rel="#L2202">2202</span>
<span id="L2203" rel="#L2203">2203</span>
<span id="L2204" rel="#L2204">2204</span>
<span id="L2205" rel="#L2205">2205</span>
<span id="L2206" rel="#L2206">2206</span>
<span id="L2207" rel="#L2207">2207</span>
<span id="L2208" rel="#L2208">2208</span>
<span id="L2209" rel="#L2209">2209</span>
<span id="L2210" rel="#L2210">2210</span>
<span id="L2211" rel="#L2211">2211</span>
<span id="L2212" rel="#L2212">2212</span>
<span id="L2213" rel="#L2213">2213</span>
<span id="L2214" rel="#L2214">2214</span>
<span id="L2215" rel="#L2215">2215</span>
<span id="L2216" rel="#L2216">2216</span>
<span id="L2217" rel="#L2217">2217</span>
<span id="L2218" rel="#L2218">2218</span>
<span id="L2219" rel="#L2219">2219</span>
<span id="L2220" rel="#L2220">2220</span>
<span id="L2221" rel="#L2221">2221</span>
<span id="L2222" rel="#L2222">2222</span>
<span id="L2223" rel="#L2223">2223</span>
<span id="L2224" rel="#L2224">2224</span>
<span id="L2225" rel="#L2225">2225</span>
<span id="L2226" rel="#L2226">2226</span>
<span id="L2227" rel="#L2227">2227</span>
<span id="L2228" rel="#L2228">2228</span>
<span id="L2229" rel="#L2229">2229</span>
<span id="L2230" rel="#L2230">2230</span>
<span id="L2231" rel="#L2231">2231</span>
<span id="L2232" rel="#L2232">2232</span>
<span id="L2233" rel="#L2233">2233</span>
<span id="L2234" rel="#L2234">2234</span>
<span id="L2235" rel="#L2235">2235</span>
<span id="L2236" rel="#L2236">2236</span>
<span id="L2237" rel="#L2237">2237</span>
<span id="L2238" rel="#L2238">2238</span>
<span id="L2239" rel="#L2239">2239</span>
<span id="L2240" rel="#L2240">2240</span>
<span id="L2241" rel="#L2241">2241</span>
<span id="L2242" rel="#L2242">2242</span>
<span id="L2243" rel="#L2243">2243</span>
<span id="L2244" rel="#L2244">2244</span>
<span id="L2245" rel="#L2245">2245</span>
<span id="L2246" rel="#L2246">2246</span>
<span id="L2247" rel="#L2247">2247</span>
<span id="L2248" rel="#L2248">2248</span>
<span id="L2249" rel="#L2249">2249</span>
<span id="L2250" rel="#L2250">2250</span>
<span id="L2251" rel="#L2251">2251</span>
<span id="L2252" rel="#L2252">2252</span>
<span id="L2253" rel="#L2253">2253</span>
<span id="L2254" rel="#L2254">2254</span>
<span id="L2255" rel="#L2255">2255</span>
<span id="L2256" rel="#L2256">2256</span>
<span id="L2257" rel="#L2257">2257</span>
<span id="L2258" rel="#L2258">2258</span>
<span id="L2259" rel="#L2259">2259</span>
<span id="L2260" rel="#L2260">2260</span>
<span id="L2261" rel="#L2261">2261</span>
<span id="L2262" rel="#L2262">2262</span>
<span id="L2263" rel="#L2263">2263</span>
<span id="L2264" rel="#L2264">2264</span>
<span id="L2265" rel="#L2265">2265</span>
<span id="L2266" rel="#L2266">2266</span>
<span id="L2267" rel="#L2267">2267</span>
<span id="L2268" rel="#L2268">2268</span>
<span id="L2269" rel="#L2269">2269</span>
<span id="L2270" rel="#L2270">2270</span>
<span id="L2271" rel="#L2271">2271</span>
<span id="L2272" rel="#L2272">2272</span>
<span id="L2273" rel="#L2273">2273</span>
<span id="L2274" rel="#L2274">2274</span>
<span id="L2275" rel="#L2275">2275</span>
<span id="L2276" rel="#L2276">2276</span>
<span id="L2277" rel="#L2277">2277</span>
<span id="L2278" rel="#L2278">2278</span>
<span id="L2279" rel="#L2279">2279</span>
<span id="L2280" rel="#L2280">2280</span>
<span id="L2281" rel="#L2281">2281</span>
<span id="L2282" rel="#L2282">2282</span>
<span id="L2283" rel="#L2283">2283</span>
<span id="L2284" rel="#L2284">2284</span>
<span id="L2285" rel="#L2285">2285</span>
<span id="L2286" rel="#L2286">2286</span>
<span id="L2287" rel="#L2287">2287</span>
<span id="L2288" rel="#L2288">2288</span>
<span id="L2289" rel="#L2289">2289</span>
<span id="L2290" rel="#L2290">2290</span>
<span id="L2291" rel="#L2291">2291</span>
<span id="L2292" rel="#L2292">2292</span>
<span id="L2293" rel="#L2293">2293</span>
<span id="L2294" rel="#L2294">2294</span>
<span id="L2295" rel="#L2295">2295</span>
<span id="L2296" rel="#L2296">2296</span>
<span id="L2297" rel="#L2297">2297</span>
<span id="L2298" rel="#L2298">2298</span>
<span id="L2299" rel="#L2299">2299</span>
<span id="L2300" rel="#L2300">2300</span>
<span id="L2301" rel="#L2301">2301</span>
<span id="L2302" rel="#L2302">2302</span>
<span id="L2303" rel="#L2303">2303</span>
<span id="L2304" rel="#L2304">2304</span>
<span id="L2305" rel="#L2305">2305</span>
<span id="L2306" rel="#L2306">2306</span>
<span id="L2307" rel="#L2307">2307</span>
<span id="L2308" rel="#L2308">2308</span>
<span id="L2309" rel="#L2309">2309</span>
<span id="L2310" rel="#L2310">2310</span>
<span id="L2311" rel="#L2311">2311</span>
<span id="L2312" rel="#L2312">2312</span>
<span id="L2313" rel="#L2313">2313</span>
<span id="L2314" rel="#L2314">2314</span>
<span id="L2315" rel="#L2315">2315</span>
<span id="L2316" rel="#L2316">2316</span>
<span id="L2317" rel="#L2317">2317</span>
<span id="L2318" rel="#L2318">2318</span>
<span id="L2319" rel="#L2319">2319</span>
<span id="L2320" rel="#L2320">2320</span>
<span id="L2321" rel="#L2321">2321</span>
<span id="L2322" rel="#L2322">2322</span>
<span id="L2323" rel="#L2323">2323</span>
<span id="L2324" rel="#L2324">2324</span>
<span id="L2325" rel="#L2325">2325</span>
<span id="L2326" rel="#L2326">2326</span>
<span id="L2327" rel="#L2327">2327</span>
<span id="L2328" rel="#L2328">2328</span>
<span id="L2329" rel="#L2329">2329</span>
<span id="L2330" rel="#L2330">2330</span>
<span id="L2331" rel="#L2331">2331</span>
<span id="L2332" rel="#L2332">2332</span>
<span id="L2333" rel="#L2333">2333</span>
<span id="L2334" rel="#L2334">2334</span>
<span id="L2335" rel="#L2335">2335</span>
<span id="L2336" rel="#L2336">2336</span>
<span id="L2337" rel="#L2337">2337</span>
<span id="L2338" rel="#L2338">2338</span>
<span id="L2339" rel="#L2339">2339</span>
<span id="L2340" rel="#L2340">2340</span>
<span id="L2341" rel="#L2341">2341</span>
<span id="L2342" rel="#L2342">2342</span>
<span id="L2343" rel="#L2343">2343</span>
<span id="L2344" rel="#L2344">2344</span>
<span id="L2345" rel="#L2345">2345</span>
<span id="L2346" rel="#L2346">2346</span>
<span id="L2347" rel="#L2347">2347</span>
<span id="L2348" rel="#L2348">2348</span>
<span id="L2349" rel="#L2349">2349</span>
<span id="L2350" rel="#L2350">2350</span>
<span id="L2351" rel="#L2351">2351</span>
<span id="L2352" rel="#L2352">2352</span>
<span id="L2353" rel="#L2353">2353</span>
<span id="L2354" rel="#L2354">2354</span>
<span id="L2355" rel="#L2355">2355</span>
<span id="L2356" rel="#L2356">2356</span>
<span id="L2357" rel="#L2357">2357</span>
<span id="L2358" rel="#L2358">2358</span>
<span id="L2359" rel="#L2359">2359</span>
<span id="L2360" rel="#L2360">2360</span>
<span id="L2361" rel="#L2361">2361</span>
<span id="L2362" rel="#L2362">2362</span>
<span id="L2363" rel="#L2363">2363</span>
<span id="L2364" rel="#L2364">2364</span>
<span id="L2365" rel="#L2365">2365</span>
<span id="L2366" rel="#L2366">2366</span>
<span id="L2367" rel="#L2367">2367</span>
<span id="L2368" rel="#L2368">2368</span>
<span id="L2369" rel="#L2369">2369</span>
<span id="L2370" rel="#L2370">2370</span>
<span id="L2371" rel="#L2371">2371</span>
<span id="L2372" rel="#L2372">2372</span>
<span id="L2373" rel="#L2373">2373</span>
<span id="L2374" rel="#L2374">2374</span>
<span id="L2375" rel="#L2375">2375</span>
<span id="L2376" rel="#L2376">2376</span>
<span id="L2377" rel="#L2377">2377</span>
<span id="L2378" rel="#L2378">2378</span>
<span id="L2379" rel="#L2379">2379</span>
<span id="L2380" rel="#L2380">2380</span>
<span id="L2381" rel="#L2381">2381</span>
<span id="L2382" rel="#L2382">2382</span>
<span id="L2383" rel="#L2383">2383</span>
<span id="L2384" rel="#L2384">2384</span>
<span id="L2385" rel="#L2385">2385</span>
<span id="L2386" rel="#L2386">2386</span>
<span id="L2387" rel="#L2387">2387</span>
<span id="L2388" rel="#L2388">2388</span>
<span id="L2389" rel="#L2389">2389</span>
<span id="L2390" rel="#L2390">2390</span>
<span id="L2391" rel="#L2391">2391</span>
<span id="L2392" rel="#L2392">2392</span>
<span id="L2393" rel="#L2393">2393</span>
<span id="L2394" rel="#L2394">2394</span>
<span id="L2395" rel="#L2395">2395</span>
<span id="L2396" rel="#L2396">2396</span>
<span id="L2397" rel="#L2397">2397</span>
<span id="L2398" rel="#L2398">2398</span>
<span id="L2399" rel="#L2399">2399</span>
<span id="L2400" rel="#L2400">2400</span>
<span id="L2401" rel="#L2401">2401</span>
<span id="L2402" rel="#L2402">2402</span>
<span id="L2403" rel="#L2403">2403</span>
<span id="L2404" rel="#L2404">2404</span>
<span id="L2405" rel="#L2405">2405</span>
<span id="L2406" rel="#L2406">2406</span>
<span id="L2407" rel="#L2407">2407</span>
<span id="L2408" rel="#L2408">2408</span>
<span id="L2409" rel="#L2409">2409</span>
<span id="L2410" rel="#L2410">2410</span>
<span id="L2411" rel="#L2411">2411</span>
<span id="L2412" rel="#L2412">2412</span>
<span id="L2413" rel="#L2413">2413</span>
<span id="L2414" rel="#L2414">2414</span>
<span id="L2415" rel="#L2415">2415</span>
<span id="L2416" rel="#L2416">2416</span>
<span id="L2417" rel="#L2417">2417</span>
<span id="L2418" rel="#L2418">2418</span>
<span id="L2419" rel="#L2419">2419</span>
<span id="L2420" rel="#L2420">2420</span>
<span id="L2421" rel="#L2421">2421</span>
<span id="L2422" rel="#L2422">2422</span>
<span id="L2423" rel="#L2423">2423</span>
<span id="L2424" rel="#L2424">2424</span>
<span id="L2425" rel="#L2425">2425</span>
<span id="L2426" rel="#L2426">2426</span>
<span id="L2427" rel="#L2427">2427</span>
<span id="L2428" rel="#L2428">2428</span>
<span id="L2429" rel="#L2429">2429</span>
<span id="L2430" rel="#L2430">2430</span>
<span id="L2431" rel="#L2431">2431</span>
<span id="L2432" rel="#L2432">2432</span>
<span id="L2433" rel="#L2433">2433</span>
<span id="L2434" rel="#L2434">2434</span>
<span id="L2435" rel="#L2435">2435</span>
<span id="L2436" rel="#L2436">2436</span>
<span id="L2437" rel="#L2437">2437</span>
<span id="L2438" rel="#L2438">2438</span>
<span id="L2439" rel="#L2439">2439</span>
<span id="L2440" rel="#L2440">2440</span>
<span id="L2441" rel="#L2441">2441</span>
<span id="L2442" rel="#L2442">2442</span>
<span id="L2443" rel="#L2443">2443</span>
<span id="L2444" rel="#L2444">2444</span>
<span id="L2445" rel="#L2445">2445</span>
<span id="L2446" rel="#L2446">2446</span>
<span id="L2447" rel="#L2447">2447</span>
<span id="L2448" rel="#L2448">2448</span>
<span id="L2449" rel="#L2449">2449</span>
<span id="L2450" rel="#L2450">2450</span>
<span id="L2451" rel="#L2451">2451</span>
<span id="L2452" rel="#L2452">2452</span>
<span id="L2453" rel="#L2453">2453</span>
<span id="L2454" rel="#L2454">2454</span>
<span id="L2455" rel="#L2455">2455</span>
<span id="L2456" rel="#L2456">2456</span>
<span id="L2457" rel="#L2457">2457</span>
<span id="L2458" rel="#L2458">2458</span>
<span id="L2459" rel="#L2459">2459</span>
<span id="L2460" rel="#L2460">2460</span>
<span id="L2461" rel="#L2461">2461</span>
<span id="L2462" rel="#L2462">2462</span>
<span id="L2463" rel="#L2463">2463</span>
<span id="L2464" rel="#L2464">2464</span>
<span id="L2465" rel="#L2465">2465</span>
<span id="L2466" rel="#L2466">2466</span>
<span id="L2467" rel="#L2467">2467</span>
<span id="L2468" rel="#L2468">2468</span>
<span id="L2469" rel="#L2469">2469</span>
<span id="L2470" rel="#L2470">2470</span>
<span id="L2471" rel="#L2471">2471</span>
<span id="L2472" rel="#L2472">2472</span>
<span id="L2473" rel="#L2473">2473</span>
<span id="L2474" rel="#L2474">2474</span>
<span id="L2475" rel="#L2475">2475</span>
<span id="L2476" rel="#L2476">2476</span>
<span id="L2477" rel="#L2477">2477</span>
<span id="L2478" rel="#L2478">2478</span>
<span id="L2479" rel="#L2479">2479</span>
<span id="L2480" rel="#L2480">2480</span>
<span id="L2481" rel="#L2481">2481</span>
<span id="L2482" rel="#L2482">2482</span>
<span id="L2483" rel="#L2483">2483</span>
<span id="L2484" rel="#L2484">2484</span>
<span id="L2485" rel="#L2485">2485</span>
<span id="L2486" rel="#L2486">2486</span>
<span id="L2487" rel="#L2487">2487</span>
<span id="L2488" rel="#L2488">2488</span>
<span id="L2489" rel="#L2489">2489</span>
<span id="L2490" rel="#L2490">2490</span>
<span id="L2491" rel="#L2491">2491</span>
<span id="L2492" rel="#L2492">2492</span>
<span id="L2493" rel="#L2493">2493</span>
<span id="L2494" rel="#L2494">2494</span>
<span id="L2495" rel="#L2495">2495</span>
<span id="L2496" rel="#L2496">2496</span>
<span id="L2497" rel="#L2497">2497</span>
<span id="L2498" rel="#L2498">2498</span>
<span id="L2499" rel="#L2499">2499</span>
<span id="L2500" rel="#L2500">2500</span>
<span id="L2501" rel="#L2501">2501</span>
<span id="L2502" rel="#L2502">2502</span>
<span id="L2503" rel="#L2503">2503</span>
<span id="L2504" rel="#L2504">2504</span>
<span id="L2505" rel="#L2505">2505</span>
<span id="L2506" rel="#L2506">2506</span>
<span id="L2507" rel="#L2507">2507</span>
<span id="L2508" rel="#L2508">2508</span>
<span id="L2509" rel="#L2509">2509</span>
<span id="L2510" rel="#L2510">2510</span>
<span id="L2511" rel="#L2511">2511</span>
<span id="L2512" rel="#L2512">2512</span>
<span id="L2513" rel="#L2513">2513</span>
<span id="L2514" rel="#L2514">2514</span>
<span id="L2515" rel="#L2515">2515</span>
<span id="L2516" rel="#L2516">2516</span>
<span id="L2517" rel="#L2517">2517</span>
<span id="L2518" rel="#L2518">2518</span>
<span id="L2519" rel="#L2519">2519</span>
<span id="L2520" rel="#L2520">2520</span>
<span id="L2521" rel="#L2521">2521</span>
<span id="L2522" rel="#L2522">2522</span>
<span id="L2523" rel="#L2523">2523</span>
<span id="L2524" rel="#L2524">2524</span>
<span id="L2525" rel="#L2525">2525</span>
<span id="L2526" rel="#L2526">2526</span>
<span id="L2527" rel="#L2527">2527</span>
<span id="L2528" rel="#L2528">2528</span>
<span id="L2529" rel="#L2529">2529</span>
<span id="L2530" rel="#L2530">2530</span>
<span id="L2531" rel="#L2531">2531</span>
<span id="L2532" rel="#L2532">2532</span>
<span id="L2533" rel="#L2533">2533</span>
<span id="L2534" rel="#L2534">2534</span>
<span id="L2535" rel="#L2535">2535</span>
<span id="L2536" rel="#L2536">2536</span>
<span id="L2537" rel="#L2537">2537</span>
<span id="L2538" rel="#L2538">2538</span>
<span id="L2539" rel="#L2539">2539</span>
<span id="L2540" rel="#L2540">2540</span>
<span id="L2541" rel="#L2541">2541</span>
<span id="L2542" rel="#L2542">2542</span>
<span id="L2543" rel="#L2543">2543</span>
<span id="L2544" rel="#L2544">2544</span>
<span id="L2545" rel="#L2545">2545</span>
<span id="L2546" rel="#L2546">2546</span>
<span id="L2547" rel="#L2547">2547</span>
<span id="L2548" rel="#L2548">2548</span>
<span id="L2549" rel="#L2549">2549</span>
<span id="L2550" rel="#L2550">2550</span>
<span id="L2551" rel="#L2551">2551</span>
<span id="L2552" rel="#L2552">2552</span>
<span id="L2553" rel="#L2553">2553</span>
<span id="L2554" rel="#L2554">2554</span>
<span id="L2555" rel="#L2555">2555</span>
<span id="L2556" rel="#L2556">2556</span>
<span id="L2557" rel="#L2557">2557</span>
<span id="L2558" rel="#L2558">2558</span>
<span id="L2559" rel="#L2559">2559</span>
<span id="L2560" rel="#L2560">2560</span>
<span id="L2561" rel="#L2561">2561</span>
<span id="L2562" rel="#L2562">2562</span>
<span id="L2563" rel="#L2563">2563</span>
<span id="L2564" rel="#L2564">2564</span>
<span id="L2565" rel="#L2565">2565</span>
<span id="L2566" rel="#L2566">2566</span>
<span id="L2567" rel="#L2567">2567</span>
<span id="L2568" rel="#L2568">2568</span>
<span id="L2569" rel="#L2569">2569</span>
<span id="L2570" rel="#L2570">2570</span>
<span id="L2571" rel="#L2571">2571</span>
<span id="L2572" rel="#L2572">2572</span>
<span id="L2573" rel="#L2573">2573</span>
<span id="L2574" rel="#L2574">2574</span>
<span id="L2575" rel="#L2575">2575</span>
<span id="L2576" rel="#L2576">2576</span>
<span id="L2577" rel="#L2577">2577</span>
<span id="L2578" rel="#L2578">2578</span>
<span id="L2579" rel="#L2579">2579</span>
<span id="L2580" rel="#L2580">2580</span>
<span id="L2581" rel="#L2581">2581</span>
<span id="L2582" rel="#L2582">2582</span>
<span id="L2583" rel="#L2583">2583</span>
<span id="L2584" rel="#L2584">2584</span>
<span id="L2585" rel="#L2585">2585</span>
<span id="L2586" rel="#L2586">2586</span>
<span id="L2587" rel="#L2587">2587</span>
<span id="L2588" rel="#L2588">2588</span>
<span id="L2589" rel="#L2589">2589</span>
<span id="L2590" rel="#L2590">2590</span>
<span id="L2591" rel="#L2591">2591</span>
<span id="L2592" rel="#L2592">2592</span>
<span id="L2593" rel="#L2593">2593</span>
<span id="L2594" rel="#L2594">2594</span>
<span id="L2595" rel="#L2595">2595</span>
<span id="L2596" rel="#L2596">2596</span>
<span id="L2597" rel="#L2597">2597</span>
<span id="L2598" rel="#L2598">2598</span>
<span id="L2599" rel="#L2599">2599</span>
<span id="L2600" rel="#L2600">2600</span>
<span id="L2601" rel="#L2601">2601</span>
<span id="L2602" rel="#L2602">2602</span>
<span id="L2603" rel="#L2603">2603</span>
<span id="L2604" rel="#L2604">2604</span>
<span id="L2605" rel="#L2605">2605</span>
<span id="L2606" rel="#L2606">2606</span>
<span id="L2607" rel="#L2607">2607</span>
<span id="L2608" rel="#L2608">2608</span>
<span id="L2609" rel="#L2609">2609</span>
<span id="L2610" rel="#L2610">2610</span>
<span id="L2611" rel="#L2611">2611</span>
<span id="L2612" rel="#L2612">2612</span>
<span id="L2613" rel="#L2613">2613</span>
<span id="L2614" rel="#L2614">2614</span>
<span id="L2615" rel="#L2615">2615</span>
<span id="L2616" rel="#L2616">2616</span>
<span id="L2617" rel="#L2617">2617</span>
<span id="L2618" rel="#L2618">2618</span>
<span id="L2619" rel="#L2619">2619</span>
<span id="L2620" rel="#L2620">2620</span>
<span id="L2621" rel="#L2621">2621</span>
<span id="L2622" rel="#L2622">2622</span>
<span id="L2623" rel="#L2623">2623</span>
<span id="L2624" rel="#L2624">2624</span>
<span id="L2625" rel="#L2625">2625</span>
<span id="L2626" rel="#L2626">2626</span>
<span id="L2627" rel="#L2627">2627</span>
<span id="L2628" rel="#L2628">2628</span>
<span id="L2629" rel="#L2629">2629</span>
<span id="L2630" rel="#L2630">2630</span>
<span id="L2631" rel="#L2631">2631</span>
<span id="L2632" rel="#L2632">2632</span>
<span id="L2633" rel="#L2633">2633</span>
<span id="L2634" rel="#L2634">2634</span>
<span id="L2635" rel="#L2635">2635</span>
<span id="L2636" rel="#L2636">2636</span>
<span id="L2637" rel="#L2637">2637</span>
<span id="L2638" rel="#L2638">2638</span>
<span id="L2639" rel="#L2639">2639</span>
<span id="L2640" rel="#L2640">2640</span>
<span id="L2641" rel="#L2641">2641</span>
<span id="L2642" rel="#L2642">2642</span>
<span id="L2643" rel="#L2643">2643</span>
<span id="L2644" rel="#L2644">2644</span>
<span id="L2645" rel="#L2645">2645</span>
<span id="L2646" rel="#L2646">2646</span>
<span id="L2647" rel="#L2647">2647</span>
<span id="L2648" rel="#L2648">2648</span>
<span id="L2649" rel="#L2649">2649</span>
<span id="L2650" rel="#L2650">2650</span>
<span id="L2651" rel="#L2651">2651</span>
<span id="L2652" rel="#L2652">2652</span>
<span id="L2653" rel="#L2653">2653</span>
<span id="L2654" rel="#L2654">2654</span>
<span id="L2655" rel="#L2655">2655</span>
<span id="L2656" rel="#L2656">2656</span>
<span id="L2657" rel="#L2657">2657</span>
<span id="L2658" rel="#L2658">2658</span>
<span id="L2659" rel="#L2659">2659</span>
<span id="L2660" rel="#L2660">2660</span>
<span id="L2661" rel="#L2661">2661</span>
<span id="L2662" rel="#L2662">2662</span>
<span id="L2663" rel="#L2663">2663</span>
<span id="L2664" rel="#L2664">2664</span>
<span id="L2665" rel="#L2665">2665</span>
<span id="L2666" rel="#L2666">2666</span>
<span id="L2667" rel="#L2667">2667</span>
<span id="L2668" rel="#L2668">2668</span>
<span id="L2669" rel="#L2669">2669</span>
<span id="L2670" rel="#L2670">2670</span>
<span id="L2671" rel="#L2671">2671</span>
<span id="L2672" rel="#L2672">2672</span>
<span id="L2673" rel="#L2673">2673</span>
<span id="L2674" rel="#L2674">2674</span>
<span id="L2675" rel="#L2675">2675</span>
<span id="L2676" rel="#L2676">2676</span>
<span id="L2677" rel="#L2677">2677</span>
<span id="L2678" rel="#L2678">2678</span>
<span id="L2679" rel="#L2679">2679</span>
<span id="L2680" rel="#L2680">2680</span>
<span id="L2681" rel="#L2681">2681</span>
<span id="L2682" rel="#L2682">2682</span>
<span id="L2683" rel="#L2683">2683</span>
<span id="L2684" rel="#L2684">2684</span>
<span id="L2685" rel="#L2685">2685</span>
<span id="L2686" rel="#L2686">2686</span>
<span id="L2687" rel="#L2687">2687</span>
<span id="L2688" rel="#L2688">2688</span>
<span id="L2689" rel="#L2689">2689</span>
<span id="L2690" rel="#L2690">2690</span>
<span id="L2691" rel="#L2691">2691</span>
<span id="L2692" rel="#L2692">2692</span>
<span id="L2693" rel="#L2693">2693</span>
<span id="L2694" rel="#L2694">2694</span>
<span id="L2695" rel="#L2695">2695</span>
<span id="L2696" rel="#L2696">2696</span>
<span id="L2697" rel="#L2697">2697</span>
<span id="L2698" rel="#L2698">2698</span>
<span id="L2699" rel="#L2699">2699</span>
<span id="L2700" rel="#L2700">2700</span>
<span id="L2701" rel="#L2701">2701</span>
<span id="L2702" rel="#L2702">2702</span>
<span id="L2703" rel="#L2703">2703</span>
<span id="L2704" rel="#L2704">2704</span>
<span id="L2705" rel="#L2705">2705</span>
<span id="L2706" rel="#L2706">2706</span>
<span id="L2707" rel="#L2707">2707</span>
<span id="L2708" rel="#L2708">2708</span>
<span id="L2709" rel="#L2709">2709</span>
<span id="L2710" rel="#L2710">2710</span>
<span id="L2711" rel="#L2711">2711</span>
<span id="L2712" rel="#L2712">2712</span>
<span id="L2713" rel="#L2713">2713</span>
<span id="L2714" rel="#L2714">2714</span>
<span id="L2715" rel="#L2715">2715</span>
<span id="L2716" rel="#L2716">2716</span>
<span id="L2717" rel="#L2717">2717</span>
<span id="L2718" rel="#L2718">2718</span>
<span id="L2719" rel="#L2719">2719</span>
<span id="L2720" rel="#L2720">2720</span>
<span id="L2721" rel="#L2721">2721</span>
<span id="L2722" rel="#L2722">2722</span>
<span id="L2723" rel="#L2723">2723</span>
<span id="L2724" rel="#L2724">2724</span>
<span id="L2725" rel="#L2725">2725</span>
<span id="L2726" rel="#L2726">2726</span>
<span id="L2727" rel="#L2727">2727</span>
<span id="L2728" rel="#L2728">2728</span>
<span id="L2729" rel="#L2729">2729</span>
<span id="L2730" rel="#L2730">2730</span>
<span id="L2731" rel="#L2731">2731</span>
<span id="L2732" rel="#L2732">2732</span>
<span id="L2733" rel="#L2733">2733</span>
<span id="L2734" rel="#L2734">2734</span>
<span id="L2735" rel="#L2735">2735</span>
<span id="L2736" rel="#L2736">2736</span>
<span id="L2737" rel="#L2737">2737</span>
<span id="L2738" rel="#L2738">2738</span>
<span id="L2739" rel="#L2739">2739</span>
<span id="L2740" rel="#L2740">2740</span>
<span id="L2741" rel="#L2741">2741</span>
<span id="L2742" rel="#L2742">2742</span>
<span id="L2743" rel="#L2743">2743</span>
<span id="L2744" rel="#L2744">2744</span>
<span id="L2745" rel="#L2745">2745</span>
<span id="L2746" rel="#L2746">2746</span>
<span id="L2747" rel="#L2747">2747</span>
<span id="L2748" rel="#L2748">2748</span>
<span id="L2749" rel="#L2749">2749</span>
<span id="L2750" rel="#L2750">2750</span>
<span id="L2751" rel="#L2751">2751</span>
<span id="L2752" rel="#L2752">2752</span>
<span id="L2753" rel="#L2753">2753</span>
<span id="L2754" rel="#L2754">2754</span>
<span id="L2755" rel="#L2755">2755</span>
<span id="L2756" rel="#L2756">2756</span>
<span id="L2757" rel="#L2757">2757</span>
<span id="L2758" rel="#L2758">2758</span>
<span id="L2759" rel="#L2759">2759</span>
<span id="L2760" rel="#L2760">2760</span>
<span id="L2761" rel="#L2761">2761</span>
<span id="L2762" rel="#L2762">2762</span>
<span id="L2763" rel="#L2763">2763</span>
<span id="L2764" rel="#L2764">2764</span>
<span id="L2765" rel="#L2765">2765</span>
<span id="L2766" rel="#L2766">2766</span>
<span id="L2767" rel="#L2767">2767</span>
<span id="L2768" rel="#L2768">2768</span>
<span id="L2769" rel="#L2769">2769</span>
<span id="L2770" rel="#L2770">2770</span>
<span id="L2771" rel="#L2771">2771</span>
<span id="L2772" rel="#L2772">2772</span>
<span id="L2773" rel="#L2773">2773</span>
<span id="L2774" rel="#L2774">2774</span>
<span id="L2775" rel="#L2775">2775</span>
<span id="L2776" rel="#L2776">2776</span>
<span id="L2777" rel="#L2777">2777</span>
<span id="L2778" rel="#L2778">2778</span>
<span id="L2779" rel="#L2779">2779</span>
<span id="L2780" rel="#L2780">2780</span>
<span id="L2781" rel="#L2781">2781</span>
<span id="L2782" rel="#L2782">2782</span>
<span id="L2783" rel="#L2783">2783</span>
<span id="L2784" rel="#L2784">2784</span>
<span id="L2785" rel="#L2785">2785</span>
<span id="L2786" rel="#L2786">2786</span>
<span id="L2787" rel="#L2787">2787</span>
<span id="L2788" rel="#L2788">2788</span>
<span id="L2789" rel="#L2789">2789</span>
<span id="L2790" rel="#L2790">2790</span>
<span id="L2791" rel="#L2791">2791</span>
<span id="L2792" rel="#L2792">2792</span>
<span id="L2793" rel="#L2793">2793</span>
<span id="L2794" rel="#L2794">2794</span>
<span id="L2795" rel="#L2795">2795</span>
<span id="L2796" rel="#L2796">2796</span>
<span id="L2797" rel="#L2797">2797</span>
<span id="L2798" rel="#L2798">2798</span>
<span id="L2799" rel="#L2799">2799</span>
<span id="L2800" rel="#L2800">2800</span>
<span id="L2801" rel="#L2801">2801</span>
<span id="L2802" rel="#L2802">2802</span>
<span id="L2803" rel="#L2803">2803</span>
<span id="L2804" rel="#L2804">2804</span>
<span id="L2805" rel="#L2805">2805</span>
<span id="L2806" rel="#L2806">2806</span>
<span id="L2807" rel="#L2807">2807</span>
<span id="L2808" rel="#L2808">2808</span>
<span id="L2809" rel="#L2809">2809</span>
<span id="L2810" rel="#L2810">2810</span>
<span id="L2811" rel="#L2811">2811</span>
<span id="L2812" rel="#L2812">2812</span>
<span id="L2813" rel="#L2813">2813</span>
<span id="L2814" rel="#L2814">2814</span>
<span id="L2815" rel="#L2815">2815</span>
<span id="L2816" rel="#L2816">2816</span>
<span id="L2817" rel="#L2817">2817</span>
<span id="L2818" rel="#L2818">2818</span>
<span id="L2819" rel="#L2819">2819</span>
<span id="L2820" rel="#L2820">2820</span>
<span id="L2821" rel="#L2821">2821</span>
<span id="L2822" rel="#L2822">2822</span>
<span id="L2823" rel="#L2823">2823</span>
<span id="L2824" rel="#L2824">2824</span>
<span id="L2825" rel="#L2825">2825</span>
<span id="L2826" rel="#L2826">2826</span>
<span id="L2827" rel="#L2827">2827</span>
<span id="L2828" rel="#L2828">2828</span>
<span id="L2829" rel="#L2829">2829</span>
<span id="L2830" rel="#L2830">2830</span>
<span id="L2831" rel="#L2831">2831</span>
<span id="L2832" rel="#L2832">2832</span>
<span id="L2833" rel="#L2833">2833</span>
<span id="L2834" rel="#L2834">2834</span>
<span id="L2835" rel="#L2835">2835</span>
<span id="L2836" rel="#L2836">2836</span>
<span id="L2837" rel="#L2837">2837</span>
<span id="L2838" rel="#L2838">2838</span>
<span id="L2839" rel="#L2839">2839</span>
<span id="L2840" rel="#L2840">2840</span>
<span id="L2841" rel="#L2841">2841</span>
<span id="L2842" rel="#L2842">2842</span>
<span id="L2843" rel="#L2843">2843</span>
<span id="L2844" rel="#L2844">2844</span>
<span id="L2845" rel="#L2845">2845</span>
<span id="L2846" rel="#L2846">2846</span>
<span id="L2847" rel="#L2847">2847</span>
<span id="L2848" rel="#L2848">2848</span>
<span id="L2849" rel="#L2849">2849</span>
<span id="L2850" rel="#L2850">2850</span>
<span id="L2851" rel="#L2851">2851</span>
<span id="L2852" rel="#L2852">2852</span>
<span id="L2853" rel="#L2853">2853</span>
<span id="L2854" rel="#L2854">2854</span>
<span id="L2855" rel="#L2855">2855</span>
<span id="L2856" rel="#L2856">2856</span>
<span id="L2857" rel="#L2857">2857</span>
<span id="L2858" rel="#L2858">2858</span>
<span id="L2859" rel="#L2859">2859</span>
<span id="L2860" rel="#L2860">2860</span>
<span id="L2861" rel="#L2861">2861</span>
<span id="L2862" rel="#L2862">2862</span>
<span id="L2863" rel="#L2863">2863</span>
<span id="L2864" rel="#L2864">2864</span>
<span id="L2865" rel="#L2865">2865</span>
<span id="L2866" rel="#L2866">2866</span>
<span id="L2867" rel="#L2867">2867</span>
<span id="L2868" rel="#L2868">2868</span>
<span id="L2869" rel="#L2869">2869</span>
<span id="L2870" rel="#L2870">2870</span>
<span id="L2871" rel="#L2871">2871</span>
<span id="L2872" rel="#L2872">2872</span>
<span id="L2873" rel="#L2873">2873</span>
<span id="L2874" rel="#L2874">2874</span>
<span id="L2875" rel="#L2875">2875</span>
<span id="L2876" rel="#L2876">2876</span>
<span id="L2877" rel="#L2877">2877</span>
<span id="L2878" rel="#L2878">2878</span>
<span id="L2879" rel="#L2879">2879</span>
<span id="L2880" rel="#L2880">2880</span>
<span id="L2881" rel="#L2881">2881</span>
<span id="L2882" rel="#L2882">2882</span>
<span id="L2883" rel="#L2883">2883</span>
<span id="L2884" rel="#L2884">2884</span>
<span id="L2885" rel="#L2885">2885</span>
<span id="L2886" rel="#L2886">2886</span>
<span id="L2887" rel="#L2887">2887</span>
<span id="L2888" rel="#L2888">2888</span>
<span id="L2889" rel="#L2889">2889</span>
<span id="L2890" rel="#L2890">2890</span>
<span id="L2891" rel="#L2891">2891</span>
<span id="L2892" rel="#L2892">2892</span>
<span id="L2893" rel="#L2893">2893</span>
<span id="L2894" rel="#L2894">2894</span>
<span id="L2895" rel="#L2895">2895</span>
<span id="L2896" rel="#L2896">2896</span>
<span id="L2897" rel="#L2897">2897</span>
<span id="L2898" rel="#L2898">2898</span>
<span id="L2899" rel="#L2899">2899</span>
<span id="L2900" rel="#L2900">2900</span>
<span id="L2901" rel="#L2901">2901</span>
<span id="L2902" rel="#L2902">2902</span>
<span id="L2903" rel="#L2903">2903</span>
<span id="L2904" rel="#L2904">2904</span>
<span id="L2905" rel="#L2905">2905</span>
<span id="L2906" rel="#L2906">2906</span>
<span id="L2907" rel="#L2907">2907</span>
<span id="L2908" rel="#L2908">2908</span>
<span id="L2909" rel="#L2909">2909</span>
<span id="L2910" rel="#L2910">2910</span>
<span id="L2911" rel="#L2911">2911</span>
<span id="L2912" rel="#L2912">2912</span>
<span id="L2913" rel="#L2913">2913</span>
<span id="L2914" rel="#L2914">2914</span>
<span id="L2915" rel="#L2915">2915</span>
<span id="L2916" rel="#L2916">2916</span>
<span id="L2917" rel="#L2917">2917</span>
<span id="L2918" rel="#L2918">2918</span>
<span id="L2919" rel="#L2919">2919</span>
<span id="L2920" rel="#L2920">2920</span>
<span id="L2921" rel="#L2921">2921</span>
<span id="L2922" rel="#L2922">2922</span>
<span id="L2923" rel="#L2923">2923</span>
<span id="L2924" rel="#L2924">2924</span>
<span id="L2925" rel="#L2925">2925</span>
<span id="L2926" rel="#L2926">2926</span>
<span id="L2927" rel="#L2927">2927</span>
<span id="L2928" rel="#L2928">2928</span>
<span id="L2929" rel="#L2929">2929</span>
<span id="L2930" rel="#L2930">2930</span>
<span id="L2931" rel="#L2931">2931</span>
<span id="L2932" rel="#L2932">2932</span>
<span id="L2933" rel="#L2933">2933</span>
<span id="L2934" rel="#L2934">2934</span>
<span id="L2935" rel="#L2935">2935</span>
<span id="L2936" rel="#L2936">2936</span>
<span id="L2937" rel="#L2937">2937</span>
<span id="L2938" rel="#L2938">2938</span>
<span id="L2939" rel="#L2939">2939</span>
<span id="L2940" rel="#L2940">2940</span>
<span id="L2941" rel="#L2941">2941</span>
<span id="L2942" rel="#L2942">2942</span>
<span id="L2943" rel="#L2943">2943</span>
<span id="L2944" rel="#L2944">2944</span>
<span id="L2945" rel="#L2945">2945</span>
<span id="L2946" rel="#L2946">2946</span>
<span id="L2947" rel="#L2947">2947</span>
<span id="L2948" rel="#L2948">2948</span>
<span id="L2949" rel="#L2949">2949</span>
<span id="L2950" rel="#L2950">2950</span>
<span id="L2951" rel="#L2951">2951</span>
<span id="L2952" rel="#L2952">2952</span>
<span id="L2953" rel="#L2953">2953</span>
<span id="L2954" rel="#L2954">2954</span>
<span id="L2955" rel="#L2955">2955</span>
<span id="L2956" rel="#L2956">2956</span>
<span id="L2957" rel="#L2957">2957</span>
<span id="L2958" rel="#L2958">2958</span>
<span id="L2959" rel="#L2959">2959</span>
<span id="L2960" rel="#L2960">2960</span>
<span id="L2961" rel="#L2961">2961</span>
<span id="L2962" rel="#L2962">2962</span>
<span id="L2963" rel="#L2963">2963</span>
<span id="L2964" rel="#L2964">2964</span>
<span id="L2965" rel="#L2965">2965</span>
<span id="L2966" rel="#L2966">2966</span>
<span id="L2967" rel="#L2967">2967</span>
<span id="L2968" rel="#L2968">2968</span>
<span id="L2969" rel="#L2969">2969</span>
<span id="L2970" rel="#L2970">2970</span>
<span id="L2971" rel="#L2971">2971</span>
<span id="L2972" rel="#L2972">2972</span>
<span id="L2973" rel="#L2973">2973</span>
<span id="L2974" rel="#L2974">2974</span>
<span id="L2975" rel="#L2975">2975</span>
<span id="L2976" rel="#L2976">2976</span>
<span id="L2977" rel="#L2977">2977</span>
<span id="L2978" rel="#L2978">2978</span>
<span id="L2979" rel="#L2979">2979</span>
<span id="L2980" rel="#L2980">2980</span>
<span id="L2981" rel="#L2981">2981</span>
<span id="L2982" rel="#L2982">2982</span>
<span id="L2983" rel="#L2983">2983</span>
<span id="L2984" rel="#L2984">2984</span>
<span id="L2985" rel="#L2985">2985</span>
<span id="L2986" rel="#L2986">2986</span>
<span id="L2987" rel="#L2987">2987</span>
<span id="L2988" rel="#L2988">2988</span>
<span id="L2989" rel="#L2989">2989</span>
<span id="L2990" rel="#L2990">2990</span>
<span id="L2991" rel="#L2991">2991</span>
<span id="L2992" rel="#L2992">2992</span>
<span id="L2993" rel="#L2993">2993</span>
<span id="L2994" rel="#L2994">2994</span>
<span id="L2995" rel="#L2995">2995</span>
<span id="L2996" rel="#L2996">2996</span>
<span id="L2997" rel="#L2997">2997</span>
<span id="L2998" rel="#L2998">2998</span>
<span id="L2999" rel="#L2999">2999</span>
<span id="L3000" rel="#L3000">3000</span>
<span id="L3001" rel="#L3001">3001</span>
<span id="L3002" rel="#L3002">3002</span>
<span id="L3003" rel="#L3003">3003</span>
<span id="L3004" rel="#L3004">3004</span>
<span id="L3005" rel="#L3005">3005</span>
<span id="L3006" rel="#L3006">3006</span>
<span id="L3007" rel="#L3007">3007</span>
<span id="L3008" rel="#L3008">3008</span>
<span id="L3009" rel="#L3009">3009</span>
<span id="L3010" rel="#L3010">3010</span>
<span id="L3011" rel="#L3011">3011</span>
<span id="L3012" rel="#L3012">3012</span>
<span id="L3013" rel="#L3013">3013</span>
<span id="L3014" rel="#L3014">3014</span>
<span id="L3015" rel="#L3015">3015</span>
<span id="L3016" rel="#L3016">3016</span>
<span id="L3017" rel="#L3017">3017</span>
<span id="L3018" rel="#L3018">3018</span>
<span id="L3019" rel="#L3019">3019</span>
<span id="L3020" rel="#L3020">3020</span>
<span id="L3021" rel="#L3021">3021</span>
<span id="L3022" rel="#L3022">3022</span>
<span id="L3023" rel="#L3023">3023</span>
<span id="L3024" rel="#L3024">3024</span>
<span id="L3025" rel="#L3025">3025</span>
<span id="L3026" rel="#L3026">3026</span>
<span id="L3027" rel="#L3027">3027</span>
<span id="L3028" rel="#L3028">3028</span>
<span id="L3029" rel="#L3029">3029</span>
<span id="L3030" rel="#L3030">3030</span>
<span id="L3031" rel="#L3031">3031</span>
<span id="L3032" rel="#L3032">3032</span>
<span id="L3033" rel="#L3033">3033</span>
<span id="L3034" rel="#L3034">3034</span>
<span id="L3035" rel="#L3035">3035</span>
<span id="L3036" rel="#L3036">3036</span>
<span id="L3037" rel="#L3037">3037</span>
<span id="L3038" rel="#L3038">3038</span>
<span id="L3039" rel="#L3039">3039</span>
<span id="L3040" rel="#L3040">3040</span>
<span id="L3041" rel="#L3041">3041</span>
<span id="L3042" rel="#L3042">3042</span>
<span id="L3043" rel="#L3043">3043</span>
<span id="L3044" rel="#L3044">3044</span>
<span id="L3045" rel="#L3045">3045</span>
<span id="L3046" rel="#L3046">3046</span>
<span id="L3047" rel="#L3047">3047</span>
<span id="L3048" rel="#L3048">3048</span>
<span id="L3049" rel="#L3049">3049</span>
<span id="L3050" rel="#L3050">3050</span>
<span id="L3051" rel="#L3051">3051</span>
<span id="L3052" rel="#L3052">3052</span>
<span id="L3053" rel="#L3053">3053</span>
<span id="L3054" rel="#L3054">3054</span>
<span id="L3055" rel="#L3055">3055</span>
<span id="L3056" rel="#L3056">3056</span>
<span id="L3057" rel="#L3057">3057</span>
<span id="L3058" rel="#L3058">3058</span>
<span id="L3059" rel="#L3059">3059</span>
<span id="L3060" rel="#L3060">3060</span>
<span id="L3061" rel="#L3061">3061</span>
<span id="L3062" rel="#L3062">3062</span>
<span id="L3063" rel="#L3063">3063</span>
<span id="L3064" rel="#L3064">3064</span>
<span id="L3065" rel="#L3065">3065</span>
<span id="L3066" rel="#L3066">3066</span>
<span id="L3067" rel="#L3067">3067</span>
<span id="L3068" rel="#L3068">3068</span>
<span id="L3069" rel="#L3069">3069</span>
<span id="L3070" rel="#L3070">3070</span>
<span id="L3071" rel="#L3071">3071</span>
<span id="L3072" rel="#L3072">3072</span>
<span id="L3073" rel="#L3073">3073</span>
<span id="L3074" rel="#L3074">3074</span>
<span id="L3075" rel="#L3075">3075</span>
<span id="L3076" rel="#L3076">3076</span>
<span id="L3077" rel="#L3077">3077</span>
<span id="L3078" rel="#L3078">3078</span>
<span id="L3079" rel="#L3079">3079</span>
<span id="L3080" rel="#L3080">3080</span>
<span id="L3081" rel="#L3081">3081</span>
<span id="L3082" rel="#L3082">3082</span>
<span id="L3083" rel="#L3083">3083</span>
<span id="L3084" rel="#L3084">3084</span>
<span id="L3085" rel="#L3085">3085</span>
<span id="L3086" rel="#L3086">3086</span>
<span id="L3087" rel="#L3087">3087</span>
<span id="L3088" rel="#L3088">3088</span>
<span id="L3089" rel="#L3089">3089</span>
<span id="L3090" rel="#L3090">3090</span>
<span id="L3091" rel="#L3091">3091</span>
<span id="L3092" rel="#L3092">3092</span>
<span id="L3093" rel="#L3093">3093</span>
<span id="L3094" rel="#L3094">3094</span>
<span id="L3095" rel="#L3095">3095</span>
<span id="L3096" rel="#L3096">3096</span>
<span id="L3097" rel="#L3097">3097</span>
<span id="L3098" rel="#L3098">3098</span>
<span id="L3099" rel="#L3099">3099</span>
<span id="L3100" rel="#L3100">3100</span>
<span id="L3101" rel="#L3101">3101</span>
<span id="L3102" rel="#L3102">3102</span>
<span id="L3103" rel="#L3103">3103</span>
<span id="L3104" rel="#L3104">3104</span>
<span id="L3105" rel="#L3105">3105</span>
<span id="L3106" rel="#L3106">3106</span>
<span id="L3107" rel="#L3107">3107</span>
<span id="L3108" rel="#L3108">3108</span>
<span id="L3109" rel="#L3109">3109</span>
<span id="L3110" rel="#L3110">3110</span>
<span id="L3111" rel="#L3111">3111</span>
<span id="L3112" rel="#L3112">3112</span>
<span id="L3113" rel="#L3113">3113</span>
<span id="L3114" rel="#L3114">3114</span>
<span id="L3115" rel="#L3115">3115</span>
<span id="L3116" rel="#L3116">3116</span>
<span id="L3117" rel="#L3117">3117</span>
<span id="L3118" rel="#L3118">3118</span>
<span id="L3119" rel="#L3119">3119</span>
<span id="L3120" rel="#L3120">3120</span>
<span id="L3121" rel="#L3121">3121</span>
<span id="L3122" rel="#L3122">3122</span>
<span id="L3123" rel="#L3123">3123</span>
<span id="L3124" rel="#L3124">3124</span>
<span id="L3125" rel="#L3125">3125</span>
<span id="L3126" rel="#L3126">3126</span>
<span id="L3127" rel="#L3127">3127</span>
<span id="L3128" rel="#L3128">3128</span>
<span id="L3129" rel="#L3129">3129</span>
<span id="L3130" rel="#L3130">3130</span>
<span id="L3131" rel="#L3131">3131</span>
<span id="L3132" rel="#L3132">3132</span>
<span id="L3133" rel="#L3133">3133</span>
<span id="L3134" rel="#L3134">3134</span>
<span id="L3135" rel="#L3135">3135</span>
<span id="L3136" rel="#L3136">3136</span>
<span id="L3137" rel="#L3137">3137</span>
<span id="L3138" rel="#L3138">3138</span>
<span id="L3139" rel="#L3139">3139</span>
<span id="L3140" rel="#L3140">3140</span>
<span id="L3141" rel="#L3141">3141</span>
<span id="L3142" rel="#L3142">3142</span>
<span id="L3143" rel="#L3143">3143</span>
<span id="L3144" rel="#L3144">3144</span>
<span id="L3145" rel="#L3145">3145</span>
<span id="L3146" rel="#L3146">3146</span>
<span id="L3147" rel="#L3147">3147</span>
<span id="L3148" rel="#L3148">3148</span>
<span id="L3149" rel="#L3149">3149</span>
<span id="L3150" rel="#L3150">3150</span>
<span id="L3151" rel="#L3151">3151</span>
<span id="L3152" rel="#L3152">3152</span>
<span id="L3153" rel="#L3153">3153</span>
<span id="L3154" rel="#L3154">3154</span>
<span id="L3155" rel="#L3155">3155</span>
<span id="L3156" rel="#L3156">3156</span>
<span id="L3157" rel="#L3157">3157</span>
<span id="L3158" rel="#L3158">3158</span>
<span id="L3159" rel="#L3159">3159</span>
<span id="L3160" rel="#L3160">3160</span>
<span id="L3161" rel="#L3161">3161</span>
<span id="L3162" rel="#L3162">3162</span>
<span id="L3163" rel="#L3163">3163</span>
<span id="L3164" rel="#L3164">3164</span>
<span id="L3165" rel="#L3165">3165</span>
<span id="L3166" rel="#L3166">3166</span>
<span id="L3167" rel="#L3167">3167</span>
<span id="L3168" rel="#L3168">3168</span>
<span id="L3169" rel="#L3169">3169</span>
<span id="L3170" rel="#L3170">3170</span>
<span id="L3171" rel="#L3171">3171</span>
<span id="L3172" rel="#L3172">3172</span>
<span id="L3173" rel="#L3173">3173</span>
<span id="L3174" rel="#L3174">3174</span>
<span id="L3175" rel="#L3175">3175</span>
<span id="L3176" rel="#L3176">3176</span>
<span id="L3177" rel="#L3177">3177</span>
<span id="L3178" rel="#L3178">3178</span>
<span id="L3179" rel="#L3179">3179</span>
<span id="L3180" rel="#L3180">3180</span>
<span id="L3181" rel="#L3181">3181</span>
<span id="L3182" rel="#L3182">3182</span>
<span id="L3183" rel="#L3183">3183</span>
<span id="L3184" rel="#L3184">3184</span>
<span id="L3185" rel="#L3185">3185</span>
<span id="L3186" rel="#L3186">3186</span>
<span id="L3187" rel="#L3187">3187</span>
<span id="L3188" rel="#L3188">3188</span>
<span id="L3189" rel="#L3189">3189</span>
<span id="L3190" rel="#L3190">3190</span>
<span id="L3191" rel="#L3191">3191</span>
<span id="L3192" rel="#L3192">3192</span>
<span id="L3193" rel="#L3193">3193</span>
<span id="L3194" rel="#L3194">3194</span>
<span id="L3195" rel="#L3195">3195</span>
<span id="L3196" rel="#L3196">3196</span>
<span id="L3197" rel="#L3197">3197</span>
<span id="L3198" rel="#L3198">3198</span>
<span id="L3199" rel="#L3199">3199</span>
<span id="L3200" rel="#L3200">3200</span>
<span id="L3201" rel="#L3201">3201</span>
<span id="L3202" rel="#L3202">3202</span>
<span id="L3203" rel="#L3203">3203</span>
<span id="L3204" rel="#L3204">3204</span>
<span id="L3205" rel="#L3205">3205</span>
<span id="L3206" rel="#L3206">3206</span>
<span id="L3207" rel="#L3207">3207</span>
<span id="L3208" rel="#L3208">3208</span>
<span id="L3209" rel="#L3209">3209</span>
<span id="L3210" rel="#L3210">3210</span>
<span id="L3211" rel="#L3211">3211</span>
<span id="L3212" rel="#L3212">3212</span>
<span id="L3213" rel="#L3213">3213</span>
<span id="L3214" rel="#L3214">3214</span>
<span id="L3215" rel="#L3215">3215</span>
<span id="L3216" rel="#L3216">3216</span>
<span id="L3217" rel="#L3217">3217</span>
<span id="L3218" rel="#L3218">3218</span>
<span id="L3219" rel="#L3219">3219</span>
<span id="L3220" rel="#L3220">3220</span>
<span id="L3221" rel="#L3221">3221</span>
<span id="L3222" rel="#L3222">3222</span>
<span id="L3223" rel="#L3223">3223</span>
<span id="L3224" rel="#L3224">3224</span>
<span id="L3225" rel="#L3225">3225</span>
<span id="L3226" rel="#L3226">3226</span>
<span id="L3227" rel="#L3227">3227</span>
<span id="L3228" rel="#L3228">3228</span>
<span id="L3229" rel="#L3229">3229</span>
<span id="L3230" rel="#L3230">3230</span>
<span id="L3231" rel="#L3231">3231</span>
<span id="L3232" rel="#L3232">3232</span>
<span id="L3233" rel="#L3233">3233</span>
<span id="L3234" rel="#L3234">3234</span>
<span id="L3235" rel="#L3235">3235</span>
<span id="L3236" rel="#L3236">3236</span>
<span id="L3237" rel="#L3237">3237</span>
<span id="L3238" rel="#L3238">3238</span>
<span id="L3239" rel="#L3239">3239</span>
<span id="L3240" rel="#L3240">3240</span>
<span id="L3241" rel="#L3241">3241</span>
<span id="L3242" rel="#L3242">3242</span>
<span id="L3243" rel="#L3243">3243</span>
<span id="L3244" rel="#L3244">3244</span>
<span id="L3245" rel="#L3245">3245</span>
<span id="L3246" rel="#L3246">3246</span>
<span id="L3247" rel="#L3247">3247</span>
<span id="L3248" rel="#L3248">3248</span>
<span id="L3249" rel="#L3249">3249</span>
<span id="L3250" rel="#L3250">3250</span>
<span id="L3251" rel="#L3251">3251</span>
<span id="L3252" rel="#L3252">3252</span>
<span id="L3253" rel="#L3253">3253</span>
<span id="L3254" rel="#L3254">3254</span>
<span id="L3255" rel="#L3255">3255</span>
<span id="L3256" rel="#L3256">3256</span>
<span id="L3257" rel="#L3257">3257</span>
<span id="L3258" rel="#L3258">3258</span>
<span id="L3259" rel="#L3259">3259</span>
<span id="L3260" rel="#L3260">3260</span>
<span id="L3261" rel="#L3261">3261</span>
<span id="L3262" rel="#L3262">3262</span>
<span id="L3263" rel="#L3263">3263</span>
<span id="L3264" rel="#L3264">3264</span>
<span id="L3265" rel="#L3265">3265</span>
<span id="L3266" rel="#L3266">3266</span>
<span id="L3267" rel="#L3267">3267</span>
<span id="L3268" rel="#L3268">3268</span>
<span id="L3269" rel="#L3269">3269</span>
<span id="L3270" rel="#L3270">3270</span>
<span id="L3271" rel="#L3271">3271</span>
<span id="L3272" rel="#L3272">3272</span>
<span id="L3273" rel="#L3273">3273</span>
<span id="L3274" rel="#L3274">3274</span>
<span id="L3275" rel="#L3275">3275</span>
<span id="L3276" rel="#L3276">3276</span>
<span id="L3277" rel="#L3277">3277</span>
<span id="L3278" rel="#L3278">3278</span>
<span id="L3279" rel="#L3279">3279</span>
<span id="L3280" rel="#L3280">3280</span>
<span id="L3281" rel="#L3281">3281</span>
<span id="L3282" rel="#L3282">3282</span>
<span id="L3283" rel="#L3283">3283</span>
<span id="L3284" rel="#L3284">3284</span>
<span id="L3285" rel="#L3285">3285</span>
<span id="L3286" rel="#L3286">3286</span>
<span id="L3287" rel="#L3287">3287</span>
<span id="L3288" rel="#L3288">3288</span>
<span id="L3289" rel="#L3289">3289</span>
<span id="L3290" rel="#L3290">3290</span>
<span id="L3291" rel="#L3291">3291</span>
<span id="L3292" rel="#L3292">3292</span>
<span id="L3293" rel="#L3293">3293</span>
<span id="L3294" rel="#L3294">3294</span>
<span id="L3295" rel="#L3295">3295</span>
<span id="L3296" rel="#L3296">3296</span>
<span id="L3297" rel="#L3297">3297</span>
<span id="L3298" rel="#L3298">3298</span>
<span id="L3299" rel="#L3299">3299</span>
<span id="L3300" rel="#L3300">3300</span>
<span id="L3301" rel="#L3301">3301</span>
<span id="L3302" rel="#L3302">3302</span>
<span id="L3303" rel="#L3303">3303</span>
<span id="L3304" rel="#L3304">3304</span>
<span id="L3305" rel="#L3305">3305</span>
<span id="L3306" rel="#L3306">3306</span>
<span id="L3307" rel="#L3307">3307</span>
<span id="L3308" rel="#L3308">3308</span>
<span id="L3309" rel="#L3309">3309</span>
<span id="L3310" rel="#L3310">3310</span>
<span id="L3311" rel="#L3311">3311</span>
<span id="L3312" rel="#L3312">3312</span>
<span id="L3313" rel="#L3313">3313</span>
<span id="L3314" rel="#L3314">3314</span>
<span id="L3315" rel="#L3315">3315</span>
<span id="L3316" rel="#L3316">3316</span>
<span id="L3317" rel="#L3317">3317</span>
<span id="L3318" rel="#L3318">3318</span>
<span id="L3319" rel="#L3319">3319</span>
<span id="L3320" rel="#L3320">3320</span>
<span id="L3321" rel="#L3321">3321</span>
<span id="L3322" rel="#L3322">3322</span>
<span id="L3323" rel="#L3323">3323</span>
<span id="L3324" rel="#L3324">3324</span>
<span id="L3325" rel="#L3325">3325</span>
<span id="L3326" rel="#L3326">3326</span>
<span id="L3327" rel="#L3327">3327</span>
<span id="L3328" rel="#L3328">3328</span>
<span id="L3329" rel="#L3329">3329</span>
<span id="L3330" rel="#L3330">3330</span>
<span id="L3331" rel="#L3331">3331</span>
<span id="L3332" rel="#L3332">3332</span>
<span id="L3333" rel="#L3333">3333</span>
<span id="L3334" rel="#L3334">3334</span>
<span id="L3335" rel="#L3335">3335</span>
<span id="L3336" rel="#L3336">3336</span>
<span id="L3337" rel="#L3337">3337</span>
<span id="L3338" rel="#L3338">3338</span>
<span id="L3339" rel="#L3339">3339</span>
<span id="L3340" rel="#L3340">3340</span>
<span id="L3341" rel="#L3341">3341</span>
<span id="L3342" rel="#L3342">3342</span>
<span id="L3343" rel="#L3343">3343</span>
<span id="L3344" rel="#L3344">3344</span>
<span id="L3345" rel="#L3345">3345</span>
<span id="L3346" rel="#L3346">3346</span>
<span id="L3347" rel="#L3347">3347</span>
<span id="L3348" rel="#L3348">3348</span>
<span id="L3349" rel="#L3349">3349</span>
<span id="L3350" rel="#L3350">3350</span>
<span id="L3351" rel="#L3351">3351</span>
<span id="L3352" rel="#L3352">3352</span>
<span id="L3353" rel="#L3353">3353</span>
<span id="L3354" rel="#L3354">3354</span>
<span id="L3355" rel="#L3355">3355</span>
<span id="L3356" rel="#L3356">3356</span>
<span id="L3357" rel="#L3357">3357</span>
<span id="L3358" rel="#L3358">3358</span>
<span id="L3359" rel="#L3359">3359</span>
<span id="L3360" rel="#L3360">3360</span>
<span id="L3361" rel="#L3361">3361</span>
<span id="L3362" rel="#L3362">3362</span>
<span id="L3363" rel="#L3363">3363</span>
<span id="L3364" rel="#L3364">3364</span>
<span id="L3365" rel="#L3365">3365</span>
<span id="L3366" rel="#L3366">3366</span>
<span id="L3367" rel="#L3367">3367</span>
<span id="L3368" rel="#L3368">3368</span>
<span id="L3369" rel="#L3369">3369</span>
<span id="L3370" rel="#L3370">3370</span>
<span id="L3371" rel="#L3371">3371</span>
<span id="L3372" rel="#L3372">3372</span>
<span id="L3373" rel="#L3373">3373</span>
<span id="L3374" rel="#L3374">3374</span>
<span id="L3375" rel="#L3375">3375</span>
<span id="L3376" rel="#L3376">3376</span>
<span id="L3377" rel="#L3377">3377</span>
<span id="L3378" rel="#L3378">3378</span>
<span id="L3379" rel="#L3379">3379</span>
<span id="L3380" rel="#L3380">3380</span>
<span id="L3381" rel="#L3381">3381</span>
<span id="L3382" rel="#L3382">3382</span>
<span id="L3383" rel="#L3383">3383</span>
<span id="L3384" rel="#L3384">3384</span>
<span id="L3385" rel="#L3385">3385</span>
<span id="L3386" rel="#L3386">3386</span>
<span id="L3387" rel="#L3387">3387</span>
<span id="L3388" rel="#L3388">3388</span>
<span id="L3389" rel="#L3389">3389</span>
<span id="L3390" rel="#L3390">3390</span>
<span id="L3391" rel="#L3391">3391</span>
<span id="L3392" rel="#L3392">3392</span>
<span id="L3393" rel="#L3393">3393</span>
<span id="L3394" rel="#L3394">3394</span>
<span id="L3395" rel="#L3395">3395</span>
<span id="L3396" rel="#L3396">3396</span>
<span id="L3397" rel="#L3397">3397</span>
<span id="L3398" rel="#L3398">3398</span>
<span id="L3399" rel="#L3399">3399</span>
<span id="L3400" rel="#L3400">3400</span>
<span id="L3401" rel="#L3401">3401</span>
<span id="L3402" rel="#L3402">3402</span>
<span id="L3403" rel="#L3403">3403</span>
<span id="L3404" rel="#L3404">3404</span>
<span id="L3405" rel="#L3405">3405</span>
<span id="L3406" rel="#L3406">3406</span>
<span id="L3407" rel="#L3407">3407</span>
<span id="L3408" rel="#L3408">3408</span>
<span id="L3409" rel="#L3409">3409</span>
<span id="L3410" rel="#L3410">3410</span>
<span id="L3411" rel="#L3411">3411</span>
<span id="L3412" rel="#L3412">3412</span>
<span id="L3413" rel="#L3413">3413</span>
<span id="L3414" rel="#L3414">3414</span>
<span id="L3415" rel="#L3415">3415</span>
<span id="L3416" rel="#L3416">3416</span>
<span id="L3417" rel="#L3417">3417</span>
<span id="L3418" rel="#L3418">3418</span>
<span id="L3419" rel="#L3419">3419</span>
<span id="L3420" rel="#L3420">3420</span>
<span id="L3421" rel="#L3421">3421</span>
<span id="L3422" rel="#L3422">3422</span>
<span id="L3423" rel="#L3423">3423</span>
<span id="L3424" rel="#L3424">3424</span>
<span id="L3425" rel="#L3425">3425</span>
<span id="L3426" rel="#L3426">3426</span>
<span id="L3427" rel="#L3427">3427</span>
<span id="L3428" rel="#L3428">3428</span>
<span id="L3429" rel="#L3429">3429</span>
<span id="L3430" rel="#L3430">3430</span>
<span id="L3431" rel="#L3431">3431</span>
<span id="L3432" rel="#L3432">3432</span>
<span id="L3433" rel="#L3433">3433</span>
<span id="L3434" rel="#L3434">3434</span>
<span id="L3435" rel="#L3435">3435</span>
<span id="L3436" rel="#L3436">3436</span>
<span id="L3437" rel="#L3437">3437</span>
<span id="L3438" rel="#L3438">3438</span>
<span id="L3439" rel="#L3439">3439</span>
<span id="L3440" rel="#L3440">3440</span>
<span id="L3441" rel="#L3441">3441</span>
<span id="L3442" rel="#L3442">3442</span>
<span id="L3443" rel="#L3443">3443</span>
<span id="L3444" rel="#L3444">3444</span>
<span id="L3445" rel="#L3445">3445</span>
<span id="L3446" rel="#L3446">3446</span>
<span id="L3447" rel="#L3447">3447</span>
<span id="L3448" rel="#L3448">3448</span>
<span id="L3449" rel="#L3449">3449</span>
<span id="L3450" rel="#L3450">3450</span>
<span id="L3451" rel="#L3451">3451</span>
<span id="L3452" rel="#L3452">3452</span>
<span id="L3453" rel="#L3453">3453</span>
<span id="L3454" rel="#L3454">3454</span>
<span id="L3455" rel="#L3455">3455</span>
<span id="L3456" rel="#L3456">3456</span>
<span id="L3457" rel="#L3457">3457</span>
<span id="L3458" rel="#L3458">3458</span>
<span id="L3459" rel="#L3459">3459</span>
<span id="L3460" rel="#L3460">3460</span>
<span id="L3461" rel="#L3461">3461</span>
<span id="L3462" rel="#L3462">3462</span>
<span id="L3463" rel="#L3463">3463</span>
<span id="L3464" rel="#L3464">3464</span>
<span id="L3465" rel="#L3465">3465</span>
<span id="L3466" rel="#L3466">3466</span>
<span id="L3467" rel="#L3467">3467</span>
<span id="L3468" rel="#L3468">3468</span>
<span id="L3469" rel="#L3469">3469</span>
<span id="L3470" rel="#L3470">3470</span>
<span id="L3471" rel="#L3471">3471</span>
<span id="L3472" rel="#L3472">3472</span>
<span id="L3473" rel="#L3473">3473</span>
<span id="L3474" rel="#L3474">3474</span>
<span id="L3475" rel="#L3475">3475</span>
<span id="L3476" rel="#L3476">3476</span>
<span id="L3477" rel="#L3477">3477</span>
<span id="L3478" rel="#L3478">3478</span>
<span id="L3479" rel="#L3479">3479</span>
<span id="L3480" rel="#L3480">3480</span>
<span id="L3481" rel="#L3481">3481</span>
<span id="L3482" rel="#L3482">3482</span>
<span id="L3483" rel="#L3483">3483</span>
<span id="L3484" rel="#L3484">3484</span>
<span id="L3485" rel="#L3485">3485</span>
<span id="L3486" rel="#L3486">3486</span>
<span id="L3487" rel="#L3487">3487</span>
<span id="L3488" rel="#L3488">3488</span>
<span id="L3489" rel="#L3489">3489</span>
<span id="L3490" rel="#L3490">3490</span>
<span id="L3491" rel="#L3491">3491</span>
<span id="L3492" rel="#L3492">3492</span>
<span id="L3493" rel="#L3493">3493</span>
<span id="L3494" rel="#L3494">3494</span>
<span id="L3495" rel="#L3495">3495</span>
<span id="L3496" rel="#L3496">3496</span>
<span id="L3497" rel="#L3497">3497</span>
<span id="L3498" rel="#L3498">3498</span>
<span id="L3499" rel="#L3499">3499</span>
<span id="L3500" rel="#L3500">3500</span>
<span id="L3501" rel="#L3501">3501</span>
<span id="L3502" rel="#L3502">3502</span>
<span id="L3503" rel="#L3503">3503</span>
<span id="L3504" rel="#L3504">3504</span>
<span id="L3505" rel="#L3505">3505</span>
<span id="L3506" rel="#L3506">3506</span>
<span id="L3507" rel="#L3507">3507</span>
<span id="L3508" rel="#L3508">3508</span>
<span id="L3509" rel="#L3509">3509</span>
<span id="L3510" rel="#L3510">3510</span>
<span id="L3511" rel="#L3511">3511</span>
<span id="L3512" rel="#L3512">3512</span>
<span id="L3513" rel="#L3513">3513</span>
<span id="L3514" rel="#L3514">3514</span>
<span id="L3515" rel="#L3515">3515</span>
<span id="L3516" rel="#L3516">3516</span>
<span id="L3517" rel="#L3517">3517</span>
<span id="L3518" rel="#L3518">3518</span>
<span id="L3519" rel="#L3519">3519</span>
<span id="L3520" rel="#L3520">3520</span>
<span id="L3521" rel="#L3521">3521</span>
<span id="L3522" rel="#L3522">3522</span>
<span id="L3523" rel="#L3523">3523</span>
<span id="L3524" rel="#L3524">3524</span>
<span id="L3525" rel="#L3525">3525</span>
<span id="L3526" rel="#L3526">3526</span>
<span id="L3527" rel="#L3527">3527</span>
<span id="L3528" rel="#L3528">3528</span>
<span id="L3529" rel="#L3529">3529</span>
<span id="L3530" rel="#L3530">3530</span>
<span id="L3531" rel="#L3531">3531</span>
<span id="L3532" rel="#L3532">3532</span>
<span id="L3533" rel="#L3533">3533</span>
<span id="L3534" rel="#L3534">3534</span>
<span id="L3535" rel="#L3535">3535</span>
<span id="L3536" rel="#L3536">3536</span>
<span id="L3537" rel="#L3537">3537</span>
<span id="L3538" rel="#L3538">3538</span>
<span id="L3539" rel="#L3539">3539</span>
<span id="L3540" rel="#L3540">3540</span>
<span id="L3541" rel="#L3541">3541</span>
<span id="L3542" rel="#L3542">3542</span>
<span id="L3543" rel="#L3543">3543</span>
<span id="L3544" rel="#L3544">3544</span>
<span id="L3545" rel="#L3545">3545</span>
<span id="L3546" rel="#L3546">3546</span>
<span id="L3547" rel="#L3547">3547</span>
<span id="L3548" rel="#L3548">3548</span>
<span id="L3549" rel="#L3549">3549</span>
<span id="L3550" rel="#L3550">3550</span>
<span id="L3551" rel="#L3551">3551</span>
<span id="L3552" rel="#L3552">3552</span>
<span id="L3553" rel="#L3553">3553</span>
<span id="L3554" rel="#L3554">3554</span>
<span id="L3555" rel="#L3555">3555</span>
<span id="L3556" rel="#L3556">3556</span>
<span id="L3557" rel="#L3557">3557</span>
<span id="L3558" rel="#L3558">3558</span>
<span id="L3559" rel="#L3559">3559</span>
<span id="L3560" rel="#L3560">3560</span>
<span id="L3561" rel="#L3561">3561</span>
<span id="L3562" rel="#L3562">3562</span>
<span id="L3563" rel="#L3563">3563</span>
<span id="L3564" rel="#L3564">3564</span>
<span id="L3565" rel="#L3565">3565</span>
<span id="L3566" rel="#L3566">3566</span>
<span id="L3567" rel="#L3567">3567</span>
<span id="L3568" rel="#L3568">3568</span>
<span id="L3569" rel="#L3569">3569</span>
<span id="L3570" rel="#L3570">3570</span>
<span id="L3571" rel="#L3571">3571</span>
<span id="L3572" rel="#L3572">3572</span>
<span id="L3573" rel="#L3573">3573</span>
<span id="L3574" rel="#L3574">3574</span>
<span id="L3575" rel="#L3575">3575</span>
<span id="L3576" rel="#L3576">3576</span>
<span id="L3577" rel="#L3577">3577</span>
<span id="L3578" rel="#L3578">3578</span>
<span id="L3579" rel="#L3579">3579</span>
<span id="L3580" rel="#L3580">3580</span>
<span id="L3581" rel="#L3581">3581</span>
<span id="L3582" rel="#L3582">3582</span>
<span id="L3583" rel="#L3583">3583</span>
<span id="L3584" rel="#L3584">3584</span>
<span id="L3585" rel="#L3585">3585</span>
<span id="L3586" rel="#L3586">3586</span>
<span id="L3587" rel="#L3587">3587</span>
<span id="L3588" rel="#L3588">3588</span>
<span id="L3589" rel="#L3589">3589</span>
<span id="L3590" rel="#L3590">3590</span>
<span id="L3591" rel="#L3591">3591</span>
<span id="L3592" rel="#L3592">3592</span>
<span id="L3593" rel="#L3593">3593</span>
<span id="L3594" rel="#L3594">3594</span>
<span id="L3595" rel="#L3595">3595</span>
<span id="L3596" rel="#L3596">3596</span>
<span id="L3597" rel="#L3597">3597</span>
<span id="L3598" rel="#L3598">3598</span>
<span id="L3599" rel="#L3599">3599</span>
<span id="L3600" rel="#L3600">3600</span>
<span id="L3601" rel="#L3601">3601</span>
<span id="L3602" rel="#L3602">3602</span>
<span id="L3603" rel="#L3603">3603</span>
<span id="L3604" rel="#L3604">3604</span>
<span id="L3605" rel="#L3605">3605</span>
<span id="L3606" rel="#L3606">3606</span>
<span id="L3607" rel="#L3607">3607</span>
<span id="L3608" rel="#L3608">3608</span>
<span id="L3609" rel="#L3609">3609</span>
<span id="L3610" rel="#L3610">3610</span>
<span id="L3611" rel="#L3611">3611</span>
<span id="L3612" rel="#L3612">3612</span>
<span id="L3613" rel="#L3613">3613</span>
<span id="L3614" rel="#L3614">3614</span>
<span id="L3615" rel="#L3615">3615</span>
<span id="L3616" rel="#L3616">3616</span>
<span id="L3617" rel="#L3617">3617</span>
<span id="L3618" rel="#L3618">3618</span>
<span id="L3619" rel="#L3619">3619</span>
<span id="L3620" rel="#L3620">3620</span>
<span id="L3621" rel="#L3621">3621</span>
<span id="L3622" rel="#L3622">3622</span>
<span id="L3623" rel="#L3623">3623</span>
<span id="L3624" rel="#L3624">3624</span>
<span id="L3625" rel="#L3625">3625</span>
<span id="L3626" rel="#L3626">3626</span>
<span id="L3627" rel="#L3627">3627</span>
<span id="L3628" rel="#L3628">3628</span>
<span id="L3629" rel="#L3629">3629</span>
<span id="L3630" rel="#L3630">3630</span>
<span id="L3631" rel="#L3631">3631</span>
<span id="L3632" rel="#L3632">3632</span>
<span id="L3633" rel="#L3633">3633</span>
<span id="L3634" rel="#L3634">3634</span>
<span id="L3635" rel="#L3635">3635</span>
<span id="L3636" rel="#L3636">3636</span>
<span id="L3637" rel="#L3637">3637</span>
<span id="L3638" rel="#L3638">3638</span>
<span id="L3639" rel="#L3639">3639</span>
<span id="L3640" rel="#L3640">3640</span>
<span id="L3641" rel="#L3641">3641</span>
<span id="L3642" rel="#L3642">3642</span>
<span id="L3643" rel="#L3643">3643</span>
<span id="L3644" rel="#L3644">3644</span>
<span id="L3645" rel="#L3645">3645</span>
<span id="L3646" rel="#L3646">3646</span>
<span id="L3647" rel="#L3647">3647</span>
<span id="L3648" rel="#L3648">3648</span>
<span id="L3649" rel="#L3649">3649</span>
<span id="L3650" rel="#L3650">3650</span>
<span id="L3651" rel="#L3651">3651</span>
<span id="L3652" rel="#L3652">3652</span>
<span id="L3653" rel="#L3653">3653</span>
<span id="L3654" rel="#L3654">3654</span>
<span id="L3655" rel="#L3655">3655</span>
<span id="L3656" rel="#L3656">3656</span>
<span id="L3657" rel="#L3657">3657</span>
<span id="L3658" rel="#L3658">3658</span>
<span id="L3659" rel="#L3659">3659</span>
<span id="L3660" rel="#L3660">3660</span>
<span id="L3661" rel="#L3661">3661</span>
<span id="L3662" rel="#L3662">3662</span>
<span id="L3663" rel="#L3663">3663</span>
<span id="L3664" rel="#L3664">3664</span>
<span id="L3665" rel="#L3665">3665</span>
<span id="L3666" rel="#L3666">3666</span>
<span id="L3667" rel="#L3667">3667</span>
<span id="L3668" rel="#L3668">3668</span>
<span id="L3669" rel="#L3669">3669</span>
<span id="L3670" rel="#L3670">3670</span>
<span id="L3671" rel="#L3671">3671</span>
<span id="L3672" rel="#L3672">3672</span>
<span id="L3673" rel="#L3673">3673</span>
<span id="L3674" rel="#L3674">3674</span>
<span id="L3675" rel="#L3675">3675</span>
<span id="L3676" rel="#L3676">3676</span>
<span id="L3677" rel="#L3677">3677</span>
<span id="L3678" rel="#L3678">3678</span>
<span id="L3679" rel="#L3679">3679</span>
<span id="L3680" rel="#L3680">3680</span>
<span id="L3681" rel="#L3681">3681</span>
<span id="L3682" rel="#L3682">3682</span>
<span id="L3683" rel="#L3683">3683</span>
<span id="L3684" rel="#L3684">3684</span>
<span id="L3685" rel="#L3685">3685</span>
<span id="L3686" rel="#L3686">3686</span>
<span id="L3687" rel="#L3687">3687</span>
<span id="L3688" rel="#L3688">3688</span>
<span id="L3689" rel="#L3689">3689</span>
<span id="L3690" rel="#L3690">3690</span>
<span id="L3691" rel="#L3691">3691</span>
<span id="L3692" rel="#L3692">3692</span>
<span id="L3693" rel="#L3693">3693</span>
<span id="L3694" rel="#L3694">3694</span>
<span id="L3695" rel="#L3695">3695</span>
<span id="L3696" rel="#L3696">3696</span>
<span id="L3697" rel="#L3697">3697</span>
<span id="L3698" rel="#L3698">3698</span>
<span id="L3699" rel="#L3699">3699</span>
<span id="L3700" rel="#L3700">3700</span>
<span id="L3701" rel="#L3701">3701</span>
<span id="L3702" rel="#L3702">3702</span>
<span id="L3703" rel="#L3703">3703</span>
<span id="L3704" rel="#L3704">3704</span>
<span id="L3705" rel="#L3705">3705</span>
<span id="L3706" rel="#L3706">3706</span>
<span id="L3707" rel="#L3707">3707</span>
<span id="L3708" rel="#L3708">3708</span>
<span id="L3709" rel="#L3709">3709</span>
<span id="L3710" rel="#L3710">3710</span>
<span id="L3711" rel="#L3711">3711</span>
<span id="L3712" rel="#L3712">3712</span>
<span id="L3713" rel="#L3713">3713</span>
<span id="L3714" rel="#L3714">3714</span>
<span id="L3715" rel="#L3715">3715</span>
<span id="L3716" rel="#L3716">3716</span>
<span id="L3717" rel="#L3717">3717</span>
<span id="L3718" rel="#L3718">3718</span>
<span id="L3719" rel="#L3719">3719</span>
<span id="L3720" rel="#L3720">3720</span>
<span id="L3721" rel="#L3721">3721</span>
<span id="L3722" rel="#L3722">3722</span>
<span id="L3723" rel="#L3723">3723</span>
<span id="L3724" rel="#L3724">3724</span>
<span id="L3725" rel="#L3725">3725</span>
<span id="L3726" rel="#L3726">3726</span>
<span id="L3727" rel="#L3727">3727</span>
<span id="L3728" rel="#L3728">3728</span>
<span id="L3729" rel="#L3729">3729</span>
<span id="L3730" rel="#L3730">3730</span>
<span id="L3731" rel="#L3731">3731</span>
<span id="L3732" rel="#L3732">3732</span>
<span id="L3733" rel="#L3733">3733</span>
<span id="L3734" rel="#L3734">3734</span>
<span id="L3735" rel="#L3735">3735</span>
<span id="L3736" rel="#L3736">3736</span>
<span id="L3737" rel="#L3737">3737</span>
<span id="L3738" rel="#L3738">3738</span>
<span id="L3739" rel="#L3739">3739</span>
<span id="L3740" rel="#L3740">3740</span>
<span id="L3741" rel="#L3741">3741</span>
<span id="L3742" rel="#L3742">3742</span>
<span id="L3743" rel="#L3743">3743</span>
<span id="L3744" rel="#L3744">3744</span>
<span id="L3745" rel="#L3745">3745</span>
<span id="L3746" rel="#L3746">3746</span>
<span id="L3747" rel="#L3747">3747</span>
<span id="L3748" rel="#L3748">3748</span>
<span id="L3749" rel="#L3749">3749</span>
<span id="L3750" rel="#L3750">3750</span>
<span id="L3751" rel="#L3751">3751</span>
<span id="L3752" rel="#L3752">3752</span>
<span id="L3753" rel="#L3753">3753</span>
<span id="L3754" rel="#L3754">3754</span>
<span id="L3755" rel="#L3755">3755</span>
<span id="L3756" rel="#L3756">3756</span>
<span id="L3757" rel="#L3757">3757</span>
<span id="L3758" rel="#L3758">3758</span>
<span id="L3759" rel="#L3759">3759</span>
<span id="L3760" rel="#L3760">3760</span>
<span id="L3761" rel="#L3761">3761</span>
<span id="L3762" rel="#L3762">3762</span>
<span id="L3763" rel="#L3763">3763</span>
<span id="L3764" rel="#L3764">3764</span>
<span id="L3765" rel="#L3765">3765</span>
<span id="L3766" rel="#L3766">3766</span>
<span id="L3767" rel="#L3767">3767</span>
<span id="L3768" rel="#L3768">3768</span>
<span id="L3769" rel="#L3769">3769</span>
<span id="L3770" rel="#L3770">3770</span>
<span id="L3771" rel="#L3771">3771</span>
<span id="L3772" rel="#L3772">3772</span>
<span id="L3773" rel="#L3773">3773</span>
<span id="L3774" rel="#L3774">3774</span>
<span id="L3775" rel="#L3775">3775</span>
<span id="L3776" rel="#L3776">3776</span>
<span id="L3777" rel="#L3777">3777</span>
<span id="L3778" rel="#L3778">3778</span>
<span id="L3779" rel="#L3779">3779</span>
<span id="L3780" rel="#L3780">3780</span>
<span id="L3781" rel="#L3781">3781</span>
<span id="L3782" rel="#L3782">3782</span>
<span id="L3783" rel="#L3783">3783</span>
<span id="L3784" rel="#L3784">3784</span>
<span id="L3785" rel="#L3785">3785</span>
<span id="L3786" rel="#L3786">3786</span>
<span id="L3787" rel="#L3787">3787</span>
<span id="L3788" rel="#L3788">3788</span>
<span id="L3789" rel="#L3789">3789</span>
<span id="L3790" rel="#L3790">3790</span>
<span id="L3791" rel="#L3791">3791</span>
<span id="L3792" rel="#L3792">3792</span>
<span id="L3793" rel="#L3793">3793</span>
<span id="L3794" rel="#L3794">3794</span>
<span id="L3795" rel="#L3795">3795</span>
<span id="L3796" rel="#L3796">3796</span>
<span id="L3797" rel="#L3797">3797</span>
<span id="L3798" rel="#L3798">3798</span>
<span id="L3799" rel="#L3799">3799</span>
<span id="L3800" rel="#L3800">3800</span>
<span id="L3801" rel="#L3801">3801</span>
<span id="L3802" rel="#L3802">3802</span>
<span id="L3803" rel="#L3803">3803</span>
<span id="L3804" rel="#L3804">3804</span>
<span id="L3805" rel="#L3805">3805</span>
<span id="L3806" rel="#L3806">3806</span>
<span id="L3807" rel="#L3807">3807</span>
<span id="L3808" rel="#L3808">3808</span>
<span id="L3809" rel="#L3809">3809</span>
<span id="L3810" rel="#L3810">3810</span>
<span id="L3811" rel="#L3811">3811</span>
<span id="L3812" rel="#L3812">3812</span>
<span id="L3813" rel="#L3813">3813</span>
<span id="L3814" rel="#L3814">3814</span>
<span id="L3815" rel="#L3815">3815</span>
<span id="L3816" rel="#L3816">3816</span>
<span id="L3817" rel="#L3817">3817</span>
<span id="L3818" rel="#L3818">3818</span>
<span id="L3819" rel="#L3819">3819</span>
<span id="L3820" rel="#L3820">3820</span>
<span id="L3821" rel="#L3821">3821</span>
<span id="L3822" rel="#L3822">3822</span>
<span id="L3823" rel="#L3823">3823</span>
<span id="L3824" rel="#L3824">3824</span>
<span id="L3825" rel="#L3825">3825</span>
<span id="L3826" rel="#L3826">3826</span>
<span id="L3827" rel="#L3827">3827</span>
<span id="L3828" rel="#L3828">3828</span>
<span id="L3829" rel="#L3829">3829</span>
<span id="L3830" rel="#L3830">3830</span>
<span id="L3831" rel="#L3831">3831</span>
<span id="L3832" rel="#L3832">3832</span>
<span id="L3833" rel="#L3833">3833</span>
<span id="L3834" rel="#L3834">3834</span>
<span id="L3835" rel="#L3835">3835</span>
<span id="L3836" rel="#L3836">3836</span>
<span id="L3837" rel="#L3837">3837</span>
<span id="L3838" rel="#L3838">3838</span>
<span id="L3839" rel="#L3839">3839</span>
<span id="L3840" rel="#L3840">3840</span>
<span id="L3841" rel="#L3841">3841</span>
<span id="L3842" rel="#L3842">3842</span>
<span id="L3843" rel="#L3843">3843</span>
<span id="L3844" rel="#L3844">3844</span>
<span id="L3845" rel="#L3845">3845</span>
<span id="L3846" rel="#L3846">3846</span>
<span id="L3847" rel="#L3847">3847</span>
<span id="L3848" rel="#L3848">3848</span>
<span id="L3849" rel="#L3849">3849</span>
<span id="L3850" rel="#L3850">3850</span>
<span id="L3851" rel="#L3851">3851</span>
<span id="L3852" rel="#L3852">3852</span>
<span id="L3853" rel="#L3853">3853</span>
<span id="L3854" rel="#L3854">3854</span>
<span id="L3855" rel="#L3855">3855</span>
<span id="L3856" rel="#L3856">3856</span>
<span id="L3857" rel="#L3857">3857</span>
<span id="L3858" rel="#L3858">3858</span>
<span id="L3859" rel="#L3859">3859</span>
<span id="L3860" rel="#L3860">3860</span>
<span id="L3861" rel="#L3861">3861</span>
<span id="L3862" rel="#L3862">3862</span>
<span id="L3863" rel="#L3863">3863</span>
<span id="L3864" rel="#L3864">3864</span>
<span id="L3865" rel="#L3865">3865</span>
<span id="L3866" rel="#L3866">3866</span>
<span id="L3867" rel="#L3867">3867</span>
<span id="L3868" rel="#L3868">3868</span>
<span id="L3869" rel="#L3869">3869</span>
<span id="L3870" rel="#L3870">3870</span>
<span id="L3871" rel="#L3871">3871</span>
<span id="L3872" rel="#L3872">3872</span>
<span id="L3873" rel="#L3873">3873</span>
<span id="L3874" rel="#L3874">3874</span>
<span id="L3875" rel="#L3875">3875</span>
<span id="L3876" rel="#L3876">3876</span>
<span id="L3877" rel="#L3877">3877</span>
<span id="L3878" rel="#L3878">3878</span>
<span id="L3879" rel="#L3879">3879</span>
<span id="L3880" rel="#L3880">3880</span>
<span id="L3881" rel="#L3881">3881</span>
<span id="L3882" rel="#L3882">3882</span>
<span id="L3883" rel="#L3883">3883</span>
<span id="L3884" rel="#L3884">3884</span>
<span id="L3885" rel="#L3885">3885</span>
<span id="L3886" rel="#L3886">3886</span>
<span id="L3887" rel="#L3887">3887</span>
<span id="L3888" rel="#L3888">3888</span>
<span id="L3889" rel="#L3889">3889</span>
<span id="L3890" rel="#L3890">3890</span>
<span id="L3891" rel="#L3891">3891</span>
<span id="L3892" rel="#L3892">3892</span>
<span id="L3893" rel="#L3893">3893</span>
<span id="L3894" rel="#L3894">3894</span>
<span id="L3895" rel="#L3895">3895</span>
<span id="L3896" rel="#L3896">3896</span>
<span id="L3897" rel="#L3897">3897</span>
<span id="L3898" rel="#L3898">3898</span>
<span id="L3899" rel="#L3899">3899</span>
<span id="L3900" rel="#L3900">3900</span>
<span id="L3901" rel="#L3901">3901</span>
<span id="L3902" rel="#L3902">3902</span>
<span id="L3903" rel="#L3903">3903</span>
<span id="L3904" rel="#L3904">3904</span>
<span id="L3905" rel="#L3905">3905</span>
<span id="L3906" rel="#L3906">3906</span>
<span id="L3907" rel="#L3907">3907</span>
<span id="L3908" rel="#L3908">3908</span>
<span id="L3909" rel="#L3909">3909</span>
<span id="L3910" rel="#L3910">3910</span>
<span id="L3911" rel="#L3911">3911</span>
<span id="L3912" rel="#L3912">3912</span>
<span id="L3913" rel="#L3913">3913</span>
<span id="L3914" rel="#L3914">3914</span>
<span id="L3915" rel="#L3915">3915</span>
<span id="L3916" rel="#L3916">3916</span>
<span id="L3917" rel="#L3917">3917</span>
<span id="L3918" rel="#L3918">3918</span>
<span id="L3919" rel="#L3919">3919</span>
<span id="L3920" rel="#L3920">3920</span>
<span id="L3921" rel="#L3921">3921</span>
<span id="L3922" rel="#L3922">3922</span>
<span id="L3923" rel="#L3923">3923</span>
<span id="L3924" rel="#L3924">3924</span>
<span id="L3925" rel="#L3925">3925</span>
<span id="L3926" rel="#L3926">3926</span>
<span id="L3927" rel="#L3927">3927</span>
<span id="L3928" rel="#L3928">3928</span>
<span id="L3929" rel="#L3929">3929</span>
<span id="L3930" rel="#L3930">3930</span>
<span id="L3931" rel="#L3931">3931</span>
<span id="L3932" rel="#L3932">3932</span>
<span id="L3933" rel="#L3933">3933</span>
<span id="L3934" rel="#L3934">3934</span>
<span id="L3935" rel="#L3935">3935</span>
<span id="L3936" rel="#L3936">3936</span>
<span id="L3937" rel="#L3937">3937</span>
<span id="L3938" rel="#L3938">3938</span>
<span id="L3939" rel="#L3939">3939</span>
<span id="L3940" rel="#L3940">3940</span>
<span id="L3941" rel="#L3941">3941</span>
<span id="L3942" rel="#L3942">3942</span>
<span id="L3943" rel="#L3943">3943</span>
<span id="L3944" rel="#L3944">3944</span>
<span id="L3945" rel="#L3945">3945</span>
<span id="L3946" rel="#L3946">3946</span>
<span id="L3947" rel="#L3947">3947</span>
<span id="L3948" rel="#L3948">3948</span>
<span id="L3949" rel="#L3949">3949</span>
<span id="L3950" rel="#L3950">3950</span>
<span id="L3951" rel="#L3951">3951</span>
<span id="L3952" rel="#L3952">3952</span>
<span id="L3953" rel="#L3953">3953</span>
<span id="L3954" rel="#L3954">3954</span>
<span id="L3955" rel="#L3955">3955</span>
<span id="L3956" rel="#L3956">3956</span>
<span id="L3957" rel="#L3957">3957</span>
<span id="L3958" rel="#L3958">3958</span>
<span id="L3959" rel="#L3959">3959</span>
<span id="L3960" rel="#L3960">3960</span>
<span id="L3961" rel="#L3961">3961</span>
<span id="L3962" rel="#L3962">3962</span>
<span id="L3963" rel="#L3963">3963</span>
<span id="L3964" rel="#L3964">3964</span>
<span id="L3965" rel="#L3965">3965</span>
<span id="L3966" rel="#L3966">3966</span>
<span id="L3967" rel="#L3967">3967</span>
<span id="L3968" rel="#L3968">3968</span>
<span id="L3969" rel="#L3969">3969</span>
<span id="L3970" rel="#L3970">3970</span>
<span id="L3971" rel="#L3971">3971</span>
<span id="L3972" rel="#L3972">3972</span>
<span id="L3973" rel="#L3973">3973</span>
<span id="L3974" rel="#L3974">3974</span>
<span id="L3975" rel="#L3975">3975</span>
<span id="L3976" rel="#L3976">3976</span>
<span id="L3977" rel="#L3977">3977</span>
<span id="L3978" rel="#L3978">3978</span>
<span id="L3979" rel="#L3979">3979</span>
<span id="L3980" rel="#L3980">3980</span>
<span id="L3981" rel="#L3981">3981</span>
<span id="L3982" rel="#L3982">3982</span>
<span id="L3983" rel="#L3983">3983</span>
<span id="L3984" rel="#L3984">3984</span>
<span id="L3985" rel="#L3985">3985</span>
<span id="L3986" rel="#L3986">3986</span>
<span id="L3987" rel="#L3987">3987</span>
<span id="L3988" rel="#L3988">3988</span>
<span id="L3989" rel="#L3989">3989</span>
<span id="L3990" rel="#L3990">3990</span>
<span id="L3991" rel="#L3991">3991</span>
<span id="L3992" rel="#L3992">3992</span>
<span id="L3993" rel="#L3993">3993</span>
<span id="L3994" rel="#L3994">3994</span>
<span id="L3995" rel="#L3995">3995</span>
<span id="L3996" rel="#L3996">3996</span>
<span id="L3997" rel="#L3997">3997</span>
<span id="L3998" rel="#L3998">3998</span>
<span id="L3999" rel="#L3999">3999</span>
<span id="L4000" rel="#L4000">4000</span>
<span id="L4001" rel="#L4001">4001</span>
<span id="L4002" rel="#L4002">4002</span>
<span id="L4003" rel="#L4003">4003</span>
<span id="L4004" rel="#L4004">4004</span>
<span id="L4005" rel="#L4005">4005</span>
<span id="L4006" rel="#L4006">4006</span>
<span id="L4007" rel="#L4007">4007</span>
<span id="L4008" rel="#L4008">4008</span>
<span id="L4009" rel="#L4009">4009</span>
<span id="L4010" rel="#L4010">4010</span>
<span id="L4011" rel="#L4011">4011</span>
<span id="L4012" rel="#L4012">4012</span>
<span id="L4013" rel="#L4013">4013</span>
<span id="L4014" rel="#L4014">4014</span>
<span id="L4015" rel="#L4015">4015</span>
<span id="L4016" rel="#L4016">4016</span>
<span id="L4017" rel="#L4017">4017</span>
<span id="L4018" rel="#L4018">4018</span>
<span id="L4019" rel="#L4019">4019</span>
<span id="L4020" rel="#L4020">4020</span>
<span id="L4021" rel="#L4021">4021</span>
<span id="L4022" rel="#L4022">4022</span>
<span id="L4023" rel="#L4023">4023</span>
<span id="L4024" rel="#L4024">4024</span>
<span id="L4025" rel="#L4025">4025</span>
<span id="L4026" rel="#L4026">4026</span>
<span id="L4027" rel="#L4027">4027</span>
<span id="L4028" rel="#L4028">4028</span>
<span id="L4029" rel="#L4029">4029</span>
<span id="L4030" rel="#L4030">4030</span>
<span id="L4031" rel="#L4031">4031</span>
<span id="L4032" rel="#L4032">4032</span>
<span id="L4033" rel="#L4033">4033</span>
<span id="L4034" rel="#L4034">4034</span>
<span id="L4035" rel="#L4035">4035</span>
<span id="L4036" rel="#L4036">4036</span>
<span id="L4037" rel="#L4037">4037</span>
<span id="L4038" rel="#L4038">4038</span>
<span id="L4039" rel="#L4039">4039</span>
<span id="L4040" rel="#L4040">4040</span>
<span id="L4041" rel="#L4041">4041</span>
<span id="L4042" rel="#L4042">4042</span>
<span id="L4043" rel="#L4043">4043</span>
<span id="L4044" rel="#L4044">4044</span>
<span id="L4045" rel="#L4045">4045</span>
<span id="L4046" rel="#L4046">4046</span>
<span id="L4047" rel="#L4047">4047</span>
<span id="L4048" rel="#L4048">4048</span>
<span id="L4049" rel="#L4049">4049</span>
<span id="L4050" rel="#L4050">4050</span>
<span id="L4051" rel="#L4051">4051</span>
<span id="L4052" rel="#L4052">4052</span>
<span id="L4053" rel="#L4053">4053</span>
<span id="L4054" rel="#L4054">4054</span>
<span id="L4055" rel="#L4055">4055</span>
<span id="L4056" rel="#L4056">4056</span>
<span id="L4057" rel="#L4057">4057</span>
<span id="L4058" rel="#L4058">4058</span>
<span id="L4059" rel="#L4059">4059</span>
<span id="L4060" rel="#L4060">4060</span>
<span id="L4061" rel="#L4061">4061</span>
<span id="L4062" rel="#L4062">4062</span>
<span id="L4063" rel="#L4063">4063</span>
<span id="L4064" rel="#L4064">4064</span>
<span id="L4065" rel="#L4065">4065</span>
<span id="L4066" rel="#L4066">4066</span>
<span id="L4067" rel="#L4067">4067</span>
<span id="L4068" rel="#L4068">4068</span>
<span id="L4069" rel="#L4069">4069</span>
<span id="L4070" rel="#L4070">4070</span>
<span id="L4071" rel="#L4071">4071</span>
<span id="L4072" rel="#L4072">4072</span>
<span id="L4073" rel="#L4073">4073</span>
<span id="L4074" rel="#L4074">4074</span>
<span id="L4075" rel="#L4075">4075</span>
<span id="L4076" rel="#L4076">4076</span>
<span id="L4077" rel="#L4077">4077</span>
<span id="L4078" rel="#L4078">4078</span>
<span id="L4079" rel="#L4079">4079</span>
<span id="L4080" rel="#L4080">4080</span>
<span id="L4081" rel="#L4081">4081</span>
<span id="L4082" rel="#L4082">4082</span>
<span id="L4083" rel="#L4083">4083</span>
<span id="L4084" rel="#L4084">4084</span>
<span id="L4085" rel="#L4085">4085</span>
<span id="L4086" rel="#L4086">4086</span>
<span id="L4087" rel="#L4087">4087</span>
<span id="L4088" rel="#L4088">4088</span>
<span id="L4089" rel="#L4089">4089</span>
<span id="L4090" rel="#L4090">4090</span>
<span id="L4091" rel="#L4091">4091</span>
<span id="L4092" rel="#L4092">4092</span>
<span id="L4093" rel="#L4093">4093</span>
<span id="L4094" rel="#L4094">4094</span>
<span id="L4095" rel="#L4095">4095</span>
<span id="L4096" rel="#L4096">4096</span>
<span id="L4097" rel="#L4097">4097</span>
<span id="L4098" rel="#L4098">4098</span>
<span id="L4099" rel="#L4099">4099</span>
<span id="L4100" rel="#L4100">4100</span>
<span id="L4101" rel="#L4101">4101</span>
<span id="L4102" rel="#L4102">4102</span>
<span id="L4103" rel="#L4103">4103</span>
<span id="L4104" rel="#L4104">4104</span>
<span id="L4105" rel="#L4105">4105</span>
<span id="L4106" rel="#L4106">4106</span>
<span id="L4107" rel="#L4107">4107</span>
<span id="L4108" rel="#L4108">4108</span>
<span id="L4109" rel="#L4109">4109</span>
<span id="L4110" rel="#L4110">4110</span>
<span id="L4111" rel="#L4111">4111</span>
<span id="L4112" rel="#L4112">4112</span>
<span id="L4113" rel="#L4113">4113</span>
<span id="L4114" rel="#L4114">4114</span>
<span id="L4115" rel="#L4115">4115</span>
<span id="L4116" rel="#L4116">4116</span>
<span id="L4117" rel="#L4117">4117</span>
<span id="L4118" rel="#L4118">4118</span>
<span id="L4119" rel="#L4119">4119</span>
<span id="L4120" rel="#L4120">4120</span>
<span id="L4121" rel="#L4121">4121</span>
<span id="L4122" rel="#L4122">4122</span>
<span id="L4123" rel="#L4123">4123</span>
<span id="L4124" rel="#L4124">4124</span>
<span id="L4125" rel="#L4125">4125</span>
<span id="L4126" rel="#L4126">4126</span>
<span id="L4127" rel="#L4127">4127</span>
<span id="L4128" rel="#L4128">4128</span>
<span id="L4129" rel="#L4129">4129</span>
<span id="L4130" rel="#L4130">4130</span>
<span id="L4131" rel="#L4131">4131</span>
<span id="L4132" rel="#L4132">4132</span>
<span id="L4133" rel="#L4133">4133</span>
<span id="L4134" rel="#L4134">4134</span>
<span id="L4135" rel="#L4135">4135</span>
<span id="L4136" rel="#L4136">4136</span>
<span id="L4137" rel="#L4137">4137</span>
<span id="L4138" rel="#L4138">4138</span>
<span id="L4139" rel="#L4139">4139</span>
<span id="L4140" rel="#L4140">4140</span>
<span id="L4141" rel="#L4141">4141</span>
<span id="L4142" rel="#L4142">4142</span>
<span id="L4143" rel="#L4143">4143</span>
<span id="L4144" rel="#L4144">4144</span>
<span id="L4145" rel="#L4145">4145</span>
<span id="L4146" rel="#L4146">4146</span>
<span id="L4147" rel="#L4147">4147</span>
<span id="L4148" rel="#L4148">4148</span>
<span id="L4149" rel="#L4149">4149</span>
<span id="L4150" rel="#L4150">4150</span>
<span id="L4151" rel="#L4151">4151</span>
<span id="L4152" rel="#L4152">4152</span>
<span id="L4153" rel="#L4153">4153</span>
<span id="L4154" rel="#L4154">4154</span>
<span id="L4155" rel="#L4155">4155</span>
<span id="L4156" rel="#L4156">4156</span>
<span id="L4157" rel="#L4157">4157</span>
<span id="L4158" rel="#L4158">4158</span>
<span id="L4159" rel="#L4159">4159</span>
<span id="L4160" rel="#L4160">4160</span>
<span id="L4161" rel="#L4161">4161</span>
<span id="L4162" rel="#L4162">4162</span>
<span id="L4163" rel="#L4163">4163</span>
<span id="L4164" rel="#L4164">4164</span>
<span id="L4165" rel="#L4165">4165</span>
<span id="L4166" rel="#L4166">4166</span>
<span id="L4167" rel="#L4167">4167</span>
<span id="L4168" rel="#L4168">4168</span>
<span id="L4169" rel="#L4169">4169</span>
<span id="L4170" rel="#L4170">4170</span>
<span id="L4171" rel="#L4171">4171</span>
<span id="L4172" rel="#L4172">4172</span>
<span id="L4173" rel="#L4173">4173</span>
<span id="L4174" rel="#L4174">4174</span>
<span id="L4175" rel="#L4175">4175</span>
<span id="L4176" rel="#L4176">4176</span>
<span id="L4177" rel="#L4177">4177</span>
<span id="L4178" rel="#L4178">4178</span>
<span id="L4179" rel="#L4179">4179</span>
<span id="L4180" rel="#L4180">4180</span>
<span id="L4181" rel="#L4181">4181</span>
<span id="L4182" rel="#L4182">4182</span>
<span id="L4183" rel="#L4183">4183</span>
<span id="L4184" rel="#L4184">4184</span>
<span id="L4185" rel="#L4185">4185</span>
<span id="L4186" rel="#L4186">4186</span>
<span id="L4187" rel="#L4187">4187</span>
<span id="L4188" rel="#L4188">4188</span>
<span id="L4189" rel="#L4189">4189</span>
<span id="L4190" rel="#L4190">4190</span>
<span id="L4191" rel="#L4191">4191</span>
<span id="L4192" rel="#L4192">4192</span>
<span id="L4193" rel="#L4193">4193</span>
<span id="L4194" rel="#L4194">4194</span>
<span id="L4195" rel="#L4195">4195</span>
<span id="L4196" rel="#L4196">4196</span>
<span id="L4197" rel="#L4197">4197</span>
<span id="L4198" rel="#L4198">4198</span>
<span id="L4199" rel="#L4199">4199</span>
<span id="L4200" rel="#L4200">4200</span>
<span id="L4201" rel="#L4201">4201</span>
<span id="L4202" rel="#L4202">4202</span>
<span id="L4203" rel="#L4203">4203</span>
<span id="L4204" rel="#L4204">4204</span>
<span id="L4205" rel="#L4205">4205</span>
<span id="L4206" rel="#L4206">4206</span>
<span id="L4207" rel="#L4207">4207</span>
<span id="L4208" rel="#L4208">4208</span>
<span id="L4209" rel="#L4209">4209</span>
<span id="L4210" rel="#L4210">4210</span>
<span id="L4211" rel="#L4211">4211</span>
<span id="L4212" rel="#L4212">4212</span>
<span id="L4213" rel="#L4213">4213</span>
<span id="L4214" rel="#L4214">4214</span>
<span id="L4215" rel="#L4215">4215</span>
<span id="L4216" rel="#L4216">4216</span>
<span id="L4217" rel="#L4217">4217</span>
<span id="L4218" rel="#L4218">4218</span>
<span id="L4219" rel="#L4219">4219</span>
<span id="L4220" rel="#L4220">4220</span>
<span id="L4221" rel="#L4221">4221</span>
<span id="L4222" rel="#L4222">4222</span>
<span id="L4223" rel="#L4223">4223</span>
<span id="L4224" rel="#L4224">4224</span>
<span id="L4225" rel="#L4225">4225</span>
<span id="L4226" rel="#L4226">4226</span>
<span id="L4227" rel="#L4227">4227</span>
<span id="L4228" rel="#L4228">4228</span>
<span id="L4229" rel="#L4229">4229</span>
<span id="L4230" rel="#L4230">4230</span>
<span id="L4231" rel="#L4231">4231</span>
<span id="L4232" rel="#L4232">4232</span>
<span id="L4233" rel="#L4233">4233</span>
<span id="L4234" rel="#L4234">4234</span>
<span id="L4235" rel="#L4235">4235</span>
<span id="L4236" rel="#L4236">4236</span>
<span id="L4237" rel="#L4237">4237</span>
<span id="L4238" rel="#L4238">4238</span>
<span id="L4239" rel="#L4239">4239</span>
<span id="L4240" rel="#L4240">4240</span>
<span id="L4241" rel="#L4241">4241</span>
<span id="L4242" rel="#L4242">4242</span>
<span id="L4243" rel="#L4243">4243</span>
<span id="L4244" rel="#L4244">4244</span>
<span id="L4245" rel="#L4245">4245</span>
<span id="L4246" rel="#L4246">4246</span>
<span id="L4247" rel="#L4247">4247</span>
<span id="L4248" rel="#L4248">4248</span>
<span id="L4249" rel="#L4249">4249</span>
<span id="L4250" rel="#L4250">4250</span>
<span id="L4251" rel="#L4251">4251</span>
<span id="L4252" rel="#L4252">4252</span>
<span id="L4253" rel="#L4253">4253</span>
<span id="L4254" rel="#L4254">4254</span>
<span id="L4255" rel="#L4255">4255</span>
<span id="L4256" rel="#L4256">4256</span>
<span id="L4257" rel="#L4257">4257</span>
<span id="L4258" rel="#L4258">4258</span>
<span id="L4259" rel="#L4259">4259</span>
<span id="L4260" rel="#L4260">4260</span>
<span id="L4261" rel="#L4261">4261</span>
<span id="L4262" rel="#L4262">4262</span>
<span id="L4263" rel="#L4263">4263</span>
<span id="L4264" rel="#L4264">4264</span>
<span id="L4265" rel="#L4265">4265</span>
<span id="L4266" rel="#L4266">4266</span>
<span id="L4267" rel="#L4267">4267</span>
<span id="L4268" rel="#L4268">4268</span>
<span id="L4269" rel="#L4269">4269</span>
<span id="L4270" rel="#L4270">4270</span>
<span id="L4271" rel="#L4271">4271</span>
<span id="L4272" rel="#L4272">4272</span>
<span id="L4273" rel="#L4273">4273</span>
<span id="L4274" rel="#L4274">4274</span>
<span id="L4275" rel="#L4275">4275</span>
<span id="L4276" rel="#L4276">4276</span>
<span id="L4277" rel="#L4277">4277</span>
<span id="L4278" rel="#L4278">4278</span>
<span id="L4279" rel="#L4279">4279</span>
<span id="L4280" rel="#L4280">4280</span>
<span id="L4281" rel="#L4281">4281</span>
<span id="L4282" rel="#L4282">4282</span>
<span id="L4283" rel="#L4283">4283</span>
<span id="L4284" rel="#L4284">4284</span>
<span id="L4285" rel="#L4285">4285</span>
<span id="L4286" rel="#L4286">4286</span>
<span id="L4287" rel="#L4287">4287</span>
<span id="L4288" rel="#L4288">4288</span>
<span id="L4289" rel="#L4289">4289</span>
<span id="L4290" rel="#L4290">4290</span>
<span id="L4291" rel="#L4291">4291</span>
<span id="L4292" rel="#L4292">4292</span>
<span id="L4293" rel="#L4293">4293</span>
<span id="L4294" rel="#L4294">4294</span>
<span id="L4295" rel="#L4295">4295</span>
<span id="L4296" rel="#L4296">4296</span>
<span id="L4297" rel="#L4297">4297</span>
<span id="L4298" rel="#L4298">4298</span>
<span id="L4299" rel="#L4299">4299</span>
<span id="L4300" rel="#L4300">4300</span>
<span id="L4301" rel="#L4301">4301</span>
<span id="L4302" rel="#L4302">4302</span>
<span id="L4303" rel="#L4303">4303</span>
<span id="L4304" rel="#L4304">4304</span>
<span id="L4305" rel="#L4305">4305</span>
<span id="L4306" rel="#L4306">4306</span>
<span id="L4307" rel="#L4307">4307</span>
<span id="L4308" rel="#L4308">4308</span>
<span id="L4309" rel="#L4309">4309</span>
<span id="L4310" rel="#L4310">4310</span>
<span id="L4311" rel="#L4311">4311</span>
<span id="L4312" rel="#L4312">4312</span>
<span id="L4313" rel="#L4313">4313</span>
<span id="L4314" rel="#L4314">4314</span>
<span id="L4315" rel="#L4315">4315</span>
<span id="L4316" rel="#L4316">4316</span>
<span id="L4317" rel="#L4317">4317</span>
<span id="L4318" rel="#L4318">4318</span>
<span id="L4319" rel="#L4319">4319</span>
<span id="L4320" rel="#L4320">4320</span>
<span id="L4321" rel="#L4321">4321</span>
<span id="L4322" rel="#L4322">4322</span>
<span id="L4323" rel="#L4323">4323</span>
<span id="L4324" rel="#L4324">4324</span>
<span id="L4325" rel="#L4325">4325</span>
<span id="L4326" rel="#L4326">4326</span>
<span id="L4327" rel="#L4327">4327</span>
<span id="L4328" rel="#L4328">4328</span>
<span id="L4329" rel="#L4329">4329</span>
<span id="L4330" rel="#L4330">4330</span>
<span id="L4331" rel="#L4331">4331</span>
<span id="L4332" rel="#L4332">4332</span>
<span id="L4333" rel="#L4333">4333</span>
<span id="L4334" rel="#L4334">4334</span>
<span id="L4335" rel="#L4335">4335</span>
<span id="L4336" rel="#L4336">4336</span>
<span id="L4337" rel="#L4337">4337</span>
<span id="L4338" rel="#L4338">4338</span>
<span id="L4339" rel="#L4339">4339</span>
<span id="L4340" rel="#L4340">4340</span>
<span id="L4341" rel="#L4341">4341</span>
<span id="L4342" rel="#L4342">4342</span>
<span id="L4343" rel="#L4343">4343</span>
<span id="L4344" rel="#L4344">4344</span>
<span id="L4345" rel="#L4345">4345</span>
<span id="L4346" rel="#L4346">4346</span>
<span id="L4347" rel="#L4347">4347</span>
<span id="L4348" rel="#L4348">4348</span>
<span id="L4349" rel="#L4349">4349</span>
<span id="L4350" rel="#L4350">4350</span>
<span id="L4351" rel="#L4351">4351</span>
<span id="L4352" rel="#L4352">4352</span>
<span id="L4353" rel="#L4353">4353</span>
<span id="L4354" rel="#L4354">4354</span>
<span id="L4355" rel="#L4355">4355</span>
<span id="L4356" rel="#L4356">4356</span>
<span id="L4357" rel="#L4357">4357</span>
<span id="L4358" rel="#L4358">4358</span>
<span id="L4359" rel="#L4359">4359</span>
<span id="L4360" rel="#L4360">4360</span>
<span id="L4361" rel="#L4361">4361</span>
<span id="L4362" rel="#L4362">4362</span>
<span id="L4363" rel="#L4363">4363</span>
<span id="L4364" rel="#L4364">4364</span>
<span id="L4365" rel="#L4365">4365</span>
<span id="L4366" rel="#L4366">4366</span>
<span id="L4367" rel="#L4367">4367</span>
<span id="L4368" rel="#L4368">4368</span>
<span id="L4369" rel="#L4369">4369</span>
<span id="L4370" rel="#L4370">4370</span>
<span id="L4371" rel="#L4371">4371</span>
<span id="L4372" rel="#L4372">4372</span>
<span id="L4373" rel="#L4373">4373</span>
<span id="L4374" rel="#L4374">4374</span>
<span id="L4375" rel="#L4375">4375</span>
<span id="L4376" rel="#L4376">4376</span>
<span id="L4377" rel="#L4377">4377</span>
<span id="L4378" rel="#L4378">4378</span>
<span id="L4379" rel="#L4379">4379</span>
<span id="L4380" rel="#L4380">4380</span>
<span id="L4381" rel="#L4381">4381</span>
<span id="L4382" rel="#L4382">4382</span>
<span id="L4383" rel="#L4383">4383</span>
<span id="L4384" rel="#L4384">4384</span>
<span id="L4385" rel="#L4385">4385</span>
<span id="L4386" rel="#L4386">4386</span>
<span id="L4387" rel="#L4387">4387</span>
<span id="L4388" rel="#L4388">4388</span>
<span id="L4389" rel="#L4389">4389</span>
<span id="L4390" rel="#L4390">4390</span>
<span id="L4391" rel="#L4391">4391</span>
<span id="L4392" rel="#L4392">4392</span>
<span id="L4393" rel="#L4393">4393</span>
<span id="L4394" rel="#L4394">4394</span>
<span id="L4395" rel="#L4395">4395</span>
<span id="L4396" rel="#L4396">4396</span>
<span id="L4397" rel="#L4397">4397</span>
<span id="L4398" rel="#L4398">4398</span>
<span id="L4399" rel="#L4399">4399</span>
<span id="L4400" rel="#L4400">4400</span>
<span id="L4401" rel="#L4401">4401</span>
<span id="L4402" rel="#L4402">4402</span>
<span id="L4403" rel="#L4403">4403</span>
<span id="L4404" rel="#L4404">4404</span>
<span id="L4405" rel="#L4405">4405</span>
<span id="L4406" rel="#L4406">4406</span>
<span id="L4407" rel="#L4407">4407</span>
<span id="L4408" rel="#L4408">4408</span>
<span id="L4409" rel="#L4409">4409</span>
<span id="L4410" rel="#L4410">4410</span>
<span id="L4411" rel="#L4411">4411</span>
<span id="L4412" rel="#L4412">4412</span>
<span id="L4413" rel="#L4413">4413</span>
<span id="L4414" rel="#L4414">4414</span>
<span id="L4415" rel="#L4415">4415</span>
<span id="L4416" rel="#L4416">4416</span>
<span id="L4417" rel="#L4417">4417</span>
<span id="L4418" rel="#L4418">4418</span>
<span id="L4419" rel="#L4419">4419</span>
<span id="L4420" rel="#L4420">4420</span>
<span id="L4421" rel="#L4421">4421</span>
<span id="L4422" rel="#L4422">4422</span>
<span id="L4423" rel="#L4423">4423</span>
<span id="L4424" rel="#L4424">4424</span>
<span id="L4425" rel="#L4425">4425</span>
<span id="L4426" rel="#L4426">4426</span>
<span id="L4427" rel="#L4427">4427</span>
<span id="L4428" rel="#L4428">4428</span>
<span id="L4429" rel="#L4429">4429</span>
<span id="L4430" rel="#L4430">4430</span>
<span id="L4431" rel="#L4431">4431</span>
<span id="L4432" rel="#L4432">4432</span>
<span id="L4433" rel="#L4433">4433</span>
<span id="L4434" rel="#L4434">4434</span>
<span id="L4435" rel="#L4435">4435</span>
<span id="L4436" rel="#L4436">4436</span>
<span id="L4437" rel="#L4437">4437</span>
<span id="L4438" rel="#L4438">4438</span>
<span id="L4439" rel="#L4439">4439</span>
<span id="L4440" rel="#L4440">4440</span>
<span id="L4441" rel="#L4441">4441</span>
<span id="L4442" rel="#L4442">4442</span>
<span id="L4443" rel="#L4443">4443</span>
<span id="L4444" rel="#L4444">4444</span>
<span id="L4445" rel="#L4445">4445</span>
<span id="L4446" rel="#L4446">4446</span>
<span id="L4447" rel="#L4447">4447</span>
<span id="L4448" rel="#L4448">4448</span>
<span id="L4449" rel="#L4449">4449</span>
<span id="L4450" rel="#L4450">4450</span>
<span id="L4451" rel="#L4451">4451</span>
<span id="L4452" rel="#L4452">4452</span>
<span id="L4453" rel="#L4453">4453</span>
<span id="L4454" rel="#L4454">4454</span>
<span id="L4455" rel="#L4455">4455</span>
<span id="L4456" rel="#L4456">4456</span>
<span id="L4457" rel="#L4457">4457</span>
<span id="L4458" rel="#L4458">4458</span>
<span id="L4459" rel="#L4459">4459</span>
<span id="L4460" rel="#L4460">4460</span>
<span id="L4461" rel="#L4461">4461</span>
<span id="L4462" rel="#L4462">4462</span>
<span id="L4463" rel="#L4463">4463</span>
<span id="L4464" rel="#L4464">4464</span>
<span id="L4465" rel="#L4465">4465</span>
<span id="L4466" rel="#L4466">4466</span>
<span id="L4467" rel="#L4467">4467</span>
<span id="L4468" rel="#L4468">4468</span>
<span id="L4469" rel="#L4469">4469</span>
<span id="L4470" rel="#L4470">4470</span>
<span id="L4471" rel="#L4471">4471</span>
<span id="L4472" rel="#L4472">4472</span>
<span id="L4473" rel="#L4473">4473</span>
<span id="L4474" rel="#L4474">4474</span>
<span id="L4475" rel="#L4475">4475</span>
<span id="L4476" rel="#L4476">4476</span>
<span id="L4477" rel="#L4477">4477</span>
<span id="L4478" rel="#L4478">4478</span>
<span id="L4479" rel="#L4479">4479</span>
<span id="L4480" rel="#L4480">4480</span>
<span id="L4481" rel="#L4481">4481</span>
<span id="L4482" rel="#L4482">4482</span>
<span id="L4483" rel="#L4483">4483</span>
<span id="L4484" rel="#L4484">4484</span>
<span id="L4485" rel="#L4485">4485</span>
<span id="L4486" rel="#L4486">4486</span>
<span id="L4487" rel="#L4487">4487</span>
<span id="L4488" rel="#L4488">4488</span>
<span id="L4489" rel="#L4489">4489</span>
<span id="L4490" rel="#L4490">4490</span>
<span id="L4491" rel="#L4491">4491</span>
<span id="L4492" rel="#L4492">4492</span>
<span id="L4493" rel="#L4493">4493</span>
<span id="L4494" rel="#L4494">4494</span>
<span id="L4495" rel="#L4495">4495</span>
<span id="L4496" rel="#L4496">4496</span>
<span id="L4497" rel="#L4497">4497</span>
<span id="L4498" rel="#L4498">4498</span>
<span id="L4499" rel="#L4499">4499</span>
<span id="L4500" rel="#L4500">4500</span>
<span id="L4501" rel="#L4501">4501</span>
<span id="L4502" rel="#L4502">4502</span>
<span id="L4503" rel="#L4503">4503</span>
<span id="L4504" rel="#L4504">4504</span>
<span id="L4505" rel="#L4505">4505</span>
<span id="L4506" rel="#L4506">4506</span>
<span id="L4507" rel="#L4507">4507</span>
<span id="L4508" rel="#L4508">4508</span>
<span id="L4509" rel="#L4509">4509</span>
<span id="L4510" rel="#L4510">4510</span>
<span id="L4511" rel="#L4511">4511</span>
<span id="L4512" rel="#L4512">4512</span>
<span id="L4513" rel="#L4513">4513</span>
<span id="L4514" rel="#L4514">4514</span>
<span id="L4515" rel="#L4515">4515</span>
<span id="L4516" rel="#L4516">4516</span>
<span id="L4517" rel="#L4517">4517</span>
<span id="L4518" rel="#L4518">4518</span>
<span id="L4519" rel="#L4519">4519</span>
<span id="L4520" rel="#L4520">4520</span>
<span id="L4521" rel="#L4521">4521</span>
<span id="L4522" rel="#L4522">4522</span>
<span id="L4523" rel="#L4523">4523</span>
<span id="L4524" rel="#L4524">4524</span>
<span id="L4525" rel="#L4525">4525</span>
<span id="L4526" rel="#L4526">4526</span>
<span id="L4527" rel="#L4527">4527</span>
<span id="L4528" rel="#L4528">4528</span>
<span id="L4529" rel="#L4529">4529</span>
<span id="L4530" rel="#L4530">4530</span>
<span id="L4531" rel="#L4531">4531</span>
<span id="L4532" rel="#L4532">4532</span>
<span id="L4533" rel="#L4533">4533</span>
<span id="L4534" rel="#L4534">4534</span>
<span id="L4535" rel="#L4535">4535</span>
<span id="L4536" rel="#L4536">4536</span>
<span id="L4537" rel="#L4537">4537</span>
<span id="L4538" rel="#L4538">4538</span>
<span id="L4539" rel="#L4539">4539</span>
<span id="L4540" rel="#L4540">4540</span>
<span id="L4541" rel="#L4541">4541</span>
<span id="L4542" rel="#L4542">4542</span>
<span id="L4543" rel="#L4543">4543</span>
<span id="L4544" rel="#L4544">4544</span>
<span id="L4545" rel="#L4545">4545</span>
<span id="L4546" rel="#L4546">4546</span>
<span id="L4547" rel="#L4547">4547</span>
<span id="L4548" rel="#L4548">4548</span>
<span id="L4549" rel="#L4549">4549</span>
<span id="L4550" rel="#L4550">4550</span>
<span id="L4551" rel="#L4551">4551</span>
<span id="L4552" rel="#L4552">4552</span>
<span id="L4553" rel="#L4553">4553</span>
<span id="L4554" rel="#L4554">4554</span>
<span id="L4555" rel="#L4555">4555</span>
<span id="L4556" rel="#L4556">4556</span>
<span id="L4557" rel="#L4557">4557</span>
<span id="L4558" rel="#L4558">4558</span>
<span id="L4559" rel="#L4559">4559</span>
<span id="L4560" rel="#L4560">4560</span>
<span id="L4561" rel="#L4561">4561</span>
<span id="L4562" rel="#L4562">4562</span>
<span id="L4563" rel="#L4563">4563</span>
<span id="L4564" rel="#L4564">4564</span>
<span id="L4565" rel="#L4565">4565</span>
<span id="L4566" rel="#L4566">4566</span>
<span id="L4567" rel="#L4567">4567</span>
<span id="L4568" rel="#L4568">4568</span>
<span id="L4569" rel="#L4569">4569</span>
<span id="L4570" rel="#L4570">4570</span>
<span id="L4571" rel="#L4571">4571</span>
<span id="L4572" rel="#L4572">4572</span>
<span id="L4573" rel="#L4573">4573</span>
<span id="L4574" rel="#L4574">4574</span>
<span id="L4575" rel="#L4575">4575</span>
<span id="L4576" rel="#L4576">4576</span>
<span id="L4577" rel="#L4577">4577</span>
<span id="L4578" rel="#L4578">4578</span>
<span id="L4579" rel="#L4579">4579</span>
<span id="L4580" rel="#L4580">4580</span>
<span id="L4581" rel="#L4581">4581</span>
<span id="L4582" rel="#L4582">4582</span>
<span id="L4583" rel="#L4583">4583</span>
<span id="L4584" rel="#L4584">4584</span>
<span id="L4585" rel="#L4585">4585</span>
<span id="L4586" rel="#L4586">4586</span>
<span id="L4587" rel="#L4587">4587</span>
<span id="L4588" rel="#L4588">4588</span>
<span id="L4589" rel="#L4589">4589</span>
<span id="L4590" rel="#L4590">4590</span>
<span id="L4591" rel="#L4591">4591</span>
<span id="L4592" rel="#L4592">4592</span>
<span id="L4593" rel="#L4593">4593</span>
<span id="L4594" rel="#L4594">4594</span>
<span id="L4595" rel="#L4595">4595</span>
<span id="L4596" rel="#L4596">4596</span>
<span id="L4597" rel="#L4597">4597</span>
<span id="L4598" rel="#L4598">4598</span>
<span id="L4599" rel="#L4599">4599</span>
<span id="L4600" rel="#L4600">4600</span>
<span id="L4601" rel="#L4601">4601</span>
<span id="L4602" rel="#L4602">4602</span>
<span id="L4603" rel="#L4603">4603</span>
<span id="L4604" rel="#L4604">4604</span>
<span id="L4605" rel="#L4605">4605</span>
<span id="L4606" rel="#L4606">4606</span>
<span id="L4607" rel="#L4607">4607</span>
<span id="L4608" rel="#L4608">4608</span>
<span id="L4609" rel="#L4609">4609</span>
<span id="L4610" rel="#L4610">4610</span>
<span id="L4611" rel="#L4611">4611</span>
<span id="L4612" rel="#L4612">4612</span>
<span id="L4613" rel="#L4613">4613</span>
<span id="L4614" rel="#L4614">4614</span>
<span id="L4615" rel="#L4615">4615</span>
<span id="L4616" rel="#L4616">4616</span>
<span id="L4617" rel="#L4617">4617</span>
<span id="L4618" rel="#L4618">4618</span>
<span id="L4619" rel="#L4619">4619</span>
<span id="L4620" rel="#L4620">4620</span>
<span id="L4621" rel="#L4621">4621</span>
<span id="L4622" rel="#L4622">4622</span>
<span id="L4623" rel="#L4623">4623</span>
<span id="L4624" rel="#L4624">4624</span>
<span id="L4625" rel="#L4625">4625</span>
<span id="L4626" rel="#L4626">4626</span>
<span id="L4627" rel="#L4627">4627</span>
<span id="L4628" rel="#L4628">4628</span>
<span id="L4629" rel="#L4629">4629</span>
<span id="L4630" rel="#L4630">4630</span>
<span id="L4631" rel="#L4631">4631</span>
<span id="L4632" rel="#L4632">4632</span>
<span id="L4633" rel="#L4633">4633</span>
<span id="L4634" rel="#L4634">4634</span>
<span id="L4635" rel="#L4635">4635</span>
<span id="L4636" rel="#L4636">4636</span>
<span id="L4637" rel="#L4637">4637</span>
<span id="L4638" rel="#L4638">4638</span>
<span id="L4639" rel="#L4639">4639</span>
<span id="L4640" rel="#L4640">4640</span>
<span id="L4641" rel="#L4641">4641</span>
<span id="L4642" rel="#L4642">4642</span>
<span id="L4643" rel="#L4643">4643</span>
<span id="L4644" rel="#L4644">4644</span>
<span id="L4645" rel="#L4645">4645</span>
<span id="L4646" rel="#L4646">4646</span>
<span id="L4647" rel="#L4647">4647</span>
<span id="L4648" rel="#L4648">4648</span>
<span id="L4649" rel="#L4649">4649</span>
<span id="L4650" rel="#L4650">4650</span>
<span id="L4651" rel="#L4651">4651</span>
<span id="L4652" rel="#L4652">4652</span>
<span id="L4653" rel="#L4653">4653</span>
<span id="L4654" rel="#L4654">4654</span>
<span id="L4655" rel="#L4655">4655</span>
<span id="L4656" rel="#L4656">4656</span>
<span id="L4657" rel="#L4657">4657</span>
<span id="L4658" rel="#L4658">4658</span>
<span id="L4659" rel="#L4659">4659</span>
<span id="L4660" rel="#L4660">4660</span>
<span id="L4661" rel="#L4661">4661</span>
<span id="L4662" rel="#L4662">4662</span>
<span id="L4663" rel="#L4663">4663</span>
<span id="L4664" rel="#L4664">4664</span>
<span id="L4665" rel="#L4665">4665</span>
<span id="L4666" rel="#L4666">4666</span>
<span id="L4667" rel="#L4667">4667</span>
<span id="L4668" rel="#L4668">4668</span>
<span id="L4669" rel="#L4669">4669</span>
<span id="L4670" rel="#L4670">4670</span>
<span id="L4671" rel="#L4671">4671</span>
<span id="L4672" rel="#L4672">4672</span>
<span id="L4673" rel="#L4673">4673</span>
<span id="L4674" rel="#L4674">4674</span>
<span id="L4675" rel="#L4675">4675</span>
<span id="L4676" rel="#L4676">4676</span>
<span id="L4677" rel="#L4677">4677</span>
<span id="L4678" rel="#L4678">4678</span>
<span id="L4679" rel="#L4679">4679</span>
<span id="L4680" rel="#L4680">4680</span>
<span id="L4681" rel="#L4681">4681</span>
<span id="L4682" rel="#L4682">4682</span>
<span id="L4683" rel="#L4683">4683</span>
<span id="L4684" rel="#L4684">4684</span>
<span id="L4685" rel="#L4685">4685</span>
<span id="L4686" rel="#L4686">4686</span>
<span id="L4687" rel="#L4687">4687</span>
<span id="L4688" rel="#L4688">4688</span>
<span id="L4689" rel="#L4689">4689</span>
<span id="L4690" rel="#L4690">4690</span>
<span id="L4691" rel="#L4691">4691</span>
<span id="L4692" rel="#L4692">4692</span>
<span id="L4693" rel="#L4693">4693</span>
<span id="L4694" rel="#L4694">4694</span>
<span id="L4695" rel="#L4695">4695</span>
<span id="L4696" rel="#L4696">4696</span>
<span id="L4697" rel="#L4697">4697</span>
<span id="L4698" rel="#L4698">4698</span>
<span id="L4699" rel="#L4699">4699</span>
<span id="L4700" rel="#L4700">4700</span>
<span id="L4701" rel="#L4701">4701</span>
<span id="L4702" rel="#L4702">4702</span>
<span id="L4703" rel="#L4703">4703</span>
<span id="L4704" rel="#L4704">4704</span>
<span id="L4705" rel="#L4705">4705</span>
<span id="L4706" rel="#L4706">4706</span>
<span id="L4707" rel="#L4707">4707</span>
<span id="L4708" rel="#L4708">4708</span>
<span id="L4709" rel="#L4709">4709</span>
<span id="L4710" rel="#L4710">4710</span>
<span id="L4711" rel="#L4711">4711</span>
<span id="L4712" rel="#L4712">4712</span>
<span id="L4713" rel="#L4713">4713</span>
<span id="L4714" rel="#L4714">4714</span>
<span id="L4715" rel="#L4715">4715</span>
<span id="L4716" rel="#L4716">4716</span>
<span id="L4717" rel="#L4717">4717</span>
<span id="L4718" rel="#L4718">4718</span>
<span id="L4719" rel="#L4719">4719</span>
<span id="L4720" rel="#L4720">4720</span>
<span id="L4721" rel="#L4721">4721</span>
<span id="L4722" rel="#L4722">4722</span>
<span id="L4723" rel="#L4723">4723</span>
<span id="L4724" rel="#L4724">4724</span>
<span id="L4725" rel="#L4725">4725</span>
<span id="L4726" rel="#L4726">4726</span>
<span id="L4727" rel="#L4727">4727</span>
<span id="L4728" rel="#L4728">4728</span>
<span id="L4729" rel="#L4729">4729</span>
<span id="L4730" rel="#L4730">4730</span>
<span id="L4731" rel="#L4731">4731</span>
<span id="L4732" rel="#L4732">4732</span>
<span id="L4733" rel="#L4733">4733</span>
<span id="L4734" rel="#L4734">4734</span>
<span id="L4735" rel="#L4735">4735</span>
<span id="L4736" rel="#L4736">4736</span>
<span id="L4737" rel="#L4737">4737</span>
<span id="L4738" rel="#L4738">4738</span>
<span id="L4739" rel="#L4739">4739</span>
<span id="L4740" rel="#L4740">4740</span>
<span id="L4741" rel="#L4741">4741</span>
<span id="L4742" rel="#L4742">4742</span>
<span id="L4743" rel="#L4743">4743</span>
<span id="L4744" rel="#L4744">4744</span>
<span id="L4745" rel="#L4745">4745</span>
<span id="L4746" rel="#L4746">4746</span>
<span id="L4747" rel="#L4747">4747</span>
<span id="L4748" rel="#L4748">4748</span>
<span id="L4749" rel="#L4749">4749</span>
<span id="L4750" rel="#L4750">4750</span>
<span id="L4751" rel="#L4751">4751</span>
<span id="L4752" rel="#L4752">4752</span>
<span id="L4753" rel="#L4753">4753</span>
<span id="L4754" rel="#L4754">4754</span>
<span id="L4755" rel="#L4755">4755</span>
<span id="L4756" rel="#L4756">4756</span>
<span id="L4757" rel="#L4757">4757</span>
<span id="L4758" rel="#L4758">4758</span>
<span id="L4759" rel="#L4759">4759</span>
<span id="L4760" rel="#L4760">4760</span>
<span id="L4761" rel="#L4761">4761</span>
<span id="L4762" rel="#L4762">4762</span>
<span id="L4763" rel="#L4763">4763</span>
<span id="L4764" rel="#L4764">4764</span>
<span id="L4765" rel="#L4765">4765</span>
<span id="L4766" rel="#L4766">4766</span>
<span id="L4767" rel="#L4767">4767</span>
<span id="L4768" rel="#L4768">4768</span>
<span id="L4769" rel="#L4769">4769</span>
<span id="L4770" rel="#L4770">4770</span>
<span id="L4771" rel="#L4771">4771</span>
<span id="L4772" rel="#L4772">4772</span>
<span id="L4773" rel="#L4773">4773</span>
<span id="L4774" rel="#L4774">4774</span>
<span id="L4775" rel="#L4775">4775</span>
<span id="L4776" rel="#L4776">4776</span>
<span id="L4777" rel="#L4777">4777</span>
<span id="L4778" rel="#L4778">4778</span>
<span id="L4779" rel="#L4779">4779</span>
<span id="L4780" rel="#L4780">4780</span>
<span id="L4781" rel="#L4781">4781</span>
<span id="L4782" rel="#L4782">4782</span>
<span id="L4783" rel="#L4783">4783</span>
<span id="L4784" rel="#L4784">4784</span>
<span id="L4785" rel="#L4785">4785</span>
<span id="L4786" rel="#L4786">4786</span>
<span id="L4787" rel="#L4787">4787</span>
<span id="L4788" rel="#L4788">4788</span>
<span id="L4789" rel="#L4789">4789</span>
<span id="L4790" rel="#L4790">4790</span>
<span id="L4791" rel="#L4791">4791</span>
<span id="L4792" rel="#L4792">4792</span>
<span id="L4793" rel="#L4793">4793</span>
<span id="L4794" rel="#L4794">4794</span>
<span id="L4795" rel="#L4795">4795</span>
<span id="L4796" rel="#L4796">4796</span>
<span id="L4797" rel="#L4797">4797</span>
<span id="L4798" rel="#L4798">4798</span>
<span id="L4799" rel="#L4799">4799</span>
<span id="L4800" rel="#L4800">4800</span>
<span id="L4801" rel="#L4801">4801</span>
<span id="L4802" rel="#L4802">4802</span>
<span id="L4803" rel="#L4803">4803</span>
<span id="L4804" rel="#L4804">4804</span>
<span id="L4805" rel="#L4805">4805</span>
<span id="L4806" rel="#L4806">4806</span>
<span id="L4807" rel="#L4807">4807</span>
<span id="L4808" rel="#L4808">4808</span>
<span id="L4809" rel="#L4809">4809</span>
<span id="L4810" rel="#L4810">4810</span>
<span id="L4811" rel="#L4811">4811</span>
<span id="L4812" rel="#L4812">4812</span>
<span id="L4813" rel="#L4813">4813</span>
<span id="L4814" rel="#L4814">4814</span>
<span id="L4815" rel="#L4815">4815</span>
<span id="L4816" rel="#L4816">4816</span>
<span id="L4817" rel="#L4817">4817</span>
<span id="L4818" rel="#L4818">4818</span>
<span id="L4819" rel="#L4819">4819</span>
<span id="L4820" rel="#L4820">4820</span>
<span id="L4821" rel="#L4821">4821</span>
<span id="L4822" rel="#L4822">4822</span>
<span id="L4823" rel="#L4823">4823</span>
<span id="L4824" rel="#L4824">4824</span>
<span id="L4825" rel="#L4825">4825</span>
<span id="L4826" rel="#L4826">4826</span>
<span id="L4827" rel="#L4827">4827</span>
<span id="L4828" rel="#L4828">4828</span>
<span id="L4829" rel="#L4829">4829</span>
<span id="L4830" rel="#L4830">4830</span>
<span id="L4831" rel="#L4831">4831</span>
<span id="L4832" rel="#L4832">4832</span>
<span id="L4833" rel="#L4833">4833</span>
<span id="L4834" rel="#L4834">4834</span>
<span id="L4835" rel="#L4835">4835</span>
<span id="L4836" rel="#L4836">4836</span>
<span id="L4837" rel="#L4837">4837</span>
<span id="L4838" rel="#L4838">4838</span>
<span id="L4839" rel="#L4839">4839</span>
<span id="L4840" rel="#L4840">4840</span>
<span id="L4841" rel="#L4841">4841</span>
<span id="L4842" rel="#L4842">4842</span>
<span id="L4843" rel="#L4843">4843</span>
<span id="L4844" rel="#L4844">4844</span>
<span id="L4845" rel="#L4845">4845</span>
<span id="L4846" rel="#L4846">4846</span>
<span id="L4847" rel="#L4847">4847</span>
<span id="L4848" rel="#L4848">4848</span>
<span id="L4849" rel="#L4849">4849</span>
<span id="L4850" rel="#L4850">4850</span>
<span id="L4851" rel="#L4851">4851</span>
<span id="L4852" rel="#L4852">4852</span>
<span id="L4853" rel="#L4853">4853</span>
<span id="L4854" rel="#L4854">4854</span>
<span id="L4855" rel="#L4855">4855</span>
<span id="L4856" rel="#L4856">4856</span>
<span id="L4857" rel="#L4857">4857</span>
<span id="L4858" rel="#L4858">4858</span>
<span id="L4859" rel="#L4859">4859</span>
<span id="L4860" rel="#L4860">4860</span>
<span id="L4861" rel="#L4861">4861</span>
<span id="L4862" rel="#L4862">4862</span>
<span id="L4863" rel="#L4863">4863</span>
<span id="L4864" rel="#L4864">4864</span>
<span id="L4865" rel="#L4865">4865</span>
<span id="L4866" rel="#L4866">4866</span>
<span id="L4867" rel="#L4867">4867</span>
<span id="L4868" rel="#L4868">4868</span>
<span id="L4869" rel="#L4869">4869</span>
<span id="L4870" rel="#L4870">4870</span>
<span id="L4871" rel="#L4871">4871</span>
<span id="L4872" rel="#L4872">4872</span>
<span id="L4873" rel="#L4873">4873</span>
<span id="L4874" rel="#L4874">4874</span>
<span id="L4875" rel="#L4875">4875</span>
<span id="L4876" rel="#L4876">4876</span>
<span id="L4877" rel="#L4877">4877</span>
<span id="L4878" rel="#L4878">4878</span>
<span id="L4879" rel="#L4879">4879</span>
<span id="L4880" rel="#L4880">4880</span>
<span id="L4881" rel="#L4881">4881</span>
<span id="L4882" rel="#L4882">4882</span>
<span id="L4883" rel="#L4883">4883</span>
<span id="L4884" rel="#L4884">4884</span>
<span id="L4885" rel="#L4885">4885</span>
<span id="L4886" rel="#L4886">4886</span>
<span id="L4887" rel="#L4887">4887</span>
<span id="L4888" rel="#L4888">4888</span>
<span id="L4889" rel="#L4889">4889</span>
<span id="L4890" rel="#L4890">4890</span>
<span id="L4891" rel="#L4891">4891</span>
<span id="L4892" rel="#L4892">4892</span>
<span id="L4893" rel="#L4893">4893</span>
<span id="L4894" rel="#L4894">4894</span>
<span id="L4895" rel="#L4895">4895</span>
<span id="L4896" rel="#L4896">4896</span>
<span id="L4897" rel="#L4897">4897</span>
<span id="L4898" rel="#L4898">4898</span>
<span id="L4899" rel="#L4899">4899</span>
<span id="L4900" rel="#L4900">4900</span>
<span id="L4901" rel="#L4901">4901</span>
<span id="L4902" rel="#L4902">4902</span>
<span id="L4903" rel="#L4903">4903</span>
<span id="L4904" rel="#L4904">4904</span>
<span id="L4905" rel="#L4905">4905</span>
<span id="L4906" rel="#L4906">4906</span>
<span id="L4907" rel="#L4907">4907</span>
<span id="L4908" rel="#L4908">4908</span>
<span id="L4909" rel="#L4909">4909</span>
<span id="L4910" rel="#L4910">4910</span>
<span id="L4911" rel="#L4911">4911</span>
<span id="L4912" rel="#L4912">4912</span>
<span id="L4913" rel="#L4913">4913</span>
<span id="L4914" rel="#L4914">4914</span>
<span id="L4915" rel="#L4915">4915</span>
<span id="L4916" rel="#L4916">4916</span>
<span id="L4917" rel="#L4917">4917</span>
<span id="L4918" rel="#L4918">4918</span>
<span id="L4919" rel="#L4919">4919</span>
<span id="L4920" rel="#L4920">4920</span>
<span id="L4921" rel="#L4921">4921</span>
<span id="L4922" rel="#L4922">4922</span>
<span id="L4923" rel="#L4923">4923</span>
<span id="L4924" rel="#L4924">4924</span>
<span id="L4925" rel="#L4925">4925</span>
<span id="L4926" rel="#L4926">4926</span>
<span id="L4927" rel="#L4927">4927</span>
<span id="L4928" rel="#L4928">4928</span>
<span id="L4929" rel="#L4929">4929</span>
<span id="L4930" rel="#L4930">4930</span>
<span id="L4931" rel="#L4931">4931</span>
<span id="L4932" rel="#L4932">4932</span>
<span id="L4933" rel="#L4933">4933</span>
<span id="L4934" rel="#L4934">4934</span>
<span id="L4935" rel="#L4935">4935</span>
<span id="L4936" rel="#L4936">4936</span>
<span id="L4937" rel="#L4937">4937</span>
<span id="L4938" rel="#L4938">4938</span>
<span id="L4939" rel="#L4939">4939</span>
<span id="L4940" rel="#L4940">4940</span>
<span id="L4941" rel="#L4941">4941</span>
<span id="L4942" rel="#L4942">4942</span>
<span id="L4943" rel="#L4943">4943</span>
<span id="L4944" rel="#L4944">4944</span>
<span id="L4945" rel="#L4945">4945</span>
<span id="L4946" rel="#L4946">4946</span>
<span id="L4947" rel="#L4947">4947</span>
<span id="L4948" rel="#L4948">4948</span>
<span id="L4949" rel="#L4949">4949</span>
<span id="L4950" rel="#L4950">4950</span>
<span id="L4951" rel="#L4951">4951</span>
<span id="L4952" rel="#L4952">4952</span>
<span id="L4953" rel="#L4953">4953</span>
<span id="L4954" rel="#L4954">4954</span>
<span id="L4955" rel="#L4955">4955</span>
<span id="L4956" rel="#L4956">4956</span>
<span id="L4957" rel="#L4957">4957</span>
<span id="L4958" rel="#L4958">4958</span>
<span id="L4959" rel="#L4959">4959</span>
<span id="L4960" rel="#L4960">4960</span>
<span id="L4961" rel="#L4961">4961</span>
<span id="L4962" rel="#L4962">4962</span>
<span id="L4963" rel="#L4963">4963</span>
<span id="L4964" rel="#L4964">4964</span>
<span id="L4965" rel="#L4965">4965</span>
<span id="L4966" rel="#L4966">4966</span>
<span id="L4967" rel="#L4967">4967</span>
<span id="L4968" rel="#L4968">4968</span>
<span id="L4969" rel="#L4969">4969</span>
<span id="L4970" rel="#L4970">4970</span>
<span id="L4971" rel="#L4971">4971</span>
<span id="L4972" rel="#L4972">4972</span>
<span id="L4973" rel="#L4973">4973</span>
<span id="L4974" rel="#L4974">4974</span>
<span id="L4975" rel="#L4975">4975</span>
<span id="L4976" rel="#L4976">4976</span>
<span id="L4977" rel="#L4977">4977</span>
<span id="L4978" rel="#L4978">4978</span>
<span id="L4979" rel="#L4979">4979</span>
<span id="L4980" rel="#L4980">4980</span>
<span id="L4981" rel="#L4981">4981</span>
<span id="L4982" rel="#L4982">4982</span>
<span id="L4983" rel="#L4983">4983</span>
<span id="L4984" rel="#L4984">4984</span>
<span id="L4985" rel="#L4985">4985</span>
<span id="L4986" rel="#L4986">4986</span>
<span id="L4987" rel="#L4987">4987</span>
<span id="L4988" rel="#L4988">4988</span>
<span id="L4989" rel="#L4989">4989</span>
<span id="L4990" rel="#L4990">4990</span>
<span id="L4991" rel="#L4991">4991</span>
<span id="L4992" rel="#L4992">4992</span>
<span id="L4993" rel="#L4993">4993</span>
<span id="L4994" rel="#L4994">4994</span>
<span id="L4995" rel="#L4995">4995</span>
<span id="L4996" rel="#L4996">4996</span>
<span id="L4997" rel="#L4997">4997</span>
<span id="L4998" rel="#L4998">4998</span>
<span id="L4999" rel="#L4999">4999</span>
<span id="L5000" rel="#L5000">5000</span>
<span id="L5001" rel="#L5001">5001</span>
<span id="L5002" rel="#L5002">5002</span>
<span id="L5003" rel="#L5003">5003</span>
<span id="L5004" rel="#L5004">5004</span>
<span id="L5005" rel="#L5005">5005</span>
<span id="L5006" rel="#L5006">5006</span>
<span id="L5007" rel="#L5007">5007</span>
<span id="L5008" rel="#L5008">5008</span>
<span id="L5009" rel="#L5009">5009</span>
<span id="L5010" rel="#L5010">5010</span>
<span id="L5011" rel="#L5011">5011</span>
<span id="L5012" rel="#L5012">5012</span>
<span id="L5013" rel="#L5013">5013</span>
<span id="L5014" rel="#L5014">5014</span>
<span id="L5015" rel="#L5015">5015</span>
<span id="L5016" rel="#L5016">5016</span>
<span id="L5017" rel="#L5017">5017</span>
<span id="L5018" rel="#L5018">5018</span>
<span id="L5019" rel="#L5019">5019</span>
<span id="L5020" rel="#L5020">5020</span>
<span id="L5021" rel="#L5021">5021</span>
<span id="L5022" rel="#L5022">5022</span>
<span id="L5023" rel="#L5023">5023</span>
<span id="L5024" rel="#L5024">5024</span>
<span id="L5025" rel="#L5025">5025</span>
<span id="L5026" rel="#L5026">5026</span>
<span id="L5027" rel="#L5027">5027</span>
<span id="L5028" rel="#L5028">5028</span>
<span id="L5029" rel="#L5029">5029</span>
<span id="L5030" rel="#L5030">5030</span>
<span id="L5031" rel="#L5031">5031</span>
<span id="L5032" rel="#L5032">5032</span>
<span id="L5033" rel="#L5033">5033</span>
<span id="L5034" rel="#L5034">5034</span>
<span id="L5035" rel="#L5035">5035</span>
<span id="L5036" rel="#L5036">5036</span>
<span id="L5037" rel="#L5037">5037</span>
<span id="L5038" rel="#L5038">5038</span>
<span id="L5039" rel="#L5039">5039</span>
<span id="L5040" rel="#L5040">5040</span>
<span id="L5041" rel="#L5041">5041</span>
<span id="L5042" rel="#L5042">5042</span>
<span id="L5043" rel="#L5043">5043</span>
<span id="L5044" rel="#L5044">5044</span>
<span id="L5045" rel="#L5045">5045</span>
<span id="L5046" rel="#L5046">5046</span>
<span id="L5047" rel="#L5047">5047</span>
<span id="L5048" rel="#L5048">5048</span>
<span id="L5049" rel="#L5049">5049</span>
<span id="L5050" rel="#L5050">5050</span>
<span id="L5051" rel="#L5051">5051</span>
<span id="L5052" rel="#L5052">5052</span>
<span id="L5053" rel="#L5053">5053</span>
<span id="L5054" rel="#L5054">5054</span>
<span id="L5055" rel="#L5055">5055</span>
<span id="L5056" rel="#L5056">5056</span>
<span id="L5057" rel="#L5057">5057</span>
<span id="L5058" rel="#L5058">5058</span>
<span id="L5059" rel="#L5059">5059</span>
<span id="L5060" rel="#L5060">5060</span>
<span id="L5061" rel="#L5061">5061</span>
<span id="L5062" rel="#L5062">5062</span>
<span id="L5063" rel="#L5063">5063</span>
<span id="L5064" rel="#L5064">5064</span>
<span id="L5065" rel="#L5065">5065</span>
<span id="L5066" rel="#L5066">5066</span>
<span id="L5067" rel="#L5067">5067</span>
<span id="L5068" rel="#L5068">5068</span>
<span id="L5069" rel="#L5069">5069</span>
<span id="L5070" rel="#L5070">5070</span>
<span id="L5071" rel="#L5071">5071</span>
<span id="L5072" rel="#L5072">5072</span>
<span id="L5073" rel="#L5073">5073</span>
<span id="L5074" rel="#L5074">5074</span>
<span id="L5075" rel="#L5075">5075</span>
<span id="L5076" rel="#L5076">5076</span>
<span id="L5077" rel="#L5077">5077</span>
<span id="L5078" rel="#L5078">5078</span>
<span id="L5079" rel="#L5079">5079</span>
<span id="L5080" rel="#L5080">5080</span>
<span id="L5081" rel="#L5081">5081</span>
<span id="L5082" rel="#L5082">5082</span>
<span id="L5083" rel="#L5083">5083</span>
<span id="L5084" rel="#L5084">5084</span>
<span id="L5085" rel="#L5085">5085</span>
<span id="L5086" rel="#L5086">5086</span>
<span id="L5087" rel="#L5087">5087</span>
<span id="L5088" rel="#L5088">5088</span>
<span id="L5089" rel="#L5089">5089</span>
<span id="L5090" rel="#L5090">5090</span>
<span id="L5091" rel="#L5091">5091</span>
<span id="L5092" rel="#L5092">5092</span>
<span id="L5093" rel="#L5093">5093</span>
<span id="L5094" rel="#L5094">5094</span>
<span id="L5095" rel="#L5095">5095</span>
<span id="L5096" rel="#L5096">5096</span>
<span id="L5097" rel="#L5097">5097</span>
<span id="L5098" rel="#L5098">5098</span>
<span id="L5099" rel="#L5099">5099</span>
<span id="L5100" rel="#L5100">5100</span>
<span id="L5101" rel="#L5101">5101</span>
<span id="L5102" rel="#L5102">5102</span>
<span id="L5103" rel="#L5103">5103</span>
<span id="L5104" rel="#L5104">5104</span>
<span id="L5105" rel="#L5105">5105</span>
<span id="L5106" rel="#L5106">5106</span>
<span id="L5107" rel="#L5107">5107</span>
<span id="L5108" rel="#L5108">5108</span>
<span id="L5109" rel="#L5109">5109</span>
<span id="L5110" rel="#L5110">5110</span>
<span id="L5111" rel="#L5111">5111</span>
<span id="L5112" rel="#L5112">5112</span>
<span id="L5113" rel="#L5113">5113</span>
<span id="L5114" rel="#L5114">5114</span>
<span id="L5115" rel="#L5115">5115</span>
<span id="L5116" rel="#L5116">5116</span>
<span id="L5117" rel="#L5117">5117</span>
<span id="L5118" rel="#L5118">5118</span>
<span id="L5119" rel="#L5119">5119</span>
<span id="L5120" rel="#L5120">5120</span>
<span id="L5121" rel="#L5121">5121</span>
<span id="L5122" rel="#L5122">5122</span>
<span id="L5123" rel="#L5123">5123</span>
<span id="L5124" rel="#L5124">5124</span>
<span id="L5125" rel="#L5125">5125</span>
<span id="L5126" rel="#L5126">5126</span>
<span id="L5127" rel="#L5127">5127</span>
<span id="L5128" rel="#L5128">5128</span>
<span id="L5129" rel="#L5129">5129</span>
<span id="L5130" rel="#L5130">5130</span>
<span id="L5131" rel="#L5131">5131</span>
<span id="L5132" rel="#L5132">5132</span>
<span id="L5133" rel="#L5133">5133</span>
<span id="L5134" rel="#L5134">5134</span>
<span id="L5135" rel="#L5135">5135</span>
<span id="L5136" rel="#L5136">5136</span>
<span id="L5137" rel="#L5137">5137</span>
<span id="L5138" rel="#L5138">5138</span>
<span id="L5139" rel="#L5139">5139</span>
<span id="L5140" rel="#L5140">5140</span>
<span id="L5141" rel="#L5141">5141</span>
<span id="L5142" rel="#L5142">5142</span>
<span id="L5143" rel="#L5143">5143</span>
<span id="L5144" rel="#L5144">5144</span>
<span id="L5145" rel="#L5145">5145</span>
<span id="L5146" rel="#L5146">5146</span>
<span id="L5147" rel="#L5147">5147</span>
<span id="L5148" rel="#L5148">5148</span>
<span id="L5149" rel="#L5149">5149</span>
<span id="L5150" rel="#L5150">5150</span>
<span id="L5151" rel="#L5151">5151</span>
<span id="L5152" rel="#L5152">5152</span>
<span id="L5153" rel="#L5153">5153</span>
<span id="L5154" rel="#L5154">5154</span>
<span id="L5155" rel="#L5155">5155</span>
<span id="L5156" rel="#L5156">5156</span>
<span id="L5157" rel="#L5157">5157</span>
<span id="L5158" rel="#L5158">5158</span>
<span id="L5159" rel="#L5159">5159</span>
<span id="L5160" rel="#L5160">5160</span>
<span id="L5161" rel="#L5161">5161</span>
<span id="L5162" rel="#L5162">5162</span>
<span id="L5163" rel="#L5163">5163</span>
<span id="L5164" rel="#L5164">5164</span>
<span id="L5165" rel="#L5165">5165</span>
<span id="L5166" rel="#L5166">5166</span>
<span id="L5167" rel="#L5167">5167</span>
<span id="L5168" rel="#L5168">5168</span>
<span id="L5169" rel="#L5169">5169</span>
<span id="L5170" rel="#L5170">5170</span>
<span id="L5171" rel="#L5171">5171</span>
<span id="L5172" rel="#L5172">5172</span>
<span id="L5173" rel="#L5173">5173</span>
<span id="L5174" rel="#L5174">5174</span>
<span id="L5175" rel="#L5175">5175</span>
<span id="L5176" rel="#L5176">5176</span>
<span id="L5177" rel="#L5177">5177</span>
<span id="L5178" rel="#L5178">5178</span>
<span id="L5179" rel="#L5179">5179</span>
<span id="L5180" rel="#L5180">5180</span>
<span id="L5181" rel="#L5181">5181</span>
<span id="L5182" rel="#L5182">5182</span>
<span id="L5183" rel="#L5183">5183</span>
<span id="L5184" rel="#L5184">5184</span>
<span id="L5185" rel="#L5185">5185</span>
<span id="L5186" rel="#L5186">5186</span>
<span id="L5187" rel="#L5187">5187</span>
<span id="L5188" rel="#L5188">5188</span>
<span id="L5189" rel="#L5189">5189</span>
<span id="L5190" rel="#L5190">5190</span>
<span id="L5191" rel="#L5191">5191</span>
<span id="L5192" rel="#L5192">5192</span>
<span id="L5193" rel="#L5193">5193</span>
<span id="L5194" rel="#L5194">5194</span>
<span id="L5195" rel="#L5195">5195</span>
<span id="L5196" rel="#L5196">5196</span>
<span id="L5197" rel="#L5197">5197</span>
<span id="L5198" rel="#L5198">5198</span>
<span id="L5199" rel="#L5199">5199</span>
<span id="L5200" rel="#L5200">5200</span>
<span id="L5201" rel="#L5201">5201</span>
<span id="L5202" rel="#L5202">5202</span>
<span id="L5203" rel="#L5203">5203</span>
<span id="L5204" rel="#L5204">5204</span>
<span id="L5205" rel="#L5205">5205</span>
<span id="L5206" rel="#L5206">5206</span>
<span id="L5207" rel="#L5207">5207</span>
<span id="L5208" rel="#L5208">5208</span>
<span id="L5209" rel="#L5209">5209</span>
<span id="L5210" rel="#L5210">5210</span>
<span id="L5211" rel="#L5211">5211</span>
<span id="L5212" rel="#L5212">5212</span>
<span id="L5213" rel="#L5213">5213</span>
<span id="L5214" rel="#L5214">5214</span>
<span id="L5215" rel="#L5215">5215</span>
<span id="L5216" rel="#L5216">5216</span>
<span id="L5217" rel="#L5217">5217</span>
<span id="L5218" rel="#L5218">5218</span>
<span id="L5219" rel="#L5219">5219</span>
<span id="L5220" rel="#L5220">5220</span>
<span id="L5221" rel="#L5221">5221</span>
<span id="L5222" rel="#L5222">5222</span>
<span id="L5223" rel="#L5223">5223</span>
<span id="L5224" rel="#L5224">5224</span>
<span id="L5225" rel="#L5225">5225</span>
<span id="L5226" rel="#L5226">5226</span>
<span id="L5227" rel="#L5227">5227</span>
<span id="L5228" rel="#L5228">5228</span>
<span id="L5229" rel="#L5229">5229</span>
<span id="L5230" rel="#L5230">5230</span>
<span id="L5231" rel="#L5231">5231</span>
<span id="L5232" rel="#L5232">5232</span>
<span id="L5233" rel="#L5233">5233</span>
<span id="L5234" rel="#L5234">5234</span>
<span id="L5235" rel="#L5235">5235</span>
<span id="L5236" rel="#L5236">5236</span>
<span id="L5237" rel="#L5237">5237</span>
<span id="L5238" rel="#L5238">5238</span>
<span id="L5239" rel="#L5239">5239</span>
<span id="L5240" rel="#L5240">5240</span>
<span id="L5241" rel="#L5241">5241</span>
<span id="L5242" rel="#L5242">5242</span>
<span id="L5243" rel="#L5243">5243</span>
<span id="L5244" rel="#L5244">5244</span>
<span id="L5245" rel="#L5245">5245</span>
<span id="L5246" rel="#L5246">5246</span>
<span id="L5247" rel="#L5247">5247</span>
<span id="L5248" rel="#L5248">5248</span>
<span id="L5249" rel="#L5249">5249</span>
<span id="L5250" rel="#L5250">5250</span>
<span id="L5251" rel="#L5251">5251</span>
<span id="L5252" rel="#L5252">5252</span>
<span id="L5253" rel="#L5253">5253</span>
<span id="L5254" rel="#L5254">5254</span>
<span id="L5255" rel="#L5255">5255</span>
<span id="L5256" rel="#L5256">5256</span>
<span id="L5257" rel="#L5257">5257</span>
<span id="L5258" rel="#L5258">5258</span>
<span id="L5259" rel="#L5259">5259</span>
<span id="L5260" rel="#L5260">5260</span>
<span id="L5261" rel="#L5261">5261</span>
<span id="L5262" rel="#L5262">5262</span>
<span id="L5263" rel="#L5263">5263</span>
<span id="L5264" rel="#L5264">5264</span>
<span id="L5265" rel="#L5265">5265</span>
<span id="L5266" rel="#L5266">5266</span>
<span id="L5267" rel="#L5267">5267</span>
<span id="L5268" rel="#L5268">5268</span>
<span id="L5269" rel="#L5269">5269</span>
<span id="L5270" rel="#L5270">5270</span>
<span id="L5271" rel="#L5271">5271</span>
<span id="L5272" rel="#L5272">5272</span>
<span id="L5273" rel="#L5273">5273</span>
<span id="L5274" rel="#L5274">5274</span>
<span id="L5275" rel="#L5275">5275</span>
<span id="L5276" rel="#L5276">5276</span>
<span id="L5277" rel="#L5277">5277</span>
<span id="L5278" rel="#L5278">5278</span>
<span id="L5279" rel="#L5279">5279</span>
<span id="L5280" rel="#L5280">5280</span>
<span id="L5281" rel="#L5281">5281</span>
<span id="L5282" rel="#L5282">5282</span>
<span id="L5283" rel="#L5283">5283</span>
<span id="L5284" rel="#L5284">5284</span>
<span id="L5285" rel="#L5285">5285</span>
<span id="L5286" rel="#L5286">5286</span>
<span id="L5287" rel="#L5287">5287</span>
<span id="L5288" rel="#L5288">5288</span>
<span id="L5289" rel="#L5289">5289</span>
<span id="L5290" rel="#L5290">5290</span>
<span id="L5291" rel="#L5291">5291</span>
<span id="L5292" rel="#L5292">5292</span>
<span id="L5293" rel="#L5293">5293</span>
<span id="L5294" rel="#L5294">5294</span>
<span id="L5295" rel="#L5295">5295</span>
<span id="L5296" rel="#L5296">5296</span>
<span id="L5297" rel="#L5297">5297</span>
<span id="L5298" rel="#L5298">5298</span>
<span id="L5299" rel="#L5299">5299</span>
<span id="L5300" rel="#L5300">5300</span>
<span id="L5301" rel="#L5301">5301</span>
<span id="L5302" rel="#L5302">5302</span>
<span id="L5303" rel="#L5303">5303</span>
<span id="L5304" rel="#L5304">5304</span>
<span id="L5305" rel="#L5305">5305</span>
<span id="L5306" rel="#L5306">5306</span>
<span id="L5307" rel="#L5307">5307</span>
<span id="L5308" rel="#L5308">5308</span>
<span id="L5309" rel="#L5309">5309</span>
<span id="L5310" rel="#L5310">5310</span>
<span id="L5311" rel="#L5311">5311</span>
<span id="L5312" rel="#L5312">5312</span>
<span id="L5313" rel="#L5313">5313</span>
<span id="L5314" rel="#L5314">5314</span>
<span id="L5315" rel="#L5315">5315</span>
<span id="L5316" rel="#L5316">5316</span>
<span id="L5317" rel="#L5317">5317</span>
<span id="L5318" rel="#L5318">5318</span>
<span id="L5319" rel="#L5319">5319</span>
<span id="L5320" rel="#L5320">5320</span>
<span id="L5321" rel="#L5321">5321</span>
<span id="L5322" rel="#L5322">5322</span>
<span id="L5323" rel="#L5323">5323</span>
<span id="L5324" rel="#L5324">5324</span>
<span id="L5325" rel="#L5325">5325</span>
<span id="L5326" rel="#L5326">5326</span>
<span id="L5327" rel="#L5327">5327</span>
<span id="L5328" rel="#L5328">5328</span>
<span id="L5329" rel="#L5329">5329</span>
<span id="L5330" rel="#L5330">5330</span>
<span id="L5331" rel="#L5331">5331</span>
<span id="L5332" rel="#L5332">5332</span>
<span id="L5333" rel="#L5333">5333</span>
<span id="L5334" rel="#L5334">5334</span>
<span id="L5335" rel="#L5335">5335</span>
<span id="L5336" rel="#L5336">5336</span>
<span id="L5337" rel="#L5337">5337</span>
<span id="L5338" rel="#L5338">5338</span>
<span id="L5339" rel="#L5339">5339</span>
<span id="L5340" rel="#L5340">5340</span>
<span id="L5341" rel="#L5341">5341</span>
<span id="L5342" rel="#L5342">5342</span>
<span id="L5343" rel="#L5343">5343</span>
<span id="L5344" rel="#L5344">5344</span>
<span id="L5345" rel="#L5345">5345</span>
<span id="L5346" rel="#L5346">5346</span>
<span id="L5347" rel="#L5347">5347</span>
<span id="L5348" rel="#L5348">5348</span>
<span id="L5349" rel="#L5349">5349</span>
<span id="L5350" rel="#L5350">5350</span>
<span id="L5351" rel="#L5351">5351</span>
<span id="L5352" rel="#L5352">5352</span>
<span id="L5353" rel="#L5353">5353</span>
<span id="L5354" rel="#L5354">5354</span>
<span id="L5355" rel="#L5355">5355</span>
<span id="L5356" rel="#L5356">5356</span>
<span id="L5357" rel="#L5357">5357</span>
<span id="L5358" rel="#L5358">5358</span>
<span id="L5359" rel="#L5359">5359</span>
<span id="L5360" rel="#L5360">5360</span>
<span id="L5361" rel="#L5361">5361</span>
<span id="L5362" rel="#L5362">5362</span>
<span id="L5363" rel="#L5363">5363</span>
<span id="L5364" rel="#L5364">5364</span>
<span id="L5365" rel="#L5365">5365</span>
<span id="L5366" rel="#L5366">5366</span>
<span id="L5367" rel="#L5367">5367</span>
<span id="L5368" rel="#L5368">5368</span>
<span id="L5369" rel="#L5369">5369</span>
<span id="L5370" rel="#L5370">5370</span>
<span id="L5371" rel="#L5371">5371</span>
<span id="L5372" rel="#L5372">5372</span>
<span id="L5373" rel="#L5373">5373</span>
<span id="L5374" rel="#L5374">5374</span>
<span id="L5375" rel="#L5375">5375</span>
<span id="L5376" rel="#L5376">5376</span>
<span id="L5377" rel="#L5377">5377</span>
<span id="L5378" rel="#L5378">5378</span>
<span id="L5379" rel="#L5379">5379</span>
<span id="L5380" rel="#L5380">5380</span>
<span id="L5381" rel="#L5381">5381</span>
<span id="L5382" rel="#L5382">5382</span>
<span id="L5383" rel="#L5383">5383</span>
<span id="L5384" rel="#L5384">5384</span>
<span id="L5385" rel="#L5385">5385</span>
<span id="L5386" rel="#L5386">5386</span>
<span id="L5387" rel="#L5387">5387</span>
<span id="L5388" rel="#L5388">5388</span>
<span id="L5389" rel="#L5389">5389</span>
<span id="L5390" rel="#L5390">5390</span>
<span id="L5391" rel="#L5391">5391</span>
<span id="L5392" rel="#L5392">5392</span>
<span id="L5393" rel="#L5393">5393</span>
<span id="L5394" rel="#L5394">5394</span>
<span id="L5395" rel="#L5395">5395</span>
<span id="L5396" rel="#L5396">5396</span>
<span id="L5397" rel="#L5397">5397</span>
<span id="L5398" rel="#L5398">5398</span>
<span id="L5399" rel="#L5399">5399</span>
<span id="L5400" rel="#L5400">5400</span>
<span id="L5401" rel="#L5401">5401</span>
<span id="L5402" rel="#L5402">5402</span>
<span id="L5403" rel="#L5403">5403</span>
<span id="L5404" rel="#L5404">5404</span>
<span id="L5405" rel="#L5405">5405</span>
<span id="L5406" rel="#L5406">5406</span>
<span id="L5407" rel="#L5407">5407</span>
<span id="L5408" rel="#L5408">5408</span>
<span id="L5409" rel="#L5409">5409</span>
<span id="L5410" rel="#L5410">5410</span>
<span id="L5411" rel="#L5411">5411</span>
<span id="L5412" rel="#L5412">5412</span>
<span id="L5413" rel="#L5413">5413</span>
<span id="L5414" rel="#L5414">5414</span>
<span id="L5415" rel="#L5415">5415</span>
<span id="L5416" rel="#L5416">5416</span>
<span id="L5417" rel="#L5417">5417</span>
<span id="L5418" rel="#L5418">5418</span>
<span id="L5419" rel="#L5419">5419</span>
<span id="L5420" rel="#L5420">5420</span>
<span id="L5421" rel="#L5421">5421</span>
<span id="L5422" rel="#L5422">5422</span>
<span id="L5423" rel="#L5423">5423</span>
<span id="L5424" rel="#L5424">5424</span>
<span id="L5425" rel="#L5425">5425</span>
<span id="L5426" rel="#L5426">5426</span>
<span id="L5427" rel="#L5427">5427</span>
<span id="L5428" rel="#L5428">5428</span>
<span id="L5429" rel="#L5429">5429</span>
<span id="L5430" rel="#L5430">5430</span>
<span id="L5431" rel="#L5431">5431</span>
<span id="L5432" rel="#L5432">5432</span>
<span id="L5433" rel="#L5433">5433</span>
<span id="L5434" rel="#L5434">5434</span>
<span id="L5435" rel="#L5435">5435</span>
<span id="L5436" rel="#L5436">5436</span>
<span id="L5437" rel="#L5437">5437</span>
<span id="L5438" rel="#L5438">5438</span>
<span id="L5439" rel="#L5439">5439</span>
<span id="L5440" rel="#L5440">5440</span>
<span id="L5441" rel="#L5441">5441</span>
<span id="L5442" rel="#L5442">5442</span>
<span id="L5443" rel="#L5443">5443</span>
<span id="L5444" rel="#L5444">5444</span>
<span id="L5445" rel="#L5445">5445</span>
<span id="L5446" rel="#L5446">5446</span>
<span id="L5447" rel="#L5447">5447</span>
<span id="L5448" rel="#L5448">5448</span>
<span id="L5449" rel="#L5449">5449</span>
<span id="L5450" rel="#L5450">5450</span>
<span id="L5451" rel="#L5451">5451</span>
<span id="L5452" rel="#L5452">5452</span>
<span id="L5453" rel="#L5453">5453</span>
<span id="L5454" rel="#L5454">5454</span>
<span id="L5455" rel="#L5455">5455</span>
<span id="L5456" rel="#L5456">5456</span>
<span id="L5457" rel="#L5457">5457</span>
<span id="L5458" rel="#L5458">5458</span>
<span id="L5459" rel="#L5459">5459</span>
<span id="L5460" rel="#L5460">5460</span>
<span id="L5461" rel="#L5461">5461</span>
<span id="L5462" rel="#L5462">5462</span>
<span id="L5463" rel="#L5463">5463</span>
<span id="L5464" rel="#L5464">5464</span>
<span id="L5465" rel="#L5465">5465</span>
<span id="L5466" rel="#L5466">5466</span>
<span id="L5467" rel="#L5467">5467</span>
<span id="L5468" rel="#L5468">5468</span>
<span id="L5469" rel="#L5469">5469</span>
<span id="L5470" rel="#L5470">5470</span>
<span id="L5471" rel="#L5471">5471</span>
<span id="L5472" rel="#L5472">5472</span>
<span id="L5473" rel="#L5473">5473</span>
<span id="L5474" rel="#L5474">5474</span>
<span id="L5475" rel="#L5475">5475</span>
<span id="L5476" rel="#L5476">5476</span>
<span id="L5477" rel="#L5477">5477</span>
<span id="L5478" rel="#L5478">5478</span>
<span id="L5479" rel="#L5479">5479</span>
<span id="L5480" rel="#L5480">5480</span>
<span id="L5481" rel="#L5481">5481</span>
<span id="L5482" rel="#L5482">5482</span>
<span id="L5483" rel="#L5483">5483</span>
<span id="L5484" rel="#L5484">5484</span>
<span id="L5485" rel="#L5485">5485</span>
<span id="L5486" rel="#L5486">5486</span>
<span id="L5487" rel="#L5487">5487</span>
<span id="L5488" rel="#L5488">5488</span>
<span id="L5489" rel="#L5489">5489</span>
<span id="L5490" rel="#L5490">5490</span>
<span id="L5491" rel="#L5491">5491</span>
<span id="L5492" rel="#L5492">5492</span>
<span id="L5493" rel="#L5493">5493</span>
<span id="L5494" rel="#L5494">5494</span>
<span id="L5495" rel="#L5495">5495</span>
<span id="L5496" rel="#L5496">5496</span>
<span id="L5497" rel="#L5497">5497</span>
<span id="L5498" rel="#L5498">5498</span>
<span id="L5499" rel="#L5499">5499</span>
<span id="L5500" rel="#L5500">5500</span>
<span id="L5501" rel="#L5501">5501</span>
<span id="L5502" rel="#L5502">5502</span>
<span id="L5503" rel="#L5503">5503</span>
<span id="L5504" rel="#L5504">5504</span>
<span id="L5505" rel="#L5505">5505</span>
<span id="L5506" rel="#L5506">5506</span>
<span id="L5507" rel="#L5507">5507</span>
<span id="L5508" rel="#L5508">5508</span>
<span id="L5509" rel="#L5509">5509</span>
<span id="L5510" rel="#L5510">5510</span>
<span id="L5511" rel="#L5511">5511</span>
<span id="L5512" rel="#L5512">5512</span>
<span id="L5513" rel="#L5513">5513</span>
<span id="L5514" rel="#L5514">5514</span>
<span id="L5515" rel="#L5515">5515</span>
<span id="L5516" rel="#L5516">5516</span>
<span id="L5517" rel="#L5517">5517</span>
<span id="L5518" rel="#L5518">5518</span>
<span id="L5519" rel="#L5519">5519</span>
<span id="L5520" rel="#L5520">5520</span>
<span id="L5521" rel="#L5521">5521</span>
<span id="L5522" rel="#L5522">5522</span>
<span id="L5523" rel="#L5523">5523</span>
<span id="L5524" rel="#L5524">5524</span>
<span id="L5525" rel="#L5525">5525</span>
<span id="L5526" rel="#L5526">5526</span>
<span id="L5527" rel="#L5527">5527</span>
<span id="L5528" rel="#L5528">5528</span>
<span id="L5529" rel="#L5529">5529</span>
<span id="L5530" rel="#L5530">5530</span>
<span id="L5531" rel="#L5531">5531</span>
<span id="L5532" rel="#L5532">5532</span>
<span id="L5533" rel="#L5533">5533</span>
<span id="L5534" rel="#L5534">5534</span>
<span id="L5535" rel="#L5535">5535</span>
<span id="L5536" rel="#L5536">5536</span>
<span id="L5537" rel="#L5537">5537</span>
<span id="L5538" rel="#L5538">5538</span>
<span id="L5539" rel="#L5539">5539</span>
<span id="L5540" rel="#L5540">5540</span>
<span id="L5541" rel="#L5541">5541</span>
<span id="L5542" rel="#L5542">5542</span>
<span id="L5543" rel="#L5543">5543</span>
<span id="L5544" rel="#L5544">5544</span>
<span id="L5545" rel="#L5545">5545</span>
<span id="L5546" rel="#L5546">5546</span>
<span id="L5547" rel="#L5547">5547</span>
<span id="L5548" rel="#L5548">5548</span>
<span id="L5549" rel="#L5549">5549</span>
<span id="L5550" rel="#L5550">5550</span>
<span id="L5551" rel="#L5551">5551</span>
<span id="L5552" rel="#L5552">5552</span>
<span id="L5553" rel="#L5553">5553</span>
<span id="L5554" rel="#L5554">5554</span>
<span id="L5555" rel="#L5555">5555</span>
<span id="L5556" rel="#L5556">5556</span>
<span id="L5557" rel="#L5557">5557</span>
<span id="L5558" rel="#L5558">5558</span>
<span id="L5559" rel="#L5559">5559</span>
<span id="L5560" rel="#L5560">5560</span>
<span id="L5561" rel="#L5561">5561</span>
<span id="L5562" rel="#L5562">5562</span>
<span id="L5563" rel="#L5563">5563</span>
<span id="L5564" rel="#L5564">5564</span>
<span id="L5565" rel="#L5565">5565</span>
<span id="L5566" rel="#L5566">5566</span>
<span id="L5567" rel="#L5567">5567</span>
<span id="L5568" rel="#L5568">5568</span>
<span id="L5569" rel="#L5569">5569</span>
<span id="L5570" rel="#L5570">5570</span>
<span id="L5571" rel="#L5571">5571</span>
<span id="L5572" rel="#L5572">5572</span>
<span id="L5573" rel="#L5573">5573</span>
<span id="L5574" rel="#L5574">5574</span>
<span id="L5575" rel="#L5575">5575</span>
<span id="L5576" rel="#L5576">5576</span>
<span id="L5577" rel="#L5577">5577</span>
<span id="L5578" rel="#L5578">5578</span>
<span id="L5579" rel="#L5579">5579</span>
<span id="L5580" rel="#L5580">5580</span>
<span id="L5581" rel="#L5581">5581</span>
<span id="L5582" rel="#L5582">5582</span>
<span id="L5583" rel="#L5583">5583</span>
<span id="L5584" rel="#L5584">5584</span>
<span id="L5585" rel="#L5585">5585</span>
<span id="L5586" rel="#L5586">5586</span>
<span id="L5587" rel="#L5587">5587</span>
<span id="L5588" rel="#L5588">5588</span>
<span id="L5589" rel="#L5589">5589</span>
<span id="L5590" rel="#L5590">5590</span>
<span id="L5591" rel="#L5591">5591</span>
<span id="L5592" rel="#L5592">5592</span>
<span id="L5593" rel="#L5593">5593</span>
<span id="L5594" rel="#L5594">5594</span>
<span id="L5595" rel="#L5595">5595</span>
<span id="L5596" rel="#L5596">5596</span>
<span id="L5597" rel="#L5597">5597</span>
<span id="L5598" rel="#L5598">5598</span>
<span id="L5599" rel="#L5599">5599</span>
<span id="L5600" rel="#L5600">5600</span>
<span id="L5601" rel="#L5601">5601</span>
<span id="L5602" rel="#L5602">5602</span>
<span id="L5603" rel="#L5603">5603</span>
<span id="L5604" rel="#L5604">5604</span>
<span id="L5605" rel="#L5605">5605</span>
<span id="L5606" rel="#L5606">5606</span>
<span id="L5607" rel="#L5607">5607</span>
<span id="L5608" rel="#L5608">5608</span>
<span id="L5609" rel="#L5609">5609</span>
<span id="L5610" rel="#L5610">5610</span>
<span id="L5611" rel="#L5611">5611</span>
<span id="L5612" rel="#L5612">5612</span>
<span id="L5613" rel="#L5613">5613</span>
<span id="L5614" rel="#L5614">5614</span>
<span id="L5615" rel="#L5615">5615</span>
<span id="L5616" rel="#L5616">5616</span>
<span id="L5617" rel="#L5617">5617</span>
<span id="L5618" rel="#L5618">5618</span>
<span id="L5619" rel="#L5619">5619</span>
<span id="L5620" rel="#L5620">5620</span>
<span id="L5621" rel="#L5621">5621</span>
<span id="L5622" rel="#L5622">5622</span>
<span id="L5623" rel="#L5623">5623</span>
<span id="L5624" rel="#L5624">5624</span>
<span id="L5625" rel="#L5625">5625</span>
<span id="L5626" rel="#L5626">5626</span>
<span id="L5627" rel="#L5627">5627</span>
<span id="L5628" rel="#L5628">5628</span>
<span id="L5629" rel="#L5629">5629</span>
<span id="L5630" rel="#L5630">5630</span>
<span id="L5631" rel="#L5631">5631</span>
<span id="L5632" rel="#L5632">5632</span>
<span id="L5633" rel="#L5633">5633</span>
<span id="L5634" rel="#L5634">5634</span>
<span id="L5635" rel="#L5635">5635</span>
<span id="L5636" rel="#L5636">5636</span>
<span id="L5637" rel="#L5637">5637</span>
<span id="L5638" rel="#L5638">5638</span>
<span id="L5639" rel="#L5639">5639</span>
<span id="L5640" rel="#L5640">5640</span>
<span id="L5641" rel="#L5641">5641</span>
<span id="L5642" rel="#L5642">5642</span>
<span id="L5643" rel="#L5643">5643</span>
<span id="L5644" rel="#L5644">5644</span>
<span id="L5645" rel="#L5645">5645</span>
<span id="L5646" rel="#L5646">5646</span>
<span id="L5647" rel="#L5647">5647</span>
<span id="L5648" rel="#L5648">5648</span>
<span id="L5649" rel="#L5649">5649</span>
<span id="L5650" rel="#L5650">5650</span>
<span id="L5651" rel="#L5651">5651</span>
<span id="L5652" rel="#L5652">5652</span>
<span id="L5653" rel="#L5653">5653</span>
<span id="L5654" rel="#L5654">5654</span>
<span id="L5655" rel="#L5655">5655</span>
<span id="L5656" rel="#L5656">5656</span>
<span id="L5657" rel="#L5657">5657</span>
<span id="L5658" rel="#L5658">5658</span>
<span id="L5659" rel="#L5659">5659</span>
<span id="L5660" rel="#L5660">5660</span>
<span id="L5661" rel="#L5661">5661</span>
<span id="L5662" rel="#L5662">5662</span>
<span id="L5663" rel="#L5663">5663</span>
<span id="L5664" rel="#L5664">5664</span>
<span id="L5665" rel="#L5665">5665</span>
<span id="L5666" rel="#L5666">5666</span>
<span id="L5667" rel="#L5667">5667</span>
<span id="L5668" rel="#L5668">5668</span>
<span id="L5669" rel="#L5669">5669</span>
<span id="L5670" rel="#L5670">5670</span>
<span id="L5671" rel="#L5671">5671</span>
<span id="L5672" rel="#L5672">5672</span>
<span id="L5673" rel="#L5673">5673</span>
<span id="L5674" rel="#L5674">5674</span>
<span id="L5675" rel="#L5675">5675</span>
<span id="L5676" rel="#L5676">5676</span>
<span id="L5677" rel="#L5677">5677</span>
<span id="L5678" rel="#L5678">5678</span>
<span id="L5679" rel="#L5679">5679</span>
<span id="L5680" rel="#L5680">5680</span>
<span id="L5681" rel="#L5681">5681</span>
<span id="L5682" rel="#L5682">5682</span>
<span id="L5683" rel="#L5683">5683</span>
<span id="L5684" rel="#L5684">5684</span>
<span id="L5685" rel="#L5685">5685</span>
<span id="L5686" rel="#L5686">5686</span>
<span id="L5687" rel="#L5687">5687</span>
<span id="L5688" rel="#L5688">5688</span>
<span id="L5689" rel="#L5689">5689</span>
<span id="L5690" rel="#L5690">5690</span>
<span id="L5691" rel="#L5691">5691</span>
<span id="L5692" rel="#L5692">5692</span>
<span id="L5693" rel="#L5693">5693</span>
<span id="L5694" rel="#L5694">5694</span>
<span id="L5695" rel="#L5695">5695</span>
<span id="L5696" rel="#L5696">5696</span>
<span id="L5697" rel="#L5697">5697</span>
<span id="L5698" rel="#L5698">5698</span>
<span id="L5699" rel="#L5699">5699</span>
<span id="L5700" rel="#L5700">5700</span>
<span id="L5701" rel="#L5701">5701</span>
<span id="L5702" rel="#L5702">5702</span>
<span id="L5703" rel="#L5703">5703</span>
<span id="L5704" rel="#L5704">5704</span>
<span id="L5705" rel="#L5705">5705</span>
<span id="L5706" rel="#L5706">5706</span>
<span id="L5707" rel="#L5707">5707</span>
<span id="L5708" rel="#L5708">5708</span>
<span id="L5709" rel="#L5709">5709</span>
<span id="L5710" rel="#L5710">5710</span>
<span id="L5711" rel="#L5711">5711</span>
<span id="L5712" rel="#L5712">5712</span>
<span id="L5713" rel="#L5713">5713</span>
<span id="L5714" rel="#L5714">5714</span>
<span id="L5715" rel="#L5715">5715</span>
<span id="L5716" rel="#L5716">5716</span>
<span id="L5717" rel="#L5717">5717</span>
<span id="L5718" rel="#L5718">5718</span>
<span id="L5719" rel="#L5719">5719</span>
<span id="L5720" rel="#L5720">5720</span>
<span id="L5721" rel="#L5721">5721</span>
<span id="L5722" rel="#L5722">5722</span>
<span id="L5723" rel="#L5723">5723</span>
<span id="L5724" rel="#L5724">5724</span>
<span id="L5725" rel="#L5725">5725</span>
<span id="L5726" rel="#L5726">5726</span>
<span id="L5727" rel="#L5727">5727</span>
<span id="L5728" rel="#L5728">5728</span>
<span id="L5729" rel="#L5729">5729</span>
<span id="L5730" rel="#L5730">5730</span>
<span id="L5731" rel="#L5731">5731</span>
<span id="L5732" rel="#L5732">5732</span>
<span id="L5733" rel="#L5733">5733</span>
<span id="L5734" rel="#L5734">5734</span>
<span id="L5735" rel="#L5735">5735</span>
<span id="L5736" rel="#L5736">5736</span>
<span id="L5737" rel="#L5737">5737</span>
<span id="L5738" rel="#L5738">5738</span>
<span id="L5739" rel="#L5739">5739</span>
<span id="L5740" rel="#L5740">5740</span>
<span id="L5741" rel="#L5741">5741</span>
<span id="L5742" rel="#L5742">5742</span>
<span id="L5743" rel="#L5743">5743</span>
<span id="L5744" rel="#L5744">5744</span>
<span id="L5745" rel="#L5745">5745</span>
<span id="L5746" rel="#L5746">5746</span>
<span id="L5747" rel="#L5747">5747</span>
<span id="L5748" rel="#L5748">5748</span>
<span id="L5749" rel="#L5749">5749</span>
<span id="L5750" rel="#L5750">5750</span>
<span id="L5751" rel="#L5751">5751</span>
<span id="L5752" rel="#L5752">5752</span>
<span id="L5753" rel="#L5753">5753</span>
<span id="L5754" rel="#L5754">5754</span>
<span id="L5755" rel="#L5755">5755</span>
<span id="L5756" rel="#L5756">5756</span>
<span id="L5757" rel="#L5757">5757</span>
<span id="L5758" rel="#L5758">5758</span>
<span id="L5759" rel="#L5759">5759</span>
<span id="L5760" rel="#L5760">5760</span>
<span id="L5761" rel="#L5761">5761</span>
<span id="L5762" rel="#L5762">5762</span>
<span id="L5763" rel="#L5763">5763</span>
<span id="L5764" rel="#L5764">5764</span>
<span id="L5765" rel="#L5765">5765</span>
<span id="L5766" rel="#L5766">5766</span>
<span id="L5767" rel="#L5767">5767</span>
<span id="L5768" rel="#L5768">5768</span>
<span id="L5769" rel="#L5769">5769</span>
<span id="L5770" rel="#L5770">5770</span>
<span id="L5771" rel="#L5771">5771</span>
<span id="L5772" rel="#L5772">5772</span>
<span id="L5773" rel="#L5773">5773</span>
<span id="L5774" rel="#L5774">5774</span>
<span id="L5775" rel="#L5775">5775</span>
<span id="L5776" rel="#L5776">5776</span>
<span id="L5777" rel="#L5777">5777</span>
<span id="L5778" rel="#L5778">5778</span>
<span id="L5779" rel="#L5779">5779</span>
<span id="L5780" rel="#L5780">5780</span>
<span id="L5781" rel="#L5781">5781</span>
<span id="L5782" rel="#L5782">5782</span>
<span id="L5783" rel="#L5783">5783</span>
<span id="L5784" rel="#L5784">5784</span>
<span id="L5785" rel="#L5785">5785</span>
<span id="L5786" rel="#L5786">5786</span>
<span id="L5787" rel="#L5787">5787</span>
<span id="L5788" rel="#L5788">5788</span>
<span id="L5789" rel="#L5789">5789</span>
<span id="L5790" rel="#L5790">5790</span>
<span id="L5791" rel="#L5791">5791</span>
<span id="L5792" rel="#L5792">5792</span>
<span id="L5793" rel="#L5793">5793</span>
<span id="L5794" rel="#L5794">5794</span>
<span id="L5795" rel="#L5795">5795</span>
<span id="L5796" rel="#L5796">5796</span>
<span id="L5797" rel="#L5797">5797</span>
<span id="L5798" rel="#L5798">5798</span>
<span id="L5799" rel="#L5799">5799</span>
<span id="L5800" rel="#L5800">5800</span>
<span id="L5801" rel="#L5801">5801</span>
<span id="L5802" rel="#L5802">5802</span>
<span id="L5803" rel="#L5803">5803</span>
<span id="L5804" rel="#L5804">5804</span>
<span id="L5805" rel="#L5805">5805</span>
<span id="L5806" rel="#L5806">5806</span>
<span id="L5807" rel="#L5807">5807</span>
<span id="L5808" rel="#L5808">5808</span>
<span id="L5809" rel="#L5809">5809</span>
<span id="L5810" rel="#L5810">5810</span>
<span id="L5811" rel="#L5811">5811</span>
<span id="L5812" rel="#L5812">5812</span>
<span id="L5813" rel="#L5813">5813</span>
<span id="L5814" rel="#L5814">5814</span>
<span id="L5815" rel="#L5815">5815</span>
<span id="L5816" rel="#L5816">5816</span>
<span id="L5817" rel="#L5817">5817</span>
<span id="L5818" rel="#L5818">5818</span>
<span id="L5819" rel="#L5819">5819</span>
<span id="L5820" rel="#L5820">5820</span>
<span id="L5821" rel="#L5821">5821</span>
<span id="L5822" rel="#L5822">5822</span>
<span id="L5823" rel="#L5823">5823</span>
<span id="L5824" rel="#L5824">5824</span>
<span id="L5825" rel="#L5825">5825</span>
<span id="L5826" rel="#L5826">5826</span>
<span id="L5827" rel="#L5827">5827</span>
<span id="L5828" rel="#L5828">5828</span>
<span id="L5829" rel="#L5829">5829</span>
<span id="L5830" rel="#L5830">5830</span>
<span id="L5831" rel="#L5831">5831</span>
<span id="L5832" rel="#L5832">5832</span>
<span id="L5833" rel="#L5833">5833</span>
<span id="L5834" rel="#L5834">5834</span>
<span id="L5835" rel="#L5835">5835</span>
<span id="L5836" rel="#L5836">5836</span>
<span id="L5837" rel="#L5837">5837</span>
<span id="L5838" rel="#L5838">5838</span>
<span id="L5839" rel="#L5839">5839</span>
<span id="L5840" rel="#L5840">5840</span>
<span id="L5841" rel="#L5841">5841</span>
<span id="L5842" rel="#L5842">5842</span>
<span id="L5843" rel="#L5843">5843</span>
<span id="L5844" rel="#L5844">5844</span>
<span id="L5845" rel="#L5845">5845</span>
<span id="L5846" rel="#L5846">5846</span>
<span id="L5847" rel="#L5847">5847</span>
<span id="L5848" rel="#L5848">5848</span>
<span id="L5849" rel="#L5849">5849</span>
<span id="L5850" rel="#L5850">5850</span>
<span id="L5851" rel="#L5851">5851</span>
<span id="L5852" rel="#L5852">5852</span>
<span id="L5853" rel="#L5853">5853</span>
<span id="L5854" rel="#L5854">5854</span>
<span id="L5855" rel="#L5855">5855</span>
<span id="L5856" rel="#L5856">5856</span>
<span id="L5857" rel="#L5857">5857</span>
<span id="L5858" rel="#L5858">5858</span>
<span id="L5859" rel="#L5859">5859</span>
<span id="L5860" rel="#L5860">5860</span>
<span id="L5861" rel="#L5861">5861</span>
<span id="L5862" rel="#L5862">5862</span>
<span id="L5863" rel="#L5863">5863</span>
<span id="L5864" rel="#L5864">5864</span>
<span id="L5865" rel="#L5865">5865</span>
<span id="L5866" rel="#L5866">5866</span>
<span id="L5867" rel="#L5867">5867</span>
<span id="L5868" rel="#L5868">5868</span>
<span id="L5869" rel="#L5869">5869</span>
<span id="L5870" rel="#L5870">5870</span>
<span id="L5871" rel="#L5871">5871</span>
<span id="L5872" rel="#L5872">5872</span>
<span id="L5873" rel="#L5873">5873</span>
<span id="L5874" rel="#L5874">5874</span>
<span id="L5875" rel="#L5875">5875</span>
<span id="L5876" rel="#L5876">5876</span>
<span id="L5877" rel="#L5877">5877</span>
<span id="L5878" rel="#L5878">5878</span>
<span id="L5879" rel="#L5879">5879</span>
<span id="L5880" rel="#L5880">5880</span>
<span id="L5881" rel="#L5881">5881</span>
<span id="L5882" rel="#L5882">5882</span>
<span id="L5883" rel="#L5883">5883</span>
<span id="L5884" rel="#L5884">5884</span>
<span id="L5885" rel="#L5885">5885</span>
<span id="L5886" rel="#L5886">5886</span>
<span id="L5887" rel="#L5887">5887</span>
<span id="L5888" rel="#L5888">5888</span>
<span id="L5889" rel="#L5889">5889</span>
<span id="L5890" rel="#L5890">5890</span>
<span id="L5891" rel="#L5891">5891</span>
<span id="L5892" rel="#L5892">5892</span>
<span id="L5893" rel="#L5893">5893</span>
<span id="L5894" rel="#L5894">5894</span>
<span id="L5895" rel="#L5895">5895</span>
<span id="L5896" rel="#L5896">5896</span>
<span id="L5897" rel="#L5897">5897</span>
<span id="L5898" rel="#L5898">5898</span>
<span id="L5899" rel="#L5899">5899</span>
<span id="L5900" rel="#L5900">5900</span>
<span id="L5901" rel="#L5901">5901</span>
<span id="L5902" rel="#L5902">5902</span>
<span id="L5903" rel="#L5903">5903</span>
<span id="L5904" rel="#L5904">5904</span>
<span id="L5905" rel="#L5905">5905</span>
<span id="L5906" rel="#L5906">5906</span>
<span id="L5907" rel="#L5907">5907</span>
<span id="L5908" rel="#L5908">5908</span>
<span id="L5909" rel="#L5909">5909</span>
<span id="L5910" rel="#L5910">5910</span>
<span id="L5911" rel="#L5911">5911</span>
<span id="L5912" rel="#L5912">5912</span>
<span id="L5913" rel="#L5913">5913</span>
<span id="L5914" rel="#L5914">5914</span>
<span id="L5915" rel="#L5915">5915</span>
<span id="L5916" rel="#L5916">5916</span>
<span id="L5917" rel="#L5917">5917</span>
<span id="L5918" rel="#L5918">5918</span>
<span id="L5919" rel="#L5919">5919</span>
<span id="L5920" rel="#L5920">5920</span>
<span id="L5921" rel="#L5921">5921</span>
<span id="L5922" rel="#L5922">5922</span>
<span id="L5923" rel="#L5923">5923</span>
<span id="L5924" rel="#L5924">5924</span>
<span id="L5925" rel="#L5925">5925</span>
<span id="L5926" rel="#L5926">5926</span>
<span id="L5927" rel="#L5927">5927</span>
<span id="L5928" rel="#L5928">5928</span>
<span id="L5929" rel="#L5929">5929</span>
<span id="L5930" rel="#L5930">5930</span>
<span id="L5931" rel="#L5931">5931</span>
<span id="L5932" rel="#L5932">5932</span>
<span id="L5933" rel="#L5933">5933</span>
<span id="L5934" rel="#L5934">5934</span>
<span id="L5935" rel="#L5935">5935</span>
<span id="L5936" rel="#L5936">5936</span>
<span id="L5937" rel="#L5937">5937</span>
<span id="L5938" rel="#L5938">5938</span>
<span id="L5939" rel="#L5939">5939</span>
<span id="L5940" rel="#L5940">5940</span>
<span id="L5941" rel="#L5941">5941</span>
<span id="L5942" rel="#L5942">5942</span>
<span id="L5943" rel="#L5943">5943</span>
<span id="L5944" rel="#L5944">5944</span>
<span id="L5945" rel="#L5945">5945</span>
<span id="L5946" rel="#L5946">5946</span>
<span id="L5947" rel="#L5947">5947</span>
<span id="L5948" rel="#L5948">5948</span>
<span id="L5949" rel="#L5949">5949</span>
<span id="L5950" rel="#L5950">5950</span>
<span id="L5951" rel="#L5951">5951</span>
<span id="L5952" rel="#L5952">5952</span>
<span id="L5953" rel="#L5953">5953</span>
<span id="L5954" rel="#L5954">5954</span>
<span id="L5955" rel="#L5955">5955</span>
<span id="L5956" rel="#L5956">5956</span>
<span id="L5957" rel="#L5957">5957</span>
<span id="L5958" rel="#L5958">5958</span>
<span id="L5959" rel="#L5959">5959</span>
<span id="L5960" rel="#L5960">5960</span>
<span id="L5961" rel="#L5961">5961</span>
<span id="L5962" rel="#L5962">5962</span>
<span id="L5963" rel="#L5963">5963</span>
<span id="L5964" rel="#L5964">5964</span>
<span id="L5965" rel="#L5965">5965</span>
<span id="L5966" rel="#L5966">5966</span>
<span id="L5967" rel="#L5967">5967</span>
<span id="L5968" rel="#L5968">5968</span>
<span id="L5969" rel="#L5969">5969</span>
<span id="L5970" rel="#L5970">5970</span>
<span id="L5971" rel="#L5971">5971</span>
<span id="L5972" rel="#L5972">5972</span>
<span id="L5973" rel="#L5973">5973</span>
<span id="L5974" rel="#L5974">5974</span>
<span id="L5975" rel="#L5975">5975</span>
<span id="L5976" rel="#L5976">5976</span>
<span id="L5977" rel="#L5977">5977</span>
<span id="L5978" rel="#L5978">5978</span>
<span id="L5979" rel="#L5979">5979</span>
<span id="L5980" rel="#L5980">5980</span>
<span id="L5981" rel="#L5981">5981</span>
<span id="L5982" rel="#L5982">5982</span>
<span id="L5983" rel="#L5983">5983</span>
<span id="L5984" rel="#L5984">5984</span>
<span id="L5985" rel="#L5985">5985</span>
<span id="L5986" rel="#L5986">5986</span>
<span id="L5987" rel="#L5987">5987</span>
<span id="L5988" rel="#L5988">5988</span>
<span id="L5989" rel="#L5989">5989</span>
<span id="L5990" rel="#L5990">5990</span>
<span id="L5991" rel="#L5991">5991</span>
<span id="L5992" rel="#L5992">5992</span>
<span id="L5993" rel="#L5993">5993</span>
<span id="L5994" rel="#L5994">5994</span>
<span id="L5995" rel="#L5995">5995</span>
<span id="L5996" rel="#L5996">5996</span>
<span id="L5997" rel="#L5997">5997</span>
<span id="L5998" rel="#L5998">5998</span>
<span id="L5999" rel="#L5999">5999</span>
<span id="L6000" rel="#L6000">6000</span>
<span id="L6001" rel="#L6001">6001</span>
<span id="L6002" rel="#L6002">6002</span>
<span id="L6003" rel="#L6003">6003</span>
<span id="L6004" rel="#L6004">6004</span>
<span id="L6005" rel="#L6005">6005</span>
<span id="L6006" rel="#L6006">6006</span>
<span id="L6007" rel="#L6007">6007</span>
<span id="L6008" rel="#L6008">6008</span>
<span id="L6009" rel="#L6009">6009</span>
<span id="L6010" rel="#L6010">6010</span>
<span id="L6011" rel="#L6011">6011</span>
<span id="L6012" rel="#L6012">6012</span>
<span id="L6013" rel="#L6013">6013</span>
<span id="L6014" rel="#L6014">6014</span>
<span id="L6015" rel="#L6015">6015</span>
<span id="L6016" rel="#L6016">6016</span>
<span id="L6017" rel="#L6017">6017</span>
<span id="L6018" rel="#L6018">6018</span>
<span id="L6019" rel="#L6019">6019</span>
<span id="L6020" rel="#L6020">6020</span>
<span id="L6021" rel="#L6021">6021</span>
<span id="L6022" rel="#L6022">6022</span>
<span id="L6023" rel="#L6023">6023</span>
<span id="L6024" rel="#L6024">6024</span>
<span id="L6025" rel="#L6025">6025</span>
<span id="L6026" rel="#L6026">6026</span>
<span id="L6027" rel="#L6027">6027</span>
<span id="L6028" rel="#L6028">6028</span>
<span id="L6029" rel="#L6029">6029</span>
<span id="L6030" rel="#L6030">6030</span>
<span id="L6031" rel="#L6031">6031</span>
<span id="L6032" rel="#L6032">6032</span>
<span id="L6033" rel="#L6033">6033</span>
<span id="L6034" rel="#L6034">6034</span>
<span id="L6035" rel="#L6035">6035</span>
<span id="L6036" rel="#L6036">6036</span>
<span id="L6037" rel="#L6037">6037</span>
<span id="L6038" rel="#L6038">6038</span>
<span id="L6039" rel="#L6039">6039</span>
<span id="L6040" rel="#L6040">6040</span>
<span id="L6041" rel="#L6041">6041</span>
<span id="L6042" rel="#L6042">6042</span>
<span id="L6043" rel="#L6043">6043</span>
<span id="L6044" rel="#L6044">6044</span>
<span id="L6045" rel="#L6045">6045</span>
<span id="L6046" rel="#L6046">6046</span>
<span id="L6047" rel="#L6047">6047</span>
<span id="L6048" rel="#L6048">6048</span>
<span id="L6049" rel="#L6049">6049</span>
<span id="L6050" rel="#L6050">6050</span>
<span id="L6051" rel="#L6051">6051</span>
<span id="L6052" rel="#L6052">6052</span>
<span id="L6053" rel="#L6053">6053</span>
<span id="L6054" rel="#L6054">6054</span>
<span id="L6055" rel="#L6055">6055</span>
<span id="L6056" rel="#L6056">6056</span>
<span id="L6057" rel="#L6057">6057</span>
<span id="L6058" rel="#L6058">6058</span>
<span id="L6059" rel="#L6059">6059</span>
<span id="L6060" rel="#L6060">6060</span>
<span id="L6061" rel="#L6061">6061</span>
<span id="L6062" rel="#L6062">6062</span>
<span id="L6063" rel="#L6063">6063</span>
<span id="L6064" rel="#L6064">6064</span>
<span id="L6065" rel="#L6065">6065</span>
<span id="L6066" rel="#L6066">6066</span>
<span id="L6067" rel="#L6067">6067</span>
<span id="L6068" rel="#L6068">6068</span>
<span id="L6069" rel="#L6069">6069</span>
<span id="L6070" rel="#L6070">6070</span>
<span id="L6071" rel="#L6071">6071</span>
<span id="L6072" rel="#L6072">6072</span>
<span id="L6073" rel="#L6073">6073</span>
<span id="L6074" rel="#L6074">6074</span>
<span id="L6075" rel="#L6075">6075</span>
<span id="L6076" rel="#L6076">6076</span>
<span id="L6077" rel="#L6077">6077</span>
<span id="L6078" rel="#L6078">6078</span>
<span id="L6079" rel="#L6079">6079</span>
<span id="L6080" rel="#L6080">6080</span>
<span id="L6081" rel="#L6081">6081</span>
<span id="L6082" rel="#L6082">6082</span>
<span id="L6083" rel="#L6083">6083</span>
<span id="L6084" rel="#L6084">6084</span>
<span id="L6085" rel="#L6085">6085</span>
<span id="L6086" rel="#L6086">6086</span>
<span id="L6087" rel="#L6087">6087</span>
<span id="L6088" rel="#L6088">6088</span>
<span id="L6089" rel="#L6089">6089</span>
<span id="L6090" rel="#L6090">6090</span>
<span id="L6091" rel="#L6091">6091</span>
<span id="L6092" rel="#L6092">6092</span>
<span id="L6093" rel="#L6093">6093</span>
<span id="L6094" rel="#L6094">6094</span>
<span id="L6095" rel="#L6095">6095</span>
<span id="L6096" rel="#L6096">6096</span>
<span id="L6097" rel="#L6097">6097</span>
<span id="L6098" rel="#L6098">6098</span>
<span id="L6099" rel="#L6099">6099</span>
<span id="L6100" rel="#L6100">6100</span>
<span id="L6101" rel="#L6101">6101</span>
<span id="L6102" rel="#L6102">6102</span>
<span id="L6103" rel="#L6103">6103</span>
<span id="L6104" rel="#L6104">6104</span>
<span id="L6105" rel="#L6105">6105</span>
<span id="L6106" rel="#L6106">6106</span>
<span id="L6107" rel="#L6107">6107</span>
<span id="L6108" rel="#L6108">6108</span>
<span id="L6109" rel="#L6109">6109</span>
<span id="L6110" rel="#L6110">6110</span>
<span id="L6111" rel="#L6111">6111</span>
<span id="L6112" rel="#L6112">6112</span>
<span id="L6113" rel="#L6113">6113</span>
<span id="L6114" rel="#L6114">6114</span>
<span id="L6115" rel="#L6115">6115</span>
<span id="L6116" rel="#L6116">6116</span>
<span id="L6117" rel="#L6117">6117</span>
<span id="L6118" rel="#L6118">6118</span>
<span id="L6119" rel="#L6119">6119</span>
<span id="L6120" rel="#L6120">6120</span>
<span id="L6121" rel="#L6121">6121</span>
<span id="L6122" rel="#L6122">6122</span>
<span id="L6123" rel="#L6123">6123</span>
<span id="L6124" rel="#L6124">6124</span>
<span id="L6125" rel="#L6125">6125</span>
<span id="L6126" rel="#L6126">6126</span>
<span id="L6127" rel="#L6127">6127</span>
<span id="L6128" rel="#L6128">6128</span>
<span id="L6129" rel="#L6129">6129</span>
<span id="L6130" rel="#L6130">6130</span>
<span id="L6131" rel="#L6131">6131</span>
<span id="L6132" rel="#L6132">6132</span>
<span id="L6133" rel="#L6133">6133</span>
<span id="L6134" rel="#L6134">6134</span>
<span id="L6135" rel="#L6135">6135</span>
<span id="L6136" rel="#L6136">6136</span>
<span id="L6137" rel="#L6137">6137</span>
<span id="L6138" rel="#L6138">6138</span>
<span id="L6139" rel="#L6139">6139</span>
<span id="L6140" rel="#L6140">6140</span>
<span id="L6141" rel="#L6141">6141</span>
<span id="L6142" rel="#L6142">6142</span>
<span id="L6143" rel="#L6143">6143</span>
<span id="L6144" rel="#L6144">6144</span>
<span id="L6145" rel="#L6145">6145</span>
<span id="L6146" rel="#L6146">6146</span>
<span id="L6147" rel="#L6147">6147</span>
<span id="L6148" rel="#L6148">6148</span>
<span id="L6149" rel="#L6149">6149</span>
<span id="L6150" rel="#L6150">6150</span>
<span id="L6151" rel="#L6151">6151</span>
<span id="L6152" rel="#L6152">6152</span>
<span id="L6153" rel="#L6153">6153</span>
<span id="L6154" rel="#L6154">6154</span>
<span id="L6155" rel="#L6155">6155</span>
<span id="L6156" rel="#L6156">6156</span>
<span id="L6157" rel="#L6157">6157</span>
<span id="L6158" rel="#L6158">6158</span>
<span id="L6159" rel="#L6159">6159</span>
<span id="L6160" rel="#L6160">6160</span>
<span id="L6161" rel="#L6161">6161</span>
<span id="L6162" rel="#L6162">6162</span>
<span id="L6163" rel="#L6163">6163</span>
<span id="L6164" rel="#L6164">6164</span>
<span id="L6165" rel="#L6165">6165</span>
<span id="L6166" rel="#L6166">6166</span>
<span id="L6167" rel="#L6167">6167</span>
<span id="L6168" rel="#L6168">6168</span>
<span id="L6169" rel="#L6169">6169</span>
<span id="L6170" rel="#L6170">6170</span>
<span id="L6171" rel="#L6171">6171</span>
<span id="L6172" rel="#L6172">6172</span>
<span id="L6173" rel="#L6173">6173</span>
<span id="L6174" rel="#L6174">6174</span>
<span id="L6175" rel="#L6175">6175</span>
<span id="L6176" rel="#L6176">6176</span>
<span id="L6177" rel="#L6177">6177</span>
<span id="L6178" rel="#L6178">6178</span>
<span id="L6179" rel="#L6179">6179</span>
<span id="L6180" rel="#L6180">6180</span>
<span id="L6181" rel="#L6181">6181</span>
<span id="L6182" rel="#L6182">6182</span>
<span id="L6183" rel="#L6183">6183</span>
<span id="L6184" rel="#L6184">6184</span>
<span id="L6185" rel="#L6185">6185</span>
<span id="L6186" rel="#L6186">6186</span>
<span id="L6187" rel="#L6187">6187</span>
<span id="L6188" rel="#L6188">6188</span>
<span id="L6189" rel="#L6189">6189</span>
<span id="L6190" rel="#L6190">6190</span>
<span id="L6191" rel="#L6191">6191</span>
<span id="L6192" rel="#L6192">6192</span>
<span id="L6193" rel="#L6193">6193</span>
<span id="L6194" rel="#L6194">6194</span>
<span id="L6195" rel="#L6195">6195</span>
<span id="L6196" rel="#L6196">6196</span>
<span id="L6197" rel="#L6197">6197</span>
<span id="L6198" rel="#L6198">6198</span>
<span id="L6199" rel="#L6199">6199</span>
<span id="L6200" rel="#L6200">6200</span>
<span id="L6201" rel="#L6201">6201</span>
<span id="L6202" rel="#L6202">6202</span>
<span id="L6203" rel="#L6203">6203</span>
<span id="L6204" rel="#L6204">6204</span>
<span id="L6205" rel="#L6205">6205</span>
<span id="L6206" rel="#L6206">6206</span>
<span id="L6207" rel="#L6207">6207</span>
<span id="L6208" rel="#L6208">6208</span>
<span id="L6209" rel="#L6209">6209</span>
<span id="L6210" rel="#L6210">6210</span>
<span id="L6211" rel="#L6211">6211</span>
<span id="L6212" rel="#L6212">6212</span>
<span id="L6213" rel="#L6213">6213</span>
<span id="L6214" rel="#L6214">6214</span>
<span id="L6215" rel="#L6215">6215</span>
<span id="L6216" rel="#L6216">6216</span>
<span id="L6217" rel="#L6217">6217</span>
<span id="L6218" rel="#L6218">6218</span>
<span id="L6219" rel="#L6219">6219</span>
<span id="L6220" rel="#L6220">6220</span>
<span id="L6221" rel="#L6221">6221</span>
<span id="L6222" rel="#L6222">6222</span>
<span id="L6223" rel="#L6223">6223</span>
<span id="L6224" rel="#L6224">6224</span>
<span id="L6225" rel="#L6225">6225</span>
<span id="L6226" rel="#L6226">6226</span>
<span id="L6227" rel="#L6227">6227</span>
<span id="L6228" rel="#L6228">6228</span>
<span id="L6229" rel="#L6229">6229</span>
<span id="L6230" rel="#L6230">6230</span>
<span id="L6231" rel="#L6231">6231</span>
<span id="L6232" rel="#L6232">6232</span>
<span id="L6233" rel="#L6233">6233</span>
<span id="L6234" rel="#L6234">6234</span>
<span id="L6235" rel="#L6235">6235</span>
<span id="L6236" rel="#L6236">6236</span>
<span id="L6237" rel="#L6237">6237</span>
<span id="L6238" rel="#L6238">6238</span>
<span id="L6239" rel="#L6239">6239</span>
<span id="L6240" rel="#L6240">6240</span>
<span id="L6241" rel="#L6241">6241</span>
<span id="L6242" rel="#L6242">6242</span>
<span id="L6243" rel="#L6243">6243</span>
<span id="L6244" rel="#L6244">6244</span>
<span id="L6245" rel="#L6245">6245</span>
<span id="L6246" rel="#L6246">6246</span>
<span id="L6247" rel="#L6247">6247</span>
<span id="L6248" rel="#L6248">6248</span>
<span id="L6249" rel="#L6249">6249</span>
<span id="L6250" rel="#L6250">6250</span>
<span id="L6251" rel="#L6251">6251</span>
<span id="L6252" rel="#L6252">6252</span>
<span id="L6253" rel="#L6253">6253</span>
<span id="L6254" rel="#L6254">6254</span>
<span id="L6255" rel="#L6255">6255</span>
<span id="L6256" rel="#L6256">6256</span>
<span id="L6257" rel="#L6257">6257</span>
<span id="L6258" rel="#L6258">6258</span>
<span id="L6259" rel="#L6259">6259</span>
<span id="L6260" rel="#L6260">6260</span>
<span id="L6261" rel="#L6261">6261</span>
<span id="L6262" rel="#L6262">6262</span>
<span id="L6263" rel="#L6263">6263</span>
<span id="L6264" rel="#L6264">6264</span>
<span id="L6265" rel="#L6265">6265</span>
<span id="L6266" rel="#L6266">6266</span>
<span id="L6267" rel="#L6267">6267</span>
<span id="L6268" rel="#L6268">6268</span>
<span id="L6269" rel="#L6269">6269</span>
<span id="L6270" rel="#L6270">6270</span>
<span id="L6271" rel="#L6271">6271</span>
<span id="L6272" rel="#L6272">6272</span>
<span id="L6273" rel="#L6273">6273</span>
<span id="L6274" rel="#L6274">6274</span>
<span id="L6275" rel="#L6275">6275</span>
<span id="L6276" rel="#L6276">6276</span>
<span id="L6277" rel="#L6277">6277</span>
<span id="L6278" rel="#L6278">6278</span>
<span id="L6279" rel="#L6279">6279</span>
<span id="L6280" rel="#L6280">6280</span>
<span id="L6281" rel="#L6281">6281</span>
<span id="L6282" rel="#L6282">6282</span>
<span id="L6283" rel="#L6283">6283</span>
<span id="L6284" rel="#L6284">6284</span>
<span id="L6285" rel="#L6285">6285</span>
<span id="L6286" rel="#L6286">6286</span>
<span id="L6287" rel="#L6287">6287</span>
<span id="L6288" rel="#L6288">6288</span>
<span id="L6289" rel="#L6289">6289</span>
<span id="L6290" rel="#L6290">6290</span>
<span id="L6291" rel="#L6291">6291</span>
<span id="L6292" rel="#L6292">6292</span>
<span id="L6293" rel="#L6293">6293</span>
<span id="L6294" rel="#L6294">6294</span>
<span id="L6295" rel="#L6295">6295</span>
<span id="L6296" rel="#L6296">6296</span>
<span id="L6297" rel="#L6297">6297</span>
<span id="L6298" rel="#L6298">6298</span>
<span id="L6299" rel="#L6299">6299</span>
<span id="L6300" rel="#L6300">6300</span>
<span id="L6301" rel="#L6301">6301</span>
<span id="L6302" rel="#L6302">6302</span>
<span id="L6303" rel="#L6303">6303</span>
<span id="L6304" rel="#L6304">6304</span>
<span id="L6305" rel="#L6305">6305</span>
<span id="L6306" rel="#L6306">6306</span>
<span id="L6307" rel="#L6307">6307</span>
<span id="L6308" rel="#L6308">6308</span>
<span id="L6309" rel="#L6309">6309</span>
<span id="L6310" rel="#L6310">6310</span>
<span id="L6311" rel="#L6311">6311</span>
<span id="L6312" rel="#L6312">6312</span>
<span id="L6313" rel="#L6313">6313</span>
<span id="L6314" rel="#L6314">6314</span>
<span id="L6315" rel="#L6315">6315</span>
<span id="L6316" rel="#L6316">6316</span>
<span id="L6317" rel="#L6317">6317</span>
<span id="L6318" rel="#L6318">6318</span>
<span id="L6319" rel="#L6319">6319</span>
<span id="L6320" rel="#L6320">6320</span>
<span id="L6321" rel="#L6321">6321</span>
<span id="L6322" rel="#L6322">6322</span>
<span id="L6323" rel="#L6323">6323</span>
<span id="L6324" rel="#L6324">6324</span>
<span id="L6325" rel="#L6325">6325</span>
<span id="L6326" rel="#L6326">6326</span>
<span id="L6327" rel="#L6327">6327</span>
<span id="L6328" rel="#L6328">6328</span>
<span id="L6329" rel="#L6329">6329</span>
<span id="L6330" rel="#L6330">6330</span>
<span id="L6331" rel="#L6331">6331</span>
<span id="L6332" rel="#L6332">6332</span>
<span id="L6333" rel="#L6333">6333</span>
<span id="L6334" rel="#L6334">6334</span>
<span id="L6335" rel="#L6335">6335</span>
<span id="L6336" rel="#L6336">6336</span>
<span id="L6337" rel="#L6337">6337</span>
<span id="L6338" rel="#L6338">6338</span>
<span id="L6339" rel="#L6339">6339</span>
<span id="L6340" rel="#L6340">6340</span>
<span id="L6341" rel="#L6341">6341</span>
<span id="L6342" rel="#L6342">6342</span>
<span id="L6343" rel="#L6343">6343</span>
<span id="L6344" rel="#L6344">6344</span>
<span id="L6345" rel="#L6345">6345</span>
<span id="L6346" rel="#L6346">6346</span>
<span id="L6347" rel="#L6347">6347</span>
<span id="L6348" rel="#L6348">6348</span>
<span id="L6349" rel="#L6349">6349</span>
<span id="L6350" rel="#L6350">6350</span>
<span id="L6351" rel="#L6351">6351</span>
<span id="L6352" rel="#L6352">6352</span>
<span id="L6353" rel="#L6353">6353</span>
<span id="L6354" rel="#L6354">6354</span>
<span id="L6355" rel="#L6355">6355</span>
<span id="L6356" rel="#L6356">6356</span>
<span id="L6357" rel="#L6357">6357</span>
<span id="L6358" rel="#L6358">6358</span>
<span id="L6359" rel="#L6359">6359</span>
<span id="L6360" rel="#L6360">6360</span>
<span id="L6361" rel="#L6361">6361</span>
<span id="L6362" rel="#L6362">6362</span>
<span id="L6363" rel="#L6363">6363</span>
<span id="L6364" rel="#L6364">6364</span>
<span id="L6365" rel="#L6365">6365</span>
<span id="L6366" rel="#L6366">6366</span>
<span id="L6367" rel="#L6367">6367</span>
<span id="L6368" rel="#L6368">6368</span>
<span id="L6369" rel="#L6369">6369</span>
<span id="L6370" rel="#L6370">6370</span>
<span id="L6371" rel="#L6371">6371</span>
<span id="L6372" rel="#L6372">6372</span>
<span id="L6373" rel="#L6373">6373</span>
<span id="L6374" rel="#L6374">6374</span>
<span id="L6375" rel="#L6375">6375</span>
<span id="L6376" rel="#L6376">6376</span>
<span id="L6377" rel="#L6377">6377</span>
<span id="L6378" rel="#L6378">6378</span>
<span id="L6379" rel="#L6379">6379</span>
<span id="L6380" rel="#L6380">6380</span>
<span id="L6381" rel="#L6381">6381</span>
<span id="L6382" rel="#L6382">6382</span>
<span id="L6383" rel="#L6383">6383</span>
<span id="L6384" rel="#L6384">6384</span>
<span id="L6385" rel="#L6385">6385</span>
<span id="L6386" rel="#L6386">6386</span>
<span id="L6387" rel="#L6387">6387</span>
<span id="L6388" rel="#L6388">6388</span>
<span id="L6389" rel="#L6389">6389</span>
<span id="L6390" rel="#L6390">6390</span>
<span id="L6391" rel="#L6391">6391</span>
<span id="L6392" rel="#L6392">6392</span>
<span id="L6393" rel="#L6393">6393</span>
<span id="L6394" rel="#L6394">6394</span>
<span id="L6395" rel="#L6395">6395</span>
<span id="L6396" rel="#L6396">6396</span>
<span id="L6397" rel="#L6397">6397</span>
<span id="L6398" rel="#L6398">6398</span>
<span id="L6399" rel="#L6399">6399</span>
<span id="L6400" rel="#L6400">6400</span>
<span id="L6401" rel="#L6401">6401</span>
<span id="L6402" rel="#L6402">6402</span>
<span id="L6403" rel="#L6403">6403</span>
<span id="L6404" rel="#L6404">6404</span>
<span id="L6405" rel="#L6405">6405</span>
<span id="L6406" rel="#L6406">6406</span>
<span id="L6407" rel="#L6407">6407</span>
<span id="L6408" rel="#L6408">6408</span>
<span id="L6409" rel="#L6409">6409</span>
<span id="L6410" rel="#L6410">6410</span>
<span id="L6411" rel="#L6411">6411</span>
<span id="L6412" rel="#L6412">6412</span>
<span id="L6413" rel="#L6413">6413</span>
<span id="L6414" rel="#L6414">6414</span>
<span id="L6415" rel="#L6415">6415</span>
<span id="L6416" rel="#L6416">6416</span>
<span id="L6417" rel="#L6417">6417</span>
<span id="L6418" rel="#L6418">6418</span>
<span id="L6419" rel="#L6419">6419</span>
<span id="L6420" rel="#L6420">6420</span>
<span id="L6421" rel="#L6421">6421</span>
<span id="L6422" rel="#L6422">6422</span>
<span id="L6423" rel="#L6423">6423</span>
<span id="L6424" rel="#L6424">6424</span>
<span id="L6425" rel="#L6425">6425</span>
<span id="L6426" rel="#L6426">6426</span>
<span id="L6427" rel="#L6427">6427</span>
<span id="L6428" rel="#L6428">6428</span>
<span id="L6429" rel="#L6429">6429</span>
<span id="L6430" rel="#L6430">6430</span>
<span id="L6431" rel="#L6431">6431</span>
<span id="L6432" rel="#L6432">6432</span>
<span id="L6433" rel="#L6433">6433</span>
<span id="L6434" rel="#L6434">6434</span>
<span id="L6435" rel="#L6435">6435</span>
<span id="L6436" rel="#L6436">6436</span>
<span id="L6437" rel="#L6437">6437</span>
<span id="L6438" rel="#L6438">6438</span>
<span id="L6439" rel="#L6439">6439</span>
<span id="L6440" rel="#L6440">6440</span>
<span id="L6441" rel="#L6441">6441</span>
<span id="L6442" rel="#L6442">6442</span>
<span id="L6443" rel="#L6443">6443</span>
<span id="L6444" rel="#L6444">6444</span>
<span id="L6445" rel="#L6445">6445</span>
<span id="L6446" rel="#L6446">6446</span>
<span id="L6447" rel="#L6447">6447</span>
<span id="L6448" rel="#L6448">6448</span>
<span id="L6449" rel="#L6449">6449</span>
<span id="L6450" rel="#L6450">6450</span>
<span id="L6451" rel="#L6451">6451</span>
<span id="L6452" rel="#L6452">6452</span>
<span id="L6453" rel="#L6453">6453</span>
<span id="L6454" rel="#L6454">6454</span>
<span id="L6455" rel="#L6455">6455</span>
<span id="L6456" rel="#L6456">6456</span>
<span id="L6457" rel="#L6457">6457</span>
<span id="L6458" rel="#L6458">6458</span>
<span id="L6459" rel="#L6459">6459</span>
<span id="L6460" rel="#L6460">6460</span>
<span id="L6461" rel="#L6461">6461</span>
<span id="L6462" rel="#L6462">6462</span>
<span id="L6463" rel="#L6463">6463</span>
<span id="L6464" rel="#L6464">6464</span>
<span id="L6465" rel="#L6465">6465</span>
<span id="L6466" rel="#L6466">6466</span>
<span id="L6467" rel="#L6467">6467</span>
<span id="L6468" rel="#L6468">6468</span>
<span id="L6469" rel="#L6469">6469</span>
<span id="L6470" rel="#L6470">6470</span>
<span id="L6471" rel="#L6471">6471</span>
<span id="L6472" rel="#L6472">6472</span>
<span id="L6473" rel="#L6473">6473</span>
<span id="L6474" rel="#L6474">6474</span>
<span id="L6475" rel="#L6475">6475</span>
<span id="L6476" rel="#L6476">6476</span>
<span id="L6477" rel="#L6477">6477</span>
<span id="L6478" rel="#L6478">6478</span>
<span id="L6479" rel="#L6479">6479</span>
<span id="L6480" rel="#L6480">6480</span>
<span id="L6481" rel="#L6481">6481</span>
<span id="L6482" rel="#L6482">6482</span>
<span id="L6483" rel="#L6483">6483</span>
<span id="L6484" rel="#L6484">6484</span>
<span id="L6485" rel="#L6485">6485</span>
<span id="L6486" rel="#L6486">6486</span>
<span id="L6487" rel="#L6487">6487</span>
<span id="L6488" rel="#L6488">6488</span>
<span id="L6489" rel="#L6489">6489</span>
<span id="L6490" rel="#L6490">6490</span>
<span id="L6491" rel="#L6491">6491</span>
<span id="L6492" rel="#L6492">6492</span>
<span id="L6493" rel="#L6493">6493</span>
<span id="L6494" rel="#L6494">6494</span>
<span id="L6495" rel="#L6495">6495</span>
<span id="L6496" rel="#L6496">6496</span>
<span id="L6497" rel="#L6497">6497</span>
<span id="L6498" rel="#L6498">6498</span>
<span id="L6499" rel="#L6499">6499</span>
<span id="L6500" rel="#L6500">6500</span>
<span id="L6501" rel="#L6501">6501</span>
<span id="L6502" rel="#L6502">6502</span>
<span id="L6503" rel="#L6503">6503</span>
<span id="L6504" rel="#L6504">6504</span>
<span id="L6505" rel="#L6505">6505</span>
<span id="L6506" rel="#L6506">6506</span>
<span id="L6507" rel="#L6507">6507</span>
<span id="L6508" rel="#L6508">6508</span>
<span id="L6509" rel="#L6509">6509</span>
<span id="L6510" rel="#L6510">6510</span>
<span id="L6511" rel="#L6511">6511</span>
<span id="L6512" rel="#L6512">6512</span>
<span id="L6513" rel="#L6513">6513</span>
<span id="L6514" rel="#L6514">6514</span>
<span id="L6515" rel="#L6515">6515</span>
<span id="L6516" rel="#L6516">6516</span>
<span id="L6517" rel="#L6517">6517</span>
<span id="L6518" rel="#L6518">6518</span>
<span id="L6519" rel="#L6519">6519</span>
<span id="L6520" rel="#L6520">6520</span>
<span id="L6521" rel="#L6521">6521</span>
<span id="L6522" rel="#L6522">6522</span>
<span id="L6523" rel="#L6523">6523</span>
<span id="L6524" rel="#L6524">6524</span>
<span id="L6525" rel="#L6525">6525</span>
<span id="L6526" rel="#L6526">6526</span>
<span id="L6527" rel="#L6527">6527</span>
<span id="L6528" rel="#L6528">6528</span>
<span id="L6529" rel="#L6529">6529</span>
<span id="L6530" rel="#L6530">6530</span>
<span id="L6531" rel="#L6531">6531</span>
<span id="L6532" rel="#L6532">6532</span>
<span id="L6533" rel="#L6533">6533</span>
<span id="L6534" rel="#L6534">6534</span>
<span id="L6535" rel="#L6535">6535</span>
<span id="L6536" rel="#L6536">6536</span>
<span id="L6537" rel="#L6537">6537</span>
<span id="L6538" rel="#L6538">6538</span>
<span id="L6539" rel="#L6539">6539</span>
<span id="L6540" rel="#L6540">6540</span>
<span id="L6541" rel="#L6541">6541</span>
<span id="L6542" rel="#L6542">6542</span>
<span id="L6543" rel="#L6543">6543</span>
<span id="L6544" rel="#L6544">6544</span>
<span id="L6545" rel="#L6545">6545</span>
<span id="L6546" rel="#L6546">6546</span>
<span id="L6547" rel="#L6547">6547</span>
<span id="L6548" rel="#L6548">6548</span>
<span id="L6549" rel="#L6549">6549</span>
<span id="L6550" rel="#L6550">6550</span>
<span id="L6551" rel="#L6551">6551</span>
<span id="L6552" rel="#L6552">6552</span>
<span id="L6553" rel="#L6553">6553</span>
<span id="L6554" rel="#L6554">6554</span>
<span id="L6555" rel="#L6555">6555</span>
<span id="L6556" rel="#L6556">6556</span>
<span id="L6557" rel="#L6557">6557</span>
<span id="L6558" rel="#L6558">6558</span>
<span id="L6559" rel="#L6559">6559</span>
<span id="L6560" rel="#L6560">6560</span>
<span id="L6561" rel="#L6561">6561</span>
<span id="L6562" rel="#L6562">6562</span>
<span id="L6563" rel="#L6563">6563</span>
<span id="L6564" rel="#L6564">6564</span>
<span id="L6565" rel="#L6565">6565</span>
<span id="L6566" rel="#L6566">6566</span>
<span id="L6567" rel="#L6567">6567</span>
<span id="L6568" rel="#L6568">6568</span>
<span id="L6569" rel="#L6569">6569</span>
<span id="L6570" rel="#L6570">6570</span>
<span id="L6571" rel="#L6571">6571</span>
<span id="L6572" rel="#L6572">6572</span>
<span id="L6573" rel="#L6573">6573</span>
<span id="L6574" rel="#L6574">6574</span>
<span id="L6575" rel="#L6575">6575</span>
<span id="L6576" rel="#L6576">6576</span>
<span id="L6577" rel="#L6577">6577</span>
<span id="L6578" rel="#L6578">6578</span>
<span id="L6579" rel="#L6579">6579</span>
<span id="L6580" rel="#L6580">6580</span>
<span id="L6581" rel="#L6581">6581</span>
<span id="L6582" rel="#L6582">6582</span>
<span id="L6583" rel="#L6583">6583</span>
<span id="L6584" rel="#L6584">6584</span>
<span id="L6585" rel="#L6585">6585</span>
<span id="L6586" rel="#L6586">6586</span>
<span id="L6587" rel="#L6587">6587</span>
<span id="L6588" rel="#L6588">6588</span>
<span id="L6589" rel="#L6589">6589</span>
<span id="L6590" rel="#L6590">6590</span>
<span id="L6591" rel="#L6591">6591</span>
<span id="L6592" rel="#L6592">6592</span>
<span id="L6593" rel="#L6593">6593</span>
<span id="L6594" rel="#L6594">6594</span>
<span id="L6595" rel="#L6595">6595</span>
<span id="L6596" rel="#L6596">6596</span>
<span id="L6597" rel="#L6597">6597</span>
<span id="L6598" rel="#L6598">6598</span>
<span id="L6599" rel="#L6599">6599</span>
<span id="L6600" rel="#L6600">6600</span>
<span id="L6601" rel="#L6601">6601</span>
<span id="L6602" rel="#L6602">6602</span>
<span id="L6603" rel="#L6603">6603</span>
<span id="L6604" rel="#L6604">6604</span>
<span id="L6605" rel="#L6605">6605</span>
<span id="L6606" rel="#L6606">6606</span>
<span id="L6607" rel="#L6607">6607</span>
<span id="L6608" rel="#L6608">6608</span>
<span id="L6609" rel="#L6609">6609</span>
<span id="L6610" rel="#L6610">6610</span>
<span id="L6611" rel="#L6611">6611</span>
<span id="L6612" rel="#L6612">6612</span>
<span id="L6613" rel="#L6613">6613</span>
<span id="L6614" rel="#L6614">6614</span>
<span id="L6615" rel="#L6615">6615</span>
<span id="L6616" rel="#L6616">6616</span>
<span id="L6617" rel="#L6617">6617</span>
<span id="L6618" rel="#L6618">6618</span>
<span id="L6619" rel="#L6619">6619</span>
<span id="L6620" rel="#L6620">6620</span>
<span id="L6621" rel="#L6621">6621</span>
<span id="L6622" rel="#L6622">6622</span>
<span id="L6623" rel="#L6623">6623</span>
<span id="L6624" rel="#L6624">6624</span>
<span id="L6625" rel="#L6625">6625</span>
<span id="L6626" rel="#L6626">6626</span>
<span id="L6627" rel="#L6627">6627</span>
<span id="L6628" rel="#L6628">6628</span>
<span id="L6629" rel="#L6629">6629</span>
<span id="L6630" rel="#L6630">6630</span>
<span id="L6631" rel="#L6631">6631</span>
<span id="L6632" rel="#L6632">6632</span>
<span id="L6633" rel="#L6633">6633</span>
<span id="L6634" rel="#L6634">6634</span>
<span id="L6635" rel="#L6635">6635</span>
<span id="L6636" rel="#L6636">6636</span>
<span id="L6637" rel="#L6637">6637</span>
<span id="L6638" rel="#L6638">6638</span>
<span id="L6639" rel="#L6639">6639</span>
<span id="L6640" rel="#L6640">6640</span>
<span id="L6641" rel="#L6641">6641</span>
<span id="L6642" rel="#L6642">6642</span>
<span id="L6643" rel="#L6643">6643</span>
<span id="L6644" rel="#L6644">6644</span>
<span id="L6645" rel="#L6645">6645</span>
<span id="L6646" rel="#L6646">6646</span>
<span id="L6647" rel="#L6647">6647</span>
<span id="L6648" rel="#L6648">6648</span>
<span id="L6649" rel="#L6649">6649</span>
<span id="L6650" rel="#L6650">6650</span>
<span id="L6651" rel="#L6651">6651</span>
<span id="L6652" rel="#L6652">6652</span>
<span id="L6653" rel="#L6653">6653</span>
<span id="L6654" rel="#L6654">6654</span>
<span id="L6655" rel="#L6655">6655</span>
<span id="L6656" rel="#L6656">6656</span>
<span id="L6657" rel="#L6657">6657</span>
<span id="L6658" rel="#L6658">6658</span>
<span id="L6659" rel="#L6659">6659</span>
<span id="L6660" rel="#L6660">6660</span>
<span id="L6661" rel="#L6661">6661</span>
<span id="L6662" rel="#L6662">6662</span>
<span id="L6663" rel="#L6663">6663</span>
<span id="L6664" rel="#L6664">6664</span>
<span id="L6665" rel="#L6665">6665</span>
<span id="L6666" rel="#L6666">6666</span>
<span id="L6667" rel="#L6667">6667</span>
<span id="L6668" rel="#L6668">6668</span>
<span id="L6669" rel="#L6669">6669</span>
<span id="L6670" rel="#L6670">6670</span>
<span id="L6671" rel="#L6671">6671</span>
<span id="L6672" rel="#L6672">6672</span>
<span id="L6673" rel="#L6673">6673</span>
<span id="L6674" rel="#L6674">6674</span>
<span id="L6675" rel="#L6675">6675</span>
<span id="L6676" rel="#L6676">6676</span>
<span id="L6677" rel="#L6677">6677</span>
<span id="L6678" rel="#L6678">6678</span>
<span id="L6679" rel="#L6679">6679</span>
<span id="L6680" rel="#L6680">6680</span>
<span id="L6681" rel="#L6681">6681</span>
<span id="L6682" rel="#L6682">6682</span>
<span id="L6683" rel="#L6683">6683</span>
<span id="L6684" rel="#L6684">6684</span>
<span id="L6685" rel="#L6685">6685</span>
<span id="L6686" rel="#L6686">6686</span>
<span id="L6687" rel="#L6687">6687</span>
<span id="L6688" rel="#L6688">6688</span>
<span id="L6689" rel="#L6689">6689</span>
<span id="L6690" rel="#L6690">6690</span>
<span id="L6691" rel="#L6691">6691</span>
<span id="L6692" rel="#L6692">6692</span>
<span id="L6693" rel="#L6693">6693</span>
<span id="L6694" rel="#L6694">6694</span>
<span id="L6695" rel="#L6695">6695</span>
<span id="L6696" rel="#L6696">6696</span>
<span id="L6697" rel="#L6697">6697</span>
<span id="L6698" rel="#L6698">6698</span>
<span id="L6699" rel="#L6699">6699</span>
<span id="L6700" rel="#L6700">6700</span>
<span id="L6701" rel="#L6701">6701</span>
<span id="L6702" rel="#L6702">6702</span>
<span id="L6703" rel="#L6703">6703</span>
<span id="L6704" rel="#L6704">6704</span>
<span id="L6705" rel="#L6705">6705</span>
<span id="L6706" rel="#L6706">6706</span>
<span id="L6707" rel="#L6707">6707</span>
<span id="L6708" rel="#L6708">6708</span>
<span id="L6709" rel="#L6709">6709</span>
<span id="L6710" rel="#L6710">6710</span>
<span id="L6711" rel="#L6711">6711</span>
<span id="L6712" rel="#L6712">6712</span>
<span id="L6713" rel="#L6713">6713</span>
<span id="L6714" rel="#L6714">6714</span>
<span id="L6715" rel="#L6715">6715</span>
<span id="L6716" rel="#L6716">6716</span>
<span id="L6717" rel="#L6717">6717</span>
<span id="L6718" rel="#L6718">6718</span>
<span id="L6719" rel="#L6719">6719</span>
<span id="L6720" rel="#L6720">6720</span>
<span id="L6721" rel="#L6721">6721</span>
<span id="L6722" rel="#L6722">6722</span>
<span id="L6723" rel="#L6723">6723</span>
<span id="L6724" rel="#L6724">6724</span>
<span id="L6725" rel="#L6725">6725</span>
<span id="L6726" rel="#L6726">6726</span>
<span id="L6727" rel="#L6727">6727</span>
<span id="L6728" rel="#L6728">6728</span>
<span id="L6729" rel="#L6729">6729</span>
<span id="L6730" rel="#L6730">6730</span>
<span id="L6731" rel="#L6731">6731</span>
<span id="L6732" rel="#L6732">6732</span>
<span id="L6733" rel="#L6733">6733</span>
<span id="L6734" rel="#L6734">6734</span>
<span id="L6735" rel="#L6735">6735</span>
<span id="L6736" rel="#L6736">6736</span>
<span id="L6737" rel="#L6737">6737</span>
<span id="L6738" rel="#L6738">6738</span>
<span id="L6739" rel="#L6739">6739</span>
<span id="L6740" rel="#L6740">6740</span>
<span id="L6741" rel="#L6741">6741</span>
<span id="L6742" rel="#L6742">6742</span>
<span id="L6743" rel="#L6743">6743</span>
<span id="L6744" rel="#L6744">6744</span>
<span id="L6745" rel="#L6745">6745</span>
<span id="L6746" rel="#L6746">6746</span>
<span id="L6747" rel="#L6747">6747</span>
<span id="L6748" rel="#L6748">6748</span>
<span id="L6749" rel="#L6749">6749</span>
<span id="L6750" rel="#L6750">6750</span>
<span id="L6751" rel="#L6751">6751</span>
<span id="L6752" rel="#L6752">6752</span>
<span id="L6753" rel="#L6753">6753</span>
<span id="L6754" rel="#L6754">6754</span>
<span id="L6755" rel="#L6755">6755</span>
<span id="L6756" rel="#L6756">6756</span>
<span id="L6757" rel="#L6757">6757</span>
<span id="L6758" rel="#L6758">6758</span>
<span id="L6759" rel="#L6759">6759</span>
<span id="L6760" rel="#L6760">6760</span>
<span id="L6761" rel="#L6761">6761</span>
<span id="L6762" rel="#L6762">6762</span>
<span id="L6763" rel="#L6763">6763</span>
<span id="L6764" rel="#L6764">6764</span>
<span id="L6765" rel="#L6765">6765</span>
<span id="L6766" rel="#L6766">6766</span>
<span id="L6767" rel="#L6767">6767</span>
<span id="L6768" rel="#L6768">6768</span>
<span id="L6769" rel="#L6769">6769</span>
<span id="L6770" rel="#L6770">6770</span>
<span id="L6771" rel="#L6771">6771</span>
<span id="L6772" rel="#L6772">6772</span>
<span id="L6773" rel="#L6773">6773</span>
<span id="L6774" rel="#L6774">6774</span>
<span id="L6775" rel="#L6775">6775</span>
<span id="L6776" rel="#L6776">6776</span>
<span id="L6777" rel="#L6777">6777</span>
<span id="L6778" rel="#L6778">6778</span>
<span id="L6779" rel="#L6779">6779</span>
<span id="L6780" rel="#L6780">6780</span>
<span id="L6781" rel="#L6781">6781</span>
<span id="L6782" rel="#L6782">6782</span>
<span id="L6783" rel="#L6783">6783</span>
<span id="L6784" rel="#L6784">6784</span>
<span id="L6785" rel="#L6785">6785</span>
<span id="L6786" rel="#L6786">6786</span>
<span id="L6787" rel="#L6787">6787</span>
<span id="L6788" rel="#L6788">6788</span>
<span id="L6789" rel="#L6789">6789</span>
<span id="L6790" rel="#L6790">6790</span>
<span id="L6791" rel="#L6791">6791</span>
<span id="L6792" rel="#L6792">6792</span>
<span id="L6793" rel="#L6793">6793</span>
<span id="L6794" rel="#L6794">6794</span>
<span id="L6795" rel="#L6795">6795</span>
<span id="L6796" rel="#L6796">6796</span>
<span id="L6797" rel="#L6797">6797</span>
<span id="L6798" rel="#L6798">6798</span>
<span id="L6799" rel="#L6799">6799</span>
<span id="L6800" rel="#L6800">6800</span>
<span id="L6801" rel="#L6801">6801</span>
<span id="L6802" rel="#L6802">6802</span>
<span id="L6803" rel="#L6803">6803</span>
<span id="L6804" rel="#L6804">6804</span>
<span id="L6805" rel="#L6805">6805</span>
<span id="L6806" rel="#L6806">6806</span>
<span id="L6807" rel="#L6807">6807</span>
<span id="L6808" rel="#L6808">6808</span>
<span id="L6809" rel="#L6809">6809</span>
<span id="L6810" rel="#L6810">6810</span>
<span id="L6811" rel="#L6811">6811</span>
<span id="L6812" rel="#L6812">6812</span>
<span id="L6813" rel="#L6813">6813</span>
<span id="L6814" rel="#L6814">6814</span>
<span id="L6815" rel="#L6815">6815</span>
<span id="L6816" rel="#L6816">6816</span>
<span id="L6817" rel="#L6817">6817</span>
<span id="L6818" rel="#L6818">6818</span>
<span id="L6819" rel="#L6819">6819</span>
<span id="L6820" rel="#L6820">6820</span>
<span id="L6821" rel="#L6821">6821</span>
<span id="L6822" rel="#L6822">6822</span>
<span id="L6823" rel="#L6823">6823</span>
<span id="L6824" rel="#L6824">6824</span>
<span id="L6825" rel="#L6825">6825</span>
<span id="L6826" rel="#L6826">6826</span>
<span id="L6827" rel="#L6827">6827</span>
<span id="L6828" rel="#L6828">6828</span>
<span id="L6829" rel="#L6829">6829</span>
<span id="L6830" rel="#L6830">6830</span>
<span id="L6831" rel="#L6831">6831</span>
<span id="L6832" rel="#L6832">6832</span>
<span id="L6833" rel="#L6833">6833</span>
<span id="L6834" rel="#L6834">6834</span>
<span id="L6835" rel="#L6835">6835</span>
<span id="L6836" rel="#L6836">6836</span>
<span id="L6837" rel="#L6837">6837</span>
<span id="L6838" rel="#L6838">6838</span>
<span id="L6839" rel="#L6839">6839</span>
<span id="L6840" rel="#L6840">6840</span>
<span id="L6841" rel="#L6841">6841</span>
<span id="L6842" rel="#L6842">6842</span>
<span id="L6843" rel="#L6843">6843</span>
<span id="L6844" rel="#L6844">6844</span>
<span id="L6845" rel="#L6845">6845</span>
<span id="L6846" rel="#L6846">6846</span>
<span id="L6847" rel="#L6847">6847</span>
<span id="L6848" rel="#L6848">6848</span>
<span id="L6849" rel="#L6849">6849</span>
<span id="L6850" rel="#L6850">6850</span>
<span id="L6851" rel="#L6851">6851</span>
<span id="L6852" rel="#L6852">6852</span>
<span id="L6853" rel="#L6853">6853</span>
<span id="L6854" rel="#L6854">6854</span>
<span id="L6855" rel="#L6855">6855</span>
<span id="L6856" rel="#L6856">6856</span>
<span id="L6857" rel="#L6857">6857</span>
<span id="L6858" rel="#L6858">6858</span>
<span id="L6859" rel="#L6859">6859</span>
<span id="L6860" rel="#L6860">6860</span>
<span id="L6861" rel="#L6861">6861</span>
<span id="L6862" rel="#L6862">6862</span>
<span id="L6863" rel="#L6863">6863</span>
<span id="L6864" rel="#L6864">6864</span>
<span id="L6865" rel="#L6865">6865</span>
<span id="L6866" rel="#L6866">6866</span>
<span id="L6867" rel="#L6867">6867</span>
<span id="L6868" rel="#L6868">6868</span>
<span id="L6869" rel="#L6869">6869</span>
<span id="L6870" rel="#L6870">6870</span>
<span id="L6871" rel="#L6871">6871</span>
<span id="L6872" rel="#L6872">6872</span>
<span id="L6873" rel="#L6873">6873</span>
<span id="L6874" rel="#L6874">6874</span>
<span id="L6875" rel="#L6875">6875</span>
<span id="L6876" rel="#L6876">6876</span>
<span id="L6877" rel="#L6877">6877</span>
<span id="L6878" rel="#L6878">6878</span>
<span id="L6879" rel="#L6879">6879</span>
<span id="L6880" rel="#L6880">6880</span>
<span id="L6881" rel="#L6881">6881</span>
<span id="L6882" rel="#L6882">6882</span>
<span id="L6883" rel="#L6883">6883</span>
<span id="L6884" rel="#L6884">6884</span>
<span id="L6885" rel="#L6885">6885</span>
<span id="L6886" rel="#L6886">6886</span>
<span id="L6887" rel="#L6887">6887</span>
<span id="L6888" rel="#L6888">6888</span>
<span id="L6889" rel="#L6889">6889</span>
<span id="L6890" rel="#L6890">6890</span>
<span id="L6891" rel="#L6891">6891</span>
<span id="L6892" rel="#L6892">6892</span>
<span id="L6893" rel="#L6893">6893</span>
<span id="L6894" rel="#L6894">6894</span>
<span id="L6895" rel="#L6895">6895</span>
<span id="L6896" rel="#L6896">6896</span>
<span id="L6897" rel="#L6897">6897</span>
<span id="L6898" rel="#L6898">6898</span>
<span id="L6899" rel="#L6899">6899</span>
<span id="L6900" rel="#L6900">6900</span>
<span id="L6901" rel="#L6901">6901</span>
<span id="L6902" rel="#L6902">6902</span>
<span id="L6903" rel="#L6903">6903</span>
<span id="L6904" rel="#L6904">6904</span>
<span id="L6905" rel="#L6905">6905</span>
<span id="L6906" rel="#L6906">6906</span>
<span id="L6907" rel="#L6907">6907</span>
<span id="L6908" rel="#L6908">6908</span>
<span id="L6909" rel="#L6909">6909</span>
<span id="L6910" rel="#L6910">6910</span>
<span id="L6911" rel="#L6911">6911</span>
<span id="L6912" rel="#L6912">6912</span>
<span id="L6913" rel="#L6913">6913</span>
<span id="L6914" rel="#L6914">6914</span>
<span id="L6915" rel="#L6915">6915</span>
<span id="L6916" rel="#L6916">6916</span>
<span id="L6917" rel="#L6917">6917</span>
<span id="L6918" rel="#L6918">6918</span>
<span id="L6919" rel="#L6919">6919</span>
<span id="L6920" rel="#L6920">6920</span>
<span id="L6921" rel="#L6921">6921</span>
<span id="L6922" rel="#L6922">6922</span>
<span id="L6923" rel="#L6923">6923</span>
<span id="L6924" rel="#L6924">6924</span>
<span id="L6925" rel="#L6925">6925</span>
<span id="L6926" rel="#L6926">6926</span>
<span id="L6927" rel="#L6927">6927</span>
<span id="L6928" rel="#L6928">6928</span>
<span id="L6929" rel="#L6929">6929</span>
<span id="L6930" rel="#L6930">6930</span>
<span id="L6931" rel="#L6931">6931</span>
<span id="L6932" rel="#L6932">6932</span>
<span id="L6933" rel="#L6933">6933</span>
<span id="L6934" rel="#L6934">6934</span>
<span id="L6935" rel="#L6935">6935</span>
<span id="L6936" rel="#L6936">6936</span>
<span id="L6937" rel="#L6937">6937</span>
<span id="L6938" rel="#L6938">6938</span>
<span id="L6939" rel="#L6939">6939</span>
<span id="L6940" rel="#L6940">6940</span>
<span id="L6941" rel="#L6941">6941</span>
<span id="L6942" rel="#L6942">6942</span>
<span id="L6943" rel="#L6943">6943</span>
<span id="L6944" rel="#L6944">6944</span>
<span id="L6945" rel="#L6945">6945</span>
<span id="L6946" rel="#L6946">6946</span>
<span id="L6947" rel="#L6947">6947</span>
<span id="L6948" rel="#L6948">6948</span>
<span id="L6949" rel="#L6949">6949</span>
<span id="L6950" rel="#L6950">6950</span>
<span id="L6951" rel="#L6951">6951</span>
<span id="L6952" rel="#L6952">6952</span>
<span id="L6953" rel="#L6953">6953</span>
<span id="L6954" rel="#L6954">6954</span>
<span id="L6955" rel="#L6955">6955</span>
<span id="L6956" rel="#L6956">6956</span>
<span id="L6957" rel="#L6957">6957</span>
<span id="L6958" rel="#L6958">6958</span>
<span id="L6959" rel="#L6959">6959</span>
<span id="L6960" rel="#L6960">6960</span>
<span id="L6961" rel="#L6961">6961</span>
<span id="L6962" rel="#L6962">6962</span>
<span id="L6963" rel="#L6963">6963</span>
<span id="L6964" rel="#L6964">6964</span>
<span id="L6965" rel="#L6965">6965</span>
<span id="L6966" rel="#L6966">6966</span>
<span id="L6967" rel="#L6967">6967</span>
<span id="L6968" rel="#L6968">6968</span>
<span id="L6969" rel="#L6969">6969</span>
<span id="L6970" rel="#L6970">6970</span>
<span id="L6971" rel="#L6971">6971</span>
<span id="L6972" rel="#L6972">6972</span>
<span id="L6973" rel="#L6973">6973</span>
<span id="L6974" rel="#L6974">6974</span>
<span id="L6975" rel="#L6975">6975</span>
<span id="L6976" rel="#L6976">6976</span>
<span id="L6977" rel="#L6977">6977</span>
<span id="L6978" rel="#L6978">6978</span>
<span id="L6979" rel="#L6979">6979</span>
<span id="L6980" rel="#L6980">6980</span>
<span id="L6981" rel="#L6981">6981</span>
<span id="L6982" rel="#L6982">6982</span>
<span id="L6983" rel="#L6983">6983</span>
<span id="L6984" rel="#L6984">6984</span>
<span id="L6985" rel="#L6985">6985</span>
<span id="L6986" rel="#L6986">6986</span>
<span id="L6987" rel="#L6987">6987</span>
<span id="L6988" rel="#L6988">6988</span>
<span id="L6989" rel="#L6989">6989</span>
<span id="L6990" rel="#L6990">6990</span>
<span id="L6991" rel="#L6991">6991</span>
<span id="L6992" rel="#L6992">6992</span>
<span id="L6993" rel="#L6993">6993</span>
<span id="L6994" rel="#L6994">6994</span>
<span id="L6995" rel="#L6995">6995</span>
<span id="L6996" rel="#L6996">6996</span>
<span id="L6997" rel="#L6997">6997</span>
<span id="L6998" rel="#L6998">6998</span>
<span id="L6999" rel="#L6999">6999</span>
<span id="L7000" rel="#L7000">7000</span>
<span id="L7001" rel="#L7001">7001</span>
<span id="L7002" rel="#L7002">7002</span>
<span id="L7003" rel="#L7003">7003</span>
<span id="L7004" rel="#L7004">7004</span>
<span id="L7005" rel="#L7005">7005</span>
<span id="L7006" rel="#L7006">7006</span>
<span id="L7007" rel="#L7007">7007</span>
<span id="L7008" rel="#L7008">7008</span>
<span id="L7009" rel="#L7009">7009</span>
<span id="L7010" rel="#L7010">7010</span>
<span id="L7011" rel="#L7011">7011</span>
<span id="L7012" rel="#L7012">7012</span>
<span id="L7013" rel="#L7013">7013</span>
<span id="L7014" rel="#L7014">7014</span>
<span id="L7015" rel="#L7015">7015</span>
<span id="L7016" rel="#L7016">7016</span>
<span id="L7017" rel="#L7017">7017</span>
<span id="L7018" rel="#L7018">7018</span>
<span id="L7019" rel="#L7019">7019</span>
<span id="L7020" rel="#L7020">7020</span>
<span id="L7021" rel="#L7021">7021</span>
<span id="L7022" rel="#L7022">7022</span>
<span id="L7023" rel="#L7023">7023</span>
<span id="L7024" rel="#L7024">7024</span>
<span id="L7025" rel="#L7025">7025</span>
<span id="L7026" rel="#L7026">7026</span>
<span id="L7027" rel="#L7027">7027</span>
<span id="L7028" rel="#L7028">7028</span>
<span id="L7029" rel="#L7029">7029</span>
<span id="L7030" rel="#L7030">7030</span>
<span id="L7031" rel="#L7031">7031</span>
<span id="L7032" rel="#L7032">7032</span>
<span id="L7033" rel="#L7033">7033</span>
<span id="L7034" rel="#L7034">7034</span>
<span id="L7035" rel="#L7035">7035</span>
<span id="L7036" rel="#L7036">7036</span>
<span id="L7037" rel="#L7037">7037</span>
<span id="L7038" rel="#L7038">7038</span>
<span id="L7039" rel="#L7039">7039</span>
<span id="L7040" rel="#L7040">7040</span>
<span id="L7041" rel="#L7041">7041</span>
<span id="L7042" rel="#L7042">7042</span>
<span id="L7043" rel="#L7043">7043</span>
<span id="L7044" rel="#L7044">7044</span>
<span id="L7045" rel="#L7045">7045</span>
<span id="L7046" rel="#L7046">7046</span>
<span id="L7047" rel="#L7047">7047</span>
<span id="L7048" rel="#L7048">7048</span>
<span id="L7049" rel="#L7049">7049</span>
<span id="L7050" rel="#L7050">7050</span>
<span id="L7051" rel="#L7051">7051</span>
<span id="L7052" rel="#L7052">7052</span>
<span id="L7053" rel="#L7053">7053</span>
<span id="L7054" rel="#L7054">7054</span>
<span id="L7055" rel="#L7055">7055</span>
<span id="L7056" rel="#L7056">7056</span>
<span id="L7057" rel="#L7057">7057</span>
<span id="L7058" rel="#L7058">7058</span>
<span id="L7059" rel="#L7059">7059</span>
<span id="L7060" rel="#L7060">7060</span>
<span id="L7061" rel="#L7061">7061</span>
<span id="L7062" rel="#L7062">7062</span>
<span id="L7063" rel="#L7063">7063</span>
<span id="L7064" rel="#L7064">7064</span>
<span id="L7065" rel="#L7065">7065</span>
<span id="L7066" rel="#L7066">7066</span>
<span id="L7067" rel="#L7067">7067</span>
<span id="L7068" rel="#L7068">7068</span>
<span id="L7069" rel="#L7069">7069</span>
<span id="L7070" rel="#L7070">7070</span>
<span id="L7071" rel="#L7071">7071</span>
<span id="L7072" rel="#L7072">7072</span>
<span id="L7073" rel="#L7073">7073</span>
<span id="L7074" rel="#L7074">7074</span>
<span id="L7075" rel="#L7075">7075</span>
<span id="L7076" rel="#L7076">7076</span>
<span id="L7077" rel="#L7077">7077</span>
<span id="L7078" rel="#L7078">7078</span>
<span id="L7079" rel="#L7079">7079</span>
<span id="L7080" rel="#L7080">7080</span>
<span id="L7081" rel="#L7081">7081</span>
<span id="L7082" rel="#L7082">7082</span>
<span id="L7083" rel="#L7083">7083</span>
<span id="L7084" rel="#L7084">7084</span>
<span id="L7085" rel="#L7085">7085</span>
<span id="L7086" rel="#L7086">7086</span>
<span id="L7087" rel="#L7087">7087</span>
<span id="L7088" rel="#L7088">7088</span>
<span id="L7089" rel="#L7089">7089</span>
<span id="L7090" rel="#L7090">7090</span>
<span id="L7091" rel="#L7091">7091</span>
<span id="L7092" rel="#L7092">7092</span>
<span id="L7093" rel="#L7093">7093</span>
<span id="L7094" rel="#L7094">7094</span>
<span id="L7095" rel="#L7095">7095</span>
<span id="L7096" rel="#L7096">7096</span>
<span id="L7097" rel="#L7097">7097</span>
<span id="L7098" rel="#L7098">7098</span>
<span id="L7099" rel="#L7099">7099</span>
<span id="L7100" rel="#L7100">7100</span>
<span id="L7101" rel="#L7101">7101</span>
<span id="L7102" rel="#L7102">7102</span>
<span id="L7103" rel="#L7103">7103</span>
<span id="L7104" rel="#L7104">7104</span>
<span id="L7105" rel="#L7105">7105</span>
<span id="L7106" rel="#L7106">7106</span>
<span id="L7107" rel="#L7107">7107</span>
<span id="L7108" rel="#L7108">7108</span>
<span id="L7109" rel="#L7109">7109</span>
<span id="L7110" rel="#L7110">7110</span>
<span id="L7111" rel="#L7111">7111</span>
<span id="L7112" rel="#L7112">7112</span>
<span id="L7113" rel="#L7113">7113</span>
<span id="L7114" rel="#L7114">7114</span>
<span id="L7115" rel="#L7115">7115</span>
<span id="L7116" rel="#L7116">7116</span>
<span id="L7117" rel="#L7117">7117</span>
<span id="L7118" rel="#L7118">7118</span>
<span id="L7119" rel="#L7119">7119</span>
<span id="L7120" rel="#L7120">7120</span>
<span id="L7121" rel="#L7121">7121</span>
<span id="L7122" rel="#L7122">7122</span>
<span id="L7123" rel="#L7123">7123</span>
<span id="L7124" rel="#L7124">7124</span>
<span id="L7125" rel="#L7125">7125</span>
<span id="L7126" rel="#L7126">7126</span>
<span id="L7127" rel="#L7127">7127</span>
<span id="L7128" rel="#L7128">7128</span>
<span id="L7129" rel="#L7129">7129</span>
<span id="L7130" rel="#L7130">7130</span>
<span id="L7131" rel="#L7131">7131</span>
<span id="L7132" rel="#L7132">7132</span>
<span id="L7133" rel="#L7133">7133</span>
<span id="L7134" rel="#L7134">7134</span>
<span id="L7135" rel="#L7135">7135</span>
<span id="L7136" rel="#L7136">7136</span>
<span id="L7137" rel="#L7137">7137</span>
<span id="L7138" rel="#L7138">7138</span>
<span id="L7139" rel="#L7139">7139</span>
<span id="L7140" rel="#L7140">7140</span>
<span id="L7141" rel="#L7141">7141</span>
<span id="L7142" rel="#L7142">7142</span>
<span id="L7143" rel="#L7143">7143</span>
<span id="L7144" rel="#L7144">7144</span>
<span id="L7145" rel="#L7145">7145</span>
<span id="L7146" rel="#L7146">7146</span>
<span id="L7147" rel="#L7147">7147</span>
<span id="L7148" rel="#L7148">7148</span>
<span id="L7149" rel="#L7149">7149</span>
<span id="L7150" rel="#L7150">7150</span>
<span id="L7151" rel="#L7151">7151</span>
<span id="L7152" rel="#L7152">7152</span>
<span id="L7153" rel="#L7153">7153</span>
<span id="L7154" rel="#L7154">7154</span>
<span id="L7155" rel="#L7155">7155</span>
<span id="L7156" rel="#L7156">7156</span>
<span id="L7157" rel="#L7157">7157</span>
<span id="L7158" rel="#L7158">7158</span>
<span id="L7159" rel="#L7159">7159</span>
<span id="L7160" rel="#L7160">7160</span>
<span id="L7161" rel="#L7161">7161</span>
<span id="L7162" rel="#L7162">7162</span>
<span id="L7163" rel="#L7163">7163</span>
<span id="L7164" rel="#L7164">7164</span>
<span id="L7165" rel="#L7165">7165</span>
<span id="L7166" rel="#L7166">7166</span>
<span id="L7167" rel="#L7167">7167</span>
<span id="L7168" rel="#L7168">7168</span>
<span id="L7169" rel="#L7169">7169</span>
<span id="L7170" rel="#L7170">7170</span>
<span id="L7171" rel="#L7171">7171</span>
<span id="L7172" rel="#L7172">7172</span>
<span id="L7173" rel="#L7173">7173</span>
<span id="L7174" rel="#L7174">7174</span>
<span id="L7175" rel="#L7175">7175</span>
<span id="L7176" rel="#L7176">7176</span>
<span id="L7177" rel="#L7177">7177</span>
<span id="L7178" rel="#L7178">7178</span>
<span id="L7179" rel="#L7179">7179</span>
<span id="L7180" rel="#L7180">7180</span>
<span id="L7181" rel="#L7181">7181</span>
<span id="L7182" rel="#L7182">7182</span>
<span id="L7183" rel="#L7183">7183</span>
<span id="L7184" rel="#L7184">7184</span>
<span id="L7185" rel="#L7185">7185</span>
<span id="L7186" rel="#L7186">7186</span>
<span id="L7187" rel="#L7187">7187</span>
<span id="L7188" rel="#L7188">7188</span>
<span id="L7189" rel="#L7189">7189</span>
<span id="L7190" rel="#L7190">7190</span>
<span id="L7191" rel="#L7191">7191</span>
<span id="L7192" rel="#L7192">7192</span>
<span id="L7193" rel="#L7193">7193</span>
<span id="L7194" rel="#L7194">7194</span>
<span id="L7195" rel="#L7195">7195</span>
<span id="L7196" rel="#L7196">7196</span>
<span id="L7197" rel="#L7197">7197</span>
<span id="L7198" rel="#L7198">7198</span>
<span id="L7199" rel="#L7199">7199</span>
<span id="L7200" rel="#L7200">7200</span>
<span id="L7201" rel="#L7201">7201</span>
<span id="L7202" rel="#L7202">7202</span>
<span id="L7203" rel="#L7203">7203</span>
<span id="L7204" rel="#L7204">7204</span>
<span id="L7205" rel="#L7205">7205</span>
<span id="L7206" rel="#L7206">7206</span>
<span id="L7207" rel="#L7207">7207</span>
<span id="L7208" rel="#L7208">7208</span>
<span id="L7209" rel="#L7209">7209</span>
<span id="L7210" rel="#L7210">7210</span>
<span id="L7211" rel="#L7211">7211</span>
<span id="L7212" rel="#L7212">7212</span>
<span id="L7213" rel="#L7213">7213</span>
<span id="L7214" rel="#L7214">7214</span>
<span id="L7215" rel="#L7215">7215</span>
<span id="L7216" rel="#L7216">7216</span>
<span id="L7217" rel="#L7217">7217</span>
<span id="L7218" rel="#L7218">7218</span>
<span id="L7219" rel="#L7219">7219</span>
<span id="L7220" rel="#L7220">7220</span>
<span id="L7221" rel="#L7221">7221</span>
<span id="L7222" rel="#L7222">7222</span>
<span id="L7223" rel="#L7223">7223</span>
<span id="L7224" rel="#L7224">7224</span>
<span id="L7225" rel="#L7225">7225</span>
<span id="L7226" rel="#L7226">7226</span>
<span id="L7227" rel="#L7227">7227</span>
<span id="L7228" rel="#L7228">7228</span>
<span id="L7229" rel="#L7229">7229</span>
<span id="L7230" rel="#L7230">7230</span>
<span id="L7231" rel="#L7231">7231</span>
<span id="L7232" rel="#L7232">7232</span>
<span id="L7233" rel="#L7233">7233</span>
<span id="L7234" rel="#L7234">7234</span>
<span id="L7235" rel="#L7235">7235</span>
<span id="L7236" rel="#L7236">7236</span>
<span id="L7237" rel="#L7237">7237</span>
<span id="L7238" rel="#L7238">7238</span>
<span id="L7239" rel="#L7239">7239</span>
<span id="L7240" rel="#L7240">7240</span>
<span id="L7241" rel="#L7241">7241</span>
<span id="L7242" rel="#L7242">7242</span>
<span id="L7243" rel="#L7243">7243</span>
<span id="L7244" rel="#L7244">7244</span>
<span id="L7245" rel="#L7245">7245</span>
<span id="L7246" rel="#L7246">7246</span>
<span id="L7247" rel="#L7247">7247</span>
<span id="L7248" rel="#L7248">7248</span>
<span id="L7249" rel="#L7249">7249</span>
<span id="L7250" rel="#L7250">7250</span>
<span id="L7251" rel="#L7251">7251</span>
<span id="L7252" rel="#L7252">7252</span>
<span id="L7253" rel="#L7253">7253</span>
<span id="L7254" rel="#L7254">7254</span>
<span id="L7255" rel="#L7255">7255</span>
<span id="L7256" rel="#L7256">7256</span>
<span id="L7257" rel="#L7257">7257</span>
<span id="L7258" rel="#L7258">7258</span>
<span id="L7259" rel="#L7259">7259</span>
<span id="L7260" rel="#L7260">7260</span>
<span id="L7261" rel="#L7261">7261</span>
<span id="L7262" rel="#L7262">7262</span>
<span id="L7263" rel="#L7263">7263</span>
<span id="L7264" rel="#L7264">7264</span>
<span id="L7265" rel="#L7265">7265</span>
<span id="L7266" rel="#L7266">7266</span>
<span id="L7267" rel="#L7267">7267</span>
<span id="L7268" rel="#L7268">7268</span>
<span id="L7269" rel="#L7269">7269</span>
<span id="L7270" rel="#L7270">7270</span>
<span id="L7271" rel="#L7271">7271</span>
<span id="L7272" rel="#L7272">7272</span>
<span id="L7273" rel="#L7273">7273</span>
<span id="L7274" rel="#L7274">7274</span>
<span id="L7275" rel="#L7275">7275</span>
<span id="L7276" rel="#L7276">7276</span>
<span id="L7277" rel="#L7277">7277</span>
<span id="L7278" rel="#L7278">7278</span>
<span id="L7279" rel="#L7279">7279</span>
<span id="L7280" rel="#L7280">7280</span>
<span id="L7281" rel="#L7281">7281</span>
<span id="L7282" rel="#L7282">7282</span>
<span id="L7283" rel="#L7283">7283</span>
<span id="L7284" rel="#L7284">7284</span>
<span id="L7285" rel="#L7285">7285</span>
<span id="L7286" rel="#L7286">7286</span>
<span id="L7287" rel="#L7287">7287</span>
<span id="L7288" rel="#L7288">7288</span>
<span id="L7289" rel="#L7289">7289</span>
<span id="L7290" rel="#L7290">7290</span>
<span id="L7291" rel="#L7291">7291</span>
<span id="L7292" rel="#L7292">7292</span>
<span id="L7293" rel="#L7293">7293</span>
<span id="L7294" rel="#L7294">7294</span>
<span id="L7295" rel="#L7295">7295</span>
<span id="L7296" rel="#L7296">7296</span>
<span id="L7297" rel="#L7297">7297</span>
<span id="L7298" rel="#L7298">7298</span>
<span id="L7299" rel="#L7299">7299</span>
<span id="L7300" rel="#L7300">7300</span>
<span id="L7301" rel="#L7301">7301</span>
<span id="L7302" rel="#L7302">7302</span>
<span id="L7303" rel="#L7303">7303</span>
<span id="L7304" rel="#L7304">7304</span>
<span id="L7305" rel="#L7305">7305</span>
<span id="L7306" rel="#L7306">7306</span>
<span id="L7307" rel="#L7307">7307</span>
<span id="L7308" rel="#L7308">7308</span>
<span id="L7309" rel="#L7309">7309</span>
<span id="L7310" rel="#L7310">7310</span>
<span id="L7311" rel="#L7311">7311</span>
<span id="L7312" rel="#L7312">7312</span>
<span id="L7313" rel="#L7313">7313</span>
<span id="L7314" rel="#L7314">7314</span>
<span id="L7315" rel="#L7315">7315</span>
<span id="L7316" rel="#L7316">7316</span>
<span id="L7317" rel="#L7317">7317</span>
<span id="L7318" rel="#L7318">7318</span>
<span id="L7319" rel="#L7319">7319</span>
<span id="L7320" rel="#L7320">7320</span>
<span id="L7321" rel="#L7321">7321</span>
<span id="L7322" rel="#L7322">7322</span>
<span id="L7323" rel="#L7323">7323</span>
<span id="L7324" rel="#L7324">7324</span>
<span id="L7325" rel="#L7325">7325</span>
<span id="L7326" rel="#L7326">7326</span>
<span id="L7327" rel="#L7327">7327</span>
<span id="L7328" rel="#L7328">7328</span>
<span id="L7329" rel="#L7329">7329</span>
<span id="L7330" rel="#L7330">7330</span>
<span id="L7331" rel="#L7331">7331</span>
<span id="L7332" rel="#L7332">7332</span>
<span id="L7333" rel="#L7333">7333</span>
<span id="L7334" rel="#L7334">7334</span>
<span id="L7335" rel="#L7335">7335</span>
<span id="L7336" rel="#L7336">7336</span>
<span id="L7337" rel="#L7337">7337</span>
<span id="L7338" rel="#L7338">7338</span>
<span id="L7339" rel="#L7339">7339</span>
<span id="L7340" rel="#L7340">7340</span>
<span id="L7341" rel="#L7341">7341</span>
<span id="L7342" rel="#L7342">7342</span>
<span id="L7343" rel="#L7343">7343</span>
<span id="L7344" rel="#L7344">7344</span>
<span id="L7345" rel="#L7345">7345</span>
<span id="L7346" rel="#L7346">7346</span>
<span id="L7347" rel="#L7347">7347</span>
<span id="L7348" rel="#L7348">7348</span>
<span id="L7349" rel="#L7349">7349</span>
<span id="L7350" rel="#L7350">7350</span>
<span id="L7351" rel="#L7351">7351</span>
<span id="L7352" rel="#L7352">7352</span>
<span id="L7353" rel="#L7353">7353</span>
<span id="L7354" rel="#L7354">7354</span>
<span id="L7355" rel="#L7355">7355</span>
<span id="L7356" rel="#L7356">7356</span>
<span id="L7357" rel="#L7357">7357</span>
<span id="L7358" rel="#L7358">7358</span>
<span id="L7359" rel="#L7359">7359</span>
<span id="L7360" rel="#L7360">7360</span>
<span id="L7361" rel="#L7361">7361</span>
<span id="L7362" rel="#L7362">7362</span>
<span id="L7363" rel="#L7363">7363</span>
<span id="L7364" rel="#L7364">7364</span>
<span id="L7365" rel="#L7365">7365</span>
<span id="L7366" rel="#L7366">7366</span>
<span id="L7367" rel="#L7367">7367</span>
<span id="L7368" rel="#L7368">7368</span>
<span id="L7369" rel="#L7369">7369</span>
<span id="L7370" rel="#L7370">7370</span>
<span id="L7371" rel="#L7371">7371</span>
<span id="L7372" rel="#L7372">7372</span>
<span id="L7373" rel="#L7373">7373</span>
<span id="L7374" rel="#L7374">7374</span>
<span id="L7375" rel="#L7375">7375</span>
<span id="L7376" rel="#L7376">7376</span>
<span id="L7377" rel="#L7377">7377</span>
<span id="L7378" rel="#L7378">7378</span>
<span id="L7379" rel="#L7379">7379</span>
<span id="L7380" rel="#L7380">7380</span>
<span id="L7381" rel="#L7381">7381</span>
<span id="L7382" rel="#L7382">7382</span>
<span id="L7383" rel="#L7383">7383</span>
<span id="L7384" rel="#L7384">7384</span>
<span id="L7385" rel="#L7385">7385</span>
<span id="L7386" rel="#L7386">7386</span>
<span id="L7387" rel="#L7387">7387</span>
<span id="L7388" rel="#L7388">7388</span>
<span id="L7389" rel="#L7389">7389</span>
<span id="L7390" rel="#L7390">7390</span>
<span id="L7391" rel="#L7391">7391</span>
<span id="L7392" rel="#L7392">7392</span>
<span id="L7393" rel="#L7393">7393</span>
<span id="L7394" rel="#L7394">7394</span>
<span id="L7395" rel="#L7395">7395</span>
<span id="L7396" rel="#L7396">7396</span>
<span id="L7397" rel="#L7397">7397</span>
<span id="L7398" rel="#L7398">7398</span>
<span id="L7399" rel="#L7399">7399</span>
<span id="L7400" rel="#L7400">7400</span>
<span id="L7401" rel="#L7401">7401</span>
<span id="L7402" rel="#L7402">7402</span>
<span id="L7403" rel="#L7403">7403</span>
<span id="L7404" rel="#L7404">7404</span>
<span id="L7405" rel="#L7405">7405</span>
<span id="L7406" rel="#L7406">7406</span>
<span id="L7407" rel="#L7407">7407</span>
<span id="L7408" rel="#L7408">7408</span>
<span id="L7409" rel="#L7409">7409</span>
<span id="L7410" rel="#L7410">7410</span>
<span id="L7411" rel="#L7411">7411</span>
<span id="L7412" rel="#L7412">7412</span>
<span id="L7413" rel="#L7413">7413</span>
<span id="L7414" rel="#L7414">7414</span>
<span id="L7415" rel="#L7415">7415</span>
<span id="L7416" rel="#L7416">7416</span>
<span id="L7417" rel="#L7417">7417</span>
<span id="L7418" rel="#L7418">7418</span>
<span id="L7419" rel="#L7419">7419</span>
<span id="L7420" rel="#L7420">7420</span>
<span id="L7421" rel="#L7421">7421</span>
<span id="L7422" rel="#L7422">7422</span>
<span id="L7423" rel="#L7423">7423</span>
<span id="L7424" rel="#L7424">7424</span>
<span id="L7425" rel="#L7425">7425</span>
<span id="L7426" rel="#L7426">7426</span>
<span id="L7427" rel="#L7427">7427</span>
<span id="L7428" rel="#L7428">7428</span>
<span id="L7429" rel="#L7429">7429</span>
<span id="L7430" rel="#L7430">7430</span>
<span id="L7431" rel="#L7431">7431</span>
<span id="L7432" rel="#L7432">7432</span>
<span id="L7433" rel="#L7433">7433</span>
<span id="L7434" rel="#L7434">7434</span>
<span id="L7435" rel="#L7435">7435</span>
<span id="L7436" rel="#L7436">7436</span>
<span id="L7437" rel="#L7437">7437</span>
<span id="L7438" rel="#L7438">7438</span>
<span id="L7439" rel="#L7439">7439</span>
<span id="L7440" rel="#L7440">7440</span>
<span id="L7441" rel="#L7441">7441</span>
<span id="L7442" rel="#L7442">7442</span>
<span id="L7443" rel="#L7443">7443</span>
<span id="L7444" rel="#L7444">7444</span>
<span id="L7445" rel="#L7445">7445</span>
<span id="L7446" rel="#L7446">7446</span>
<span id="L7447" rel="#L7447">7447</span>
<span id="L7448" rel="#L7448">7448</span>
<span id="L7449" rel="#L7449">7449</span>
<span id="L7450" rel="#L7450">7450</span>
<span id="L7451" rel="#L7451">7451</span>
<span id="L7452" rel="#L7452">7452</span>
<span id="L7453" rel="#L7453">7453</span>
<span id="L7454" rel="#L7454">7454</span>
<span id="L7455" rel="#L7455">7455</span>
<span id="L7456" rel="#L7456">7456</span>
<span id="L7457" rel="#L7457">7457</span>
<span id="L7458" rel="#L7458">7458</span>
<span id="L7459" rel="#L7459">7459</span>
<span id="L7460" rel="#L7460">7460</span>
<span id="L7461" rel="#L7461">7461</span>
<span id="L7462" rel="#L7462">7462</span>
<span id="L7463" rel="#L7463">7463</span>
<span id="L7464" rel="#L7464">7464</span>
<span id="L7465" rel="#L7465">7465</span>
<span id="L7466" rel="#L7466">7466</span>
<span id="L7467" rel="#L7467">7467</span>
<span id="L7468" rel="#L7468">7468</span>
<span id="L7469" rel="#L7469">7469</span>
<span id="L7470" rel="#L7470">7470</span>
<span id="L7471" rel="#L7471">7471</span>
<span id="L7472" rel="#L7472">7472</span>
<span id="L7473" rel="#L7473">7473</span>
<span id="L7474" rel="#L7474">7474</span>
<span id="L7475" rel="#L7475">7475</span>
<span id="L7476" rel="#L7476">7476</span>
<span id="L7477" rel="#L7477">7477</span>
<span id="L7478" rel="#L7478">7478</span>
<span id="L7479" rel="#L7479">7479</span>
<span id="L7480" rel="#L7480">7480</span>
<span id="L7481" rel="#L7481">7481</span>
<span id="L7482" rel="#L7482">7482</span>
<span id="L7483" rel="#L7483">7483</span>
<span id="L7484" rel="#L7484">7484</span>
<span id="L7485" rel="#L7485">7485</span>
<span id="L7486" rel="#L7486">7486</span>
<span id="L7487" rel="#L7487">7487</span>
<span id="L7488" rel="#L7488">7488</span>
<span id="L7489" rel="#L7489">7489</span>
<span id="L7490" rel="#L7490">7490</span>
<span id="L7491" rel="#L7491">7491</span>
<span id="L7492" rel="#L7492">7492</span>
<span id="L7493" rel="#L7493">7493</span>
<span id="L7494" rel="#L7494">7494</span>
<span id="L7495" rel="#L7495">7495</span>
<span id="L7496" rel="#L7496">7496</span>
<span id="L7497" rel="#L7497">7497</span>
<span id="L7498" rel="#L7498">7498</span>
<span id="L7499" rel="#L7499">7499</span>
<span id="L7500" rel="#L7500">7500</span>
<span id="L7501" rel="#L7501">7501</span>
<span id="L7502" rel="#L7502">7502</span>
<span id="L7503" rel="#L7503">7503</span>
<span id="L7504" rel="#L7504">7504</span>
<span id="L7505" rel="#L7505">7505</span>
<span id="L7506" rel="#L7506">7506</span>
<span id="L7507" rel="#L7507">7507</span>
<span id="L7508" rel="#L7508">7508</span>
<span id="L7509" rel="#L7509">7509</span>
<span id="L7510" rel="#L7510">7510</span>
<span id="L7511" rel="#L7511">7511</span>
<span id="L7512" rel="#L7512">7512</span>
<span id="L7513" rel="#L7513">7513</span>
<span id="L7514" rel="#L7514">7514</span>
<span id="L7515" rel="#L7515">7515</span>
<span id="L7516" rel="#L7516">7516</span>
<span id="L7517" rel="#L7517">7517</span>
<span id="L7518" rel="#L7518">7518</span>
<span id="L7519" rel="#L7519">7519</span>
<span id="L7520" rel="#L7520">7520</span>
<span id="L7521" rel="#L7521">7521</span>
<span id="L7522" rel="#L7522">7522</span>
<span id="L7523" rel="#L7523">7523</span>
<span id="L7524" rel="#L7524">7524</span>
<span id="L7525" rel="#L7525">7525</span>
<span id="L7526" rel="#L7526">7526</span>
<span id="L7527" rel="#L7527">7527</span>
<span id="L7528" rel="#L7528">7528</span>
<span id="L7529" rel="#L7529">7529</span>
<span id="L7530" rel="#L7530">7530</span>
<span id="L7531" rel="#L7531">7531</span>
<span id="L7532" rel="#L7532">7532</span>
<span id="L7533" rel="#L7533">7533</span>
<span id="L7534" rel="#L7534">7534</span>
<span id="L7535" rel="#L7535">7535</span>
<span id="L7536" rel="#L7536">7536</span>
<span id="L7537" rel="#L7537">7537</span>
<span id="L7538" rel="#L7538">7538</span>
<span id="L7539" rel="#L7539">7539</span>
<span id="L7540" rel="#L7540">7540</span>
<span id="L7541" rel="#L7541">7541</span>
<span id="L7542" rel="#L7542">7542</span>
<span id="L7543" rel="#L7543">7543</span>
<span id="L7544" rel="#L7544">7544</span>
<span id="L7545" rel="#L7545">7545</span>
<span id="L7546" rel="#L7546">7546</span>
<span id="L7547" rel="#L7547">7547</span>
<span id="L7548" rel="#L7548">7548</span>
<span id="L7549" rel="#L7549">7549</span>
<span id="L7550" rel="#L7550">7550</span>
<span id="L7551" rel="#L7551">7551</span>
<span id="L7552" rel="#L7552">7552</span>
<span id="L7553" rel="#L7553">7553</span>
<span id="L7554" rel="#L7554">7554</span>
<span id="L7555" rel="#L7555">7555</span>
<span id="L7556" rel="#L7556">7556</span>
<span id="L7557" rel="#L7557">7557</span>
<span id="L7558" rel="#L7558">7558</span>
<span id="L7559" rel="#L7559">7559</span>
<span id="L7560" rel="#L7560">7560</span>
<span id="L7561" rel="#L7561">7561</span>
<span id="L7562" rel="#L7562">7562</span>
<span id="L7563" rel="#L7563">7563</span>
<span id="L7564" rel="#L7564">7564</span>
<span id="L7565" rel="#L7565">7565</span>
<span id="L7566" rel="#L7566">7566</span>
<span id="L7567" rel="#L7567">7567</span>
<span id="L7568" rel="#L7568">7568</span>
<span id="L7569" rel="#L7569">7569</span>
<span id="L7570" rel="#L7570">7570</span>
<span id="L7571" rel="#L7571">7571</span>
<span id="L7572" rel="#L7572">7572</span>
<span id="L7573" rel="#L7573">7573</span>
<span id="L7574" rel="#L7574">7574</span>
<span id="L7575" rel="#L7575">7575</span>
<span id="L7576" rel="#L7576">7576</span>
<span id="L7577" rel="#L7577">7577</span>
<span id="L7578" rel="#L7578">7578</span>
<span id="L7579" rel="#L7579">7579</span>
<span id="L7580" rel="#L7580">7580</span>
<span id="L7581" rel="#L7581">7581</span>
<span id="L7582" rel="#L7582">7582</span>
<span id="L7583" rel="#L7583">7583</span>
<span id="L7584" rel="#L7584">7584</span>
<span id="L7585" rel="#L7585">7585</span>
<span id="L7586" rel="#L7586">7586</span>
<span id="L7587" rel="#L7587">7587</span>
<span id="L7588" rel="#L7588">7588</span>
<span id="L7589" rel="#L7589">7589</span>
<span id="L7590" rel="#L7590">7590</span>
<span id="L7591" rel="#L7591">7591</span>
<span id="L7592" rel="#L7592">7592</span>
<span id="L7593" rel="#L7593">7593</span>
<span id="L7594" rel="#L7594">7594</span>
<span id="L7595" rel="#L7595">7595</span>
<span id="L7596" rel="#L7596">7596</span>
<span id="L7597" rel="#L7597">7597</span>
<span id="L7598" rel="#L7598">7598</span>
<span id="L7599" rel="#L7599">7599</span>
<span id="L7600" rel="#L7600">7600</span>
<span id="L7601" rel="#L7601">7601</span>
<span id="L7602" rel="#L7602">7602</span>
<span id="L7603" rel="#L7603">7603</span>
<span id="L7604" rel="#L7604">7604</span>
<span id="L7605" rel="#L7605">7605</span>
<span id="L7606" rel="#L7606">7606</span>
<span id="L7607" rel="#L7607">7607</span>
<span id="L7608" rel="#L7608">7608</span>
<span id="L7609" rel="#L7609">7609</span>
<span id="L7610" rel="#L7610">7610</span>
<span id="L7611" rel="#L7611">7611</span>
<span id="L7612" rel="#L7612">7612</span>
<span id="L7613" rel="#L7613">7613</span>
<span id="L7614" rel="#L7614">7614</span>
<span id="L7615" rel="#L7615">7615</span>
<span id="L7616" rel="#L7616">7616</span>
<span id="L7617" rel="#L7617">7617</span>
<span id="L7618" rel="#L7618">7618</span>
<span id="L7619" rel="#L7619">7619</span>
<span id="L7620" rel="#L7620">7620</span>
<span id="L7621" rel="#L7621">7621</span>
<span id="L7622" rel="#L7622">7622</span>
<span id="L7623" rel="#L7623">7623</span>
<span id="L7624" rel="#L7624">7624</span>
<span id="L7625" rel="#L7625">7625</span>
<span id="L7626" rel="#L7626">7626</span>
<span id="L7627" rel="#L7627">7627</span>
<span id="L7628" rel="#L7628">7628</span>
<span id="L7629" rel="#L7629">7629</span>
<span id="L7630" rel="#L7630">7630</span>
<span id="L7631" rel="#L7631">7631</span>
<span id="L7632" rel="#L7632">7632</span>
<span id="L7633" rel="#L7633">7633</span>
<span id="L7634" rel="#L7634">7634</span>
<span id="L7635" rel="#L7635">7635</span>
<span id="L7636" rel="#L7636">7636</span>
<span id="L7637" rel="#L7637">7637</span>
<span id="L7638" rel="#L7638">7638</span>
<span id="L7639" rel="#L7639">7639</span>
<span id="L7640" rel="#L7640">7640</span>
<span id="L7641" rel="#L7641">7641</span>
<span id="L7642" rel="#L7642">7642</span>
<span id="L7643" rel="#L7643">7643</span>
<span id="L7644" rel="#L7644">7644</span>
<span id="L7645" rel="#L7645">7645</span>
<span id="L7646" rel="#L7646">7646</span>
<span id="L7647" rel="#L7647">7647</span>
<span id="L7648" rel="#L7648">7648</span>
<span id="L7649" rel="#L7649">7649</span>
<span id="L7650" rel="#L7650">7650</span>
<span id="L7651" rel="#L7651">7651</span>
<span id="L7652" rel="#L7652">7652</span>
<span id="L7653" rel="#L7653">7653</span>
<span id="L7654" rel="#L7654">7654</span>
<span id="L7655" rel="#L7655">7655</span>
<span id="L7656" rel="#L7656">7656</span>
<span id="L7657" rel="#L7657">7657</span>
<span id="L7658" rel="#L7658">7658</span>
<span id="L7659" rel="#L7659">7659</span>
<span id="L7660" rel="#L7660">7660</span>
<span id="L7661" rel="#L7661">7661</span>
<span id="L7662" rel="#L7662">7662</span>
<span id="L7663" rel="#L7663">7663</span>
<span id="L7664" rel="#L7664">7664</span>
<span id="L7665" rel="#L7665">7665</span>
<span id="L7666" rel="#L7666">7666</span>
<span id="L7667" rel="#L7667">7667</span>
<span id="L7668" rel="#L7668">7668</span>
<span id="L7669" rel="#L7669">7669</span>
<span id="L7670" rel="#L7670">7670</span>
<span id="L7671" rel="#L7671">7671</span>
<span id="L7672" rel="#L7672">7672</span>
<span id="L7673" rel="#L7673">7673</span>
<span id="L7674" rel="#L7674">7674</span>
<span id="L7675" rel="#L7675">7675</span>
<span id="L7676" rel="#L7676">7676</span>
<span id="L7677" rel="#L7677">7677</span>
<span id="L7678" rel="#L7678">7678</span>
<span id="L7679" rel="#L7679">7679</span>
<span id="L7680" rel="#L7680">7680</span>
<span id="L7681" rel="#L7681">7681</span>
<span id="L7682" rel="#L7682">7682</span>
<span id="L7683" rel="#L7683">7683</span>
<span id="L7684" rel="#L7684">7684</span>
<span id="L7685" rel="#L7685">7685</span>
<span id="L7686" rel="#L7686">7686</span>
<span id="L7687" rel="#L7687">7687</span>
<span id="L7688" rel="#L7688">7688</span>
<span id="L7689" rel="#L7689">7689</span>
<span id="L7690" rel="#L7690">7690</span>
<span id="L7691" rel="#L7691">7691</span>
<span id="L7692" rel="#L7692">7692</span>
<span id="L7693" rel="#L7693">7693</span>
<span id="L7694" rel="#L7694">7694</span>
<span id="L7695" rel="#L7695">7695</span>
<span id="L7696" rel="#L7696">7696</span>
<span id="L7697" rel="#L7697">7697</span>
<span id="L7698" rel="#L7698">7698</span>
<span id="L7699" rel="#L7699">7699</span>
<span id="L7700" rel="#L7700">7700</span>
<span id="L7701" rel="#L7701">7701</span>
<span id="L7702" rel="#L7702">7702</span>
<span id="L7703" rel="#L7703">7703</span>
<span id="L7704" rel="#L7704">7704</span>
<span id="L7705" rel="#L7705">7705</span>
<span id="L7706" rel="#L7706">7706</span>
<span id="L7707" rel="#L7707">7707</span>
<span id="L7708" rel="#L7708">7708</span>
<span id="L7709" rel="#L7709">7709</span>
<span id="L7710" rel="#L7710">7710</span>
<span id="L7711" rel="#L7711">7711</span>
<span id="L7712" rel="#L7712">7712</span>
<span id="L7713" rel="#L7713">7713</span>
<span id="L7714" rel="#L7714">7714</span>
<span id="L7715" rel="#L7715">7715</span>
<span id="L7716" rel="#L7716">7716</span>
<span id="L7717" rel="#L7717">7717</span>
<span id="L7718" rel="#L7718">7718</span>
<span id="L7719" rel="#L7719">7719</span>
<span id="L7720" rel="#L7720">7720</span>
<span id="L7721" rel="#L7721">7721</span>
<span id="L7722" rel="#L7722">7722</span>
<span id="L7723" rel="#L7723">7723</span>
<span id="L7724" rel="#L7724">7724</span>
<span id="L7725" rel="#L7725">7725</span>
<span id="L7726" rel="#L7726">7726</span>
<span id="L7727" rel="#L7727">7727</span>
<span id="L7728" rel="#L7728">7728</span>
<span id="L7729" rel="#L7729">7729</span>
<span id="L7730" rel="#L7730">7730</span>
<span id="L7731" rel="#L7731">7731</span>
<span id="L7732" rel="#L7732">7732</span>
<span id="L7733" rel="#L7733">7733</span>
<span id="L7734" rel="#L7734">7734</span>
<span id="L7735" rel="#L7735">7735</span>
<span id="L7736" rel="#L7736">7736</span>
<span id="L7737" rel="#L7737">7737</span>
<span id="L7738" rel="#L7738">7738</span>
<span id="L7739" rel="#L7739">7739</span>
<span id="L7740" rel="#L7740">7740</span>
<span id="L7741" rel="#L7741">7741</span>
<span id="L7742" rel="#L7742">7742</span>
<span id="L7743" rel="#L7743">7743</span>
<span id="L7744" rel="#L7744">7744</span>
<span id="L7745" rel="#L7745">7745</span>
<span id="L7746" rel="#L7746">7746</span>
<span id="L7747" rel="#L7747">7747</span>
<span id="L7748" rel="#L7748">7748</span>
<span id="L7749" rel="#L7749">7749</span>
<span id="L7750" rel="#L7750">7750</span>
<span id="L7751" rel="#L7751">7751</span>
<span id="L7752" rel="#L7752">7752</span>
<span id="L7753" rel="#L7753">7753</span>
<span id="L7754" rel="#L7754">7754</span>
<span id="L7755" rel="#L7755">7755</span>
<span id="L7756" rel="#L7756">7756</span>
<span id="L7757" rel="#L7757">7757</span>
<span id="L7758" rel="#L7758">7758</span>
<span id="L7759" rel="#L7759">7759</span>
<span id="L7760" rel="#L7760">7760</span>
<span id="L7761" rel="#L7761">7761</span>
<span id="L7762" rel="#L7762">7762</span>
<span id="L7763" rel="#L7763">7763</span>
<span id="L7764" rel="#L7764">7764</span>
<span id="L7765" rel="#L7765">7765</span>
<span id="L7766" rel="#L7766">7766</span>
<span id="L7767" rel="#L7767">7767</span>
<span id="L7768" rel="#L7768">7768</span>
<span id="L7769" rel="#L7769">7769</span>
<span id="L7770" rel="#L7770">7770</span>
<span id="L7771" rel="#L7771">7771</span>
<span id="L7772" rel="#L7772">7772</span>
<span id="L7773" rel="#L7773">7773</span>
<span id="L7774" rel="#L7774">7774</span>
<span id="L7775" rel="#L7775">7775</span>
<span id="L7776" rel="#L7776">7776</span>
<span id="L7777" rel="#L7777">7777</span>
<span id="L7778" rel="#L7778">7778</span>
<span id="L7779" rel="#L7779">7779</span>
<span id="L7780" rel="#L7780">7780</span>
<span id="L7781" rel="#L7781">7781</span>
<span id="L7782" rel="#L7782">7782</span>
<span id="L7783" rel="#L7783">7783</span>
<span id="L7784" rel="#L7784">7784</span>
<span id="L7785" rel="#L7785">7785</span>
<span id="L7786" rel="#L7786">7786</span>
<span id="L7787" rel="#L7787">7787</span>
<span id="L7788" rel="#L7788">7788</span>
<span id="L7789" rel="#L7789">7789</span>
<span id="L7790" rel="#L7790">7790</span>
<span id="L7791" rel="#L7791">7791</span>
<span id="L7792" rel="#L7792">7792</span>
<span id="L7793" rel="#L7793">7793</span>
<span id="L7794" rel="#L7794">7794</span>
<span id="L7795" rel="#L7795">7795</span>
<span id="L7796" rel="#L7796">7796</span>
<span id="L7797" rel="#L7797">7797</span>
<span id="L7798" rel="#L7798">7798</span>
<span id="L7799" rel="#L7799">7799</span>
<span id="L7800" rel="#L7800">7800</span>
<span id="L7801" rel="#L7801">7801</span>
<span id="L7802" rel="#L7802">7802</span>
<span id="L7803" rel="#L7803">7803</span>
<span id="L7804" rel="#L7804">7804</span>
<span id="L7805" rel="#L7805">7805</span>
<span id="L7806" rel="#L7806">7806</span>
<span id="L7807" rel="#L7807">7807</span>
<span id="L7808" rel="#L7808">7808</span>
<span id="L7809" rel="#L7809">7809</span>
<span id="L7810" rel="#L7810">7810</span>
<span id="L7811" rel="#L7811">7811</span>
<span id="L7812" rel="#L7812">7812</span>
<span id="L7813" rel="#L7813">7813</span>
<span id="L7814" rel="#L7814">7814</span>
<span id="L7815" rel="#L7815">7815</span>
<span id="L7816" rel="#L7816">7816</span>
<span id="L7817" rel="#L7817">7817</span>
<span id="L7818" rel="#L7818">7818</span>
<span id="L7819" rel="#L7819">7819</span>
<span id="L7820" rel="#L7820">7820</span>
<span id="L7821" rel="#L7821">7821</span>
<span id="L7822" rel="#L7822">7822</span>
<span id="L7823" rel="#L7823">7823</span>
<span id="L7824" rel="#L7824">7824</span>
<span id="L7825" rel="#L7825">7825</span>
<span id="L7826" rel="#L7826">7826</span>
<span id="L7827" rel="#L7827">7827</span>
<span id="L7828" rel="#L7828">7828</span>
<span id="L7829" rel="#L7829">7829</span>
<span id="L7830" rel="#L7830">7830</span>
<span id="L7831" rel="#L7831">7831</span>
<span id="L7832" rel="#L7832">7832</span>
<span id="L7833" rel="#L7833">7833</span>
<span id="L7834" rel="#L7834">7834</span>
<span id="L7835" rel="#L7835">7835</span>
<span id="L7836" rel="#L7836">7836</span>
<span id="L7837" rel="#L7837">7837</span>
<span id="L7838" rel="#L7838">7838</span>
<span id="L7839" rel="#L7839">7839</span>
<span id="L7840" rel="#L7840">7840</span>
<span id="L7841" rel="#L7841">7841</span>
<span id="L7842" rel="#L7842">7842</span>
<span id="L7843" rel="#L7843">7843</span>
<span id="L7844" rel="#L7844">7844</span>
<span id="L7845" rel="#L7845">7845</span>
<span id="L7846" rel="#L7846">7846</span>
<span id="L7847" rel="#L7847">7847</span>
<span id="L7848" rel="#L7848">7848</span>
<span id="L7849" rel="#L7849">7849</span>
<span id="L7850" rel="#L7850">7850</span>
<span id="L7851" rel="#L7851">7851</span>
<span id="L7852" rel="#L7852">7852</span>
<span id="L7853" rel="#L7853">7853</span>
<span id="L7854" rel="#L7854">7854</span>
<span id="L7855" rel="#L7855">7855</span>
<span id="L7856" rel="#L7856">7856</span>
<span id="L7857" rel="#L7857">7857</span>
<span id="L7858" rel="#L7858">7858</span>
<span id="L7859" rel="#L7859">7859</span>
<span id="L7860" rel="#L7860">7860</span>
<span id="L7861" rel="#L7861">7861</span>
<span id="L7862" rel="#L7862">7862</span>
<span id="L7863" rel="#L7863">7863</span>
<span id="L7864" rel="#L7864">7864</span>
<span id="L7865" rel="#L7865">7865</span>
<span id="L7866" rel="#L7866">7866</span>
<span id="L7867" rel="#L7867">7867</span>
<span id="L7868" rel="#L7868">7868</span>
<span id="L7869" rel="#L7869">7869</span>
<span id="L7870" rel="#L7870">7870</span>
<span id="L7871" rel="#L7871">7871</span>
<span id="L7872" rel="#L7872">7872</span>
<span id="L7873" rel="#L7873">7873</span>
<span id="L7874" rel="#L7874">7874</span>
<span id="L7875" rel="#L7875">7875</span>
<span id="L7876" rel="#L7876">7876</span>
<span id="L7877" rel="#L7877">7877</span>
<span id="L7878" rel="#L7878">7878</span>
<span id="L7879" rel="#L7879">7879</span>
<span id="L7880" rel="#L7880">7880</span>
<span id="L7881" rel="#L7881">7881</span>
<span id="L7882" rel="#L7882">7882</span>
<span id="L7883" rel="#L7883">7883</span>
<span id="L7884" rel="#L7884">7884</span>
<span id="L7885" rel="#L7885">7885</span>
<span id="L7886" rel="#L7886">7886</span>
<span id="L7887" rel="#L7887">7887</span>
<span id="L7888" rel="#L7888">7888</span>
<span id="L7889" rel="#L7889">7889</span>
<span id="L7890" rel="#L7890">7890</span>
<span id="L7891" rel="#L7891">7891</span>
<span id="L7892" rel="#L7892">7892</span>
<span id="L7893" rel="#L7893">7893</span>
<span id="L7894" rel="#L7894">7894</span>
<span id="L7895" rel="#L7895">7895</span>
<span id="L7896" rel="#L7896">7896</span>
<span id="L7897" rel="#L7897">7897</span>
<span id="L7898" rel="#L7898">7898</span>
<span id="L7899" rel="#L7899">7899</span>
<span id="L7900" rel="#L7900">7900</span>
<span id="L7901" rel="#L7901">7901</span>
<span id="L7902" rel="#L7902">7902</span>
<span id="L7903" rel="#L7903">7903</span>
<span id="L7904" rel="#L7904">7904</span>
<span id="L7905" rel="#L7905">7905</span>
<span id="L7906" rel="#L7906">7906</span>
<span id="L7907" rel="#L7907">7907</span>
<span id="L7908" rel="#L7908">7908</span>
<span id="L7909" rel="#L7909">7909</span>
<span id="L7910" rel="#L7910">7910</span>
<span id="L7911" rel="#L7911">7911</span>
<span id="L7912" rel="#L7912">7912</span>
<span id="L7913" rel="#L7913">7913</span>
<span id="L7914" rel="#L7914">7914</span>
<span id="L7915" rel="#L7915">7915</span>
<span id="L7916" rel="#L7916">7916</span>
<span id="L7917" rel="#L7917">7917</span>
<span id="L7918" rel="#L7918">7918</span>
<span id="L7919" rel="#L7919">7919</span>
<span id="L7920" rel="#L7920">7920</span>
<span id="L7921" rel="#L7921">7921</span>
<span id="L7922" rel="#L7922">7922</span>
<span id="L7923" rel="#L7923">7923</span>
<span id="L7924" rel="#L7924">7924</span>
<span id="L7925" rel="#L7925">7925</span>
<span id="L7926" rel="#L7926">7926</span>
<span id="L7927" rel="#L7927">7927</span>
<span id="L7928" rel="#L7928">7928</span>
<span id="L7929" rel="#L7929">7929</span>
<span id="L7930" rel="#L7930">7930</span>
<span id="L7931" rel="#L7931">7931</span>
<span id="L7932" rel="#L7932">7932</span>
<span id="L7933" rel="#L7933">7933</span>
<span id="L7934" rel="#L7934">7934</span>
<span id="L7935" rel="#L7935">7935</span>
<span id="L7936" rel="#L7936">7936</span>
<span id="L7937" rel="#L7937">7937</span>
<span id="L7938" rel="#L7938">7938</span>
<span id="L7939" rel="#L7939">7939</span>
<span id="L7940" rel="#L7940">7940</span>
<span id="L7941" rel="#L7941">7941</span>
<span id="L7942" rel="#L7942">7942</span>
<span id="L7943" rel="#L7943">7943</span>
<span id="L7944" rel="#L7944">7944</span>
<span id="L7945" rel="#L7945">7945</span>
<span id="L7946" rel="#L7946">7946</span>
<span id="L7947" rel="#L7947">7947</span>
<span id="L7948" rel="#L7948">7948</span>
<span id="L7949" rel="#L7949">7949</span>
<span id="L7950" rel="#L7950">7950</span>
<span id="L7951" rel="#L7951">7951</span>
<span id="L7952" rel="#L7952">7952</span>
<span id="L7953" rel="#L7953">7953</span>
<span id="L7954" rel="#L7954">7954</span>
<span id="L7955" rel="#L7955">7955</span>
<span id="L7956" rel="#L7956">7956</span>
<span id="L7957" rel="#L7957">7957</span>
<span id="L7958" rel="#L7958">7958</span>
<span id="L7959" rel="#L7959">7959</span>
<span id="L7960" rel="#L7960">7960</span>
<span id="L7961" rel="#L7961">7961</span>
<span id="L7962" rel="#L7962">7962</span>
<span id="L7963" rel="#L7963">7963</span>
<span id="L7964" rel="#L7964">7964</span>
<span id="L7965" rel="#L7965">7965</span>
<span id="L7966" rel="#L7966">7966</span>
<span id="L7967" rel="#L7967">7967</span>
<span id="L7968" rel="#L7968">7968</span>
<span id="L7969" rel="#L7969">7969</span>
<span id="L7970" rel="#L7970">7970</span>
<span id="L7971" rel="#L7971">7971</span>
<span id="L7972" rel="#L7972">7972</span>
<span id="L7973" rel="#L7973">7973</span>
<span id="L7974" rel="#L7974">7974</span>
<span id="L7975" rel="#L7975">7975</span>
<span id="L7976" rel="#L7976">7976</span>
<span id="L7977" rel="#L7977">7977</span>
<span id="L7978" rel="#L7978">7978</span>
<span id="L7979" rel="#L7979">7979</span>
<span id="L7980" rel="#L7980">7980</span>
<span id="L7981" rel="#L7981">7981</span>
<span id="L7982" rel="#L7982">7982</span>
<span id="L7983" rel="#L7983">7983</span>
<span id="L7984" rel="#L7984">7984</span>
<span id="L7985" rel="#L7985">7985</span>
<span id="L7986" rel="#L7986">7986</span>
<span id="L7987" rel="#L7987">7987</span>
<span id="L7988" rel="#L7988">7988</span>
<span id="L7989" rel="#L7989">7989</span>
<span id="L7990" rel="#L7990">7990</span>
<span id="L7991" rel="#L7991">7991</span>
<span id="L7992" rel="#L7992">7992</span>
<span id="L7993" rel="#L7993">7993</span>
<span id="L7994" rel="#L7994">7994</span>
<span id="L7995" rel="#L7995">7995</span>
<span id="L7996" rel="#L7996">7996</span>
<span id="L7997" rel="#L7997">7997</span>
<span id="L7998" rel="#L7998">7998</span>
<span id="L7999" rel="#L7999">7999</span>
<span id="L8000" rel="#L8000">8000</span>
<span id="L8001" rel="#L8001">8001</span>
<span id="L8002" rel="#L8002">8002</span>
<span id="L8003" rel="#L8003">8003</span>
<span id="L8004" rel="#L8004">8004</span>
<span id="L8005" rel="#L8005">8005</span>
<span id="L8006" rel="#L8006">8006</span>
<span id="L8007" rel="#L8007">8007</span>
<span id="L8008" rel="#L8008">8008</span>
<span id="L8009" rel="#L8009">8009</span>
<span id="L8010" rel="#L8010">8010</span>
<span id="L8011" rel="#L8011">8011</span>
<span id="L8012" rel="#L8012">8012</span>
<span id="L8013" rel="#L8013">8013</span>
<span id="L8014" rel="#L8014">8014</span>
<span id="L8015" rel="#L8015">8015</span>
<span id="L8016" rel="#L8016">8016</span>
<span id="L8017" rel="#L8017">8017</span>
<span id="L8018" rel="#L8018">8018</span>
<span id="L8019" rel="#L8019">8019</span>
<span id="L8020" rel="#L8020">8020</span>
<span id="L8021" rel="#L8021">8021</span>
<span id="L8022" rel="#L8022">8022</span>
<span id="L8023" rel="#L8023">8023</span>
<span id="L8024" rel="#L8024">8024</span>
<span id="L8025" rel="#L8025">8025</span>
<span id="L8026" rel="#L8026">8026</span>
<span id="L8027" rel="#L8027">8027</span>
<span id="L8028" rel="#L8028">8028</span>
<span id="L8029" rel="#L8029">8029</span>
<span id="L8030" rel="#L8030">8030</span>
<span id="L8031" rel="#L8031">8031</span>
<span id="L8032" rel="#L8032">8032</span>
<span id="L8033" rel="#L8033">8033</span>
<span id="L8034" rel="#L8034">8034</span>
<span id="L8035" rel="#L8035">8035</span>
<span id="L8036" rel="#L8036">8036</span>
<span id="L8037" rel="#L8037">8037</span>
<span id="L8038" rel="#L8038">8038</span>
<span id="L8039" rel="#L8039">8039</span>
<span id="L8040" rel="#L8040">8040</span>
<span id="L8041" rel="#L8041">8041</span>
<span id="L8042" rel="#L8042">8042</span>
<span id="L8043" rel="#L8043">8043</span>
<span id="L8044" rel="#L8044">8044</span>
<span id="L8045" rel="#L8045">8045</span>
<span id="L8046" rel="#L8046">8046</span>
<span id="L8047" rel="#L8047">8047</span>
<span id="L8048" rel="#L8048">8048</span>
<span id="L8049" rel="#L8049">8049</span>
<span id="L8050" rel="#L8050">8050</span>
<span id="L8051" rel="#L8051">8051</span>
<span id="L8052" rel="#L8052">8052</span>
<span id="L8053" rel="#L8053">8053</span>
<span id="L8054" rel="#L8054">8054</span>
<span id="L8055" rel="#L8055">8055</span>
<span id="L8056" rel="#L8056">8056</span>
<span id="L8057" rel="#L8057">8057</span>
<span id="L8058" rel="#L8058">8058</span>
<span id="L8059" rel="#L8059">8059</span>
<span id="L8060" rel="#L8060">8060</span>
<span id="L8061" rel="#L8061">8061</span>
<span id="L8062" rel="#L8062">8062</span>
<span id="L8063" rel="#L8063">8063</span>
<span id="L8064" rel="#L8064">8064</span>
<span id="L8065" rel="#L8065">8065</span>
<span id="L8066" rel="#L8066">8066</span>
<span id="L8067" rel="#L8067">8067</span>
<span id="L8068" rel="#L8068">8068</span>
<span id="L8069" rel="#L8069">8069</span>
<span id="L8070" rel="#L8070">8070</span>
<span id="L8071" rel="#L8071">8071</span>
<span id="L8072" rel="#L8072">8072</span>
<span id="L8073" rel="#L8073">8073</span>
<span id="L8074" rel="#L8074">8074</span>
<span id="L8075" rel="#L8075">8075</span>
<span id="L8076" rel="#L8076">8076</span>
<span id="L8077" rel="#L8077">8077</span>
<span id="L8078" rel="#L8078">8078</span>
<span id="L8079" rel="#L8079">8079</span>
<span id="L8080" rel="#L8080">8080</span>
<span id="L8081" rel="#L8081">8081</span>
<span id="L8082" rel="#L8082">8082</span>
<span id="L8083" rel="#L8083">8083</span>
<span id="L8084" rel="#L8084">8084</span>
<span id="L8085" rel="#L8085">8085</span>
<span id="L8086" rel="#L8086">8086</span>
<span id="L8087" rel="#L8087">8087</span>
<span id="L8088" rel="#L8088">8088</span>
<span id="L8089" rel="#L8089">8089</span>
<span id="L8090" rel="#L8090">8090</span>
<span id="L8091" rel="#L8091">8091</span>
<span id="L8092" rel="#L8092">8092</span>
<span id="L8093" rel="#L8093">8093</span>
<span id="L8094" rel="#L8094">8094</span>
<span id="L8095" rel="#L8095">8095</span>
<span id="L8096" rel="#L8096">8096</span>
<span id="L8097" rel="#L8097">8097</span>
<span id="L8098" rel="#L8098">8098</span>
<span id="L8099" rel="#L8099">8099</span>
<span id="L8100" rel="#L8100">8100</span>
<span id="L8101" rel="#L8101">8101</span>
<span id="L8102" rel="#L8102">8102</span>
<span id="L8103" rel="#L8103">8103</span>
<span id="L8104" rel="#L8104">8104</span>
<span id="L8105" rel="#L8105">8105</span>
<span id="L8106" rel="#L8106">8106</span>
<span id="L8107" rel="#L8107">8107</span>
<span id="L8108" rel="#L8108">8108</span>
<span id="L8109" rel="#L8109">8109</span>
<span id="L8110" rel="#L8110">8110</span>
<span id="L8111" rel="#L8111">8111</span>
<span id="L8112" rel="#L8112">8112</span>
<span id="L8113" rel="#L8113">8113</span>
<span id="L8114" rel="#L8114">8114</span>
<span id="L8115" rel="#L8115">8115</span>
<span id="L8116" rel="#L8116">8116</span>
<span id="L8117" rel="#L8117">8117</span>
<span id="L8118" rel="#L8118">8118</span>
<span id="L8119" rel="#L8119">8119</span>
<span id="L8120" rel="#L8120">8120</span>
<span id="L8121" rel="#L8121">8121</span>
<span id="L8122" rel="#L8122">8122</span>
<span id="L8123" rel="#L8123">8123</span>
<span id="L8124" rel="#L8124">8124</span>
<span id="L8125" rel="#L8125">8125</span>
<span id="L8126" rel="#L8126">8126</span>
<span id="L8127" rel="#L8127">8127</span>
<span id="L8128" rel="#L8128">8128</span>
<span id="L8129" rel="#L8129">8129</span>
<span id="L8130" rel="#L8130">8130</span>
<span id="L8131" rel="#L8131">8131</span>
<span id="L8132" rel="#L8132">8132</span>
<span id="L8133" rel="#L8133">8133</span>
<span id="L8134" rel="#L8134">8134</span>
<span id="L8135" rel="#L8135">8135</span>
<span id="L8136" rel="#L8136">8136</span>
<span id="L8137" rel="#L8137">8137</span>
<span id="L8138" rel="#L8138">8138</span>
<span id="L8139" rel="#L8139">8139</span>
<span id="L8140" rel="#L8140">8140</span>
<span id="L8141" rel="#L8141">8141</span>
<span id="L8142" rel="#L8142">8142</span>
<span id="L8143" rel="#L8143">8143</span>
<span id="L8144" rel="#L8144">8144</span>
<span id="L8145" rel="#L8145">8145</span>
<span id="L8146" rel="#L8146">8146</span>
<span id="L8147" rel="#L8147">8147</span>
<span id="L8148" rel="#L8148">8148</span>
<span id="L8149" rel="#L8149">8149</span>
<span id="L8150" rel="#L8150">8150</span>
<span id="L8151" rel="#L8151">8151</span>
<span id="L8152" rel="#L8152">8152</span>
<span id="L8153" rel="#L8153">8153</span>
<span id="L8154" rel="#L8154">8154</span>
<span id="L8155" rel="#L8155">8155</span>
<span id="L8156" rel="#L8156">8156</span>
<span id="L8157" rel="#L8157">8157</span>
<span id="L8158" rel="#L8158">8158</span>
<span id="L8159" rel="#L8159">8159</span>
<span id="L8160" rel="#L8160">8160</span>
<span id="L8161" rel="#L8161">8161</span>
<span id="L8162" rel="#L8162">8162</span>
<span id="L8163" rel="#L8163">8163</span>
<span id="L8164" rel="#L8164">8164</span>
<span id="L8165" rel="#L8165">8165</span>
<span id="L8166" rel="#L8166">8166</span>
<span id="L8167" rel="#L8167">8167</span>
<span id="L8168" rel="#L8168">8168</span>
<span id="L8169" rel="#L8169">8169</span>
<span id="L8170" rel="#L8170">8170</span>
<span id="L8171" rel="#L8171">8171</span>
<span id="L8172" rel="#L8172">8172</span>
<span id="L8173" rel="#L8173">8173</span>
<span id="L8174" rel="#L8174">8174</span>
<span id="L8175" rel="#L8175">8175</span>
<span id="L8176" rel="#L8176">8176</span>
<span id="L8177" rel="#L8177">8177</span>
<span id="L8178" rel="#L8178">8178</span>
<span id="L8179" rel="#L8179">8179</span>
<span id="L8180" rel="#L8180">8180</span>
<span id="L8181" rel="#L8181">8181</span>
<span id="L8182" rel="#L8182">8182</span>
<span id="L8183" rel="#L8183">8183</span>
<span id="L8184" rel="#L8184">8184</span>
<span id="L8185" rel="#L8185">8185</span>
<span id="L8186" rel="#L8186">8186</span>
<span id="L8187" rel="#L8187">8187</span>
<span id="L8188" rel="#L8188">8188</span>
<span id="L8189" rel="#L8189">8189</span>
<span id="L8190" rel="#L8190">8190</span>
<span id="L8191" rel="#L8191">8191</span>
<span id="L8192" rel="#L8192">8192</span>
<span id="L8193" rel="#L8193">8193</span>
<span id="L8194" rel="#L8194">8194</span>
<span id="L8195" rel="#L8195">8195</span>
<span id="L8196" rel="#L8196">8196</span>
<span id="L8197" rel="#L8197">8197</span>
<span id="L8198" rel="#L8198">8198</span>
<span id="L8199" rel="#L8199">8199</span>
<span id="L8200" rel="#L8200">8200</span>
<span id="L8201" rel="#L8201">8201</span>
<span id="L8202" rel="#L8202">8202</span>
<span id="L8203" rel="#L8203">8203</span>
<span id="L8204" rel="#L8204">8204</span>
<span id="L8205" rel="#L8205">8205</span>
<span id="L8206" rel="#L8206">8206</span>
<span id="L8207" rel="#L8207">8207</span>
<span id="L8208" rel="#L8208">8208</span>
<span id="L8209" rel="#L8209">8209</span>
<span id="L8210" rel="#L8210">8210</span>
<span id="L8211" rel="#L8211">8211</span>
<span id="L8212" rel="#L8212">8212</span>
<span id="L8213" rel="#L8213">8213</span>
<span id="L8214" rel="#L8214">8214</span>
<span id="L8215" rel="#L8215">8215</span>
<span id="L8216" rel="#L8216">8216</span>
<span id="L8217" rel="#L8217">8217</span>
<span id="L8218" rel="#L8218">8218</span>
<span id="L8219" rel="#L8219">8219</span>
<span id="L8220" rel="#L8220">8220</span>
<span id="L8221" rel="#L8221">8221</span>
<span id="L8222" rel="#L8222">8222</span>
<span id="L8223" rel="#L8223">8223</span>
<span id="L8224" rel="#L8224">8224</span>
<span id="L8225" rel="#L8225">8225</span>
<span id="L8226" rel="#L8226">8226</span>
<span id="L8227" rel="#L8227">8227</span>
<span id="L8228" rel="#L8228">8228</span>
<span id="L8229" rel="#L8229">8229</span>
<span id="L8230" rel="#L8230">8230</span>
<span id="L8231" rel="#L8231">8231</span>
<span id="L8232" rel="#L8232">8232</span>
<span id="L8233" rel="#L8233">8233</span>
<span id="L8234" rel="#L8234">8234</span>
<span id="L8235" rel="#L8235">8235</span>
<span id="L8236" rel="#L8236">8236</span>
<span id="L8237" rel="#L8237">8237</span>
<span id="L8238" rel="#L8238">8238</span>
<span id="L8239" rel="#L8239">8239</span>
<span id="L8240" rel="#L8240">8240</span>
<span id="L8241" rel="#L8241">8241</span>
<span id="L8242" rel="#L8242">8242</span>
<span id="L8243" rel="#L8243">8243</span>
<span id="L8244" rel="#L8244">8244</span>
<span id="L8245" rel="#L8245">8245</span>
<span id="L8246" rel="#L8246">8246</span>
<span id="L8247" rel="#L8247">8247</span>
<span id="L8248" rel="#L8248">8248</span>
<span id="L8249" rel="#L8249">8249</span>
<span id="L8250" rel="#L8250">8250</span>
<span id="L8251" rel="#L8251">8251</span>
<span id="L8252" rel="#L8252">8252</span>
<span id="L8253" rel="#L8253">8253</span>
<span id="L8254" rel="#L8254">8254</span>
<span id="L8255" rel="#L8255">8255</span>
<span id="L8256" rel="#L8256">8256</span>
<span id="L8257" rel="#L8257">8257</span>
<span id="L8258" rel="#L8258">8258</span>
<span id="L8259" rel="#L8259">8259</span>
<span id="L8260" rel="#L8260">8260</span>
<span id="L8261" rel="#L8261">8261</span>
<span id="L8262" rel="#L8262">8262</span>
<span id="L8263" rel="#L8263">8263</span>
<span id="L8264" rel="#L8264">8264</span>
<span id="L8265" rel="#L8265">8265</span>
<span id="L8266" rel="#L8266">8266</span>
<span id="L8267" rel="#L8267">8267</span>
<span id="L8268" rel="#L8268">8268</span>
<span id="L8269" rel="#L8269">8269</span>
<span id="L8270" rel="#L8270">8270</span>
<span id="L8271" rel="#L8271">8271</span>
<span id="L8272" rel="#L8272">8272</span>
<span id="L8273" rel="#L8273">8273</span>
<span id="L8274" rel="#L8274">8274</span>
<span id="L8275" rel="#L8275">8275</span>
<span id="L8276" rel="#L8276">8276</span>
<span id="L8277" rel="#L8277">8277</span>
<span id="L8278" rel="#L8278">8278</span>
<span id="L8279" rel="#L8279">8279</span>
<span id="L8280" rel="#L8280">8280</span>
<span id="L8281" rel="#L8281">8281</span>
<span id="L8282" rel="#L8282">8282</span>
<span id="L8283" rel="#L8283">8283</span>
<span id="L8284" rel="#L8284">8284</span>
<span id="L8285" rel="#L8285">8285</span>
<span id="L8286" rel="#L8286">8286</span>
<span id="L8287" rel="#L8287">8287</span>
<span id="L8288" rel="#L8288">8288</span>
<span id="L8289" rel="#L8289">8289</span>
<span id="L8290" rel="#L8290">8290</span>
<span id="L8291" rel="#L8291">8291</span>
<span id="L8292" rel="#L8292">8292</span>
<span id="L8293" rel="#L8293">8293</span>
<span id="L8294" rel="#L8294">8294</span>
<span id="L8295" rel="#L8295">8295</span>
<span id="L8296" rel="#L8296">8296</span>
<span id="L8297" rel="#L8297">8297</span>
<span id="L8298" rel="#L8298">8298</span>
<span id="L8299" rel="#L8299">8299</span>
<span id="L8300" rel="#L8300">8300</span>
<span id="L8301" rel="#L8301">8301</span>
<span id="L8302" rel="#L8302">8302</span>
<span id="L8303" rel="#L8303">8303</span>
<span id="L8304" rel="#L8304">8304</span>
<span id="L8305" rel="#L8305">8305</span>
<span id="L8306" rel="#L8306">8306</span>
<span id="L8307" rel="#L8307">8307</span>
<span id="L8308" rel="#L8308">8308</span>
<span id="L8309" rel="#L8309">8309</span>
<span id="L8310" rel="#L8310">8310</span>
<span id="L8311" rel="#L8311">8311</span>
<span id="L8312" rel="#L8312">8312</span>
<span id="L8313" rel="#L8313">8313</span>
<span id="L8314" rel="#L8314">8314</span>
<span id="L8315" rel="#L8315">8315</span>
<span id="L8316" rel="#L8316">8316</span>
<span id="L8317" rel="#L8317">8317</span>
<span id="L8318" rel="#L8318">8318</span>
<span id="L8319" rel="#L8319">8319</span>
<span id="L8320" rel="#L8320">8320</span>
<span id="L8321" rel="#L8321">8321</span>
<span id="L8322" rel="#L8322">8322</span>
<span id="L8323" rel="#L8323">8323</span>
<span id="L8324" rel="#L8324">8324</span>
<span id="L8325" rel="#L8325">8325</span>
<span id="L8326" rel="#L8326">8326</span>
<span id="L8327" rel="#L8327">8327</span>
<span id="L8328" rel="#L8328">8328</span>
<span id="L8329" rel="#L8329">8329</span>
<span id="L8330" rel="#L8330">8330</span>
<span id="L8331" rel="#L8331">8331</span>
<span id="L8332" rel="#L8332">8332</span>
<span id="L8333" rel="#L8333">8333</span>
<span id="L8334" rel="#L8334">8334</span>
<span id="L8335" rel="#L8335">8335</span>
<span id="L8336" rel="#L8336">8336</span>
<span id="L8337" rel="#L8337">8337</span>
<span id="L8338" rel="#L8338">8338</span>
<span id="L8339" rel="#L8339">8339</span>
<span id="L8340" rel="#L8340">8340</span>
<span id="L8341" rel="#L8341">8341</span>
<span id="L8342" rel="#L8342">8342</span>
<span id="L8343" rel="#L8343">8343</span>
<span id="L8344" rel="#L8344">8344</span>
<span id="L8345" rel="#L8345">8345</span>
<span id="L8346" rel="#L8346">8346</span>
<span id="L8347" rel="#L8347">8347</span>
<span id="L8348" rel="#L8348">8348</span>
<span id="L8349" rel="#L8349">8349</span>
<span id="L8350" rel="#L8350">8350</span>
<span id="L8351" rel="#L8351">8351</span>
<span id="L8352" rel="#L8352">8352</span>
<span id="L8353" rel="#L8353">8353</span>
<span id="L8354" rel="#L8354">8354</span>
<span id="L8355" rel="#L8355">8355</span>
<span id="L8356" rel="#L8356">8356</span>
<span id="L8357" rel="#L8357">8357</span>
<span id="L8358" rel="#L8358">8358</span>
<span id="L8359" rel="#L8359">8359</span>
<span id="L8360" rel="#L8360">8360</span>
<span id="L8361" rel="#L8361">8361</span>
<span id="L8362" rel="#L8362">8362</span>
<span id="L8363" rel="#L8363">8363</span>
<span id="L8364" rel="#L8364">8364</span>
<span id="L8365" rel="#L8365">8365</span>
<span id="L8366" rel="#L8366">8366</span>
<span id="L8367" rel="#L8367">8367</span>
<span id="L8368" rel="#L8368">8368</span>
<span id="L8369" rel="#L8369">8369</span>
<span id="L8370" rel="#L8370">8370</span>
<span id="L8371" rel="#L8371">8371</span>
<span id="L8372" rel="#L8372">8372</span>
<span id="L8373" rel="#L8373">8373</span>
<span id="L8374" rel="#L8374">8374</span>
<span id="L8375" rel="#L8375">8375</span>
<span id="L8376" rel="#L8376">8376</span>
<span id="L8377" rel="#L8377">8377</span>
<span id="L8378" rel="#L8378">8378</span>
<span id="L8379" rel="#L8379">8379</span>
<span id="L8380" rel="#L8380">8380</span>
<span id="L8381" rel="#L8381">8381</span>
<span id="L8382" rel="#L8382">8382</span>
<span id="L8383" rel="#L8383">8383</span>
<span id="L8384" rel="#L8384">8384</span>
<span id="L8385" rel="#L8385">8385</span>
<span id="L8386" rel="#L8386">8386</span>
<span id="L8387" rel="#L8387">8387</span>
<span id="L8388" rel="#L8388">8388</span>
<span id="L8389" rel="#L8389">8389</span>
<span id="L8390" rel="#L8390">8390</span>
<span id="L8391" rel="#L8391">8391</span>
<span id="L8392" rel="#L8392">8392</span>
<span id="L8393" rel="#L8393">8393</span>
<span id="L8394" rel="#L8394">8394</span>
<span id="L8395" rel="#L8395">8395</span>
<span id="L8396" rel="#L8396">8396</span>
<span id="L8397" rel="#L8397">8397</span>
<span id="L8398" rel="#L8398">8398</span>
<span id="L8399" rel="#L8399">8399</span>
<span id="L8400" rel="#L8400">8400</span>
<span id="L8401" rel="#L8401">8401</span>
<span id="L8402" rel="#L8402">8402</span>
<span id="L8403" rel="#L8403">8403</span>
<span id="L8404" rel="#L8404">8404</span>
<span id="L8405" rel="#L8405">8405</span>
<span id="L8406" rel="#L8406">8406</span>
<span id="L8407" rel="#L8407">8407</span>
<span id="L8408" rel="#L8408">8408</span>
<span id="L8409" rel="#L8409">8409</span>
<span id="L8410" rel="#L8410">8410</span>
<span id="L8411" rel="#L8411">8411</span>
<span id="L8412" rel="#L8412">8412</span>
<span id="L8413" rel="#L8413">8413</span>
<span id="L8414" rel="#L8414">8414</span>
<span id="L8415" rel="#L8415">8415</span>
<span id="L8416" rel="#L8416">8416</span>
<span id="L8417" rel="#L8417">8417</span>
<span id="L8418" rel="#L8418">8418</span>
<span id="L8419" rel="#L8419">8419</span>
<span id="L8420" rel="#L8420">8420</span>
<span id="L8421" rel="#L8421">8421</span>
<span id="L8422" rel="#L8422">8422</span>
<span id="L8423" rel="#L8423">8423</span>
<span id="L8424" rel="#L8424">8424</span>
<span id="L8425" rel="#L8425">8425</span>
<span id="L8426" rel="#L8426">8426</span>
<span id="L8427" rel="#L8427">8427</span>
<span id="L8428" rel="#L8428">8428</span>
<span id="L8429" rel="#L8429">8429</span>
<span id="L8430" rel="#L8430">8430</span>
<span id="L8431" rel="#L8431">8431</span>
<span id="L8432" rel="#L8432">8432</span>
<span id="L8433" rel="#L8433">8433</span>
<span id="L8434" rel="#L8434">8434</span>
<span id="L8435" rel="#L8435">8435</span>
<span id="L8436" rel="#L8436">8436</span>
<span id="L8437" rel="#L8437">8437</span>
<span id="L8438" rel="#L8438">8438</span>
<span id="L8439" rel="#L8439">8439</span>
<span id="L8440" rel="#L8440">8440</span>
<span id="L8441" rel="#L8441">8441</span>
<span id="L8442" rel="#L8442">8442</span>
<span id="L8443" rel="#L8443">8443</span>
<span id="L8444" rel="#L8444">8444</span>
<span id="L8445" rel="#L8445">8445</span>
<span id="L8446" rel="#L8446">8446</span>
<span id="L8447" rel="#L8447">8447</span>
<span id="L8448" rel="#L8448">8448</span>
<span id="L8449" rel="#L8449">8449</span>
<span id="L8450" rel="#L8450">8450</span>
<span id="L8451" rel="#L8451">8451</span>
<span id="L8452" rel="#L8452">8452</span>
<span id="L8453" rel="#L8453">8453</span>
<span id="L8454" rel="#L8454">8454</span>
<span id="L8455" rel="#L8455">8455</span>
<span id="L8456" rel="#L8456">8456</span>
<span id="L8457" rel="#L8457">8457</span>
<span id="L8458" rel="#L8458">8458</span>
<span id="L8459" rel="#L8459">8459</span>
<span id="L8460" rel="#L8460">8460</span>
<span id="L8461" rel="#L8461">8461</span>
<span id="L8462" rel="#L8462">8462</span>
<span id="L8463" rel="#L8463">8463</span>
<span id="L8464" rel="#L8464">8464</span>
<span id="L8465" rel="#L8465">8465</span>
<span id="L8466" rel="#L8466">8466</span>
<span id="L8467" rel="#L8467">8467</span>
<span id="L8468" rel="#L8468">8468</span>
<span id="L8469" rel="#L8469">8469</span>
<span id="L8470" rel="#L8470">8470</span>
<span id="L8471" rel="#L8471">8471</span>
<span id="L8472" rel="#L8472">8472</span>
<span id="L8473" rel="#L8473">8473</span>
<span id="L8474" rel="#L8474">8474</span>
<span id="L8475" rel="#L8475">8475</span>
<span id="L8476" rel="#L8476">8476</span>
<span id="L8477" rel="#L8477">8477</span>
<span id="L8478" rel="#L8478">8478</span>
<span id="L8479" rel="#L8479">8479</span>
<span id="L8480" rel="#L8480">8480</span>
<span id="L8481" rel="#L8481">8481</span>
<span id="L8482" rel="#L8482">8482</span>
<span id="L8483" rel="#L8483">8483</span>
<span id="L8484" rel="#L8484">8484</span>
<span id="L8485" rel="#L8485">8485</span>
<span id="L8486" rel="#L8486">8486</span>
<span id="L8487" rel="#L8487">8487</span>
<span id="L8488" rel="#L8488">8488</span>
<span id="L8489" rel="#L8489">8489</span>
<span id="L8490" rel="#L8490">8490</span>
<span id="L8491" rel="#L8491">8491</span>
<span id="L8492" rel="#L8492">8492</span>
<span id="L8493" rel="#L8493">8493</span>
<span id="L8494" rel="#L8494">8494</span>
<span id="L8495" rel="#L8495">8495</span>
<span id="L8496" rel="#L8496">8496</span>
<span id="L8497" rel="#L8497">8497</span>
<span id="L8498" rel="#L8498">8498</span>
<span id="L8499" rel="#L8499">8499</span>
<span id="L8500" rel="#L8500">8500</span>
<span id="L8501" rel="#L8501">8501</span>
<span id="L8502" rel="#L8502">8502</span>
<span id="L8503" rel="#L8503">8503</span>
<span id="L8504" rel="#L8504">8504</span>
<span id="L8505" rel="#L8505">8505</span>
<span id="L8506" rel="#L8506">8506</span>
<span id="L8507" rel="#L8507">8507</span>
<span id="L8508" rel="#L8508">8508</span>
<span id="L8509" rel="#L8509">8509</span>
<span id="L8510" rel="#L8510">8510</span>
<span id="L8511" rel="#L8511">8511</span>
<span id="L8512" rel="#L8512">8512</span>
<span id="L8513" rel="#L8513">8513</span>
<span id="L8514" rel="#L8514">8514</span>
<span id="L8515" rel="#L8515">8515</span>
<span id="L8516" rel="#L8516">8516</span>
<span id="L8517" rel="#L8517">8517</span>
<span id="L8518" rel="#L8518">8518</span>
<span id="L8519" rel="#L8519">8519</span>
<span id="L8520" rel="#L8520">8520</span>
<span id="L8521" rel="#L8521">8521</span>
<span id="L8522" rel="#L8522">8522</span>
<span id="L8523" rel="#L8523">8523</span>
<span id="L8524" rel="#L8524">8524</span>
<span id="L8525" rel="#L8525">8525</span>
<span id="L8526" rel="#L8526">8526</span>
<span id="L8527" rel="#L8527">8527</span>
<span id="L8528" rel="#L8528">8528</span>
<span id="L8529" rel="#L8529">8529</span>
<span id="L8530" rel="#L8530">8530</span>
<span id="L8531" rel="#L8531">8531</span>
<span id="L8532" rel="#L8532">8532</span>
<span id="L8533" rel="#L8533">8533</span>
<span id="L8534" rel="#L8534">8534</span>
<span id="L8535" rel="#L8535">8535</span>
<span id="L8536" rel="#L8536">8536</span>
<span id="L8537" rel="#L8537">8537</span>
<span id="L8538" rel="#L8538">8538</span>
<span id="L8539" rel="#L8539">8539</span>
<span id="L8540" rel="#L8540">8540</span>
<span id="L8541" rel="#L8541">8541</span>
<span id="L8542" rel="#L8542">8542</span>
<span id="L8543" rel="#L8543">8543</span>
<span id="L8544" rel="#L8544">8544</span>
<span id="L8545" rel="#L8545">8545</span>
<span id="L8546" rel="#L8546">8546</span>
<span id="L8547" rel="#L8547">8547</span>
<span id="L8548" rel="#L8548">8548</span>
<span id="L8549" rel="#L8549">8549</span>
<span id="L8550" rel="#L8550">8550</span>
<span id="L8551" rel="#L8551">8551</span>
<span id="L8552" rel="#L8552">8552</span>
<span id="L8553" rel="#L8553">8553</span>
<span id="L8554" rel="#L8554">8554</span>
<span id="L8555" rel="#L8555">8555</span>
<span id="L8556" rel="#L8556">8556</span>
<span id="L8557" rel="#L8557">8557</span>
<span id="L8558" rel="#L8558">8558</span>
<span id="L8559" rel="#L8559">8559</span>
<span id="L8560" rel="#L8560">8560</span>
<span id="L8561" rel="#L8561">8561</span>
<span id="L8562" rel="#L8562">8562</span>
<span id="L8563" rel="#L8563">8563</span>
<span id="L8564" rel="#L8564">8564</span>
<span id="L8565" rel="#L8565">8565</span>
<span id="L8566" rel="#L8566">8566</span>
<span id="L8567" rel="#L8567">8567</span>
<span id="L8568" rel="#L8568">8568</span>
<span id="L8569" rel="#L8569">8569</span>
<span id="L8570" rel="#L8570">8570</span>
<span id="L8571" rel="#L8571">8571</span>
<span id="L8572" rel="#L8572">8572</span>
<span id="L8573" rel="#L8573">8573</span>
<span id="L8574" rel="#L8574">8574</span>
<span id="L8575" rel="#L8575">8575</span>
<span id="L8576" rel="#L8576">8576</span>
<span id="L8577" rel="#L8577">8577</span>
<span id="L8578" rel="#L8578">8578</span>
<span id="L8579" rel="#L8579">8579</span>
<span id="L8580" rel="#L8580">8580</span>
<span id="L8581" rel="#L8581">8581</span>
<span id="L8582" rel="#L8582">8582</span>
<span id="L8583" rel="#L8583">8583</span>
<span id="L8584" rel="#L8584">8584</span>
<span id="L8585" rel="#L8585">8585</span>
<span id="L8586" rel="#L8586">8586</span>
<span id="L8587" rel="#L8587">8587</span>
<span id="L8588" rel="#L8588">8588</span>
<span id="L8589" rel="#L8589">8589</span>
<span id="L8590" rel="#L8590">8590</span>
<span id="L8591" rel="#L8591">8591</span>
<span id="L8592" rel="#L8592">8592</span>
<span id="L8593" rel="#L8593">8593</span>
<span id="L8594" rel="#L8594">8594</span>
<span id="L8595" rel="#L8595">8595</span>
<span id="L8596" rel="#L8596">8596</span>
<span id="L8597" rel="#L8597">8597</span>
<span id="L8598" rel="#L8598">8598</span>
<span id="L8599" rel="#L8599">8599</span>
<span id="L8600" rel="#L8600">8600</span>
<span id="L8601" rel="#L8601">8601</span>
<span id="L8602" rel="#L8602">8602</span>
<span id="L8603" rel="#L8603">8603</span>
<span id="L8604" rel="#L8604">8604</span>
<span id="L8605" rel="#L8605">8605</span>
<span id="L8606" rel="#L8606">8606</span>
<span id="L8607" rel="#L8607">8607</span>
<span id="L8608" rel="#L8608">8608</span>
<span id="L8609" rel="#L8609">8609</span>
<span id="L8610" rel="#L8610">8610</span>
<span id="L8611" rel="#L8611">8611</span>
<span id="L8612" rel="#L8612">8612</span>
<span id="L8613" rel="#L8613">8613</span>
<span id="L8614" rel="#L8614">8614</span>
<span id="L8615" rel="#L8615">8615</span>
<span id="L8616" rel="#L8616">8616</span>
<span id="L8617" rel="#L8617">8617</span>
<span id="L8618" rel="#L8618">8618</span>
<span id="L8619" rel="#L8619">8619</span>
<span id="L8620" rel="#L8620">8620</span>
<span id="L8621" rel="#L8621">8621</span>
<span id="L8622" rel="#L8622">8622</span>
<span id="L8623" rel="#L8623">8623</span>
<span id="L8624" rel="#L8624">8624</span>
<span id="L8625" rel="#L8625">8625</span>
<span id="L8626" rel="#L8626">8626</span>
<span id="L8627" rel="#L8627">8627</span>
<span id="L8628" rel="#L8628">8628</span>
<span id="L8629" rel="#L8629">8629</span>
<span id="L8630" rel="#L8630">8630</span>
<span id="L8631" rel="#L8631">8631</span>
<span id="L8632" rel="#L8632">8632</span>
<span id="L8633" rel="#L8633">8633</span>
<span id="L8634" rel="#L8634">8634</span>
<span id="L8635" rel="#L8635">8635</span>
<span id="L8636" rel="#L8636">8636</span>
<span id="L8637" rel="#L8637">8637</span>
<span id="L8638" rel="#L8638">8638</span>
<span id="L8639" rel="#L8639">8639</span>
<span id="L8640" rel="#L8640">8640</span>
<span id="L8641" rel="#L8641">8641</span>
<span id="L8642" rel="#L8642">8642</span>
<span id="L8643" rel="#L8643">8643</span>
<span id="L8644" rel="#L8644">8644</span>
<span id="L8645" rel="#L8645">8645</span>
<span id="L8646" rel="#L8646">8646</span>
<span id="L8647" rel="#L8647">8647</span>
<span id="L8648" rel="#L8648">8648</span>
<span id="L8649" rel="#L8649">8649</span>
<span id="L8650" rel="#L8650">8650</span>
<span id="L8651" rel="#L8651">8651</span>
<span id="L8652" rel="#L8652">8652</span>
<span id="L8653" rel="#L8653">8653</span>
<span id="L8654" rel="#L8654">8654</span>
<span id="L8655" rel="#L8655">8655</span>
<span id="L8656" rel="#L8656">8656</span>
<span id="L8657" rel="#L8657">8657</span>
<span id="L8658" rel="#L8658">8658</span>
<span id="L8659" rel="#L8659">8659</span>
<span id="L8660" rel="#L8660">8660</span>
<span id="L8661" rel="#L8661">8661</span>
<span id="L8662" rel="#L8662">8662</span>
<span id="L8663" rel="#L8663">8663</span>
<span id="L8664" rel="#L8664">8664</span>
<span id="L8665" rel="#L8665">8665</span>
<span id="L8666" rel="#L8666">8666</span>
<span id="L8667" rel="#L8667">8667</span>
<span id="L8668" rel="#L8668">8668</span>
<span id="L8669" rel="#L8669">8669</span>
<span id="L8670" rel="#L8670">8670</span>
<span id="L8671" rel="#L8671">8671</span>
<span id="L8672" rel="#L8672">8672</span>
<span id="L8673" rel="#L8673">8673</span>
<span id="L8674" rel="#L8674">8674</span>
<span id="L8675" rel="#L8675">8675</span>
<span id="L8676" rel="#L8676">8676</span>
<span id="L8677" rel="#L8677">8677</span>
<span id="L8678" rel="#L8678">8678</span>
<span id="L8679" rel="#L8679">8679</span>
<span id="L8680" rel="#L8680">8680</span>
<span id="L8681" rel="#L8681">8681</span>
<span id="L8682" rel="#L8682">8682</span>
<span id="L8683" rel="#L8683">8683</span>
<span id="L8684" rel="#L8684">8684</span>
<span id="L8685" rel="#L8685">8685</span>
<span id="L8686" rel="#L8686">8686</span>
<span id="L8687" rel="#L8687">8687</span>
<span id="L8688" rel="#L8688">8688</span>
<span id="L8689" rel="#L8689">8689</span>
<span id="L8690" rel="#L8690">8690</span>
<span id="L8691" rel="#L8691">8691</span>
<span id="L8692" rel="#L8692">8692</span>
<span id="L8693" rel="#L8693">8693</span>
<span id="L8694" rel="#L8694">8694</span>
<span id="L8695" rel="#L8695">8695</span>
<span id="L8696" rel="#L8696">8696</span>
<span id="L8697" rel="#L8697">8697</span>
<span id="L8698" rel="#L8698">8698</span>
<span id="L8699" rel="#L8699">8699</span>
<span id="L8700" rel="#L8700">8700</span>
<span id="L8701" rel="#L8701">8701</span>
<span id="L8702" rel="#L8702">8702</span>
<span id="L8703" rel="#L8703">8703</span>
<span id="L8704" rel="#L8704">8704</span>
<span id="L8705" rel="#L8705">8705</span>
<span id="L8706" rel="#L8706">8706</span>
<span id="L8707" rel="#L8707">8707</span>
<span id="L8708" rel="#L8708">8708</span>
<span id="L8709" rel="#L8709">8709</span>
<span id="L8710" rel="#L8710">8710</span>
<span id="L8711" rel="#L8711">8711</span>
<span id="L8712" rel="#L8712">8712</span>
<span id="L8713" rel="#L8713">8713</span>
<span id="L8714" rel="#L8714">8714</span>
<span id="L8715" rel="#L8715">8715</span>
<span id="L8716" rel="#L8716">8716</span>
<span id="L8717" rel="#L8717">8717</span>
<span id="L8718" rel="#L8718">8718</span>
<span id="L8719" rel="#L8719">8719</span>
<span id="L8720" rel="#L8720">8720</span>
<span id="L8721" rel="#L8721">8721</span>
<span id="L8722" rel="#L8722">8722</span>
<span id="L8723" rel="#L8723">8723</span>
<span id="L8724" rel="#L8724">8724</span>
<span id="L8725" rel="#L8725">8725</span>
<span id="L8726" rel="#L8726">8726</span>
<span id="L8727" rel="#L8727">8727</span>
<span id="L8728" rel="#L8728">8728</span>
<span id="L8729" rel="#L8729">8729</span>
<span id="L8730" rel="#L8730">8730</span>
<span id="L8731" rel="#L8731">8731</span>
<span id="L8732" rel="#L8732">8732</span>
<span id="L8733" rel="#L8733">8733</span>
<span id="L8734" rel="#L8734">8734</span>
<span id="L8735" rel="#L8735">8735</span>
<span id="L8736" rel="#L8736">8736</span>
<span id="L8737" rel="#L8737">8737</span>
<span id="L8738" rel="#L8738">8738</span>
<span id="L8739" rel="#L8739">8739</span>
<span id="L8740" rel="#L8740">8740</span>
<span id="L8741" rel="#L8741">8741</span>
<span id="L8742" rel="#L8742">8742</span>
<span id="L8743" rel="#L8743">8743</span>
<span id="L8744" rel="#L8744">8744</span>
<span id="L8745" rel="#L8745">8745</span>
<span id="L8746" rel="#L8746">8746</span>
<span id="L8747" rel="#L8747">8747</span>
<span id="L8748" rel="#L8748">8748</span>
<span id="L8749" rel="#L8749">8749</span>
<span id="L8750" rel="#L8750">8750</span>
<span id="L8751" rel="#L8751">8751</span>
<span id="L8752" rel="#L8752">8752</span>
<span id="L8753" rel="#L8753">8753</span>
<span id="L8754" rel="#L8754">8754</span>
<span id="L8755" rel="#L8755">8755</span>
<span id="L8756" rel="#L8756">8756</span>
<span id="L8757" rel="#L8757">8757</span>
<span id="L8758" rel="#L8758">8758</span>
<span id="L8759" rel="#L8759">8759</span>
<span id="L8760" rel="#L8760">8760</span>
<span id="L8761" rel="#L8761">8761</span>
<span id="L8762" rel="#L8762">8762</span>
<span id="L8763" rel="#L8763">8763</span>
<span id="L8764" rel="#L8764">8764</span>
<span id="L8765" rel="#L8765">8765</span>
<span id="L8766" rel="#L8766">8766</span>
<span id="L8767" rel="#L8767">8767</span>
<span id="L8768" rel="#L8768">8768</span>
<span id="L8769" rel="#L8769">8769</span>
<span id="L8770" rel="#L8770">8770</span>
<span id="L8771" rel="#L8771">8771</span>
<span id="L8772" rel="#L8772">8772</span>
<span id="L8773" rel="#L8773">8773</span>
<span id="L8774" rel="#L8774">8774</span>
<span id="L8775" rel="#L8775">8775</span>
<span id="L8776" rel="#L8776">8776</span>
<span id="L8777" rel="#L8777">8777</span>
<span id="L8778" rel="#L8778">8778</span>
<span id="L8779" rel="#L8779">8779</span>
<span id="L8780" rel="#L8780">8780</span>
<span id="L8781" rel="#L8781">8781</span>
<span id="L8782" rel="#L8782">8782</span>
<span id="L8783" rel="#L8783">8783</span>
<span id="L8784" rel="#L8784">8784</span>
<span id="L8785" rel="#L8785">8785</span>
<span id="L8786" rel="#L8786">8786</span>
<span id="L8787" rel="#L8787">8787</span>
<span id="L8788" rel="#L8788">8788</span>
<span id="L8789" rel="#L8789">8789</span>
<span id="L8790" rel="#L8790">8790</span>
<span id="L8791" rel="#L8791">8791</span>
<span id="L8792" rel="#L8792">8792</span>
<span id="L8793" rel="#L8793">8793</span>
<span id="L8794" rel="#L8794">8794</span>
<span id="L8795" rel="#L8795">8795</span>
<span id="L8796" rel="#L8796">8796</span>
<span id="L8797" rel="#L8797">8797</span>
<span id="L8798" rel="#L8798">8798</span>
<span id="L8799" rel="#L8799">8799</span>
<span id="L8800" rel="#L8800">8800</span>
<span id="L8801" rel="#L8801">8801</span>
<span id="L8802" rel="#L8802">8802</span>
<span id="L8803" rel="#L8803">8803</span>
<span id="L8804" rel="#L8804">8804</span>
<span id="L8805" rel="#L8805">8805</span>
<span id="L8806" rel="#L8806">8806</span>
<span id="L8807" rel="#L8807">8807</span>
<span id="L8808" rel="#L8808">8808</span>
<span id="L8809" rel="#L8809">8809</span>
<span id="L8810" rel="#L8810">8810</span>
<span id="L8811" rel="#L8811">8811</span>
<span id="L8812" rel="#L8812">8812</span>
<span id="L8813" rel="#L8813">8813</span>
<span id="L8814" rel="#L8814">8814</span>
<span id="L8815" rel="#L8815">8815</span>
<span id="L8816" rel="#L8816">8816</span>
<span id="L8817" rel="#L8817">8817</span>
<span id="L8818" rel="#L8818">8818</span>
<span id="L8819" rel="#L8819">8819</span>
<span id="L8820" rel="#L8820">8820</span>
<span id="L8821" rel="#L8821">8821</span>
<span id="L8822" rel="#L8822">8822</span>
<span id="L8823" rel="#L8823">8823</span>
<span id="L8824" rel="#L8824">8824</span>
<span id="L8825" rel="#L8825">8825</span>
<span id="L8826" rel="#L8826">8826</span>
<span id="L8827" rel="#L8827">8827</span>
<span id="L8828" rel="#L8828">8828</span>
<span id="L8829" rel="#L8829">8829</span>
<span id="L8830" rel="#L8830">8830</span>
<span id="L8831" rel="#L8831">8831</span>
<span id="L8832" rel="#L8832">8832</span>
<span id="L8833" rel="#L8833">8833</span>
<span id="L8834" rel="#L8834">8834</span>
<span id="L8835" rel="#L8835">8835</span>
<span id="L8836" rel="#L8836">8836</span>
<span id="L8837" rel="#L8837">8837</span>
<span id="L8838" rel="#L8838">8838</span>
<span id="L8839" rel="#L8839">8839</span>
<span id="L8840" rel="#L8840">8840</span>
<span id="L8841" rel="#L8841">8841</span>
<span id="L8842" rel="#L8842">8842</span>
<span id="L8843" rel="#L8843">8843</span>
<span id="L8844" rel="#L8844">8844</span>
<span id="L8845" rel="#L8845">8845</span>
<span id="L8846" rel="#L8846">8846</span>
<span id="L8847" rel="#L8847">8847</span>
<span id="L8848" rel="#L8848">8848</span>
<span id="L8849" rel="#L8849">8849</span>
<span id="L8850" rel="#L8850">8850</span>
<span id="L8851" rel="#L8851">8851</span>
<span id="L8852" rel="#L8852">8852</span>
<span id="L8853" rel="#L8853">8853</span>
<span id="L8854" rel="#L8854">8854</span>
<span id="L8855" rel="#L8855">8855</span>
<span id="L8856" rel="#L8856">8856</span>
<span id="L8857" rel="#L8857">8857</span>
<span id="L8858" rel="#L8858">8858</span>
<span id="L8859" rel="#L8859">8859</span>
<span id="L8860" rel="#L8860">8860</span>
<span id="L8861" rel="#L8861">8861</span>
<span id="L8862" rel="#L8862">8862</span>
<span id="L8863" rel="#L8863">8863</span>
<span id="L8864" rel="#L8864">8864</span>
<span id="L8865" rel="#L8865">8865</span>
<span id="L8866" rel="#L8866">8866</span>
<span id="L8867" rel="#L8867">8867</span>
<span id="L8868" rel="#L8868">8868</span>
<span id="L8869" rel="#L8869">8869</span>
<span id="L8870" rel="#L8870">8870</span>
<span id="L8871" rel="#L8871">8871</span>
<span id="L8872" rel="#L8872">8872</span>
<span id="L8873" rel="#L8873">8873</span>
<span id="L8874" rel="#L8874">8874</span>
<span id="L8875" rel="#L8875">8875</span>
<span id="L8876" rel="#L8876">8876</span>
<span id="L8877" rel="#L8877">8877</span>
<span id="L8878" rel="#L8878">8878</span>
<span id="L8879" rel="#L8879">8879</span>
<span id="L8880" rel="#L8880">8880</span>
<span id="L8881" rel="#L8881">8881</span>
<span id="L8882" rel="#L8882">8882</span>
<span id="L8883" rel="#L8883">8883</span>
<span id="L8884" rel="#L8884">8884</span>
<span id="L8885" rel="#L8885">8885</span>
<span id="L8886" rel="#L8886">8886</span>
<span id="L8887" rel="#L8887">8887</span>
<span id="L8888" rel="#L8888">8888</span>
<span id="L8889" rel="#L8889">8889</span>
<span id="L8890" rel="#L8890">8890</span>
<span id="L8891" rel="#L8891">8891</span>
<span id="L8892" rel="#L8892">8892</span>
<span id="L8893" rel="#L8893">8893</span>
<span id="L8894" rel="#L8894">8894</span>
<span id="L8895" rel="#L8895">8895</span>
<span id="L8896" rel="#L8896">8896</span>
<span id="L8897" rel="#L8897">8897</span>
<span id="L8898" rel="#L8898">8898</span>
<span id="L8899" rel="#L8899">8899</span>
<span id="L8900" rel="#L8900">8900</span>
<span id="L8901" rel="#L8901">8901</span>
<span id="L8902" rel="#L8902">8902</span>
<span id="L8903" rel="#L8903">8903</span>
<span id="L8904" rel="#L8904">8904</span>
<span id="L8905" rel="#L8905">8905</span>
<span id="L8906" rel="#L8906">8906</span>
<span id="L8907" rel="#L8907">8907</span>
<span id="L8908" rel="#L8908">8908</span>
<span id="L8909" rel="#L8909">8909</span>
<span id="L8910" rel="#L8910">8910</span>
<span id="L8911" rel="#L8911">8911</span>
<span id="L8912" rel="#L8912">8912</span>
<span id="L8913" rel="#L8913">8913</span>
<span id="L8914" rel="#L8914">8914</span>
<span id="L8915" rel="#L8915">8915</span>
<span id="L8916" rel="#L8916">8916</span>
<span id="L8917" rel="#L8917">8917</span>
<span id="L8918" rel="#L8918">8918</span>
<span id="L8919" rel="#L8919">8919</span>
<span id="L8920" rel="#L8920">8920</span>
<span id="L8921" rel="#L8921">8921</span>
<span id="L8922" rel="#L8922">8922</span>
<span id="L8923" rel="#L8923">8923</span>
<span id="L8924" rel="#L8924">8924</span>
<span id="L8925" rel="#L8925">8925</span>
<span id="L8926" rel="#L8926">8926</span>
<span id="L8927" rel="#L8927">8927</span>
<span id="L8928" rel="#L8928">8928</span>
<span id="L8929" rel="#L8929">8929</span>
<span id="L8930" rel="#L8930">8930</span>
<span id="L8931" rel="#L8931">8931</span>
<span id="L8932" rel="#L8932">8932</span>
<span id="L8933" rel="#L8933">8933</span>
<span id="L8934" rel="#L8934">8934</span>
<span id="L8935" rel="#L8935">8935</span>
<span id="L8936" rel="#L8936">8936</span>
<span id="L8937" rel="#L8937">8937</span>
<span id="L8938" rel="#L8938">8938</span>
<span id="L8939" rel="#L8939">8939</span>
<span id="L8940" rel="#L8940">8940</span>
<span id="L8941" rel="#L8941">8941</span>
<span id="L8942" rel="#L8942">8942</span>
<span id="L8943" rel="#L8943">8943</span>
<span id="L8944" rel="#L8944">8944</span>
<span id="L8945" rel="#L8945">8945</span>
<span id="L8946" rel="#L8946">8946</span>
<span id="L8947" rel="#L8947">8947</span>
<span id="L8948" rel="#L8948">8948</span>
<span id="L8949" rel="#L8949">8949</span>
<span id="L8950" rel="#L8950">8950</span>
<span id="L8951" rel="#L8951">8951</span>
<span id="L8952" rel="#L8952">8952</span>
<span id="L8953" rel="#L8953">8953</span>
<span id="L8954" rel="#L8954">8954</span>
<span id="L8955" rel="#L8955">8955</span>
<span id="L8956" rel="#L8956">8956</span>
<span id="L8957" rel="#L8957">8957</span>
<span id="L8958" rel="#L8958">8958</span>
<span id="L8959" rel="#L8959">8959</span>
<span id="L8960" rel="#L8960">8960</span>
<span id="L8961" rel="#L8961">8961</span>
<span id="L8962" rel="#L8962">8962</span>
<span id="L8963" rel="#L8963">8963</span>
<span id="L8964" rel="#L8964">8964</span>
<span id="L8965" rel="#L8965">8965</span>
<span id="L8966" rel="#L8966">8966</span>
<span id="L8967" rel="#L8967">8967</span>
<span id="L8968" rel="#L8968">8968</span>
<span id="L8969" rel="#L8969">8969</span>
<span id="L8970" rel="#L8970">8970</span>
<span id="L8971" rel="#L8971">8971</span>
<span id="L8972" rel="#L8972">8972</span>
<span id="L8973" rel="#L8973">8973</span>
<span id="L8974" rel="#L8974">8974</span>
<span id="L8975" rel="#L8975">8975</span>
<span id="L8976" rel="#L8976">8976</span>
<span id="L8977" rel="#L8977">8977</span>
<span id="L8978" rel="#L8978">8978</span>
<span id="L8979" rel="#L8979">8979</span>
<span id="L8980" rel="#L8980">8980</span>
<span id="L8981" rel="#L8981">8981</span>
<span id="L8982" rel="#L8982">8982</span>
<span id="L8983" rel="#L8983">8983</span>
<span id="L8984" rel="#L8984">8984</span>
<span id="L8985" rel="#L8985">8985</span>
<span id="L8986" rel="#L8986">8986</span>
<span id="L8987" rel="#L8987">8987</span>
<span id="L8988" rel="#L8988">8988</span>
<span id="L8989" rel="#L8989">8989</span>
<span id="L8990" rel="#L8990">8990</span>
<span id="L8991" rel="#L8991">8991</span>
<span id="L8992" rel="#L8992">8992</span>
<span id="L8993" rel="#L8993">8993</span>
<span id="L8994" rel="#L8994">8994</span>
<span id="L8995" rel="#L8995">8995</span>
<span id="L8996" rel="#L8996">8996</span>
<span id="L8997" rel="#L8997">8997</span>
<span id="L8998" rel="#L8998">8998</span>
<span id="L8999" rel="#L8999">8999</span>
<span id="L9000" rel="#L9000">9000</span>
<span id="L9001" rel="#L9001">9001</span>
<span id="L9002" rel="#L9002">9002</span>
<span id="L9003" rel="#L9003">9003</span>
<span id="L9004" rel="#L9004">9004</span>
<span id="L9005" rel="#L9005">9005</span>
<span id="L9006" rel="#L9006">9006</span>
<span id="L9007" rel="#L9007">9007</span>
<span id="L9008" rel="#L9008">9008</span>
<span id="L9009" rel="#L9009">9009</span>
<span id="L9010" rel="#L9010">9010</span>
<span id="L9011" rel="#L9011">9011</span>
<span id="L9012" rel="#L9012">9012</span>
<span id="L9013" rel="#L9013">9013</span>
<span id="L9014" rel="#L9014">9014</span>
<span id="L9015" rel="#L9015">9015</span>
<span id="L9016" rel="#L9016">9016</span>
<span id="L9017" rel="#L9017">9017</span>
<span id="L9018" rel="#L9018">9018</span>
<span id="L9019" rel="#L9019">9019</span>
<span id="L9020" rel="#L9020">9020</span>
<span id="L9021" rel="#L9021">9021</span>
<span id="L9022" rel="#L9022">9022</span>
<span id="L9023" rel="#L9023">9023</span>
<span id="L9024" rel="#L9024">9024</span>
<span id="L9025" rel="#L9025">9025</span>
<span id="L9026" rel="#L9026">9026</span>
<span id="L9027" rel="#L9027">9027</span>
<span id="L9028" rel="#L9028">9028</span>
<span id="L9029" rel="#L9029">9029</span>
<span id="L9030" rel="#L9030">9030</span>
<span id="L9031" rel="#L9031">9031</span>
<span id="L9032" rel="#L9032">9032</span>
<span id="L9033" rel="#L9033">9033</span>
<span id="L9034" rel="#L9034">9034</span>
<span id="L9035" rel="#L9035">9035</span>
<span id="L9036" rel="#L9036">9036</span>
<span id="L9037" rel="#L9037">9037</span>
<span id="L9038" rel="#L9038">9038</span>
<span id="L9039" rel="#L9039">9039</span>
<span id="L9040" rel="#L9040">9040</span>
<span id="L9041" rel="#L9041">9041</span>
<span id="L9042" rel="#L9042">9042</span>
<span id="L9043" rel="#L9043">9043</span>
<span id="L9044" rel="#L9044">9044</span>
<span id="L9045" rel="#L9045">9045</span>
<span id="L9046" rel="#L9046">9046</span>
<span id="L9047" rel="#L9047">9047</span>
<span id="L9048" rel="#L9048">9048</span>
<span id="L9049" rel="#L9049">9049</span>
<span id="L9050" rel="#L9050">9050</span>
<span id="L9051" rel="#L9051">9051</span>
<span id="L9052" rel="#L9052">9052</span>
<span id="L9053" rel="#L9053">9053</span>
<span id="L9054" rel="#L9054">9054</span>
<span id="L9055" rel="#L9055">9055</span>
<span id="L9056" rel="#L9056">9056</span>
<span id="L9057" rel="#L9057">9057</span>
<span id="L9058" rel="#L9058">9058</span>
<span id="L9059" rel="#L9059">9059</span>
<span id="L9060" rel="#L9060">9060</span>
<span id="L9061" rel="#L9061">9061</span>
<span id="L9062" rel="#L9062">9062</span>
<span id="L9063" rel="#L9063">9063</span>
<span id="L9064" rel="#L9064">9064</span>
<span id="L9065" rel="#L9065">9065</span>
<span id="L9066" rel="#L9066">9066</span>
<span id="L9067" rel="#L9067">9067</span>
<span id="L9068" rel="#L9068">9068</span>
<span id="L9069" rel="#L9069">9069</span>
<span id="L9070" rel="#L9070">9070</span>
<span id="L9071" rel="#L9071">9071</span>
<span id="L9072" rel="#L9072">9072</span>
<span id="L9073" rel="#L9073">9073</span>
<span id="L9074" rel="#L9074">9074</span>
<span id="L9075" rel="#L9075">9075</span>
<span id="L9076" rel="#L9076">9076</span>
<span id="L9077" rel="#L9077">9077</span>
<span id="L9078" rel="#L9078">9078</span>
<span id="L9079" rel="#L9079">9079</span>
<span id="L9080" rel="#L9080">9080</span>
<span id="L9081" rel="#L9081">9081</span>
<span id="L9082" rel="#L9082">9082</span>
<span id="L9083" rel="#L9083">9083</span>
<span id="L9084" rel="#L9084">9084</span>
<span id="L9085" rel="#L9085">9085</span>
<span id="L9086" rel="#L9086">9086</span>
<span id="L9087" rel="#L9087">9087</span>
<span id="L9088" rel="#L9088">9088</span>
<span id="L9089" rel="#L9089">9089</span>
<span id="L9090" rel="#L9090">9090</span>
<span id="L9091" rel="#L9091">9091</span>
<span id="L9092" rel="#L9092">9092</span>
<span id="L9093" rel="#L9093">9093</span>
<span id="L9094" rel="#L9094">9094</span>
<span id="L9095" rel="#L9095">9095</span>
<span id="L9096" rel="#L9096">9096</span>
<span id="L9097" rel="#L9097">9097</span>
<span id="L9098" rel="#L9098">9098</span>
<span id="L9099" rel="#L9099">9099</span>
<span id="L9100" rel="#L9100">9100</span>
<span id="L9101" rel="#L9101">9101</span>
<span id="L9102" rel="#L9102">9102</span>
<span id="L9103" rel="#L9103">9103</span>
<span id="L9104" rel="#L9104">9104</span>
<span id="L9105" rel="#L9105">9105</span>
<span id="L9106" rel="#L9106">9106</span>
<span id="L9107" rel="#L9107">9107</span>
<span id="L9108" rel="#L9108">9108</span>
<span id="L9109" rel="#L9109">9109</span>
<span id="L9110" rel="#L9110">9110</span>
<span id="L9111" rel="#L9111">9111</span>
<span id="L9112" rel="#L9112">9112</span>
<span id="L9113" rel="#L9113">9113</span>
<span id="L9114" rel="#L9114">9114</span>
<span id="L9115" rel="#L9115">9115</span>
<span id="L9116" rel="#L9116">9116</span>
<span id="L9117" rel="#L9117">9117</span>
<span id="L9118" rel="#L9118">9118</span>
<span id="L9119" rel="#L9119">9119</span>
<span id="L9120" rel="#L9120">9120</span>
<span id="L9121" rel="#L9121">9121</span>
<span id="L9122" rel="#L9122">9122</span>
<span id="L9123" rel="#L9123">9123</span>
<span id="L9124" rel="#L9124">9124</span>
<span id="L9125" rel="#L9125">9125</span>
<span id="L9126" rel="#L9126">9126</span>
<span id="L9127" rel="#L9127">9127</span>
<span id="L9128" rel="#L9128">9128</span>
<span id="L9129" rel="#L9129">9129</span>
<span id="L9130" rel="#L9130">9130</span>
<span id="L9131" rel="#L9131">9131</span>
<span id="L9132" rel="#L9132">9132</span>
<span id="L9133" rel="#L9133">9133</span>
<span id="L9134" rel="#L9134">9134</span>
<span id="L9135" rel="#L9135">9135</span>
<span id="L9136" rel="#L9136">9136</span>
<span id="L9137" rel="#L9137">9137</span>
<span id="L9138" rel="#L9138">9138</span>
<span id="L9139" rel="#L9139">9139</span>
<span id="L9140" rel="#L9140">9140</span>
<span id="L9141" rel="#L9141">9141</span>
<span id="L9142" rel="#L9142">9142</span>
<span id="L9143" rel="#L9143">9143</span>
<span id="L9144" rel="#L9144">9144</span>
<span id="L9145" rel="#L9145">9145</span>
<span id="L9146" rel="#L9146">9146</span>
<span id="L9147" rel="#L9147">9147</span>
<span id="L9148" rel="#L9148">9148</span>
<span id="L9149" rel="#L9149">9149</span>
<span id="L9150" rel="#L9150">9150</span>
<span id="L9151" rel="#L9151">9151</span>
<span id="L9152" rel="#L9152">9152</span>
<span id="L9153" rel="#L9153">9153</span>
<span id="L9154" rel="#L9154">9154</span>
<span id="L9155" rel="#L9155">9155</span>
<span id="L9156" rel="#L9156">9156</span>
<span id="L9157" rel="#L9157">9157</span>
<span id="L9158" rel="#L9158">9158</span>
<span id="L9159" rel="#L9159">9159</span>
<span id="L9160" rel="#L9160">9160</span>
<span id="L9161" rel="#L9161">9161</span>
<span id="L9162" rel="#L9162">9162</span>
<span id="L9163" rel="#L9163">9163</span>
<span id="L9164" rel="#L9164">9164</span>
<span id="L9165" rel="#L9165">9165</span>
<span id="L9166" rel="#L9166">9166</span>
<span id="L9167" rel="#L9167">9167</span>
<span id="L9168" rel="#L9168">9168</span>
<span id="L9169" rel="#L9169">9169</span>
<span id="L9170" rel="#L9170">9170</span>
<span id="L9171" rel="#L9171">9171</span>
<span id="L9172" rel="#L9172">9172</span>
<span id="L9173" rel="#L9173">9173</span>
<span id="L9174" rel="#L9174">9174</span>
<span id="L9175" rel="#L9175">9175</span>
<span id="L9176" rel="#L9176">9176</span>
<span id="L9177" rel="#L9177">9177</span>
<span id="L9178" rel="#L9178">9178</span>
<span id="L9179" rel="#L9179">9179</span>
<span id="L9180" rel="#L9180">9180</span>
<span id="L9181" rel="#L9181">9181</span>
<span id="L9182" rel="#L9182">9182</span>
<span id="L9183" rel="#L9183">9183</span>
<span id="L9184" rel="#L9184">9184</span>
<span id="L9185" rel="#L9185">9185</span>
<span id="L9186" rel="#L9186">9186</span>
<span id="L9187" rel="#L9187">9187</span>
<span id="L9188" rel="#L9188">9188</span>
<span id="L9189" rel="#L9189">9189</span>
<span id="L9190" rel="#L9190">9190</span>
<span id="L9191" rel="#L9191">9191</span>
<span id="L9192" rel="#L9192">9192</span>
<span id="L9193" rel="#L9193">9193</span>
<span id="L9194" rel="#L9194">9194</span>
<span id="L9195" rel="#L9195">9195</span>
<span id="L9196" rel="#L9196">9196</span>
<span id="L9197" rel="#L9197">9197</span>
<span id="L9198" rel="#L9198">9198</span>
<span id="L9199" rel="#L9199">9199</span>
<span id="L9200" rel="#L9200">9200</span>
<span id="L9201" rel="#L9201">9201</span>
<span id="L9202" rel="#L9202">9202</span>
<span id="L9203" rel="#L9203">9203</span>
<span id="L9204" rel="#L9204">9204</span>
<span id="L9205" rel="#L9205">9205</span>
<span id="L9206" rel="#L9206">9206</span>
<span id="L9207" rel="#L9207">9207</span>
<span id="L9208" rel="#L9208">9208</span>
<span id="L9209" rel="#L9209">9209</span>
<span id="L9210" rel="#L9210">9210</span>
<span id="L9211" rel="#L9211">9211</span>
<span id="L9212" rel="#L9212">9212</span>
<span id="L9213" rel="#L9213">9213</span>
<span id="L9214" rel="#L9214">9214</span>
<span id="L9215" rel="#L9215">9215</span>
<span id="L9216" rel="#L9216">9216</span>
<span id="L9217" rel="#L9217">9217</span>
<span id="L9218" rel="#L9218">9218</span>
<span id="L9219" rel="#L9219">9219</span>
<span id="L9220" rel="#L9220">9220</span>
<span id="L9221" rel="#L9221">9221</span>
<span id="L9222" rel="#L9222">9222</span>
<span id="L9223" rel="#L9223">9223</span>
<span id="L9224" rel="#L9224">9224</span>
<span id="L9225" rel="#L9225">9225</span>
<span id="L9226" rel="#L9226">9226</span>
<span id="L9227" rel="#L9227">9227</span>
<span id="L9228" rel="#L9228">9228</span>
<span id="L9229" rel="#L9229">9229</span>
<span id="L9230" rel="#L9230">9230</span>
<span id="L9231" rel="#L9231">9231</span>
<span id="L9232" rel="#L9232">9232</span>
<span id="L9233" rel="#L9233">9233</span>
<span id="L9234" rel="#L9234">9234</span>
<span id="L9235" rel="#L9235">9235</span>
<span id="L9236" rel="#L9236">9236</span>
<span id="L9237" rel="#L9237">9237</span>
<span id="L9238" rel="#L9238">9238</span>
<span id="L9239" rel="#L9239">9239</span>
<span id="L9240" rel="#L9240">9240</span>
<span id="L9241" rel="#L9241">9241</span>
<span id="L9242" rel="#L9242">9242</span>
<span id="L9243" rel="#L9243">9243</span>
<span id="L9244" rel="#L9244">9244</span>
<span id="L9245" rel="#L9245">9245</span>
<span id="L9246" rel="#L9246">9246</span>
<span id="L9247" rel="#L9247">9247</span>
<span id="L9248" rel="#L9248">9248</span>
<span id="L9249" rel="#L9249">9249</span>
<span id="L9250" rel="#L9250">9250</span>
<span id="L9251" rel="#L9251">9251</span>
<span id="L9252" rel="#L9252">9252</span>
<span id="L9253" rel="#L9253">9253</span>
<span id="L9254" rel="#L9254">9254</span>
<span id="L9255" rel="#L9255">9255</span>
<span id="L9256" rel="#L9256">9256</span>
<span id="L9257" rel="#L9257">9257</span>
<span id="L9258" rel="#L9258">9258</span>
<span id="L9259" rel="#L9259">9259</span>
<span id="L9260" rel="#L9260">9260</span>
<span id="L9261" rel="#L9261">9261</span>
<span id="L9262" rel="#L9262">9262</span>
<span id="L9263" rel="#L9263">9263</span>
<span id="L9264" rel="#L9264">9264</span>
<span id="L9265" rel="#L9265">9265</span>
<span id="L9266" rel="#L9266">9266</span>
<span id="L9267" rel="#L9267">9267</span>
<span id="L9268" rel="#L9268">9268</span>
<span id="L9269" rel="#L9269">9269</span>
<span id="L9270" rel="#L9270">9270</span>
<span id="L9271" rel="#L9271">9271</span>
<span id="L9272" rel="#L9272">9272</span>
<span id="L9273" rel="#L9273">9273</span>
<span id="L9274" rel="#L9274">9274</span>
<span id="L9275" rel="#L9275">9275</span>
<span id="L9276" rel="#L9276">9276</span>
<span id="L9277" rel="#L9277">9277</span>
<span id="L9278" rel="#L9278">9278</span>
<span id="L9279" rel="#L9279">9279</span>
<span id="L9280" rel="#L9280">9280</span>
<span id="L9281" rel="#L9281">9281</span>
<span id="L9282" rel="#L9282">9282</span>
<span id="L9283" rel="#L9283">9283</span>
<span id="L9284" rel="#L9284">9284</span>
<span id="L9285" rel="#L9285">9285</span>
<span id="L9286" rel="#L9286">9286</span>
<span id="L9287" rel="#L9287">9287</span>
<span id="L9288" rel="#L9288">9288</span>
<span id="L9289" rel="#L9289">9289</span>
<span id="L9290" rel="#L9290">9290</span>
<span id="L9291" rel="#L9291">9291</span>
<span id="L9292" rel="#L9292">9292</span>
<span id="L9293" rel="#L9293">9293</span>
<span id="L9294" rel="#L9294">9294</span>
<span id="L9295" rel="#L9295">9295</span>
<span id="L9296" rel="#L9296">9296</span>
<span id="L9297" rel="#L9297">9297</span>
<span id="L9298" rel="#L9298">9298</span>
<span id="L9299" rel="#L9299">9299</span>
<span id="L9300" rel="#L9300">9300</span>
<span id="L9301" rel="#L9301">9301</span>
<span id="L9302" rel="#L9302">9302</span>
<span id="L9303" rel="#L9303">9303</span>
<span id="L9304" rel="#L9304">9304</span>
<span id="L9305" rel="#L9305">9305</span>
<span id="L9306" rel="#L9306">9306</span>
<span id="L9307" rel="#L9307">9307</span>
<span id="L9308" rel="#L9308">9308</span>
<span id="L9309" rel="#L9309">9309</span>
<span id="L9310" rel="#L9310">9310</span>
<span id="L9311" rel="#L9311">9311</span>
<span id="L9312" rel="#L9312">9312</span>
<span id="L9313" rel="#L9313">9313</span>
<span id="L9314" rel="#L9314">9314</span>
<span id="L9315" rel="#L9315">9315</span>
<span id="L9316" rel="#L9316">9316</span>
<span id="L9317" rel="#L9317">9317</span>
<span id="L9318" rel="#L9318">9318</span>
<span id="L9319" rel="#L9319">9319</span>
<span id="L9320" rel="#L9320">9320</span>
<span id="L9321" rel="#L9321">9321</span>
<span id="L9322" rel="#L9322">9322</span>
<span id="L9323" rel="#L9323">9323</span>
<span id="L9324" rel="#L9324">9324</span>
<span id="L9325" rel="#L9325">9325</span>
<span id="L9326" rel="#L9326">9326</span>
<span id="L9327" rel="#L9327">9327</span>
<span id="L9328" rel="#L9328">9328</span>
<span id="L9329" rel="#L9329">9329</span>
<span id="L9330" rel="#L9330">9330</span>
<span id="L9331" rel="#L9331">9331</span>
<span id="L9332" rel="#L9332">9332</span>
<span id="L9333" rel="#L9333">9333</span>
<span id="L9334" rel="#L9334">9334</span>
<span id="L9335" rel="#L9335">9335</span>
<span id="L9336" rel="#L9336">9336</span>
<span id="L9337" rel="#L9337">9337</span>
<span id="L9338" rel="#L9338">9338</span>
<span id="L9339" rel="#L9339">9339</span>
<span id="L9340" rel="#L9340">9340</span>
<span id="L9341" rel="#L9341">9341</span>
<span id="L9342" rel="#L9342">9342</span>
<span id="L9343" rel="#L9343">9343</span>
<span id="L9344" rel="#L9344">9344</span>
<span id="L9345" rel="#L9345">9345</span>
<span id="L9346" rel="#L9346">9346</span>
<span id="L9347" rel="#L9347">9347</span>
<span id="L9348" rel="#L9348">9348</span>
<span id="L9349" rel="#L9349">9349</span>
<span id="L9350" rel="#L9350">9350</span>
<span id="L9351" rel="#L9351">9351</span>
<span id="L9352" rel="#L9352">9352</span>
<span id="L9353" rel="#L9353">9353</span>
<span id="L9354" rel="#L9354">9354</span>
<span id="L9355" rel="#L9355">9355</span>
<span id="L9356" rel="#L9356">9356</span>
<span id="L9357" rel="#L9357">9357</span>
<span id="L9358" rel="#L9358">9358</span>
<span id="L9359" rel="#L9359">9359</span>
<span id="L9360" rel="#L9360">9360</span>
<span id="L9361" rel="#L9361">9361</span>
<span id="L9362" rel="#L9362">9362</span>
<span id="L9363" rel="#L9363">9363</span>
<span id="L9364" rel="#L9364">9364</span>
<span id="L9365" rel="#L9365">9365</span>
<span id="L9366" rel="#L9366">9366</span>
<span id="L9367" rel="#L9367">9367</span>
<span id="L9368" rel="#L9368">9368</span>
<span id="L9369" rel="#L9369">9369</span>
<span id="L9370" rel="#L9370">9370</span>
<span id="L9371" rel="#L9371">9371</span>
<span id="L9372" rel="#L9372">9372</span>
<span id="L9373" rel="#L9373">9373</span>
<span id="L9374" rel="#L9374">9374</span>
<span id="L9375" rel="#L9375">9375</span>
<span id="L9376" rel="#L9376">9376</span>
<span id="L9377" rel="#L9377">9377</span>
<span id="L9378" rel="#L9378">9378</span>
<span id="L9379" rel="#L9379">9379</span>
<span id="L9380" rel="#L9380">9380</span>
<span id="L9381" rel="#L9381">9381</span>
<span id="L9382" rel="#L9382">9382</span>
<span id="L9383" rel="#L9383">9383</span>
<span id="L9384" rel="#L9384">9384</span>
<span id="L9385" rel="#L9385">9385</span>
<span id="L9386" rel="#L9386">9386</span>
<span id="L9387" rel="#L9387">9387</span>
<span id="L9388" rel="#L9388">9388</span>
<span id="L9389" rel="#L9389">9389</span>
<span id="L9390" rel="#L9390">9390</span>
<span id="L9391" rel="#L9391">9391</span>
<span id="L9392" rel="#L9392">9392</span>
<span id="L9393" rel="#L9393">9393</span>
<span id="L9394" rel="#L9394">9394</span>
<span id="L9395" rel="#L9395">9395</span>
<span id="L9396" rel="#L9396">9396</span>
<span id="L9397" rel="#L9397">9397</span>
<span id="L9398" rel="#L9398">9398</span>
<span id="L9399" rel="#L9399">9399</span>
<span id="L9400" rel="#L9400">9400</span>
<span id="L9401" rel="#L9401">9401</span>
<span id="L9402" rel="#L9402">9402</span>
<span id="L9403" rel="#L9403">9403</span>
<span id="L9404" rel="#L9404">9404</span>
<span id="L9405" rel="#L9405">9405</span>
<span id="L9406" rel="#L9406">9406</span>
<span id="L9407" rel="#L9407">9407</span>
<span id="L9408" rel="#L9408">9408</span>
<span id="L9409" rel="#L9409">9409</span>
<span id="L9410" rel="#L9410">9410</span>
<span id="L9411" rel="#L9411">9411</span>
<span id="L9412" rel="#L9412">9412</span>
<span id="L9413" rel="#L9413">9413</span>
<span id="L9414" rel="#L9414">9414</span>
<span id="L9415" rel="#L9415">9415</span>
<span id="L9416" rel="#L9416">9416</span>
<span id="L9417" rel="#L9417">9417</span>
<span id="L9418" rel="#L9418">9418</span>
<span id="L9419" rel="#L9419">9419</span>
<span id="L9420" rel="#L9420">9420</span>
<span id="L9421" rel="#L9421">9421</span>
<span id="L9422" rel="#L9422">9422</span>
<span id="L9423" rel="#L9423">9423</span>
<span id="L9424" rel="#L9424">9424</span>
<span id="L9425" rel="#L9425">9425</span>
<span id="L9426" rel="#L9426">9426</span>
<span id="L9427" rel="#L9427">9427</span>
<span id="L9428" rel="#L9428">9428</span>
<span id="L9429" rel="#L9429">9429</span>
<span id="L9430" rel="#L9430">9430</span>
<span id="L9431" rel="#L9431">9431</span>
<span id="L9432" rel="#L9432">9432</span>
<span id="L9433" rel="#L9433">9433</span>
<span id="L9434" rel="#L9434">9434</span>
<span id="L9435" rel="#L9435">9435</span>
<span id="L9436" rel="#L9436">9436</span>
<span id="L9437" rel="#L9437">9437</span>
<span id="L9438" rel="#L9438">9438</span>
<span id="L9439" rel="#L9439">9439</span>
<span id="L9440" rel="#L9440">9440</span>
<span id="L9441" rel="#L9441">9441</span>
<span id="L9442" rel="#L9442">9442</span>
<span id="L9443" rel="#L9443">9443</span>
<span id="L9444" rel="#L9444">9444</span>
<span id="L9445" rel="#L9445">9445</span>
<span id="L9446" rel="#L9446">9446</span>
<span id="L9447" rel="#L9447">9447</span>
<span id="L9448" rel="#L9448">9448</span>
<span id="L9449" rel="#L9449">9449</span>
<span id="L9450" rel="#L9450">9450</span>
<span id="L9451" rel="#L9451">9451</span>
<span id="L9452" rel="#L9452">9452</span>
<span id="L9453" rel="#L9453">9453</span>
<span id="L9454" rel="#L9454">9454</span>
<span id="L9455" rel="#L9455">9455</span>
<span id="L9456" rel="#L9456">9456</span>
<span id="L9457" rel="#L9457">9457</span>
<span id="L9458" rel="#L9458">9458</span>
<span id="L9459" rel="#L9459">9459</span>
<span id="L9460" rel="#L9460">9460</span>
<span id="L9461" rel="#L9461">9461</span>
<span id="L9462" rel="#L9462">9462</span>
<span id="L9463" rel="#L9463">9463</span>
<span id="L9464" rel="#L9464">9464</span>
<span id="L9465" rel="#L9465">9465</span>
<span id="L9466" rel="#L9466">9466</span>
<span id="L9467" rel="#L9467">9467</span>
<span id="L9468" rel="#L9468">9468</span>
<span id="L9469" rel="#L9469">9469</span>
<span id="L9470" rel="#L9470">9470</span>
<span id="L9471" rel="#L9471">9471</span>
<span id="L9472" rel="#L9472">9472</span>
<span id="L9473" rel="#L9473">9473</span>
<span id="L9474" rel="#L9474">9474</span>
<span id="L9475" rel="#L9475">9475</span>
<span id="L9476" rel="#L9476">9476</span>
<span id="L9477" rel="#L9477">9477</span>
<span id="L9478" rel="#L9478">9478</span>
<span id="L9479" rel="#L9479">9479</span>
<span id="L9480" rel="#L9480">9480</span>
<span id="L9481" rel="#L9481">9481</span>
<span id="L9482" rel="#L9482">9482</span>
<span id="L9483" rel="#L9483">9483</span>
<span id="L9484" rel="#L9484">9484</span>
<span id="L9485" rel="#L9485">9485</span>
<span id="L9486" rel="#L9486">9486</span>
<span id="L9487" rel="#L9487">9487</span>
<span id="L9488" rel="#L9488">9488</span>
<span id="L9489" rel="#L9489">9489</span>
<span id="L9490" rel="#L9490">9490</span>
<span id="L9491" rel="#L9491">9491</span>
<span id="L9492" rel="#L9492">9492</span>
<span id="L9493" rel="#L9493">9493</span>
<span id="L9494" rel="#L9494">9494</span>
<span id="L9495" rel="#L9495">9495</span>
<span id="L9496" rel="#L9496">9496</span>
<span id="L9497" rel="#L9497">9497</span>
<span id="L9498" rel="#L9498">9498</span>
<span id="L9499" rel="#L9499">9499</span>
<span id="L9500" rel="#L9500">9500</span>
<span id="L9501" rel="#L9501">9501</span>
<span id="L9502" rel="#L9502">9502</span>
<span id="L9503" rel="#L9503">9503</span>
<span id="L9504" rel="#L9504">9504</span>
<span id="L9505" rel="#L9505">9505</span>
<span id="L9506" rel="#L9506">9506</span>
<span id="L9507" rel="#L9507">9507</span>
<span id="L9508" rel="#L9508">9508</span>
<span id="L9509" rel="#L9509">9509</span>
<span id="L9510" rel="#L9510">9510</span>
<span id="L9511" rel="#L9511">9511</span>
<span id="L9512" rel="#L9512">9512</span>
<span id="L9513" rel="#L9513">9513</span>
<span id="L9514" rel="#L9514">9514</span>
<span id="L9515" rel="#L9515">9515</span>
<span id="L9516" rel="#L9516">9516</span>
<span id="L9517" rel="#L9517">9517</span>
<span id="L9518" rel="#L9518">9518</span>
<span id="L9519" rel="#L9519">9519</span>
<span id="L9520" rel="#L9520">9520</span>
<span id="L9521" rel="#L9521">9521</span>
<span id="L9522" rel="#L9522">9522</span>
<span id="L9523" rel="#L9523">9523</span>
<span id="L9524" rel="#L9524">9524</span>
<span id="L9525" rel="#L9525">9525</span>
<span id="L9526" rel="#L9526">9526</span>
<span id="L9527" rel="#L9527">9527</span>
<span id="L9528" rel="#L9528">9528</span>
<span id="L9529" rel="#L9529">9529</span>
<span id="L9530" rel="#L9530">9530</span>
<span id="L9531" rel="#L9531">9531</span>
<span id="L9532" rel="#L9532">9532</span>
<span id="L9533" rel="#L9533">9533</span>
<span id="L9534" rel="#L9534">9534</span>
<span id="L9535" rel="#L9535">9535</span>
<span id="L9536" rel="#L9536">9536</span>
<span id="L9537" rel="#L9537">9537</span>
<span id="L9538" rel="#L9538">9538</span>
<span id="L9539" rel="#L9539">9539</span>
<span id="L9540" rel="#L9540">9540</span>
<span id="L9541" rel="#L9541">9541</span>
<span id="L9542" rel="#L9542">9542</span>
<span id="L9543" rel="#L9543">9543</span>
<span id="L9544" rel="#L9544">9544</span>
<span id="L9545" rel="#L9545">9545</span>
<span id="L9546" rel="#L9546">9546</span>
<span id="L9547" rel="#L9547">9547</span>
<span id="L9548" rel="#L9548">9548</span>
<span id="L9549" rel="#L9549">9549</span>
<span id="L9550" rel="#L9550">9550</span>
<span id="L9551" rel="#L9551">9551</span>
<span id="L9552" rel="#L9552">9552</span>
<span id="L9553" rel="#L9553">9553</span>
<span id="L9554" rel="#L9554">9554</span>
<span id="L9555" rel="#L9555">9555</span>
<span id="L9556" rel="#L9556">9556</span>
<span id="L9557" rel="#L9557">9557</span>
<span id="L9558" rel="#L9558">9558</span>
<span id="L9559" rel="#L9559">9559</span>
<span id="L9560" rel="#L9560">9560</span>
<span id="L9561" rel="#L9561">9561</span>
<span id="L9562" rel="#L9562">9562</span>
<span id="L9563" rel="#L9563">9563</span>
<span id="L9564" rel="#L9564">9564</span>
<span id="L9565" rel="#L9565">9565</span>
<span id="L9566" rel="#L9566">9566</span>
<span id="L9567" rel="#L9567">9567</span>
<span id="L9568" rel="#L9568">9568</span>
<span id="L9569" rel="#L9569">9569</span>
<span id="L9570" rel="#L9570">9570</span>
<span id="L9571" rel="#L9571">9571</span>
<span id="L9572" rel="#L9572">9572</span>
<span id="L9573" rel="#L9573">9573</span>
<span id="L9574" rel="#L9574">9574</span>
<span id="L9575" rel="#L9575">9575</span>
<span id="L9576" rel="#L9576">9576</span>
<span id="L9577" rel="#L9577">9577</span>
<span id="L9578" rel="#L9578">9578</span>
<span id="L9579" rel="#L9579">9579</span>
<span id="L9580" rel="#L9580">9580</span>
<span id="L9581" rel="#L9581">9581</span>
<span id="L9582" rel="#L9582">9582</span>
<span id="L9583" rel="#L9583">9583</span>
<span id="L9584" rel="#L9584">9584</span>
<span id="L9585" rel="#L9585">9585</span>
<span id="L9586" rel="#L9586">9586</span>
<span id="L9587" rel="#L9587">9587</span>
<span id="L9588" rel="#L9588">9588</span>
<span id="L9589" rel="#L9589">9589</span>
<span id="L9590" rel="#L9590">9590</span>
<span id="L9591" rel="#L9591">9591</span>
<span id="L9592" rel="#L9592">9592</span>
<span id="L9593" rel="#L9593">9593</span>
<span id="L9594" rel="#L9594">9594</span>
<span id="L9595" rel="#L9595">9595</span>
<span id="L9596" rel="#L9596">9596</span>
<span id="L9597" rel="#L9597">9597</span>
<span id="L9598" rel="#L9598">9598</span>
<span id="L9599" rel="#L9599">9599</span>
<span id="L9600" rel="#L9600">9600</span>
<span id="L9601" rel="#L9601">9601</span>
<span id="L9602" rel="#L9602">9602</span>
<span id="L9603" rel="#L9603">9603</span>
<span id="L9604" rel="#L9604">9604</span>
<span id="L9605" rel="#L9605">9605</span>
<span id="L9606" rel="#L9606">9606</span>
<span id="L9607" rel="#L9607">9607</span>
<span id="L9608" rel="#L9608">9608</span>
<span id="L9609" rel="#L9609">9609</span>
<span id="L9610" rel="#L9610">9610</span>
<span id="L9611" rel="#L9611">9611</span>
<span id="L9612" rel="#L9612">9612</span>
<span id="L9613" rel="#L9613">9613</span>
<span id="L9614" rel="#L9614">9614</span>
<span id="L9615" rel="#L9615">9615</span>
<span id="L9616" rel="#L9616">9616</span>
<span id="L9617" rel="#L9617">9617</span>
<span id="L9618" rel="#L9618">9618</span>
<span id="L9619" rel="#L9619">9619</span>
<span id="L9620" rel="#L9620">9620</span>
<span id="L9621" rel="#L9621">9621</span>
<span id="L9622" rel="#L9622">9622</span>
<span id="L9623" rel="#L9623">9623</span>
<span id="L9624" rel="#L9624">9624</span>
<span id="L9625" rel="#L9625">9625</span>
<span id="L9626" rel="#L9626">9626</span>
<span id="L9627" rel="#L9627">9627</span>
<span id="L9628" rel="#L9628">9628</span>
<span id="L9629" rel="#L9629">9629</span>
<span id="L9630" rel="#L9630">9630</span>
<span id="L9631" rel="#L9631">9631</span>
<span id="L9632" rel="#L9632">9632</span>
<span id="L9633" rel="#L9633">9633</span>
<span id="L9634" rel="#L9634">9634</span>
<span id="L9635" rel="#L9635">9635</span>
<span id="L9636" rel="#L9636">9636</span>
<span id="L9637" rel="#L9637">9637</span>
<span id="L9638" rel="#L9638">9638</span>
<span id="L9639" rel="#L9639">9639</span>
<span id="L9640" rel="#L9640">9640</span>
<span id="L9641" rel="#L9641">9641</span>
<span id="L9642" rel="#L9642">9642</span>
<span id="L9643" rel="#L9643">9643</span>
<span id="L9644" rel="#L9644">9644</span>
<span id="L9645" rel="#L9645">9645</span>
<span id="L9646" rel="#L9646">9646</span>
<span id="L9647" rel="#L9647">9647</span>
<span id="L9648" rel="#L9648">9648</span>
<span id="L9649" rel="#L9649">9649</span>
<span id="L9650" rel="#L9650">9650</span>
<span id="L9651" rel="#L9651">9651</span>
<span id="L9652" rel="#L9652">9652</span>
<span id="L9653" rel="#L9653">9653</span>
<span id="L9654" rel="#L9654">9654</span>
<span id="L9655" rel="#L9655">9655</span>
<span id="L9656" rel="#L9656">9656</span>
<span id="L9657" rel="#L9657">9657</span>
<span id="L9658" rel="#L9658">9658</span>
<span id="L9659" rel="#L9659">9659</span>
<span id="L9660" rel="#L9660">9660</span>
<span id="L9661" rel="#L9661">9661</span>
<span id="L9662" rel="#L9662">9662</span>
<span id="L9663" rel="#L9663">9663</span>
<span id="L9664" rel="#L9664">9664</span>
<span id="L9665" rel="#L9665">9665</span>
<span id="L9666" rel="#L9666">9666</span>
<span id="L9667" rel="#L9667">9667</span>
<span id="L9668" rel="#L9668">9668</span>
<span id="L9669" rel="#L9669">9669</span>
<span id="L9670" rel="#L9670">9670</span>
<span id="L9671" rel="#L9671">9671</span>
<span id="L9672" rel="#L9672">9672</span>
<span id="L9673" rel="#L9673">9673</span>
<span id="L9674" rel="#L9674">9674</span>
<span id="L9675" rel="#L9675">9675</span>
<span id="L9676" rel="#L9676">9676</span>
<span id="L9677" rel="#L9677">9677</span>
<span id="L9678" rel="#L9678">9678</span>
<span id="L9679" rel="#L9679">9679</span>
<span id="L9680" rel="#L9680">9680</span>
<span id="L9681" rel="#L9681">9681</span>
<span id="L9682" rel="#L9682">9682</span>
<span id="L9683" rel="#L9683">9683</span>
<span id="L9684" rel="#L9684">9684</span>
<span id="L9685" rel="#L9685">9685</span>
<span id="L9686" rel="#L9686">9686</span>
<span id="L9687" rel="#L9687">9687</span>
<span id="L9688" rel="#L9688">9688</span>
<span id="L9689" rel="#L9689">9689</span>
<span id="L9690" rel="#L9690">9690</span>
<span id="L9691" rel="#L9691">9691</span>
<span id="L9692" rel="#L9692">9692</span>
<span id="L9693" rel="#L9693">9693</span>
<span id="L9694" rel="#L9694">9694</span>
<span id="L9695" rel="#L9695">9695</span>
<span id="L9696" rel="#L9696">9696</span>
<span id="L9697" rel="#L9697">9697</span>
<span id="L9698" rel="#L9698">9698</span>
<span id="L9699" rel="#L9699">9699</span>
<span id="L9700" rel="#L9700">9700</span>
<span id="L9701" rel="#L9701">9701</span>
<span id="L9702" rel="#L9702">9702</span>
<span id="L9703" rel="#L9703">9703</span>
<span id="L9704" rel="#L9704">9704</span>
<span id="L9705" rel="#L9705">9705</span>
<span id="L9706" rel="#L9706">9706</span>
<span id="L9707" rel="#L9707">9707</span>
<span id="L9708" rel="#L9708">9708</span>
<span id="L9709" rel="#L9709">9709</span>
<span id="L9710" rel="#L9710">9710</span>
<span id="L9711" rel="#L9711">9711</span>
<span id="L9712" rel="#L9712">9712</span>
<span id="L9713" rel="#L9713">9713</span>
<span id="L9714" rel="#L9714">9714</span>
<span id="L9715" rel="#L9715">9715</span>
<span id="L9716" rel="#L9716">9716</span>
<span id="L9717" rel="#L9717">9717</span>
<span id="L9718" rel="#L9718">9718</span>
<span id="L9719" rel="#L9719">9719</span>
<span id="L9720" rel="#L9720">9720</span>
<span id="L9721" rel="#L9721">9721</span>
<span id="L9722" rel="#L9722">9722</span>
<span id="L9723" rel="#L9723">9723</span>
<span id="L9724" rel="#L9724">9724</span>
<span id="L9725" rel="#L9725">9725</span>
<span id="L9726" rel="#L9726">9726</span>
<span id="L9727" rel="#L9727">9727</span>
<span id="L9728" rel="#L9728">9728</span>
<span id="L9729" rel="#L9729">9729</span>
<span id="L9730" rel="#L9730">9730</span>
<span id="L9731" rel="#L9731">9731</span>
<span id="L9732" rel="#L9732">9732</span>
<span id="L9733" rel="#L9733">9733</span>
<span id="L9734" rel="#L9734">9734</span>
<span id="L9735" rel="#L9735">9735</span>
<span id="L9736" rel="#L9736">9736</span>
<span id="L9737" rel="#L9737">9737</span>
<span id="L9738" rel="#L9738">9738</span>
<span id="L9739" rel="#L9739">9739</span>
<span id="L9740" rel="#L9740">9740</span>
<span id="L9741" rel="#L9741">9741</span>
<span id="L9742" rel="#L9742">9742</span>
<span id="L9743" rel="#L9743">9743</span>
<span id="L9744" rel="#L9744">9744</span>
<span id="L9745" rel="#L9745">9745</span>
<span id="L9746" rel="#L9746">9746</span>
<span id="L9747" rel="#L9747">9747</span>
<span id="L9748" rel="#L9748">9748</span>
<span id="L9749" rel="#L9749">9749</span>
<span id="L9750" rel="#L9750">9750</span>
<span id="L9751" rel="#L9751">9751</span>
<span id="L9752" rel="#L9752">9752</span>
<span id="L9753" rel="#L9753">9753</span>
<span id="L9754" rel="#L9754">9754</span>
<span id="L9755" rel="#L9755">9755</span>
<span id="L9756" rel="#L9756">9756</span>
<span id="L9757" rel="#L9757">9757</span>
<span id="L9758" rel="#L9758">9758</span>
<span id="L9759" rel="#L9759">9759</span>
<span id="L9760" rel="#L9760">9760</span>
<span id="L9761" rel="#L9761">9761</span>
<span id="L9762" rel="#L9762">9762</span>
<span id="L9763" rel="#L9763">9763</span>
<span id="L9764" rel="#L9764">9764</span>
<span id="L9765" rel="#L9765">9765</span>
<span id="L9766" rel="#L9766">9766</span>
<span id="L9767" rel="#L9767">9767</span>
<span id="L9768" rel="#L9768">9768</span>
<span id="L9769" rel="#L9769">9769</span>
<span id="L9770" rel="#L9770">9770</span>
<span id="L9771" rel="#L9771">9771</span>
<span id="L9772" rel="#L9772">9772</span>
<span id="L9773" rel="#L9773">9773</span>
<span id="L9774" rel="#L9774">9774</span>
<span id="L9775" rel="#L9775">9775</span>
<span id="L9776" rel="#L9776">9776</span>
<span id="L9777" rel="#L9777">9777</span>
<span id="L9778" rel="#L9778">9778</span>
<span id="L9779" rel="#L9779">9779</span>
<span id="L9780" rel="#L9780">9780</span>
<span id="L9781" rel="#L9781">9781</span>
<span id="L9782" rel="#L9782">9782</span>
<span id="L9783" rel="#L9783">9783</span>
<span id="L9784" rel="#L9784">9784</span>
<span id="L9785" rel="#L9785">9785</span>
<span id="L9786" rel="#L9786">9786</span>
<span id="L9787" rel="#L9787">9787</span>
<span id="L9788" rel="#L9788">9788</span>
<span id="L9789" rel="#L9789">9789</span>
<span id="L9790" rel="#L9790">9790</span>
<span id="L9791" rel="#L9791">9791</span>
<span id="L9792" rel="#L9792">9792</span>
<span id="L9793" rel="#L9793">9793</span>
<span id="L9794" rel="#L9794">9794</span>
<span id="L9795" rel="#L9795">9795</span>
<span id="L9796" rel="#L9796">9796</span>
<span id="L9797" rel="#L9797">9797</span>
<span id="L9798" rel="#L9798">9798</span>
<span id="L9799" rel="#L9799">9799</span>
<span id="L9800" rel="#L9800">9800</span>
<span id="L9801" rel="#L9801">9801</span>
<span id="L9802" rel="#L9802">9802</span>
<span id="L9803" rel="#L9803">9803</span>
<span id="L9804" rel="#L9804">9804</span>
<span id="L9805" rel="#L9805">9805</span>
<span id="L9806" rel="#L9806">9806</span>
<span id="L9807" rel="#L9807">9807</span>
<span id="L9808" rel="#L9808">9808</span>
<span id="L9809" rel="#L9809">9809</span>
<span id="L9810" rel="#L9810">9810</span>
<span id="L9811" rel="#L9811">9811</span>
<span id="L9812" rel="#L9812">9812</span>
<span id="L9813" rel="#L9813">9813</span>
<span id="L9814" rel="#L9814">9814</span>
<span id="L9815" rel="#L9815">9815</span>
<span id="L9816" rel="#L9816">9816</span>
<span id="L9817" rel="#L9817">9817</span>
<span id="L9818" rel="#L9818">9818</span>
<span id="L9819" rel="#L9819">9819</span>
<span id="L9820" rel="#L9820">9820</span>
<span id="L9821" rel="#L9821">9821</span>
<span id="L9822" rel="#L9822">9822</span>
<span id="L9823" rel="#L9823">9823</span>
<span id="L9824" rel="#L9824">9824</span>
<span id="L9825" rel="#L9825">9825</span>
<span id="L9826" rel="#L9826">9826</span>
<span id="L9827" rel="#L9827">9827</span>
<span id="L9828" rel="#L9828">9828</span>
<span id="L9829" rel="#L9829">9829</span>
<span id="L9830" rel="#L9830">9830</span>
<span id="L9831" rel="#L9831">9831</span>
<span id="L9832" rel="#L9832">9832</span>
<span id="L9833" rel="#L9833">9833</span>
<span id="L9834" rel="#L9834">9834</span>
<span id="L9835" rel="#L9835">9835</span>
<span id="L9836" rel="#L9836">9836</span>
<span id="L9837" rel="#L9837">9837</span>
<span id="L9838" rel="#L9838">9838</span>
<span id="L9839" rel="#L9839">9839</span>
<span id="L9840" rel="#L9840">9840</span>
<span id="L9841" rel="#L9841">9841</span>
<span id="L9842" rel="#L9842">9842</span>
<span id="L9843" rel="#L9843">9843</span>
<span id="L9844" rel="#L9844">9844</span>
<span id="L9845" rel="#L9845">9845</span>
<span id="L9846" rel="#L9846">9846</span>
<span id="L9847" rel="#L9847">9847</span>
<span id="L9848" rel="#L9848">9848</span>
<span id="L9849" rel="#L9849">9849</span>
<span id="L9850" rel="#L9850">9850</span>
<span id="L9851" rel="#L9851">9851</span>
<span id="L9852" rel="#L9852">9852</span>
<span id="L9853" rel="#L9853">9853</span>
<span id="L9854" rel="#L9854">9854</span>
<span id="L9855" rel="#L9855">9855</span>
<span id="L9856" rel="#L9856">9856</span>
<span id="L9857" rel="#L9857">9857</span>
<span id="L9858" rel="#L9858">9858</span>
<span id="L9859" rel="#L9859">9859</span>
<span id="L9860" rel="#L9860">9860</span>
<span id="L9861" rel="#L9861">9861</span>
<span id="L9862" rel="#L9862">9862</span>
<span id="L9863" rel="#L9863">9863</span>
<span id="L9864" rel="#L9864">9864</span>
<span id="L9865" rel="#L9865">9865</span>
<span id="L9866" rel="#L9866">9866</span>
<span id="L9867" rel="#L9867">9867</span>
<span id="L9868" rel="#L9868">9868</span>
<span id="L9869" rel="#L9869">9869</span>
<span id="L9870" rel="#L9870">9870</span>
<span id="L9871" rel="#L9871">9871</span>
<span id="L9872" rel="#L9872">9872</span>
<span id="L9873" rel="#L9873">9873</span>
<span id="L9874" rel="#L9874">9874</span>
<span id="L9875" rel="#L9875">9875</span>
<span id="L9876" rel="#L9876">9876</span>
<span id="L9877" rel="#L9877">9877</span>
<span id="L9878" rel="#L9878">9878</span>
<span id="L9879" rel="#L9879">9879</span>
<span id="L9880" rel="#L9880">9880</span>
<span id="L9881" rel="#L9881">9881</span>
<span id="L9882" rel="#L9882">9882</span>
<span id="L9883" rel="#L9883">9883</span>
<span id="L9884" rel="#L9884">9884</span>
<span id="L9885" rel="#L9885">9885</span>
<span id="L9886" rel="#L9886">9886</span>
<span id="L9887" rel="#L9887">9887</span>
<span id="L9888" rel="#L9888">9888</span>
<span id="L9889" rel="#L9889">9889</span>
<span id="L9890" rel="#L9890">9890</span>
<span id="L9891" rel="#L9891">9891</span>
<span id="L9892" rel="#L9892">9892</span>
<span id="L9893" rel="#L9893">9893</span>
<span id="L9894" rel="#L9894">9894</span>
<span id="L9895" rel="#L9895">9895</span>
<span id="L9896" rel="#L9896">9896</span>
<span id="L9897" rel="#L9897">9897</span>
<span id="L9898" rel="#L9898">9898</span>
<span id="L9899" rel="#L9899">9899</span>
<span id="L9900" rel="#L9900">9900</span>
<span id="L9901" rel="#L9901">9901</span>
<span id="L9902" rel="#L9902">9902</span>
<span id="L9903" rel="#L9903">9903</span>
<span id="L9904" rel="#L9904">9904</span>
<span id="L9905" rel="#L9905">9905</span>
<span id="L9906" rel="#L9906">9906</span>
<span id="L9907" rel="#L9907">9907</span>
<span id="L9908" rel="#L9908">9908</span>
<span id="L9909" rel="#L9909">9909</span>
<span id="L9910" rel="#L9910">9910</span>
<span id="L9911" rel="#L9911">9911</span>
<span id="L9912" rel="#L9912">9912</span>
<span id="L9913" rel="#L9913">9913</span>
<span id="L9914" rel="#L9914">9914</span>
<span id="L9915" rel="#L9915">9915</span>
<span id="L9916" rel="#L9916">9916</span>
<span id="L9917" rel="#L9917">9917</span>
<span id="L9918" rel="#L9918">9918</span>
<span id="L9919" rel="#L9919">9919</span>
<span id="L9920" rel="#L9920">9920</span>
<span id="L9921" rel="#L9921">9921</span>
<span id="L9922" rel="#L9922">9922</span>
<span id="L9923" rel="#L9923">9923</span>
<span id="L9924" rel="#L9924">9924</span>
<span id="L9925" rel="#L9925">9925</span>
<span id="L9926" rel="#L9926">9926</span>
<span id="L9927" rel="#L9927">9927</span>
<span id="L9928" rel="#L9928">9928</span>
<span id="L9929" rel="#L9929">9929</span>
<span id="L9930" rel="#L9930">9930</span>
<span id="L9931" rel="#L9931">9931</span>
<span id="L9932" rel="#L9932">9932</span>
<span id="L9933" rel="#L9933">9933</span>
<span id="L9934" rel="#L9934">9934</span>
<span id="L9935" rel="#L9935">9935</span>
<span id="L9936" rel="#L9936">9936</span>
<span id="L9937" rel="#L9937">9937</span>
<span id="L9938" rel="#L9938">9938</span>
<span id="L9939" rel="#L9939">9939</span>
<span id="L9940" rel="#L9940">9940</span>
<span id="L9941" rel="#L9941">9941</span>
<span id="L9942" rel="#L9942">9942</span>
<span id="L9943" rel="#L9943">9943</span>
<span id="L9944" rel="#L9944">9944</span>
<span id="L9945" rel="#L9945">9945</span>
<span id="L9946" rel="#L9946">9946</span>
<span id="L9947" rel="#L9947">9947</span>
<span id="L9948" rel="#L9948">9948</span>
<span id="L9949" rel="#L9949">9949</span>
<span id="L9950" rel="#L9950">9950</span>
<span id="L9951" rel="#L9951">9951</span>
<span id="L9952" rel="#L9952">9952</span>
<span id="L9953" rel="#L9953">9953</span>
<span id="L9954" rel="#L9954">9954</span>
<span id="L9955" rel="#L9955">9955</span>
<span id="L9956" rel="#L9956">9956</span>
<span id="L9957" rel="#L9957">9957</span>
<span id="L9958" rel="#L9958">9958</span>
<span id="L9959" rel="#L9959">9959</span>
<span id="L9960" rel="#L9960">9960</span>
<span id="L9961" rel="#L9961">9961</span>
<span id="L9962" rel="#L9962">9962</span>
<span id="L9963" rel="#L9963">9963</span>
<span id="L9964" rel="#L9964">9964</span>
<span id="L9965" rel="#L9965">9965</span>
<span id="L9966" rel="#L9966">9966</span>
<span id="L9967" rel="#L9967">9967</span>
<span id="L9968" rel="#L9968">9968</span>
<span id="L9969" rel="#L9969">9969</span>
<span id="L9970" rel="#L9970">9970</span>
<span id="L9971" rel="#L9971">9971</span>
<span id="L9972" rel="#L9972">9972</span>
<span id="L9973" rel="#L9973">9973</span>
<span id="L9974" rel="#L9974">9974</span>
<span id="L9975" rel="#L9975">9975</span>
<span id="L9976" rel="#L9976">9976</span>
<span id="L9977" rel="#L9977">9977</span>
<span id="L9978" rel="#L9978">9978</span>
<span id="L9979" rel="#L9979">9979</span>
<span id="L9980" rel="#L9980">9980</span>
<span id="L9981" rel="#L9981">9981</span>
<span id="L9982" rel="#L9982">9982</span>
<span id="L9983" rel="#L9983">9983</span>
<span id="L9984" rel="#L9984">9984</span>
<span id="L9985" rel="#L9985">9985</span>
<span id="L9986" rel="#L9986">9986</span>
<span id="L9987" rel="#L9987">9987</span>
<span id="L9988" rel="#L9988">9988</span>
<span id="L9989" rel="#L9989">9989</span>
<span id="L9990" rel="#L9990">9990</span>
<span id="L9991" rel="#L9991">9991</span>
<span id="L9992" rel="#L9992">9992</span>
<span id="L9993" rel="#L9993">9993</span>
<span id="L9994" rel="#L9994">9994</span>
<span id="L9995" rel="#L9995">9995</span>
<span id="L9996" rel="#L9996">9996</span>
<span id="L9997" rel="#L9997">9997</span>
<span id="L9998" rel="#L9998">9998</span>
<span id="L9999" rel="#L9999">9999</span>
<span id="L10000" rel="#L10000">10000</span>
<span id="L10001" rel="#L10001">10001</span>
<span id="L10002" rel="#L10002">10002</span>
<span id="L10003" rel="#L10003">10003</span>
<span id="L10004" rel="#L10004">10004</span>
<span id="L10005" rel="#L10005">10005</span>
<span id="L10006" rel="#L10006">10006</span>
<span id="L10007" rel="#L10007">10007</span>
<span id="L10008" rel="#L10008">10008</span>
<span id="L10009" rel="#L10009">10009</span>
<span id="L10010" rel="#L10010">10010</span>
<span id="L10011" rel="#L10011">10011</span>
<span id="L10012" rel="#L10012">10012</span>
<span id="L10013" rel="#L10013">10013</span>
<span id="L10014" rel="#L10014">10014</span>
<span id="L10015" rel="#L10015">10015</span>
<span id="L10016" rel="#L10016">10016</span>
<span id="L10017" rel="#L10017">10017</span>
<span id="L10018" rel="#L10018">10018</span>
<span id="L10019" rel="#L10019">10019</span>
<span id="L10020" rel="#L10020">10020</span>
<span id="L10021" rel="#L10021">10021</span>
<span id="L10022" rel="#L10022">10022</span>
<span id="L10023" rel="#L10023">10023</span>
<span id="L10024" rel="#L10024">10024</span>
<span id="L10025" rel="#L10025">10025</span>
<span id="L10026" rel="#L10026">10026</span>
<span id="L10027" rel="#L10027">10027</span>
<span id="L10028" rel="#L10028">10028</span>
<span id="L10029" rel="#L10029">10029</span>
<span id="L10030" rel="#L10030">10030</span>
<span id="L10031" rel="#L10031">10031</span>
<span id="L10032" rel="#L10032">10032</span>
<span id="L10033" rel="#L10033">10033</span>
<span id="L10034" rel="#L10034">10034</span>
<span id="L10035" rel="#L10035">10035</span>
<span id="L10036" rel="#L10036">10036</span>
<span id="L10037" rel="#L10037">10037</span>
<span id="L10038" rel="#L10038">10038</span>
<span id="L10039" rel="#L10039">10039</span>
<span id="L10040" rel="#L10040">10040</span>
<span id="L10041" rel="#L10041">10041</span>
<span id="L10042" rel="#L10042">10042</span>
<span id="L10043" rel="#L10043">10043</span>
<span id="L10044" rel="#L10044">10044</span>
<span id="L10045" rel="#L10045">10045</span>
<span id="L10046" rel="#L10046">10046</span>
<span id="L10047" rel="#L10047">10047</span>
<span id="L10048" rel="#L10048">10048</span>
<span id="L10049" rel="#L10049">10049</span>
<span id="L10050" rel="#L10050">10050</span>
<span id="L10051" rel="#L10051">10051</span>
<span id="L10052" rel="#L10052">10052</span>
<span id="L10053" rel="#L10053">10053</span>
<span id="L10054" rel="#L10054">10054</span>
<span id="L10055" rel="#L10055">10055</span>
<span id="L10056" rel="#L10056">10056</span>
<span id="L10057" rel="#L10057">10057</span>
<span id="L10058" rel="#L10058">10058</span>
<span id="L10059" rel="#L10059">10059</span>
<span id="L10060" rel="#L10060">10060</span>
<span id="L10061" rel="#L10061">10061</span>
<span id="L10062" rel="#L10062">10062</span>
<span id="L10063" rel="#L10063">10063</span>
<span id="L10064" rel="#L10064">10064</span>
<span id="L10065" rel="#L10065">10065</span>
<span id="L10066" rel="#L10066">10066</span>
<span id="L10067" rel="#L10067">10067</span>
<span id="L10068" rel="#L10068">10068</span>
<span id="L10069" rel="#L10069">10069</span>
<span id="L10070" rel="#L10070">10070</span>
<span id="L10071" rel="#L10071">10071</span>
<span id="L10072" rel="#L10072">10072</span>
<span id="L10073" rel="#L10073">10073</span>
<span id="L10074" rel="#L10074">10074</span>
<span id="L10075" rel="#L10075">10075</span>
<span id="L10076" rel="#L10076">10076</span>
<span id="L10077" rel="#L10077">10077</span>
<span id="L10078" rel="#L10078">10078</span>
<span id="L10079" rel="#L10079">10079</span>
<span id="L10080" rel="#L10080">10080</span>
<span id="L10081" rel="#L10081">10081</span>
<span id="L10082" rel="#L10082">10082</span>
<span id="L10083" rel="#L10083">10083</span>
<span id="L10084" rel="#L10084">10084</span>
<span id="L10085" rel="#L10085">10085</span>
<span id="L10086" rel="#L10086">10086</span>
<span id="L10087" rel="#L10087">10087</span>
<span id="L10088" rel="#L10088">10088</span>
<span id="L10089" rel="#L10089">10089</span>
<span id="L10090" rel="#L10090">10090</span>
<span id="L10091" rel="#L10091">10091</span>
<span id="L10092" rel="#L10092">10092</span>
<span id="L10093" rel="#L10093">10093</span>
<span id="L10094" rel="#L10094">10094</span>
<span id="L10095" rel="#L10095">10095</span>
<span id="L10096" rel="#L10096">10096</span>
<span id="L10097" rel="#L10097">10097</span>
<span id="L10098" rel="#L10098">10098</span>
<span id="L10099" rel="#L10099">10099</span>
<span id="L10100" rel="#L10100">10100</span>
<span id="L10101" rel="#L10101">10101</span>
<span id="L10102" rel="#L10102">10102</span>
<span id="L10103" rel="#L10103">10103</span>
<span id="L10104" rel="#L10104">10104</span>
<span id="L10105" rel="#L10105">10105</span>
<span id="L10106" rel="#L10106">10106</span>
<span id="L10107" rel="#L10107">10107</span>
<span id="L10108" rel="#L10108">10108</span>
<span id="L10109" rel="#L10109">10109</span>
<span id="L10110" rel="#L10110">10110</span>
<span id="L10111" rel="#L10111">10111</span>
<span id="L10112" rel="#L10112">10112</span>
<span id="L10113" rel="#L10113">10113</span>
<span id="L10114" rel="#L10114">10114</span>
<span id="L10115" rel="#L10115">10115</span>
<span id="L10116" rel="#L10116">10116</span>
<span id="L10117" rel="#L10117">10117</span>
<span id="L10118" rel="#L10118">10118</span>
<span id="L10119" rel="#L10119">10119</span>
<span id="L10120" rel="#L10120">10120</span>
<span id="L10121" rel="#L10121">10121</span>
<span id="L10122" rel="#L10122">10122</span>
<span id="L10123" rel="#L10123">10123</span>
<span id="L10124" rel="#L10124">10124</span>
<span id="L10125" rel="#L10125">10125</span>
<span id="L10126" rel="#L10126">10126</span>
<span id="L10127" rel="#L10127">10127</span>
<span id="L10128" rel="#L10128">10128</span>
<span id="L10129" rel="#L10129">10129</span>
<span id="L10130" rel="#L10130">10130</span>
<span id="L10131" rel="#L10131">10131</span>
<span id="L10132" rel="#L10132">10132</span>
<span id="L10133" rel="#L10133">10133</span>
<span id="L10134" rel="#L10134">10134</span>
<span id="L10135" rel="#L10135">10135</span>
<span id="L10136" rel="#L10136">10136</span>
<span id="L10137" rel="#L10137">10137</span>
<span id="L10138" rel="#L10138">10138</span>
<span id="L10139" rel="#L10139">10139</span>
<span id="L10140" rel="#L10140">10140</span>
<span id="L10141" rel="#L10141">10141</span>
<span id="L10142" rel="#L10142">10142</span>
<span id="L10143" rel="#L10143">10143</span>
<span id="L10144" rel="#L10144">10144</span>
<span id="L10145" rel="#L10145">10145</span>
<span id="L10146" rel="#L10146">10146</span>
<span id="L10147" rel="#L10147">10147</span>
<span id="L10148" rel="#L10148">10148</span>
<span id="L10149" rel="#L10149">10149</span>
<span id="L10150" rel="#L10150">10150</span>
<span id="L10151" rel="#L10151">10151</span>
<span id="L10152" rel="#L10152">10152</span>
<span id="L10153" rel="#L10153">10153</span>
<span id="L10154" rel="#L10154">10154</span>
<span id="L10155" rel="#L10155">10155</span>
<span id="L10156" rel="#L10156">10156</span>
<span id="L10157" rel="#L10157">10157</span>
<span id="L10158" rel="#L10158">10158</span>
<span id="L10159" rel="#L10159">10159</span>
<span id="L10160" rel="#L10160">10160</span>
<span id="L10161" rel="#L10161">10161</span>
<span id="L10162" rel="#L10162">10162</span>
<span id="L10163" rel="#L10163">10163</span>
<span id="L10164" rel="#L10164">10164</span>
<span id="L10165" rel="#L10165">10165</span>
<span id="L10166" rel="#L10166">10166</span>
<span id="L10167" rel="#L10167">10167</span>
<span id="L10168" rel="#L10168">10168</span>
<span id="L10169" rel="#L10169">10169</span>
<span id="L10170" rel="#L10170">10170</span>
<span id="L10171" rel="#L10171">10171</span>
<span id="L10172" rel="#L10172">10172</span>
<span id="L10173" rel="#L10173">10173</span>
<span id="L10174" rel="#L10174">10174</span>
<span id="L10175" rel="#L10175">10175</span>
<span id="L10176" rel="#L10176">10176</span>
<span id="L10177" rel="#L10177">10177</span>
<span id="L10178" rel="#L10178">10178</span>
<span id="L10179" rel="#L10179">10179</span>
<span id="L10180" rel="#L10180">10180</span>
<span id="L10181" rel="#L10181">10181</span>
<span id="L10182" rel="#L10182">10182</span>
<span id="L10183" rel="#L10183">10183</span>
<span id="L10184" rel="#L10184">10184</span>
<span id="L10185" rel="#L10185">10185</span>
<span id="L10186" rel="#L10186">10186</span>
<span id="L10187" rel="#L10187">10187</span>
<span id="L10188" rel="#L10188">10188</span>
<span id="L10189" rel="#L10189">10189</span>
<span id="L10190" rel="#L10190">10190</span>
<span id="L10191" rel="#L10191">10191</span>
<span id="L10192" rel="#L10192">10192</span>
<span id="L10193" rel="#L10193">10193</span>
<span id="L10194" rel="#L10194">10194</span>
<span id="L10195" rel="#L10195">10195</span>
<span id="L10196" rel="#L10196">10196</span>
<span id="L10197" rel="#L10197">10197</span>
<span id="L10198" rel="#L10198">10198</span>
<span id="L10199" rel="#L10199">10199</span>
<span id="L10200" rel="#L10200">10200</span>
<span id="L10201" rel="#L10201">10201</span>
<span id="L10202" rel="#L10202">10202</span>
<span id="L10203" rel="#L10203">10203</span>
<span id="L10204" rel="#L10204">10204</span>
<span id="L10205" rel="#L10205">10205</span>
<span id="L10206" rel="#L10206">10206</span>
<span id="L10207" rel="#L10207">10207</span>
<span id="L10208" rel="#L10208">10208</span>
<span id="L10209" rel="#L10209">10209</span>
<span id="L10210" rel="#L10210">10210</span>
<span id="L10211" rel="#L10211">10211</span>
<span id="L10212" rel="#L10212">10212</span>
<span id="L10213" rel="#L10213">10213</span>
<span id="L10214" rel="#L10214">10214</span>
<span id="L10215" rel="#L10215">10215</span>
<span id="L10216" rel="#L10216">10216</span>
<span id="L10217" rel="#L10217">10217</span>
<span id="L10218" rel="#L10218">10218</span>
<span id="L10219" rel="#L10219">10219</span>
<span id="L10220" rel="#L10220">10220</span>
<span id="L10221" rel="#L10221">10221</span>
<span id="L10222" rel="#L10222">10222</span>
<span id="L10223" rel="#L10223">10223</span>
<span id="L10224" rel="#L10224">10224</span>
<span id="L10225" rel="#L10225">10225</span>
<span id="L10226" rel="#L10226">10226</span>
<span id="L10227" rel="#L10227">10227</span>
<span id="L10228" rel="#L10228">10228</span>
<span id="L10229" rel="#L10229">10229</span>
<span id="L10230" rel="#L10230">10230</span>
<span id="L10231" rel="#L10231">10231</span>
<span id="L10232" rel="#L10232">10232</span>
<span id="L10233" rel="#L10233">10233</span>
<span id="L10234" rel="#L10234">10234</span>
<span id="L10235" rel="#L10235">10235</span>
<span id="L10236" rel="#L10236">10236</span>
<span id="L10237" rel="#L10237">10237</span>
<span id="L10238" rel="#L10238">10238</span>
<span id="L10239" rel="#L10239">10239</span>
<span id="L10240" rel="#L10240">10240</span>
<span id="L10241" rel="#L10241">10241</span>
<span id="L10242" rel="#L10242">10242</span>
<span id="L10243" rel="#L10243">10243</span>
<span id="L10244" rel="#L10244">10244</span>
<span id="L10245" rel="#L10245">10245</span>
<span id="L10246" rel="#L10246">10246</span>
<span id="L10247" rel="#L10247">10247</span>
<span id="L10248" rel="#L10248">10248</span>
<span id="L10249" rel="#L10249">10249</span>
<span id="L10250" rel="#L10250">10250</span>
<span id="L10251" rel="#L10251">10251</span>
<span id="L10252" rel="#L10252">10252</span>
<span id="L10253" rel="#L10253">10253</span>
<span id="L10254" rel="#L10254">10254</span>
<span id="L10255" rel="#L10255">10255</span>
<span id="L10256" rel="#L10256">10256</span>
<span id="L10257" rel="#L10257">10257</span>
<span id="L10258" rel="#L10258">10258</span>
<span id="L10259" rel="#L10259">10259</span>
<span id="L10260" rel="#L10260">10260</span>
<span id="L10261" rel="#L10261">10261</span>
<span id="L10262" rel="#L10262">10262</span>
<span id="L10263" rel="#L10263">10263</span>
<span id="L10264" rel="#L10264">10264</span>
<span id="L10265" rel="#L10265">10265</span>
<span id="L10266" rel="#L10266">10266</span>
<span id="L10267" rel="#L10267">10267</span>
<span id="L10268" rel="#L10268">10268</span>
<span id="L10269" rel="#L10269">10269</span>
<span id="L10270" rel="#L10270">10270</span>
<span id="L10271" rel="#L10271">10271</span>
<span id="L10272" rel="#L10272">10272</span>
<span id="L10273" rel="#L10273">10273</span>
<span id="L10274" rel="#L10274">10274</span>
<span id="L10275" rel="#L10275">10275</span>
<span id="L10276" rel="#L10276">10276</span>
<span id="L10277" rel="#L10277">10277</span>
<span id="L10278" rel="#L10278">10278</span>
<span id="L10279" rel="#L10279">10279</span>
<span id="L10280" rel="#L10280">10280</span>
<span id="L10281" rel="#L10281">10281</span>
<span id="L10282" rel="#L10282">10282</span>
<span id="L10283" rel="#L10283">10283</span>
<span id="L10284" rel="#L10284">10284</span>
<span id="L10285" rel="#L10285">10285</span>
<span id="L10286" rel="#L10286">10286</span>
<span id="L10287" rel="#L10287">10287</span>
<span id="L10288" rel="#L10288">10288</span>
<span id="L10289" rel="#L10289">10289</span>
<span id="L10290" rel="#L10290">10290</span>
<span id="L10291" rel="#L10291">10291</span>
<span id="L10292" rel="#L10292">10292</span>
<span id="L10293" rel="#L10293">10293</span>
<span id="L10294" rel="#L10294">10294</span>
<span id="L10295" rel="#L10295">10295</span>
<span id="L10296" rel="#L10296">10296</span>
<span id="L10297" rel="#L10297">10297</span>
<span id="L10298" rel="#L10298">10298</span>
<span id="L10299" rel="#L10299">10299</span>
<span id="L10300" rel="#L10300">10300</span>
<span id="L10301" rel="#L10301">10301</span>
<span id="L10302" rel="#L10302">10302</span>
<span id="L10303" rel="#L10303">10303</span>
<span id="L10304" rel="#L10304">10304</span>
<span id="L10305" rel="#L10305">10305</span>
<span id="L10306" rel="#L10306">10306</span>
<span id="L10307" rel="#L10307">10307</span>
<span id="L10308" rel="#L10308">10308</span>
<span id="L10309" rel="#L10309">10309</span>
<span id="L10310" rel="#L10310">10310</span>
<span id="L10311" rel="#L10311">10311</span>
<span id="L10312" rel="#L10312">10312</span>
<span id="L10313" rel="#L10313">10313</span>
<span id="L10314" rel="#L10314">10314</span>
<span id="L10315" rel="#L10315">10315</span>
<span id="L10316" rel="#L10316">10316</span>
<span id="L10317" rel="#L10317">10317</span>
<span id="L10318" rel="#L10318">10318</span>
<span id="L10319" rel="#L10319">10319</span>
<span id="L10320" rel="#L10320">10320</span>
<span id="L10321" rel="#L10321">10321</span>
<span id="L10322" rel="#L10322">10322</span>
<span id="L10323" rel="#L10323">10323</span>
<span id="L10324" rel="#L10324">10324</span>
<span id="L10325" rel="#L10325">10325</span>
<span id="L10326" rel="#L10326">10326</span>
<span id="L10327" rel="#L10327">10327</span>
<span id="L10328" rel="#L10328">10328</span>
<span id="L10329" rel="#L10329">10329</span>
<span id="L10330" rel="#L10330">10330</span>
<span id="L10331" rel="#L10331">10331</span>
<span id="L10332" rel="#L10332">10332</span>
<span id="L10333" rel="#L10333">10333</span>
<span id="L10334" rel="#L10334">10334</span>
<span id="L10335" rel="#L10335">10335</span>
<span id="L10336" rel="#L10336">10336</span>
<span id="L10337" rel="#L10337">10337</span>
<span id="L10338" rel="#L10338">10338</span>
<span id="L10339" rel="#L10339">10339</span>
<span id="L10340" rel="#L10340">10340</span>
<span id="L10341" rel="#L10341">10341</span>
<span id="L10342" rel="#L10342">10342</span>
<span id="L10343" rel="#L10343">10343</span>
<span id="L10344" rel="#L10344">10344</span>
<span id="L10345" rel="#L10345">10345</span>
<span id="L10346" rel="#L10346">10346</span>
<span id="L10347" rel="#L10347">10347</span>
<span id="L10348" rel="#L10348">10348</span>
<span id="L10349" rel="#L10349">10349</span>
<span id="L10350" rel="#L10350">10350</span>
<span id="L10351" rel="#L10351">10351</span>
<span id="L10352" rel="#L10352">10352</span>
<span id="L10353" rel="#L10353">10353</span>
<span id="L10354" rel="#L10354">10354</span>
<span id="L10355" rel="#L10355">10355</span>
<span id="L10356" rel="#L10356">10356</span>
<span id="L10357" rel="#L10357">10357</span>
<span id="L10358" rel="#L10358">10358</span>
<span id="L10359" rel="#L10359">10359</span>
<span id="L10360" rel="#L10360">10360</span>
<span id="L10361" rel="#L10361">10361</span>
<span id="L10362" rel="#L10362">10362</span>
<span id="L10363" rel="#L10363">10363</span>
<span id="L10364" rel="#L10364">10364</span>
<span id="L10365" rel="#L10365">10365</span>
<span id="L10366" rel="#L10366">10366</span>
<span id="L10367" rel="#L10367">10367</span>
<span id="L10368" rel="#L10368">10368</span>
<span id="L10369" rel="#L10369">10369</span>
<span id="L10370" rel="#L10370">10370</span>
<span id="L10371" rel="#L10371">10371</span>
<span id="L10372" rel="#L10372">10372</span>
<span id="L10373" rel="#L10373">10373</span>
<span id="L10374" rel="#L10374">10374</span>
<span id="L10375" rel="#L10375">10375</span>
<span id="L10376" rel="#L10376">10376</span>
<span id="L10377" rel="#L10377">10377</span>
<span id="L10378" rel="#L10378">10378</span>
<span id="L10379" rel="#L10379">10379</span>
<span id="L10380" rel="#L10380">10380</span>
<span id="L10381" rel="#L10381">10381</span>
<span id="L10382" rel="#L10382">10382</span>
<span id="L10383" rel="#L10383">10383</span>
<span id="L10384" rel="#L10384">10384</span>
<span id="L10385" rel="#L10385">10385</span>
<span id="L10386" rel="#L10386">10386</span>
<span id="L10387" rel="#L10387">10387</span>
<span id="L10388" rel="#L10388">10388</span>
<span id="L10389" rel="#L10389">10389</span>
<span id="L10390" rel="#L10390">10390</span>
<span id="L10391" rel="#L10391">10391</span>
<span id="L10392" rel="#L10392">10392</span>
<span id="L10393" rel="#L10393">10393</span>
<span id="L10394" rel="#L10394">10394</span>
<span id="L10395" rel="#L10395">10395</span>
<span id="L10396" rel="#L10396">10396</span>
<span id="L10397" rel="#L10397">10397</span>
<span id="L10398" rel="#L10398">10398</span>
<span id="L10399" rel="#L10399">10399</span>
<span id="L10400" rel="#L10400">10400</span>
<span id="L10401" rel="#L10401">10401</span>
<span id="L10402" rel="#L10402">10402</span>
<span id="L10403" rel="#L10403">10403</span>
<span id="L10404" rel="#L10404">10404</span>
<span id="L10405" rel="#L10405">10405</span>
<span id="L10406" rel="#L10406">10406</span>
<span id="L10407" rel="#L10407">10407</span>
<span id="L10408" rel="#L10408">10408</span>
<span id="L10409" rel="#L10409">10409</span>
<span id="L10410" rel="#L10410">10410</span>
<span id="L10411" rel="#L10411">10411</span>
<span id="L10412" rel="#L10412">10412</span>
<span id="L10413" rel="#L10413">10413</span>
<span id="L10414" rel="#L10414">10414</span>
<span id="L10415" rel="#L10415">10415</span>
<span id="L10416" rel="#L10416">10416</span>
<span id="L10417" rel="#L10417">10417</span>
<span id="L10418" rel="#L10418">10418</span>
<span id="L10419" rel="#L10419">10419</span>
<span id="L10420" rel="#L10420">10420</span>
<span id="L10421" rel="#L10421">10421</span>
<span id="L10422" rel="#L10422">10422</span>
<span id="L10423" rel="#L10423">10423</span>
<span id="L10424" rel="#L10424">10424</span>
<span id="L10425" rel="#L10425">10425</span>
<span id="L10426" rel="#L10426">10426</span>
<span id="L10427" rel="#L10427">10427</span>
<span id="L10428" rel="#L10428">10428</span>
<span id="L10429" rel="#L10429">10429</span>
<span id="L10430" rel="#L10430">10430</span>
<span id="L10431" rel="#L10431">10431</span>
<span id="L10432" rel="#L10432">10432</span>
<span id="L10433" rel="#L10433">10433</span>
<span id="L10434" rel="#L10434">10434</span>
<span id="L10435" rel="#L10435">10435</span>
<span id="L10436" rel="#L10436">10436</span>
<span id="L10437" rel="#L10437">10437</span>
<span id="L10438" rel="#L10438">10438</span>
<span id="L10439" rel="#L10439">10439</span>
<span id="L10440" rel="#L10440">10440</span>
<span id="L10441" rel="#L10441">10441</span>
<span id="L10442" rel="#L10442">10442</span>
<span id="L10443" rel="#L10443">10443</span>
<span id="L10444" rel="#L10444">10444</span>
<span id="L10445" rel="#L10445">10445</span>
<span id="L10446" rel="#L10446">10446</span>
<span id="L10447" rel="#L10447">10447</span>
<span id="L10448" rel="#L10448">10448</span>
<span id="L10449" rel="#L10449">10449</span>
<span id="L10450" rel="#L10450">10450</span>
<span id="L10451" rel="#L10451">10451</span>
<span id="L10452" rel="#L10452">10452</span>
<span id="L10453" rel="#L10453">10453</span>
<span id="L10454" rel="#L10454">10454</span>
<span id="L10455" rel="#L10455">10455</span>
<span id="L10456" rel="#L10456">10456</span>
<span id="L10457" rel="#L10457">10457</span>
<span id="L10458" rel="#L10458">10458</span>
<span id="L10459" rel="#L10459">10459</span>
<span id="L10460" rel="#L10460">10460</span>
<span id="L10461" rel="#L10461">10461</span>
<span id="L10462" rel="#L10462">10462</span>
<span id="L10463" rel="#L10463">10463</span>
<span id="L10464" rel="#L10464">10464</span>
<span id="L10465" rel="#L10465">10465</span>
<span id="L10466" rel="#L10466">10466</span>
<span id="L10467" rel="#L10467">10467</span>
<span id="L10468" rel="#L10468">10468</span>
<span id="L10469" rel="#L10469">10469</span>
<span id="L10470" rel="#L10470">10470</span>
<span id="L10471" rel="#L10471">10471</span>
<span id="L10472" rel="#L10472">10472</span>
<span id="L10473" rel="#L10473">10473</span>
<span id="L10474" rel="#L10474">10474</span>
<span id="L10475" rel="#L10475">10475</span>
<span id="L10476" rel="#L10476">10476</span>
<span id="L10477" rel="#L10477">10477</span>
<span id="L10478" rel="#L10478">10478</span>
<span id="L10479" rel="#L10479">10479</span>
<span id="L10480" rel="#L10480">10480</span>
<span id="L10481" rel="#L10481">10481</span>
<span id="L10482" rel="#L10482">10482</span>
<span id="L10483" rel="#L10483">10483</span>
<span id="L10484" rel="#L10484">10484</span>
<span id="L10485" rel="#L10485">10485</span>
<span id="L10486" rel="#L10486">10486</span>
<span id="L10487" rel="#L10487">10487</span>
<span id="L10488" rel="#L10488">10488</span>
<span id="L10489" rel="#L10489">10489</span>
<span id="L10490" rel="#L10490">10490</span>
<span id="L10491" rel="#L10491">10491</span>
<span id="L10492" rel="#L10492">10492</span>
<span id="L10493" rel="#L10493">10493</span>
<span id="L10494" rel="#L10494">10494</span>
<span id="L10495" rel="#L10495">10495</span>
<span id="L10496" rel="#L10496">10496</span>
<span id="L10497" rel="#L10497">10497</span>
<span id="L10498" rel="#L10498">10498</span>
<span id="L10499" rel="#L10499">10499</span>
<span id="L10500" rel="#L10500">10500</span>
<span id="L10501" rel="#L10501">10501</span>
<span id="L10502" rel="#L10502">10502</span>
<span id="L10503" rel="#L10503">10503</span>
<span id="L10504" rel="#L10504">10504</span>
<span id="L10505" rel="#L10505">10505</span>
<span id="L10506" rel="#L10506">10506</span>
<span id="L10507" rel="#L10507">10507</span>
<span id="L10508" rel="#L10508">10508</span>
<span id="L10509" rel="#L10509">10509</span>
<span id="L10510" rel="#L10510">10510</span>
<span id="L10511" rel="#L10511">10511</span>
<span id="L10512" rel="#L10512">10512</span>
<span id="L10513" rel="#L10513">10513</span>
<span id="L10514" rel="#L10514">10514</span>
<span id="L10515" rel="#L10515">10515</span>
<span id="L10516" rel="#L10516">10516</span>
<span id="L10517" rel="#L10517">10517</span>
<span id="L10518" rel="#L10518">10518</span>
<span id="L10519" rel="#L10519">10519</span>
<span id="L10520" rel="#L10520">10520</span>
<span id="L10521" rel="#L10521">10521</span>
<span id="L10522" rel="#L10522">10522</span>
<span id="L10523" rel="#L10523">10523</span>
<span id="L10524" rel="#L10524">10524</span>
<span id="L10525" rel="#L10525">10525</span>
<span id="L10526" rel="#L10526">10526</span>
<span id="L10527" rel="#L10527">10527</span>
<span id="L10528" rel="#L10528">10528</span>
<span id="L10529" rel="#L10529">10529</span>
<span id="L10530" rel="#L10530">10530</span>
<span id="L10531" rel="#L10531">10531</span>
<span id="L10532" rel="#L10532">10532</span>
<span id="L10533" rel="#L10533">10533</span>
<span id="L10534" rel="#L10534">10534</span>
<span id="L10535" rel="#L10535">10535</span>
<span id="L10536" rel="#L10536">10536</span>
<span id="L10537" rel="#L10537">10537</span>
<span id="L10538" rel="#L10538">10538</span>
<span id="L10539" rel="#L10539">10539</span>
<span id="L10540" rel="#L10540">10540</span>
<span id="L10541" rel="#L10541">10541</span>
<span id="L10542" rel="#L10542">10542</span>
<span id="L10543" rel="#L10543">10543</span>
<span id="L10544" rel="#L10544">10544</span>
<span id="L10545" rel="#L10545">10545</span>
<span id="L10546" rel="#L10546">10546</span>
<span id="L10547" rel="#L10547">10547</span>
<span id="L10548" rel="#L10548">10548</span>
<span id="L10549" rel="#L10549">10549</span>
<span id="L10550" rel="#L10550">10550</span>
<span id="L10551" rel="#L10551">10551</span>
<span id="L10552" rel="#L10552">10552</span>
<span id="L10553" rel="#L10553">10553</span>
<span id="L10554" rel="#L10554">10554</span>
<span id="L10555" rel="#L10555">10555</span>
<span id="L10556" rel="#L10556">10556</span>
<span id="L10557" rel="#L10557">10557</span>
<span id="L10558" rel="#L10558">10558</span>
<span id="L10559" rel="#L10559">10559</span>
<span id="L10560" rel="#L10560">10560</span>
<span id="L10561" rel="#L10561">10561</span>
<span id="L10562" rel="#L10562">10562</span>
<span id="L10563" rel="#L10563">10563</span>
<span id="L10564" rel="#L10564">10564</span>
<span id="L10565" rel="#L10565">10565</span>
<span id="L10566" rel="#L10566">10566</span>
<span id="L10567" rel="#L10567">10567</span>
<span id="L10568" rel="#L10568">10568</span>
<span id="L10569" rel="#L10569">10569</span>
<span id="L10570" rel="#L10570">10570</span>
<span id="L10571" rel="#L10571">10571</span>
<span id="L10572" rel="#L10572">10572</span>
<span id="L10573" rel="#L10573">10573</span>
<span id="L10574" rel="#L10574">10574</span>
<span id="L10575" rel="#L10575">10575</span>
<span id="L10576" rel="#L10576">10576</span>
<span id="L10577" rel="#L10577">10577</span>
<span id="L10578" rel="#L10578">10578</span>
<span id="L10579" rel="#L10579">10579</span>
<span id="L10580" rel="#L10580">10580</span>
<span id="L10581" rel="#L10581">10581</span>
<span id="L10582" rel="#L10582">10582</span>
<span id="L10583" rel="#L10583">10583</span>
<span id="L10584" rel="#L10584">10584</span>
<span id="L10585" rel="#L10585">10585</span>
<span id="L10586" rel="#L10586">10586</span>
<span id="L10587" rel="#L10587">10587</span>
<span id="L10588" rel="#L10588">10588</span>
<span id="L10589" rel="#L10589">10589</span>
<span id="L10590" rel="#L10590">10590</span>
<span id="L10591" rel="#L10591">10591</span>
<span id="L10592" rel="#L10592">10592</span>
<span id="L10593" rel="#L10593">10593</span>
<span id="L10594" rel="#L10594">10594</span>
<span id="L10595" rel="#L10595">10595</span>
<span id="L10596" rel="#L10596">10596</span>
<span id="L10597" rel="#L10597">10597</span>
<span id="L10598" rel="#L10598">10598</span>
<span id="L10599" rel="#L10599">10599</span>
<span id="L10600" rel="#L10600">10600</span>
<span id="L10601" rel="#L10601">10601</span>
<span id="L10602" rel="#L10602">10602</span>
<span id="L10603" rel="#L10603">10603</span>
<span id="L10604" rel="#L10604">10604</span>
<span id="L10605" rel="#L10605">10605</span>
<span id="L10606" rel="#L10606">10606</span>
<span id="L10607" rel="#L10607">10607</span>
<span id="L10608" rel="#L10608">10608</span>
<span id="L10609" rel="#L10609">10609</span>
<span id="L10610" rel="#L10610">10610</span>
<span id="L10611" rel="#L10611">10611</span>
<span id="L10612" rel="#L10612">10612</span>
<span id="L10613" rel="#L10613">10613</span>
<span id="L10614" rel="#L10614">10614</span>
<span id="L10615" rel="#L10615">10615</span>
<span id="L10616" rel="#L10616">10616</span>
<span id="L10617" rel="#L10617">10617</span>
<span id="L10618" rel="#L10618">10618</span>
<span id="L10619" rel="#L10619">10619</span>
<span id="L10620" rel="#L10620">10620</span>
<span id="L10621" rel="#L10621">10621</span>
<span id="L10622" rel="#L10622">10622</span>
<span id="L10623" rel="#L10623">10623</span>
<span id="L10624" rel="#L10624">10624</span>
<span id="L10625" rel="#L10625">10625</span>
<span id="L10626" rel="#L10626">10626</span>
<span id="L10627" rel="#L10627">10627</span>
<span id="L10628" rel="#L10628">10628</span>
<span id="L10629" rel="#L10629">10629</span>
<span id="L10630" rel="#L10630">10630</span>
<span id="L10631" rel="#L10631">10631</span>
<span id="L10632" rel="#L10632">10632</span>
<span id="L10633" rel="#L10633">10633</span>
<span id="L10634" rel="#L10634">10634</span>
<span id="L10635" rel="#L10635">10635</span>
<span id="L10636" rel="#L10636">10636</span>
<span id="L10637" rel="#L10637">10637</span>
<span id="L10638" rel="#L10638">10638</span>
<span id="L10639" rel="#L10639">10639</span>
<span id="L10640" rel="#L10640">10640</span>
<span id="L10641" rel="#L10641">10641</span>
<span id="L10642" rel="#L10642">10642</span>
<span id="L10643" rel="#L10643">10643</span>
<span id="L10644" rel="#L10644">10644</span>
<span id="L10645" rel="#L10645">10645</span>
<span id="L10646" rel="#L10646">10646</span>
<span id="L10647" rel="#L10647">10647</span>
<span id="L10648" rel="#L10648">10648</span>
<span id="L10649" rel="#L10649">10649</span>
<span id="L10650" rel="#L10650">10650</span>
<span id="L10651" rel="#L10651">10651</span>
<span id="L10652" rel="#L10652">10652</span>
<span id="L10653" rel="#L10653">10653</span>
<span id="L10654" rel="#L10654">10654</span>
<span id="L10655" rel="#L10655">10655</span>
<span id="L10656" rel="#L10656">10656</span>
<span id="L10657" rel="#L10657">10657</span>
<span id="L10658" rel="#L10658">10658</span>
<span id="L10659" rel="#L10659">10659</span>
<span id="L10660" rel="#L10660">10660</span>
<span id="L10661" rel="#L10661">10661</span>
<span id="L10662" rel="#L10662">10662</span>
<span id="L10663" rel="#L10663">10663</span>
<span id="L10664" rel="#L10664">10664</span>
<span id="L10665" rel="#L10665">10665</span>
<span id="L10666" rel="#L10666">10666</span>
<span id="L10667" rel="#L10667">10667</span>
<span id="L10668" rel="#L10668">10668</span>
<span id="L10669" rel="#L10669">10669</span>
<span id="L10670" rel="#L10670">10670</span>
<span id="L10671" rel="#L10671">10671</span>
<span id="L10672" rel="#L10672">10672</span>
<span id="L10673" rel="#L10673">10673</span>
<span id="L10674" rel="#L10674">10674</span>
<span id="L10675" rel="#L10675">10675</span>
<span id="L10676" rel="#L10676">10676</span>
<span id="L10677" rel="#L10677">10677</span>
<span id="L10678" rel="#L10678">10678</span>
<span id="L10679" rel="#L10679">10679</span>
<span id="L10680" rel="#L10680">10680</span>
<span id="L10681" rel="#L10681">10681</span>
<span id="L10682" rel="#L10682">10682</span>
<span id="L10683" rel="#L10683">10683</span>
<span id="L10684" rel="#L10684">10684</span>
<span id="L10685" rel="#L10685">10685</span>
<span id="L10686" rel="#L10686">10686</span>
<span id="L10687" rel="#L10687">10687</span>
<span id="L10688" rel="#L10688">10688</span>
<span id="L10689" rel="#L10689">10689</span>
<span id="L10690" rel="#L10690">10690</span>
<span id="L10691" rel="#L10691">10691</span>
<span id="L10692" rel="#L10692">10692</span>
<span id="L10693" rel="#L10693">10693</span>
<span id="L10694" rel="#L10694">10694</span>
<span id="L10695" rel="#L10695">10695</span>
<span id="L10696" rel="#L10696">10696</span>
<span id="L10697" rel="#L10697">10697</span>
<span id="L10698" rel="#L10698">10698</span>
<span id="L10699" rel="#L10699">10699</span>
<span id="L10700" rel="#L10700">10700</span>
<span id="L10701" rel="#L10701">10701</span>
<span id="L10702" rel="#L10702">10702</span>
<span id="L10703" rel="#L10703">10703</span>
<span id="L10704" rel="#L10704">10704</span>
<span id="L10705" rel="#L10705">10705</span>
<span id="L10706" rel="#L10706">10706</span>
<span id="L10707" rel="#L10707">10707</span>
<span id="L10708" rel="#L10708">10708</span>
<span id="L10709" rel="#L10709">10709</span>
<span id="L10710" rel="#L10710">10710</span>
<span id="L10711" rel="#L10711">10711</span>
<span id="L10712" rel="#L10712">10712</span>
<span id="L10713" rel="#L10713">10713</span>
<span id="L10714" rel="#L10714">10714</span>
<span id="L10715" rel="#L10715">10715</span>
<span id="L10716" rel="#L10716">10716</span>
<span id="L10717" rel="#L10717">10717</span>
<span id="L10718" rel="#L10718">10718</span>
<span id="L10719" rel="#L10719">10719</span>
<span id="L10720" rel="#L10720">10720</span>
<span id="L10721" rel="#L10721">10721</span>
<span id="L10722" rel="#L10722">10722</span>
<span id="L10723" rel="#L10723">10723</span>
<span id="L10724" rel="#L10724">10724</span>
<span id="L10725" rel="#L10725">10725</span>
<span id="L10726" rel="#L10726">10726</span>
<span id="L10727" rel="#L10727">10727</span>
<span id="L10728" rel="#L10728">10728</span>
<span id="L10729" rel="#L10729">10729</span>
<span id="L10730" rel="#L10730">10730</span>
<span id="L10731" rel="#L10731">10731</span>
<span id="L10732" rel="#L10732">10732</span>
<span id="L10733" rel="#L10733">10733</span>
<span id="L10734" rel="#L10734">10734</span>
<span id="L10735" rel="#L10735">10735</span>
<span id="L10736" rel="#L10736">10736</span>
<span id="L10737" rel="#L10737">10737</span>
<span id="L10738" rel="#L10738">10738</span>
<span id="L10739" rel="#L10739">10739</span>
<span id="L10740" rel="#L10740">10740</span>
<span id="L10741" rel="#L10741">10741</span>
<span id="L10742" rel="#L10742">10742</span>
<span id="L10743" rel="#L10743">10743</span>
<span id="L10744" rel="#L10744">10744</span>
<span id="L10745" rel="#L10745">10745</span>
<span id="L10746" rel="#L10746">10746</span>
<span id="L10747" rel="#L10747">10747</span>
<span id="L10748" rel="#L10748">10748</span>
<span id="L10749" rel="#L10749">10749</span>
<span id="L10750" rel="#L10750">10750</span>
<span id="L10751" rel="#L10751">10751</span>
<span id="L10752" rel="#L10752">10752</span>
<span id="L10753" rel="#L10753">10753</span>
<span id="L10754" rel="#L10754">10754</span>
<span id="L10755" rel="#L10755">10755</span>
<span id="L10756" rel="#L10756">10756</span>
<span id="L10757" rel="#L10757">10757</span>
<span id="L10758" rel="#L10758">10758</span>
<span id="L10759" rel="#L10759">10759</span>
<span id="L10760" rel="#L10760">10760</span>
<span id="L10761" rel="#L10761">10761</span>
<span id="L10762" rel="#L10762">10762</span>
<span id="L10763" rel="#L10763">10763</span>
<span id="L10764" rel="#L10764">10764</span>
<span id="L10765" rel="#L10765">10765</span>
<span id="L10766" rel="#L10766">10766</span>
<span id="L10767" rel="#L10767">10767</span>
<span id="L10768" rel="#L10768">10768</span>
<span id="L10769" rel="#L10769">10769</span>
<span id="L10770" rel="#L10770">10770</span>
<span id="L10771" rel="#L10771">10771</span>
<span id="L10772" rel="#L10772">10772</span>
<span id="L10773" rel="#L10773">10773</span>
<span id="L10774" rel="#L10774">10774</span>
<span id="L10775" rel="#L10775">10775</span>
<span id="L10776" rel="#L10776">10776</span>
<span id="L10777" rel="#L10777">10777</span>
<span id="L10778" rel="#L10778">10778</span>
<span id="L10779" rel="#L10779">10779</span>
<span id="L10780" rel="#L10780">10780</span>
<span id="L10781" rel="#L10781">10781</span>
<span id="L10782" rel="#L10782">10782</span>
<span id="L10783" rel="#L10783">10783</span>
<span id="L10784" rel="#L10784">10784</span>
<span id="L10785" rel="#L10785">10785</span>
<span id="L10786" rel="#L10786">10786</span>
<span id="L10787" rel="#L10787">10787</span>
<span id="L10788" rel="#L10788">10788</span>
<span id="L10789" rel="#L10789">10789</span>
<span id="L10790" rel="#L10790">10790</span>
<span id="L10791" rel="#L10791">10791</span>
<span id="L10792" rel="#L10792">10792</span>
<span id="L10793" rel="#L10793">10793</span>
<span id="L10794" rel="#L10794">10794</span>
<span id="L10795" rel="#L10795">10795</span>
<span id="L10796" rel="#L10796">10796</span>
<span id="L10797" rel="#L10797">10797</span>
<span id="L10798" rel="#L10798">10798</span>
<span id="L10799" rel="#L10799">10799</span>
<span id="L10800" rel="#L10800">10800</span>
<span id="L10801" rel="#L10801">10801</span>
<span id="L10802" rel="#L10802">10802</span>
<span id="L10803" rel="#L10803">10803</span>
<span id="L10804" rel="#L10804">10804</span>
<span id="L10805" rel="#L10805">10805</span>
<span id="L10806" rel="#L10806">10806</span>
<span id="L10807" rel="#L10807">10807</span>
<span id="L10808" rel="#L10808">10808</span>
<span id="L10809" rel="#L10809">10809</span>
<span id="L10810" rel="#L10810">10810</span>
<span id="L10811" rel="#L10811">10811</span>
<span id="L10812" rel="#L10812">10812</span>
<span id="L10813" rel="#L10813">10813</span>
<span id="L10814" rel="#L10814">10814</span>
<span id="L10815" rel="#L10815">10815</span>
<span id="L10816" rel="#L10816">10816</span>
<span id="L10817" rel="#L10817">10817</span>
<span id="L10818" rel="#L10818">10818</span>
<span id="L10819" rel="#L10819">10819</span>
<span id="L10820" rel="#L10820">10820</span>
<span id="L10821" rel="#L10821">10821</span>
<span id="L10822" rel="#L10822">10822</span>
<span id="L10823" rel="#L10823">10823</span>
<span id="L10824" rel="#L10824">10824</span>
<span id="L10825" rel="#L10825">10825</span>
<span id="L10826" rel="#L10826">10826</span>
<span id="L10827" rel="#L10827">10827</span>
<span id="L10828" rel="#L10828">10828</span>
<span id="L10829" rel="#L10829">10829</span>
<span id="L10830" rel="#L10830">10830</span>
<span id="L10831" rel="#L10831">10831</span>
<span id="L10832" rel="#L10832">10832</span>
<span id="L10833" rel="#L10833">10833</span>
<span id="L10834" rel="#L10834">10834</span>
<span id="L10835" rel="#L10835">10835</span>
<span id="L10836" rel="#L10836">10836</span>
<span id="L10837" rel="#L10837">10837</span>
<span id="L10838" rel="#L10838">10838</span>
<span id="L10839" rel="#L10839">10839</span>
<span id="L10840" rel="#L10840">10840</span>
<span id="L10841" rel="#L10841">10841</span>
<span id="L10842" rel="#L10842">10842</span>
<span id="L10843" rel="#L10843">10843</span>
<span id="L10844" rel="#L10844">10844</span>
<span id="L10845" rel="#L10845">10845</span>
<span id="L10846" rel="#L10846">10846</span>
<span id="L10847" rel="#L10847">10847</span>
<span id="L10848" rel="#L10848">10848</span>
<span id="L10849" rel="#L10849">10849</span>
<span id="L10850" rel="#L10850">10850</span>
<span id="L10851" rel="#L10851">10851</span>
<span id="L10852" rel="#L10852">10852</span>
<span id="L10853" rel="#L10853">10853</span>
<span id="L10854" rel="#L10854">10854</span>
<span id="L10855" rel="#L10855">10855</span>
<span id="L10856" rel="#L10856">10856</span>
<span id="L10857" rel="#L10857">10857</span>
<span id="L10858" rel="#L10858">10858</span>
<span id="L10859" rel="#L10859">10859</span>
<span id="L10860" rel="#L10860">10860</span>
<span id="L10861" rel="#L10861">10861</span>
<span id="L10862" rel="#L10862">10862</span>
<span id="L10863" rel="#L10863">10863</span>
<span id="L10864" rel="#L10864">10864</span>
<span id="L10865" rel="#L10865">10865</span>
<span id="L10866" rel="#L10866">10866</span>
<span id="L10867" rel="#L10867">10867</span>
<span id="L10868" rel="#L10868">10868</span>
<span id="L10869" rel="#L10869">10869</span>
<span id="L10870" rel="#L10870">10870</span>
<span id="L10871" rel="#L10871">10871</span>
<span id="L10872" rel="#L10872">10872</span>
<span id="L10873" rel="#L10873">10873</span>
<span id="L10874" rel="#L10874">10874</span>
<span id="L10875" rel="#L10875">10875</span>
<span id="L10876" rel="#L10876">10876</span>
<span id="L10877" rel="#L10877">10877</span>
<span id="L10878" rel="#L10878">10878</span>
<span id="L10879" rel="#L10879">10879</span>
<span id="L10880" rel="#L10880">10880</span>
<span id="L10881" rel="#L10881">10881</span>
<span id="L10882" rel="#L10882">10882</span>
<span id="L10883" rel="#L10883">10883</span>
<span id="L10884" rel="#L10884">10884</span>
<span id="L10885" rel="#L10885">10885</span>
<span id="L10886" rel="#L10886">10886</span>
<span id="L10887" rel="#L10887">10887</span>
<span id="L10888" rel="#L10888">10888</span>
<span id="L10889" rel="#L10889">10889</span>
<span id="L10890" rel="#L10890">10890</span>
<span id="L10891" rel="#L10891">10891</span>
<span id="L10892" rel="#L10892">10892</span>
<span id="L10893" rel="#L10893">10893</span>
<span id="L10894" rel="#L10894">10894</span>
<span id="L10895" rel="#L10895">10895</span>
<span id="L10896" rel="#L10896">10896</span>
<span id="L10897" rel="#L10897">10897</span>
<span id="L10898" rel="#L10898">10898</span>
<span id="L10899" rel="#L10899">10899</span>
<span id="L10900" rel="#L10900">10900</span>
<span id="L10901" rel="#L10901">10901</span>
<span id="L10902" rel="#L10902">10902</span>
<span id="L10903" rel="#L10903">10903</span>
<span id="L10904" rel="#L10904">10904</span>
<span id="L10905" rel="#L10905">10905</span>
<span id="L10906" rel="#L10906">10906</span>
<span id="L10907" rel="#L10907">10907</span>
<span id="L10908" rel="#L10908">10908</span>
<span id="L10909" rel="#L10909">10909</span>
<span id="L10910" rel="#L10910">10910</span>
<span id="L10911" rel="#L10911">10911</span>
<span id="L10912" rel="#L10912">10912</span>
<span id="L10913" rel="#L10913">10913</span>
<span id="L10914" rel="#L10914">10914</span>
<span id="L10915" rel="#L10915">10915</span>
<span id="L10916" rel="#L10916">10916</span>
<span id="L10917" rel="#L10917">10917</span>
<span id="L10918" rel="#L10918">10918</span>
<span id="L10919" rel="#L10919">10919</span>
<span id="L10920" rel="#L10920">10920</span>
<span id="L10921" rel="#L10921">10921</span>
<span id="L10922" rel="#L10922">10922</span>
<span id="L10923" rel="#L10923">10923</span>
<span id="L10924" rel="#L10924">10924</span>
<span id="L10925" rel="#L10925">10925</span>
<span id="L10926" rel="#L10926">10926</span>
<span id="L10927" rel="#L10927">10927</span>
<span id="L10928" rel="#L10928">10928</span>
<span id="L10929" rel="#L10929">10929</span>
<span id="L10930" rel="#L10930">10930</span>
<span id="L10931" rel="#L10931">10931</span>
<span id="L10932" rel="#L10932">10932</span>
<span id="L10933" rel="#L10933">10933</span>
<span id="L10934" rel="#L10934">10934</span>
<span id="L10935" rel="#L10935">10935</span>
<span id="L10936" rel="#L10936">10936</span>
<span id="L10937" rel="#L10937">10937</span>
<span id="L10938" rel="#L10938">10938</span>
<span id="L10939" rel="#L10939">10939</span>
<span id="L10940" rel="#L10940">10940</span>
<span id="L10941" rel="#L10941">10941</span>
<span id="L10942" rel="#L10942">10942</span>
<span id="L10943" rel="#L10943">10943</span>
<span id="L10944" rel="#L10944">10944</span>
<span id="L10945" rel="#L10945">10945</span>
<span id="L10946" rel="#L10946">10946</span>
<span id="L10947" rel="#L10947">10947</span>
<span id="L10948" rel="#L10948">10948</span>
<span id="L10949" rel="#L10949">10949</span>
<span id="L10950" rel="#L10950">10950</span>
<span id="L10951" rel="#L10951">10951</span>
<span id="L10952" rel="#L10952">10952</span>
<span id="L10953" rel="#L10953">10953</span>
<span id="L10954" rel="#L10954">10954</span>
<span id="L10955" rel="#L10955">10955</span>
<span id="L10956" rel="#L10956">10956</span>
<span id="L10957" rel="#L10957">10957</span>
<span id="L10958" rel="#L10958">10958</span>
<span id="L10959" rel="#L10959">10959</span>
<span id="L10960" rel="#L10960">10960</span>
<span id="L10961" rel="#L10961">10961</span>
<span id="L10962" rel="#L10962">10962</span>
<span id="L10963" rel="#L10963">10963</span>
<span id="L10964" rel="#L10964">10964</span>
<span id="L10965" rel="#L10965">10965</span>
<span id="L10966" rel="#L10966">10966</span>
<span id="L10967" rel="#L10967">10967</span>
<span id="L10968" rel="#L10968">10968</span>
<span id="L10969" rel="#L10969">10969</span>
<span id="L10970" rel="#L10970">10970</span>
<span id="L10971" rel="#L10971">10971</span>
<span id="L10972" rel="#L10972">10972</span>
<span id="L10973" rel="#L10973">10973</span>
<span id="L10974" rel="#L10974">10974</span>
<span id="L10975" rel="#L10975">10975</span>
<span id="L10976" rel="#L10976">10976</span>
<span id="L10977" rel="#L10977">10977</span>
<span id="L10978" rel="#L10978">10978</span>
<span id="L10979" rel="#L10979">10979</span>
<span id="L10980" rel="#L10980">10980</span>
<span id="L10981" rel="#L10981">10981</span>
<span id="L10982" rel="#L10982">10982</span>
<span id="L10983" rel="#L10983">10983</span>
<span id="L10984" rel="#L10984">10984</span>
<span id="L10985" rel="#L10985">10985</span>
<span id="L10986" rel="#L10986">10986</span>
<span id="L10987" rel="#L10987">10987</span>
<span id="L10988" rel="#L10988">10988</span>
<span id="L10989" rel="#L10989">10989</span>
<span id="L10990" rel="#L10990">10990</span>
<span id="L10991" rel="#L10991">10991</span>
<span id="L10992" rel="#L10992">10992</span>
<span id="L10993" rel="#L10993">10993</span>
<span id="L10994" rel="#L10994">10994</span>
<span id="L10995" rel="#L10995">10995</span>
<span id="L10996" rel="#L10996">10996</span>
<span id="L10997" rel="#L10997">10997</span>
<span id="L10998" rel="#L10998">10998</span>
<span id="L10999" rel="#L10999">10999</span>
<span id="L11000" rel="#L11000">11000</span>
<span id="L11001" rel="#L11001">11001</span>
<span id="L11002" rel="#L11002">11002</span>
<span id="L11003" rel="#L11003">11003</span>
<span id="L11004" rel="#L11004">11004</span>
<span id="L11005" rel="#L11005">11005</span>
<span id="L11006" rel="#L11006">11006</span>
<span id="L11007" rel="#L11007">11007</span>
<span id="L11008" rel="#L11008">11008</span>
<span id="L11009" rel="#L11009">11009</span>
<span id="L11010" rel="#L11010">11010</span>
<span id="L11011" rel="#L11011">11011</span>
<span id="L11012" rel="#L11012">11012</span>
<span id="L11013" rel="#L11013">11013</span>
<span id="L11014" rel="#L11014">11014</span>
<span id="L11015" rel="#L11015">11015</span>
<span id="L11016" rel="#L11016">11016</span>
<span id="L11017" rel="#L11017">11017</span>
<span id="L11018" rel="#L11018">11018</span>
<span id="L11019" rel="#L11019">11019</span>
<span id="L11020" rel="#L11020">11020</span>
<span id="L11021" rel="#L11021">11021</span>
<span id="L11022" rel="#L11022">11022</span>
<span id="L11023" rel="#L11023">11023</span>
<span id="L11024" rel="#L11024">11024</span>
<span id="L11025" rel="#L11025">11025</span>
<span id="L11026" rel="#L11026">11026</span>
<span id="L11027" rel="#L11027">11027</span>
<span id="L11028" rel="#L11028">11028</span>
<span id="L11029" rel="#L11029">11029</span>
<span id="L11030" rel="#L11030">11030</span>
<span id="L11031" rel="#L11031">11031</span>
<span id="L11032" rel="#L11032">11032</span>
<span id="L11033" rel="#L11033">11033</span>
<span id="L11034" rel="#L11034">11034</span>
<span id="L11035" rel="#L11035">11035</span>
<span id="L11036" rel="#L11036">11036</span>
<span id="L11037" rel="#L11037">11037</span>
<span id="L11038" rel="#L11038">11038</span>
<span id="L11039" rel="#L11039">11039</span>
<span id="L11040" rel="#L11040">11040</span>
<span id="L11041" rel="#L11041">11041</span>
<span id="L11042" rel="#L11042">11042</span>
<span id="L11043" rel="#L11043">11043</span>
<span id="L11044" rel="#L11044">11044</span>
<span id="L11045" rel="#L11045">11045</span>
<span id="L11046" rel="#L11046">11046</span>
<span id="L11047" rel="#L11047">11047</span>
<span id="L11048" rel="#L11048">11048</span>
<span id="L11049" rel="#L11049">11049</span>
<span id="L11050" rel="#L11050">11050</span>
<span id="L11051" rel="#L11051">11051</span>
<span id="L11052" rel="#L11052">11052</span>
<span id="L11053" rel="#L11053">11053</span>
<span id="L11054" rel="#L11054">11054</span>
<span id="L11055" rel="#L11055">11055</span>
<span id="L11056" rel="#L11056">11056</span>
<span id="L11057" rel="#L11057">11057</span>
<span id="L11058" rel="#L11058">11058</span>
<span id="L11059" rel="#L11059">11059</span>
<span id="L11060" rel="#L11060">11060</span>
<span id="L11061" rel="#L11061">11061</span>
<span id="L11062" rel="#L11062">11062</span>
<span id="L11063" rel="#L11063">11063</span>
<span id="L11064" rel="#L11064">11064</span>
<span id="L11065" rel="#L11065">11065</span>
<span id="L11066" rel="#L11066">11066</span>
<span id="L11067" rel="#L11067">11067</span>
<span id="L11068" rel="#L11068">11068</span>
<span id="L11069" rel="#L11069">11069</span>
<span id="L11070" rel="#L11070">11070</span>
<span id="L11071" rel="#L11071">11071</span>
<span id="L11072" rel="#L11072">11072</span>
<span id="L11073" rel="#L11073">11073</span>
<span id="L11074" rel="#L11074">11074</span>
<span id="L11075" rel="#L11075">11075</span>
<span id="L11076" rel="#L11076">11076</span>
<span id="L11077" rel="#L11077">11077</span>
<span id="L11078" rel="#L11078">11078</span>
<span id="L11079" rel="#L11079">11079</span>
<span id="L11080" rel="#L11080">11080</span>
<span id="L11081" rel="#L11081">11081</span>
<span id="L11082" rel="#L11082">11082</span>
<span id="L11083" rel="#L11083">11083</span>
<span id="L11084" rel="#L11084">11084</span>
<span id="L11085" rel="#L11085">11085</span>
<span id="L11086" rel="#L11086">11086</span>
<span id="L11087" rel="#L11087">11087</span>
<span id="L11088" rel="#L11088">11088</span>
<span id="L11089" rel="#L11089">11089</span>
<span id="L11090" rel="#L11090">11090</span>
<span id="L11091" rel="#L11091">11091</span>
<span id="L11092" rel="#L11092">11092</span>
<span id="L11093" rel="#L11093">11093</span>
<span id="L11094" rel="#L11094">11094</span>
<span id="L11095" rel="#L11095">11095</span>
<span id="L11096" rel="#L11096">11096</span>
<span id="L11097" rel="#L11097">11097</span>
<span id="L11098" rel="#L11098">11098</span>
<span id="L11099" rel="#L11099">11099</span>
<span id="L11100" rel="#L11100">11100</span>
<span id="L11101" rel="#L11101">11101</span>
<span id="L11102" rel="#L11102">11102</span>
<span id="L11103" rel="#L11103">11103</span>
<span id="L11104" rel="#L11104">11104</span>
<span id="L11105" rel="#L11105">11105</span>
<span id="L11106" rel="#L11106">11106</span>
<span id="L11107" rel="#L11107">11107</span>
<span id="L11108" rel="#L11108">11108</span>
<span id="L11109" rel="#L11109">11109</span>
<span id="L11110" rel="#L11110">11110</span>
<span id="L11111" rel="#L11111">11111</span>
<span id="L11112" rel="#L11112">11112</span>
<span id="L11113" rel="#L11113">11113</span>
<span id="L11114" rel="#L11114">11114</span>
<span id="L11115" rel="#L11115">11115</span>
<span id="L11116" rel="#L11116">11116</span>
<span id="L11117" rel="#L11117">11117</span>
<span id="L11118" rel="#L11118">11118</span>
<span id="L11119" rel="#L11119">11119</span>
<span id="L11120" rel="#L11120">11120</span>
<span id="L11121" rel="#L11121">11121</span>
<span id="L11122" rel="#L11122">11122</span>
<span id="L11123" rel="#L11123">11123</span>
<span id="L11124" rel="#L11124">11124</span>
<span id="L11125" rel="#L11125">11125</span>
<span id="L11126" rel="#L11126">11126</span>
<span id="L11127" rel="#L11127">11127</span>
<span id="L11128" rel="#L11128">11128</span>
<span id="L11129" rel="#L11129">11129</span>
<span id="L11130" rel="#L11130">11130</span>
<span id="L11131" rel="#L11131">11131</span>
<span id="L11132" rel="#L11132">11132</span>
<span id="L11133" rel="#L11133">11133</span>
<span id="L11134" rel="#L11134">11134</span>
<span id="L11135" rel="#L11135">11135</span>
<span id="L11136" rel="#L11136">11136</span>
<span id="L11137" rel="#L11137">11137</span>
<span id="L11138" rel="#L11138">11138</span>
<span id="L11139" rel="#L11139">11139</span>
<span id="L11140" rel="#L11140">11140</span>
<span id="L11141" rel="#L11141">11141</span>
<span id="L11142" rel="#L11142">11142</span>
<span id="L11143" rel="#L11143">11143</span>
<span id="L11144" rel="#L11144">11144</span>
<span id="L11145" rel="#L11145">11145</span>
<span id="L11146" rel="#L11146">11146</span>
<span id="L11147" rel="#L11147">11147</span>
<span id="L11148" rel="#L11148">11148</span>
<span id="L11149" rel="#L11149">11149</span>
<span id="L11150" rel="#L11150">11150</span>
<span id="L11151" rel="#L11151">11151</span>
<span id="L11152" rel="#L11152">11152</span>
<span id="L11153" rel="#L11153">11153</span>
<span id="L11154" rel="#L11154">11154</span>
<span id="L11155" rel="#L11155">11155</span>
<span id="L11156" rel="#L11156">11156</span>
<span id="L11157" rel="#L11157">11157</span>
<span id="L11158" rel="#L11158">11158</span>
<span id="L11159" rel="#L11159">11159</span>
<span id="L11160" rel="#L11160">11160</span>
<span id="L11161" rel="#L11161">11161</span>
<span id="L11162" rel="#L11162">11162</span>
<span id="L11163" rel="#L11163">11163</span>
<span id="L11164" rel="#L11164">11164</span>
<span id="L11165" rel="#L11165">11165</span>
<span id="L11166" rel="#L11166">11166</span>
<span id="L11167" rel="#L11167">11167</span>
<span id="L11168" rel="#L11168">11168</span>
<span id="L11169" rel="#L11169">11169</span>
<span id="L11170" rel="#L11170">11170</span>
<span id="L11171" rel="#L11171">11171</span>
<span id="L11172" rel="#L11172">11172</span>
<span id="L11173" rel="#L11173">11173</span>
<span id="L11174" rel="#L11174">11174</span>
<span id="L11175" rel="#L11175">11175</span>
<span id="L11176" rel="#L11176">11176</span>
<span id="L11177" rel="#L11177">11177</span>
<span id="L11178" rel="#L11178">11178</span>
<span id="L11179" rel="#L11179">11179</span>
<span id="L11180" rel="#L11180">11180</span>
<span id="L11181" rel="#L11181">11181</span>
<span id="L11182" rel="#L11182">11182</span>
<span id="L11183" rel="#L11183">11183</span>
<span id="L11184" rel="#L11184">11184</span>
<span id="L11185" rel="#L11185">11185</span>
<span id="L11186" rel="#L11186">11186</span>
<span id="L11187" rel="#L11187">11187</span>
<span id="L11188" rel="#L11188">11188</span>
<span id="L11189" rel="#L11189">11189</span>
<span id="L11190" rel="#L11190">11190</span>
<span id="L11191" rel="#L11191">11191</span>
<span id="L11192" rel="#L11192">11192</span>
<span id="L11193" rel="#L11193">11193</span>
<span id="L11194" rel="#L11194">11194</span>
<span id="L11195" rel="#L11195">11195</span>
<span id="L11196" rel="#L11196">11196</span>
<span id="L11197" rel="#L11197">11197</span>
<span id="L11198" rel="#L11198">11198</span>
<span id="L11199" rel="#L11199">11199</span>
<span id="L11200" rel="#L11200">11200</span>
<span id="L11201" rel="#L11201">11201</span>
<span id="L11202" rel="#L11202">11202</span>
<span id="L11203" rel="#L11203">11203</span>
<span id="L11204" rel="#L11204">11204</span>
<span id="L11205" rel="#L11205">11205</span>
<span id="L11206" rel="#L11206">11206</span>
<span id="L11207" rel="#L11207">11207</span>
<span id="L11208" rel="#L11208">11208</span>
<span id="L11209" rel="#L11209">11209</span>
<span id="L11210" rel="#L11210">11210</span>
<span id="L11211" rel="#L11211">11211</span>
<span id="L11212" rel="#L11212">11212</span>
<span id="L11213" rel="#L11213">11213</span>
<span id="L11214" rel="#L11214">11214</span>
<span id="L11215" rel="#L11215">11215</span>
<span id="L11216" rel="#L11216">11216</span>
<span id="L11217" rel="#L11217">11217</span>
<span id="L11218" rel="#L11218">11218</span>
<span id="L11219" rel="#L11219">11219</span>
<span id="L11220" rel="#L11220">11220</span>
<span id="L11221" rel="#L11221">11221</span>
<span id="L11222" rel="#L11222">11222</span>
<span id="L11223" rel="#L11223">11223</span>
<span id="L11224" rel="#L11224">11224</span>
<span id="L11225" rel="#L11225">11225</span>
<span id="L11226" rel="#L11226">11226</span>
<span id="L11227" rel="#L11227">11227</span>
<span id="L11228" rel="#L11228">11228</span>
<span id="L11229" rel="#L11229">11229</span>
<span id="L11230" rel="#L11230">11230</span>
<span id="L11231" rel="#L11231">11231</span>
<span id="L11232" rel="#L11232">11232</span>
<span id="L11233" rel="#L11233">11233</span>
<span id="L11234" rel="#L11234">11234</span>
<span id="L11235" rel="#L11235">11235</span>
<span id="L11236" rel="#L11236">11236</span>
<span id="L11237" rel="#L11237">11237</span>
<span id="L11238" rel="#L11238">11238</span>
<span id="L11239" rel="#L11239">11239</span>
<span id="L11240" rel="#L11240">11240</span>
<span id="L11241" rel="#L11241">11241</span>
<span id="L11242" rel="#L11242">11242</span>
<span id="L11243" rel="#L11243">11243</span>
<span id="L11244" rel="#L11244">11244</span>
<span id="L11245" rel="#L11245">11245</span>
<span id="L11246" rel="#L11246">11246</span>
<span id="L11247" rel="#L11247">11247</span>
<span id="L11248" rel="#L11248">11248</span>
<span id="L11249" rel="#L11249">11249</span>
<span id="L11250" rel="#L11250">11250</span>
<span id="L11251" rel="#L11251">11251</span>
<span id="L11252" rel="#L11252">11252</span>
<span id="L11253" rel="#L11253">11253</span>
<span id="L11254" rel="#L11254">11254</span>
<span id="L11255" rel="#L11255">11255</span>
<span id="L11256" rel="#L11256">11256</span>
<span id="L11257" rel="#L11257">11257</span>
<span id="L11258" rel="#L11258">11258</span>
<span id="L11259" rel="#L11259">11259</span>
<span id="L11260" rel="#L11260">11260</span>
<span id="L11261" rel="#L11261">11261</span>
<span id="L11262" rel="#L11262">11262</span>
<span id="L11263" rel="#L11263">11263</span>
<span id="L11264" rel="#L11264">11264</span>
<span id="L11265" rel="#L11265">11265</span>
<span id="L11266" rel="#L11266">11266</span>
<span id="L11267" rel="#L11267">11267</span>
<span id="L11268" rel="#L11268">11268</span>
<span id="L11269" rel="#L11269">11269</span>
<span id="L11270" rel="#L11270">11270</span>
<span id="L11271" rel="#L11271">11271</span>
<span id="L11272" rel="#L11272">11272</span>
<span id="L11273" rel="#L11273">11273</span>
<span id="L11274" rel="#L11274">11274</span>
<span id="L11275" rel="#L11275">11275</span>
<span id="L11276" rel="#L11276">11276</span>
<span id="L11277" rel="#L11277">11277</span>
<span id="L11278" rel="#L11278">11278</span>
<span id="L11279" rel="#L11279">11279</span>
<span id="L11280" rel="#L11280">11280</span>
<span id="L11281" rel="#L11281">11281</span>
<span id="L11282" rel="#L11282">11282</span>
<span id="L11283" rel="#L11283">11283</span>
<span id="L11284" rel="#L11284">11284</span>
<span id="L11285" rel="#L11285">11285</span>
<span id="L11286" rel="#L11286">11286</span>
<span id="L11287" rel="#L11287">11287</span>
<span id="L11288" rel="#L11288">11288</span>
<span id="L11289" rel="#L11289">11289</span>
<span id="L11290" rel="#L11290">11290</span>
<span id="L11291" rel="#L11291">11291</span>
<span id="L11292" rel="#L11292">11292</span>
<span id="L11293" rel="#L11293">11293</span>
<span id="L11294" rel="#L11294">11294</span>
<span id="L11295" rel="#L11295">11295</span>
<span id="L11296" rel="#L11296">11296</span>
<span id="L11297" rel="#L11297">11297</span>
<span id="L11298" rel="#L11298">11298</span>
<span id="L11299" rel="#L11299">11299</span>
<span id="L11300" rel="#L11300">11300</span>
<span id="L11301" rel="#L11301">11301</span>
<span id="L11302" rel="#L11302">11302</span>
<span id="L11303" rel="#L11303">11303</span>
<span id="L11304" rel="#L11304">11304</span>
<span id="L11305" rel="#L11305">11305</span>
<span id="L11306" rel="#L11306">11306</span>
<span id="L11307" rel="#L11307">11307</span>
<span id="L11308" rel="#L11308">11308</span>
<span id="L11309" rel="#L11309">11309</span>
<span id="L11310" rel="#L11310">11310</span>
<span id="L11311" rel="#L11311">11311</span>
<span id="L11312" rel="#L11312">11312</span>
<span id="L11313" rel="#L11313">11313</span>
<span id="L11314" rel="#L11314">11314</span>
<span id="L11315" rel="#L11315">11315</span>
<span id="L11316" rel="#L11316">11316</span>
<span id="L11317" rel="#L11317">11317</span>
<span id="L11318" rel="#L11318">11318</span>
<span id="L11319" rel="#L11319">11319</span>
<span id="L11320" rel="#L11320">11320</span>
<span id="L11321" rel="#L11321">11321</span>
<span id="L11322" rel="#L11322">11322</span>
<span id="L11323" rel="#L11323">11323</span>
<span id="L11324" rel="#L11324">11324</span>
<span id="L11325" rel="#L11325">11325</span>
<span id="L11326" rel="#L11326">11326</span>
<span id="L11327" rel="#L11327">11327</span>
<span id="L11328" rel="#L11328">11328</span>
<span id="L11329" rel="#L11329">11329</span>
<span id="L11330" rel="#L11330">11330</span>
<span id="L11331" rel="#L11331">11331</span>
<span id="L11332" rel="#L11332">11332</span>
<span id="L11333" rel="#L11333">11333</span>
<span id="L11334" rel="#L11334">11334</span>
<span id="L11335" rel="#L11335">11335</span>
<span id="L11336" rel="#L11336">11336</span>
<span id="L11337" rel="#L11337">11337</span>
<span id="L11338" rel="#L11338">11338</span>
<span id="L11339" rel="#L11339">11339</span>
<span id="L11340" rel="#L11340">11340</span>
<span id="L11341" rel="#L11341">11341</span>
<span id="L11342" rel="#L11342">11342</span>
<span id="L11343" rel="#L11343">11343</span>
<span id="L11344" rel="#L11344">11344</span>
<span id="L11345" rel="#L11345">11345</span>
<span id="L11346" rel="#L11346">11346</span>
<span id="L11347" rel="#L11347">11347</span>
<span id="L11348" rel="#L11348">11348</span>
<span id="L11349" rel="#L11349">11349</span>
<span id="L11350" rel="#L11350">11350</span>
<span id="L11351" rel="#L11351">11351</span>
<span id="L11352" rel="#L11352">11352</span>
<span id="L11353" rel="#L11353">11353</span>
<span id="L11354" rel="#L11354">11354</span>
<span id="L11355" rel="#L11355">11355</span>
<span id="L11356" rel="#L11356">11356</span>
<span id="L11357" rel="#L11357">11357</span>
<span id="L11358" rel="#L11358">11358</span>
<span id="L11359" rel="#L11359">11359</span>
<span id="L11360" rel="#L11360">11360</span>
<span id="L11361" rel="#L11361">11361</span>
<span id="L11362" rel="#L11362">11362</span>
<span id="L11363" rel="#L11363">11363</span>
<span id="L11364" rel="#L11364">11364</span>
<span id="L11365" rel="#L11365">11365</span>
<span id="L11366" rel="#L11366">11366</span>
<span id="L11367" rel="#L11367">11367</span>
<span id="L11368" rel="#L11368">11368</span>
<span id="L11369" rel="#L11369">11369</span>
<span id="L11370" rel="#L11370">11370</span>
<span id="L11371" rel="#L11371">11371</span>
<span id="L11372" rel="#L11372">11372</span>
<span id="L11373" rel="#L11373">11373</span>
<span id="L11374" rel="#L11374">11374</span>
<span id="L11375" rel="#L11375">11375</span>
<span id="L11376" rel="#L11376">11376</span>
<span id="L11377" rel="#L11377">11377</span>
<span id="L11378" rel="#L11378">11378</span>
<span id="L11379" rel="#L11379">11379</span>
<span id="L11380" rel="#L11380">11380</span>
<span id="L11381" rel="#L11381">11381</span>
<span id="L11382" rel="#L11382">11382</span>
<span id="L11383" rel="#L11383">11383</span>
<span id="L11384" rel="#L11384">11384</span>
<span id="L11385" rel="#L11385">11385</span>
<span id="L11386" rel="#L11386">11386</span>
<span id="L11387" rel="#L11387">11387</span>
<span id="L11388" rel="#L11388">11388</span>
<span id="L11389" rel="#L11389">11389</span>
<span id="L11390" rel="#L11390">11390</span>
<span id="L11391" rel="#L11391">11391</span>
<span id="L11392" rel="#L11392">11392</span>
<span id="L11393" rel="#L11393">11393</span>
<span id="L11394" rel="#L11394">11394</span>
<span id="L11395" rel="#L11395">11395</span>
<span id="L11396" rel="#L11396">11396</span>
<span id="L11397" rel="#L11397">11397</span>
<span id="L11398" rel="#L11398">11398</span>
<span id="L11399" rel="#L11399">11399</span>
<span id="L11400" rel="#L11400">11400</span>
<span id="L11401" rel="#L11401">11401</span>
<span id="L11402" rel="#L11402">11402</span>
<span id="L11403" rel="#L11403">11403</span>
<span id="L11404" rel="#L11404">11404</span>
<span id="L11405" rel="#L11405">11405</span>
<span id="L11406" rel="#L11406">11406</span>
<span id="L11407" rel="#L11407">11407</span>
<span id="L11408" rel="#L11408">11408</span>
<span id="L11409" rel="#L11409">11409</span>
<span id="L11410" rel="#L11410">11410</span>
<span id="L11411" rel="#L11411">11411</span>
<span id="L11412" rel="#L11412">11412</span>
<span id="L11413" rel="#L11413">11413</span>
<span id="L11414" rel="#L11414">11414</span>
<span id="L11415" rel="#L11415">11415</span>
<span id="L11416" rel="#L11416">11416</span>
<span id="L11417" rel="#L11417">11417</span>
<span id="L11418" rel="#L11418">11418</span>
<span id="L11419" rel="#L11419">11419</span>
<span id="L11420" rel="#L11420">11420</span>
<span id="L11421" rel="#L11421">11421</span>
<span id="L11422" rel="#L11422">11422</span>
<span id="L11423" rel="#L11423">11423</span>
<span id="L11424" rel="#L11424">11424</span>
<span id="L11425" rel="#L11425">11425</span>
<span id="L11426" rel="#L11426">11426</span>
<span id="L11427" rel="#L11427">11427</span>
<span id="L11428" rel="#L11428">11428</span>
<span id="L11429" rel="#L11429">11429</span>
<span id="L11430" rel="#L11430">11430</span>
<span id="L11431" rel="#L11431">11431</span>
<span id="L11432" rel="#L11432">11432</span>
<span id="L11433" rel="#L11433">11433</span>
<span id="L11434" rel="#L11434">11434</span>
<span id="L11435" rel="#L11435">11435</span>
<span id="L11436" rel="#L11436">11436</span>
<span id="L11437" rel="#L11437">11437</span>
<span id="L11438" rel="#L11438">11438</span>
<span id="L11439" rel="#L11439">11439</span>
<span id="L11440" rel="#L11440">11440</span>
<span id="L11441" rel="#L11441">11441</span>
<span id="L11442" rel="#L11442">11442</span>
<span id="L11443" rel="#L11443">11443</span>
<span id="L11444" rel="#L11444">11444</span>
<span id="L11445" rel="#L11445">11445</span>
<span id="L11446" rel="#L11446">11446</span>
<span id="L11447" rel="#L11447">11447</span>
<span id="L11448" rel="#L11448">11448</span>
<span id="L11449" rel="#L11449">11449</span>
<span id="L11450" rel="#L11450">11450</span>
<span id="L11451" rel="#L11451">11451</span>
<span id="L11452" rel="#L11452">11452</span>
<span id="L11453" rel="#L11453">11453</span>
<span id="L11454" rel="#L11454">11454</span>
<span id="L11455" rel="#L11455">11455</span>
<span id="L11456" rel="#L11456">11456</span>
<span id="L11457" rel="#L11457">11457</span>
<span id="L11458" rel="#L11458">11458</span>
<span id="L11459" rel="#L11459">11459</span>
<span id="L11460" rel="#L11460">11460</span>
<span id="L11461" rel="#L11461">11461</span>
<span id="L11462" rel="#L11462">11462</span>
<span id="L11463" rel="#L11463">11463</span>
<span id="L11464" rel="#L11464">11464</span>
<span id="L11465" rel="#L11465">11465</span>
<span id="L11466" rel="#L11466">11466</span>
<span id="L11467" rel="#L11467">11467</span>
<span id="L11468" rel="#L11468">11468</span>
<span id="L11469" rel="#L11469">11469</span>
<span id="L11470" rel="#L11470">11470</span>
<span id="L11471" rel="#L11471">11471</span>
<span id="L11472" rel="#L11472">11472</span>
<span id="L11473" rel="#L11473">11473</span>
<span id="L11474" rel="#L11474">11474</span>
<span id="L11475" rel="#L11475">11475</span>
<span id="L11476" rel="#L11476">11476</span>
<span id="L11477" rel="#L11477">11477</span>
<span id="L11478" rel="#L11478">11478</span>
<span id="L11479" rel="#L11479">11479</span>
<span id="L11480" rel="#L11480">11480</span>
<span id="L11481" rel="#L11481">11481</span>
<span id="L11482" rel="#L11482">11482</span>
<span id="L11483" rel="#L11483">11483</span>
<span id="L11484" rel="#L11484">11484</span>
<span id="L11485" rel="#L11485">11485</span>
<span id="L11486" rel="#L11486">11486</span>
<span id="L11487" rel="#L11487">11487</span>
<span id="L11488" rel="#L11488">11488</span>
<span id="L11489" rel="#L11489">11489</span>
<span id="L11490" rel="#L11490">11490</span>
<span id="L11491" rel="#L11491">11491</span>
<span id="L11492" rel="#L11492">11492</span>
<span id="L11493" rel="#L11493">11493</span>
<span id="L11494" rel="#L11494">11494</span>
<span id="L11495" rel="#L11495">11495</span>
<span id="L11496" rel="#L11496">11496</span>
<span id="L11497" rel="#L11497">11497</span>
<span id="L11498" rel="#L11498">11498</span>
<span id="L11499" rel="#L11499">11499</span>
<span id="L11500" rel="#L11500">11500</span>
<span id="L11501" rel="#L11501">11501</span>
<span id="L11502" rel="#L11502">11502</span>
<span id="L11503" rel="#L11503">11503</span>
<span id="L11504" rel="#L11504">11504</span>
<span id="L11505" rel="#L11505">11505</span>
<span id="L11506" rel="#L11506">11506</span>
<span id="L11507" rel="#L11507">11507</span>
<span id="L11508" rel="#L11508">11508</span>
<span id="L11509" rel="#L11509">11509</span>
<span id="L11510" rel="#L11510">11510</span>
<span id="L11511" rel="#L11511">11511</span>
<span id="L11512" rel="#L11512">11512</span>
<span id="L11513" rel="#L11513">11513</span>
<span id="L11514" rel="#L11514">11514</span>
<span id="L11515" rel="#L11515">11515</span>
<span id="L11516" rel="#L11516">11516</span>
<span id="L11517" rel="#L11517">11517</span>
<span id="L11518" rel="#L11518">11518</span>
<span id="L11519" rel="#L11519">11519</span>
<span id="L11520" rel="#L11520">11520</span>
<span id="L11521" rel="#L11521">11521</span>
<span id="L11522" rel="#L11522">11522</span>
<span id="L11523" rel="#L11523">11523</span>
<span id="L11524" rel="#L11524">11524</span>
<span id="L11525" rel="#L11525">11525</span>
<span id="L11526" rel="#L11526">11526</span>
<span id="L11527" rel="#L11527">11527</span>
<span id="L11528" rel="#L11528">11528</span>
<span id="L11529" rel="#L11529">11529</span>
<span id="L11530" rel="#L11530">11530</span>
<span id="L11531" rel="#L11531">11531</span>
<span id="L11532" rel="#L11532">11532</span>
<span id="L11533" rel="#L11533">11533</span>
<span id="L11534" rel="#L11534">11534</span>
<span id="L11535" rel="#L11535">11535</span>
<span id="L11536" rel="#L11536">11536</span>
<span id="L11537" rel="#L11537">11537</span>
<span id="L11538" rel="#L11538">11538</span>
<span id="L11539" rel="#L11539">11539</span>
<span id="L11540" rel="#L11540">11540</span>
<span id="L11541" rel="#L11541">11541</span>
<span id="L11542" rel="#L11542">11542</span>
<span id="L11543" rel="#L11543">11543</span>
<span id="L11544" rel="#L11544">11544</span>
<span id="L11545" rel="#L11545">11545</span>
<span id="L11546" rel="#L11546">11546</span>
<span id="L11547" rel="#L11547">11547</span>
<span id="L11548" rel="#L11548">11548</span>
<span id="L11549" rel="#L11549">11549</span>
<span id="L11550" rel="#L11550">11550</span>
<span id="L11551" rel="#L11551">11551</span>
<span id="L11552" rel="#L11552">11552</span>
<span id="L11553" rel="#L11553">11553</span>
<span id="L11554" rel="#L11554">11554</span>
<span id="L11555" rel="#L11555">11555</span>
<span id="L11556" rel="#L11556">11556</span>
<span id="L11557" rel="#L11557">11557</span>
<span id="L11558" rel="#L11558">11558</span>
<span id="L11559" rel="#L11559">11559</span>
<span id="L11560" rel="#L11560">11560</span>
<span id="L11561" rel="#L11561">11561</span>
<span id="L11562" rel="#L11562">11562</span>
<span id="L11563" rel="#L11563">11563</span>
<span id="L11564" rel="#L11564">11564</span>
<span id="L11565" rel="#L11565">11565</span>
<span id="L11566" rel="#L11566">11566</span>
<span id="L11567" rel="#L11567">11567</span>
<span id="L11568" rel="#L11568">11568</span>
<span id="L11569" rel="#L11569">11569</span>
<span id="L11570" rel="#L11570">11570</span>
<span id="L11571" rel="#L11571">11571</span>
<span id="L11572" rel="#L11572">11572</span>
<span id="L11573" rel="#L11573">11573</span>
<span id="L11574" rel="#L11574">11574</span>
<span id="L11575" rel="#L11575">11575</span>
<span id="L11576" rel="#L11576">11576</span>
<span id="L11577" rel="#L11577">11577</span>
<span id="L11578" rel="#L11578">11578</span>
<span id="L11579" rel="#L11579">11579</span>
<span id="L11580" rel="#L11580">11580</span>
<span id="L11581" rel="#L11581">11581</span>
<span id="L11582" rel="#L11582">11582</span>
<span id="L11583" rel="#L11583">11583</span>
<span id="L11584" rel="#L11584">11584</span>
<span id="L11585" rel="#L11585">11585</span>
<span id="L11586" rel="#L11586">11586</span>
<span id="L11587" rel="#L11587">11587</span>
<span id="L11588" rel="#L11588">11588</span>
<span id="L11589" rel="#L11589">11589</span>
<span id="L11590" rel="#L11590">11590</span>
<span id="L11591" rel="#L11591">11591</span>
<span id="L11592" rel="#L11592">11592</span>
<span id="L11593" rel="#L11593">11593</span>
<span id="L11594" rel="#L11594">11594</span>
<span id="L11595" rel="#L11595">11595</span>
<span id="L11596" rel="#L11596">11596</span>
<span id="L11597" rel="#L11597">11597</span>
<span id="L11598" rel="#L11598">11598</span>
<span id="L11599" rel="#L11599">11599</span>
<span id="L11600" rel="#L11600">11600</span>
<span id="L11601" rel="#L11601">11601</span>
<span id="L11602" rel="#L11602">11602</span>
<span id="L11603" rel="#L11603">11603</span>
<span id="L11604" rel="#L11604">11604</span>
<span id="L11605" rel="#L11605">11605</span>
<span id="L11606" rel="#L11606">11606</span>
<span id="L11607" rel="#L11607">11607</span>
<span id="L11608" rel="#L11608">11608</span>
<span id="L11609" rel="#L11609">11609</span>
<span id="L11610" rel="#L11610">11610</span>
<span id="L11611" rel="#L11611">11611</span>
<span id="L11612" rel="#L11612">11612</span>
<span id="L11613" rel="#L11613">11613</span>
<span id="L11614" rel="#L11614">11614</span>
<span id="L11615" rel="#L11615">11615</span>
<span id="L11616" rel="#L11616">11616</span>
<span id="L11617" rel="#L11617">11617</span>
<span id="L11618" rel="#L11618">11618</span>
<span id="L11619" rel="#L11619">11619</span>
<span id="L11620" rel="#L11620">11620</span>
<span id="L11621" rel="#L11621">11621</span>
<span id="L11622" rel="#L11622">11622</span>
<span id="L11623" rel="#L11623">11623</span>
<span id="L11624" rel="#L11624">11624</span>
<span id="L11625" rel="#L11625">11625</span>
<span id="L11626" rel="#L11626">11626</span>
<span id="L11627" rel="#L11627">11627</span>
<span id="L11628" rel="#L11628">11628</span>
<span id="L11629" rel="#L11629">11629</span>
<span id="L11630" rel="#L11630">11630</span>
<span id="L11631" rel="#L11631">11631</span>
<span id="L11632" rel="#L11632">11632</span>
<span id="L11633" rel="#L11633">11633</span>
<span id="L11634" rel="#L11634">11634</span>
<span id="L11635" rel="#L11635">11635</span>
<span id="L11636" rel="#L11636">11636</span>
<span id="L11637" rel="#L11637">11637</span>
<span id="L11638" rel="#L11638">11638</span>
<span id="L11639" rel="#L11639">11639</span>
<span id="L11640" rel="#L11640">11640</span>
<span id="L11641" rel="#L11641">11641</span>
<span id="L11642" rel="#L11642">11642</span>
<span id="L11643" rel="#L11643">11643</span>
<span id="L11644" rel="#L11644">11644</span>
<span id="L11645" rel="#L11645">11645</span>
<span id="L11646" rel="#L11646">11646</span>
<span id="L11647" rel="#L11647">11647</span>
<span id="L11648" rel="#L11648">11648</span>
<span id="L11649" rel="#L11649">11649</span>
<span id="L11650" rel="#L11650">11650</span>
<span id="L11651" rel="#L11651">11651</span>
<span id="L11652" rel="#L11652">11652</span>
<span id="L11653" rel="#L11653">11653</span>
<span id="L11654" rel="#L11654">11654</span>
<span id="L11655" rel="#L11655">11655</span>
<span id="L11656" rel="#L11656">11656</span>
<span id="L11657" rel="#L11657">11657</span>
<span id="L11658" rel="#L11658">11658</span>
<span id="L11659" rel="#L11659">11659</span>
<span id="L11660" rel="#L11660">11660</span>
<span id="L11661" rel="#L11661">11661</span>
<span id="L11662" rel="#L11662">11662</span>
<span id="L11663" rel="#L11663">11663</span>
<span id="L11664" rel="#L11664">11664</span>
<span id="L11665" rel="#L11665">11665</span>
<span id="L11666" rel="#L11666">11666</span>
<span id="L11667" rel="#L11667">11667</span>
<span id="L11668" rel="#L11668">11668</span>
<span id="L11669" rel="#L11669">11669</span>
<span id="L11670" rel="#L11670">11670</span>
<span id="L11671" rel="#L11671">11671</span>
<span id="L11672" rel="#L11672">11672</span>
<span id="L11673" rel="#L11673">11673</span>
<span id="L11674" rel="#L11674">11674</span>
<span id="L11675" rel="#L11675">11675</span>
<span id="L11676" rel="#L11676">11676</span>
<span id="L11677" rel="#L11677">11677</span>
<span id="L11678" rel="#L11678">11678</span>
<span id="L11679" rel="#L11679">11679</span>
<span id="L11680" rel="#L11680">11680</span>
<span id="L11681" rel="#L11681">11681</span>
<span id="L11682" rel="#L11682">11682</span>
<span id="L11683" rel="#L11683">11683</span>
<span id="L11684" rel="#L11684">11684</span>
<span id="L11685" rel="#L11685">11685</span>
<span id="L11686" rel="#L11686">11686</span>
<span id="L11687" rel="#L11687">11687</span>
<span id="L11688" rel="#L11688">11688</span>
<span id="L11689" rel="#L11689">11689</span>
<span id="L11690" rel="#L11690">11690</span>
<span id="L11691" rel="#L11691">11691</span>
<span id="L11692" rel="#L11692">11692</span>
<span id="L11693" rel="#L11693">11693</span>
<span id="L11694" rel="#L11694">11694</span>
<span id="L11695" rel="#L11695">11695</span>
<span id="L11696" rel="#L11696">11696</span>
<span id="L11697" rel="#L11697">11697</span>
<span id="L11698" rel="#L11698">11698</span>
<span id="L11699" rel="#L11699">11699</span>
<span id="L11700" rel="#L11700">11700</span>
<span id="L11701" rel="#L11701">11701</span>
<span id="L11702" rel="#L11702">11702</span>
<span id="L11703" rel="#L11703">11703</span>
<span id="L11704" rel="#L11704">11704</span>
<span id="L11705" rel="#L11705">11705</span>
<span id="L11706" rel="#L11706">11706</span>
<span id="L11707" rel="#L11707">11707</span>
<span id="L11708" rel="#L11708">11708</span>
<span id="L11709" rel="#L11709">11709</span>
<span id="L11710" rel="#L11710">11710</span>
<span id="L11711" rel="#L11711">11711</span>
<span id="L11712" rel="#L11712">11712</span>
<span id="L11713" rel="#L11713">11713</span>
<span id="L11714" rel="#L11714">11714</span>
<span id="L11715" rel="#L11715">11715</span>
<span id="L11716" rel="#L11716">11716</span>
<span id="L11717" rel="#L11717">11717</span>
<span id="L11718" rel="#L11718">11718</span>
<span id="L11719" rel="#L11719">11719</span>
<span id="L11720" rel="#L11720">11720</span>
<span id="L11721" rel="#L11721">11721</span>
<span id="L11722" rel="#L11722">11722</span>
<span id="L11723" rel="#L11723">11723</span>
<span id="L11724" rel="#L11724">11724</span>
<span id="L11725" rel="#L11725">11725</span>
<span id="L11726" rel="#L11726">11726</span>
<span id="L11727" rel="#L11727">11727</span>
<span id="L11728" rel="#L11728">11728</span>
<span id="L11729" rel="#L11729">11729</span>
<span id="L11730" rel="#L11730">11730</span>
<span id="L11731" rel="#L11731">11731</span>
<span id="L11732" rel="#L11732">11732</span>
<span id="L11733" rel="#L11733">11733</span>
<span id="L11734" rel="#L11734">11734</span>
<span id="L11735" rel="#L11735">11735</span>
<span id="L11736" rel="#L11736">11736</span>
<span id="L11737" rel="#L11737">11737</span>
<span id="L11738" rel="#L11738">11738</span>
<span id="L11739" rel="#L11739">11739</span>
<span id="L11740" rel="#L11740">11740</span>
<span id="L11741" rel="#L11741">11741</span>
<span id="L11742" rel="#L11742">11742</span>
<span id="L11743" rel="#L11743">11743</span>
<span id="L11744" rel="#L11744">11744</span>
<span id="L11745" rel="#L11745">11745</span>
<span id="L11746" rel="#L11746">11746</span>
<span id="L11747" rel="#L11747">11747</span>
<span id="L11748" rel="#L11748">11748</span>
<span id="L11749" rel="#L11749">11749</span>
<span id="L11750" rel="#L11750">11750</span>
<span id="L11751" rel="#L11751">11751</span>
<span id="L11752" rel="#L11752">11752</span>
<span id="L11753" rel="#L11753">11753</span>
<span id="L11754" rel="#L11754">11754</span>
<span id="L11755" rel="#L11755">11755</span>
<span id="L11756" rel="#L11756">11756</span>
<span id="L11757" rel="#L11757">11757</span>
<span id="L11758" rel="#L11758">11758</span>
<span id="L11759" rel="#L11759">11759</span>
<span id="L11760" rel="#L11760">11760</span>
<span id="L11761" rel="#L11761">11761</span>
<span id="L11762" rel="#L11762">11762</span>
<span id="L11763" rel="#L11763">11763</span>
<span id="L11764" rel="#L11764">11764</span>
<span id="L11765" rel="#L11765">11765</span>
<span id="L11766" rel="#L11766">11766</span>
<span id="L11767" rel="#L11767">11767</span>
<span id="L11768" rel="#L11768">11768</span>
<span id="L11769" rel="#L11769">11769</span>
<span id="L11770" rel="#L11770">11770</span>
<span id="L11771" rel="#L11771">11771</span>
<span id="L11772" rel="#L11772">11772</span>
<span id="L11773" rel="#L11773">11773</span>
<span id="L11774" rel="#L11774">11774</span>
<span id="L11775" rel="#L11775">11775</span>
<span id="L11776" rel="#L11776">11776</span>
<span id="L11777" rel="#L11777">11777</span>
<span id="L11778" rel="#L11778">11778</span>
<span id="L11779" rel="#L11779">11779</span>
<span id="L11780" rel="#L11780">11780</span>
<span id="L11781" rel="#L11781">11781</span>
<span id="L11782" rel="#L11782">11782</span>
<span id="L11783" rel="#L11783">11783</span>
<span id="L11784" rel="#L11784">11784</span>
<span id="L11785" rel="#L11785">11785</span>
<span id="L11786" rel="#L11786">11786</span>
<span id="L11787" rel="#L11787">11787</span>
<span id="L11788" rel="#L11788">11788</span>
<span id="L11789" rel="#L11789">11789</span>
<span id="L11790" rel="#L11790">11790</span>
<span id="L11791" rel="#L11791">11791</span>
<span id="L11792" rel="#L11792">11792</span>
<span id="L11793" rel="#L11793">11793</span>
<span id="L11794" rel="#L11794">11794</span>
<span id="L11795" rel="#L11795">11795</span>
<span id="L11796" rel="#L11796">11796</span>
<span id="L11797" rel="#L11797">11797</span>
<span id="L11798" rel="#L11798">11798</span>
<span id="L11799" rel="#L11799">11799</span>
<span id="L11800" rel="#L11800">11800</span>
<span id="L11801" rel="#L11801">11801</span>
<span id="L11802" rel="#L11802">11802</span>
<span id="L11803" rel="#L11803">11803</span>
<span id="L11804" rel="#L11804">11804</span>
<span id="L11805" rel="#L11805">11805</span>
<span id="L11806" rel="#L11806">11806</span>
<span id="L11807" rel="#L11807">11807</span>
<span id="L11808" rel="#L11808">11808</span>
<span id="L11809" rel="#L11809">11809</span>
<span id="L11810" rel="#L11810">11810</span>
<span id="L11811" rel="#L11811">11811</span>
<span id="L11812" rel="#L11812">11812</span>
<span id="L11813" rel="#L11813">11813</span>
<span id="L11814" rel="#L11814">11814</span>
<span id="L11815" rel="#L11815">11815</span>
<span id="L11816" rel="#L11816">11816</span>
<span id="L11817" rel="#L11817">11817</span>
<span id="L11818" rel="#L11818">11818</span>
<span id="L11819" rel="#L11819">11819</span>
<span id="L11820" rel="#L11820">11820</span>
<span id="L11821" rel="#L11821">11821</span>
<span id="L11822" rel="#L11822">11822</span>
<span id="L11823" rel="#L11823">11823</span>
<span id="L11824" rel="#L11824">11824</span>
<span id="L11825" rel="#L11825">11825</span>
<span id="L11826" rel="#L11826">11826</span>
<span id="L11827" rel="#L11827">11827</span>
<span id="L11828" rel="#L11828">11828</span>
<span id="L11829" rel="#L11829">11829</span>
<span id="L11830" rel="#L11830">11830</span>
<span id="L11831" rel="#L11831">11831</span>
<span id="L11832" rel="#L11832">11832</span>
<span id="L11833" rel="#L11833">11833</span>
<span id="L11834" rel="#L11834">11834</span>
<span id="L11835" rel="#L11835">11835</span>
<span id="L11836" rel="#L11836">11836</span>
<span id="L11837" rel="#L11837">11837</span>
<span id="L11838" rel="#L11838">11838</span>
<span id="L11839" rel="#L11839">11839</span>
<span id="L11840" rel="#L11840">11840</span>
<span id="L11841" rel="#L11841">11841</span>
<span id="L11842" rel="#L11842">11842</span>
<span id="L11843" rel="#L11843">11843</span>
<span id="L11844" rel="#L11844">11844</span>
<span id="L11845" rel="#L11845">11845</span>
<span id="L11846" rel="#L11846">11846</span>
<span id="L11847" rel="#L11847">11847</span>
<span id="L11848" rel="#L11848">11848</span>
<span id="L11849" rel="#L11849">11849</span>
<span id="L11850" rel="#L11850">11850</span>
<span id="L11851" rel="#L11851">11851</span>
<span id="L11852" rel="#L11852">11852</span>
<span id="L11853" rel="#L11853">11853</span>
<span id="L11854" rel="#L11854">11854</span>
<span id="L11855" rel="#L11855">11855</span>
<span id="L11856" rel="#L11856">11856</span>
<span id="L11857" rel="#L11857">11857</span>
<span id="L11858" rel="#L11858">11858</span>
<span id="L11859" rel="#L11859">11859</span>
<span id="L11860" rel="#L11860">11860</span>
<span id="L11861" rel="#L11861">11861</span>
<span id="L11862" rel="#L11862">11862</span>
<span id="L11863" rel="#L11863">11863</span>
<span id="L11864" rel="#L11864">11864</span>
<span id="L11865" rel="#L11865">11865</span>
<span id="L11866" rel="#L11866">11866</span>
<span id="L11867" rel="#L11867">11867</span>
<span id="L11868" rel="#L11868">11868</span>
<span id="L11869" rel="#L11869">11869</span>
<span id="L11870" rel="#L11870">11870</span>
<span id="L11871" rel="#L11871">11871</span>
<span id="L11872" rel="#L11872">11872</span>
<span id="L11873" rel="#L11873">11873</span>
<span id="L11874" rel="#L11874">11874</span>
<span id="L11875" rel="#L11875">11875</span>
<span id="L11876" rel="#L11876">11876</span>
<span id="L11877" rel="#L11877">11877</span>
<span id="L11878" rel="#L11878">11878</span>
<span id="L11879" rel="#L11879">11879</span>
<span id="L11880" rel="#L11880">11880</span>
<span id="L11881" rel="#L11881">11881</span>
<span id="L11882" rel="#L11882">11882</span>
<span id="L11883" rel="#L11883">11883</span>
<span id="L11884" rel="#L11884">11884</span>
<span id="L11885" rel="#L11885">11885</span>
<span id="L11886" rel="#L11886">11886</span>
<span id="L11887" rel="#L11887">11887</span>
<span id="L11888" rel="#L11888">11888</span>
<span id="L11889" rel="#L11889">11889</span>
<span id="L11890" rel="#L11890">11890</span>
<span id="L11891" rel="#L11891">11891</span>
<span id="L11892" rel="#L11892">11892</span>
<span id="L11893" rel="#L11893">11893</span>
<span id="L11894" rel="#L11894">11894</span>
<span id="L11895" rel="#L11895">11895</span>
<span id="L11896" rel="#L11896">11896</span>
<span id="L11897" rel="#L11897">11897</span>
<span id="L11898" rel="#L11898">11898</span>
<span id="L11899" rel="#L11899">11899</span>
<span id="L11900" rel="#L11900">11900</span>
<span id="L11901" rel="#L11901">11901</span>
<span id="L11902" rel="#L11902">11902</span>
<span id="L11903" rel="#L11903">11903</span>
<span id="L11904" rel="#L11904">11904</span>
<span id="L11905" rel="#L11905">11905</span>
<span id="L11906" rel="#L11906">11906</span>
<span id="L11907" rel="#L11907">11907</span>
<span id="L11908" rel="#L11908">11908</span>
<span id="L11909" rel="#L11909">11909</span>
<span id="L11910" rel="#L11910">11910</span>
<span id="L11911" rel="#L11911">11911</span>
<span id="L11912" rel="#L11912">11912</span>
<span id="L11913" rel="#L11913">11913</span>
<span id="L11914" rel="#L11914">11914</span>
<span id="L11915" rel="#L11915">11915</span>
<span id="L11916" rel="#L11916">11916</span>
<span id="L11917" rel="#L11917">11917</span>
<span id="L11918" rel="#L11918">11918</span>
<span id="L11919" rel="#L11919">11919</span>
<span id="L11920" rel="#L11920">11920</span>
<span id="L11921" rel="#L11921">11921</span>
<span id="L11922" rel="#L11922">11922</span>
<span id="L11923" rel="#L11923">11923</span>
<span id="L11924" rel="#L11924">11924</span>
<span id="L11925" rel="#L11925">11925</span>
<span id="L11926" rel="#L11926">11926</span>
<span id="L11927" rel="#L11927">11927</span>
<span id="L11928" rel="#L11928">11928</span>
<span id="L11929" rel="#L11929">11929</span>
<span id="L11930" rel="#L11930">11930</span>
<span id="L11931" rel="#L11931">11931</span>
<span id="L11932" rel="#L11932">11932</span>
<span id="L11933" rel="#L11933">11933</span>
<span id="L11934" rel="#L11934">11934</span>
<span id="L11935" rel="#L11935">11935</span>
<span id="L11936" rel="#L11936">11936</span>
<span id="L11937" rel="#L11937">11937</span>
<span id="L11938" rel="#L11938">11938</span>
<span id="L11939" rel="#L11939">11939</span>
<span id="L11940" rel="#L11940">11940</span>
<span id="L11941" rel="#L11941">11941</span>
<span id="L11942" rel="#L11942">11942</span>
<span id="L11943" rel="#L11943">11943</span>
<span id="L11944" rel="#L11944">11944</span>
<span id="L11945" rel="#L11945">11945</span>
<span id="L11946" rel="#L11946">11946</span>
<span id="L11947" rel="#L11947">11947</span>
<span id="L11948" rel="#L11948">11948</span>
<span id="L11949" rel="#L11949">11949</span>
<span id="L11950" rel="#L11950">11950</span>
<span id="L11951" rel="#L11951">11951</span>
<span id="L11952" rel="#L11952">11952</span>
<span id="L11953" rel="#L11953">11953</span>
<span id="L11954" rel="#L11954">11954</span>
<span id="L11955" rel="#L11955">11955</span>
<span id="L11956" rel="#L11956">11956</span>
<span id="L11957" rel="#L11957">11957</span>
<span id="L11958" rel="#L11958">11958</span>
<span id="L11959" rel="#L11959">11959</span>
<span id="L11960" rel="#L11960">11960</span>
<span id="L11961" rel="#L11961">11961</span>
<span id="L11962" rel="#L11962">11962</span>
<span id="L11963" rel="#L11963">11963</span>
<span id="L11964" rel="#L11964">11964</span>
<span id="L11965" rel="#L11965">11965</span>
<span id="L11966" rel="#L11966">11966</span>
<span id="L11967" rel="#L11967">11967</span>
<span id="L11968" rel="#L11968">11968</span>
<span id="L11969" rel="#L11969">11969</span>
<span id="L11970" rel="#L11970">11970</span>
<span id="L11971" rel="#L11971">11971</span>
<span id="L11972" rel="#L11972">11972</span>
<span id="L11973" rel="#L11973">11973</span>
<span id="L11974" rel="#L11974">11974</span>
<span id="L11975" rel="#L11975">11975</span>
<span id="L11976" rel="#L11976">11976</span>
<span id="L11977" rel="#L11977">11977</span>
<span id="L11978" rel="#L11978">11978</span>
<span id="L11979" rel="#L11979">11979</span>
<span id="L11980" rel="#L11980">11980</span>
<span id="L11981" rel="#L11981">11981</span>
<span id="L11982" rel="#L11982">11982</span>
<span id="L11983" rel="#L11983">11983</span>
<span id="L11984" rel="#L11984">11984</span>
<span id="L11985" rel="#L11985">11985</span>
<span id="L11986" rel="#L11986">11986</span>
<span id="L11987" rel="#L11987">11987</span>
<span id="L11988" rel="#L11988">11988</span>
<span id="L11989" rel="#L11989">11989</span>
<span id="L11990" rel="#L11990">11990</span>
<span id="L11991" rel="#L11991">11991</span>
<span id="L11992" rel="#L11992">11992</span>
<span id="L11993" rel="#L11993">11993</span>
<span id="L11994" rel="#L11994">11994</span>
<span id="L11995" rel="#L11995">11995</span>
<span id="L11996" rel="#L11996">11996</span>
<span id="L11997" rel="#L11997">11997</span>
<span id="L11998" rel="#L11998">11998</span>
<span id="L11999" rel="#L11999">11999</span>
<span id="L12000" rel="#L12000">12000</span>
<span id="L12001" rel="#L12001">12001</span>
<span id="L12002" rel="#L12002">12002</span>
<span id="L12003" rel="#L12003">12003</span>
<span id="L12004" rel="#L12004">12004</span>
<span id="L12005" rel="#L12005">12005</span>
<span id="L12006" rel="#L12006">12006</span>
<span id="L12007" rel="#L12007">12007</span>
<span id="L12008" rel="#L12008">12008</span>
<span id="L12009" rel="#L12009">12009</span>
<span id="L12010" rel="#L12010">12010</span>
<span id="L12011" rel="#L12011">12011</span>
<span id="L12012" rel="#L12012">12012</span>
<span id="L12013" rel="#L12013">12013</span>
<span id="L12014" rel="#L12014">12014</span>
<span id="L12015" rel="#L12015">12015</span>
<span id="L12016" rel="#L12016">12016</span>
<span id="L12017" rel="#L12017">12017</span>
<span id="L12018" rel="#L12018">12018</span>
<span id="L12019" rel="#L12019">12019</span>
<span id="L12020" rel="#L12020">12020</span>
<span id="L12021" rel="#L12021">12021</span>
<span id="L12022" rel="#L12022">12022</span>
<span id="L12023" rel="#L12023">12023</span>
<span id="L12024" rel="#L12024">12024</span>
<span id="L12025" rel="#L12025">12025</span>
<span id="L12026" rel="#L12026">12026</span>
<span id="L12027" rel="#L12027">12027</span>
<span id="L12028" rel="#L12028">12028</span>
<span id="L12029" rel="#L12029">12029</span>
<span id="L12030" rel="#L12030">12030</span>
<span id="L12031" rel="#L12031">12031</span>
<span id="L12032" rel="#L12032">12032</span>
<span id="L12033" rel="#L12033">12033</span>
<span id="L12034" rel="#L12034">12034</span>
<span id="L12035" rel="#L12035">12035</span>
<span id="L12036" rel="#L12036">12036</span>
<span id="L12037" rel="#L12037">12037</span>
<span id="L12038" rel="#L12038">12038</span>
<span id="L12039" rel="#L12039">12039</span>
<span id="L12040" rel="#L12040">12040</span>
<span id="L12041" rel="#L12041">12041</span>
<span id="L12042" rel="#L12042">12042</span>
<span id="L12043" rel="#L12043">12043</span>
<span id="L12044" rel="#L12044">12044</span>
<span id="L12045" rel="#L12045">12045</span>
<span id="L12046" rel="#L12046">12046</span>
<span id="L12047" rel="#L12047">12047</span>
<span id="L12048" rel="#L12048">12048</span>
<span id="L12049" rel="#L12049">12049</span>
<span id="L12050" rel="#L12050">12050</span>
<span id="L12051" rel="#L12051">12051</span>
<span id="L12052" rel="#L12052">12052</span>
<span id="L12053" rel="#L12053">12053</span>
<span id="L12054" rel="#L12054">12054</span>
<span id="L12055" rel="#L12055">12055</span>
<span id="L12056" rel="#L12056">12056</span>
<span id="L12057" rel="#L12057">12057</span>
<span id="L12058" rel="#L12058">12058</span>
<span id="L12059" rel="#L12059">12059</span>
<span id="L12060" rel="#L12060">12060</span>
<span id="L12061" rel="#L12061">12061</span>
<span id="L12062" rel="#L12062">12062</span>
<span id="L12063" rel="#L12063">12063</span>
<span id="L12064" rel="#L12064">12064</span>
<span id="L12065" rel="#L12065">12065</span>
<span id="L12066" rel="#L12066">12066</span>
<span id="L12067" rel="#L12067">12067</span>
<span id="L12068" rel="#L12068">12068</span>
<span id="L12069" rel="#L12069">12069</span>
<span id="L12070" rel="#L12070">12070</span>
<span id="L12071" rel="#L12071">12071</span>
<span id="L12072" rel="#L12072">12072</span>
<span id="L12073" rel="#L12073">12073</span>
<span id="L12074" rel="#L12074">12074</span>
<span id="L12075" rel="#L12075">12075</span>
<span id="L12076" rel="#L12076">12076</span>
<span id="L12077" rel="#L12077">12077</span>
<span id="L12078" rel="#L12078">12078</span>
<span id="L12079" rel="#L12079">12079</span>
<span id="L12080" rel="#L12080">12080</span>
<span id="L12081" rel="#L12081">12081</span>
<span id="L12082" rel="#L12082">12082</span>
<span id="L12083" rel="#L12083">12083</span>
<span id="L12084" rel="#L12084">12084</span>
<span id="L12085" rel="#L12085">12085</span>
<span id="L12086" rel="#L12086">12086</span>
<span id="L12087" rel="#L12087">12087</span>
<span id="L12088" rel="#L12088">12088</span>
<span id="L12089" rel="#L12089">12089</span>
<span id="L12090" rel="#L12090">12090</span>
<span id="L12091" rel="#L12091">12091</span>
<span id="L12092" rel="#L12092">12092</span>
<span id="L12093" rel="#L12093">12093</span>
<span id="L12094" rel="#L12094">12094</span>
<span id="L12095" rel="#L12095">12095</span>
<span id="L12096" rel="#L12096">12096</span>
<span id="L12097" rel="#L12097">12097</span>
<span id="L12098" rel="#L12098">12098</span>
<span id="L12099" rel="#L12099">12099</span>
<span id="L12100" rel="#L12100">12100</span>
<span id="L12101" rel="#L12101">12101</span>
<span id="L12102" rel="#L12102">12102</span>
<span id="L12103" rel="#L12103">12103</span>
<span id="L12104" rel="#L12104">12104</span>
<span id="L12105" rel="#L12105">12105</span>
<span id="L12106" rel="#L12106">12106</span>
<span id="L12107" rel="#L12107">12107</span>
<span id="L12108" rel="#L12108">12108</span>
<span id="L12109" rel="#L12109">12109</span>
<span id="L12110" rel="#L12110">12110</span>
<span id="L12111" rel="#L12111">12111</span>
<span id="L12112" rel="#L12112">12112</span>
<span id="L12113" rel="#L12113">12113</span>
<span id="L12114" rel="#L12114">12114</span>
<span id="L12115" rel="#L12115">12115</span>
<span id="L12116" rel="#L12116">12116</span>
<span id="L12117" rel="#L12117">12117</span>
<span id="L12118" rel="#L12118">12118</span>
<span id="L12119" rel="#L12119">12119</span>
<span id="L12120" rel="#L12120">12120</span>
<span id="L12121" rel="#L12121">12121</span>
<span id="L12122" rel="#L12122">12122</span>
<span id="L12123" rel="#L12123">12123</span>
<span id="L12124" rel="#L12124">12124</span>
<span id="L12125" rel="#L12125">12125</span>
<span id="L12126" rel="#L12126">12126</span>
<span id="L12127" rel="#L12127">12127</span>
<span id="L12128" rel="#L12128">12128</span>
<span id="L12129" rel="#L12129">12129</span>
<span id="L12130" rel="#L12130">12130</span>
<span id="L12131" rel="#L12131">12131</span>
<span id="L12132" rel="#L12132">12132</span>
<span id="L12133" rel="#L12133">12133</span>
<span id="L12134" rel="#L12134">12134</span>
<span id="L12135" rel="#L12135">12135</span>
<span id="L12136" rel="#L12136">12136</span>
<span id="L12137" rel="#L12137">12137</span>
<span id="L12138" rel="#L12138">12138</span>
<span id="L12139" rel="#L12139">12139</span>
<span id="L12140" rel="#L12140">12140</span>
<span id="L12141" rel="#L12141">12141</span>
<span id="L12142" rel="#L12142">12142</span>
<span id="L12143" rel="#L12143">12143</span>
<span id="L12144" rel="#L12144">12144</span>
<span id="L12145" rel="#L12145">12145</span>
<span id="L12146" rel="#L12146">12146</span>
<span id="L12147" rel="#L12147">12147</span>
<span id="L12148" rel="#L12148">12148</span>
<span id="L12149" rel="#L12149">12149</span>
<span id="L12150" rel="#L12150">12150</span>
<span id="L12151" rel="#L12151">12151</span>
<span id="L12152" rel="#L12152">12152</span>
<span id="L12153" rel="#L12153">12153</span>
<span id="L12154" rel="#L12154">12154</span>
<span id="L12155" rel="#L12155">12155</span>
<span id="L12156" rel="#L12156">12156</span>
<span id="L12157" rel="#L12157">12157</span>
<span id="L12158" rel="#L12158">12158</span>
<span id="L12159" rel="#L12159">12159</span>
<span id="L12160" rel="#L12160">12160</span>
<span id="L12161" rel="#L12161">12161</span>
<span id="L12162" rel="#L12162">12162</span>
<span id="L12163" rel="#L12163">12163</span>
<span id="L12164" rel="#L12164">12164</span>
<span id="L12165" rel="#L12165">12165</span>
<span id="L12166" rel="#L12166">12166</span>
<span id="L12167" rel="#L12167">12167</span>
<span id="L12168" rel="#L12168">12168</span>
<span id="L12169" rel="#L12169">12169</span>
<span id="L12170" rel="#L12170">12170</span>
<span id="L12171" rel="#L12171">12171</span>
<span id="L12172" rel="#L12172">12172</span>
<span id="L12173" rel="#L12173">12173</span>
<span id="L12174" rel="#L12174">12174</span>
<span id="L12175" rel="#L12175">12175</span>
<span id="L12176" rel="#L12176">12176</span>
<span id="L12177" rel="#L12177">12177</span>
<span id="L12178" rel="#L12178">12178</span>
<span id="L12179" rel="#L12179">12179</span>
<span id="L12180" rel="#L12180">12180</span>
<span id="L12181" rel="#L12181">12181</span>
<span id="L12182" rel="#L12182">12182</span>
<span id="L12183" rel="#L12183">12183</span>
<span id="L12184" rel="#L12184">12184</span>
<span id="L12185" rel="#L12185">12185</span>
<span id="L12186" rel="#L12186">12186</span>
<span id="L12187" rel="#L12187">12187</span>
<span id="L12188" rel="#L12188">12188</span>
<span id="L12189" rel="#L12189">12189</span>
<span id="L12190" rel="#L12190">12190</span>
<span id="L12191" rel="#L12191">12191</span>
<span id="L12192" rel="#L12192">12192</span>
<span id="L12193" rel="#L12193">12193</span>
<span id="L12194" rel="#L12194">12194</span>
<span id="L12195" rel="#L12195">12195</span>
<span id="L12196" rel="#L12196">12196</span>
<span id="L12197" rel="#L12197">12197</span>
<span id="L12198" rel="#L12198">12198</span>
<span id="L12199" rel="#L12199">12199</span>
<span id="L12200" rel="#L12200">12200</span>
<span id="L12201" rel="#L12201">12201</span>
<span id="L12202" rel="#L12202">12202</span>
<span id="L12203" rel="#L12203">12203</span>
<span id="L12204" rel="#L12204">12204</span>
<span id="L12205" rel="#L12205">12205</span>
<span id="L12206" rel="#L12206">12206</span>
<span id="L12207" rel="#L12207">12207</span>
<span id="L12208" rel="#L12208">12208</span>
<span id="L12209" rel="#L12209">12209</span>
<span id="L12210" rel="#L12210">12210</span>
<span id="L12211" rel="#L12211">12211</span>
<span id="L12212" rel="#L12212">12212</span>
<span id="L12213" rel="#L12213">12213</span>
<span id="L12214" rel="#L12214">12214</span>
<span id="L12215" rel="#L12215">12215</span>
<span id="L12216" rel="#L12216">12216</span>
<span id="L12217" rel="#L12217">12217</span>
<span id="L12218" rel="#L12218">12218</span>
<span id="L12219" rel="#L12219">12219</span>
<span id="L12220" rel="#L12220">12220</span>
<span id="L12221" rel="#L12221">12221</span>
<span id="L12222" rel="#L12222">12222</span>
<span id="L12223" rel="#L12223">12223</span>
<span id="L12224" rel="#L12224">12224</span>
<span id="L12225" rel="#L12225">12225</span>
<span id="L12226" rel="#L12226">12226</span>
<span id="L12227" rel="#L12227">12227</span>
<span id="L12228" rel="#L12228">12228</span>
<span id="L12229" rel="#L12229">12229</span>
<span id="L12230" rel="#L12230">12230</span>
<span id="L12231" rel="#L12231">12231</span>
<span id="L12232" rel="#L12232">12232</span>
<span id="L12233" rel="#L12233">12233</span>
<span id="L12234" rel="#L12234">12234</span>
<span id="L12235" rel="#L12235">12235</span>
<span id="L12236" rel="#L12236">12236</span>
<span id="L12237" rel="#L12237">12237</span>
<span id="L12238" rel="#L12238">12238</span>
<span id="L12239" rel="#L12239">12239</span>
<span id="L12240" rel="#L12240">12240</span>
<span id="L12241" rel="#L12241">12241</span>
<span id="L12242" rel="#L12242">12242</span>
<span id="L12243" rel="#L12243">12243</span>
<span id="L12244" rel="#L12244">12244</span>
<span id="L12245" rel="#L12245">12245</span>
<span id="L12246" rel="#L12246">12246</span>
<span id="L12247" rel="#L12247">12247</span>
<span id="L12248" rel="#L12248">12248</span>
<span id="L12249" rel="#L12249">12249</span>
<span id="L12250" rel="#L12250">12250</span>
<span id="L12251" rel="#L12251">12251</span>
<span id="L12252" rel="#L12252">12252</span>
<span id="L12253" rel="#L12253">12253</span>
<span id="L12254" rel="#L12254">12254</span>
<span id="L12255" rel="#L12255">12255</span>
<span id="L12256" rel="#L12256">12256</span>
<span id="L12257" rel="#L12257">12257</span>
<span id="L12258" rel="#L12258">12258</span>
<span id="L12259" rel="#L12259">12259</span>
<span id="L12260" rel="#L12260">12260</span>
<span id="L12261" rel="#L12261">12261</span>
<span id="L12262" rel="#L12262">12262</span>
<span id="L12263" rel="#L12263">12263</span>
<span id="L12264" rel="#L12264">12264</span>
<span id="L12265" rel="#L12265">12265</span>
<span id="L12266" rel="#L12266">12266</span>
<span id="L12267" rel="#L12267">12267</span>
<span id="L12268" rel="#L12268">12268</span>
<span id="L12269" rel="#L12269">12269</span>
<span id="L12270" rel="#L12270">12270</span>
<span id="L12271" rel="#L12271">12271</span>
<span id="L12272" rel="#L12272">12272</span>
<span id="L12273" rel="#L12273">12273</span>
<span id="L12274" rel="#L12274">12274</span>
<span id="L12275" rel="#L12275">12275</span>
<span id="L12276" rel="#L12276">12276</span>
<span id="L12277" rel="#L12277">12277</span>
<span id="L12278" rel="#L12278">12278</span>
<span id="L12279" rel="#L12279">12279</span>
<span id="L12280" rel="#L12280">12280</span>
<span id="L12281" rel="#L12281">12281</span>
<span id="L12282" rel="#L12282">12282</span>
<span id="L12283" rel="#L12283">12283</span>
<span id="L12284" rel="#L12284">12284</span>
<span id="L12285" rel="#L12285">12285</span>
<span id="L12286" rel="#L12286">12286</span>
<span id="L12287" rel="#L12287">12287</span>
<span id="L12288" rel="#L12288">12288</span>
<span id="L12289" rel="#L12289">12289</span>
<span id="L12290" rel="#L12290">12290</span>
<span id="L12291" rel="#L12291">12291</span>
<span id="L12292" rel="#L12292">12292</span>
<span id="L12293" rel="#L12293">12293</span>
<span id="L12294" rel="#L12294">12294</span>
<span id="L12295" rel="#L12295">12295</span>
<span id="L12296" rel="#L12296">12296</span>
<span id="L12297" rel="#L12297">12297</span>
<span id="L12298" rel="#L12298">12298</span>
<span id="L12299" rel="#L12299">12299</span>
<span id="L12300" rel="#L12300">12300</span>
<span id="L12301" rel="#L12301">12301</span>
<span id="L12302" rel="#L12302">12302</span>
<span id="L12303" rel="#L12303">12303</span>
<span id="L12304" rel="#L12304">12304</span>
<span id="L12305" rel="#L12305">12305</span>
<span id="L12306" rel="#L12306">12306</span>
<span id="L12307" rel="#L12307">12307</span>
<span id="L12308" rel="#L12308">12308</span>
<span id="L12309" rel="#L12309">12309</span>
<span id="L12310" rel="#L12310">12310</span>
<span id="L12311" rel="#L12311">12311</span>
<span id="L12312" rel="#L12312">12312</span>
<span id="L12313" rel="#L12313">12313</span>
<span id="L12314" rel="#L12314">12314</span>
<span id="L12315" rel="#L12315">12315</span>
<span id="L12316" rel="#L12316">12316</span>
<span id="L12317" rel="#L12317">12317</span>
<span id="L12318" rel="#L12318">12318</span>
<span id="L12319" rel="#L12319">12319</span>
<span id="L12320" rel="#L12320">12320</span>
<span id="L12321" rel="#L12321">12321</span>
<span id="L12322" rel="#L12322">12322</span>
<span id="L12323" rel="#L12323">12323</span>
<span id="L12324" rel="#L12324">12324</span>
<span id="L12325" rel="#L12325">12325</span>
<span id="L12326" rel="#L12326">12326</span>
<span id="L12327" rel="#L12327">12327</span>
<span id="L12328" rel="#L12328">12328</span>
<span id="L12329" rel="#L12329">12329</span>
<span id="L12330" rel="#L12330">12330</span>
<span id="L12331" rel="#L12331">12331</span>
<span id="L12332" rel="#L12332">12332</span>
<span id="L12333" rel="#L12333">12333</span>
<span id="L12334" rel="#L12334">12334</span>
<span id="L12335" rel="#L12335">12335</span>
<span id="L12336" rel="#L12336">12336</span>
<span id="L12337" rel="#L12337">12337</span>
<span id="L12338" rel="#L12338">12338</span>
<span id="L12339" rel="#L12339">12339</span>
<span id="L12340" rel="#L12340">12340</span>
<span id="L12341" rel="#L12341">12341</span>
<span id="L12342" rel="#L12342">12342</span>
<span id="L12343" rel="#L12343">12343</span>
<span id="L12344" rel="#L12344">12344</span>
<span id="L12345" rel="#L12345">12345</span>
<span id="L12346" rel="#L12346">12346</span>
<span id="L12347" rel="#L12347">12347</span>
<span id="L12348" rel="#L12348">12348</span>
<span id="L12349" rel="#L12349">12349</span>
<span id="L12350" rel="#L12350">12350</span>
<span id="L12351" rel="#L12351">12351</span>
<span id="L12352" rel="#L12352">12352</span>
<span id="L12353" rel="#L12353">12353</span>
<span id="L12354" rel="#L12354">12354</span>
<span id="L12355" rel="#L12355">12355</span>
<span id="L12356" rel="#L12356">12356</span>
<span id="L12357" rel="#L12357">12357</span>
<span id="L12358" rel="#L12358">12358</span>
<span id="L12359" rel="#L12359">12359</span>
<span id="L12360" rel="#L12360">12360</span>
<span id="L12361" rel="#L12361">12361</span>
<span id="L12362" rel="#L12362">12362</span>
<span id="L12363" rel="#L12363">12363</span>
<span id="L12364" rel="#L12364">12364</span>
<span id="L12365" rel="#L12365">12365</span>
<span id="L12366" rel="#L12366">12366</span>
<span id="L12367" rel="#L12367">12367</span>
<span id="L12368" rel="#L12368">12368</span>
<span id="L12369" rel="#L12369">12369</span>
<span id="L12370" rel="#L12370">12370</span>
<span id="L12371" rel="#L12371">12371</span>
<span id="L12372" rel="#L12372">12372</span>
<span id="L12373" rel="#L12373">12373</span>
<span id="L12374" rel="#L12374">12374</span>
<span id="L12375" rel="#L12375">12375</span>
<span id="L12376" rel="#L12376">12376</span>
<span id="L12377" rel="#L12377">12377</span>
<span id="L12378" rel="#L12378">12378</span>
<span id="L12379" rel="#L12379">12379</span>
<span id="L12380" rel="#L12380">12380</span>
<span id="L12381" rel="#L12381">12381</span>
<span id="L12382" rel="#L12382">12382</span>
<span id="L12383" rel="#L12383">12383</span>
<span id="L12384" rel="#L12384">12384</span>
<span id="L12385" rel="#L12385">12385</span>
<span id="L12386" rel="#L12386">12386</span>
<span id="L12387" rel="#L12387">12387</span>
<span id="L12388" rel="#L12388">12388</span>
<span id="L12389" rel="#L12389">12389</span>
<span id="L12390" rel="#L12390">12390</span>
<span id="L12391" rel="#L12391">12391</span>
<span id="L12392" rel="#L12392">12392</span>
<span id="L12393" rel="#L12393">12393</span>
<span id="L12394" rel="#L12394">12394</span>
<span id="L12395" rel="#L12395">12395</span>
<span id="L12396" rel="#L12396">12396</span>
<span id="L12397" rel="#L12397">12397</span>
<span id="L12398" rel="#L12398">12398</span>
<span id="L12399" rel="#L12399">12399</span>
<span id="L12400" rel="#L12400">12400</span>
<span id="L12401" rel="#L12401">12401</span>
<span id="L12402" rel="#L12402">12402</span>
<span id="L12403" rel="#L12403">12403</span>
<span id="L12404" rel="#L12404">12404</span>
<span id="L12405" rel="#L12405">12405</span>
<span id="L12406" rel="#L12406">12406</span>
<span id="L12407" rel="#L12407">12407</span>
<span id="L12408" rel="#L12408">12408</span>
<span id="L12409" rel="#L12409">12409</span>
<span id="L12410" rel="#L12410">12410</span>
<span id="L12411" rel="#L12411">12411</span>
<span id="L12412" rel="#L12412">12412</span>
<span id="L12413" rel="#L12413">12413</span>
<span id="L12414" rel="#L12414">12414</span>
<span id="L12415" rel="#L12415">12415</span>
<span id="L12416" rel="#L12416">12416</span>
<span id="L12417" rel="#L12417">12417</span>
<span id="L12418" rel="#L12418">12418</span>
<span id="L12419" rel="#L12419">12419</span>
<span id="L12420" rel="#L12420">12420</span>
<span id="L12421" rel="#L12421">12421</span>
<span id="L12422" rel="#L12422">12422</span>
<span id="L12423" rel="#L12423">12423</span>
<span id="L12424" rel="#L12424">12424</span>
<span id="L12425" rel="#L12425">12425</span>
<span id="L12426" rel="#L12426">12426</span>
<span id="L12427" rel="#L12427">12427</span>
<span id="L12428" rel="#L12428">12428</span>
<span id="L12429" rel="#L12429">12429</span>
<span id="L12430" rel="#L12430">12430</span>
<span id="L12431" rel="#L12431">12431</span>
<span id="L12432" rel="#L12432">12432</span>
<span id="L12433" rel="#L12433">12433</span>
<span id="L12434" rel="#L12434">12434</span>
<span id="L12435" rel="#L12435">12435</span>
<span id="L12436" rel="#L12436">12436</span>
<span id="L12437" rel="#L12437">12437</span>
<span id="L12438" rel="#L12438">12438</span>
<span id="L12439" rel="#L12439">12439</span>
<span id="L12440" rel="#L12440">12440</span>
<span id="L12441" rel="#L12441">12441</span>
<span id="L12442" rel="#L12442">12442</span>
<span id="L12443" rel="#L12443">12443</span>
<span id="L12444" rel="#L12444">12444</span>
<span id="L12445" rel="#L12445">12445</span>
<span id="L12446" rel="#L12446">12446</span>
<span id="L12447" rel="#L12447">12447</span>
<span id="L12448" rel="#L12448">12448</span>
<span id="L12449" rel="#L12449">12449</span>
<span id="L12450" rel="#L12450">12450</span>
<span id="L12451" rel="#L12451">12451</span>
<span id="L12452" rel="#L12452">12452</span>
<span id="L12453" rel="#L12453">12453</span>
<span id="L12454" rel="#L12454">12454</span>
<span id="L12455" rel="#L12455">12455</span>
<span id="L12456" rel="#L12456">12456</span>
<span id="L12457" rel="#L12457">12457</span>
<span id="L12458" rel="#L12458">12458</span>
<span id="L12459" rel="#L12459">12459</span>
<span id="L12460" rel="#L12460">12460</span>
<span id="L12461" rel="#L12461">12461</span>
<span id="L12462" rel="#L12462">12462</span>
<span id="L12463" rel="#L12463">12463</span>
<span id="L12464" rel="#L12464">12464</span>
<span id="L12465" rel="#L12465">12465</span>
<span id="L12466" rel="#L12466">12466</span>
<span id="L12467" rel="#L12467">12467</span>
<span id="L12468" rel="#L12468">12468</span>
<span id="L12469" rel="#L12469">12469</span>
<span id="L12470" rel="#L12470">12470</span>
<span id="L12471" rel="#L12471">12471</span>
<span id="L12472" rel="#L12472">12472</span>
<span id="L12473" rel="#L12473">12473</span>
<span id="L12474" rel="#L12474">12474</span>
<span id="L12475" rel="#L12475">12475</span>
<span id="L12476" rel="#L12476">12476</span>
<span id="L12477" rel="#L12477">12477</span>
<span id="L12478" rel="#L12478">12478</span>
<span id="L12479" rel="#L12479">12479</span>
<span id="L12480" rel="#L12480">12480</span>
<span id="L12481" rel="#L12481">12481</span>
<span id="L12482" rel="#L12482">12482</span>
<span id="L12483" rel="#L12483">12483</span>
<span id="L12484" rel="#L12484">12484</span>
<span id="L12485" rel="#L12485">12485</span>
<span id="L12486" rel="#L12486">12486</span>
<span id="L12487" rel="#L12487">12487</span>
<span id="L12488" rel="#L12488">12488</span>
<span id="L12489" rel="#L12489">12489</span>
<span id="L12490" rel="#L12490">12490</span>
<span id="L12491" rel="#L12491">12491</span>
<span id="L12492" rel="#L12492">12492</span>
<span id="L12493" rel="#L12493">12493</span>
<span id="L12494" rel="#L12494">12494</span>
<span id="L12495" rel="#L12495">12495</span>
<span id="L12496" rel="#L12496">12496</span>
<span id="L12497" rel="#L12497">12497</span>
<span id="L12498" rel="#L12498">12498</span>
<span id="L12499" rel="#L12499">12499</span>
<span id="L12500" rel="#L12500">12500</span>
<span id="L12501" rel="#L12501">12501</span>
<span id="L12502" rel="#L12502">12502</span>
<span id="L12503" rel="#L12503">12503</span>
<span id="L12504" rel="#L12504">12504</span>
<span id="L12505" rel="#L12505">12505</span>
<span id="L12506" rel="#L12506">12506</span>
<span id="L12507" rel="#L12507">12507</span>
<span id="L12508" rel="#L12508">12508</span>
<span id="L12509" rel="#L12509">12509</span>
<span id="L12510" rel="#L12510">12510</span>
<span id="L12511" rel="#L12511">12511</span>
<span id="L12512" rel="#L12512">12512</span>
<span id="L12513" rel="#L12513">12513</span>
<span id="L12514" rel="#L12514">12514</span>
<span id="L12515" rel="#L12515">12515</span>
<span id="L12516" rel="#L12516">12516</span>
<span id="L12517" rel="#L12517">12517</span>
<span id="L12518" rel="#L12518">12518</span>
<span id="L12519" rel="#L12519">12519</span>
<span id="L12520" rel="#L12520">12520</span>
<span id="L12521" rel="#L12521">12521</span>
<span id="L12522" rel="#L12522">12522</span>
<span id="L12523" rel="#L12523">12523</span>
<span id="L12524" rel="#L12524">12524</span>
<span id="L12525" rel="#L12525">12525</span>
<span id="L12526" rel="#L12526">12526</span>
<span id="L12527" rel="#L12527">12527</span>
<span id="L12528" rel="#L12528">12528</span>
<span id="L12529" rel="#L12529">12529</span>
<span id="L12530" rel="#L12530">12530</span>
<span id="L12531" rel="#L12531">12531</span>
<span id="L12532" rel="#L12532">12532</span>
<span id="L12533" rel="#L12533">12533</span>
<span id="L12534" rel="#L12534">12534</span>
<span id="L12535" rel="#L12535">12535</span>
<span id="L12536" rel="#L12536">12536</span>
<span id="L12537" rel="#L12537">12537</span>
<span id="L12538" rel="#L12538">12538</span>
<span id="L12539" rel="#L12539">12539</span>
<span id="L12540" rel="#L12540">12540</span>
<span id="L12541" rel="#L12541">12541</span>
<span id="L12542" rel="#L12542">12542</span>
<span id="L12543" rel="#L12543">12543</span>
<span id="L12544" rel="#L12544">12544</span>
<span id="L12545" rel="#L12545">12545</span>
<span id="L12546" rel="#L12546">12546</span>
<span id="L12547" rel="#L12547">12547</span>
<span id="L12548" rel="#L12548">12548</span>
<span id="L12549" rel="#L12549">12549</span>
<span id="L12550" rel="#L12550">12550</span>
<span id="L12551" rel="#L12551">12551</span>
<span id="L12552" rel="#L12552">12552</span>
<span id="L12553" rel="#L12553">12553</span>
<span id="L12554" rel="#L12554">12554</span>
<span id="L12555" rel="#L12555">12555</span>
<span id="L12556" rel="#L12556">12556</span>
<span id="L12557" rel="#L12557">12557</span>
<span id="L12558" rel="#L12558">12558</span>
<span id="L12559" rel="#L12559">12559</span>
<span id="L12560" rel="#L12560">12560</span>
<span id="L12561" rel="#L12561">12561</span>
<span id="L12562" rel="#L12562">12562</span>
<span id="L12563" rel="#L12563">12563</span>
<span id="L12564" rel="#L12564">12564</span>
<span id="L12565" rel="#L12565">12565</span>
<span id="L12566" rel="#L12566">12566</span>
<span id="L12567" rel="#L12567">12567</span>
<span id="L12568" rel="#L12568">12568</span>
<span id="L12569" rel="#L12569">12569</span>
<span id="L12570" rel="#L12570">12570</span>
<span id="L12571" rel="#L12571">12571</span>
<span id="L12572" rel="#L12572">12572</span>
<span id="L12573" rel="#L12573">12573</span>
<span id="L12574" rel="#L12574">12574</span>
<span id="L12575" rel="#L12575">12575</span>
<span id="L12576" rel="#L12576">12576</span>
<span id="L12577" rel="#L12577">12577</span>
<span id="L12578" rel="#L12578">12578</span>
<span id="L12579" rel="#L12579">12579</span>
<span id="L12580" rel="#L12580">12580</span>
<span id="L12581" rel="#L12581">12581</span>
<span id="L12582" rel="#L12582">12582</span>
<span id="L12583" rel="#L12583">12583</span>
<span id="L12584" rel="#L12584">12584</span>
<span id="L12585" rel="#L12585">12585</span>
<span id="L12586" rel="#L12586">12586</span>
<span id="L12587" rel="#L12587">12587</span>
<span id="L12588" rel="#L12588">12588</span>
<span id="L12589" rel="#L12589">12589</span>
<span id="L12590" rel="#L12590">12590</span>
<span id="L12591" rel="#L12591">12591</span>
<span id="L12592" rel="#L12592">12592</span>
<span id="L12593" rel="#L12593">12593</span>
<span id="L12594" rel="#L12594">12594</span>
<span id="L12595" rel="#L12595">12595</span>
<span id="L12596" rel="#L12596">12596</span>
<span id="L12597" rel="#L12597">12597</span>
<span id="L12598" rel="#L12598">12598</span>
<span id="L12599" rel="#L12599">12599</span>
<span id="L12600" rel="#L12600">12600</span>
<span id="L12601" rel="#L12601">12601</span>
<span id="L12602" rel="#L12602">12602</span>
<span id="L12603" rel="#L12603">12603</span>
<span id="L12604" rel="#L12604">12604</span>
<span id="L12605" rel="#L12605">12605</span>
<span id="L12606" rel="#L12606">12606</span>
<span id="L12607" rel="#L12607">12607</span>
<span id="L12608" rel="#L12608">12608</span>
<span id="L12609" rel="#L12609">12609</span>
<span id="L12610" rel="#L12610">12610</span>
<span id="L12611" rel="#L12611">12611</span>
<span id="L12612" rel="#L12612">12612</span>
<span id="L12613" rel="#L12613">12613</span>
<span id="L12614" rel="#L12614">12614</span>
<span id="L12615" rel="#L12615">12615</span>
<span id="L12616" rel="#L12616">12616</span>
<span id="L12617" rel="#L12617">12617</span>
<span id="L12618" rel="#L12618">12618</span>
<span id="L12619" rel="#L12619">12619</span>
<span id="L12620" rel="#L12620">12620</span>
<span id="L12621" rel="#L12621">12621</span>
<span id="L12622" rel="#L12622">12622</span>
<span id="L12623" rel="#L12623">12623</span>
<span id="L12624" rel="#L12624">12624</span>
<span id="L12625" rel="#L12625">12625</span>
<span id="L12626" rel="#L12626">12626</span>
<span id="L12627" rel="#L12627">12627</span>
<span id="L12628" rel="#L12628">12628</span>
<span id="L12629" rel="#L12629">12629</span>
<span id="L12630" rel="#L12630">12630</span>
<span id="L12631" rel="#L12631">12631</span>
<span id="L12632" rel="#L12632">12632</span>
<span id="L12633" rel="#L12633">12633</span>
<span id="L12634" rel="#L12634">12634</span>
<span id="L12635" rel="#L12635">12635</span>
<span id="L12636" rel="#L12636">12636</span>
<span id="L12637" rel="#L12637">12637</span>
<span id="L12638" rel="#L12638">12638</span>
<span id="L12639" rel="#L12639">12639</span>
<span id="L12640" rel="#L12640">12640</span>
<span id="L12641" rel="#L12641">12641</span>
<span id="L12642" rel="#L12642">12642</span>
<span id="L12643" rel="#L12643">12643</span>
<span id="L12644" rel="#L12644">12644</span>
<span id="L12645" rel="#L12645">12645</span>
<span id="L12646" rel="#L12646">12646</span>
<span id="L12647" rel="#L12647">12647</span>
<span id="L12648" rel="#L12648">12648</span>
<span id="L12649" rel="#L12649">12649</span>
<span id="L12650" rel="#L12650">12650</span>
<span id="L12651" rel="#L12651">12651</span>
<span id="L12652" rel="#L12652">12652</span>
<span id="L12653" rel="#L12653">12653</span>
<span id="L12654" rel="#L12654">12654</span>
<span id="L12655" rel="#L12655">12655</span>
<span id="L12656" rel="#L12656">12656</span>
<span id="L12657" rel="#L12657">12657</span>
<span id="L12658" rel="#L12658">12658</span>
<span id="L12659" rel="#L12659">12659</span>
<span id="L12660" rel="#L12660">12660</span>
<span id="L12661" rel="#L12661">12661</span>
<span id="L12662" rel="#L12662">12662</span>
<span id="L12663" rel="#L12663">12663</span>
<span id="L12664" rel="#L12664">12664</span>
<span id="L12665" rel="#L12665">12665</span>
<span id="L12666" rel="#L12666">12666</span>
<span id="L12667" rel="#L12667">12667</span>
<span id="L12668" rel="#L12668">12668</span>
<span id="L12669" rel="#L12669">12669</span>
<span id="L12670" rel="#L12670">12670</span>
<span id="L12671" rel="#L12671">12671</span>
<span id="L12672" rel="#L12672">12672</span>
<span id="L12673" rel="#L12673">12673</span>
<span id="L12674" rel="#L12674">12674</span>
<span id="L12675" rel="#L12675">12675</span>
<span id="L12676" rel="#L12676">12676</span>
<span id="L12677" rel="#L12677">12677</span>
<span id="L12678" rel="#L12678">12678</span>
<span id="L12679" rel="#L12679">12679</span>
<span id="L12680" rel="#L12680">12680</span>
<span id="L12681" rel="#L12681">12681</span>
<span id="L12682" rel="#L12682">12682</span>
<span id="L12683" rel="#L12683">12683</span>
<span id="L12684" rel="#L12684">12684</span>
<span id="L12685" rel="#L12685">12685</span>
<span id="L12686" rel="#L12686">12686</span>
<span id="L12687" rel="#L12687">12687</span>
<span id="L12688" rel="#L12688">12688</span>
<span id="L12689" rel="#L12689">12689</span>
<span id="L12690" rel="#L12690">12690</span>
<span id="L12691" rel="#L12691">12691</span>
<span id="L12692" rel="#L12692">12692</span>
<span id="L12693" rel="#L12693">12693</span>
<span id="L12694" rel="#L12694">12694</span>
<span id="L12695" rel="#L12695">12695</span>
<span id="L12696" rel="#L12696">12696</span>
<span id="L12697" rel="#L12697">12697</span>
<span id="L12698" rel="#L12698">12698</span>
<span id="L12699" rel="#L12699">12699</span>
<span id="L12700" rel="#L12700">12700</span>
<span id="L12701" rel="#L12701">12701</span>
<span id="L12702" rel="#L12702">12702</span>
<span id="L12703" rel="#L12703">12703</span>
<span id="L12704" rel="#L12704">12704</span>
<span id="L12705" rel="#L12705">12705</span>
<span id="L12706" rel="#L12706">12706</span>
<span id="L12707" rel="#L12707">12707</span>
<span id="L12708" rel="#L12708">12708</span>
<span id="L12709" rel="#L12709">12709</span>
<span id="L12710" rel="#L12710">12710</span>
<span id="L12711" rel="#L12711">12711</span>
<span id="L12712" rel="#L12712">12712</span>
<span id="L12713" rel="#L12713">12713</span>
<span id="L12714" rel="#L12714">12714</span>
<span id="L12715" rel="#L12715">12715</span>
<span id="L12716" rel="#L12716">12716</span>
<span id="L12717" rel="#L12717">12717</span>
<span id="L12718" rel="#L12718">12718</span>
<span id="L12719" rel="#L12719">12719</span>
<span id="L12720" rel="#L12720">12720</span>
<span id="L12721" rel="#L12721">12721</span>
<span id="L12722" rel="#L12722">12722</span>
<span id="L12723" rel="#L12723">12723</span>
<span id="L12724" rel="#L12724">12724</span>
<span id="L12725" rel="#L12725">12725</span>
<span id="L12726" rel="#L12726">12726</span>
<span id="L12727" rel="#L12727">12727</span>
<span id="L12728" rel="#L12728">12728</span>
<span id="L12729" rel="#L12729">12729</span>
<span id="L12730" rel="#L12730">12730</span>
<span id="L12731" rel="#L12731">12731</span>
<span id="L12732" rel="#L12732">12732</span>
<span id="L12733" rel="#L12733">12733</span>
<span id="L12734" rel="#L12734">12734</span>
<span id="L12735" rel="#L12735">12735</span>
<span id="L12736" rel="#L12736">12736</span>
<span id="L12737" rel="#L12737">12737</span>
<span id="L12738" rel="#L12738">12738</span>
<span id="L12739" rel="#L12739">12739</span>
<span id="L12740" rel="#L12740">12740</span>
<span id="L12741" rel="#L12741">12741</span>
<span id="L12742" rel="#L12742">12742</span>
<span id="L12743" rel="#L12743">12743</span>
<span id="L12744" rel="#L12744">12744</span>
<span id="L12745" rel="#L12745">12745</span>
<span id="L12746" rel="#L12746">12746</span>
<span id="L12747" rel="#L12747">12747</span>
<span id="L12748" rel="#L12748">12748</span>
<span id="L12749" rel="#L12749">12749</span>
<span id="L12750" rel="#L12750">12750</span>
<span id="L12751" rel="#L12751">12751</span>
<span id="L12752" rel="#L12752">12752</span>
<span id="L12753" rel="#L12753">12753</span>
<span id="L12754" rel="#L12754">12754</span>
<span id="L12755" rel="#L12755">12755</span>
<span id="L12756" rel="#L12756">12756</span>
<span id="L12757" rel="#L12757">12757</span>
<span id="L12758" rel="#L12758">12758</span>
<span id="L12759" rel="#L12759">12759</span>
<span id="L12760" rel="#L12760">12760</span>
<span id="L12761" rel="#L12761">12761</span>
<span id="L12762" rel="#L12762">12762</span>
<span id="L12763" rel="#L12763">12763</span>
<span id="L12764" rel="#L12764">12764</span>
<span id="L12765" rel="#L12765">12765</span>
<span id="L12766" rel="#L12766">12766</span>
<span id="L12767" rel="#L12767">12767</span>
<span id="L12768" rel="#L12768">12768</span>
<span id="L12769" rel="#L12769">12769</span>
<span id="L12770" rel="#L12770">12770</span>
<span id="L12771" rel="#L12771">12771</span>
<span id="L12772" rel="#L12772">12772</span>
<span id="L12773" rel="#L12773">12773</span>
<span id="L12774" rel="#L12774">12774</span>
<span id="L12775" rel="#L12775">12775</span>
<span id="L12776" rel="#L12776">12776</span>
<span id="L12777" rel="#L12777">12777</span>
<span id="L12778" rel="#L12778">12778</span>
<span id="L12779" rel="#L12779">12779</span>
<span id="L12780" rel="#L12780">12780</span>
<span id="L12781" rel="#L12781">12781</span>
<span id="L12782" rel="#L12782">12782</span>
<span id="L12783" rel="#L12783">12783</span>
<span id="L12784" rel="#L12784">12784</span>
<span id="L12785" rel="#L12785">12785</span>
<span id="L12786" rel="#L12786">12786</span>
<span id="L12787" rel="#L12787">12787</span>
<span id="L12788" rel="#L12788">12788</span>
<span id="L12789" rel="#L12789">12789</span>
<span id="L12790" rel="#L12790">12790</span>
<span id="L12791" rel="#L12791">12791</span>
<span id="L12792" rel="#L12792">12792</span>
<span id="L12793" rel="#L12793">12793</span>
<span id="L12794" rel="#L12794">12794</span>
<span id="L12795" rel="#L12795">12795</span>
<span id="L12796" rel="#L12796">12796</span>
<span id="L12797" rel="#L12797">12797</span>
<span id="L12798" rel="#L12798">12798</span>
<span id="L12799" rel="#L12799">12799</span>
<span id="L12800" rel="#L12800">12800</span>
<span id="L12801" rel="#L12801">12801</span>
<span id="L12802" rel="#L12802">12802</span>
<span id="L12803" rel="#L12803">12803</span>
<span id="L12804" rel="#L12804">12804</span>
<span id="L12805" rel="#L12805">12805</span>
<span id="L12806" rel="#L12806">12806</span>
<span id="L12807" rel="#L12807">12807</span>
<span id="L12808" rel="#L12808">12808</span>
<span id="L12809" rel="#L12809">12809</span>
<span id="L12810" rel="#L12810">12810</span>
<span id="L12811" rel="#L12811">12811</span>
<span id="L12812" rel="#L12812">12812</span>
<span id="L12813" rel="#L12813">12813</span>
<span id="L12814" rel="#L12814">12814</span>
<span id="L12815" rel="#L12815">12815</span>
<span id="L12816" rel="#L12816">12816</span>
<span id="L12817" rel="#L12817">12817</span>
<span id="L12818" rel="#L12818">12818</span>
<span id="L12819" rel="#L12819">12819</span>
<span id="L12820" rel="#L12820">12820</span>
<span id="L12821" rel="#L12821">12821</span>
<span id="L12822" rel="#L12822">12822</span>
<span id="L12823" rel="#L12823">12823</span>
<span id="L12824" rel="#L12824">12824</span>
<span id="L12825" rel="#L12825">12825</span>
<span id="L12826" rel="#L12826">12826</span>
<span id="L12827" rel="#L12827">12827</span>
<span id="L12828" rel="#L12828">12828</span>
<span id="L12829" rel="#L12829">12829</span>
<span id="L12830" rel="#L12830">12830</span>
<span id="L12831" rel="#L12831">12831</span>
<span id="L12832" rel="#L12832">12832</span>
<span id="L12833" rel="#L12833">12833</span>
<span id="L12834" rel="#L12834">12834</span>
<span id="L12835" rel="#L12835">12835</span>
<span id="L12836" rel="#L12836">12836</span>
<span id="L12837" rel="#L12837">12837</span>
<span id="L12838" rel="#L12838">12838</span>
<span id="L12839" rel="#L12839">12839</span>
<span id="L12840" rel="#L12840">12840</span>
<span id="L12841" rel="#L12841">12841</span>
<span id="L12842" rel="#L12842">12842</span>
<span id="L12843" rel="#L12843">12843</span>
<span id="L12844" rel="#L12844">12844</span>
<span id="L12845" rel="#L12845">12845</span>
<span id="L12846" rel="#L12846">12846</span>
<span id="L12847" rel="#L12847">12847</span>
<span id="L12848" rel="#L12848">12848</span>
<span id="L12849" rel="#L12849">12849</span>
<span id="L12850" rel="#L12850">12850</span>
<span id="L12851" rel="#L12851">12851</span>
<span id="L12852" rel="#L12852">12852</span>
<span id="L12853" rel="#L12853">12853</span>
<span id="L12854" rel="#L12854">12854</span>
<span id="L12855" rel="#L12855">12855</span>
<span id="L12856" rel="#L12856">12856</span>
<span id="L12857" rel="#L12857">12857</span>
<span id="L12858" rel="#L12858">12858</span>
<span id="L12859" rel="#L12859">12859</span>
<span id="L12860" rel="#L12860">12860</span>
<span id="L12861" rel="#L12861">12861</span>
<span id="L12862" rel="#L12862">12862</span>
<span id="L12863" rel="#L12863">12863</span>
<span id="L12864" rel="#L12864">12864</span>
<span id="L12865" rel="#L12865">12865</span>
<span id="L12866" rel="#L12866">12866</span>
<span id="L12867" rel="#L12867">12867</span>
<span id="L12868" rel="#L12868">12868</span>
<span id="L12869" rel="#L12869">12869</span>
<span id="L12870" rel="#L12870">12870</span>
<span id="L12871" rel="#L12871">12871</span>
<span id="L12872" rel="#L12872">12872</span>
<span id="L12873" rel="#L12873">12873</span>
<span id="L12874" rel="#L12874">12874</span>
<span id="L12875" rel="#L12875">12875</span>
<span id="L12876" rel="#L12876">12876</span>
<span id="L12877" rel="#L12877">12877</span>
<span id="L12878" rel="#L12878">12878</span>
<span id="L12879" rel="#L12879">12879</span>
<span id="L12880" rel="#L12880">12880</span>
<span id="L12881" rel="#L12881">12881</span>
<span id="L12882" rel="#L12882">12882</span>
<span id="L12883" rel="#L12883">12883</span>
<span id="L12884" rel="#L12884">12884</span>
<span id="L12885" rel="#L12885">12885</span>
<span id="L12886" rel="#L12886">12886</span>
<span id="L12887" rel="#L12887">12887</span>
<span id="L12888" rel="#L12888">12888</span>
<span id="L12889" rel="#L12889">12889</span>
<span id="L12890" rel="#L12890">12890</span>
<span id="L12891" rel="#L12891">12891</span>
<span id="L12892" rel="#L12892">12892</span>
<span id="L12893" rel="#L12893">12893</span>
<span id="L12894" rel="#L12894">12894</span>
<span id="L12895" rel="#L12895">12895</span>
<span id="L12896" rel="#L12896">12896</span>
<span id="L12897" rel="#L12897">12897</span>
<span id="L12898" rel="#L12898">12898</span>
<span id="L12899" rel="#L12899">12899</span>
<span id="L12900" rel="#L12900">12900</span>
<span id="L12901" rel="#L12901">12901</span>
<span id="L12902" rel="#L12902">12902</span>
<span id="L12903" rel="#L12903">12903</span>
<span id="L12904" rel="#L12904">12904</span>
<span id="L12905" rel="#L12905">12905</span>
<span id="L12906" rel="#L12906">12906</span>
<span id="L12907" rel="#L12907">12907</span>
<span id="L12908" rel="#L12908">12908</span>
<span id="L12909" rel="#L12909">12909</span>
<span id="L12910" rel="#L12910">12910</span>
<span id="L12911" rel="#L12911">12911</span>
<span id="L12912" rel="#L12912">12912</span>
<span id="L12913" rel="#L12913">12913</span>
<span id="L12914" rel="#L12914">12914</span>
<span id="L12915" rel="#L12915">12915</span>
<span id="L12916" rel="#L12916">12916</span>
<span id="L12917" rel="#L12917">12917</span>
<span id="L12918" rel="#L12918">12918</span>
<span id="L12919" rel="#L12919">12919</span>
<span id="L12920" rel="#L12920">12920</span>
<span id="L12921" rel="#L12921">12921</span>
<span id="L12922" rel="#L12922">12922</span>
<span id="L12923" rel="#L12923">12923</span>
<span id="L12924" rel="#L12924">12924</span>
<span id="L12925" rel="#L12925">12925</span>
<span id="L12926" rel="#L12926">12926</span>
<span id="L12927" rel="#L12927">12927</span>
<span id="L12928" rel="#L12928">12928</span>
<span id="L12929" rel="#L12929">12929</span>
<span id="L12930" rel="#L12930">12930</span>
<span id="L12931" rel="#L12931">12931</span>
<span id="L12932" rel="#L12932">12932</span>
<span id="L12933" rel="#L12933">12933</span>
<span id="L12934" rel="#L12934">12934</span>
<span id="L12935" rel="#L12935">12935</span>
<span id="L12936" rel="#L12936">12936</span>
<span id="L12937" rel="#L12937">12937</span>
<span id="L12938" rel="#L12938">12938</span>
<span id="L12939" rel="#L12939">12939</span>
<span id="L12940" rel="#L12940">12940</span>
<span id="L12941" rel="#L12941">12941</span>
<span id="L12942" rel="#L12942">12942</span>
<span id="L12943" rel="#L12943">12943</span>
<span id="L12944" rel="#L12944">12944</span>
<span id="L12945" rel="#L12945">12945</span>
<span id="L12946" rel="#L12946">12946</span>
<span id="L12947" rel="#L12947">12947</span>
<span id="L12948" rel="#L12948">12948</span>
<span id="L12949" rel="#L12949">12949</span>
<span id="L12950" rel="#L12950">12950</span>
<span id="L12951" rel="#L12951">12951</span>
<span id="L12952" rel="#L12952">12952</span>
<span id="L12953" rel="#L12953">12953</span>
<span id="L12954" rel="#L12954">12954</span>
<span id="L12955" rel="#L12955">12955</span>
<span id="L12956" rel="#L12956">12956</span>
<span id="L12957" rel="#L12957">12957</span>
<span id="L12958" rel="#L12958">12958</span>
<span id="L12959" rel="#L12959">12959</span>
<span id="L12960" rel="#L12960">12960</span>
<span id="L12961" rel="#L12961">12961</span>
<span id="L12962" rel="#L12962">12962</span>
<span id="L12963" rel="#L12963">12963</span>
<span id="L12964" rel="#L12964">12964</span>
<span id="L12965" rel="#L12965">12965</span>
<span id="L12966" rel="#L12966">12966</span>
<span id="L12967" rel="#L12967">12967</span>
<span id="L12968" rel="#L12968">12968</span>
<span id="L12969" rel="#L12969">12969</span>
<span id="L12970" rel="#L12970">12970</span>
<span id="L12971" rel="#L12971">12971</span>
<span id="L12972" rel="#L12972">12972</span>
<span id="L12973" rel="#L12973">12973</span>
<span id="L12974" rel="#L12974">12974</span>
<span id="L12975" rel="#L12975">12975</span>
<span id="L12976" rel="#L12976">12976</span>
<span id="L12977" rel="#L12977">12977</span>
<span id="L12978" rel="#L12978">12978</span>
<span id="L12979" rel="#L12979">12979</span>
<span id="L12980" rel="#L12980">12980</span>
<span id="L12981" rel="#L12981">12981</span>
<span id="L12982" rel="#L12982">12982</span>
<span id="L12983" rel="#L12983">12983</span>
<span id="L12984" rel="#L12984">12984</span>
<span id="L12985" rel="#L12985">12985</span>
<span id="L12986" rel="#L12986">12986</span>
<span id="L12987" rel="#L12987">12987</span>
<span id="L12988" rel="#L12988">12988</span>
<span id="L12989" rel="#L12989">12989</span>
<span id="L12990" rel="#L12990">12990</span>
<span id="L12991" rel="#L12991">12991</span>
<span id="L12992" rel="#L12992">12992</span>
<span id="L12993" rel="#L12993">12993</span>
<span id="L12994" rel="#L12994">12994</span>
<span id="L12995" rel="#L12995">12995</span>
<span id="L12996" rel="#L12996">12996</span>
<span id="L12997" rel="#L12997">12997</span>
<span id="L12998" rel="#L12998">12998</span>
<span id="L12999" rel="#L12999">12999</span>
<span id="L13000" rel="#L13000">13000</span>
<span id="L13001" rel="#L13001">13001</span>
<span id="L13002" rel="#L13002">13002</span>
<span id="L13003" rel="#L13003">13003</span>
<span id="L13004" rel="#L13004">13004</span>
<span id="L13005" rel="#L13005">13005</span>
<span id="L13006" rel="#L13006">13006</span>
<span id="L13007" rel="#L13007">13007</span>
<span id="L13008" rel="#L13008">13008</span>
<span id="L13009" rel="#L13009">13009</span>
<span id="L13010" rel="#L13010">13010</span>
<span id="L13011" rel="#L13011">13011</span>
<span id="L13012" rel="#L13012">13012</span>
<span id="L13013" rel="#L13013">13013</span>
<span id="L13014" rel="#L13014">13014</span>
<span id="L13015" rel="#L13015">13015</span>
<span id="L13016" rel="#L13016">13016</span>
<span id="L13017" rel="#L13017">13017</span>
<span id="L13018" rel="#L13018">13018</span>
<span id="L13019" rel="#L13019">13019</span>
<span id="L13020" rel="#L13020">13020</span>
<span id="L13021" rel="#L13021">13021</span>
<span id="L13022" rel="#L13022">13022</span>
<span id="L13023" rel="#L13023">13023</span>
<span id="L13024" rel="#L13024">13024</span>
<span id="L13025" rel="#L13025">13025</span>
<span id="L13026" rel="#L13026">13026</span>
<span id="L13027" rel="#L13027">13027</span>
<span id="L13028" rel="#L13028">13028</span>
<span id="L13029" rel="#L13029">13029</span>
<span id="L13030" rel="#L13030">13030</span>
<span id="L13031" rel="#L13031">13031</span>
<span id="L13032" rel="#L13032">13032</span>
<span id="L13033" rel="#L13033">13033</span>
<span id="L13034" rel="#L13034">13034</span>
<span id="L13035" rel="#L13035">13035</span>
<span id="L13036" rel="#L13036">13036</span>
<span id="L13037" rel="#L13037">13037</span>
<span id="L13038" rel="#L13038">13038</span>
<span id="L13039" rel="#L13039">13039</span>
<span id="L13040" rel="#L13040">13040</span>
<span id="L13041" rel="#L13041">13041</span>
<span id="L13042" rel="#L13042">13042</span>
<span id="L13043" rel="#L13043">13043</span>
<span id="L13044" rel="#L13044">13044</span>
<span id="L13045" rel="#L13045">13045</span>
<span id="L13046" rel="#L13046">13046</span>
<span id="L13047" rel="#L13047">13047</span>
<span id="L13048" rel="#L13048">13048</span>
<span id="L13049" rel="#L13049">13049</span>
<span id="L13050" rel="#L13050">13050</span>
<span id="L13051" rel="#L13051">13051</span>
<span id="L13052" rel="#L13052">13052</span>
<span id="L13053" rel="#L13053">13053</span>
<span id="L13054" rel="#L13054">13054</span>
<span id="L13055" rel="#L13055">13055</span>
<span id="L13056" rel="#L13056">13056</span>
<span id="L13057" rel="#L13057">13057</span>
<span id="L13058" rel="#L13058">13058</span>
<span id="L13059" rel="#L13059">13059</span>
<span id="L13060" rel="#L13060">13060</span>
<span id="L13061" rel="#L13061">13061</span>
<span id="L13062" rel="#L13062">13062</span>
<span id="L13063" rel="#L13063">13063</span>
<span id="L13064" rel="#L13064">13064</span>
<span id="L13065" rel="#L13065">13065</span>
<span id="L13066" rel="#L13066">13066</span>
<span id="L13067" rel="#L13067">13067</span>
<span id="L13068" rel="#L13068">13068</span>
<span id="L13069" rel="#L13069">13069</span>
<span id="L13070" rel="#L13070">13070</span>
<span id="L13071" rel="#L13071">13071</span>
<span id="L13072" rel="#L13072">13072</span>
<span id="L13073" rel="#L13073">13073</span>
<span id="L13074" rel="#L13074">13074</span>
<span id="L13075" rel="#L13075">13075</span>
<span id="L13076" rel="#L13076">13076</span>
<span id="L13077" rel="#L13077">13077</span>
<span id="L13078" rel="#L13078">13078</span>
<span id="L13079" rel="#L13079">13079</span>
<span id="L13080" rel="#L13080">13080</span>
<span id="L13081" rel="#L13081">13081</span>
<span id="L13082" rel="#L13082">13082</span>
<span id="L13083" rel="#L13083">13083</span>
<span id="L13084" rel="#L13084">13084</span>
<span id="L13085" rel="#L13085">13085</span>
<span id="L13086" rel="#L13086">13086</span>
<span id="L13087" rel="#L13087">13087</span>
<span id="L13088" rel="#L13088">13088</span>
<span id="L13089" rel="#L13089">13089</span>
<span id="L13090" rel="#L13090">13090</span>
<span id="L13091" rel="#L13091">13091</span>
<span id="L13092" rel="#L13092">13092</span>
<span id="L13093" rel="#L13093">13093</span>
<span id="L13094" rel="#L13094">13094</span>
<span id="L13095" rel="#L13095">13095</span>
<span id="L13096" rel="#L13096">13096</span>
<span id="L13097" rel="#L13097">13097</span>
<span id="L13098" rel="#L13098">13098</span>
<span id="L13099" rel="#L13099">13099</span>
<span id="L13100" rel="#L13100">13100</span>
<span id="L13101" rel="#L13101">13101</span>
<span id="L13102" rel="#L13102">13102</span>
<span id="L13103" rel="#L13103">13103</span>
<span id="L13104" rel="#L13104">13104</span>
<span id="L13105" rel="#L13105">13105</span>
<span id="L13106" rel="#L13106">13106</span>
<span id="L13107" rel="#L13107">13107</span>
<span id="L13108" rel="#L13108">13108</span>
<span id="L13109" rel="#L13109">13109</span>
<span id="L13110" rel="#L13110">13110</span>
<span id="L13111" rel="#L13111">13111</span>
<span id="L13112" rel="#L13112">13112</span>
<span id="L13113" rel="#L13113">13113</span>
<span id="L13114" rel="#L13114">13114</span>
<span id="L13115" rel="#L13115">13115</span>
<span id="L13116" rel="#L13116">13116</span>
<span id="L13117" rel="#L13117">13117</span>
<span id="L13118" rel="#L13118">13118</span>
<span id="L13119" rel="#L13119">13119</span>
<span id="L13120" rel="#L13120">13120</span>
<span id="L13121" rel="#L13121">13121</span>
<span id="L13122" rel="#L13122">13122</span>
<span id="L13123" rel="#L13123">13123</span>
<span id="L13124" rel="#L13124">13124</span>
<span id="L13125" rel="#L13125">13125</span>
<span id="L13126" rel="#L13126">13126</span>
<span id="L13127" rel="#L13127">13127</span>
<span id="L13128" rel="#L13128">13128</span>
<span id="L13129" rel="#L13129">13129</span>
<span id="L13130" rel="#L13130">13130</span>
<span id="L13131" rel="#L13131">13131</span>
<span id="L13132" rel="#L13132">13132</span>
<span id="L13133" rel="#L13133">13133</span>
<span id="L13134" rel="#L13134">13134</span>
<span id="L13135" rel="#L13135">13135</span>
<span id="L13136" rel="#L13136">13136</span>
<span id="L13137" rel="#L13137">13137</span>
<span id="L13138" rel="#L13138">13138</span>
<span id="L13139" rel="#L13139">13139</span>
<span id="L13140" rel="#L13140">13140</span>
<span id="L13141" rel="#L13141">13141</span>
<span id="L13142" rel="#L13142">13142</span>
<span id="L13143" rel="#L13143">13143</span>
<span id="L13144" rel="#L13144">13144</span>
<span id="L13145" rel="#L13145">13145</span>
<span id="L13146" rel="#L13146">13146</span>
<span id="L13147" rel="#L13147">13147</span>
<span id="L13148" rel="#L13148">13148</span>
<span id="L13149" rel="#L13149">13149</span>
<span id="L13150" rel="#L13150">13150</span>
<span id="L13151" rel="#L13151">13151</span>
<span id="L13152" rel="#L13152">13152</span>
<span id="L13153" rel="#L13153">13153</span>
<span id="L13154" rel="#L13154">13154</span>
<span id="L13155" rel="#L13155">13155</span>
<span id="L13156" rel="#L13156">13156</span>
<span id="L13157" rel="#L13157">13157</span>
<span id="L13158" rel="#L13158">13158</span>
<span id="L13159" rel="#L13159">13159</span>
<span id="L13160" rel="#L13160">13160</span>
<span id="L13161" rel="#L13161">13161</span>
<span id="L13162" rel="#L13162">13162</span>
<span id="L13163" rel="#L13163">13163</span>
<span id="L13164" rel="#L13164">13164</span>
<span id="L13165" rel="#L13165">13165</span>
<span id="L13166" rel="#L13166">13166</span>
<span id="L13167" rel="#L13167">13167</span>
<span id="L13168" rel="#L13168">13168</span>
<span id="L13169" rel="#L13169">13169</span>
<span id="L13170" rel="#L13170">13170</span>
<span id="L13171" rel="#L13171">13171</span>
<span id="L13172" rel="#L13172">13172</span>
<span id="L13173" rel="#L13173">13173</span>
<span id="L13174" rel="#L13174">13174</span>
<span id="L13175" rel="#L13175">13175</span>
<span id="L13176" rel="#L13176">13176</span>
<span id="L13177" rel="#L13177">13177</span>
<span id="L13178" rel="#L13178">13178</span>
<span id="L13179" rel="#L13179">13179</span>
<span id="L13180" rel="#L13180">13180</span>
<span id="L13181" rel="#L13181">13181</span>
<span id="L13182" rel="#L13182">13182</span>
<span id="L13183" rel="#L13183">13183</span>
<span id="L13184" rel="#L13184">13184</span>
<span id="L13185" rel="#L13185">13185</span>
<span id="L13186" rel="#L13186">13186</span>
<span id="L13187" rel="#L13187">13187</span>
<span id="L13188" rel="#L13188">13188</span>
<span id="L13189" rel="#L13189">13189</span>
<span id="L13190" rel="#L13190">13190</span>
<span id="L13191" rel="#L13191">13191</span>
<span id="L13192" rel="#L13192">13192</span>
<span id="L13193" rel="#L13193">13193</span>
<span id="L13194" rel="#L13194">13194</span>
<span id="L13195" rel="#L13195">13195</span>
<span id="L13196" rel="#L13196">13196</span>
<span id="L13197" rel="#L13197">13197</span>
<span id="L13198" rel="#L13198">13198</span>
<span id="L13199" rel="#L13199">13199</span>
<span id="L13200" rel="#L13200">13200</span>
<span id="L13201" rel="#L13201">13201</span>
<span id="L13202" rel="#L13202">13202</span>
<span id="L13203" rel="#L13203">13203</span>
<span id="L13204" rel="#L13204">13204</span>
<span id="L13205" rel="#L13205">13205</span>
<span id="L13206" rel="#L13206">13206</span>
<span id="L13207" rel="#L13207">13207</span>
<span id="L13208" rel="#L13208">13208</span>
<span id="L13209" rel="#L13209">13209</span>
<span id="L13210" rel="#L13210">13210</span>
<span id="L13211" rel="#L13211">13211</span>
<span id="L13212" rel="#L13212">13212</span>
<span id="L13213" rel="#L13213">13213</span>
<span id="L13214" rel="#L13214">13214</span>
<span id="L13215" rel="#L13215">13215</span>
<span id="L13216" rel="#L13216">13216</span>
<span id="L13217" rel="#L13217">13217</span>
<span id="L13218" rel="#L13218">13218</span>
<span id="L13219" rel="#L13219">13219</span>
<span id="L13220" rel="#L13220">13220</span>
<span id="L13221" rel="#L13221">13221</span>
<span id="L13222" rel="#L13222">13222</span>
<span id="L13223" rel="#L13223">13223</span>
<span id="L13224" rel="#L13224">13224</span>
<span id="L13225" rel="#L13225">13225</span>
<span id="L13226" rel="#L13226">13226</span>
<span id="L13227" rel="#L13227">13227</span>
<span id="L13228" rel="#L13228">13228</span>
<span id="L13229" rel="#L13229">13229</span>
<span id="L13230" rel="#L13230">13230</span>
<span id="L13231" rel="#L13231">13231</span>
<span id="L13232" rel="#L13232">13232</span>
<span id="L13233" rel="#L13233">13233</span>
<span id="L13234" rel="#L13234">13234</span>
<span id="L13235" rel="#L13235">13235</span>
<span id="L13236" rel="#L13236">13236</span>
<span id="L13237" rel="#L13237">13237</span>
<span id="L13238" rel="#L13238">13238</span>
<span id="L13239" rel="#L13239">13239</span>
<span id="L13240" rel="#L13240">13240</span>
<span id="L13241" rel="#L13241">13241</span>
<span id="L13242" rel="#L13242">13242</span>
<span id="L13243" rel="#L13243">13243</span>
<span id="L13244" rel="#L13244">13244</span>
<span id="L13245" rel="#L13245">13245</span>
<span id="L13246" rel="#L13246">13246</span>
<span id="L13247" rel="#L13247">13247</span>
<span id="L13248" rel="#L13248">13248</span>
<span id="L13249" rel="#L13249">13249</span>
<span id="L13250" rel="#L13250">13250</span>
<span id="L13251" rel="#L13251">13251</span>
<span id="L13252" rel="#L13252">13252</span>
<span id="L13253" rel="#L13253">13253</span>
<span id="L13254" rel="#L13254">13254</span>
<span id="L13255" rel="#L13255">13255</span>
<span id="L13256" rel="#L13256">13256</span>
<span id="L13257" rel="#L13257">13257</span>
<span id="L13258" rel="#L13258">13258</span>
<span id="L13259" rel="#L13259">13259</span>
<span id="L13260" rel="#L13260">13260</span>
<span id="L13261" rel="#L13261">13261</span>
<span id="L13262" rel="#L13262">13262</span>
<span id="L13263" rel="#L13263">13263</span>
<span id="L13264" rel="#L13264">13264</span>
<span id="L13265" rel="#L13265">13265</span>
<span id="L13266" rel="#L13266">13266</span>
<span id="L13267" rel="#L13267">13267</span>
<span id="L13268" rel="#L13268">13268</span>
<span id="L13269" rel="#L13269">13269</span>
<span id="L13270" rel="#L13270">13270</span>
<span id="L13271" rel="#L13271">13271</span>
<span id="L13272" rel="#L13272">13272</span>
<span id="L13273" rel="#L13273">13273</span>
<span id="L13274" rel="#L13274">13274</span>
<span id="L13275" rel="#L13275">13275</span>
<span id="L13276" rel="#L13276">13276</span>
<span id="L13277" rel="#L13277">13277</span>
<span id="L13278" rel="#L13278">13278</span>
<span id="L13279" rel="#L13279">13279</span>
<span id="L13280" rel="#L13280">13280</span>
<span id="L13281" rel="#L13281">13281</span>
<span id="L13282" rel="#L13282">13282</span>
<span id="L13283" rel="#L13283">13283</span>
<span id="L13284" rel="#L13284">13284</span>
<span id="L13285" rel="#L13285">13285</span>
<span id="L13286" rel="#L13286">13286</span>
<span id="L13287" rel="#L13287">13287</span>
<span id="L13288" rel="#L13288">13288</span>
<span id="L13289" rel="#L13289">13289</span>
<span id="L13290" rel="#L13290">13290</span>
<span id="L13291" rel="#L13291">13291</span>
<span id="L13292" rel="#L13292">13292</span>
<span id="L13293" rel="#L13293">13293</span>
<span id="L13294" rel="#L13294">13294</span>
<span id="L13295" rel="#L13295">13295</span>
<span id="L13296" rel="#L13296">13296</span>
<span id="L13297" rel="#L13297">13297</span>
<span id="L13298" rel="#L13298">13298</span>
<span id="L13299" rel="#L13299">13299</span>
<span id="L13300" rel="#L13300">13300</span>
<span id="L13301" rel="#L13301">13301</span>
<span id="L13302" rel="#L13302">13302</span>
<span id="L13303" rel="#L13303">13303</span>
<span id="L13304" rel="#L13304">13304</span>
<span id="L13305" rel="#L13305">13305</span>
<span id="L13306" rel="#L13306">13306</span>
<span id="L13307" rel="#L13307">13307</span>
<span id="L13308" rel="#L13308">13308</span>
<span id="L13309" rel="#L13309">13309</span>
<span id="L13310" rel="#L13310">13310</span>
<span id="L13311" rel="#L13311">13311</span>
<span id="L13312" rel="#L13312">13312</span>
<span id="L13313" rel="#L13313">13313</span>
<span id="L13314" rel="#L13314">13314</span>
<span id="L13315" rel="#L13315">13315</span>
<span id="L13316" rel="#L13316">13316</span>
<span id="L13317" rel="#L13317">13317</span>
<span id="L13318" rel="#L13318">13318</span>
<span id="L13319" rel="#L13319">13319</span>
<span id="L13320" rel="#L13320">13320</span>
<span id="L13321" rel="#L13321">13321</span>
<span id="L13322" rel="#L13322">13322</span>
<span id="L13323" rel="#L13323">13323</span>
<span id="L13324" rel="#L13324">13324</span>
<span id="L13325" rel="#L13325">13325</span>
<span id="L13326" rel="#L13326">13326</span>
<span id="L13327" rel="#L13327">13327</span>
<span id="L13328" rel="#L13328">13328</span>
<span id="L13329" rel="#L13329">13329</span>
<span id="L13330" rel="#L13330">13330</span>
<span id="L13331" rel="#L13331">13331</span>
<span id="L13332" rel="#L13332">13332</span>
<span id="L13333" rel="#L13333">13333</span>
<span id="L13334" rel="#L13334">13334</span>
<span id="L13335" rel="#L13335">13335</span>
<span id="L13336" rel="#L13336">13336</span>
<span id="L13337" rel="#L13337">13337</span>
<span id="L13338" rel="#L13338">13338</span>
<span id="L13339" rel="#L13339">13339</span>
<span id="L13340" rel="#L13340">13340</span>
<span id="L13341" rel="#L13341">13341</span>
<span id="L13342" rel="#L13342">13342</span>
<span id="L13343" rel="#L13343">13343</span>
<span id="L13344" rel="#L13344">13344</span>
<span id="L13345" rel="#L13345">13345</span>
<span id="L13346" rel="#L13346">13346</span>
<span id="L13347" rel="#L13347">13347</span>
<span id="L13348" rel="#L13348">13348</span>
<span id="L13349" rel="#L13349">13349</span>
<span id="L13350" rel="#L13350">13350</span>
<span id="L13351" rel="#L13351">13351</span>
<span id="L13352" rel="#L13352">13352</span>
<span id="L13353" rel="#L13353">13353</span>
<span id="L13354" rel="#L13354">13354</span>
<span id="L13355" rel="#L13355">13355</span>
<span id="L13356" rel="#L13356">13356</span>
<span id="L13357" rel="#L13357">13357</span>
<span id="L13358" rel="#L13358">13358</span>
<span id="L13359" rel="#L13359">13359</span>
<span id="L13360" rel="#L13360">13360</span>
<span id="L13361" rel="#L13361">13361</span>
<span id="L13362" rel="#L13362">13362</span>
<span id="L13363" rel="#L13363">13363</span>
<span id="L13364" rel="#L13364">13364</span>
<span id="L13365" rel="#L13365">13365</span>
<span id="L13366" rel="#L13366">13366</span>
<span id="L13367" rel="#L13367">13367</span>
<span id="L13368" rel="#L13368">13368</span>
<span id="L13369" rel="#L13369">13369</span>
<span id="L13370" rel="#L13370">13370</span>
<span id="L13371" rel="#L13371">13371</span>
<span id="L13372" rel="#L13372">13372</span>
<span id="L13373" rel="#L13373">13373</span>
<span id="L13374" rel="#L13374">13374</span>
<span id="L13375" rel="#L13375">13375</span>
<span id="L13376" rel="#L13376">13376</span>
<span id="L13377" rel="#L13377">13377</span>
<span id="L13378" rel="#L13378">13378</span>
<span id="L13379" rel="#L13379">13379</span>
<span id="L13380" rel="#L13380">13380</span>
<span id="L13381" rel="#L13381">13381</span>
<span id="L13382" rel="#L13382">13382</span>
<span id="L13383" rel="#L13383">13383</span>
<span id="L13384" rel="#L13384">13384</span>
<span id="L13385" rel="#L13385">13385</span>
<span id="L13386" rel="#L13386">13386</span>
<span id="L13387" rel="#L13387">13387</span>
<span id="L13388" rel="#L13388">13388</span>
<span id="L13389" rel="#L13389">13389</span>
<span id="L13390" rel="#L13390">13390</span>
<span id="L13391" rel="#L13391">13391</span>
<span id="L13392" rel="#L13392">13392</span>
<span id="L13393" rel="#L13393">13393</span>
<span id="L13394" rel="#L13394">13394</span>
<span id="L13395" rel="#L13395">13395</span>
<span id="L13396" rel="#L13396">13396</span>
<span id="L13397" rel="#L13397">13397</span>
<span id="L13398" rel="#L13398">13398</span>
<span id="L13399" rel="#L13399">13399</span>
<span id="L13400" rel="#L13400">13400</span>
<span id="L13401" rel="#L13401">13401</span>
<span id="L13402" rel="#L13402">13402</span>
<span id="L13403" rel="#L13403">13403</span>
<span id="L13404" rel="#L13404">13404</span>
<span id="L13405" rel="#L13405">13405</span>
<span id="L13406" rel="#L13406">13406</span>
<span id="L13407" rel="#L13407">13407</span>
<span id="L13408" rel="#L13408">13408</span>
<span id="L13409" rel="#L13409">13409</span>
<span id="L13410" rel="#L13410">13410</span>
<span id="L13411" rel="#L13411">13411</span>
<span id="L13412" rel="#L13412">13412</span>
<span id="L13413" rel="#L13413">13413</span>
<span id="L13414" rel="#L13414">13414</span>
<span id="L13415" rel="#L13415">13415</span>
<span id="L13416" rel="#L13416">13416</span>
<span id="L13417" rel="#L13417">13417</span>
<span id="L13418" rel="#L13418">13418</span>
<span id="L13419" rel="#L13419">13419</span>
<span id="L13420" rel="#L13420">13420</span>
<span id="L13421" rel="#L13421">13421</span>
<span id="L13422" rel="#L13422">13422</span>
<span id="L13423" rel="#L13423">13423</span>
<span id="L13424" rel="#L13424">13424</span>
<span id="L13425" rel="#L13425">13425</span>
<span id="L13426" rel="#L13426">13426</span>
<span id="L13427" rel="#L13427">13427</span>
<span id="L13428" rel="#L13428">13428</span>
<span id="L13429" rel="#L13429">13429</span>
<span id="L13430" rel="#L13430">13430</span>
<span id="L13431" rel="#L13431">13431</span>
<span id="L13432" rel="#L13432">13432</span>
<span id="L13433" rel="#L13433">13433</span>
<span id="L13434" rel="#L13434">13434</span>
<span id="L13435" rel="#L13435">13435</span>
<span id="L13436" rel="#L13436">13436</span>
<span id="L13437" rel="#L13437">13437</span>
<span id="L13438" rel="#L13438">13438</span>
<span id="L13439" rel="#L13439">13439</span>
<span id="L13440" rel="#L13440">13440</span>
<span id="L13441" rel="#L13441">13441</span>
<span id="L13442" rel="#L13442">13442</span>
<span id="L13443" rel="#L13443">13443</span>
<span id="L13444" rel="#L13444">13444</span>
<span id="L13445" rel="#L13445">13445</span>
<span id="L13446" rel="#L13446">13446</span>
<span id="L13447" rel="#L13447">13447</span>
<span id="L13448" rel="#L13448">13448</span>
<span id="L13449" rel="#L13449">13449</span>
<span id="L13450" rel="#L13450">13450</span>
<span id="L13451" rel="#L13451">13451</span>
<span id="L13452" rel="#L13452">13452</span>
<span id="L13453" rel="#L13453">13453</span>
<span id="L13454" rel="#L13454">13454</span>
<span id="L13455" rel="#L13455">13455</span>
<span id="L13456" rel="#L13456">13456</span>
<span id="L13457" rel="#L13457">13457</span>
<span id="L13458" rel="#L13458">13458</span>
<span id="L13459" rel="#L13459">13459</span>
<span id="L13460" rel="#L13460">13460</span>
<span id="L13461" rel="#L13461">13461</span>
<span id="L13462" rel="#L13462">13462</span>
<span id="L13463" rel="#L13463">13463</span>
<span id="L13464" rel="#L13464">13464</span>
<span id="L13465" rel="#L13465">13465</span>
<span id="L13466" rel="#L13466">13466</span>
<span id="L13467" rel="#L13467">13467</span>
<span id="L13468" rel="#L13468">13468</span>
<span id="L13469" rel="#L13469">13469</span>
<span id="L13470" rel="#L13470">13470</span>
<span id="L13471" rel="#L13471">13471</span>
<span id="L13472" rel="#L13472">13472</span>
<span id="L13473" rel="#L13473">13473</span>
<span id="L13474" rel="#L13474">13474</span>
<span id="L13475" rel="#L13475">13475</span>
<span id="L13476" rel="#L13476">13476</span>
<span id="L13477" rel="#L13477">13477</span>
<span id="L13478" rel="#L13478">13478</span>
<span id="L13479" rel="#L13479">13479</span>
<span id="L13480" rel="#L13480">13480</span>
<span id="L13481" rel="#L13481">13481</span>
<span id="L13482" rel="#L13482">13482</span>
<span id="L13483" rel="#L13483">13483</span>
<span id="L13484" rel="#L13484">13484</span>
<span id="L13485" rel="#L13485">13485</span>
<span id="L13486" rel="#L13486">13486</span>
<span id="L13487" rel="#L13487">13487</span>
<span id="L13488" rel="#L13488">13488</span>
<span id="L13489" rel="#L13489">13489</span>
<span id="L13490" rel="#L13490">13490</span>
<span id="L13491" rel="#L13491">13491</span>
<span id="L13492" rel="#L13492">13492</span>
<span id="L13493" rel="#L13493">13493</span>
<span id="L13494" rel="#L13494">13494</span>
<span id="L13495" rel="#L13495">13495</span>
<span id="L13496" rel="#L13496">13496</span>
<span id="L13497" rel="#L13497">13497</span>
<span id="L13498" rel="#L13498">13498</span>
<span id="L13499" rel="#L13499">13499</span>
<span id="L13500" rel="#L13500">13500</span>
<span id="L13501" rel="#L13501">13501</span>
<span id="L13502" rel="#L13502">13502</span>
<span id="L13503" rel="#L13503">13503</span>
<span id="L13504" rel="#L13504">13504</span>
<span id="L13505" rel="#L13505">13505</span>
<span id="L13506" rel="#L13506">13506</span>
<span id="L13507" rel="#L13507">13507</span>
<span id="L13508" rel="#L13508">13508</span>
<span id="L13509" rel="#L13509">13509</span>
<span id="L13510" rel="#L13510">13510</span>
<span id="L13511" rel="#L13511">13511</span>
<span id="L13512" rel="#L13512">13512</span>
<span id="L13513" rel="#L13513">13513</span>
<span id="L13514" rel="#L13514">13514</span>
<span id="L13515" rel="#L13515">13515</span>
<span id="L13516" rel="#L13516">13516</span>
<span id="L13517" rel="#L13517">13517</span>
<span id="L13518" rel="#L13518">13518</span>
<span id="L13519" rel="#L13519">13519</span>
<span id="L13520" rel="#L13520">13520</span>
<span id="L13521" rel="#L13521">13521</span>
<span id="L13522" rel="#L13522">13522</span>
<span id="L13523" rel="#L13523">13523</span>
<span id="L13524" rel="#L13524">13524</span>
<span id="L13525" rel="#L13525">13525</span>
<span id="L13526" rel="#L13526">13526</span>
<span id="L13527" rel="#L13527">13527</span>
<span id="L13528" rel="#L13528">13528</span>
<span id="L13529" rel="#L13529">13529</span>
<span id="L13530" rel="#L13530">13530</span>
<span id="L13531" rel="#L13531">13531</span>
<span id="L13532" rel="#L13532">13532</span>
<span id="L13533" rel="#L13533">13533</span>
<span id="L13534" rel="#L13534">13534</span>
<span id="L13535" rel="#L13535">13535</span>
<span id="L13536" rel="#L13536">13536</span>
<span id="L13537" rel="#L13537">13537</span>
<span id="L13538" rel="#L13538">13538</span>
<span id="L13539" rel="#L13539">13539</span>
<span id="L13540" rel="#L13540">13540</span>
<span id="L13541" rel="#L13541">13541</span>
<span id="L13542" rel="#L13542">13542</span>
<span id="L13543" rel="#L13543">13543</span>
<span id="L13544" rel="#L13544">13544</span>
<span id="L13545" rel="#L13545">13545</span>
<span id="L13546" rel="#L13546">13546</span>
<span id="L13547" rel="#L13547">13547</span>
<span id="L13548" rel="#L13548">13548</span>
<span id="L13549" rel="#L13549">13549</span>
<span id="L13550" rel="#L13550">13550</span>
<span id="L13551" rel="#L13551">13551</span>
<span id="L13552" rel="#L13552">13552</span>
<span id="L13553" rel="#L13553">13553</span>
<span id="L13554" rel="#L13554">13554</span>
<span id="L13555" rel="#L13555">13555</span>
<span id="L13556" rel="#L13556">13556</span>
<span id="L13557" rel="#L13557">13557</span>
<span id="L13558" rel="#L13558">13558</span>
<span id="L13559" rel="#L13559">13559</span>
<span id="L13560" rel="#L13560">13560</span>
<span id="L13561" rel="#L13561">13561</span>
<span id="L13562" rel="#L13562">13562</span>
<span id="L13563" rel="#L13563">13563</span>
<span id="L13564" rel="#L13564">13564</span>
<span id="L13565" rel="#L13565">13565</span>
<span id="L13566" rel="#L13566">13566</span>
<span id="L13567" rel="#L13567">13567</span>
<span id="L13568" rel="#L13568">13568</span>
<span id="L13569" rel="#L13569">13569</span>
<span id="L13570" rel="#L13570">13570</span>
<span id="L13571" rel="#L13571">13571</span>
<span id="L13572" rel="#L13572">13572</span>
<span id="L13573" rel="#L13573">13573</span>
<span id="L13574" rel="#L13574">13574</span>
<span id="L13575" rel="#L13575">13575</span>
<span id="L13576" rel="#L13576">13576</span>
<span id="L13577" rel="#L13577">13577</span>
<span id="L13578" rel="#L13578">13578</span>
<span id="L13579" rel="#L13579">13579</span>
<span id="L13580" rel="#L13580">13580</span>
<span id="L13581" rel="#L13581">13581</span>
<span id="L13582" rel="#L13582">13582</span>
<span id="L13583" rel="#L13583">13583</span>
<span id="L13584" rel="#L13584">13584</span>
<span id="L13585" rel="#L13585">13585</span>
<span id="L13586" rel="#L13586">13586</span>
<span id="L13587" rel="#L13587">13587</span>
<span id="L13588" rel="#L13588">13588</span>
<span id="L13589" rel="#L13589">13589</span>
<span id="L13590" rel="#L13590">13590</span>
<span id="L13591" rel="#L13591">13591</span>
<span id="L13592" rel="#L13592">13592</span>
<span id="L13593" rel="#L13593">13593</span>
<span id="L13594" rel="#L13594">13594</span>
<span id="L13595" rel="#L13595">13595</span>
<span id="L13596" rel="#L13596">13596</span>
<span id="L13597" rel="#L13597">13597</span>
<span id="L13598" rel="#L13598">13598</span>
<span id="L13599" rel="#L13599">13599</span>
<span id="L13600" rel="#L13600">13600</span>
<span id="L13601" rel="#L13601">13601</span>
<span id="L13602" rel="#L13602">13602</span>
<span id="L13603" rel="#L13603">13603</span>
<span id="L13604" rel="#L13604">13604</span>
<span id="L13605" rel="#L13605">13605</span>
<span id="L13606" rel="#L13606">13606</span>
<span id="L13607" rel="#L13607">13607</span>
<span id="L13608" rel="#L13608">13608</span>
<span id="L13609" rel="#L13609">13609</span>
<span id="L13610" rel="#L13610">13610</span>
<span id="L13611" rel="#L13611">13611</span>
<span id="L13612" rel="#L13612">13612</span>
<span id="L13613" rel="#L13613">13613</span>
<span id="L13614" rel="#L13614">13614</span>
<span id="L13615" rel="#L13615">13615</span>
<span id="L13616" rel="#L13616">13616</span>
<span id="L13617" rel="#L13617">13617</span>
<span id="L13618" rel="#L13618">13618</span>
<span id="L13619" rel="#L13619">13619</span>
<span id="L13620" rel="#L13620">13620</span>
<span id="L13621" rel="#L13621">13621</span>
<span id="L13622" rel="#L13622">13622</span>
<span id="L13623" rel="#L13623">13623</span>
<span id="L13624" rel="#L13624">13624</span>
<span id="L13625" rel="#L13625">13625</span>
<span id="L13626" rel="#L13626">13626</span>
<span id="L13627" rel="#L13627">13627</span>
<span id="L13628" rel="#L13628">13628</span>
<span id="L13629" rel="#L13629">13629</span>
<span id="L13630" rel="#L13630">13630</span>
<span id="L13631" rel="#L13631">13631</span>
<span id="L13632" rel="#L13632">13632</span>
<span id="L13633" rel="#L13633">13633</span>
<span id="L13634" rel="#L13634">13634</span>
<span id="L13635" rel="#L13635">13635</span>
<span id="L13636" rel="#L13636">13636</span>
<span id="L13637" rel="#L13637">13637</span>
<span id="L13638" rel="#L13638">13638</span>
<span id="L13639" rel="#L13639">13639</span>
<span id="L13640" rel="#L13640">13640</span>
<span id="L13641" rel="#L13641">13641</span>
<span id="L13642" rel="#L13642">13642</span>
<span id="L13643" rel="#L13643">13643</span>
<span id="L13644" rel="#L13644">13644</span>
<span id="L13645" rel="#L13645">13645</span>
<span id="L13646" rel="#L13646">13646</span>
<span id="L13647" rel="#L13647">13647</span>
<span id="L13648" rel="#L13648">13648</span>
<span id="L13649" rel="#L13649">13649</span>
<span id="L13650" rel="#L13650">13650</span>
<span id="L13651" rel="#L13651">13651</span>
<span id="L13652" rel="#L13652">13652</span>
<span id="L13653" rel="#L13653">13653</span>
<span id="L13654" rel="#L13654">13654</span>
<span id="L13655" rel="#L13655">13655</span>
<span id="L13656" rel="#L13656">13656</span>
<span id="L13657" rel="#L13657">13657</span>
<span id="L13658" rel="#L13658">13658</span>
<span id="L13659" rel="#L13659">13659</span>
<span id="L13660" rel="#L13660">13660</span>
<span id="L13661" rel="#L13661">13661</span>
<span id="L13662" rel="#L13662">13662</span>
<span id="L13663" rel="#L13663">13663</span>
<span id="L13664" rel="#L13664">13664</span>
<span id="L13665" rel="#L13665">13665</span>
<span id="L13666" rel="#L13666">13666</span>
<span id="L13667" rel="#L13667">13667</span>
<span id="L13668" rel="#L13668">13668</span>
<span id="L13669" rel="#L13669">13669</span>
<span id="L13670" rel="#L13670">13670</span>
<span id="L13671" rel="#L13671">13671</span>
<span id="L13672" rel="#L13672">13672</span>
<span id="L13673" rel="#L13673">13673</span>
<span id="L13674" rel="#L13674">13674</span>
<span id="L13675" rel="#L13675">13675</span>
<span id="L13676" rel="#L13676">13676</span>
<span id="L13677" rel="#L13677">13677</span>
<span id="L13678" rel="#L13678">13678</span>
<span id="L13679" rel="#L13679">13679</span>
<span id="L13680" rel="#L13680">13680</span>
<span id="L13681" rel="#L13681">13681</span>
<span id="L13682" rel="#L13682">13682</span>
<span id="L13683" rel="#L13683">13683</span>
<span id="L13684" rel="#L13684">13684</span>
<span id="L13685" rel="#L13685">13685</span>
<span id="L13686" rel="#L13686">13686</span>
<span id="L13687" rel="#L13687">13687</span>
<span id="L13688" rel="#L13688">13688</span>
<span id="L13689" rel="#L13689">13689</span>
<span id="L13690" rel="#L13690">13690</span>
<span id="L13691" rel="#L13691">13691</span>
<span id="L13692" rel="#L13692">13692</span>
<span id="L13693" rel="#L13693">13693</span>
<span id="L13694" rel="#L13694">13694</span>
<span id="L13695" rel="#L13695">13695</span>
<span id="L13696" rel="#L13696">13696</span>
<span id="L13697" rel="#L13697">13697</span>
<span id="L13698" rel="#L13698">13698</span>
<span id="L13699" rel="#L13699">13699</span>
<span id="L13700" rel="#L13700">13700</span>
<span id="L13701" rel="#L13701">13701</span>
<span id="L13702" rel="#L13702">13702</span>
<span id="L13703" rel="#L13703">13703</span>
<span id="L13704" rel="#L13704">13704</span>
<span id="L13705" rel="#L13705">13705</span>
<span id="L13706" rel="#L13706">13706</span>
<span id="L13707" rel="#L13707">13707</span>
<span id="L13708" rel="#L13708">13708</span>
<span id="L13709" rel="#L13709">13709</span>
<span id="L13710" rel="#L13710">13710</span>
<span id="L13711" rel="#L13711">13711</span>
<span id="L13712" rel="#L13712">13712</span>
<span id="L13713" rel="#L13713">13713</span>
<span id="L13714" rel="#L13714">13714</span>
<span id="L13715" rel="#L13715">13715</span>
<span id="L13716" rel="#L13716">13716</span>
<span id="L13717" rel="#L13717">13717</span>
<span id="L13718" rel="#L13718">13718</span>
<span id="L13719" rel="#L13719">13719</span>
<span id="L13720" rel="#L13720">13720</span>
<span id="L13721" rel="#L13721">13721</span>
<span id="L13722" rel="#L13722">13722</span>
<span id="L13723" rel="#L13723">13723</span>
<span id="L13724" rel="#L13724">13724</span>
<span id="L13725" rel="#L13725">13725</span>
<span id="L13726" rel="#L13726">13726</span>
<span id="L13727" rel="#L13727">13727</span>
<span id="L13728" rel="#L13728">13728</span>
<span id="L13729" rel="#L13729">13729</span>
<span id="L13730" rel="#L13730">13730</span>
<span id="L13731" rel="#L13731">13731</span>
<span id="L13732" rel="#L13732">13732</span>
<span id="L13733" rel="#L13733">13733</span>
<span id="L13734" rel="#L13734">13734</span>
<span id="L13735" rel="#L13735">13735</span>
<span id="L13736" rel="#L13736">13736</span>
<span id="L13737" rel="#L13737">13737</span>
<span id="L13738" rel="#L13738">13738</span>
<span id="L13739" rel="#L13739">13739</span>
<span id="L13740" rel="#L13740">13740</span>
<span id="L13741" rel="#L13741">13741</span>
<span id="L13742" rel="#L13742">13742</span>
<span id="L13743" rel="#L13743">13743</span>
<span id="L13744" rel="#L13744">13744</span>
<span id="L13745" rel="#L13745">13745</span>
<span id="L13746" rel="#L13746">13746</span>
<span id="L13747" rel="#L13747">13747</span>
<span id="L13748" rel="#L13748">13748</span>
<span id="L13749" rel="#L13749">13749</span>
<span id="L13750" rel="#L13750">13750</span>
<span id="L13751" rel="#L13751">13751</span>
<span id="L13752" rel="#L13752">13752</span>
<span id="L13753" rel="#L13753">13753</span>
<span id="L13754" rel="#L13754">13754</span>
<span id="L13755" rel="#L13755">13755</span>
<span id="L13756" rel="#L13756">13756</span>
<span id="L13757" rel="#L13757">13757</span>
<span id="L13758" rel="#L13758">13758</span>
<span id="L13759" rel="#L13759">13759</span>
<span id="L13760" rel="#L13760">13760</span>
<span id="L13761" rel="#L13761">13761</span>
<span id="L13762" rel="#L13762">13762</span>
<span id="L13763" rel="#L13763">13763</span>
<span id="L13764" rel="#L13764">13764</span>
<span id="L13765" rel="#L13765">13765</span>
<span id="L13766" rel="#L13766">13766</span>
<span id="L13767" rel="#L13767">13767</span>
<span id="L13768" rel="#L13768">13768</span>
<span id="L13769" rel="#L13769">13769</span>
<span id="L13770" rel="#L13770">13770</span>
<span id="L13771" rel="#L13771">13771</span>
<span id="L13772" rel="#L13772">13772</span>
<span id="L13773" rel="#L13773">13773</span>
<span id="L13774" rel="#L13774">13774</span>
<span id="L13775" rel="#L13775">13775</span>
<span id="L13776" rel="#L13776">13776</span>
<span id="L13777" rel="#L13777">13777</span>
<span id="L13778" rel="#L13778">13778</span>
<span id="L13779" rel="#L13779">13779</span>
<span id="L13780" rel="#L13780">13780</span>
<span id="L13781" rel="#L13781">13781</span>
<span id="L13782" rel="#L13782">13782</span>
<span id="L13783" rel="#L13783">13783</span>
<span id="L13784" rel="#L13784">13784</span>
<span id="L13785" rel="#L13785">13785</span>
<span id="L13786" rel="#L13786">13786</span>
<span id="L13787" rel="#L13787">13787</span>
<span id="L13788" rel="#L13788">13788</span>
<span id="L13789" rel="#L13789">13789</span>
<span id="L13790" rel="#L13790">13790</span>
<span id="L13791" rel="#L13791">13791</span>
<span id="L13792" rel="#L13792">13792</span>
<span id="L13793" rel="#L13793">13793</span>
<span id="L13794" rel="#L13794">13794</span>
<span id="L13795" rel="#L13795">13795</span>
<span id="L13796" rel="#L13796">13796</span>
<span id="L13797" rel="#L13797">13797</span>
<span id="L13798" rel="#L13798">13798</span>
<span id="L13799" rel="#L13799">13799</span>
<span id="L13800" rel="#L13800">13800</span>
<span id="L13801" rel="#L13801">13801</span>
<span id="L13802" rel="#L13802">13802</span>
<span id="L13803" rel="#L13803">13803</span>
<span id="L13804" rel="#L13804">13804</span>
<span id="L13805" rel="#L13805">13805</span>
<span id="L13806" rel="#L13806">13806</span>
<span id="L13807" rel="#L13807">13807</span>
<span id="L13808" rel="#L13808">13808</span>
<span id="L13809" rel="#L13809">13809</span>
<span id="L13810" rel="#L13810">13810</span>
<span id="L13811" rel="#L13811">13811</span>
<span id="L13812" rel="#L13812">13812</span>
<span id="L13813" rel="#L13813">13813</span>
<span id="L13814" rel="#L13814">13814</span>
<span id="L13815" rel="#L13815">13815</span>
<span id="L13816" rel="#L13816">13816</span>
<span id="L13817" rel="#L13817">13817</span>
<span id="L13818" rel="#L13818">13818</span>
<span id="L13819" rel="#L13819">13819</span>
<span id="L13820" rel="#L13820">13820</span>
<span id="L13821" rel="#L13821">13821</span>
<span id="L13822" rel="#L13822">13822</span>
<span id="L13823" rel="#L13823">13823</span>
<span id="L13824" rel="#L13824">13824</span>
<span id="L13825" rel="#L13825">13825</span>
<span id="L13826" rel="#L13826">13826</span>
<span id="L13827" rel="#L13827">13827</span>
<span id="L13828" rel="#L13828">13828</span>
<span id="L13829" rel="#L13829">13829</span>
<span id="L13830" rel="#L13830">13830</span>
<span id="L13831" rel="#L13831">13831</span>
<span id="L13832" rel="#L13832">13832</span>
<span id="L13833" rel="#L13833">13833</span>
<span id="L13834" rel="#L13834">13834</span>
<span id="L13835" rel="#L13835">13835</span>
<span id="L13836" rel="#L13836">13836</span>
<span id="L13837" rel="#L13837">13837</span>
<span id="L13838" rel="#L13838">13838</span>
<span id="L13839" rel="#L13839">13839</span>
<span id="L13840" rel="#L13840">13840</span>
<span id="L13841" rel="#L13841">13841</span>
<span id="L13842" rel="#L13842">13842</span>
<span id="L13843" rel="#L13843">13843</span>
<span id="L13844" rel="#L13844">13844</span>
<span id="L13845" rel="#L13845">13845</span>
<span id="L13846" rel="#L13846">13846</span>
<span id="L13847" rel="#L13847">13847</span>
<span id="L13848" rel="#L13848">13848</span>
<span id="L13849" rel="#L13849">13849</span>
<span id="L13850" rel="#L13850">13850</span>
<span id="L13851" rel="#L13851">13851</span>
<span id="L13852" rel="#L13852">13852</span>
<span id="L13853" rel="#L13853">13853</span>
<span id="L13854" rel="#L13854">13854</span>
<span id="L13855" rel="#L13855">13855</span>
<span id="L13856" rel="#L13856">13856</span>
<span id="L13857" rel="#L13857">13857</span>
<span id="L13858" rel="#L13858">13858</span>
<span id="L13859" rel="#L13859">13859</span>
<span id="L13860" rel="#L13860">13860</span>
<span id="L13861" rel="#L13861">13861</span>
<span id="L13862" rel="#L13862">13862</span>
<span id="L13863" rel="#L13863">13863</span>
<span id="L13864" rel="#L13864">13864</span>
<span id="L13865" rel="#L13865">13865</span>
<span id="L13866" rel="#L13866">13866</span>
<span id="L13867" rel="#L13867">13867</span>
<span id="L13868" rel="#L13868">13868</span>
<span id="L13869" rel="#L13869">13869</span>
<span id="L13870" rel="#L13870">13870</span>
<span id="L13871" rel="#L13871">13871</span>
<span id="L13872" rel="#L13872">13872</span>
<span id="L13873" rel="#L13873">13873</span>
<span id="L13874" rel="#L13874">13874</span>
<span id="L13875" rel="#L13875">13875</span>
<span id="L13876" rel="#L13876">13876</span>
<span id="L13877" rel="#L13877">13877</span>
<span id="L13878" rel="#L13878">13878</span>
<span id="L13879" rel="#L13879">13879</span>
<span id="L13880" rel="#L13880">13880</span>
<span id="L13881" rel="#L13881">13881</span>
<span id="L13882" rel="#L13882">13882</span>
<span id="L13883" rel="#L13883">13883</span>
<span id="L13884" rel="#L13884">13884</span>
<span id="L13885" rel="#L13885">13885</span>
<span id="L13886" rel="#L13886">13886</span>
<span id="L13887" rel="#L13887">13887</span>
<span id="L13888" rel="#L13888">13888</span>
<span id="L13889" rel="#L13889">13889</span>
<span id="L13890" rel="#L13890">13890</span>
<span id="L13891" rel="#L13891">13891</span>
<span id="L13892" rel="#L13892">13892</span>
<span id="L13893" rel="#L13893">13893</span>
<span id="L13894" rel="#L13894">13894</span>
<span id="L13895" rel="#L13895">13895</span>
<span id="L13896" rel="#L13896">13896</span>
<span id="L13897" rel="#L13897">13897</span>
<span id="L13898" rel="#L13898">13898</span>
<span id="L13899" rel="#L13899">13899</span>
<span id="L13900" rel="#L13900">13900</span>
<span id="L13901" rel="#L13901">13901</span>
<span id="L13902" rel="#L13902">13902</span>
<span id="L13903" rel="#L13903">13903</span>
<span id="L13904" rel="#L13904">13904</span>
<span id="L13905" rel="#L13905">13905</span>
<span id="L13906" rel="#L13906">13906</span>
<span id="L13907" rel="#L13907">13907</span>
<span id="L13908" rel="#L13908">13908</span>
<span id="L13909" rel="#L13909">13909</span>
<span id="L13910" rel="#L13910">13910</span>
<span id="L13911" rel="#L13911">13911</span>
<span id="L13912" rel="#L13912">13912</span>
<span id="L13913" rel="#L13913">13913</span>
<span id="L13914" rel="#L13914">13914</span>
<span id="L13915" rel="#L13915">13915</span>
<span id="L13916" rel="#L13916">13916</span>
<span id="L13917" rel="#L13917">13917</span>
<span id="L13918" rel="#L13918">13918</span>
<span id="L13919" rel="#L13919">13919</span>
<span id="L13920" rel="#L13920">13920</span>
<span id="L13921" rel="#L13921">13921</span>
<span id="L13922" rel="#L13922">13922</span>
<span id="L13923" rel="#L13923">13923</span>
<span id="L13924" rel="#L13924">13924</span>
<span id="L13925" rel="#L13925">13925</span>
<span id="L13926" rel="#L13926">13926</span>
<span id="L13927" rel="#L13927">13927</span>
<span id="L13928" rel="#L13928">13928</span>
<span id="L13929" rel="#L13929">13929</span>
<span id="L13930" rel="#L13930">13930</span>
<span id="L13931" rel="#L13931">13931</span>
<span id="L13932" rel="#L13932">13932</span>
<span id="L13933" rel="#L13933">13933</span>
<span id="L13934" rel="#L13934">13934</span>
<span id="L13935" rel="#L13935">13935</span>
<span id="L13936" rel="#L13936">13936</span>
<span id="L13937" rel="#L13937">13937</span>
<span id="L13938" rel="#L13938">13938</span>
<span id="L13939" rel="#L13939">13939</span>
<span id="L13940" rel="#L13940">13940</span>
<span id="L13941" rel="#L13941">13941</span>
<span id="L13942" rel="#L13942">13942</span>
<span id="L13943" rel="#L13943">13943</span>
<span id="L13944" rel="#L13944">13944</span>
<span id="L13945" rel="#L13945">13945</span>
<span id="L13946" rel="#L13946">13946</span>
<span id="L13947" rel="#L13947">13947</span>
<span id="L13948" rel="#L13948">13948</span>
<span id="L13949" rel="#L13949">13949</span>
<span id="L13950" rel="#L13950">13950</span>
<span id="L13951" rel="#L13951">13951</span>
<span id="L13952" rel="#L13952">13952</span>
<span id="L13953" rel="#L13953">13953</span>
<span id="L13954" rel="#L13954">13954</span>
<span id="L13955" rel="#L13955">13955</span>
<span id="L13956" rel="#L13956">13956</span>
<span id="L13957" rel="#L13957">13957</span>
<span id="L13958" rel="#L13958">13958</span>
<span id="L13959" rel="#L13959">13959</span>
<span id="L13960" rel="#L13960">13960</span>
<span id="L13961" rel="#L13961">13961</span>
<span id="L13962" rel="#L13962">13962</span>
<span id="L13963" rel="#L13963">13963</span>
<span id="L13964" rel="#L13964">13964</span>
<span id="L13965" rel="#L13965">13965</span>
<span id="L13966" rel="#L13966">13966</span>
<span id="L13967" rel="#L13967">13967</span>
<span id="L13968" rel="#L13968">13968</span>
<span id="L13969" rel="#L13969">13969</span>
<span id="L13970" rel="#L13970">13970</span>
<span id="L13971" rel="#L13971">13971</span>
<span id="L13972" rel="#L13972">13972</span>
<span id="L13973" rel="#L13973">13973</span>
<span id="L13974" rel="#L13974">13974</span>
<span id="L13975" rel="#L13975">13975</span>
<span id="L13976" rel="#L13976">13976</span>
<span id="L13977" rel="#L13977">13977</span>
<span id="L13978" rel="#L13978">13978</span>
<span id="L13979" rel="#L13979">13979</span>
<span id="L13980" rel="#L13980">13980</span>
<span id="L13981" rel="#L13981">13981</span>
<span id="L13982" rel="#L13982">13982</span>
<span id="L13983" rel="#L13983">13983</span>
<span id="L13984" rel="#L13984">13984</span>
<span id="L13985" rel="#L13985">13985</span>
<span id="L13986" rel="#L13986">13986</span>
<span id="L13987" rel="#L13987">13987</span>
<span id="L13988" rel="#L13988">13988</span>
<span id="L13989" rel="#L13989">13989</span>
<span id="L13990" rel="#L13990">13990</span>
<span id="L13991" rel="#L13991">13991</span>
<span id="L13992" rel="#L13992">13992</span>
<span id="L13993" rel="#L13993">13993</span>
<span id="L13994" rel="#L13994">13994</span>
<span id="L13995" rel="#L13995">13995</span>
<span id="L13996" rel="#L13996">13996</span>
<span id="L13997" rel="#L13997">13997</span>
<span id="L13998" rel="#L13998">13998</span>
<span id="L13999" rel="#L13999">13999</span>
<span id="L14000" rel="#L14000">14000</span>
<span id="L14001" rel="#L14001">14001</span>
<span id="L14002" rel="#L14002">14002</span>
<span id="L14003" rel="#L14003">14003</span>
<span id="L14004" rel="#L14004">14004</span>
<span id="L14005" rel="#L14005">14005</span>
<span id="L14006" rel="#L14006">14006</span>
<span id="L14007" rel="#L14007">14007</span>
<span id="L14008" rel="#L14008">14008</span>
<span id="L14009" rel="#L14009">14009</span>
<span id="L14010" rel="#L14010">14010</span>
<span id="L14011" rel="#L14011">14011</span>
<span id="L14012" rel="#L14012">14012</span>
<span id="L14013" rel="#L14013">14013</span>
<span id="L14014" rel="#L14014">14014</span>
<span id="L14015" rel="#L14015">14015</span>
<span id="L14016" rel="#L14016">14016</span>
<span id="L14017" rel="#L14017">14017</span>
<span id="L14018" rel="#L14018">14018</span>
<span id="L14019" rel="#L14019">14019</span>
<span id="L14020" rel="#L14020">14020</span>
<span id="L14021" rel="#L14021">14021</span>
<span id="L14022" rel="#L14022">14022</span>
<span id="L14023" rel="#L14023">14023</span>
<span id="L14024" rel="#L14024">14024</span>
<span id="L14025" rel="#L14025">14025</span>
<span id="L14026" rel="#L14026">14026</span>
<span id="L14027" rel="#L14027">14027</span>
<span id="L14028" rel="#L14028">14028</span>
<span id="L14029" rel="#L14029">14029</span>
<span id="L14030" rel="#L14030">14030</span>
<span id="L14031" rel="#L14031">14031</span>
<span id="L14032" rel="#L14032">14032</span>
<span id="L14033" rel="#L14033">14033</span>
<span id="L14034" rel="#L14034">14034</span>
<span id="L14035" rel="#L14035">14035</span>
<span id="L14036" rel="#L14036">14036</span>
<span id="L14037" rel="#L14037">14037</span>
<span id="L14038" rel="#L14038">14038</span>
<span id="L14039" rel="#L14039">14039</span>
<span id="L14040" rel="#L14040">14040</span>
<span id="L14041" rel="#L14041">14041</span>
<span id="L14042" rel="#L14042">14042</span>
<span id="L14043" rel="#L14043">14043</span>
<span id="L14044" rel="#L14044">14044</span>
<span id="L14045" rel="#L14045">14045</span>
<span id="L14046" rel="#L14046">14046</span>
<span id="L14047" rel="#L14047">14047</span>
<span id="L14048" rel="#L14048">14048</span>
<span id="L14049" rel="#L14049">14049</span>
<span id="L14050" rel="#L14050">14050</span>
<span id="L14051" rel="#L14051">14051</span>
<span id="L14052" rel="#L14052">14052</span>
<span id="L14053" rel="#L14053">14053</span>
<span id="L14054" rel="#L14054">14054</span>
<span id="L14055" rel="#L14055">14055</span>
<span id="L14056" rel="#L14056">14056</span>
<span id="L14057" rel="#L14057">14057</span>
<span id="L14058" rel="#L14058">14058</span>
<span id="L14059" rel="#L14059">14059</span>
<span id="L14060" rel="#L14060">14060</span>
<span id="L14061" rel="#L14061">14061</span>
<span id="L14062" rel="#L14062">14062</span>
<span id="L14063" rel="#L14063">14063</span>
<span id="L14064" rel="#L14064">14064</span>
<span id="L14065" rel="#L14065">14065</span>
<span id="L14066" rel="#L14066">14066</span>
<span id="L14067" rel="#L14067">14067</span>
<span id="L14068" rel="#L14068">14068</span>
<span id="L14069" rel="#L14069">14069</span>
<span id="L14070" rel="#L14070">14070</span>
<span id="L14071" rel="#L14071">14071</span>
<span id="L14072" rel="#L14072">14072</span>
<span id="L14073" rel="#L14073">14073</span>
<span id="L14074" rel="#L14074">14074</span>
<span id="L14075" rel="#L14075">14075</span>
<span id="L14076" rel="#L14076">14076</span>
<span id="L14077" rel="#L14077">14077</span>
<span id="L14078" rel="#L14078">14078</span>
<span id="L14079" rel="#L14079">14079</span>
<span id="L14080" rel="#L14080">14080</span>
<span id="L14081" rel="#L14081">14081</span>
<span id="L14082" rel="#L14082">14082</span>
<span id="L14083" rel="#L14083">14083</span>
<span id="L14084" rel="#L14084">14084</span>
<span id="L14085" rel="#L14085">14085</span>
<span id="L14086" rel="#L14086">14086</span>
<span id="L14087" rel="#L14087">14087</span>
<span id="L14088" rel="#L14088">14088</span>
<span id="L14089" rel="#L14089">14089</span>
<span id="L14090" rel="#L14090">14090</span>
<span id="L14091" rel="#L14091">14091</span>
<span id="L14092" rel="#L14092">14092</span>
<span id="L14093" rel="#L14093">14093</span>
<span id="L14094" rel="#L14094">14094</span>
<span id="L14095" rel="#L14095">14095</span>
<span id="L14096" rel="#L14096">14096</span>
<span id="L14097" rel="#L14097">14097</span>
<span id="L14098" rel="#L14098">14098</span>
<span id="L14099" rel="#L14099">14099</span>
<span id="L14100" rel="#L14100">14100</span>
<span id="L14101" rel="#L14101">14101</span>
<span id="L14102" rel="#L14102">14102</span>
<span id="L14103" rel="#L14103">14103</span>
<span id="L14104" rel="#L14104">14104</span>
<span id="L14105" rel="#L14105">14105</span>
<span id="L14106" rel="#L14106">14106</span>
<span id="L14107" rel="#L14107">14107</span>
<span id="L14108" rel="#L14108">14108</span>
<span id="L14109" rel="#L14109">14109</span>
<span id="L14110" rel="#L14110">14110</span>
<span id="L14111" rel="#L14111">14111</span>
<span id="L14112" rel="#L14112">14112</span>
<span id="L14113" rel="#L14113">14113</span>
<span id="L14114" rel="#L14114">14114</span>
<span id="L14115" rel="#L14115">14115</span>
<span id="L14116" rel="#L14116">14116</span>
<span id="L14117" rel="#L14117">14117</span>
<span id="L14118" rel="#L14118">14118</span>
<span id="L14119" rel="#L14119">14119</span>
<span id="L14120" rel="#L14120">14120</span>
<span id="L14121" rel="#L14121">14121</span>
<span id="L14122" rel="#L14122">14122</span>
<span id="L14123" rel="#L14123">14123</span>
<span id="L14124" rel="#L14124">14124</span>
<span id="L14125" rel="#L14125">14125</span>
<span id="L14126" rel="#L14126">14126</span>
<span id="L14127" rel="#L14127">14127</span>
<span id="L14128" rel="#L14128">14128</span>
<span id="L14129" rel="#L14129">14129</span>
<span id="L14130" rel="#L14130">14130</span>
<span id="L14131" rel="#L14131">14131</span>
<span id="L14132" rel="#L14132">14132</span>
<span id="L14133" rel="#L14133">14133</span>
<span id="L14134" rel="#L14134">14134</span>
<span id="L14135" rel="#L14135">14135</span>
<span id="L14136" rel="#L14136">14136</span>
<span id="L14137" rel="#L14137">14137</span>
<span id="L14138" rel="#L14138">14138</span>
<span id="L14139" rel="#L14139">14139</span>
<span id="L14140" rel="#L14140">14140</span>
<span id="L14141" rel="#L14141">14141</span>
<span id="L14142" rel="#L14142">14142</span>
<span id="L14143" rel="#L14143">14143</span>
<span id="L14144" rel="#L14144">14144</span>
<span id="L14145" rel="#L14145">14145</span>
<span id="L14146" rel="#L14146">14146</span>
<span id="L14147" rel="#L14147">14147</span>
<span id="L14148" rel="#L14148">14148</span>
<span id="L14149" rel="#L14149">14149</span>
<span id="L14150" rel="#L14150">14150</span>
<span id="L14151" rel="#L14151">14151</span>
<span id="L14152" rel="#L14152">14152</span>
<span id="L14153" rel="#L14153">14153</span>
<span id="L14154" rel="#L14154">14154</span>
<span id="L14155" rel="#L14155">14155</span>
<span id="L14156" rel="#L14156">14156</span>
<span id="L14157" rel="#L14157">14157</span>
<span id="L14158" rel="#L14158">14158</span>
<span id="L14159" rel="#L14159">14159</span>
<span id="L14160" rel="#L14160">14160</span>
<span id="L14161" rel="#L14161">14161</span>
<span id="L14162" rel="#L14162">14162</span>
<span id="L14163" rel="#L14163">14163</span>
<span id="L14164" rel="#L14164">14164</span>
<span id="L14165" rel="#L14165">14165</span>
<span id="L14166" rel="#L14166">14166</span>
<span id="L14167" rel="#L14167">14167</span>
<span id="L14168" rel="#L14168">14168</span>
<span id="L14169" rel="#L14169">14169</span>
<span id="L14170" rel="#L14170">14170</span>
<span id="L14171" rel="#L14171">14171</span>
<span id="L14172" rel="#L14172">14172</span>
<span id="L14173" rel="#L14173">14173</span>
<span id="L14174" rel="#L14174">14174</span>
<span id="L14175" rel="#L14175">14175</span>
<span id="L14176" rel="#L14176">14176</span>
<span id="L14177" rel="#L14177">14177</span>
<span id="L14178" rel="#L14178">14178</span>
<span id="L14179" rel="#L14179">14179</span>
<span id="L14180" rel="#L14180">14180</span>
<span id="L14181" rel="#L14181">14181</span>
<span id="L14182" rel="#L14182">14182</span>
<span id="L14183" rel="#L14183">14183</span>
<span id="L14184" rel="#L14184">14184</span>
<span id="L14185" rel="#L14185">14185</span>
<span id="L14186" rel="#L14186">14186</span>
<span id="L14187" rel="#L14187">14187</span>
<span id="L14188" rel="#L14188">14188</span>
<span id="L14189" rel="#L14189">14189</span>
<span id="L14190" rel="#L14190">14190</span>
<span id="L14191" rel="#L14191">14191</span>
<span id="L14192" rel="#L14192">14192</span>
<span id="L14193" rel="#L14193">14193</span>
<span id="L14194" rel="#L14194">14194</span>
<span id="L14195" rel="#L14195">14195</span>
<span id="L14196" rel="#L14196">14196</span>
<span id="L14197" rel="#L14197">14197</span>
<span id="L14198" rel="#L14198">14198</span>
<span id="L14199" rel="#L14199">14199</span>
<span id="L14200" rel="#L14200">14200</span>
<span id="L14201" rel="#L14201">14201</span>
<span id="L14202" rel="#L14202">14202</span>
<span id="L14203" rel="#L14203">14203</span>
<span id="L14204" rel="#L14204">14204</span>
<span id="L14205" rel="#L14205">14205</span>
<span id="L14206" rel="#L14206">14206</span>
<span id="L14207" rel="#L14207">14207</span>
<span id="L14208" rel="#L14208">14208</span>
<span id="L14209" rel="#L14209">14209</span>
<span id="L14210" rel="#L14210">14210</span>
<span id="L14211" rel="#L14211">14211</span>
<span id="L14212" rel="#L14212">14212</span>
<span id="L14213" rel="#L14213">14213</span>
<span id="L14214" rel="#L14214">14214</span>
<span id="L14215" rel="#L14215">14215</span>
<span id="L14216" rel="#L14216">14216</span>
<span id="L14217" rel="#L14217">14217</span>
<span id="L14218" rel="#L14218">14218</span>
<span id="L14219" rel="#L14219">14219</span>
<span id="L14220" rel="#L14220">14220</span>
<span id="L14221" rel="#L14221">14221</span>
<span id="L14222" rel="#L14222">14222</span>
<span id="L14223" rel="#L14223">14223</span>
<span id="L14224" rel="#L14224">14224</span>
<span id="L14225" rel="#L14225">14225</span>
<span id="L14226" rel="#L14226">14226</span>
<span id="L14227" rel="#L14227">14227</span>
<span id="L14228" rel="#L14228">14228</span>
<span id="L14229" rel="#L14229">14229</span>
<span id="L14230" rel="#L14230">14230</span>
<span id="L14231" rel="#L14231">14231</span>
<span id="L14232" rel="#L14232">14232</span>
<span id="L14233" rel="#L14233">14233</span>
<span id="L14234" rel="#L14234">14234</span>
<span id="L14235" rel="#L14235">14235</span>
<span id="L14236" rel="#L14236">14236</span>
<span id="L14237" rel="#L14237">14237</span>
<span id="L14238" rel="#L14238">14238</span>
<span id="L14239" rel="#L14239">14239</span>
<span id="L14240" rel="#L14240">14240</span>
<span id="L14241" rel="#L14241">14241</span>
<span id="L14242" rel="#L14242">14242</span>
<span id="L14243" rel="#L14243">14243</span>
<span id="L14244" rel="#L14244">14244</span>
<span id="L14245" rel="#L14245">14245</span>
<span id="L14246" rel="#L14246">14246</span>
<span id="L14247" rel="#L14247">14247</span>
<span id="L14248" rel="#L14248">14248</span>
<span id="L14249" rel="#L14249">14249</span>
<span id="L14250" rel="#L14250">14250</span>
<span id="L14251" rel="#L14251">14251</span>
<span id="L14252" rel="#L14252">14252</span>
<span id="L14253" rel="#L14253">14253</span>
<span id="L14254" rel="#L14254">14254</span>
<span id="L14255" rel="#L14255">14255</span>
<span id="L14256" rel="#L14256">14256</span>
<span id="L14257" rel="#L14257">14257</span>
<span id="L14258" rel="#L14258">14258</span>
<span id="L14259" rel="#L14259">14259</span>
<span id="L14260" rel="#L14260">14260</span>
<span id="L14261" rel="#L14261">14261</span>
<span id="L14262" rel="#L14262">14262</span>
<span id="L14263" rel="#L14263">14263</span>
<span id="L14264" rel="#L14264">14264</span>
<span id="L14265" rel="#L14265">14265</span>
<span id="L14266" rel="#L14266">14266</span>
<span id="L14267" rel="#L14267">14267</span>
<span id="L14268" rel="#L14268">14268</span>
<span id="L14269" rel="#L14269">14269</span>
<span id="L14270" rel="#L14270">14270</span>
<span id="L14271" rel="#L14271">14271</span>
<span id="L14272" rel="#L14272">14272</span>
<span id="L14273" rel="#L14273">14273</span>
<span id="L14274" rel="#L14274">14274</span>
<span id="L14275" rel="#L14275">14275</span>
<span id="L14276" rel="#L14276">14276</span>
<span id="L14277" rel="#L14277">14277</span>
<span id="L14278" rel="#L14278">14278</span>
<span id="L14279" rel="#L14279">14279</span>
<span id="L14280" rel="#L14280">14280</span>
<span id="L14281" rel="#L14281">14281</span>
<span id="L14282" rel="#L14282">14282</span>
<span id="L14283" rel="#L14283">14283</span>
<span id="L14284" rel="#L14284">14284</span>
<span id="L14285" rel="#L14285">14285</span>
<span id="L14286" rel="#L14286">14286</span>
<span id="L14287" rel="#L14287">14287</span>
<span id="L14288" rel="#L14288">14288</span>
<span id="L14289" rel="#L14289">14289</span>
<span id="L14290" rel="#L14290">14290</span>
<span id="L14291" rel="#L14291">14291</span>
<span id="L14292" rel="#L14292">14292</span>
<span id="L14293" rel="#L14293">14293</span>
<span id="L14294" rel="#L14294">14294</span>
<span id="L14295" rel="#L14295">14295</span>
<span id="L14296" rel="#L14296">14296</span>
<span id="L14297" rel="#L14297">14297</span>
<span id="L14298" rel="#L14298">14298</span>
<span id="L14299" rel="#L14299">14299</span>
<span id="L14300" rel="#L14300">14300</span>
<span id="L14301" rel="#L14301">14301</span>
<span id="L14302" rel="#L14302">14302</span>
<span id="L14303" rel="#L14303">14303</span>
<span id="L14304" rel="#L14304">14304</span>
<span id="L14305" rel="#L14305">14305</span>
<span id="L14306" rel="#L14306">14306</span>
<span id="L14307" rel="#L14307">14307</span>
<span id="L14308" rel="#L14308">14308</span>
<span id="L14309" rel="#L14309">14309</span>
<span id="L14310" rel="#L14310">14310</span>
<span id="L14311" rel="#L14311">14311</span>
<span id="L14312" rel="#L14312">14312</span>
<span id="L14313" rel="#L14313">14313</span>
<span id="L14314" rel="#L14314">14314</span>
<span id="L14315" rel="#L14315">14315</span>
<span id="L14316" rel="#L14316">14316</span>
<span id="L14317" rel="#L14317">14317</span>
<span id="L14318" rel="#L14318">14318</span>
<span id="L14319" rel="#L14319">14319</span>
<span id="L14320" rel="#L14320">14320</span>
<span id="L14321" rel="#L14321">14321</span>
<span id="L14322" rel="#L14322">14322</span>
<span id="L14323" rel="#L14323">14323</span>
<span id="L14324" rel="#L14324">14324</span>
<span id="L14325" rel="#L14325">14325</span>
<span id="L14326" rel="#L14326">14326</span>
<span id="L14327" rel="#L14327">14327</span>
<span id="L14328" rel="#L14328">14328</span>
<span id="L14329" rel="#L14329">14329</span>
<span id="L14330" rel="#L14330">14330</span>
<span id="L14331" rel="#L14331">14331</span>
<span id="L14332" rel="#L14332">14332</span>
<span id="L14333" rel="#L14333">14333</span>
<span id="L14334" rel="#L14334">14334</span>
<span id="L14335" rel="#L14335">14335</span>
<span id="L14336" rel="#L14336">14336</span>
<span id="L14337" rel="#L14337">14337</span>
<span id="L14338" rel="#L14338">14338</span>
<span id="L14339" rel="#L14339">14339</span>
<span id="L14340" rel="#L14340">14340</span>
<span id="L14341" rel="#L14341">14341</span>
<span id="L14342" rel="#L14342">14342</span>
<span id="L14343" rel="#L14343">14343</span>
<span id="L14344" rel="#L14344">14344</span>
<span id="L14345" rel="#L14345">14345</span>
<span id="L14346" rel="#L14346">14346</span>
<span id="L14347" rel="#L14347">14347</span>
<span id="L14348" rel="#L14348">14348</span>
<span id="L14349" rel="#L14349">14349</span>
<span id="L14350" rel="#L14350">14350</span>
<span id="L14351" rel="#L14351">14351</span>
<span id="L14352" rel="#L14352">14352</span>
<span id="L14353" rel="#L14353">14353</span>
<span id="L14354" rel="#L14354">14354</span>
<span id="L14355" rel="#L14355">14355</span>
<span id="L14356" rel="#L14356">14356</span>
<span id="L14357" rel="#L14357">14357</span>
<span id="L14358" rel="#L14358">14358</span>
<span id="L14359" rel="#L14359">14359</span>
<span id="L14360" rel="#L14360">14360</span>
<span id="L14361" rel="#L14361">14361</span>
<span id="L14362" rel="#L14362">14362</span>
<span id="L14363" rel="#L14363">14363</span>
<span id="L14364" rel="#L14364">14364</span>
<span id="L14365" rel="#L14365">14365</span>
<span id="L14366" rel="#L14366">14366</span>
<span id="L14367" rel="#L14367">14367</span>
<span id="L14368" rel="#L14368">14368</span>
<span id="L14369" rel="#L14369">14369</span>
<span id="L14370" rel="#L14370">14370</span>
<span id="L14371" rel="#L14371">14371</span>
<span id="L14372" rel="#L14372">14372</span>
<span id="L14373" rel="#L14373">14373</span>
<span id="L14374" rel="#L14374">14374</span>
<span id="L14375" rel="#L14375">14375</span>
<span id="L14376" rel="#L14376">14376</span>
<span id="L14377" rel="#L14377">14377</span>
<span id="L14378" rel="#L14378">14378</span>
<span id="L14379" rel="#L14379">14379</span>
<span id="L14380" rel="#L14380">14380</span>
<span id="L14381" rel="#L14381">14381</span>
<span id="L14382" rel="#L14382">14382</span>
<span id="L14383" rel="#L14383">14383</span>
<span id="L14384" rel="#L14384">14384</span>
<span id="L14385" rel="#L14385">14385</span>
<span id="L14386" rel="#L14386">14386</span>
<span id="L14387" rel="#L14387">14387</span>
<span id="L14388" rel="#L14388">14388</span>
<span id="L14389" rel="#L14389">14389</span>
<span id="L14390" rel="#L14390">14390</span>
<span id="L14391" rel="#L14391">14391</span>
<span id="L14392" rel="#L14392">14392</span>
<span id="L14393" rel="#L14393">14393</span>
<span id="L14394" rel="#L14394">14394</span>
<span id="L14395" rel="#L14395">14395</span>
<span id="L14396" rel="#L14396">14396</span>
<span id="L14397" rel="#L14397">14397</span>
<span id="L14398" rel="#L14398">14398</span>
<span id="L14399" rel="#L14399">14399</span>
<span id="L14400" rel="#L14400">14400</span>
<span id="L14401" rel="#L14401">14401</span>
<span id="L14402" rel="#L14402">14402</span>
<span id="L14403" rel="#L14403">14403</span>
<span id="L14404" rel="#L14404">14404</span>
<span id="L14405" rel="#L14405">14405</span>
<span id="L14406" rel="#L14406">14406</span>
<span id="L14407" rel="#L14407">14407</span>
<span id="L14408" rel="#L14408">14408</span>
<span id="L14409" rel="#L14409">14409</span>
<span id="L14410" rel="#L14410">14410</span>
<span id="L14411" rel="#L14411">14411</span>
<span id="L14412" rel="#L14412">14412</span>
<span id="L14413" rel="#L14413">14413</span>
<span id="L14414" rel="#L14414">14414</span>
<span id="L14415" rel="#L14415">14415</span>
<span id="L14416" rel="#L14416">14416</span>
<span id="L14417" rel="#L14417">14417</span>
<span id="L14418" rel="#L14418">14418</span>
<span id="L14419" rel="#L14419">14419</span>
<span id="L14420" rel="#L14420">14420</span>
<span id="L14421" rel="#L14421">14421</span>
<span id="L14422" rel="#L14422">14422</span>
<span id="L14423" rel="#L14423">14423</span>
<span id="L14424" rel="#L14424">14424</span>
<span id="L14425" rel="#L14425">14425</span>
<span id="L14426" rel="#L14426">14426</span>
<span id="L14427" rel="#L14427">14427</span>
<span id="L14428" rel="#L14428">14428</span>
<span id="L14429" rel="#L14429">14429</span>
<span id="L14430" rel="#L14430">14430</span>
<span id="L14431" rel="#L14431">14431</span>
<span id="L14432" rel="#L14432">14432</span>
<span id="L14433" rel="#L14433">14433</span>
<span id="L14434" rel="#L14434">14434</span>
<span id="L14435" rel="#L14435">14435</span>
<span id="L14436" rel="#L14436">14436</span>
<span id="L14437" rel="#L14437">14437</span>
<span id="L14438" rel="#L14438">14438</span>
<span id="L14439" rel="#L14439">14439</span>
<span id="L14440" rel="#L14440">14440</span>
<span id="L14441" rel="#L14441">14441</span>
<span id="L14442" rel="#L14442">14442</span>
<span id="L14443" rel="#L14443">14443</span>
<span id="L14444" rel="#L14444">14444</span>
<span id="L14445" rel="#L14445">14445</span>
<span id="L14446" rel="#L14446">14446</span>
<span id="L14447" rel="#L14447">14447</span>
<span id="L14448" rel="#L14448">14448</span>
<span id="L14449" rel="#L14449">14449</span>
<span id="L14450" rel="#L14450">14450</span>
<span id="L14451" rel="#L14451">14451</span>
<span id="L14452" rel="#L14452">14452</span>
<span id="L14453" rel="#L14453">14453</span>
<span id="L14454" rel="#L14454">14454</span>
<span id="L14455" rel="#L14455">14455</span>
<span id="L14456" rel="#L14456">14456</span>
<span id="L14457" rel="#L14457">14457</span>
<span id="L14458" rel="#L14458">14458</span>
<span id="L14459" rel="#L14459">14459</span>
<span id="L14460" rel="#L14460">14460</span>
<span id="L14461" rel="#L14461">14461</span>
<span id="L14462" rel="#L14462">14462</span>
<span id="L14463" rel="#L14463">14463</span>
<span id="L14464" rel="#L14464">14464</span>
<span id="L14465" rel="#L14465">14465</span>
<span id="L14466" rel="#L14466">14466</span>
<span id="L14467" rel="#L14467">14467</span>
<span id="L14468" rel="#L14468">14468</span>
<span id="L14469" rel="#L14469">14469</span>
<span id="L14470" rel="#L14470">14470</span>
<span id="L14471" rel="#L14471">14471</span>
<span id="L14472" rel="#L14472">14472</span>
<span id="L14473" rel="#L14473">14473</span>
<span id="L14474" rel="#L14474">14474</span>
<span id="L14475" rel="#L14475">14475</span>
<span id="L14476" rel="#L14476">14476</span>
<span id="L14477" rel="#L14477">14477</span>
<span id="L14478" rel="#L14478">14478</span>
<span id="L14479" rel="#L14479">14479</span>
<span id="L14480" rel="#L14480">14480</span>
<span id="L14481" rel="#L14481">14481</span>
<span id="L14482" rel="#L14482">14482</span>
<span id="L14483" rel="#L14483">14483</span>
<span id="L14484" rel="#L14484">14484</span>
<span id="L14485" rel="#L14485">14485</span>
<span id="L14486" rel="#L14486">14486</span>
<span id="L14487" rel="#L14487">14487</span>
<span id="L14488" rel="#L14488">14488</span>
<span id="L14489" rel="#L14489">14489</span>
<span id="L14490" rel="#L14490">14490</span>
<span id="L14491" rel="#L14491">14491</span>
<span id="L14492" rel="#L14492">14492</span>
<span id="L14493" rel="#L14493">14493</span>
<span id="L14494" rel="#L14494">14494</span>
<span id="L14495" rel="#L14495">14495</span>
<span id="L14496" rel="#L14496">14496</span>
<span id="L14497" rel="#L14497">14497</span>
<span id="L14498" rel="#L14498">14498</span>
<span id="L14499" rel="#L14499">14499</span>
<span id="L14500" rel="#L14500">14500</span>
<span id="L14501" rel="#L14501">14501</span>
<span id="L14502" rel="#L14502">14502</span>
<span id="L14503" rel="#L14503">14503</span>
<span id="L14504" rel="#L14504">14504</span>
<span id="L14505" rel="#L14505">14505</span>
<span id="L14506" rel="#L14506">14506</span>
<span id="L14507" rel="#L14507">14507</span>
<span id="L14508" rel="#L14508">14508</span>
<span id="L14509" rel="#L14509">14509</span>
<span id="L14510" rel="#L14510">14510</span>
<span id="L14511" rel="#L14511">14511</span>
<span id="L14512" rel="#L14512">14512</span>
<span id="L14513" rel="#L14513">14513</span>
<span id="L14514" rel="#L14514">14514</span>
<span id="L14515" rel="#L14515">14515</span>
<span id="L14516" rel="#L14516">14516</span>
<span id="L14517" rel="#L14517">14517</span>
<span id="L14518" rel="#L14518">14518</span>
<span id="L14519" rel="#L14519">14519</span>
<span id="L14520" rel="#L14520">14520</span>
<span id="L14521" rel="#L14521">14521</span>
<span id="L14522" rel="#L14522">14522</span>
<span id="L14523" rel="#L14523">14523</span>
<span id="L14524" rel="#L14524">14524</span>
<span id="L14525" rel="#L14525">14525</span>
<span id="L14526" rel="#L14526">14526</span>
<span id="L14527" rel="#L14527">14527</span>
<span id="L14528" rel="#L14528">14528</span>
<span id="L14529" rel="#L14529">14529</span>
<span id="L14530" rel="#L14530">14530</span>
<span id="L14531" rel="#L14531">14531</span>
<span id="L14532" rel="#L14532">14532</span>
<span id="L14533" rel="#L14533">14533</span>
<span id="L14534" rel="#L14534">14534</span>
<span id="L14535" rel="#L14535">14535</span>
<span id="L14536" rel="#L14536">14536</span>
<span id="L14537" rel="#L14537">14537</span>
<span id="L14538" rel="#L14538">14538</span>
<span id="L14539" rel="#L14539">14539</span>
<span id="L14540" rel="#L14540">14540</span>
<span id="L14541" rel="#L14541">14541</span>
<span id="L14542" rel="#L14542">14542</span>
<span id="L14543" rel="#L14543">14543</span>
<span id="L14544" rel="#L14544">14544</span>
<span id="L14545" rel="#L14545">14545</span>
<span id="L14546" rel="#L14546">14546</span>
<span id="L14547" rel="#L14547">14547</span>
<span id="L14548" rel="#L14548">14548</span>
<span id="L14549" rel="#L14549">14549</span>
<span id="L14550" rel="#L14550">14550</span>
<span id="L14551" rel="#L14551">14551</span>
<span id="L14552" rel="#L14552">14552</span>
<span id="L14553" rel="#L14553">14553</span>
<span id="L14554" rel="#L14554">14554</span>
<span id="L14555" rel="#L14555">14555</span>
<span id="L14556" rel="#L14556">14556</span>
<span id="L14557" rel="#L14557">14557</span>
<span id="L14558" rel="#L14558">14558</span>
<span id="L14559" rel="#L14559">14559</span>
<span id="L14560" rel="#L14560">14560</span>
<span id="L14561" rel="#L14561">14561</span>
<span id="L14562" rel="#L14562">14562</span>
<span id="L14563" rel="#L14563">14563</span>
<span id="L14564" rel="#L14564">14564</span>
<span id="L14565" rel="#L14565">14565</span>
<span id="L14566" rel="#L14566">14566</span>
<span id="L14567" rel="#L14567">14567</span>
<span id="L14568" rel="#L14568">14568</span>
<span id="L14569" rel="#L14569">14569</span>
<span id="L14570" rel="#L14570">14570</span>
<span id="L14571" rel="#L14571">14571</span>
<span id="L14572" rel="#L14572">14572</span>
<span id="L14573" rel="#L14573">14573</span>
<span id="L14574" rel="#L14574">14574</span>
<span id="L14575" rel="#L14575">14575</span>
<span id="L14576" rel="#L14576">14576</span>
<span id="L14577" rel="#L14577">14577</span>
<span id="L14578" rel="#L14578">14578</span>
<span id="L14579" rel="#L14579">14579</span>
<span id="L14580" rel="#L14580">14580</span>
<span id="L14581" rel="#L14581">14581</span>
<span id="L14582" rel="#L14582">14582</span>
<span id="L14583" rel="#L14583">14583</span>
<span id="L14584" rel="#L14584">14584</span>
<span id="L14585" rel="#L14585">14585</span>
<span id="L14586" rel="#L14586">14586</span>
<span id="L14587" rel="#L14587">14587</span>
<span id="L14588" rel="#L14588">14588</span>
<span id="L14589" rel="#L14589">14589</span>
<span id="L14590" rel="#L14590">14590</span>
<span id="L14591" rel="#L14591">14591</span>
<span id="L14592" rel="#L14592">14592</span>
<span id="L14593" rel="#L14593">14593</span>
<span id="L14594" rel="#L14594">14594</span>
<span id="L14595" rel="#L14595">14595</span>
<span id="L14596" rel="#L14596">14596</span>
<span id="L14597" rel="#L14597">14597</span>
<span id="L14598" rel="#L14598">14598</span>
<span id="L14599" rel="#L14599">14599</span>
<span id="L14600" rel="#L14600">14600</span>
<span id="L14601" rel="#L14601">14601</span>
<span id="L14602" rel="#L14602">14602</span>
<span id="L14603" rel="#L14603">14603</span>
<span id="L14604" rel="#L14604">14604</span>
<span id="L14605" rel="#L14605">14605</span>
<span id="L14606" rel="#L14606">14606</span>
<span id="L14607" rel="#L14607">14607</span>
<span id="L14608" rel="#L14608">14608</span>
<span id="L14609" rel="#L14609">14609</span>
<span id="L14610" rel="#L14610">14610</span>
<span id="L14611" rel="#L14611">14611</span>
<span id="L14612" rel="#L14612">14612</span>
<span id="L14613" rel="#L14613">14613</span>
<span id="L14614" rel="#L14614">14614</span>
<span id="L14615" rel="#L14615">14615</span>
<span id="L14616" rel="#L14616">14616</span>
<span id="L14617" rel="#L14617">14617</span>
<span id="L14618" rel="#L14618">14618</span>
<span id="L14619" rel="#L14619">14619</span>
<span id="L14620" rel="#L14620">14620</span>
<span id="L14621" rel="#L14621">14621</span>
<span id="L14622" rel="#L14622">14622</span>
<span id="L14623" rel="#L14623">14623</span>
<span id="L14624" rel="#L14624">14624</span>
<span id="L14625" rel="#L14625">14625</span>
<span id="L14626" rel="#L14626">14626</span>
<span id="L14627" rel="#L14627">14627</span>
<span id="L14628" rel="#L14628">14628</span>
<span id="L14629" rel="#L14629">14629</span>
<span id="L14630" rel="#L14630">14630</span>
<span id="L14631" rel="#L14631">14631</span>
<span id="L14632" rel="#L14632">14632</span>
<span id="L14633" rel="#L14633">14633</span>
<span id="L14634" rel="#L14634">14634</span>
<span id="L14635" rel="#L14635">14635</span>
<span id="L14636" rel="#L14636">14636</span>
<span id="L14637" rel="#L14637">14637</span>
<span id="L14638" rel="#L14638">14638</span>
<span id="L14639" rel="#L14639">14639</span>
<span id="L14640" rel="#L14640">14640</span>
<span id="L14641" rel="#L14641">14641</span>
<span id="L14642" rel="#L14642">14642</span>
<span id="L14643" rel="#L14643">14643</span>
<span id="L14644" rel="#L14644">14644</span>
<span id="L14645" rel="#L14645">14645</span>
<span id="L14646" rel="#L14646">14646</span>
<span id="L14647" rel="#L14647">14647</span>
<span id="L14648" rel="#L14648">14648</span>
<span id="L14649" rel="#L14649">14649</span>
<span id="L14650" rel="#L14650">14650</span>
<span id="L14651" rel="#L14651">14651</span>
<span id="L14652" rel="#L14652">14652</span>
<span id="L14653" rel="#L14653">14653</span>
<span id="L14654" rel="#L14654">14654</span>
<span id="L14655" rel="#L14655">14655</span>
<span id="L14656" rel="#L14656">14656</span>
<span id="L14657" rel="#L14657">14657</span>
<span id="L14658" rel="#L14658">14658</span>
<span id="L14659" rel="#L14659">14659</span>
<span id="L14660" rel="#L14660">14660</span>
<span id="L14661" rel="#L14661">14661</span>
<span id="L14662" rel="#L14662">14662</span>
<span id="L14663" rel="#L14663">14663</span>
<span id="L14664" rel="#L14664">14664</span>
<span id="L14665" rel="#L14665">14665</span>
<span id="L14666" rel="#L14666">14666</span>
<span id="L14667" rel="#L14667">14667</span>
<span id="L14668" rel="#L14668">14668</span>
<span id="L14669" rel="#L14669">14669</span>
<span id="L14670" rel="#L14670">14670</span>
<span id="L14671" rel="#L14671">14671</span>
<span id="L14672" rel="#L14672">14672</span>
<span id="L14673" rel="#L14673">14673</span>
<span id="L14674" rel="#L14674">14674</span>
<span id="L14675" rel="#L14675">14675</span>
<span id="L14676" rel="#L14676">14676</span>
<span id="L14677" rel="#L14677">14677</span>
<span id="L14678" rel="#L14678">14678</span>
<span id="L14679" rel="#L14679">14679</span>
<span id="L14680" rel="#L14680">14680</span>
<span id="L14681" rel="#L14681">14681</span>
<span id="L14682" rel="#L14682">14682</span>
<span id="L14683" rel="#L14683">14683</span>
<span id="L14684" rel="#L14684">14684</span>
<span id="L14685" rel="#L14685">14685</span>
<span id="L14686" rel="#L14686">14686</span>
<span id="L14687" rel="#L14687">14687</span>
<span id="L14688" rel="#L14688">14688</span>
<span id="L14689" rel="#L14689">14689</span>
<span id="L14690" rel="#L14690">14690</span>
<span id="L14691" rel="#L14691">14691</span>
<span id="L14692" rel="#L14692">14692</span>
<span id="L14693" rel="#L14693">14693</span>
<span id="L14694" rel="#L14694">14694</span>
<span id="L14695" rel="#L14695">14695</span>
<span id="L14696" rel="#L14696">14696</span>
<span id="L14697" rel="#L14697">14697</span>
<span id="L14698" rel="#L14698">14698</span>
<span id="L14699" rel="#L14699">14699</span>
<span id="L14700" rel="#L14700">14700</span>
<span id="L14701" rel="#L14701">14701</span>
<span id="L14702" rel="#L14702">14702</span>
<span id="L14703" rel="#L14703">14703</span>
<span id="L14704" rel="#L14704">14704</span>
<span id="L14705" rel="#L14705">14705</span>
<span id="L14706" rel="#L14706">14706</span>
<span id="L14707" rel="#L14707">14707</span>
<span id="L14708" rel="#L14708">14708</span>
<span id="L14709" rel="#L14709">14709</span>
<span id="L14710" rel="#L14710">14710</span>
<span id="L14711" rel="#L14711">14711</span>
<span id="L14712" rel="#L14712">14712</span>
<span id="L14713" rel="#L14713">14713</span>
<span id="L14714" rel="#L14714">14714</span>
<span id="L14715" rel="#L14715">14715</span>
<span id="L14716" rel="#L14716">14716</span>
<span id="L14717" rel="#L14717">14717</span>
<span id="L14718" rel="#L14718">14718</span>
<span id="L14719" rel="#L14719">14719</span>
<span id="L14720" rel="#L14720">14720</span>
<span id="L14721" rel="#L14721">14721</span>
<span id="L14722" rel="#L14722">14722</span>
<span id="L14723" rel="#L14723">14723</span>
<span id="L14724" rel="#L14724">14724</span>
<span id="L14725" rel="#L14725">14725</span>
<span id="L14726" rel="#L14726">14726</span>
<span id="L14727" rel="#L14727">14727</span>
<span id="L14728" rel="#L14728">14728</span>
<span id="L14729" rel="#L14729">14729</span>
<span id="L14730" rel="#L14730">14730</span>
<span id="L14731" rel="#L14731">14731</span>
<span id="L14732" rel="#L14732">14732</span>
<span id="L14733" rel="#L14733">14733</span>
<span id="L14734" rel="#L14734">14734</span>
<span id="L14735" rel="#L14735">14735</span>
<span id="L14736" rel="#L14736">14736</span>
<span id="L14737" rel="#L14737">14737</span>
<span id="L14738" rel="#L14738">14738</span>
<span id="L14739" rel="#L14739">14739</span>
<span id="L14740" rel="#L14740">14740</span>
<span id="L14741" rel="#L14741">14741</span>
<span id="L14742" rel="#L14742">14742</span>
<span id="L14743" rel="#L14743">14743</span>
<span id="L14744" rel="#L14744">14744</span>
<span id="L14745" rel="#L14745">14745</span>
<span id="L14746" rel="#L14746">14746</span>
<span id="L14747" rel="#L14747">14747</span>
<span id="L14748" rel="#L14748">14748</span>
<span id="L14749" rel="#L14749">14749</span>
<span id="L14750" rel="#L14750">14750</span>
<span id="L14751" rel="#L14751">14751</span>
<span id="L14752" rel="#L14752">14752</span>
<span id="L14753" rel="#L14753">14753</span>
<span id="L14754" rel="#L14754">14754</span>
<span id="L14755" rel="#L14755">14755</span>
<span id="L14756" rel="#L14756">14756</span>
<span id="L14757" rel="#L14757">14757</span>
<span id="L14758" rel="#L14758">14758</span>
<span id="L14759" rel="#L14759">14759</span>
<span id="L14760" rel="#L14760">14760</span>
<span id="L14761" rel="#L14761">14761</span>
<span id="L14762" rel="#L14762">14762</span>
<span id="L14763" rel="#L14763">14763</span>
<span id="L14764" rel="#L14764">14764</span>
<span id="L14765" rel="#L14765">14765</span>
<span id="L14766" rel="#L14766">14766</span>
<span id="L14767" rel="#L14767">14767</span>
<span id="L14768" rel="#L14768">14768</span>
<span id="L14769" rel="#L14769">14769</span>
<span id="L14770" rel="#L14770">14770</span>
<span id="L14771" rel="#L14771">14771</span>
<span id="L14772" rel="#L14772">14772</span>
<span id="L14773" rel="#L14773">14773</span>
<span id="L14774" rel="#L14774">14774</span>
<span id="L14775" rel="#L14775">14775</span>
<span id="L14776" rel="#L14776">14776</span>
<span id="L14777" rel="#L14777">14777</span>
<span id="L14778" rel="#L14778">14778</span>
<span id="L14779" rel="#L14779">14779</span>
<span id="L14780" rel="#L14780">14780</span>
<span id="L14781" rel="#L14781">14781</span>
<span id="L14782" rel="#L14782">14782</span>
<span id="L14783" rel="#L14783">14783</span>
<span id="L14784" rel="#L14784">14784</span>
<span id="L14785" rel="#L14785">14785</span>
<span id="L14786" rel="#L14786">14786</span>
<span id="L14787" rel="#L14787">14787</span>
<span id="L14788" rel="#L14788">14788</span>
<span id="L14789" rel="#L14789">14789</span>
<span id="L14790" rel="#L14790">14790</span>
<span id="L14791" rel="#L14791">14791</span>
<span id="L14792" rel="#L14792">14792</span>
<span id="L14793" rel="#L14793">14793</span>
<span id="L14794" rel="#L14794">14794</span>
<span id="L14795" rel="#L14795">14795</span>
<span id="L14796" rel="#L14796">14796</span>
<span id="L14797" rel="#L14797">14797</span>
<span id="L14798" rel="#L14798">14798</span>
<span id="L14799" rel="#L14799">14799</span>
<span id="L14800" rel="#L14800">14800</span>
<span id="L14801" rel="#L14801">14801</span>
<span id="L14802" rel="#L14802">14802</span>
<span id="L14803" rel="#L14803">14803</span>
<span id="L14804" rel="#L14804">14804</span>
<span id="L14805" rel="#L14805">14805</span>
<span id="L14806" rel="#L14806">14806</span>
<span id="L14807" rel="#L14807">14807</span>
<span id="L14808" rel="#L14808">14808</span>
<span id="L14809" rel="#L14809">14809</span>
<span id="L14810" rel="#L14810">14810</span>
<span id="L14811" rel="#L14811">14811</span>
<span id="L14812" rel="#L14812">14812</span>
<span id="L14813" rel="#L14813">14813</span>
<span id="L14814" rel="#L14814">14814</span>
<span id="L14815" rel="#L14815">14815</span>
<span id="L14816" rel="#L14816">14816</span>
<span id="L14817" rel="#L14817">14817</span>
<span id="L14818" rel="#L14818">14818</span>
<span id="L14819" rel="#L14819">14819</span>
<span id="L14820" rel="#L14820">14820</span>
<span id="L14821" rel="#L14821">14821</span>
<span id="L14822" rel="#L14822">14822</span>
<span id="L14823" rel="#L14823">14823</span>
<span id="L14824" rel="#L14824">14824</span>
<span id="L14825" rel="#L14825">14825</span>
<span id="L14826" rel="#L14826">14826</span>
<span id="L14827" rel="#L14827">14827</span>
<span id="L14828" rel="#L14828">14828</span>
<span id="L14829" rel="#L14829">14829</span>
<span id="L14830" rel="#L14830">14830</span>
<span id="L14831" rel="#L14831">14831</span>
<span id="L14832" rel="#L14832">14832</span>
<span id="L14833" rel="#L14833">14833</span>
<span id="L14834" rel="#L14834">14834</span>
<span id="L14835" rel="#L14835">14835</span>
<span id="L14836" rel="#L14836">14836</span>
<span id="L14837" rel="#L14837">14837</span>
<span id="L14838" rel="#L14838">14838</span>
<span id="L14839" rel="#L14839">14839</span>
<span id="L14840" rel="#L14840">14840</span>
<span id="L14841" rel="#L14841">14841</span>
<span id="L14842" rel="#L14842">14842</span>
<span id="L14843" rel="#L14843">14843</span>
<span id="L14844" rel="#L14844">14844</span>
<span id="L14845" rel="#L14845">14845</span>
<span id="L14846" rel="#L14846">14846</span>
<span id="L14847" rel="#L14847">14847</span>
<span id="L14848" rel="#L14848">14848</span>
<span id="L14849" rel="#L14849">14849</span>
<span id="L14850" rel="#L14850">14850</span>
<span id="L14851" rel="#L14851">14851</span>
<span id="L14852" rel="#L14852">14852</span>
<span id="L14853" rel="#L14853">14853</span>
<span id="L14854" rel="#L14854">14854</span>
<span id="L14855" rel="#L14855">14855</span>
<span id="L14856" rel="#L14856">14856</span>
<span id="L14857" rel="#L14857">14857</span>
<span id="L14858" rel="#L14858">14858</span>
<span id="L14859" rel="#L14859">14859</span>
<span id="L14860" rel="#L14860">14860</span>
<span id="L14861" rel="#L14861">14861</span>
<span id="L14862" rel="#L14862">14862</span>
<span id="L14863" rel="#L14863">14863</span>
<span id="L14864" rel="#L14864">14864</span>
<span id="L14865" rel="#L14865">14865</span>
<span id="L14866" rel="#L14866">14866</span>
<span id="L14867" rel="#L14867">14867</span>
<span id="L14868" rel="#L14868">14868</span>
<span id="L14869" rel="#L14869">14869</span>
<span id="L14870" rel="#L14870">14870</span>
<span id="L14871" rel="#L14871">14871</span>
<span id="L14872" rel="#L14872">14872</span>
<span id="L14873" rel="#L14873">14873</span>
<span id="L14874" rel="#L14874">14874</span>
<span id="L14875" rel="#L14875">14875</span>
<span id="L14876" rel="#L14876">14876</span>
<span id="L14877" rel="#L14877">14877</span>
<span id="L14878" rel="#L14878">14878</span>
<span id="L14879" rel="#L14879">14879</span>
<span id="L14880" rel="#L14880">14880</span>
<span id="L14881" rel="#L14881">14881</span>
<span id="L14882" rel="#L14882">14882</span>
<span id="L14883" rel="#L14883">14883</span>
<span id="L14884" rel="#L14884">14884</span>
<span id="L14885" rel="#L14885">14885</span>
<span id="L14886" rel="#L14886">14886</span>
<span id="L14887" rel="#L14887">14887</span>
<span id="L14888" rel="#L14888">14888</span>
<span id="L14889" rel="#L14889">14889</span>
<span id="L14890" rel="#L14890">14890</span>
<span id="L14891" rel="#L14891">14891</span>
<span id="L14892" rel="#L14892">14892</span>
<span id="L14893" rel="#L14893">14893</span>
<span id="L14894" rel="#L14894">14894</span>
<span id="L14895" rel="#L14895">14895</span>
<span id="L14896" rel="#L14896">14896</span>
<span id="L14897" rel="#L14897">14897</span>
<span id="L14898" rel="#L14898">14898</span>
<span id="L14899" rel="#L14899">14899</span>
<span id="L14900" rel="#L14900">14900</span>
<span id="L14901" rel="#L14901">14901</span>
<span id="L14902" rel="#L14902">14902</span>
<span id="L14903" rel="#L14903">14903</span>
<span id="L14904" rel="#L14904">14904</span>
<span id="L14905" rel="#L14905">14905</span>
<span id="L14906" rel="#L14906">14906</span>
<span id="L14907" rel="#L14907">14907</span>
<span id="L14908" rel="#L14908">14908</span>
<span id="L14909" rel="#L14909">14909</span>
<span id="L14910" rel="#L14910">14910</span>
<span id="L14911" rel="#L14911">14911</span>
<span id="L14912" rel="#L14912">14912</span>
<span id="L14913" rel="#L14913">14913</span>
<span id="L14914" rel="#L14914">14914</span>
<span id="L14915" rel="#L14915">14915</span>
<span id="L14916" rel="#L14916">14916</span>
<span id="L14917" rel="#L14917">14917</span>
<span id="L14918" rel="#L14918">14918</span>
<span id="L14919" rel="#L14919">14919</span>
<span id="L14920" rel="#L14920">14920</span>
<span id="L14921" rel="#L14921">14921</span>
<span id="L14922" rel="#L14922">14922</span>
<span id="L14923" rel="#L14923">14923</span>
<span id="L14924" rel="#L14924">14924</span>
<span id="L14925" rel="#L14925">14925</span>
<span id="L14926" rel="#L14926">14926</span>
<span id="L14927" rel="#L14927">14927</span>
<span id="L14928" rel="#L14928">14928</span>
<span id="L14929" rel="#L14929">14929</span>
<span id="L14930" rel="#L14930">14930</span>
<span id="L14931" rel="#L14931">14931</span>
<span id="L14932" rel="#L14932">14932</span>
<span id="L14933" rel="#L14933">14933</span>
<span id="L14934" rel="#L14934">14934</span>
<span id="L14935" rel="#L14935">14935</span>
<span id="L14936" rel="#L14936">14936</span>
<span id="L14937" rel="#L14937">14937</span>
<span id="L14938" rel="#L14938">14938</span>
<span id="L14939" rel="#L14939">14939</span>
<span id="L14940" rel="#L14940">14940</span>
<span id="L14941" rel="#L14941">14941</span>
<span id="L14942" rel="#L14942">14942</span>
<span id="L14943" rel="#L14943">14943</span>
<span id="L14944" rel="#L14944">14944</span>
<span id="L14945" rel="#L14945">14945</span>
<span id="L14946" rel="#L14946">14946</span>
<span id="L14947" rel="#L14947">14947</span>
<span id="L14948" rel="#L14948">14948</span>
<span id="L14949" rel="#L14949">14949</span>
<span id="L14950" rel="#L14950">14950</span>
<span id="L14951" rel="#L14951">14951</span>
<span id="L14952" rel="#L14952">14952</span>
<span id="L14953" rel="#L14953">14953</span>
<span id="L14954" rel="#L14954">14954</span>
<span id="L14955" rel="#L14955">14955</span>
<span id="L14956" rel="#L14956">14956</span>
<span id="L14957" rel="#L14957">14957</span>
<span id="L14958" rel="#L14958">14958</span>
<span id="L14959" rel="#L14959">14959</span>
<span id="L14960" rel="#L14960">14960</span>
<span id="L14961" rel="#L14961">14961</span>
<span id="L14962" rel="#L14962">14962</span>
<span id="L14963" rel="#L14963">14963</span>
<span id="L14964" rel="#L14964">14964</span>
<span id="L14965" rel="#L14965">14965</span>
<span id="L14966" rel="#L14966">14966</span>
<span id="L14967" rel="#L14967">14967</span>
<span id="L14968" rel="#L14968">14968</span>
<span id="L14969" rel="#L14969">14969</span>
<span id="L14970" rel="#L14970">14970</span>
<span id="L14971" rel="#L14971">14971</span>
<span id="L14972" rel="#L14972">14972</span>
<span id="L14973" rel="#L14973">14973</span>
<span id="L14974" rel="#L14974">14974</span>
<span id="L14975" rel="#L14975">14975</span>
<span id="L14976" rel="#L14976">14976</span>
<span id="L14977" rel="#L14977">14977</span>
<span id="L14978" rel="#L14978">14978</span>
<span id="L14979" rel="#L14979">14979</span>
<span id="L14980" rel="#L14980">14980</span>
<span id="L14981" rel="#L14981">14981</span>
<span id="L14982" rel="#L14982">14982</span>
<span id="L14983" rel="#L14983">14983</span>
<span id="L14984" rel="#L14984">14984</span>
<span id="L14985" rel="#L14985">14985</span>
<span id="L14986" rel="#L14986">14986</span>
<span id="L14987" rel="#L14987">14987</span>
<span id="L14988" rel="#L14988">14988</span>
<span id="L14989" rel="#L14989">14989</span>
<span id="L14990" rel="#L14990">14990</span>
<span id="L14991" rel="#L14991">14991</span>
<span id="L14992" rel="#L14992">14992</span>
<span id="L14993" rel="#L14993">14993</span>
<span id="L14994" rel="#L14994">14994</span>
<span id="L14995" rel="#L14995">14995</span>
<span id="L14996" rel="#L14996">14996</span>
<span id="L14997" rel="#L14997">14997</span>
<span id="L14998" rel="#L14998">14998</span>
<span id="L14999" rel="#L14999">14999</span>
<span id="L15000" rel="#L15000">15000</span>
<span id="L15001" rel="#L15001">15001</span>
<span id="L15002" rel="#L15002">15002</span>
<span id="L15003" rel="#L15003">15003</span>
<span id="L15004" rel="#L15004">15004</span>
<span id="L15005" rel="#L15005">15005</span>
<span id="L15006" rel="#L15006">15006</span>
<span id="L15007" rel="#L15007">15007</span>
<span id="L15008" rel="#L15008">15008</span>
<span id="L15009" rel="#L15009">15009</span>
<span id="L15010" rel="#L15010">15010</span>
<span id="L15011" rel="#L15011">15011</span>
<span id="L15012" rel="#L15012">15012</span>
<span id="L15013" rel="#L15013">15013</span>
<span id="L15014" rel="#L15014">15014</span>
<span id="L15015" rel="#L15015">15015</span>
<span id="L15016" rel="#L15016">15016</span>
<span id="L15017" rel="#L15017">15017</span>
<span id="L15018" rel="#L15018">15018</span>
<span id="L15019" rel="#L15019">15019</span>
<span id="L15020" rel="#L15020">15020</span>
<span id="L15021" rel="#L15021">15021</span>
<span id="L15022" rel="#L15022">15022</span>
<span id="L15023" rel="#L15023">15023</span>
<span id="L15024" rel="#L15024">15024</span>
<span id="L15025" rel="#L15025">15025</span>
<span id="L15026" rel="#L15026">15026</span>
<span id="L15027" rel="#L15027">15027</span>
<span id="L15028" rel="#L15028">15028</span>
<span id="L15029" rel="#L15029">15029</span>
<span id="L15030" rel="#L15030">15030</span>
<span id="L15031" rel="#L15031">15031</span>
<span id="L15032" rel="#L15032">15032</span>
<span id="L15033" rel="#L15033">15033</span>
<span id="L15034" rel="#L15034">15034</span>
<span id="L15035" rel="#L15035">15035</span>
<span id="L15036" rel="#L15036">15036</span>
<span id="L15037" rel="#L15037">15037</span>
<span id="L15038" rel="#L15038">15038</span>
<span id="L15039" rel="#L15039">15039</span>
<span id="L15040" rel="#L15040">15040</span>
<span id="L15041" rel="#L15041">15041</span>
<span id="L15042" rel="#L15042">15042</span>
<span id="L15043" rel="#L15043">15043</span>
<span id="L15044" rel="#L15044">15044</span>
<span id="L15045" rel="#L15045">15045</span>
<span id="L15046" rel="#L15046">15046</span>
<span id="L15047" rel="#L15047">15047</span>
<span id="L15048" rel="#L15048">15048</span>
<span id="L15049" rel="#L15049">15049</span>
<span id="L15050" rel="#L15050">15050</span>
<span id="L15051" rel="#L15051">15051</span>
<span id="L15052" rel="#L15052">15052</span>
<span id="L15053" rel="#L15053">15053</span>
<span id="L15054" rel="#L15054">15054</span>
<span id="L15055" rel="#L15055">15055</span>
<span id="L15056" rel="#L15056">15056</span>
<span id="L15057" rel="#L15057">15057</span>
<span id="L15058" rel="#L15058">15058</span>
<span id="L15059" rel="#L15059">15059</span>
<span id="L15060" rel="#L15060">15060</span>
<span id="L15061" rel="#L15061">15061</span>
<span id="L15062" rel="#L15062">15062</span>
<span id="L15063" rel="#L15063">15063</span>
<span id="L15064" rel="#L15064">15064</span>
<span id="L15065" rel="#L15065">15065</span>
<span id="L15066" rel="#L15066">15066</span>
<span id="L15067" rel="#L15067">15067</span>
<span id="L15068" rel="#L15068">15068</span>
<span id="L15069" rel="#L15069">15069</span>
<span id="L15070" rel="#L15070">15070</span>
<span id="L15071" rel="#L15071">15071</span>
<span id="L15072" rel="#L15072">15072</span>
<span id="L15073" rel="#L15073">15073</span>
<span id="L15074" rel="#L15074">15074</span>
<span id="L15075" rel="#L15075">15075</span>
<span id="L15076" rel="#L15076">15076</span>
<span id="L15077" rel="#L15077">15077</span>
<span id="L15078" rel="#L15078">15078</span>
<span id="L15079" rel="#L15079">15079</span>
<span id="L15080" rel="#L15080">15080</span>
<span id="L15081" rel="#L15081">15081</span>
<span id="L15082" rel="#L15082">15082</span>
<span id="L15083" rel="#L15083">15083</span>
<span id="L15084" rel="#L15084">15084</span>
<span id="L15085" rel="#L15085">15085</span>
<span id="L15086" rel="#L15086">15086</span>
<span id="L15087" rel="#L15087">15087</span>
<span id="L15088" rel="#L15088">15088</span>
<span id="L15089" rel="#L15089">15089</span>
<span id="L15090" rel="#L15090">15090</span>
<span id="L15091" rel="#L15091">15091</span>
<span id="L15092" rel="#L15092">15092</span>
<span id="L15093" rel="#L15093">15093</span>
<span id="L15094" rel="#L15094">15094</span>
<span id="L15095" rel="#L15095">15095</span>
<span id="L15096" rel="#L15096">15096</span>
<span id="L15097" rel="#L15097">15097</span>
<span id="L15098" rel="#L15098">15098</span>
<span id="L15099" rel="#L15099">15099</span>
<span id="L15100" rel="#L15100">15100</span>
<span id="L15101" rel="#L15101">15101</span>
<span id="L15102" rel="#L15102">15102</span>
<span id="L15103" rel="#L15103">15103</span>
<span id="L15104" rel="#L15104">15104</span>
<span id="L15105" rel="#L15105">15105</span>
<span id="L15106" rel="#L15106">15106</span>
<span id="L15107" rel="#L15107">15107</span>
<span id="L15108" rel="#L15108">15108</span>
<span id="L15109" rel="#L15109">15109</span>
<span id="L15110" rel="#L15110">15110</span>
<span id="L15111" rel="#L15111">15111</span>
<span id="L15112" rel="#L15112">15112</span>
<span id="L15113" rel="#L15113">15113</span>
<span id="L15114" rel="#L15114">15114</span>
<span id="L15115" rel="#L15115">15115</span>
<span id="L15116" rel="#L15116">15116</span>
<span id="L15117" rel="#L15117">15117</span>
<span id="L15118" rel="#L15118">15118</span>
<span id="L15119" rel="#L15119">15119</span>
<span id="L15120" rel="#L15120">15120</span>
<span id="L15121" rel="#L15121">15121</span>
<span id="L15122" rel="#L15122">15122</span>
<span id="L15123" rel="#L15123">15123</span>
<span id="L15124" rel="#L15124">15124</span>
<span id="L15125" rel="#L15125">15125</span>
<span id="L15126" rel="#L15126">15126</span>
<span id="L15127" rel="#L15127">15127</span>
<span id="L15128" rel="#L15128">15128</span>
<span id="L15129" rel="#L15129">15129</span>
<span id="L15130" rel="#L15130">15130</span>
<span id="L15131" rel="#L15131">15131</span>
<span id="L15132" rel="#L15132">15132</span>
<span id="L15133" rel="#L15133">15133</span>
<span id="L15134" rel="#L15134">15134</span>
<span id="L15135" rel="#L15135">15135</span>
<span id="L15136" rel="#L15136">15136</span>
<span id="L15137" rel="#L15137">15137</span>
<span id="L15138" rel="#L15138">15138</span>
<span id="L15139" rel="#L15139">15139</span>
<span id="L15140" rel="#L15140">15140</span>
<span id="L15141" rel="#L15141">15141</span>
<span id="L15142" rel="#L15142">15142</span>
<span id="L15143" rel="#L15143">15143</span>
<span id="L15144" rel="#L15144">15144</span>
<span id="L15145" rel="#L15145">15145</span>
<span id="L15146" rel="#L15146">15146</span>
<span id="L15147" rel="#L15147">15147</span>
<span id="L15148" rel="#L15148">15148</span>
<span id="L15149" rel="#L15149">15149</span>
<span id="L15150" rel="#L15150">15150</span>
<span id="L15151" rel="#L15151">15151</span>
<span id="L15152" rel="#L15152">15152</span>
<span id="L15153" rel="#L15153">15153</span>
<span id="L15154" rel="#L15154">15154</span>
<span id="L15155" rel="#L15155">15155</span>
<span id="L15156" rel="#L15156">15156</span>
<span id="L15157" rel="#L15157">15157</span>
<span id="L15158" rel="#L15158">15158</span>
<span id="L15159" rel="#L15159">15159</span>
<span id="L15160" rel="#L15160">15160</span>
<span id="L15161" rel="#L15161">15161</span>
<span id="L15162" rel="#L15162">15162</span>
<span id="L15163" rel="#L15163">15163</span>
<span id="L15164" rel="#L15164">15164</span>
<span id="L15165" rel="#L15165">15165</span>
<span id="L15166" rel="#L15166">15166</span>
<span id="L15167" rel="#L15167">15167</span>
<span id="L15168" rel="#L15168">15168</span>
<span id="L15169" rel="#L15169">15169</span>
<span id="L15170" rel="#L15170">15170</span>
<span id="L15171" rel="#L15171">15171</span>
<span id="L15172" rel="#L15172">15172</span>
<span id="L15173" rel="#L15173">15173</span>
<span id="L15174" rel="#L15174">15174</span>
<span id="L15175" rel="#L15175">15175</span>
<span id="L15176" rel="#L15176">15176</span>
<span id="L15177" rel="#L15177">15177</span>
<span id="L15178" rel="#L15178">15178</span>
<span id="L15179" rel="#L15179">15179</span>
<span id="L15180" rel="#L15180">15180</span>
<span id="L15181" rel="#L15181">15181</span>
<span id="L15182" rel="#L15182">15182</span>
<span id="L15183" rel="#L15183">15183</span>
<span id="L15184" rel="#L15184">15184</span>
<span id="L15185" rel="#L15185">15185</span>
<span id="L15186" rel="#L15186">15186</span>
<span id="L15187" rel="#L15187">15187</span>
<span id="L15188" rel="#L15188">15188</span>
<span id="L15189" rel="#L15189">15189</span>
<span id="L15190" rel="#L15190">15190</span>
<span id="L15191" rel="#L15191">15191</span>
<span id="L15192" rel="#L15192">15192</span>
<span id="L15193" rel="#L15193">15193</span>
<span id="L15194" rel="#L15194">15194</span>
<span id="L15195" rel="#L15195">15195</span>
<span id="L15196" rel="#L15196">15196</span>
<span id="L15197" rel="#L15197">15197</span>
<span id="L15198" rel="#L15198">15198</span>
<span id="L15199" rel="#L15199">15199</span>
<span id="L15200" rel="#L15200">15200</span>
<span id="L15201" rel="#L15201">15201</span>
<span id="L15202" rel="#L15202">15202</span>
<span id="L15203" rel="#L15203">15203</span>
<span id="L15204" rel="#L15204">15204</span>
<span id="L15205" rel="#L15205">15205</span>
<span id="L15206" rel="#L15206">15206</span>
<span id="L15207" rel="#L15207">15207</span>
<span id="L15208" rel="#L15208">15208</span>
<span id="L15209" rel="#L15209">15209</span>
<span id="L15210" rel="#L15210">15210</span>
<span id="L15211" rel="#L15211">15211</span>
<span id="L15212" rel="#L15212">15212</span>
<span id="L15213" rel="#L15213">15213</span>
<span id="L15214" rel="#L15214">15214</span>
<span id="L15215" rel="#L15215">15215</span>
<span id="L15216" rel="#L15216">15216</span>
<span id="L15217" rel="#L15217">15217</span>
<span id="L15218" rel="#L15218">15218</span>
<span id="L15219" rel="#L15219">15219</span>
<span id="L15220" rel="#L15220">15220</span>
<span id="L15221" rel="#L15221">15221</span>
<span id="L15222" rel="#L15222">15222</span>
<span id="L15223" rel="#L15223">15223</span>
<span id="L15224" rel="#L15224">15224</span>
<span id="L15225" rel="#L15225">15225</span>
<span id="L15226" rel="#L15226">15226</span>
<span id="L15227" rel="#L15227">15227</span>
<span id="L15228" rel="#L15228">15228</span>
<span id="L15229" rel="#L15229">15229</span>
<span id="L15230" rel="#L15230">15230</span>
<span id="L15231" rel="#L15231">15231</span>
<span id="L15232" rel="#L15232">15232</span>
<span id="L15233" rel="#L15233">15233</span>
<span id="L15234" rel="#L15234">15234</span>
<span id="L15235" rel="#L15235">15235</span>
<span id="L15236" rel="#L15236">15236</span>
<span id="L15237" rel="#L15237">15237</span>
<span id="L15238" rel="#L15238">15238</span>
<span id="L15239" rel="#L15239">15239</span>
<span id="L15240" rel="#L15240">15240</span>
<span id="L15241" rel="#L15241">15241</span>
<span id="L15242" rel="#L15242">15242</span>
<span id="L15243" rel="#L15243">15243</span>
<span id="L15244" rel="#L15244">15244</span>
<span id="L15245" rel="#L15245">15245</span>
<span id="L15246" rel="#L15246">15246</span>
<span id="L15247" rel="#L15247">15247</span>
<span id="L15248" rel="#L15248">15248</span>
<span id="L15249" rel="#L15249">15249</span>
<span id="L15250" rel="#L15250">15250</span>
<span id="L15251" rel="#L15251">15251</span>
<span id="L15252" rel="#L15252">15252</span>
<span id="L15253" rel="#L15253">15253</span>
<span id="L15254" rel="#L15254">15254</span>
<span id="L15255" rel="#L15255">15255</span>
<span id="L15256" rel="#L15256">15256</span>
<span id="L15257" rel="#L15257">15257</span>
<span id="L15258" rel="#L15258">15258</span>
<span id="L15259" rel="#L15259">15259</span>
<span id="L15260" rel="#L15260">15260</span>
<span id="L15261" rel="#L15261">15261</span>
<span id="L15262" rel="#L15262">15262</span>
<span id="L15263" rel="#L15263">15263</span>
<span id="L15264" rel="#L15264">15264</span>
<span id="L15265" rel="#L15265">15265</span>
<span id="L15266" rel="#L15266">15266</span>
<span id="L15267" rel="#L15267">15267</span>
<span id="L15268" rel="#L15268">15268</span>
<span id="L15269" rel="#L15269">15269</span>
<span id="L15270" rel="#L15270">15270</span>
<span id="L15271" rel="#L15271">15271</span>
<span id="L15272" rel="#L15272">15272</span>
<span id="L15273" rel="#L15273">15273</span>
<span id="L15274" rel="#L15274">15274</span>
<span id="L15275" rel="#L15275">15275</span>
<span id="L15276" rel="#L15276">15276</span>
<span id="L15277" rel="#L15277">15277</span>
<span id="L15278" rel="#L15278">15278</span>
<span id="L15279" rel="#L15279">15279</span>
<span id="L15280" rel="#L15280">15280</span>
<span id="L15281" rel="#L15281">15281</span>
<span id="L15282" rel="#L15282">15282</span>
<span id="L15283" rel="#L15283">15283</span>
<span id="L15284" rel="#L15284">15284</span>
<span id="L15285" rel="#L15285">15285</span>
<span id="L15286" rel="#L15286">15286</span>
<span id="L15287" rel="#L15287">15287</span>
<span id="L15288" rel="#L15288">15288</span>
<span id="L15289" rel="#L15289">15289</span>
<span id="L15290" rel="#L15290">15290</span>
<span id="L15291" rel="#L15291">15291</span>
<span id="L15292" rel="#L15292">15292</span>
<span id="L15293" rel="#L15293">15293</span>
<span id="L15294" rel="#L15294">15294</span>
<span id="L15295" rel="#L15295">15295</span>
<span id="L15296" rel="#L15296">15296</span>
<span id="L15297" rel="#L15297">15297</span>
<span id="L15298" rel="#L15298">15298</span>
<span id="L15299" rel="#L15299">15299</span>
<span id="L15300" rel="#L15300">15300</span>
<span id="L15301" rel="#L15301">15301</span>
<span id="L15302" rel="#L15302">15302</span>
<span id="L15303" rel="#L15303">15303</span>
<span id="L15304" rel="#L15304">15304</span>
<span id="L15305" rel="#L15305">15305</span>
<span id="L15306" rel="#L15306">15306</span>
<span id="L15307" rel="#L15307">15307</span>
<span id="L15308" rel="#L15308">15308</span>
<span id="L15309" rel="#L15309">15309</span>
<span id="L15310" rel="#L15310">15310</span>
<span id="L15311" rel="#L15311">15311</span>
<span id="L15312" rel="#L15312">15312</span>
<span id="L15313" rel="#L15313">15313</span>
<span id="L15314" rel="#L15314">15314</span>
<span id="L15315" rel="#L15315">15315</span>
<span id="L15316" rel="#L15316">15316</span>
<span id="L15317" rel="#L15317">15317</span>
<span id="L15318" rel="#L15318">15318</span>
<span id="L15319" rel="#L15319">15319</span>
<span id="L15320" rel="#L15320">15320</span>
<span id="L15321" rel="#L15321">15321</span>
<span id="L15322" rel="#L15322">15322</span>
<span id="L15323" rel="#L15323">15323</span>
<span id="L15324" rel="#L15324">15324</span>
<span id="L15325" rel="#L15325">15325</span>
<span id="L15326" rel="#L15326">15326</span>
<span id="L15327" rel="#L15327">15327</span>
<span id="L15328" rel="#L15328">15328</span>
<span id="L15329" rel="#L15329">15329</span>
<span id="L15330" rel="#L15330">15330</span>
<span id="L15331" rel="#L15331">15331</span>
<span id="L15332" rel="#L15332">15332</span>
<span id="L15333" rel="#L15333">15333</span>
<span id="L15334" rel="#L15334">15334</span>
<span id="L15335" rel="#L15335">15335</span>
<span id="L15336" rel="#L15336">15336</span>
<span id="L15337" rel="#L15337">15337</span>
<span id="L15338" rel="#L15338">15338</span>
<span id="L15339" rel="#L15339">15339</span>
<span id="L15340" rel="#L15340">15340</span>
<span id="L15341" rel="#L15341">15341</span>
<span id="L15342" rel="#L15342">15342</span>
<span id="L15343" rel="#L15343">15343</span>
<span id="L15344" rel="#L15344">15344</span>
<span id="L15345" rel="#L15345">15345</span>
<span id="L15346" rel="#L15346">15346</span>
<span id="L15347" rel="#L15347">15347</span>
<span id="L15348" rel="#L15348">15348</span>
<span id="L15349" rel="#L15349">15349</span>
<span id="L15350" rel="#L15350">15350</span>
<span id="L15351" rel="#L15351">15351</span>
<span id="L15352" rel="#L15352">15352</span>
<span id="L15353" rel="#L15353">15353</span>
<span id="L15354" rel="#L15354">15354</span>
<span id="L15355" rel="#L15355">15355</span>
<span id="L15356" rel="#L15356">15356</span>
<span id="L15357" rel="#L15357">15357</span>
<span id="L15358" rel="#L15358">15358</span>
<span id="L15359" rel="#L15359">15359</span>
<span id="L15360" rel="#L15360">15360</span>
<span id="L15361" rel="#L15361">15361</span>
<span id="L15362" rel="#L15362">15362</span>
<span id="L15363" rel="#L15363">15363</span>
<span id="L15364" rel="#L15364">15364</span>
<span id="L15365" rel="#L15365">15365</span>
<span id="L15366" rel="#L15366">15366</span>
<span id="L15367" rel="#L15367">15367</span>
<span id="L15368" rel="#L15368">15368</span>
<span id="L15369" rel="#L15369">15369</span>
<span id="L15370" rel="#L15370">15370</span>
<span id="L15371" rel="#L15371">15371</span>
<span id="L15372" rel="#L15372">15372</span>
<span id="L15373" rel="#L15373">15373</span>
<span id="L15374" rel="#L15374">15374</span>
<span id="L15375" rel="#L15375">15375</span>
<span id="L15376" rel="#L15376">15376</span>
<span id="L15377" rel="#L15377">15377</span>
<span id="L15378" rel="#L15378">15378</span>
<span id="L15379" rel="#L15379">15379</span>
<span id="L15380" rel="#L15380">15380</span>
<span id="L15381" rel="#L15381">15381</span>
<span id="L15382" rel="#L15382">15382</span>
<span id="L15383" rel="#L15383">15383</span>
<span id="L15384" rel="#L15384">15384</span>
<span id="L15385" rel="#L15385">15385</span>
<span id="L15386" rel="#L15386">15386</span>
<span id="L15387" rel="#L15387">15387</span>
<span id="L15388" rel="#L15388">15388</span>
<span id="L15389" rel="#L15389">15389</span>
<span id="L15390" rel="#L15390">15390</span>
<span id="L15391" rel="#L15391">15391</span>
<span id="L15392" rel="#L15392">15392</span>
<span id="L15393" rel="#L15393">15393</span>
<span id="L15394" rel="#L15394">15394</span>
<span id="L15395" rel="#L15395">15395</span>
<span id="L15396" rel="#L15396">15396</span>
<span id="L15397" rel="#L15397">15397</span>
<span id="L15398" rel="#L15398">15398</span>
<span id="L15399" rel="#L15399">15399</span>
<span id="L15400" rel="#L15400">15400</span>
<span id="L15401" rel="#L15401">15401</span>
<span id="L15402" rel="#L15402">15402</span>
<span id="L15403" rel="#L15403">15403</span>
<span id="L15404" rel="#L15404">15404</span>
<span id="L15405" rel="#L15405">15405</span>
<span id="L15406" rel="#L15406">15406</span>
<span id="L15407" rel="#L15407">15407</span>
<span id="L15408" rel="#L15408">15408</span>
<span id="L15409" rel="#L15409">15409</span>
<span id="L15410" rel="#L15410">15410</span>
<span id="L15411" rel="#L15411">15411</span>
<span id="L15412" rel="#L15412">15412</span>
<span id="L15413" rel="#L15413">15413</span>
<span id="L15414" rel="#L15414">15414</span>
<span id="L15415" rel="#L15415">15415</span>
<span id="L15416" rel="#L15416">15416</span>
<span id="L15417" rel="#L15417">15417</span>
<span id="L15418" rel="#L15418">15418</span>
<span id="L15419" rel="#L15419">15419</span>
<span id="L15420" rel="#L15420">15420</span>
<span id="L15421" rel="#L15421">15421</span>
<span id="L15422" rel="#L15422">15422</span>
<span id="L15423" rel="#L15423">15423</span>
<span id="L15424" rel="#L15424">15424</span>
<span id="L15425" rel="#L15425">15425</span>
<span id="L15426" rel="#L15426">15426</span>
<span id="L15427" rel="#L15427">15427</span>
<span id="L15428" rel="#L15428">15428</span>
<span id="L15429" rel="#L15429">15429</span>
<span id="L15430" rel="#L15430">15430</span>
<span id="L15431" rel="#L15431">15431</span>
<span id="L15432" rel="#L15432">15432</span>
<span id="L15433" rel="#L15433">15433</span>
<span id="L15434" rel="#L15434">15434</span>
<span id="L15435" rel="#L15435">15435</span>
<span id="L15436" rel="#L15436">15436</span>
<span id="L15437" rel="#L15437">15437</span>
<span id="L15438" rel="#L15438">15438</span>
<span id="L15439" rel="#L15439">15439</span>
<span id="L15440" rel="#L15440">15440</span>
<span id="L15441" rel="#L15441">15441</span>
<span id="L15442" rel="#L15442">15442</span>
<span id="L15443" rel="#L15443">15443</span>
<span id="L15444" rel="#L15444">15444</span>
<span id="L15445" rel="#L15445">15445</span>
<span id="L15446" rel="#L15446">15446</span>
<span id="L15447" rel="#L15447">15447</span>
<span id="L15448" rel="#L15448">15448</span>
<span id="L15449" rel="#L15449">15449</span>
<span id="L15450" rel="#L15450">15450</span>
<span id="L15451" rel="#L15451">15451</span>
<span id="L15452" rel="#L15452">15452</span>
<span id="L15453" rel="#L15453">15453</span>
<span id="L15454" rel="#L15454">15454</span>
<span id="L15455" rel="#L15455">15455</span>
<span id="L15456" rel="#L15456">15456</span>
<span id="L15457" rel="#L15457">15457</span>
<span id="L15458" rel="#L15458">15458</span>
<span id="L15459" rel="#L15459">15459</span>
<span id="L15460" rel="#L15460">15460</span>
<span id="L15461" rel="#L15461">15461</span>
<span id="L15462" rel="#L15462">15462</span>
<span id="L15463" rel="#L15463">15463</span>
<span id="L15464" rel="#L15464">15464</span>
<span id="L15465" rel="#L15465">15465</span>
<span id="L15466" rel="#L15466">15466</span>
<span id="L15467" rel="#L15467">15467</span>
<span id="L15468" rel="#L15468">15468</span>
<span id="L15469" rel="#L15469">15469</span>
<span id="L15470" rel="#L15470">15470</span>
<span id="L15471" rel="#L15471">15471</span>
<span id="L15472" rel="#L15472">15472</span>
<span id="L15473" rel="#L15473">15473</span>
<span id="L15474" rel="#L15474">15474</span>
<span id="L15475" rel="#L15475">15475</span>
<span id="L15476" rel="#L15476">15476</span>
<span id="L15477" rel="#L15477">15477</span>
<span id="L15478" rel="#L15478">15478</span>
<span id="L15479" rel="#L15479">15479</span>
<span id="L15480" rel="#L15480">15480</span>
<span id="L15481" rel="#L15481">15481</span>
<span id="L15482" rel="#L15482">15482</span>
<span id="L15483" rel="#L15483">15483</span>
<span id="L15484" rel="#L15484">15484</span>
<span id="L15485" rel="#L15485">15485</span>
<span id="L15486" rel="#L15486">15486</span>
<span id="L15487" rel="#L15487">15487</span>
<span id="L15488" rel="#L15488">15488</span>
<span id="L15489" rel="#L15489">15489</span>
<span id="L15490" rel="#L15490">15490</span>
<span id="L15491" rel="#L15491">15491</span>
<span id="L15492" rel="#L15492">15492</span>
<span id="L15493" rel="#L15493">15493</span>
<span id="L15494" rel="#L15494">15494</span>
<span id="L15495" rel="#L15495">15495</span>
<span id="L15496" rel="#L15496">15496</span>
<span id="L15497" rel="#L15497">15497</span>
<span id="L15498" rel="#L15498">15498</span>
<span id="L15499" rel="#L15499">15499</span>
<span id="L15500" rel="#L15500">15500</span>
<span id="L15501" rel="#L15501">15501</span>
<span id="L15502" rel="#L15502">15502</span>
<span id="L15503" rel="#L15503">15503</span>
<span id="L15504" rel="#L15504">15504</span>
<span id="L15505" rel="#L15505">15505</span>
<span id="L15506" rel="#L15506">15506</span>
<span id="L15507" rel="#L15507">15507</span>
<span id="L15508" rel="#L15508">15508</span>
<span id="L15509" rel="#L15509">15509</span>
<span id="L15510" rel="#L15510">15510</span>
<span id="L15511" rel="#L15511">15511</span>
<span id="L15512" rel="#L15512">15512</span>
<span id="L15513" rel="#L15513">15513</span>
<span id="L15514" rel="#L15514">15514</span>
<span id="L15515" rel="#L15515">15515</span>
<span id="L15516" rel="#L15516">15516</span>
<span id="L15517" rel="#L15517">15517</span>
<span id="L15518" rel="#L15518">15518</span>
<span id="L15519" rel="#L15519">15519</span>
<span id="L15520" rel="#L15520">15520</span>
<span id="L15521" rel="#L15521">15521</span>
<span id="L15522" rel="#L15522">15522</span>
<span id="L15523" rel="#L15523">15523</span>
<span id="L15524" rel="#L15524">15524</span>
<span id="L15525" rel="#L15525">15525</span>
<span id="L15526" rel="#L15526">15526</span>
<span id="L15527" rel="#L15527">15527</span>
<span id="L15528" rel="#L15528">15528</span>
<span id="L15529" rel="#L15529">15529</span>
<span id="L15530" rel="#L15530">15530</span>
<span id="L15531" rel="#L15531">15531</span>
<span id="L15532" rel="#L15532">15532</span>
<span id="L15533" rel="#L15533">15533</span>
<span id="L15534" rel="#L15534">15534</span>
<span id="L15535" rel="#L15535">15535</span>
<span id="L15536" rel="#L15536">15536</span>
<span id="L15537" rel="#L15537">15537</span>
<span id="L15538" rel="#L15538">15538</span>
<span id="L15539" rel="#L15539">15539</span>
<span id="L15540" rel="#L15540">15540</span>
<span id="L15541" rel="#L15541">15541</span>
<span id="L15542" rel="#L15542">15542</span>
<span id="L15543" rel="#L15543">15543</span>
<span id="L15544" rel="#L15544">15544</span>
<span id="L15545" rel="#L15545">15545</span>
<span id="L15546" rel="#L15546">15546</span>
<span id="L15547" rel="#L15547">15547</span>
<span id="L15548" rel="#L15548">15548</span>
<span id="L15549" rel="#L15549">15549</span>
<span id="L15550" rel="#L15550">15550</span>
<span id="L15551" rel="#L15551">15551</span>
<span id="L15552" rel="#L15552">15552</span>
<span id="L15553" rel="#L15553">15553</span>
<span id="L15554" rel="#L15554">15554</span>
<span id="L15555" rel="#L15555">15555</span>
<span id="L15556" rel="#L15556">15556</span>
<span id="L15557" rel="#L15557">15557</span>
<span id="L15558" rel="#L15558">15558</span>
<span id="L15559" rel="#L15559">15559</span>
<span id="L15560" rel="#L15560">15560</span>
<span id="L15561" rel="#L15561">15561</span>
<span id="L15562" rel="#L15562">15562</span>
<span id="L15563" rel="#L15563">15563</span>
<span id="L15564" rel="#L15564">15564</span>
<span id="L15565" rel="#L15565">15565</span>
<span id="L15566" rel="#L15566">15566</span>
<span id="L15567" rel="#L15567">15567</span>
<span id="L15568" rel="#L15568">15568</span>
<span id="L15569" rel="#L15569">15569</span>
<span id="L15570" rel="#L15570">15570</span>
<span id="L15571" rel="#L15571">15571</span>
<span id="L15572" rel="#L15572">15572</span>
<span id="L15573" rel="#L15573">15573</span>
<span id="L15574" rel="#L15574">15574</span>
<span id="L15575" rel="#L15575">15575</span>
<span id="L15576" rel="#L15576">15576</span>
<span id="L15577" rel="#L15577">15577</span>
<span id="L15578" rel="#L15578">15578</span>
<span id="L15579" rel="#L15579">15579</span>
<span id="L15580" rel="#L15580">15580</span>
<span id="L15581" rel="#L15581">15581</span>
<span id="L15582" rel="#L15582">15582</span>
<span id="L15583" rel="#L15583">15583</span>
<span id="L15584" rel="#L15584">15584</span>
<span id="L15585" rel="#L15585">15585</span>
<span id="L15586" rel="#L15586">15586</span>
<span id="L15587" rel="#L15587">15587</span>
<span id="L15588" rel="#L15588">15588</span>
<span id="L15589" rel="#L15589">15589</span>
<span id="L15590" rel="#L15590">15590</span>
<span id="L15591" rel="#L15591">15591</span>
<span id="L15592" rel="#L15592">15592</span>
<span id="L15593" rel="#L15593">15593</span>
<span id="L15594" rel="#L15594">15594</span>
<span id="L15595" rel="#L15595">15595</span>
<span id="L15596" rel="#L15596">15596</span>
<span id="L15597" rel="#L15597">15597</span>
<span id="L15598" rel="#L15598">15598</span>
<span id="L15599" rel="#L15599">15599</span>
<span id="L15600" rel="#L15600">15600</span>
<span id="L15601" rel="#L15601">15601</span>
<span id="L15602" rel="#L15602">15602</span>
<span id="L15603" rel="#L15603">15603</span>
<span id="L15604" rel="#L15604">15604</span>
<span id="L15605" rel="#L15605">15605</span>
<span id="L15606" rel="#L15606">15606</span>
<span id="L15607" rel="#L15607">15607</span>
<span id="L15608" rel="#L15608">15608</span>
<span id="L15609" rel="#L15609">15609</span>
<span id="L15610" rel="#L15610">15610</span>
<span id="L15611" rel="#L15611">15611</span>
<span id="L15612" rel="#L15612">15612</span>
<span id="L15613" rel="#L15613">15613</span>
<span id="L15614" rel="#L15614">15614</span>
<span id="L15615" rel="#L15615">15615</span>
<span id="L15616" rel="#L15616">15616</span>
<span id="L15617" rel="#L15617">15617</span>
<span id="L15618" rel="#L15618">15618</span>
<span id="L15619" rel="#L15619">15619</span>
<span id="L15620" rel="#L15620">15620</span>
<span id="L15621" rel="#L15621">15621</span>
<span id="L15622" rel="#L15622">15622</span>
<span id="L15623" rel="#L15623">15623</span>
<span id="L15624" rel="#L15624">15624</span>
<span id="L15625" rel="#L15625">15625</span>
<span id="L15626" rel="#L15626">15626</span>
<span id="L15627" rel="#L15627">15627</span>
<span id="L15628" rel="#L15628">15628</span>
<span id="L15629" rel="#L15629">15629</span>
<span id="L15630" rel="#L15630">15630</span>
<span id="L15631" rel="#L15631">15631</span>
<span id="L15632" rel="#L15632">15632</span>
<span id="L15633" rel="#L15633">15633</span>
<span id="L15634" rel="#L15634">15634</span>
<span id="L15635" rel="#L15635">15635</span>
<span id="L15636" rel="#L15636">15636</span>
<span id="L15637" rel="#L15637">15637</span>
<span id="L15638" rel="#L15638">15638</span>
<span id="L15639" rel="#L15639">15639</span>
<span id="L15640" rel="#L15640">15640</span>
<span id="L15641" rel="#L15641">15641</span>
<span id="L15642" rel="#L15642">15642</span>
<span id="L15643" rel="#L15643">15643</span>
<span id="L15644" rel="#L15644">15644</span>
<span id="L15645" rel="#L15645">15645</span>
<span id="L15646" rel="#L15646">15646</span>
<span id="L15647" rel="#L15647">15647</span>
<span id="L15648" rel="#L15648">15648</span>
<span id="L15649" rel="#L15649">15649</span>
<span id="L15650" rel="#L15650">15650</span>
<span id="L15651" rel="#L15651">15651</span>
<span id="L15652" rel="#L15652">15652</span>
<span id="L15653" rel="#L15653">15653</span>
<span id="L15654" rel="#L15654">15654</span>
<span id="L15655" rel="#L15655">15655</span>
<span id="L15656" rel="#L15656">15656</span>
<span id="L15657" rel="#L15657">15657</span>
<span id="L15658" rel="#L15658">15658</span>
<span id="L15659" rel="#L15659">15659</span>
<span id="L15660" rel="#L15660">15660</span>
<span id="L15661" rel="#L15661">15661</span>
<span id="L15662" rel="#L15662">15662</span>
<span id="L15663" rel="#L15663">15663</span>
<span id="L15664" rel="#L15664">15664</span>
<span id="L15665" rel="#L15665">15665</span>
<span id="L15666" rel="#L15666">15666</span>
<span id="L15667" rel="#L15667">15667</span>
<span id="L15668" rel="#L15668">15668</span>
<span id="L15669" rel="#L15669">15669</span>
<span id="L15670" rel="#L15670">15670</span>
<span id="L15671" rel="#L15671">15671</span>
<span id="L15672" rel="#L15672">15672</span>
<span id="L15673" rel="#L15673">15673</span>
<span id="L15674" rel="#L15674">15674</span>
<span id="L15675" rel="#L15675">15675</span>
<span id="L15676" rel="#L15676">15676</span>
<span id="L15677" rel="#L15677">15677</span>
<span id="L15678" rel="#L15678">15678</span>
<span id="L15679" rel="#L15679">15679</span>
<span id="L15680" rel="#L15680">15680</span>
<span id="L15681" rel="#L15681">15681</span>
<span id="L15682" rel="#L15682">15682</span>
<span id="L15683" rel="#L15683">15683</span>
<span id="L15684" rel="#L15684">15684</span>
<span id="L15685" rel="#L15685">15685</span>
<span id="L15686" rel="#L15686">15686</span>
<span id="L15687" rel="#L15687">15687</span>
<span id="L15688" rel="#L15688">15688</span>
<span id="L15689" rel="#L15689">15689</span>
<span id="L15690" rel="#L15690">15690</span>
<span id="L15691" rel="#L15691">15691</span>
<span id="L15692" rel="#L15692">15692</span>
<span id="L15693" rel="#L15693">15693</span>
<span id="L15694" rel="#L15694">15694</span>
<span id="L15695" rel="#L15695">15695</span>
<span id="L15696" rel="#L15696">15696</span>
<span id="L15697" rel="#L15697">15697</span>
<span id="L15698" rel="#L15698">15698</span>
<span id="L15699" rel="#L15699">15699</span>
<span id="L15700" rel="#L15700">15700</span>
<span id="L15701" rel="#L15701">15701</span>
<span id="L15702" rel="#L15702">15702</span>
<span id="L15703" rel="#L15703">15703</span>
<span id="L15704" rel="#L15704">15704</span>
<span id="L15705" rel="#L15705">15705</span>
<span id="L15706" rel="#L15706">15706</span>
<span id="L15707" rel="#L15707">15707</span>
<span id="L15708" rel="#L15708">15708</span>
<span id="L15709" rel="#L15709">15709</span>
<span id="L15710" rel="#L15710">15710</span>
<span id="L15711" rel="#L15711">15711</span>
<span id="L15712" rel="#L15712">15712</span>
<span id="L15713" rel="#L15713">15713</span>
<span id="L15714" rel="#L15714">15714</span>
<span id="L15715" rel="#L15715">15715</span>
<span id="L15716" rel="#L15716">15716</span>
<span id="L15717" rel="#L15717">15717</span>
<span id="L15718" rel="#L15718">15718</span>
<span id="L15719" rel="#L15719">15719</span>
<span id="L15720" rel="#L15720">15720</span>
<span id="L15721" rel="#L15721">15721</span>
<span id="L15722" rel="#L15722">15722</span>
<span id="L15723" rel="#L15723">15723</span>
<span id="L15724" rel="#L15724">15724</span>
<span id="L15725" rel="#L15725">15725</span>
<span id="L15726" rel="#L15726">15726</span>
<span id="L15727" rel="#L15727">15727</span>
<span id="L15728" rel="#L15728">15728</span>
<span id="L15729" rel="#L15729">15729</span>
<span id="L15730" rel="#L15730">15730</span>
<span id="L15731" rel="#L15731">15731</span>
<span id="L15732" rel="#L15732">15732</span>
<span id="L15733" rel="#L15733">15733</span>
<span id="L15734" rel="#L15734">15734</span>
<span id="L15735" rel="#L15735">15735</span>
<span id="L15736" rel="#L15736">15736</span>
<span id="L15737" rel="#L15737">15737</span>
<span id="L15738" rel="#L15738">15738</span>
<span id="L15739" rel="#L15739">15739</span>
<span id="L15740" rel="#L15740">15740</span>
<span id="L15741" rel="#L15741">15741</span>
<span id="L15742" rel="#L15742">15742</span>
<span id="L15743" rel="#L15743">15743</span>
<span id="L15744" rel="#L15744">15744</span>
<span id="L15745" rel="#L15745">15745</span>
<span id="L15746" rel="#L15746">15746</span>
<span id="L15747" rel="#L15747">15747</span>
<span id="L15748" rel="#L15748">15748</span>
<span id="L15749" rel="#L15749">15749</span>
<span id="L15750" rel="#L15750">15750</span>
<span id="L15751" rel="#L15751">15751</span>
<span id="L15752" rel="#L15752">15752</span>
<span id="L15753" rel="#L15753">15753</span>
<span id="L15754" rel="#L15754">15754</span>
<span id="L15755" rel="#L15755">15755</span>
<span id="L15756" rel="#L15756">15756</span>
<span id="L15757" rel="#L15757">15757</span>
<span id="L15758" rel="#L15758">15758</span>
<span id="L15759" rel="#L15759">15759</span>
<span id="L15760" rel="#L15760">15760</span>
<span id="L15761" rel="#L15761">15761</span>
<span id="L15762" rel="#L15762">15762</span>
<span id="L15763" rel="#L15763">15763</span>
<span id="L15764" rel="#L15764">15764</span>
<span id="L15765" rel="#L15765">15765</span>
<span id="L15766" rel="#L15766">15766</span>
<span id="L15767" rel="#L15767">15767</span>
<span id="L15768" rel="#L15768">15768</span>
<span id="L15769" rel="#L15769">15769</span>
<span id="L15770" rel="#L15770">15770</span>
<span id="L15771" rel="#L15771">15771</span>
<span id="L15772" rel="#L15772">15772</span>
<span id="L15773" rel="#L15773">15773</span>
<span id="L15774" rel="#L15774">15774</span>
<span id="L15775" rel="#L15775">15775</span>
<span id="L15776" rel="#L15776">15776</span>
<span id="L15777" rel="#L15777">15777</span>
<span id="L15778" rel="#L15778">15778</span>
<span id="L15779" rel="#L15779">15779</span>
<span id="L15780" rel="#L15780">15780</span>
<span id="L15781" rel="#L15781">15781</span>
<span id="L15782" rel="#L15782">15782</span>
<span id="L15783" rel="#L15783">15783</span>
<span id="L15784" rel="#L15784">15784</span>
<span id="L15785" rel="#L15785">15785</span>
<span id="L15786" rel="#L15786">15786</span>
<span id="L15787" rel="#L15787">15787</span>
<span id="L15788" rel="#L15788">15788</span>
<span id="L15789" rel="#L15789">15789</span>
<span id="L15790" rel="#L15790">15790</span>
<span id="L15791" rel="#L15791">15791</span>
<span id="L15792" rel="#L15792">15792</span>
<span id="L15793" rel="#L15793">15793</span>
<span id="L15794" rel="#L15794">15794</span>
<span id="L15795" rel="#L15795">15795</span>
<span id="L15796" rel="#L15796">15796</span>
<span id="L15797" rel="#L15797">15797</span>
<span id="L15798" rel="#L15798">15798</span>
<span id="L15799" rel="#L15799">15799</span>
<span id="L15800" rel="#L15800">15800</span>
<span id="L15801" rel="#L15801">15801</span>
<span id="L15802" rel="#L15802">15802</span>
<span id="L15803" rel="#L15803">15803</span>
<span id="L15804" rel="#L15804">15804</span>
<span id="L15805" rel="#L15805">15805</span>
<span id="L15806" rel="#L15806">15806</span>
<span id="L15807" rel="#L15807">15807</span>
<span id="L15808" rel="#L15808">15808</span>
<span id="L15809" rel="#L15809">15809</span>
<span id="L15810" rel="#L15810">15810</span>
<span id="L15811" rel="#L15811">15811</span>
<span id="L15812" rel="#L15812">15812</span>
<span id="L15813" rel="#L15813">15813</span>
<span id="L15814" rel="#L15814">15814</span>
<span id="L15815" rel="#L15815">15815</span>
<span id="L15816" rel="#L15816">15816</span>
<span id="L15817" rel="#L15817">15817</span>
<span id="L15818" rel="#L15818">15818</span>
<span id="L15819" rel="#L15819">15819</span>
<span id="L15820" rel="#L15820">15820</span>
<span id="L15821" rel="#L15821">15821</span>
<span id="L15822" rel="#L15822">15822</span>
<span id="L15823" rel="#L15823">15823</span>
<span id="L15824" rel="#L15824">15824</span>
<span id="L15825" rel="#L15825">15825</span>
<span id="L15826" rel="#L15826">15826</span>
<span id="L15827" rel="#L15827">15827</span>
<span id="L15828" rel="#L15828">15828</span>
<span id="L15829" rel="#L15829">15829</span>
<span id="L15830" rel="#L15830">15830</span>
<span id="L15831" rel="#L15831">15831</span>
<span id="L15832" rel="#L15832">15832</span>
<span id="L15833" rel="#L15833">15833</span>
<span id="L15834" rel="#L15834">15834</span>
<span id="L15835" rel="#L15835">15835</span>
<span id="L15836" rel="#L15836">15836</span>
<span id="L15837" rel="#L15837">15837</span>
<span id="L15838" rel="#L15838">15838</span>
<span id="L15839" rel="#L15839">15839</span>
<span id="L15840" rel="#L15840">15840</span>
<span id="L15841" rel="#L15841">15841</span>
<span id="L15842" rel="#L15842">15842</span>
<span id="L15843" rel="#L15843">15843</span>
<span id="L15844" rel="#L15844">15844</span>
<span id="L15845" rel="#L15845">15845</span>
<span id="L15846" rel="#L15846">15846</span>
<span id="L15847" rel="#L15847">15847</span>
<span id="L15848" rel="#L15848">15848</span>
<span id="L15849" rel="#L15849">15849</span>
<span id="L15850" rel="#L15850">15850</span>
<span id="L15851" rel="#L15851">15851</span>
<span id="L15852" rel="#L15852">15852</span>
<span id="L15853" rel="#L15853">15853</span>
<span id="L15854" rel="#L15854">15854</span>
<span id="L15855" rel="#L15855">15855</span>
<span id="L15856" rel="#L15856">15856</span>
<span id="L15857" rel="#L15857">15857</span>
<span id="L15858" rel="#L15858">15858</span>
<span id="L15859" rel="#L15859">15859</span>
<span id="L15860" rel="#L15860">15860</span>
<span id="L15861" rel="#L15861">15861</span>
<span id="L15862" rel="#L15862">15862</span>
<span id="L15863" rel="#L15863">15863</span>
<span id="L15864" rel="#L15864">15864</span>
<span id="L15865" rel="#L15865">15865</span>
<span id="L15866" rel="#L15866">15866</span>
<span id="L15867" rel="#L15867">15867</span>
<span id="L15868" rel="#L15868">15868</span>
<span id="L15869" rel="#L15869">15869</span>
<span id="L15870" rel="#L15870">15870</span>
<span id="L15871" rel="#L15871">15871</span>
<span id="L15872" rel="#L15872">15872</span>
<span id="L15873" rel="#L15873">15873</span>
<span id="L15874" rel="#L15874">15874</span>
<span id="L15875" rel="#L15875">15875</span>
<span id="L15876" rel="#L15876">15876</span>
<span id="L15877" rel="#L15877">15877</span>
<span id="L15878" rel="#L15878">15878</span>
<span id="L15879" rel="#L15879">15879</span>
<span id="L15880" rel="#L15880">15880</span>
<span id="L15881" rel="#L15881">15881</span>
<span id="L15882" rel="#L15882">15882</span>
<span id="L15883" rel="#L15883">15883</span>
<span id="L15884" rel="#L15884">15884</span>
<span id="L15885" rel="#L15885">15885</span>
<span id="L15886" rel="#L15886">15886</span>
<span id="L15887" rel="#L15887">15887</span>
<span id="L15888" rel="#L15888">15888</span>
<span id="L15889" rel="#L15889">15889</span>
<span id="L15890" rel="#L15890">15890</span>
<span id="L15891" rel="#L15891">15891</span>
<span id="L15892" rel="#L15892">15892</span>
<span id="L15893" rel="#L15893">15893</span>
<span id="L15894" rel="#L15894">15894</span>
<span id="L15895" rel="#L15895">15895</span>
<span id="L15896" rel="#L15896">15896</span>
<span id="L15897" rel="#L15897">15897</span>
<span id="L15898" rel="#L15898">15898</span>
<span id="L15899" rel="#L15899">15899</span>
<span id="L15900" rel="#L15900">15900</span>
<span id="L15901" rel="#L15901">15901</span>
<span id="L15902" rel="#L15902">15902</span>
<span id="L15903" rel="#L15903">15903</span>
<span id="L15904" rel="#L15904">15904</span>
<span id="L15905" rel="#L15905">15905</span>
<span id="L15906" rel="#L15906">15906</span>
<span id="L15907" rel="#L15907">15907</span>
<span id="L15908" rel="#L15908">15908</span>
<span id="L15909" rel="#L15909">15909</span>
<span id="L15910" rel="#L15910">15910</span>
<span id="L15911" rel="#L15911">15911</span>
<span id="L15912" rel="#L15912">15912</span>
<span id="L15913" rel="#L15913">15913</span>
<span id="L15914" rel="#L15914">15914</span>
<span id="L15915" rel="#L15915">15915</span>
<span id="L15916" rel="#L15916">15916</span>
<span id="L15917" rel="#L15917">15917</span>
<span id="L15918" rel="#L15918">15918</span>
<span id="L15919" rel="#L15919">15919</span>
<span id="L15920" rel="#L15920">15920</span>
<span id="L15921" rel="#L15921">15921</span>
<span id="L15922" rel="#L15922">15922</span>
<span id="L15923" rel="#L15923">15923</span>
<span id="L15924" rel="#L15924">15924</span>
<span id="L15925" rel="#L15925">15925</span>
<span id="L15926" rel="#L15926">15926</span>
<span id="L15927" rel="#L15927">15927</span>
<span id="L15928" rel="#L15928">15928</span>
<span id="L15929" rel="#L15929">15929</span>
<span id="L15930" rel="#L15930">15930</span>
<span id="L15931" rel="#L15931">15931</span>
<span id="L15932" rel="#L15932">15932</span>
<span id="L15933" rel="#L15933">15933</span>
<span id="L15934" rel="#L15934">15934</span>
<span id="L15935" rel="#L15935">15935</span>
<span id="L15936" rel="#L15936">15936</span>
<span id="L15937" rel="#L15937">15937</span>
<span id="L15938" rel="#L15938">15938</span>
<span id="L15939" rel="#L15939">15939</span>
<span id="L15940" rel="#L15940">15940</span>
<span id="L15941" rel="#L15941">15941</span>
<span id="L15942" rel="#L15942">15942</span>
<span id="L15943" rel="#L15943">15943</span>
<span id="L15944" rel="#L15944">15944</span>
<span id="L15945" rel="#L15945">15945</span>
<span id="L15946" rel="#L15946">15946</span>
<span id="L15947" rel="#L15947">15947</span>
<span id="L15948" rel="#L15948">15948</span>
<span id="L15949" rel="#L15949">15949</span>
<span id="L15950" rel="#L15950">15950</span>
<span id="L15951" rel="#L15951">15951</span>
<span id="L15952" rel="#L15952">15952</span>
<span id="L15953" rel="#L15953">15953</span>
<span id="L15954" rel="#L15954">15954</span>
<span id="L15955" rel="#L15955">15955</span>
<span id="L15956" rel="#L15956">15956</span>
<span id="L15957" rel="#L15957">15957</span>
<span id="L15958" rel="#L15958">15958</span>
<span id="L15959" rel="#L15959">15959</span>
<span id="L15960" rel="#L15960">15960</span>
<span id="L15961" rel="#L15961">15961</span>
<span id="L15962" rel="#L15962">15962</span>
<span id="L15963" rel="#L15963">15963</span>
<span id="L15964" rel="#L15964">15964</span>
<span id="L15965" rel="#L15965">15965</span>
<span id="L15966" rel="#L15966">15966</span>
<span id="L15967" rel="#L15967">15967</span>
<span id="L15968" rel="#L15968">15968</span>
<span id="L15969" rel="#L15969">15969</span>
<span id="L15970" rel="#L15970">15970</span>
<span id="L15971" rel="#L15971">15971</span>
<span id="L15972" rel="#L15972">15972</span>
<span id="L15973" rel="#L15973">15973</span>
<span id="L15974" rel="#L15974">15974</span>
<span id="L15975" rel="#L15975">15975</span>
<span id="L15976" rel="#L15976">15976</span>
<span id="L15977" rel="#L15977">15977</span>
<span id="L15978" rel="#L15978">15978</span>
<span id="L15979" rel="#L15979">15979</span>
<span id="L15980" rel="#L15980">15980</span>
<span id="L15981" rel="#L15981">15981</span>
<span id="L15982" rel="#L15982">15982</span>
<span id="L15983" rel="#L15983">15983</span>
<span id="L15984" rel="#L15984">15984</span>
<span id="L15985" rel="#L15985">15985</span>
<span id="L15986" rel="#L15986">15986</span>
<span id="L15987" rel="#L15987">15987</span>
<span id="L15988" rel="#L15988">15988</span>
<span id="L15989" rel="#L15989">15989</span>
<span id="L15990" rel="#L15990">15990</span>
<span id="L15991" rel="#L15991">15991</span>
<span id="L15992" rel="#L15992">15992</span>
<span id="L15993" rel="#L15993">15993</span>
<span id="L15994" rel="#L15994">15994</span>
<span id="L15995" rel="#L15995">15995</span>
<span id="L15996" rel="#L15996">15996</span>
<span id="L15997" rel="#L15997">15997</span>
<span id="L15998" rel="#L15998">15998</span>
<span id="L15999" rel="#L15999">15999</span>
<span id="L16000" rel="#L16000">16000</span>
<span id="L16001" rel="#L16001">16001</span>
<span id="L16002" rel="#L16002">16002</span>
<span id="L16003" rel="#L16003">16003</span>
<span id="L16004" rel="#L16004">16004</span>
<span id="L16005" rel="#L16005">16005</span>
<span id="L16006" rel="#L16006">16006</span>
<span id="L16007" rel="#L16007">16007</span>
<span id="L16008" rel="#L16008">16008</span>
<span id="L16009" rel="#L16009">16009</span>
<span id="L16010" rel="#L16010">16010</span>
<span id="L16011" rel="#L16011">16011</span>
<span id="L16012" rel="#L16012">16012</span>
<span id="L16013" rel="#L16013">16013</span>
<span id="L16014" rel="#L16014">16014</span>
<span id="L16015" rel="#L16015">16015</span>
<span id="L16016" rel="#L16016">16016</span>
<span id="L16017" rel="#L16017">16017</span>
<span id="L16018" rel="#L16018">16018</span>
<span id="L16019" rel="#L16019">16019</span>
<span id="L16020" rel="#L16020">16020</span>
<span id="L16021" rel="#L16021">16021</span>
<span id="L16022" rel="#L16022">16022</span>
<span id="L16023" rel="#L16023">16023</span>
<span id="L16024" rel="#L16024">16024</span>
<span id="L16025" rel="#L16025">16025</span>
<span id="L16026" rel="#L16026">16026</span>
<span id="L16027" rel="#L16027">16027</span>
<span id="L16028" rel="#L16028">16028</span>
<span id="L16029" rel="#L16029">16029</span>
<span id="L16030" rel="#L16030">16030</span>
<span id="L16031" rel="#L16031">16031</span>
<span id="L16032" rel="#L16032">16032</span>
<span id="L16033" rel="#L16033">16033</span>
<span id="L16034" rel="#L16034">16034</span>
<span id="L16035" rel="#L16035">16035</span>
<span id="L16036" rel="#L16036">16036</span>
<span id="L16037" rel="#L16037">16037</span>
<span id="L16038" rel="#L16038">16038</span>
<span id="L16039" rel="#L16039">16039</span>
<span id="L16040" rel="#L16040">16040</span>
<span id="L16041" rel="#L16041">16041</span>
<span id="L16042" rel="#L16042">16042</span>
<span id="L16043" rel="#L16043">16043</span>
<span id="L16044" rel="#L16044">16044</span>
<span id="L16045" rel="#L16045">16045</span>
<span id="L16046" rel="#L16046">16046</span>
<span id="L16047" rel="#L16047">16047</span>
<span id="L16048" rel="#L16048">16048</span>
<span id="L16049" rel="#L16049">16049</span>
<span id="L16050" rel="#L16050">16050</span>
<span id="L16051" rel="#L16051">16051</span>
<span id="L16052" rel="#L16052">16052</span>
<span id="L16053" rel="#L16053">16053</span>
<span id="L16054" rel="#L16054">16054</span>
<span id="L16055" rel="#L16055">16055</span>
<span id="L16056" rel="#L16056">16056</span>
<span id="L16057" rel="#L16057">16057</span>
<span id="L16058" rel="#L16058">16058</span>
<span id="L16059" rel="#L16059">16059</span>
<span id="L16060" rel="#L16060">16060</span>
<span id="L16061" rel="#L16061">16061</span>
<span id="L16062" rel="#L16062">16062</span>
<span id="L16063" rel="#L16063">16063</span>
<span id="L16064" rel="#L16064">16064</span>
<span id="L16065" rel="#L16065">16065</span>
<span id="L16066" rel="#L16066">16066</span>
<span id="L16067" rel="#L16067">16067</span>
<span id="L16068" rel="#L16068">16068</span>
<span id="L16069" rel="#L16069">16069</span>
<span id="L16070" rel="#L16070">16070</span>
<span id="L16071" rel="#L16071">16071</span>
<span id="L16072" rel="#L16072">16072</span>
<span id="L16073" rel="#L16073">16073</span>
<span id="L16074" rel="#L16074">16074</span>
<span id="L16075" rel="#L16075">16075</span>
<span id="L16076" rel="#L16076">16076</span>
<span id="L16077" rel="#L16077">16077</span>
<span id="L16078" rel="#L16078">16078</span>
<span id="L16079" rel="#L16079">16079</span>
<span id="L16080" rel="#L16080">16080</span>
<span id="L16081" rel="#L16081">16081</span>
<span id="L16082" rel="#L16082">16082</span>
<span id="L16083" rel="#L16083">16083</span>
<span id="L16084" rel="#L16084">16084</span>
<span id="L16085" rel="#L16085">16085</span>
<span id="L16086" rel="#L16086">16086</span>
<span id="L16087" rel="#L16087">16087</span>
<span id="L16088" rel="#L16088">16088</span>
<span id="L16089" rel="#L16089">16089</span>
<span id="L16090" rel="#L16090">16090</span>
<span id="L16091" rel="#L16091">16091</span>
<span id="L16092" rel="#L16092">16092</span>
<span id="L16093" rel="#L16093">16093</span>
<span id="L16094" rel="#L16094">16094</span>
<span id="L16095" rel="#L16095">16095</span>
<span id="L16096" rel="#L16096">16096</span>
<span id="L16097" rel="#L16097">16097</span>
<span id="L16098" rel="#L16098">16098</span>
<span id="L16099" rel="#L16099">16099</span>
<span id="L16100" rel="#L16100">16100</span>
<span id="L16101" rel="#L16101">16101</span>
<span id="L16102" rel="#L16102">16102</span>
<span id="L16103" rel="#L16103">16103</span>
<span id="L16104" rel="#L16104">16104</span>
<span id="L16105" rel="#L16105">16105</span>
<span id="L16106" rel="#L16106">16106</span>
<span id="L16107" rel="#L16107">16107</span>
<span id="L16108" rel="#L16108">16108</span>
<span id="L16109" rel="#L16109">16109</span>
<span id="L16110" rel="#L16110">16110</span>
<span id="L16111" rel="#L16111">16111</span>
<span id="L16112" rel="#L16112">16112</span>
<span id="L16113" rel="#L16113">16113</span>
<span id="L16114" rel="#L16114">16114</span>
<span id="L16115" rel="#L16115">16115</span>
<span id="L16116" rel="#L16116">16116</span>
<span id="L16117" rel="#L16117">16117</span>
<span id="L16118" rel="#L16118">16118</span>
<span id="L16119" rel="#L16119">16119</span>
<span id="L16120" rel="#L16120">16120</span>
<span id="L16121" rel="#L16121">16121</span>
<span id="L16122" rel="#L16122">16122</span>
<span id="L16123" rel="#L16123">16123</span>
<span id="L16124" rel="#L16124">16124</span>
<span id="L16125" rel="#L16125">16125</span>
<span id="L16126" rel="#L16126">16126</span>
<span id="L16127" rel="#L16127">16127</span>
<span id="L16128" rel="#L16128">16128</span>
<span id="L16129" rel="#L16129">16129</span>
<span id="L16130" rel="#L16130">16130</span>
<span id="L16131" rel="#L16131">16131</span>
<span id="L16132" rel="#L16132">16132</span>
<span id="L16133" rel="#L16133">16133</span>
<span id="L16134" rel="#L16134">16134</span>
<span id="L16135" rel="#L16135">16135</span>
<span id="L16136" rel="#L16136">16136</span>
<span id="L16137" rel="#L16137">16137</span>
<span id="L16138" rel="#L16138">16138</span>
<span id="L16139" rel="#L16139">16139</span>
<span id="L16140" rel="#L16140">16140</span>
<span id="L16141" rel="#L16141">16141</span>
<span id="L16142" rel="#L16142">16142</span>
<span id="L16143" rel="#L16143">16143</span>
<span id="L16144" rel="#L16144">16144</span>
<span id="L16145" rel="#L16145">16145</span>
<span id="L16146" rel="#L16146">16146</span>
<span id="L16147" rel="#L16147">16147</span>
<span id="L16148" rel="#L16148">16148</span>
<span id="L16149" rel="#L16149">16149</span>
<span id="L16150" rel="#L16150">16150</span>
<span id="L16151" rel="#L16151">16151</span>
<span id="L16152" rel="#L16152">16152</span>
<span id="L16153" rel="#L16153">16153</span>
<span id="L16154" rel="#L16154">16154</span>
<span id="L16155" rel="#L16155">16155</span>
<span id="L16156" rel="#L16156">16156</span>
<span id="L16157" rel="#L16157">16157</span>
<span id="L16158" rel="#L16158">16158</span>
<span id="L16159" rel="#L16159">16159</span>
<span id="L16160" rel="#L16160">16160</span>
<span id="L16161" rel="#L16161">16161</span>
<span id="L16162" rel="#L16162">16162</span>
<span id="L16163" rel="#L16163">16163</span>
<span id="L16164" rel="#L16164">16164</span>
<span id="L16165" rel="#L16165">16165</span>
<span id="L16166" rel="#L16166">16166</span>
<span id="L16167" rel="#L16167">16167</span>
<span id="L16168" rel="#L16168">16168</span>
<span id="L16169" rel="#L16169">16169</span>
<span id="L16170" rel="#L16170">16170</span>
<span id="L16171" rel="#L16171">16171</span>
<span id="L16172" rel="#L16172">16172</span>
<span id="L16173" rel="#L16173">16173</span>
<span id="L16174" rel="#L16174">16174</span>
<span id="L16175" rel="#L16175">16175</span>
<span id="L16176" rel="#L16176">16176</span>
<span id="L16177" rel="#L16177">16177</span>
<span id="L16178" rel="#L16178">16178</span>
<span id="L16179" rel="#L16179">16179</span>
<span id="L16180" rel="#L16180">16180</span>
<span id="L16181" rel="#L16181">16181</span>
<span id="L16182" rel="#L16182">16182</span>
<span id="L16183" rel="#L16183">16183</span>
<span id="L16184" rel="#L16184">16184</span>
<span id="L16185" rel="#L16185">16185</span>
<span id="L16186" rel="#L16186">16186</span>
<span id="L16187" rel="#L16187">16187</span>
<span id="L16188" rel="#L16188">16188</span>
<span id="L16189" rel="#L16189">16189</span>
<span id="L16190" rel="#L16190">16190</span>
<span id="L16191" rel="#L16191">16191</span>
<span id="L16192" rel="#L16192">16192</span>
<span id="L16193" rel="#L16193">16193</span>
<span id="L16194" rel="#L16194">16194</span>
<span id="L16195" rel="#L16195">16195</span>
<span id="L16196" rel="#L16196">16196</span>
<span id="L16197" rel="#L16197">16197</span>
<span id="L16198" rel="#L16198">16198</span>
<span id="L16199" rel="#L16199">16199</span>
<span id="L16200" rel="#L16200">16200</span>
<span id="L16201" rel="#L16201">16201</span>
<span id="L16202" rel="#L16202">16202</span>
<span id="L16203" rel="#L16203">16203</span>
<span id="L16204" rel="#L16204">16204</span>
<span id="L16205" rel="#L16205">16205</span>
<span id="L16206" rel="#L16206">16206</span>
<span id="L16207" rel="#L16207">16207</span>
<span id="L16208" rel="#L16208">16208</span>
<span id="L16209" rel="#L16209">16209</span>
<span id="L16210" rel="#L16210">16210</span>
<span id="L16211" rel="#L16211">16211</span>
<span id="L16212" rel="#L16212">16212</span>
<span id="L16213" rel="#L16213">16213</span>
<span id="L16214" rel="#L16214">16214</span>
<span id="L16215" rel="#L16215">16215</span>
<span id="L16216" rel="#L16216">16216</span>
<span id="L16217" rel="#L16217">16217</span>
<span id="L16218" rel="#L16218">16218</span>
<span id="L16219" rel="#L16219">16219</span>
<span id="L16220" rel="#L16220">16220</span>
<span id="L16221" rel="#L16221">16221</span>
<span id="L16222" rel="#L16222">16222</span>
<span id="L16223" rel="#L16223">16223</span>
<span id="L16224" rel="#L16224">16224</span>
<span id="L16225" rel="#L16225">16225</span>
<span id="L16226" rel="#L16226">16226</span>
<span id="L16227" rel="#L16227">16227</span>
<span id="L16228" rel="#L16228">16228</span>
<span id="L16229" rel="#L16229">16229</span>
<span id="L16230" rel="#L16230">16230</span>
<span id="L16231" rel="#L16231">16231</span>
<span id="L16232" rel="#L16232">16232</span>
<span id="L16233" rel="#L16233">16233</span>
<span id="L16234" rel="#L16234">16234</span>
<span id="L16235" rel="#L16235">16235</span>
<span id="L16236" rel="#L16236">16236</span>
<span id="L16237" rel="#L16237">16237</span>
<span id="L16238" rel="#L16238">16238</span>
<span id="L16239" rel="#L16239">16239</span>
<span id="L16240" rel="#L16240">16240</span>
<span id="L16241" rel="#L16241">16241</span>
<span id="L16242" rel="#L16242">16242</span>
<span id="L16243" rel="#L16243">16243</span>
<span id="L16244" rel="#L16244">16244</span>
<span id="L16245" rel="#L16245">16245</span>
<span id="L16246" rel="#L16246">16246</span>
<span id="L16247" rel="#L16247">16247</span>
<span id="L16248" rel="#L16248">16248</span>
<span id="L16249" rel="#L16249">16249</span>
<span id="L16250" rel="#L16250">16250</span>
<span id="L16251" rel="#L16251">16251</span>
<span id="L16252" rel="#L16252">16252</span>
<span id="L16253" rel="#L16253">16253</span>
<span id="L16254" rel="#L16254">16254</span>
<span id="L16255" rel="#L16255">16255</span>
<span id="L16256" rel="#L16256">16256</span>
<span id="L16257" rel="#L16257">16257</span>
<span id="L16258" rel="#L16258">16258</span>
<span id="L16259" rel="#L16259">16259</span>
<span id="L16260" rel="#L16260">16260</span>
<span id="L16261" rel="#L16261">16261</span>
<span id="L16262" rel="#L16262">16262</span>
<span id="L16263" rel="#L16263">16263</span>
<span id="L16264" rel="#L16264">16264</span>
<span id="L16265" rel="#L16265">16265</span>
<span id="L16266" rel="#L16266">16266</span>
<span id="L16267" rel="#L16267">16267</span>
<span id="L16268" rel="#L16268">16268</span>
<span id="L16269" rel="#L16269">16269</span>
<span id="L16270" rel="#L16270">16270</span>
<span id="L16271" rel="#L16271">16271</span>
<span id="L16272" rel="#L16272">16272</span>
<span id="L16273" rel="#L16273">16273</span>
<span id="L16274" rel="#L16274">16274</span>
<span id="L16275" rel="#L16275">16275</span>
<span id="L16276" rel="#L16276">16276</span>
<span id="L16277" rel="#L16277">16277</span>
<span id="L16278" rel="#L16278">16278</span>
<span id="L16279" rel="#L16279">16279</span>
<span id="L16280" rel="#L16280">16280</span>
<span id="L16281" rel="#L16281">16281</span>
<span id="L16282" rel="#L16282">16282</span>
<span id="L16283" rel="#L16283">16283</span>
<span id="L16284" rel="#L16284">16284</span>
<span id="L16285" rel="#L16285">16285</span>
<span id="L16286" rel="#L16286">16286</span>
<span id="L16287" rel="#L16287">16287</span>
<span id="L16288" rel="#L16288">16288</span>
<span id="L16289" rel="#L16289">16289</span>
<span id="L16290" rel="#L16290">16290</span>
<span id="L16291" rel="#L16291">16291</span>
<span id="L16292" rel="#L16292">16292</span>
<span id="L16293" rel="#L16293">16293</span>
<span id="L16294" rel="#L16294">16294</span>
<span id="L16295" rel="#L16295">16295</span>
<span id="L16296" rel="#L16296">16296</span>
<span id="L16297" rel="#L16297">16297</span>
<span id="L16298" rel="#L16298">16298</span>
<span id="L16299" rel="#L16299">16299</span>
<span id="L16300" rel="#L16300">16300</span>
<span id="L16301" rel="#L16301">16301</span>
<span id="L16302" rel="#L16302">16302</span>
<span id="L16303" rel="#L16303">16303</span>
<span id="L16304" rel="#L16304">16304</span>
<span id="L16305" rel="#L16305">16305</span>
<span id="L16306" rel="#L16306">16306</span>
<span id="L16307" rel="#L16307">16307</span>
<span id="L16308" rel="#L16308">16308</span>
<span id="L16309" rel="#L16309">16309</span>
<span id="L16310" rel="#L16310">16310</span>
<span id="L16311" rel="#L16311">16311</span>
<span id="L16312" rel="#L16312">16312</span>
<span id="L16313" rel="#L16313">16313</span>
<span id="L16314" rel="#L16314">16314</span>
<span id="L16315" rel="#L16315">16315</span>
<span id="L16316" rel="#L16316">16316</span>
<span id="L16317" rel="#L16317">16317</span>
<span id="L16318" rel="#L16318">16318</span>
<span id="L16319" rel="#L16319">16319</span>
<span id="L16320" rel="#L16320">16320</span>
<span id="L16321" rel="#L16321">16321</span>
<span id="L16322" rel="#L16322">16322</span>
<span id="L16323" rel="#L16323">16323</span>
<span id="L16324" rel="#L16324">16324</span>
<span id="L16325" rel="#L16325">16325</span>
<span id="L16326" rel="#L16326">16326</span>
<span id="L16327" rel="#L16327">16327</span>
<span id="L16328" rel="#L16328">16328</span>
<span id="L16329" rel="#L16329">16329</span>
<span id="L16330" rel="#L16330">16330</span>
<span id="L16331" rel="#L16331">16331</span>
<span id="L16332" rel="#L16332">16332</span>
<span id="L16333" rel="#L16333">16333</span>
<span id="L16334" rel="#L16334">16334</span>
<span id="L16335" rel="#L16335">16335</span>
<span id="L16336" rel="#L16336">16336</span>
<span id="L16337" rel="#L16337">16337</span>
<span id="L16338" rel="#L16338">16338</span>
<span id="L16339" rel="#L16339">16339</span>
<span id="L16340" rel="#L16340">16340</span>
<span id="L16341" rel="#L16341">16341</span>
<span id="L16342" rel="#L16342">16342</span>
<span id="L16343" rel="#L16343">16343</span>
<span id="L16344" rel="#L16344">16344</span>
<span id="L16345" rel="#L16345">16345</span>
<span id="L16346" rel="#L16346">16346</span>
<span id="L16347" rel="#L16347">16347</span>
<span id="L16348" rel="#L16348">16348</span>
<span id="L16349" rel="#L16349">16349</span>
<span id="L16350" rel="#L16350">16350</span>
<span id="L16351" rel="#L16351">16351</span>
<span id="L16352" rel="#L16352">16352</span>
<span id="L16353" rel="#L16353">16353</span>
<span id="L16354" rel="#L16354">16354</span>
<span id="L16355" rel="#L16355">16355</span>
<span id="L16356" rel="#L16356">16356</span>
<span id="L16357" rel="#L16357">16357</span>
<span id="L16358" rel="#L16358">16358</span>
<span id="L16359" rel="#L16359">16359</span>
<span id="L16360" rel="#L16360">16360</span>
<span id="L16361" rel="#L16361">16361</span>
<span id="L16362" rel="#L16362">16362</span>
<span id="L16363" rel="#L16363">16363</span>
<span id="L16364" rel="#L16364">16364</span>
<span id="L16365" rel="#L16365">16365</span>
<span id="L16366" rel="#L16366">16366</span>
<span id="L16367" rel="#L16367">16367</span>
<span id="L16368" rel="#L16368">16368</span>
<span id="L16369" rel="#L16369">16369</span>
<span id="L16370" rel="#L16370">16370</span>
<span id="L16371" rel="#L16371">16371</span>
<span id="L16372" rel="#L16372">16372</span>
<span id="L16373" rel="#L16373">16373</span>
<span id="L16374" rel="#L16374">16374</span>
<span id="L16375" rel="#L16375">16375</span>
<span id="L16376" rel="#L16376">16376</span>
<span id="L16377" rel="#L16377">16377</span>
<span id="L16378" rel="#L16378">16378</span>
<span id="L16379" rel="#L16379">16379</span>
<span id="L16380" rel="#L16380">16380</span>
<span id="L16381" rel="#L16381">16381</span>
<span id="L16382" rel="#L16382">16382</span>
<span id="L16383" rel="#L16383">16383</span>
<span id="L16384" rel="#L16384">16384</span>
<span id="L16385" rel="#L16385">16385</span>
<span id="L16386" rel="#L16386">16386</span>
<span id="L16387" rel="#L16387">16387</span>
<span id="L16388" rel="#L16388">16388</span>
<span id="L16389" rel="#L16389">16389</span>
<span id="L16390" rel="#L16390">16390</span>
<span id="L16391" rel="#L16391">16391</span>
<span id="L16392" rel="#L16392">16392</span>
<span id="L16393" rel="#L16393">16393</span>
<span id="L16394" rel="#L16394">16394</span>
<span id="L16395" rel="#L16395">16395</span>
<span id="L16396" rel="#L16396">16396</span>
<span id="L16397" rel="#L16397">16397</span>
<span id="L16398" rel="#L16398">16398</span>
<span id="L16399" rel="#L16399">16399</span>
<span id="L16400" rel="#L16400">16400</span>
<span id="L16401" rel="#L16401">16401</span>
<span id="L16402" rel="#L16402">16402</span>
<span id="L16403" rel="#L16403">16403</span>
<span id="L16404" rel="#L16404">16404</span>
<span id="L16405" rel="#L16405">16405</span>
<span id="L16406" rel="#L16406">16406</span>
<span id="L16407" rel="#L16407">16407</span>
<span id="L16408" rel="#L16408">16408</span>
<span id="L16409" rel="#L16409">16409</span>
<span id="L16410" rel="#L16410">16410</span>
<span id="L16411" rel="#L16411">16411</span>
<span id="L16412" rel="#L16412">16412</span>
<span id="L16413" rel="#L16413">16413</span>
<span id="L16414" rel="#L16414">16414</span>
<span id="L16415" rel="#L16415">16415</span>
<span id="L16416" rel="#L16416">16416</span>
<span id="L16417" rel="#L16417">16417</span>
<span id="L16418" rel="#L16418">16418</span>
<span id="L16419" rel="#L16419">16419</span>
<span id="L16420" rel="#L16420">16420</span>
<span id="L16421" rel="#L16421">16421</span>
<span id="L16422" rel="#L16422">16422</span>
<span id="L16423" rel="#L16423">16423</span>
<span id="L16424" rel="#L16424">16424</span>
<span id="L16425" rel="#L16425">16425</span>
<span id="L16426" rel="#L16426">16426</span>
<span id="L16427" rel="#L16427">16427</span>
<span id="L16428" rel="#L16428">16428</span>
<span id="L16429" rel="#L16429">16429</span>
<span id="L16430" rel="#L16430">16430</span>
<span id="L16431" rel="#L16431">16431</span>
<span id="L16432" rel="#L16432">16432</span>
<span id="L16433" rel="#L16433">16433</span>
<span id="L16434" rel="#L16434">16434</span>
<span id="L16435" rel="#L16435">16435</span>
<span id="L16436" rel="#L16436">16436</span>
<span id="L16437" rel="#L16437">16437</span>
<span id="L16438" rel="#L16438">16438</span>
<span id="L16439" rel="#L16439">16439</span>
<span id="L16440" rel="#L16440">16440</span>
<span id="L16441" rel="#L16441">16441</span>
<span id="L16442" rel="#L16442">16442</span>
<span id="L16443" rel="#L16443">16443</span>
<span id="L16444" rel="#L16444">16444</span>
<span id="L16445" rel="#L16445">16445</span>
<span id="L16446" rel="#L16446">16446</span>
<span id="L16447" rel="#L16447">16447</span>
<span id="L16448" rel="#L16448">16448</span>
<span id="L16449" rel="#L16449">16449</span>
<span id="L16450" rel="#L16450">16450</span>
<span id="L16451" rel="#L16451">16451</span>
<span id="L16452" rel="#L16452">16452</span>
<span id="L16453" rel="#L16453">16453</span>
<span id="L16454" rel="#L16454">16454</span>
<span id="L16455" rel="#L16455">16455</span>
<span id="L16456" rel="#L16456">16456</span>
<span id="L16457" rel="#L16457">16457</span>
<span id="L16458" rel="#L16458">16458</span>
<span id="L16459" rel="#L16459">16459</span>
<span id="L16460" rel="#L16460">16460</span>
<span id="L16461" rel="#L16461">16461</span>
<span id="L16462" rel="#L16462">16462</span>
<span id="L16463" rel="#L16463">16463</span>
<span id="L16464" rel="#L16464">16464</span>
<span id="L16465" rel="#L16465">16465</span>
<span id="L16466" rel="#L16466">16466</span>
<span id="L16467" rel="#L16467">16467</span>
<span id="L16468" rel="#L16468">16468</span>
<span id="L16469" rel="#L16469">16469</span>
<span id="L16470" rel="#L16470">16470</span>
<span id="L16471" rel="#L16471">16471</span>
<span id="L16472" rel="#L16472">16472</span>
<span id="L16473" rel="#L16473">16473</span>
<span id="L16474" rel="#L16474">16474</span>
<span id="L16475" rel="#L16475">16475</span>
<span id="L16476" rel="#L16476">16476</span>
<span id="L16477" rel="#L16477">16477</span>
<span id="L16478" rel="#L16478">16478</span>
<span id="L16479" rel="#L16479">16479</span>
<span id="L16480" rel="#L16480">16480</span>
<span id="L16481" rel="#L16481">16481</span>
<span id="L16482" rel="#L16482">16482</span>
<span id="L16483" rel="#L16483">16483</span>
<span id="L16484" rel="#L16484">16484</span>
<span id="L16485" rel="#L16485">16485</span>
<span id="L16486" rel="#L16486">16486</span>
<span id="L16487" rel="#L16487">16487</span>
<span id="L16488" rel="#L16488">16488</span>
<span id="L16489" rel="#L16489">16489</span>
<span id="L16490" rel="#L16490">16490</span>
<span id="L16491" rel="#L16491">16491</span>
<span id="L16492" rel="#L16492">16492</span>
<span id="L16493" rel="#L16493">16493</span>
<span id="L16494" rel="#L16494">16494</span>
<span id="L16495" rel="#L16495">16495</span>
<span id="L16496" rel="#L16496">16496</span>
<span id="L16497" rel="#L16497">16497</span>
<span id="L16498" rel="#L16498">16498</span>
<span id="L16499" rel="#L16499">16499</span>
<span id="L16500" rel="#L16500">16500</span>
<span id="L16501" rel="#L16501">16501</span>
<span id="L16502" rel="#L16502">16502</span>
<span id="L16503" rel="#L16503">16503</span>
<span id="L16504" rel="#L16504">16504</span>
<span id="L16505" rel="#L16505">16505</span>
<span id="L16506" rel="#L16506">16506</span>
<span id="L16507" rel="#L16507">16507</span>
<span id="L16508" rel="#L16508">16508</span>
<span id="L16509" rel="#L16509">16509</span>
<span id="L16510" rel="#L16510">16510</span>
<span id="L16511" rel="#L16511">16511</span>
<span id="L16512" rel="#L16512">16512</span>
<span id="L16513" rel="#L16513">16513</span>
<span id="L16514" rel="#L16514">16514</span>
<span id="L16515" rel="#L16515">16515</span>
<span id="L16516" rel="#L16516">16516</span>
<span id="L16517" rel="#L16517">16517</span>
<span id="L16518" rel="#L16518">16518</span>
<span id="L16519" rel="#L16519">16519</span>
<span id="L16520" rel="#L16520">16520</span>
<span id="L16521" rel="#L16521">16521</span>
<span id="L16522" rel="#L16522">16522</span>
<span id="L16523" rel="#L16523">16523</span>
<span id="L16524" rel="#L16524">16524</span>
<span id="L16525" rel="#L16525">16525</span>
<span id="L16526" rel="#L16526">16526</span>
<span id="L16527" rel="#L16527">16527</span>
<span id="L16528" rel="#L16528">16528</span>
<span id="L16529" rel="#L16529">16529</span>
<span id="L16530" rel="#L16530">16530</span>
<span id="L16531" rel="#L16531">16531</span>
<span id="L16532" rel="#L16532">16532</span>
<span id="L16533" rel="#L16533">16533</span>
<span id="L16534" rel="#L16534">16534</span>
<span id="L16535" rel="#L16535">16535</span>
<span id="L16536" rel="#L16536">16536</span>
<span id="L16537" rel="#L16537">16537</span>
<span id="L16538" rel="#L16538">16538</span>
<span id="L16539" rel="#L16539">16539</span>
<span id="L16540" rel="#L16540">16540</span>
<span id="L16541" rel="#L16541">16541</span>
<span id="L16542" rel="#L16542">16542</span>
<span id="L16543" rel="#L16543">16543</span>
<span id="L16544" rel="#L16544">16544</span>
<span id="L16545" rel="#L16545">16545</span>
<span id="L16546" rel="#L16546">16546</span>
<span id="L16547" rel="#L16547">16547</span>
<span id="L16548" rel="#L16548">16548</span>
<span id="L16549" rel="#L16549">16549</span>
<span id="L16550" rel="#L16550">16550</span>
<span id="L16551" rel="#L16551">16551</span>
<span id="L16552" rel="#L16552">16552</span>
<span id="L16553" rel="#L16553">16553</span>
<span id="L16554" rel="#L16554">16554</span>
<span id="L16555" rel="#L16555">16555</span>
<span id="L16556" rel="#L16556">16556</span>
<span id="L16557" rel="#L16557">16557</span>
<span id="L16558" rel="#L16558">16558</span>
<span id="L16559" rel="#L16559">16559</span>
<span id="L16560" rel="#L16560">16560</span>
<span id="L16561" rel="#L16561">16561</span>
<span id="L16562" rel="#L16562">16562</span>
<span id="L16563" rel="#L16563">16563</span>
<span id="L16564" rel="#L16564">16564</span>
<span id="L16565" rel="#L16565">16565</span>
<span id="L16566" rel="#L16566">16566</span>
<span id="L16567" rel="#L16567">16567</span>
<span id="L16568" rel="#L16568">16568</span>
<span id="L16569" rel="#L16569">16569</span>
<span id="L16570" rel="#L16570">16570</span>
<span id="L16571" rel="#L16571">16571</span>
<span id="L16572" rel="#L16572">16572</span>
<span id="L16573" rel="#L16573">16573</span>
<span id="L16574" rel="#L16574">16574</span>
<span id="L16575" rel="#L16575">16575</span>
<span id="L16576" rel="#L16576">16576</span>
<span id="L16577" rel="#L16577">16577</span>
<span id="L16578" rel="#L16578">16578</span>
<span id="L16579" rel="#L16579">16579</span>
<span id="L16580" rel="#L16580">16580</span>
<span id="L16581" rel="#L16581">16581</span>
<span id="L16582" rel="#L16582">16582</span>
<span id="L16583" rel="#L16583">16583</span>
<span id="L16584" rel="#L16584">16584</span>
<span id="L16585" rel="#L16585">16585</span>
<span id="L16586" rel="#L16586">16586</span>
<span id="L16587" rel="#L16587">16587</span>
<span id="L16588" rel="#L16588">16588</span>
<span id="L16589" rel="#L16589">16589</span>
<span id="L16590" rel="#L16590">16590</span>
<span id="L16591" rel="#L16591">16591</span>
<span id="L16592" rel="#L16592">16592</span>
<span id="L16593" rel="#L16593">16593</span>
<span id="L16594" rel="#L16594">16594</span>
<span id="L16595" rel="#L16595">16595</span>
<span id="L16596" rel="#L16596">16596</span>
<span id="L16597" rel="#L16597">16597</span>
<span id="L16598" rel="#L16598">16598</span>
<span id="L16599" rel="#L16599">16599</span>
<span id="L16600" rel="#L16600">16600</span>
<span id="L16601" rel="#L16601">16601</span>
<span id="L16602" rel="#L16602">16602</span>
<span id="L16603" rel="#L16603">16603</span>
<span id="L16604" rel="#L16604">16604</span>
<span id="L16605" rel="#L16605">16605</span>
<span id="L16606" rel="#L16606">16606</span>
<span id="L16607" rel="#L16607">16607</span>
<span id="L16608" rel="#L16608">16608</span>
<span id="L16609" rel="#L16609">16609</span>
<span id="L16610" rel="#L16610">16610</span>
<span id="L16611" rel="#L16611">16611</span>
<span id="L16612" rel="#L16612">16612</span>
<span id="L16613" rel="#L16613">16613</span>
<span id="L16614" rel="#L16614">16614</span>
<span id="L16615" rel="#L16615">16615</span>
<span id="L16616" rel="#L16616">16616</span>
<span id="L16617" rel="#L16617">16617</span>
<span id="L16618" rel="#L16618">16618</span>
<span id="L16619" rel="#L16619">16619</span>
<span id="L16620" rel="#L16620">16620</span>
<span id="L16621" rel="#L16621">16621</span>
<span id="L16622" rel="#L16622">16622</span>
<span id="L16623" rel="#L16623">16623</span>
<span id="L16624" rel="#L16624">16624</span>
<span id="L16625" rel="#L16625">16625</span>
<span id="L16626" rel="#L16626">16626</span>
<span id="L16627" rel="#L16627">16627</span>
<span id="L16628" rel="#L16628">16628</span>
<span id="L16629" rel="#L16629">16629</span>
<span id="L16630" rel="#L16630">16630</span>
<span id="L16631" rel="#L16631">16631</span>
<span id="L16632" rel="#L16632">16632</span>
<span id="L16633" rel="#L16633">16633</span>
<span id="L16634" rel="#L16634">16634</span>
<span id="L16635" rel="#L16635">16635</span>
<span id="L16636" rel="#L16636">16636</span>
<span id="L16637" rel="#L16637">16637</span>
<span id="L16638" rel="#L16638">16638</span>
<span id="L16639" rel="#L16639">16639</span>
<span id="L16640" rel="#L16640">16640</span>
<span id="L16641" rel="#L16641">16641</span>
<span id="L16642" rel="#L16642">16642</span>
<span id="L16643" rel="#L16643">16643</span>
<span id="L16644" rel="#L16644">16644</span>
<span id="L16645" rel="#L16645">16645</span>
<span id="L16646" rel="#L16646">16646</span>
<span id="L16647" rel="#L16647">16647</span>
<span id="L16648" rel="#L16648">16648</span>
<span id="L16649" rel="#L16649">16649</span>
<span id="L16650" rel="#L16650">16650</span>
<span id="L16651" rel="#L16651">16651</span>
<span id="L16652" rel="#L16652">16652</span>
<span id="L16653" rel="#L16653">16653</span>
<span id="L16654" rel="#L16654">16654</span>
<span id="L16655" rel="#L16655">16655</span>
<span id="L16656" rel="#L16656">16656</span>
<span id="L16657" rel="#L16657">16657</span>
<span id="L16658" rel="#L16658">16658</span>
<span id="L16659" rel="#L16659">16659</span>
<span id="L16660" rel="#L16660">16660</span>
<span id="L16661" rel="#L16661">16661</span>
<span id="L16662" rel="#L16662">16662</span>
<span id="L16663" rel="#L16663">16663</span>
<span id="L16664" rel="#L16664">16664</span>
<span id="L16665" rel="#L16665">16665</span>
<span id="L16666" rel="#L16666">16666</span>
<span id="L16667" rel="#L16667">16667</span>
<span id="L16668" rel="#L16668">16668</span>
<span id="L16669" rel="#L16669">16669</span>
<span id="L16670" rel="#L16670">16670</span>
<span id="L16671" rel="#L16671">16671</span>
<span id="L16672" rel="#L16672">16672</span>
<span id="L16673" rel="#L16673">16673</span>
<span id="L16674" rel="#L16674">16674</span>
<span id="L16675" rel="#L16675">16675</span>
<span id="L16676" rel="#L16676">16676</span>
<span id="L16677" rel="#L16677">16677</span>
<span id="L16678" rel="#L16678">16678</span>
<span id="L16679" rel="#L16679">16679</span>
<span id="L16680" rel="#L16680">16680</span>
<span id="L16681" rel="#L16681">16681</span>
<span id="L16682" rel="#L16682">16682</span>
<span id="L16683" rel="#L16683">16683</span>
<span id="L16684" rel="#L16684">16684</span>
<span id="L16685" rel="#L16685">16685</span>
<span id="L16686" rel="#L16686">16686</span>
<span id="L16687" rel="#L16687">16687</span>
<span id="L16688" rel="#L16688">16688</span>
<span id="L16689" rel="#L16689">16689</span>
<span id="L16690" rel="#L16690">16690</span>
<span id="L16691" rel="#L16691">16691</span>
<span id="L16692" rel="#L16692">16692</span>
<span id="L16693" rel="#L16693">16693</span>
<span id="L16694" rel="#L16694">16694</span>
<span id="L16695" rel="#L16695">16695</span>
<span id="L16696" rel="#L16696">16696</span>
<span id="L16697" rel="#L16697">16697</span>
<span id="L16698" rel="#L16698">16698</span>
<span id="L16699" rel="#L16699">16699</span>
<span id="L16700" rel="#L16700">16700</span>
<span id="L16701" rel="#L16701">16701</span>
<span id="L16702" rel="#L16702">16702</span>
<span id="L16703" rel="#L16703">16703</span>
<span id="L16704" rel="#L16704">16704</span>
<span id="L16705" rel="#L16705">16705</span>
<span id="L16706" rel="#L16706">16706</span>
<span id="L16707" rel="#L16707">16707</span>
<span id="L16708" rel="#L16708">16708</span>
<span id="L16709" rel="#L16709">16709</span>
<span id="L16710" rel="#L16710">16710</span>
<span id="L16711" rel="#L16711">16711</span>
<span id="L16712" rel="#L16712">16712</span>
<span id="L16713" rel="#L16713">16713</span>
<span id="L16714" rel="#L16714">16714</span>
<span id="L16715" rel="#L16715">16715</span>
<span id="L16716" rel="#L16716">16716</span>
<span id="L16717" rel="#L16717">16717</span>
<span id="L16718" rel="#L16718">16718</span>
<span id="L16719" rel="#L16719">16719</span>
<span id="L16720" rel="#L16720">16720</span>
<span id="L16721" rel="#L16721">16721</span>
<span id="L16722" rel="#L16722">16722</span>
<span id="L16723" rel="#L16723">16723</span>
<span id="L16724" rel="#L16724">16724</span>
<span id="L16725" rel="#L16725">16725</span>
<span id="L16726" rel="#L16726">16726</span>
<span id="L16727" rel="#L16727">16727</span>
<span id="L16728" rel="#L16728">16728</span>
<span id="L16729" rel="#L16729">16729</span>
<span id="L16730" rel="#L16730">16730</span>
<span id="L16731" rel="#L16731">16731</span>
<span id="L16732" rel="#L16732">16732</span>
<span id="L16733" rel="#L16733">16733</span>
<span id="L16734" rel="#L16734">16734</span>
<span id="L16735" rel="#L16735">16735</span>
<span id="L16736" rel="#L16736">16736</span>
<span id="L16737" rel="#L16737">16737</span>
<span id="L16738" rel="#L16738">16738</span>
<span id="L16739" rel="#L16739">16739</span>
<span id="L16740" rel="#L16740">16740</span>
<span id="L16741" rel="#L16741">16741</span>
<span id="L16742" rel="#L16742">16742</span>
<span id="L16743" rel="#L16743">16743</span>
<span id="L16744" rel="#L16744">16744</span>
<span id="L16745" rel="#L16745">16745</span>
<span id="L16746" rel="#L16746">16746</span>
<span id="L16747" rel="#L16747">16747</span>
<span id="L16748" rel="#L16748">16748</span>
<span id="L16749" rel="#L16749">16749</span>
<span id="L16750" rel="#L16750">16750</span>
<span id="L16751" rel="#L16751">16751</span>
<span id="L16752" rel="#L16752">16752</span>
<span id="L16753" rel="#L16753">16753</span>
<span id="L16754" rel="#L16754">16754</span>
<span id="L16755" rel="#L16755">16755</span>
<span id="L16756" rel="#L16756">16756</span>
<span id="L16757" rel="#L16757">16757</span>
<span id="L16758" rel="#L16758">16758</span>
<span id="L16759" rel="#L16759">16759</span>
<span id="L16760" rel="#L16760">16760</span>
<span id="L16761" rel="#L16761">16761</span>
<span id="L16762" rel="#L16762">16762</span>
<span id="L16763" rel="#L16763">16763</span>
<span id="L16764" rel="#L16764">16764</span>
<span id="L16765" rel="#L16765">16765</span>
<span id="L16766" rel="#L16766">16766</span>
<span id="L16767" rel="#L16767">16767</span>
<span id="L16768" rel="#L16768">16768</span>
<span id="L16769" rel="#L16769">16769</span>
<span id="L16770" rel="#L16770">16770</span>
<span id="L16771" rel="#L16771">16771</span>
<span id="L16772" rel="#L16772">16772</span>
<span id="L16773" rel="#L16773">16773</span>
<span id="L16774" rel="#L16774">16774</span>
<span id="L16775" rel="#L16775">16775</span>
<span id="L16776" rel="#L16776">16776</span>
<span id="L16777" rel="#L16777">16777</span>
<span id="L16778" rel="#L16778">16778</span>
<span id="L16779" rel="#L16779">16779</span>
<span id="L16780" rel="#L16780">16780</span>
<span id="L16781" rel="#L16781">16781</span>
<span id="L16782" rel="#L16782">16782</span>
<span id="L16783" rel="#L16783">16783</span>
<span id="L16784" rel="#L16784">16784</span>
<span id="L16785" rel="#L16785">16785</span>
<span id="L16786" rel="#L16786">16786</span>
<span id="L16787" rel="#L16787">16787</span>
<span id="L16788" rel="#L16788">16788</span>
<span id="L16789" rel="#L16789">16789</span>
<span id="L16790" rel="#L16790">16790</span>
<span id="L16791" rel="#L16791">16791</span>
<span id="L16792" rel="#L16792">16792</span>
<span id="L16793" rel="#L16793">16793</span>
<span id="L16794" rel="#L16794">16794</span>
<span id="L16795" rel="#L16795">16795</span>
<span id="L16796" rel="#L16796">16796</span>
<span id="L16797" rel="#L16797">16797</span>
<span id="L16798" rel="#L16798">16798</span>
<span id="L16799" rel="#L16799">16799</span>
<span id="L16800" rel="#L16800">16800</span>
<span id="L16801" rel="#L16801">16801</span>
<span id="L16802" rel="#L16802">16802</span>
<span id="L16803" rel="#L16803">16803</span>
<span id="L16804" rel="#L16804">16804</span>
<span id="L16805" rel="#L16805">16805</span>
<span id="L16806" rel="#L16806">16806</span>
<span id="L16807" rel="#L16807">16807</span>
<span id="L16808" rel="#L16808">16808</span>
<span id="L16809" rel="#L16809">16809</span>
<span id="L16810" rel="#L16810">16810</span>
<span id="L16811" rel="#L16811">16811</span>
<span id="L16812" rel="#L16812">16812</span>
<span id="L16813" rel="#L16813">16813</span>
<span id="L16814" rel="#L16814">16814</span>
<span id="L16815" rel="#L16815">16815</span>
<span id="L16816" rel="#L16816">16816</span>
<span id="L16817" rel="#L16817">16817</span>
<span id="L16818" rel="#L16818">16818</span>
<span id="L16819" rel="#L16819">16819</span>
<span id="L16820" rel="#L16820">16820</span>
<span id="L16821" rel="#L16821">16821</span>
<span id="L16822" rel="#L16822">16822</span>
<span id="L16823" rel="#L16823">16823</span>
<span id="L16824" rel="#L16824">16824</span>
<span id="L16825" rel="#L16825">16825</span>
<span id="L16826" rel="#L16826">16826</span>
<span id="L16827" rel="#L16827">16827</span>
<span id="L16828" rel="#L16828">16828</span>
<span id="L16829" rel="#L16829">16829</span>
<span id="L16830" rel="#L16830">16830</span>
<span id="L16831" rel="#L16831">16831</span>
<span id="L16832" rel="#L16832">16832</span>
<span id="L16833" rel="#L16833">16833</span>
<span id="L16834" rel="#L16834">16834</span>
<span id="L16835" rel="#L16835">16835</span>
<span id="L16836" rel="#L16836">16836</span>
<span id="L16837" rel="#L16837">16837</span>
<span id="L16838" rel="#L16838">16838</span>
<span id="L16839" rel="#L16839">16839</span>
<span id="L16840" rel="#L16840">16840</span>
<span id="L16841" rel="#L16841">16841</span>
<span id="L16842" rel="#L16842">16842</span>
<span id="L16843" rel="#L16843">16843</span>
<span id="L16844" rel="#L16844">16844</span>
<span id="L16845" rel="#L16845">16845</span>
<span id="L16846" rel="#L16846">16846</span>
<span id="L16847" rel="#L16847">16847</span>
<span id="L16848" rel="#L16848">16848</span>
<span id="L16849" rel="#L16849">16849</span>
<span id="L16850" rel="#L16850">16850</span>
<span id="L16851" rel="#L16851">16851</span>
<span id="L16852" rel="#L16852">16852</span>
<span id="L16853" rel="#L16853">16853</span>
<span id="L16854" rel="#L16854">16854</span>
<span id="L16855" rel="#L16855">16855</span>
<span id="L16856" rel="#L16856">16856</span>
<span id="L16857" rel="#L16857">16857</span>
<span id="L16858" rel="#L16858">16858</span>
<span id="L16859" rel="#L16859">16859</span>
<span id="L16860" rel="#L16860">16860</span>
<span id="L16861" rel="#L16861">16861</span>
<span id="L16862" rel="#L16862">16862</span>
<span id="L16863" rel="#L16863">16863</span>
<span id="L16864" rel="#L16864">16864</span>
<span id="L16865" rel="#L16865">16865</span>
<span id="L16866" rel="#L16866">16866</span>
<span id="L16867" rel="#L16867">16867</span>
<span id="L16868" rel="#L16868">16868</span>
<span id="L16869" rel="#L16869">16869</span>
<span id="L16870" rel="#L16870">16870</span>
<span id="L16871" rel="#L16871">16871</span>
<span id="L16872" rel="#L16872">16872</span>
<span id="L16873" rel="#L16873">16873</span>
<span id="L16874" rel="#L16874">16874</span>
<span id="L16875" rel="#L16875">16875</span>
<span id="L16876" rel="#L16876">16876</span>
<span id="L16877" rel="#L16877">16877</span>
<span id="L16878" rel="#L16878">16878</span>
<span id="L16879" rel="#L16879">16879</span>
<span id="L16880" rel="#L16880">16880</span>
<span id="L16881" rel="#L16881">16881</span>
<span id="L16882" rel="#L16882">16882</span>
<span id="L16883" rel="#L16883">16883</span>
<span id="L16884" rel="#L16884">16884</span>
<span id="L16885" rel="#L16885">16885</span>
<span id="L16886" rel="#L16886">16886</span>
<span id="L16887" rel="#L16887">16887</span>
<span id="L16888" rel="#L16888">16888</span>
<span id="L16889" rel="#L16889">16889</span>
<span id="L16890" rel="#L16890">16890</span>
<span id="L16891" rel="#L16891">16891</span>
<span id="L16892" rel="#L16892">16892</span>
<span id="L16893" rel="#L16893">16893</span>
<span id="L16894" rel="#L16894">16894</span>
<span id="L16895" rel="#L16895">16895</span>
<span id="L16896" rel="#L16896">16896</span>
<span id="L16897" rel="#L16897">16897</span>
<span id="L16898" rel="#L16898">16898</span>
<span id="L16899" rel="#L16899">16899</span>
<span id="L16900" rel="#L16900">16900</span>
<span id="L16901" rel="#L16901">16901</span>
<span id="L16902" rel="#L16902">16902</span>
<span id="L16903" rel="#L16903">16903</span>
<span id="L16904" rel="#L16904">16904</span>
<span id="L16905" rel="#L16905">16905</span>
<span id="L16906" rel="#L16906">16906</span>
<span id="L16907" rel="#L16907">16907</span>
<span id="L16908" rel="#L16908">16908</span>
<span id="L16909" rel="#L16909">16909</span>
<span id="L16910" rel="#L16910">16910</span>
<span id="L16911" rel="#L16911">16911</span>
<span id="L16912" rel="#L16912">16912</span>
<span id="L16913" rel="#L16913">16913</span>
<span id="L16914" rel="#L16914">16914</span>
<span id="L16915" rel="#L16915">16915</span>
<span id="L16916" rel="#L16916">16916</span>
<span id="L16917" rel="#L16917">16917</span>
<span id="L16918" rel="#L16918">16918</span>
<span id="L16919" rel="#L16919">16919</span>
<span id="L16920" rel="#L16920">16920</span>
<span id="L16921" rel="#L16921">16921</span>
<span id="L16922" rel="#L16922">16922</span>
<span id="L16923" rel="#L16923">16923</span>
<span id="L16924" rel="#L16924">16924</span>
<span id="L16925" rel="#L16925">16925</span>
<span id="L16926" rel="#L16926">16926</span>
<span id="L16927" rel="#L16927">16927</span>
<span id="L16928" rel="#L16928">16928</span>
<span id="L16929" rel="#L16929">16929</span>
<span id="L16930" rel="#L16930">16930</span>
<span id="L16931" rel="#L16931">16931</span>
<span id="L16932" rel="#L16932">16932</span>
<span id="L16933" rel="#L16933">16933</span>
<span id="L16934" rel="#L16934">16934</span>
<span id="L16935" rel="#L16935">16935</span>
<span id="L16936" rel="#L16936">16936</span>
<span id="L16937" rel="#L16937">16937</span>
<span id="L16938" rel="#L16938">16938</span>
<span id="L16939" rel="#L16939">16939</span>
<span id="L16940" rel="#L16940">16940</span>
<span id="L16941" rel="#L16941">16941</span>
<span id="L16942" rel="#L16942">16942</span>
<span id="L16943" rel="#L16943">16943</span>
<span id="L16944" rel="#L16944">16944</span>
<span id="L16945" rel="#L16945">16945</span>
<span id="L16946" rel="#L16946">16946</span>
<span id="L16947" rel="#L16947">16947</span>
<span id="L16948" rel="#L16948">16948</span>
<span id="L16949" rel="#L16949">16949</span>
<span id="L16950" rel="#L16950">16950</span>
<span id="L16951" rel="#L16951">16951</span>
<span id="L16952" rel="#L16952">16952</span>
<span id="L16953" rel="#L16953">16953</span>
<span id="L16954" rel="#L16954">16954</span>
<span id="L16955" rel="#L16955">16955</span>
<span id="L16956" rel="#L16956">16956</span>
<span id="L16957" rel="#L16957">16957</span>
<span id="L16958" rel="#L16958">16958</span>
<span id="L16959" rel="#L16959">16959</span>
<span id="L16960" rel="#L16960">16960</span>
<span id="L16961" rel="#L16961">16961</span>
<span id="L16962" rel="#L16962">16962</span>
<span id="L16963" rel="#L16963">16963</span>
<span id="L16964" rel="#L16964">16964</span>
<span id="L16965" rel="#L16965">16965</span>
<span id="L16966" rel="#L16966">16966</span>
<span id="L16967" rel="#L16967">16967</span>
<span id="L16968" rel="#L16968">16968</span>
<span id="L16969" rel="#L16969">16969</span>
<span id="L16970" rel="#L16970">16970</span>
<span id="L16971" rel="#L16971">16971</span>
<span id="L16972" rel="#L16972">16972</span>
<span id="L16973" rel="#L16973">16973</span>
<span id="L16974" rel="#L16974">16974</span>
<span id="L16975" rel="#L16975">16975</span>
<span id="L16976" rel="#L16976">16976</span>
<span id="L16977" rel="#L16977">16977</span>
<span id="L16978" rel="#L16978">16978</span>
<span id="L16979" rel="#L16979">16979</span>
<span id="L16980" rel="#L16980">16980</span>
<span id="L16981" rel="#L16981">16981</span>
<span id="L16982" rel="#L16982">16982</span>
<span id="L16983" rel="#L16983">16983</span>
<span id="L16984" rel="#L16984">16984</span>
<span id="L16985" rel="#L16985">16985</span>
<span id="L16986" rel="#L16986">16986</span>
<span id="L16987" rel="#L16987">16987</span>
<span id="L16988" rel="#L16988">16988</span>
<span id="L16989" rel="#L16989">16989</span>
<span id="L16990" rel="#L16990">16990</span>
<span id="L16991" rel="#L16991">16991</span>
<span id="L16992" rel="#L16992">16992</span>
<span id="L16993" rel="#L16993">16993</span>
<span id="L16994" rel="#L16994">16994</span>
<span id="L16995" rel="#L16995">16995</span>
<span id="L16996" rel="#L16996">16996</span>
<span id="L16997" rel="#L16997">16997</span>
<span id="L16998" rel="#L16998">16998</span>
<span id="L16999" rel="#L16999">16999</span>
<span id="L17000" rel="#L17000">17000</span>
<span id="L17001" rel="#L17001">17001</span>
<span id="L17002" rel="#L17002">17002</span>
<span id="L17003" rel="#L17003">17003</span>
<span id="L17004" rel="#L17004">17004</span>
<span id="L17005" rel="#L17005">17005</span>
<span id="L17006" rel="#L17006">17006</span>
<span id="L17007" rel="#L17007">17007</span>
<span id="L17008" rel="#L17008">17008</span>
<span id="L17009" rel="#L17009">17009</span>
<span id="L17010" rel="#L17010">17010</span>
<span id="L17011" rel="#L17011">17011</span>
<span id="L17012" rel="#L17012">17012</span>
<span id="L17013" rel="#L17013">17013</span>
<span id="L17014" rel="#L17014">17014</span>
<span id="L17015" rel="#L17015">17015</span>
<span id="L17016" rel="#L17016">17016</span>
<span id="L17017" rel="#L17017">17017</span>
<span id="L17018" rel="#L17018">17018</span>
<span id="L17019" rel="#L17019">17019</span>
<span id="L17020" rel="#L17020">17020</span>
<span id="L17021" rel="#L17021">17021</span>
<span id="L17022" rel="#L17022">17022</span>
<span id="L17023" rel="#L17023">17023</span>
<span id="L17024" rel="#L17024">17024</span>
<span id="L17025" rel="#L17025">17025</span>
<span id="L17026" rel="#L17026">17026</span>
<span id="L17027" rel="#L17027">17027</span>
<span id="L17028" rel="#L17028">17028</span>
<span id="L17029" rel="#L17029">17029</span>
<span id="L17030" rel="#L17030">17030</span>
<span id="L17031" rel="#L17031">17031</span>
<span id="L17032" rel="#L17032">17032</span>
<span id="L17033" rel="#L17033">17033</span>
<span id="L17034" rel="#L17034">17034</span>
<span id="L17035" rel="#L17035">17035</span>
<span id="L17036" rel="#L17036">17036</span>
<span id="L17037" rel="#L17037">17037</span>
<span id="L17038" rel="#L17038">17038</span>
<span id="L17039" rel="#L17039">17039</span>
<span id="L17040" rel="#L17040">17040</span>
<span id="L17041" rel="#L17041">17041</span>
<span id="L17042" rel="#L17042">17042</span>
<span id="L17043" rel="#L17043">17043</span>
<span id="L17044" rel="#L17044">17044</span>
<span id="L17045" rel="#L17045">17045</span>
<span id="L17046" rel="#L17046">17046</span>
<span id="L17047" rel="#L17047">17047</span>
<span id="L17048" rel="#L17048">17048</span>
<span id="L17049" rel="#L17049">17049</span>
<span id="L17050" rel="#L17050">17050</span>
<span id="L17051" rel="#L17051">17051</span>
<span id="L17052" rel="#L17052">17052</span>
<span id="L17053" rel="#L17053">17053</span>
<span id="L17054" rel="#L17054">17054</span>
<span id="L17055" rel="#L17055">17055</span>
<span id="L17056" rel="#L17056">17056</span>
<span id="L17057" rel="#L17057">17057</span>
<span id="L17058" rel="#L17058">17058</span>
<span id="L17059" rel="#L17059">17059</span>
<span id="L17060" rel="#L17060">17060</span>
<span id="L17061" rel="#L17061">17061</span>
<span id="L17062" rel="#L17062">17062</span>
<span id="L17063" rel="#L17063">17063</span>
<span id="L17064" rel="#L17064">17064</span>
<span id="L17065" rel="#L17065">17065</span>
<span id="L17066" rel="#L17066">17066</span>
<span id="L17067" rel="#L17067">17067</span>
<span id="L17068" rel="#L17068">17068</span>
<span id="L17069" rel="#L17069">17069</span>
<span id="L17070" rel="#L17070">17070</span>
<span id="L17071" rel="#L17071">17071</span>
<span id="L17072" rel="#L17072">17072</span>
<span id="L17073" rel="#L17073">17073</span>
<span id="L17074" rel="#L17074">17074</span>
<span id="L17075" rel="#L17075">17075</span>
<span id="L17076" rel="#L17076">17076</span>
<span id="L17077" rel="#L17077">17077</span>
<span id="L17078" rel="#L17078">17078</span>
<span id="L17079" rel="#L17079">17079</span>
<span id="L17080" rel="#L17080">17080</span>
<span id="L17081" rel="#L17081">17081</span>
<span id="L17082" rel="#L17082">17082</span>
<span id="L17083" rel="#L17083">17083</span>
<span id="L17084" rel="#L17084">17084</span>
<span id="L17085" rel="#L17085">17085</span>
<span id="L17086" rel="#L17086">17086</span>
<span id="L17087" rel="#L17087">17087</span>
<span id="L17088" rel="#L17088">17088</span>
<span id="L17089" rel="#L17089">17089</span>
<span id="L17090" rel="#L17090">17090</span>
<span id="L17091" rel="#L17091">17091</span>
<span id="L17092" rel="#L17092">17092</span>
<span id="L17093" rel="#L17093">17093</span>
<span id="L17094" rel="#L17094">17094</span>
<span id="L17095" rel="#L17095">17095</span>
<span id="L17096" rel="#L17096">17096</span>
<span id="L17097" rel="#L17097">17097</span>
<span id="L17098" rel="#L17098">17098</span>
<span id="L17099" rel="#L17099">17099</span>
<span id="L17100" rel="#L17100">17100</span>
<span id="L17101" rel="#L17101">17101</span>
<span id="L17102" rel="#L17102">17102</span>
<span id="L17103" rel="#L17103">17103</span>
<span id="L17104" rel="#L17104">17104</span>
<span id="L17105" rel="#L17105">17105</span>
<span id="L17106" rel="#L17106">17106</span>
<span id="L17107" rel="#L17107">17107</span>
<span id="L17108" rel="#L17108">17108</span>
<span id="L17109" rel="#L17109">17109</span>
<span id="L17110" rel="#L17110">17110</span>
<span id="L17111" rel="#L17111">17111</span>
<span id="L17112" rel="#L17112">17112</span>
<span id="L17113" rel="#L17113">17113</span>
<span id="L17114" rel="#L17114">17114</span>
<span id="L17115" rel="#L17115">17115</span>
<span id="L17116" rel="#L17116">17116</span>
<span id="L17117" rel="#L17117">17117</span>
<span id="L17118" rel="#L17118">17118</span>
<span id="L17119" rel="#L17119">17119</span>
<span id="L17120" rel="#L17120">17120</span>
<span id="L17121" rel="#L17121">17121</span>
<span id="L17122" rel="#L17122">17122</span>
<span id="L17123" rel="#L17123">17123</span>
<span id="L17124" rel="#L17124">17124</span>
<span id="L17125" rel="#L17125">17125</span>
<span id="L17126" rel="#L17126">17126</span>
<span id="L17127" rel="#L17127">17127</span>
<span id="L17128" rel="#L17128">17128</span>
<span id="L17129" rel="#L17129">17129</span>
<span id="L17130" rel="#L17130">17130</span>
<span id="L17131" rel="#L17131">17131</span>
<span id="L17132" rel="#L17132">17132</span>
<span id="L17133" rel="#L17133">17133</span>
<span id="L17134" rel="#L17134">17134</span>
<span id="L17135" rel="#L17135">17135</span>
<span id="L17136" rel="#L17136">17136</span>
<span id="L17137" rel="#L17137">17137</span>
<span id="L17138" rel="#L17138">17138</span>
<span id="L17139" rel="#L17139">17139</span>
<span id="L17140" rel="#L17140">17140</span>
<span id="L17141" rel="#L17141">17141</span>
<span id="L17142" rel="#L17142">17142</span>
<span id="L17143" rel="#L17143">17143</span>
<span id="L17144" rel="#L17144">17144</span>
<span id="L17145" rel="#L17145">17145</span>
<span id="L17146" rel="#L17146">17146</span>
<span id="L17147" rel="#L17147">17147</span>
<span id="L17148" rel="#L17148">17148</span>
<span id="L17149" rel="#L17149">17149</span>
<span id="L17150" rel="#L17150">17150</span>
<span id="L17151" rel="#L17151">17151</span>
<span id="L17152" rel="#L17152">17152</span>
<span id="L17153" rel="#L17153">17153</span>
<span id="L17154" rel="#L17154">17154</span>
<span id="L17155" rel="#L17155">17155</span>
<span id="L17156" rel="#L17156">17156</span>
<span id="L17157" rel="#L17157">17157</span>
<span id="L17158" rel="#L17158">17158</span>
<span id="L17159" rel="#L17159">17159</span>
<span id="L17160" rel="#L17160">17160</span>
<span id="L17161" rel="#L17161">17161</span>
<span id="L17162" rel="#L17162">17162</span>
<span id="L17163" rel="#L17163">17163</span>
<span id="L17164" rel="#L17164">17164</span>
<span id="L17165" rel="#L17165">17165</span>
<span id="L17166" rel="#L17166">17166</span>
<span id="L17167" rel="#L17167">17167</span>
<span id="L17168" rel="#L17168">17168</span>
<span id="L17169" rel="#L17169">17169</span>
<span id="L17170" rel="#L17170">17170</span>
<span id="L17171" rel="#L17171">17171</span>
<span id="L17172" rel="#L17172">17172</span>
<span id="L17173" rel="#L17173">17173</span>
<span id="L17174" rel="#L17174">17174</span>
<span id="L17175" rel="#L17175">17175</span>
<span id="L17176" rel="#L17176">17176</span>
<span id="L17177" rel="#L17177">17177</span>
<span id="L17178" rel="#L17178">17178</span>
<span id="L17179" rel="#L17179">17179</span>
<span id="L17180" rel="#L17180">17180</span>
<span id="L17181" rel="#L17181">17181</span>
<span id="L17182" rel="#L17182">17182</span>
<span id="L17183" rel="#L17183">17183</span>
<span id="L17184" rel="#L17184">17184</span>
<span id="L17185" rel="#L17185">17185</span>
<span id="L17186" rel="#L17186">17186</span>
<span id="L17187" rel="#L17187">17187</span>
<span id="L17188" rel="#L17188">17188</span>
<span id="L17189" rel="#L17189">17189</span>
<span id="L17190" rel="#L17190">17190</span>
<span id="L17191" rel="#L17191">17191</span>
<span id="L17192" rel="#L17192">17192</span>
<span id="L17193" rel="#L17193">17193</span>
<span id="L17194" rel="#L17194">17194</span>
<span id="L17195" rel="#L17195">17195</span>
<span id="L17196" rel="#L17196">17196</span>
<span id="L17197" rel="#L17197">17197</span>
<span id="L17198" rel="#L17198">17198</span>
<span id="L17199" rel="#L17199">17199</span>
<span id="L17200" rel="#L17200">17200</span>
<span id="L17201" rel="#L17201">17201</span>
<span id="L17202" rel="#L17202">17202</span>
<span id="L17203" rel="#L17203">17203</span>
<span id="L17204" rel="#L17204">17204</span>
<span id="L17205" rel="#L17205">17205</span>
<span id="L17206" rel="#L17206">17206</span>
<span id="L17207" rel="#L17207">17207</span>
<span id="L17208" rel="#L17208">17208</span>
<span id="L17209" rel="#L17209">17209</span>
<span id="L17210" rel="#L17210">17210</span>
<span id="L17211" rel="#L17211">17211</span>
<span id="L17212" rel="#L17212">17212</span>
<span id="L17213" rel="#L17213">17213</span>
<span id="L17214" rel="#L17214">17214</span>
<span id="L17215" rel="#L17215">17215</span>
<span id="L17216" rel="#L17216">17216</span>
<span id="L17217" rel="#L17217">17217</span>
<span id="L17218" rel="#L17218">17218</span>
<span id="L17219" rel="#L17219">17219</span>
<span id="L17220" rel="#L17220">17220</span>
<span id="L17221" rel="#L17221">17221</span>
<span id="L17222" rel="#L17222">17222</span>
<span id="L17223" rel="#L17223">17223</span>
<span id="L17224" rel="#L17224">17224</span>
<span id="L17225" rel="#L17225">17225</span>
<span id="L17226" rel="#L17226">17226</span>
<span id="L17227" rel="#L17227">17227</span>
<span id="L17228" rel="#L17228">17228</span>
<span id="L17229" rel="#L17229">17229</span>
<span id="L17230" rel="#L17230">17230</span>
<span id="L17231" rel="#L17231">17231</span>
<span id="L17232" rel="#L17232">17232</span>
<span id="L17233" rel="#L17233">17233</span>
<span id="L17234" rel="#L17234">17234</span>
<span id="L17235" rel="#L17235">17235</span>
<span id="L17236" rel="#L17236">17236</span>
<span id="L17237" rel="#L17237">17237</span>
<span id="L17238" rel="#L17238">17238</span>
<span id="L17239" rel="#L17239">17239</span>
<span id="L17240" rel="#L17240">17240</span>
<span id="L17241" rel="#L17241">17241</span>
<span id="L17242" rel="#L17242">17242</span>
<span id="L17243" rel="#L17243">17243</span>
<span id="L17244" rel="#L17244">17244</span>
<span id="L17245" rel="#L17245">17245</span>
<span id="L17246" rel="#L17246">17246</span>
<span id="L17247" rel="#L17247">17247</span>
<span id="L17248" rel="#L17248">17248</span>
<span id="L17249" rel="#L17249">17249</span>
<span id="L17250" rel="#L17250">17250</span>
<span id="L17251" rel="#L17251">17251</span>
<span id="L17252" rel="#L17252">17252</span>
<span id="L17253" rel="#L17253">17253</span>
<span id="L17254" rel="#L17254">17254</span>
<span id="L17255" rel="#L17255">17255</span>
<span id="L17256" rel="#L17256">17256</span>
<span id="L17257" rel="#L17257">17257</span>
<span id="L17258" rel="#L17258">17258</span>
<span id="L17259" rel="#L17259">17259</span>
<span id="L17260" rel="#L17260">17260</span>
<span id="L17261" rel="#L17261">17261</span>
<span id="L17262" rel="#L17262">17262</span>
<span id="L17263" rel="#L17263">17263</span>
<span id="L17264" rel="#L17264">17264</span>
<span id="L17265" rel="#L17265">17265</span>
<span id="L17266" rel="#L17266">17266</span>
<span id="L17267" rel="#L17267">17267</span>
<span id="L17268" rel="#L17268">17268</span>
<span id="L17269" rel="#L17269">17269</span>
<span id="L17270" rel="#L17270">17270</span>
<span id="L17271" rel="#L17271">17271</span>
<span id="L17272" rel="#L17272">17272</span>
<span id="L17273" rel="#L17273">17273</span>
<span id="L17274" rel="#L17274">17274</span>
<span id="L17275" rel="#L17275">17275</span>
<span id="L17276" rel="#L17276">17276</span>
<span id="L17277" rel="#L17277">17277</span>
<span id="L17278" rel="#L17278">17278</span>
<span id="L17279" rel="#L17279">17279</span>
<span id="L17280" rel="#L17280">17280</span>
<span id="L17281" rel="#L17281">17281</span>
<span id="L17282" rel="#L17282">17282</span>
<span id="L17283" rel="#L17283">17283</span>
<span id="L17284" rel="#L17284">17284</span>
<span id="L17285" rel="#L17285">17285</span>
<span id="L17286" rel="#L17286">17286</span>
<span id="L17287" rel="#L17287">17287</span>
<span id="L17288" rel="#L17288">17288</span>
<span id="L17289" rel="#L17289">17289</span>
<span id="L17290" rel="#L17290">17290</span>
<span id="L17291" rel="#L17291">17291</span>
<span id="L17292" rel="#L17292">17292</span>
<span id="L17293" rel="#L17293">17293</span>
<span id="L17294" rel="#L17294">17294</span>
<span id="L17295" rel="#L17295">17295</span>
<span id="L17296" rel="#L17296">17296</span>
<span id="L17297" rel="#L17297">17297</span>
<span id="L17298" rel="#L17298">17298</span>
<span id="L17299" rel="#L17299">17299</span>
<span id="L17300" rel="#L17300">17300</span>
<span id="L17301" rel="#L17301">17301</span>
<span id="L17302" rel="#L17302">17302</span>
<span id="L17303" rel="#L17303">17303</span>
<span id="L17304" rel="#L17304">17304</span>
<span id="L17305" rel="#L17305">17305</span>
<span id="L17306" rel="#L17306">17306</span>
<span id="L17307" rel="#L17307">17307</span>
<span id="L17308" rel="#L17308">17308</span>
<span id="L17309" rel="#L17309">17309</span>
<span id="L17310" rel="#L17310">17310</span>
<span id="L17311" rel="#L17311">17311</span>
<span id="L17312" rel="#L17312">17312</span>
<span id="L17313" rel="#L17313">17313</span>
<span id="L17314" rel="#L17314">17314</span>
<span id="L17315" rel="#L17315">17315</span>
<span id="L17316" rel="#L17316">17316</span>
<span id="L17317" rel="#L17317">17317</span>
<span id="L17318" rel="#L17318">17318</span>
<span id="L17319" rel="#L17319">17319</span>
<span id="L17320" rel="#L17320">17320</span>
<span id="L17321" rel="#L17321">17321</span>
<span id="L17322" rel="#L17322">17322</span>
<span id="L17323" rel="#L17323">17323</span>
<span id="L17324" rel="#L17324">17324</span>
<span id="L17325" rel="#L17325">17325</span>
<span id="L17326" rel="#L17326">17326</span>
<span id="L17327" rel="#L17327">17327</span>
<span id="L17328" rel="#L17328">17328</span>
<span id="L17329" rel="#L17329">17329</span>
<span id="L17330" rel="#L17330">17330</span>
<span id="L17331" rel="#L17331">17331</span>
<span id="L17332" rel="#L17332">17332</span>
<span id="L17333" rel="#L17333">17333</span>
<span id="L17334" rel="#L17334">17334</span>
<span id="L17335" rel="#L17335">17335</span>
<span id="L17336" rel="#L17336">17336</span>
<span id="L17337" rel="#L17337">17337</span>
<span id="L17338" rel="#L17338">17338</span>
<span id="L17339" rel="#L17339">17339</span>
<span id="L17340" rel="#L17340">17340</span>
<span id="L17341" rel="#L17341">17341</span>
<span id="L17342" rel="#L17342">17342</span>
<span id="L17343" rel="#L17343">17343</span>
<span id="L17344" rel="#L17344">17344</span>
<span id="L17345" rel="#L17345">17345</span>
<span id="L17346" rel="#L17346">17346</span>
<span id="L17347" rel="#L17347">17347</span>
<span id="L17348" rel="#L17348">17348</span>
<span id="L17349" rel="#L17349">17349</span>
<span id="L17350" rel="#L17350">17350</span>
<span id="L17351" rel="#L17351">17351</span>
<span id="L17352" rel="#L17352">17352</span>
<span id="L17353" rel="#L17353">17353</span>
<span id="L17354" rel="#L17354">17354</span>
<span id="L17355" rel="#L17355">17355</span>
<span id="L17356" rel="#L17356">17356</span>
<span id="L17357" rel="#L17357">17357</span>
<span id="L17358" rel="#L17358">17358</span>
<span id="L17359" rel="#L17359">17359</span>
<span id="L17360" rel="#L17360">17360</span>
<span id="L17361" rel="#L17361">17361</span>
<span id="L17362" rel="#L17362">17362</span>
<span id="L17363" rel="#L17363">17363</span>
<span id="L17364" rel="#L17364">17364</span>
<span id="L17365" rel="#L17365">17365</span>
<span id="L17366" rel="#L17366">17366</span>
<span id="L17367" rel="#L17367">17367</span>
<span id="L17368" rel="#L17368">17368</span>
<span id="L17369" rel="#L17369">17369</span>
<span id="L17370" rel="#L17370">17370</span>
<span id="L17371" rel="#L17371">17371</span>
<span id="L17372" rel="#L17372">17372</span>
<span id="L17373" rel="#L17373">17373</span>
<span id="L17374" rel="#L17374">17374</span>
<span id="L17375" rel="#L17375">17375</span>
<span id="L17376" rel="#L17376">17376</span>
<span id="L17377" rel="#L17377">17377</span>
<span id="L17378" rel="#L17378">17378</span>
<span id="L17379" rel="#L17379">17379</span>
<span id="L17380" rel="#L17380">17380</span>
<span id="L17381" rel="#L17381">17381</span>
<span id="L17382" rel="#L17382">17382</span>
<span id="L17383" rel="#L17383">17383</span>
<span id="L17384" rel="#L17384">17384</span>
<span id="L17385" rel="#L17385">17385</span>
<span id="L17386" rel="#L17386">17386</span>
<span id="L17387" rel="#L17387">17387</span>
<span id="L17388" rel="#L17388">17388</span>
<span id="L17389" rel="#L17389">17389</span>
<span id="L17390" rel="#L17390">17390</span>
<span id="L17391" rel="#L17391">17391</span>
<span id="L17392" rel="#L17392">17392</span>
<span id="L17393" rel="#L17393">17393</span>
<span id="L17394" rel="#L17394">17394</span>
<span id="L17395" rel="#L17395">17395</span>
<span id="L17396" rel="#L17396">17396</span>
<span id="L17397" rel="#L17397">17397</span>
<span id="L17398" rel="#L17398">17398</span>
<span id="L17399" rel="#L17399">17399</span>
<span id="L17400" rel="#L17400">17400</span>
<span id="L17401" rel="#L17401">17401</span>
<span id="L17402" rel="#L17402">17402</span>
<span id="L17403" rel="#L17403">17403</span>
<span id="L17404" rel="#L17404">17404</span>
<span id="L17405" rel="#L17405">17405</span>
<span id="L17406" rel="#L17406">17406</span>
<span id="L17407" rel="#L17407">17407</span>
<span id="L17408" rel="#L17408">17408</span>
<span id="L17409" rel="#L17409">17409</span>
<span id="L17410" rel="#L17410">17410</span>
<span id="L17411" rel="#L17411">17411</span>
<span id="L17412" rel="#L17412">17412</span>
<span id="L17413" rel="#L17413">17413</span>
<span id="L17414" rel="#L17414">17414</span>
<span id="L17415" rel="#L17415">17415</span>
<span id="L17416" rel="#L17416">17416</span>
<span id="L17417" rel="#L17417">17417</span>
<span id="L17418" rel="#L17418">17418</span>
<span id="L17419" rel="#L17419">17419</span>
<span id="L17420" rel="#L17420">17420</span>
<span id="L17421" rel="#L17421">17421</span>
<span id="L17422" rel="#L17422">17422</span>
<span id="L17423" rel="#L17423">17423</span>
<span id="L17424" rel="#L17424">17424</span>
<span id="L17425" rel="#L17425">17425</span>
<span id="L17426" rel="#L17426">17426</span>
<span id="L17427" rel="#L17427">17427</span>
<span id="L17428" rel="#L17428">17428</span>
<span id="L17429" rel="#L17429">17429</span>
<span id="L17430" rel="#L17430">17430</span>
<span id="L17431" rel="#L17431">17431</span>
<span id="L17432" rel="#L17432">17432</span>
<span id="L17433" rel="#L17433">17433</span>
<span id="L17434" rel="#L17434">17434</span>
<span id="L17435" rel="#L17435">17435</span>
<span id="L17436" rel="#L17436">17436</span>
<span id="L17437" rel="#L17437">17437</span>
<span id="L17438" rel="#L17438">17438</span>
<span id="L17439" rel="#L17439">17439</span>
<span id="L17440" rel="#L17440">17440</span>
<span id="L17441" rel="#L17441">17441</span>
<span id="L17442" rel="#L17442">17442</span>
<span id="L17443" rel="#L17443">17443</span>
<span id="L17444" rel="#L17444">17444</span>
<span id="L17445" rel="#L17445">17445</span>
<span id="L17446" rel="#L17446">17446</span>
<span id="L17447" rel="#L17447">17447</span>
<span id="L17448" rel="#L17448">17448</span>
<span id="L17449" rel="#L17449">17449</span>
<span id="L17450" rel="#L17450">17450</span>
<span id="L17451" rel="#L17451">17451</span>
<span id="L17452" rel="#L17452">17452</span>
<span id="L17453" rel="#L17453">17453</span>
<span id="L17454" rel="#L17454">17454</span>
<span id="L17455" rel="#L17455">17455</span>
<span id="L17456" rel="#L17456">17456</span>
<span id="L17457" rel="#L17457">17457</span>
<span id="L17458" rel="#L17458">17458</span>
<span id="L17459" rel="#L17459">17459</span>
<span id="L17460" rel="#L17460">17460</span>
<span id="L17461" rel="#L17461">17461</span>
<span id="L17462" rel="#L17462">17462</span>
<span id="L17463" rel="#L17463">17463</span>
<span id="L17464" rel="#L17464">17464</span>
<span id="L17465" rel="#L17465">17465</span>
<span id="L17466" rel="#L17466">17466</span>
<span id="L17467" rel="#L17467">17467</span>
<span id="L17468" rel="#L17468">17468</span>
<span id="L17469" rel="#L17469">17469</span>
<span id="L17470" rel="#L17470">17470</span>
<span id="L17471" rel="#L17471">17471</span>
<span id="L17472" rel="#L17472">17472</span>
<span id="L17473" rel="#L17473">17473</span>
<span id="L17474" rel="#L17474">17474</span>
<span id="L17475" rel="#L17475">17475</span>
<span id="L17476" rel="#L17476">17476</span>
<span id="L17477" rel="#L17477">17477</span>
<span id="L17478" rel="#L17478">17478</span>
<span id="L17479" rel="#L17479">17479</span>
<span id="L17480" rel="#L17480">17480</span>
<span id="L17481" rel="#L17481">17481</span>
<span id="L17482" rel="#L17482">17482</span>
<span id="L17483" rel="#L17483">17483</span>
<span id="L17484" rel="#L17484">17484</span>
<span id="L17485" rel="#L17485">17485</span>
<span id="L17486" rel="#L17486">17486</span>
<span id="L17487" rel="#L17487">17487</span>
<span id="L17488" rel="#L17488">17488</span>
<span id="L17489" rel="#L17489">17489</span>
<span id="L17490" rel="#L17490">17490</span>
<span id="L17491" rel="#L17491">17491</span>
<span id="L17492" rel="#L17492">17492</span>
<span id="L17493" rel="#L17493">17493</span>
<span id="L17494" rel="#L17494">17494</span>
<span id="L17495" rel="#L17495">17495</span>
<span id="L17496" rel="#L17496">17496</span>
<span id="L17497" rel="#L17497">17497</span>
<span id="L17498" rel="#L17498">17498</span>
<span id="L17499" rel="#L17499">17499</span>
<span id="L17500" rel="#L17500">17500</span>
<span id="L17501" rel="#L17501">17501</span>
<span id="L17502" rel="#L17502">17502</span>
<span id="L17503" rel="#L17503">17503</span>
<span id="L17504" rel="#L17504">17504</span>
<span id="L17505" rel="#L17505">17505</span>
<span id="L17506" rel="#L17506">17506</span>
<span id="L17507" rel="#L17507">17507</span>
<span id="L17508" rel="#L17508">17508</span>
<span id="L17509" rel="#L17509">17509</span>
<span id="L17510" rel="#L17510">17510</span>
<span id="L17511" rel="#L17511">17511</span>
<span id="L17512" rel="#L17512">17512</span>
<span id="L17513" rel="#L17513">17513</span>
<span id="L17514" rel="#L17514">17514</span>
<span id="L17515" rel="#L17515">17515</span>
<span id="L17516" rel="#L17516">17516</span>
<span id="L17517" rel="#L17517">17517</span>
<span id="L17518" rel="#L17518">17518</span>
<span id="L17519" rel="#L17519">17519</span>
<span id="L17520" rel="#L17520">17520</span>
<span id="L17521" rel="#L17521">17521</span>
<span id="L17522" rel="#L17522">17522</span>
<span id="L17523" rel="#L17523">17523</span>
<span id="L17524" rel="#L17524">17524</span>
<span id="L17525" rel="#L17525">17525</span>
<span id="L17526" rel="#L17526">17526</span>
<span id="L17527" rel="#L17527">17527</span>
<span id="L17528" rel="#L17528">17528</span>
<span id="L17529" rel="#L17529">17529</span>
<span id="L17530" rel="#L17530">17530</span>
<span id="L17531" rel="#L17531">17531</span>
<span id="L17532" rel="#L17532">17532</span>
<span id="L17533" rel="#L17533">17533</span>
<span id="L17534" rel="#L17534">17534</span>
<span id="L17535" rel="#L17535">17535</span>
<span id="L17536" rel="#L17536">17536</span>
<span id="L17537" rel="#L17537">17537</span>
<span id="L17538" rel="#L17538">17538</span>
<span id="L17539" rel="#L17539">17539</span>
<span id="L17540" rel="#L17540">17540</span>
<span id="L17541" rel="#L17541">17541</span>
<span id="L17542" rel="#L17542">17542</span>
<span id="L17543" rel="#L17543">17543</span>
<span id="L17544" rel="#L17544">17544</span>
<span id="L17545" rel="#L17545">17545</span>
<span id="L17546" rel="#L17546">17546</span>
<span id="L17547" rel="#L17547">17547</span>
<span id="L17548" rel="#L17548">17548</span>
<span id="L17549" rel="#L17549">17549</span>
<span id="L17550" rel="#L17550">17550</span>
<span id="L17551" rel="#L17551">17551</span>
<span id="L17552" rel="#L17552">17552</span>
<span id="L17553" rel="#L17553">17553</span>
<span id="L17554" rel="#L17554">17554</span>
<span id="L17555" rel="#L17555">17555</span>
<span id="L17556" rel="#L17556">17556</span>
<span id="L17557" rel="#L17557">17557</span>
<span id="L17558" rel="#L17558">17558</span>
<span id="L17559" rel="#L17559">17559</span>
<span id="L17560" rel="#L17560">17560</span>
<span id="L17561" rel="#L17561">17561</span>
<span id="L17562" rel="#L17562">17562</span>
<span id="L17563" rel="#L17563">17563</span>
<span id="L17564" rel="#L17564">17564</span>
<span id="L17565" rel="#L17565">17565</span>
<span id="L17566" rel="#L17566">17566</span>
<span id="L17567" rel="#L17567">17567</span>
<span id="L17568" rel="#L17568">17568</span>
<span id="L17569" rel="#L17569">17569</span>
<span id="L17570" rel="#L17570">17570</span>
<span id="L17571" rel="#L17571">17571</span>
<span id="L17572" rel="#L17572">17572</span>
<span id="L17573" rel="#L17573">17573</span>
<span id="L17574" rel="#L17574">17574</span>
<span id="L17575" rel="#L17575">17575</span>
<span id="L17576" rel="#L17576">17576</span>
<span id="L17577" rel="#L17577">17577</span>
<span id="L17578" rel="#L17578">17578</span>
<span id="L17579" rel="#L17579">17579</span>
<span id="L17580" rel="#L17580">17580</span>
<span id="L17581" rel="#L17581">17581</span>
<span id="L17582" rel="#L17582">17582</span>
<span id="L17583" rel="#L17583">17583</span>
<span id="L17584" rel="#L17584">17584</span>
<span id="L17585" rel="#L17585">17585</span>
<span id="L17586" rel="#L17586">17586</span>
<span id="L17587" rel="#L17587">17587</span>
<span id="L17588" rel="#L17588">17588</span>
<span id="L17589" rel="#L17589">17589</span>
<span id="L17590" rel="#L17590">17590</span>
<span id="L17591" rel="#L17591">17591</span>
<span id="L17592" rel="#L17592">17592</span>
<span id="L17593" rel="#L17593">17593</span>
<span id="L17594" rel="#L17594">17594</span>
<span id="L17595" rel="#L17595">17595</span>
<span id="L17596" rel="#L17596">17596</span>
<span id="L17597" rel="#L17597">17597</span>
<span id="L17598" rel="#L17598">17598</span>
<span id="L17599" rel="#L17599">17599</span>
<span id="L17600" rel="#L17600">17600</span>
<span id="L17601" rel="#L17601">17601</span>
<span id="L17602" rel="#L17602">17602</span>
<span id="L17603" rel="#L17603">17603</span>
<span id="L17604" rel="#L17604">17604</span>
<span id="L17605" rel="#L17605">17605</span>
<span id="L17606" rel="#L17606">17606</span>
<span id="L17607" rel="#L17607">17607</span>
<span id="L17608" rel="#L17608">17608</span>
<span id="L17609" rel="#L17609">17609</span>
<span id="L17610" rel="#L17610">17610</span>
<span id="L17611" rel="#L17611">17611</span>
<span id="L17612" rel="#L17612">17612</span>
<span id="L17613" rel="#L17613">17613</span>
<span id="L17614" rel="#L17614">17614</span>
<span id="L17615" rel="#L17615">17615</span>
<span id="L17616" rel="#L17616">17616</span>
<span id="L17617" rel="#L17617">17617</span>
<span id="L17618" rel="#L17618">17618</span>
<span id="L17619" rel="#L17619">17619</span>
<span id="L17620" rel="#L17620">17620</span>
<span id="L17621" rel="#L17621">17621</span>
<span id="L17622" rel="#L17622">17622</span>
<span id="L17623" rel="#L17623">17623</span>
<span id="L17624" rel="#L17624">17624</span>
<span id="L17625" rel="#L17625">17625</span>
<span id="L17626" rel="#L17626">17626</span>
<span id="L17627" rel="#L17627">17627</span>
<span id="L17628" rel="#L17628">17628</span>
<span id="L17629" rel="#L17629">17629</span>
<span id="L17630" rel="#L17630">17630</span>
<span id="L17631" rel="#L17631">17631</span>
<span id="L17632" rel="#L17632">17632</span>
<span id="L17633" rel="#L17633">17633</span>
<span id="L17634" rel="#L17634">17634</span>
<span id="L17635" rel="#L17635">17635</span>
<span id="L17636" rel="#L17636">17636</span>
<span id="L17637" rel="#L17637">17637</span>
<span id="L17638" rel="#L17638">17638</span>
<span id="L17639" rel="#L17639">17639</span>
<span id="L17640" rel="#L17640">17640</span>
<span id="L17641" rel="#L17641">17641</span>
<span id="L17642" rel="#L17642">17642</span>
<span id="L17643" rel="#L17643">17643</span>
<span id="L17644" rel="#L17644">17644</span>
<span id="L17645" rel="#L17645">17645</span>
<span id="L17646" rel="#L17646">17646</span>
<span id="L17647" rel="#L17647">17647</span>
<span id="L17648" rel="#L17648">17648</span>
<span id="L17649" rel="#L17649">17649</span>
<span id="L17650" rel="#L17650">17650</span>
<span id="L17651" rel="#L17651">17651</span>
<span id="L17652" rel="#L17652">17652</span>
<span id="L17653" rel="#L17653">17653</span>
<span id="L17654" rel="#L17654">17654</span>
<span id="L17655" rel="#L17655">17655</span>
<span id="L17656" rel="#L17656">17656</span>
<span id="L17657" rel="#L17657">17657</span>
<span id="L17658" rel="#L17658">17658</span>
<span id="L17659" rel="#L17659">17659</span>
<span id="L17660" rel="#L17660">17660</span>
<span id="L17661" rel="#L17661">17661</span>
<span id="L17662" rel="#L17662">17662</span>
<span id="L17663" rel="#L17663">17663</span>
<span id="L17664" rel="#L17664">17664</span>
<span id="L17665" rel="#L17665">17665</span>
<span id="L17666" rel="#L17666">17666</span>
<span id="L17667" rel="#L17667">17667</span>
<span id="L17668" rel="#L17668">17668</span>
<span id="L17669" rel="#L17669">17669</span>
<span id="L17670" rel="#L17670">17670</span>
<span id="L17671" rel="#L17671">17671</span>
<span id="L17672" rel="#L17672">17672</span>
<span id="L17673" rel="#L17673">17673</span>
<span id="L17674" rel="#L17674">17674</span>
<span id="L17675" rel="#L17675">17675</span>
<span id="L17676" rel="#L17676">17676</span>
<span id="L17677" rel="#L17677">17677</span>
<span id="L17678" rel="#L17678">17678</span>
<span id="L17679" rel="#L17679">17679</span>
<span id="L17680" rel="#L17680">17680</span>
<span id="L17681" rel="#L17681">17681</span>
<span id="L17682" rel="#L17682">17682</span>
<span id="L17683" rel="#L17683">17683</span>
<span id="L17684" rel="#L17684">17684</span>
<span id="L17685" rel="#L17685">17685</span>
<span id="L17686" rel="#L17686">17686</span>
<span id="L17687" rel="#L17687">17687</span>
<span id="L17688" rel="#L17688">17688</span>
<span id="L17689" rel="#L17689">17689</span>
<span id="L17690" rel="#L17690">17690</span>
<span id="L17691" rel="#L17691">17691</span>
<span id="L17692" rel="#L17692">17692</span>
<span id="L17693" rel="#L17693">17693</span>
<span id="L17694" rel="#L17694">17694</span>
<span id="L17695" rel="#L17695">17695</span>
<span id="L17696" rel="#L17696">17696</span>
<span id="L17697" rel="#L17697">17697</span>
<span id="L17698" rel="#L17698">17698</span>
<span id="L17699" rel="#L17699">17699</span>
<span id="L17700" rel="#L17700">17700</span>
<span id="L17701" rel="#L17701">17701</span>
<span id="L17702" rel="#L17702">17702</span>
<span id="L17703" rel="#L17703">17703</span>
<span id="L17704" rel="#L17704">17704</span>
<span id="L17705" rel="#L17705">17705</span>
<span id="L17706" rel="#L17706">17706</span>
<span id="L17707" rel="#L17707">17707</span>
<span id="L17708" rel="#L17708">17708</span>
<span id="L17709" rel="#L17709">17709</span>
<span id="L17710" rel="#L17710">17710</span>
<span id="L17711" rel="#L17711">17711</span>
<span id="L17712" rel="#L17712">17712</span>
<span id="L17713" rel="#L17713">17713</span>
<span id="L17714" rel="#L17714">17714</span>
<span id="L17715" rel="#L17715">17715</span>
<span id="L17716" rel="#L17716">17716</span>
<span id="L17717" rel="#L17717">17717</span>
<span id="L17718" rel="#L17718">17718</span>
<span id="L17719" rel="#L17719">17719</span>
<span id="L17720" rel="#L17720">17720</span>
<span id="L17721" rel="#L17721">17721</span>
<span id="L17722" rel="#L17722">17722</span>
<span id="L17723" rel="#L17723">17723</span>
<span id="L17724" rel="#L17724">17724</span>
<span id="L17725" rel="#L17725">17725</span>
<span id="L17726" rel="#L17726">17726</span>
<span id="L17727" rel="#L17727">17727</span>
<span id="L17728" rel="#L17728">17728</span>
<span id="L17729" rel="#L17729">17729</span>
<span id="L17730" rel="#L17730">17730</span>
<span id="L17731" rel="#L17731">17731</span>
<span id="L17732" rel="#L17732">17732</span>
<span id="L17733" rel="#L17733">17733</span>
<span id="L17734" rel="#L17734">17734</span>
<span id="L17735" rel="#L17735">17735</span>
<span id="L17736" rel="#L17736">17736</span>
<span id="L17737" rel="#L17737">17737</span>
<span id="L17738" rel="#L17738">17738</span>
<span id="L17739" rel="#L17739">17739</span>
<span id="L17740" rel="#L17740">17740</span>
<span id="L17741" rel="#L17741">17741</span>
<span id="L17742" rel="#L17742">17742</span>
<span id="L17743" rel="#L17743">17743</span>
<span id="L17744" rel="#L17744">17744</span>
<span id="L17745" rel="#L17745">17745</span>
<span id="L17746" rel="#L17746">17746</span>
<span id="L17747" rel="#L17747">17747</span>
<span id="L17748" rel="#L17748">17748</span>
<span id="L17749" rel="#L17749">17749</span>
<span id="L17750" rel="#L17750">17750</span>
<span id="L17751" rel="#L17751">17751</span>
<span id="L17752" rel="#L17752">17752</span>
<span id="L17753" rel="#L17753">17753</span>
<span id="L17754" rel="#L17754">17754</span>
<span id="L17755" rel="#L17755">17755</span>
<span id="L17756" rel="#L17756">17756</span>
<span id="L17757" rel="#L17757">17757</span>
<span id="L17758" rel="#L17758">17758</span>
<span id="L17759" rel="#L17759">17759</span>
<span id="L17760" rel="#L17760">17760</span>
<span id="L17761" rel="#L17761">17761</span>
<span id="L17762" rel="#L17762">17762</span>
<span id="L17763" rel="#L17763">17763</span>
<span id="L17764" rel="#L17764">17764</span>
<span id="L17765" rel="#L17765">17765</span>
<span id="L17766" rel="#L17766">17766</span>
<span id="L17767" rel="#L17767">17767</span>
<span id="L17768" rel="#L17768">17768</span>
<span id="L17769" rel="#L17769">17769</span>
<span id="L17770" rel="#L17770">17770</span>
<span id="L17771" rel="#L17771">17771</span>
<span id="L17772" rel="#L17772">17772</span>
<span id="L17773" rel="#L17773">17773</span>
<span id="L17774" rel="#L17774">17774</span>
<span id="L17775" rel="#L17775">17775</span>
<span id="L17776" rel="#L17776">17776</span>
<span id="L17777" rel="#L17777">17777</span>
<span id="L17778" rel="#L17778">17778</span>
<span id="L17779" rel="#L17779">17779</span>
<span id="L17780" rel="#L17780">17780</span>
<span id="L17781" rel="#L17781">17781</span>
<span id="L17782" rel="#L17782">17782</span>
<span id="L17783" rel="#L17783">17783</span>
<span id="L17784" rel="#L17784">17784</span>
<span id="L17785" rel="#L17785">17785</span>
<span id="L17786" rel="#L17786">17786</span>
<span id="L17787" rel="#L17787">17787</span>
<span id="L17788" rel="#L17788">17788</span>
<span id="L17789" rel="#L17789">17789</span>
<span id="L17790" rel="#L17790">17790</span>
<span id="L17791" rel="#L17791">17791</span>
<span id="L17792" rel="#L17792">17792</span>
<span id="L17793" rel="#L17793">17793</span>
<span id="L17794" rel="#L17794">17794</span>
<span id="L17795" rel="#L17795">17795</span>
<span id="L17796" rel="#L17796">17796</span>
<span id="L17797" rel="#L17797">17797</span>
<span id="L17798" rel="#L17798">17798</span>
<span id="L17799" rel="#L17799">17799</span>
<span id="L17800" rel="#L17800">17800</span>
<span id="L17801" rel="#L17801">17801</span>
<span id="L17802" rel="#L17802">17802</span>
<span id="L17803" rel="#L17803">17803</span>
<span id="L17804" rel="#L17804">17804</span>
<span id="L17805" rel="#L17805">17805</span>
<span id="L17806" rel="#L17806">17806</span>
<span id="L17807" rel="#L17807">17807</span>
<span id="L17808" rel="#L17808">17808</span>
<span id="L17809" rel="#L17809">17809</span>
<span id="L17810" rel="#L17810">17810</span>
<span id="L17811" rel="#L17811">17811</span>
<span id="L17812" rel="#L17812">17812</span>
<span id="L17813" rel="#L17813">17813</span>
<span id="L17814" rel="#L17814">17814</span>
<span id="L17815" rel="#L17815">17815</span>
<span id="L17816" rel="#L17816">17816</span>
<span id="L17817" rel="#L17817">17817</span>
<span id="L17818" rel="#L17818">17818</span>
<span id="L17819" rel="#L17819">17819</span>
<span id="L17820" rel="#L17820">17820</span>
<span id="L17821" rel="#L17821">17821</span>
<span id="L17822" rel="#L17822">17822</span>
<span id="L17823" rel="#L17823">17823</span>
<span id="L17824" rel="#L17824">17824</span>
<span id="L17825" rel="#L17825">17825</span>
<span id="L17826" rel="#L17826">17826</span>
<span id="L17827" rel="#L17827">17827</span>
<span id="L17828" rel="#L17828">17828</span>
<span id="L17829" rel="#L17829">17829</span>
<span id="L17830" rel="#L17830">17830</span>
<span id="L17831" rel="#L17831">17831</span>
<span id="L17832" rel="#L17832">17832</span>
<span id="L17833" rel="#L17833">17833</span>
<span id="L17834" rel="#L17834">17834</span>
<span id="L17835" rel="#L17835">17835</span>
<span id="L17836" rel="#L17836">17836</span>
<span id="L17837" rel="#L17837">17837</span>
<span id="L17838" rel="#L17838">17838</span>
<span id="L17839" rel="#L17839">17839</span>
<span id="L17840" rel="#L17840">17840</span>
<span id="L17841" rel="#L17841">17841</span>
<span id="L17842" rel="#L17842">17842</span>
<span id="L17843" rel="#L17843">17843</span>
<span id="L17844" rel="#L17844">17844</span>
<span id="L17845" rel="#L17845">17845</span>
<span id="L17846" rel="#L17846">17846</span>
<span id="L17847" rel="#L17847">17847</span>
<span id="L17848" rel="#L17848">17848</span>
<span id="L17849" rel="#L17849">17849</span>
<span id="L17850" rel="#L17850">17850</span>
<span id="L17851" rel="#L17851">17851</span>
<span id="L17852" rel="#L17852">17852</span>
<span id="L17853" rel="#L17853">17853</span>
<span id="L17854" rel="#L17854">17854</span>
<span id="L17855" rel="#L17855">17855</span>
<span id="L17856" rel="#L17856">17856</span>
<span id="L17857" rel="#L17857">17857</span>
<span id="L17858" rel="#L17858">17858</span>
<span id="L17859" rel="#L17859">17859</span>
<span id="L17860" rel="#L17860">17860</span>
<span id="L17861" rel="#L17861">17861</span>
<span id="L17862" rel="#L17862">17862</span>
<span id="L17863" rel="#L17863">17863</span>
<span id="L17864" rel="#L17864">17864</span>
<span id="L17865" rel="#L17865">17865</span>
<span id="L17866" rel="#L17866">17866</span>
<span id="L17867" rel="#L17867">17867</span>
<span id="L17868" rel="#L17868">17868</span>
<span id="L17869" rel="#L17869">17869</span>
<span id="L17870" rel="#L17870">17870</span>
<span id="L17871" rel="#L17871">17871</span>
<span id="L17872" rel="#L17872">17872</span>
<span id="L17873" rel="#L17873">17873</span>
<span id="L17874" rel="#L17874">17874</span>
<span id="L17875" rel="#L17875">17875</span>
<span id="L17876" rel="#L17876">17876</span>
<span id="L17877" rel="#L17877">17877</span>
<span id="L17878" rel="#L17878">17878</span>
<span id="L17879" rel="#L17879">17879</span>
<span id="L17880" rel="#L17880">17880</span>
<span id="L17881" rel="#L17881">17881</span>
<span id="L17882" rel="#L17882">17882</span>
<span id="L17883" rel="#L17883">17883</span>
<span id="L17884" rel="#L17884">17884</span>
<span id="L17885" rel="#L17885">17885</span>
<span id="L17886" rel="#L17886">17886</span>
<span id="L17887" rel="#L17887">17887</span>
<span id="L17888" rel="#L17888">17888</span>
<span id="L17889" rel="#L17889">17889</span>
<span id="L17890" rel="#L17890">17890</span>
<span id="L17891" rel="#L17891">17891</span>
<span id="L17892" rel="#L17892">17892</span>
<span id="L17893" rel="#L17893">17893</span>
<span id="L17894" rel="#L17894">17894</span>
<span id="L17895" rel="#L17895">17895</span>
<span id="L17896" rel="#L17896">17896</span>
<span id="L17897" rel="#L17897">17897</span>
<span id="L17898" rel="#L17898">17898</span>
<span id="L17899" rel="#L17899">17899</span>
<span id="L17900" rel="#L17900">17900</span>
<span id="L17901" rel="#L17901">17901</span>
<span id="L17902" rel="#L17902">17902</span>
<span id="L17903" rel="#L17903">17903</span>
<span id="L17904" rel="#L17904">17904</span>
<span id="L17905" rel="#L17905">17905</span>
<span id="L17906" rel="#L17906">17906</span>
<span id="L17907" rel="#L17907">17907</span>
<span id="L17908" rel="#L17908">17908</span>
<span id="L17909" rel="#L17909">17909</span>
<span id="L17910" rel="#L17910">17910</span>
<span id="L17911" rel="#L17911">17911</span>
<span id="L17912" rel="#L17912">17912</span>
<span id="L17913" rel="#L17913">17913</span>
<span id="L17914" rel="#L17914">17914</span>
<span id="L17915" rel="#L17915">17915</span>
<span id="L17916" rel="#L17916">17916</span>
<span id="L17917" rel="#L17917">17917</span>
<span id="L17918" rel="#L17918">17918</span>
<span id="L17919" rel="#L17919">17919</span>
<span id="L17920" rel="#L17920">17920</span>
<span id="L17921" rel="#L17921">17921</span>
<span id="L17922" rel="#L17922">17922</span>
<span id="L17923" rel="#L17923">17923</span>
<span id="L17924" rel="#L17924">17924</span>
<span id="L17925" rel="#L17925">17925</span>
<span id="L17926" rel="#L17926">17926</span>
<span id="L17927" rel="#L17927">17927</span>
<span id="L17928" rel="#L17928">17928</span>
<span id="L17929" rel="#L17929">17929</span>
<span id="L17930" rel="#L17930">17930</span>
<span id="L17931" rel="#L17931">17931</span>
<span id="L17932" rel="#L17932">17932</span>
<span id="L17933" rel="#L17933">17933</span>
<span id="L17934" rel="#L17934">17934</span>
<span id="L17935" rel="#L17935">17935</span>
<span id="L17936" rel="#L17936">17936</span>
<span id="L17937" rel="#L17937">17937</span>
<span id="L17938" rel="#L17938">17938</span>
<span id="L17939" rel="#L17939">17939</span>
<span id="L17940" rel="#L17940">17940</span>
<span id="L17941" rel="#L17941">17941</span>
<span id="L17942" rel="#L17942">17942</span>
<span id="L17943" rel="#L17943">17943</span>
<span id="L17944" rel="#L17944">17944</span>
<span id="L17945" rel="#L17945">17945</span>
<span id="L17946" rel="#L17946">17946</span>
<span id="L17947" rel="#L17947">17947</span>
<span id="L17948" rel="#L17948">17948</span>
<span id="L17949" rel="#L17949">17949</span>
<span id="L17950" rel="#L17950">17950</span>
<span id="L17951" rel="#L17951">17951</span>
<span id="L17952" rel="#L17952">17952</span>
<span id="L17953" rel="#L17953">17953</span>
<span id="L17954" rel="#L17954">17954</span>
<span id="L17955" rel="#L17955">17955</span>
<span id="L17956" rel="#L17956">17956</span>
<span id="L17957" rel="#L17957">17957</span>
<span id="L17958" rel="#L17958">17958</span>
<span id="L17959" rel="#L17959">17959</span>
<span id="L17960" rel="#L17960">17960</span>
<span id="L17961" rel="#L17961">17961</span>
<span id="L17962" rel="#L17962">17962</span>
<span id="L17963" rel="#L17963">17963</span>
<span id="L17964" rel="#L17964">17964</span>
<span id="L17965" rel="#L17965">17965</span>
<span id="L17966" rel="#L17966">17966</span>
<span id="L17967" rel="#L17967">17967</span>
<span id="L17968" rel="#L17968">17968</span>
<span id="L17969" rel="#L17969">17969</span>
<span id="L17970" rel="#L17970">17970</span>
<span id="L17971" rel="#L17971">17971</span>
<span id="L17972" rel="#L17972">17972</span>
<span id="L17973" rel="#L17973">17973</span>
<span id="L17974" rel="#L17974">17974</span>
<span id="L17975" rel="#L17975">17975</span>
<span id="L17976" rel="#L17976">17976</span>
<span id="L17977" rel="#L17977">17977</span>
<span id="L17978" rel="#L17978">17978</span>
<span id="L17979" rel="#L17979">17979</span>
<span id="L17980" rel="#L17980">17980</span>
<span id="L17981" rel="#L17981">17981</span>
<span id="L17982" rel="#L17982">17982</span>
<span id="L17983" rel="#L17983">17983</span>
<span id="L17984" rel="#L17984">17984</span>
<span id="L17985" rel="#L17985">17985</span>
<span id="L17986" rel="#L17986">17986</span>
<span id="L17987" rel="#L17987">17987</span>
<span id="L17988" rel="#L17988">17988</span>
<span id="L17989" rel="#L17989">17989</span>
<span id="L17990" rel="#L17990">17990</span>
<span id="L17991" rel="#L17991">17991</span>
<span id="L17992" rel="#L17992">17992</span>
<span id="L17993" rel="#L17993">17993</span>
<span id="L17994" rel="#L17994">17994</span>
<span id="L17995" rel="#L17995">17995</span>
<span id="L17996" rel="#L17996">17996</span>
<span id="L17997" rel="#L17997">17997</span>
<span id="L17998" rel="#L17998">17998</span>
<span id="L17999" rel="#L17999">17999</span>
<span id="L18000" rel="#L18000">18000</span>
<span id="L18001" rel="#L18001">18001</span>
<span id="L18002" rel="#L18002">18002</span>
<span id="L18003" rel="#L18003">18003</span>
<span id="L18004" rel="#L18004">18004</span>
<span id="L18005" rel="#L18005">18005</span>
<span id="L18006" rel="#L18006">18006</span>
<span id="L18007" rel="#L18007">18007</span>
<span id="L18008" rel="#L18008">18008</span>
<span id="L18009" rel="#L18009">18009</span>
<span id="L18010" rel="#L18010">18010</span>
<span id="L18011" rel="#L18011">18011</span>
<span id="L18012" rel="#L18012">18012</span>
<span id="L18013" rel="#L18013">18013</span>
<span id="L18014" rel="#L18014">18014</span>
<span id="L18015" rel="#L18015">18015</span>
<span id="L18016" rel="#L18016">18016</span>
<span id="L18017" rel="#L18017">18017</span>
<span id="L18018" rel="#L18018">18018</span>
<span id="L18019" rel="#L18019">18019</span>
<span id="L18020" rel="#L18020">18020</span>
<span id="L18021" rel="#L18021">18021</span>
<span id="L18022" rel="#L18022">18022</span>
<span id="L18023" rel="#L18023">18023</span>
<span id="L18024" rel="#L18024">18024</span>
<span id="L18025" rel="#L18025">18025</span>
<span id="L18026" rel="#L18026">18026</span>
<span id="L18027" rel="#L18027">18027</span>
<span id="L18028" rel="#L18028">18028</span>
<span id="L18029" rel="#L18029">18029</span>
<span id="L18030" rel="#L18030">18030</span>
<span id="L18031" rel="#L18031">18031</span>
<span id="L18032" rel="#L18032">18032</span>
<span id="L18033" rel="#L18033">18033</span>
<span id="L18034" rel="#L18034">18034</span>
<span id="L18035" rel="#L18035">18035</span>
<span id="L18036" rel="#L18036">18036</span>
<span id="L18037" rel="#L18037">18037</span>
<span id="L18038" rel="#L18038">18038</span>
<span id="L18039" rel="#L18039">18039</span>
<span id="L18040" rel="#L18040">18040</span>
<span id="L18041" rel="#L18041">18041</span>
<span id="L18042" rel="#L18042">18042</span>
<span id="L18043" rel="#L18043">18043</span>
<span id="L18044" rel="#L18044">18044</span>
<span id="L18045" rel="#L18045">18045</span>
<span id="L18046" rel="#L18046">18046</span>
<span id="L18047" rel="#L18047">18047</span>
<span id="L18048" rel="#L18048">18048</span>
<span id="L18049" rel="#L18049">18049</span>
<span id="L18050" rel="#L18050">18050</span>
<span id="L18051" rel="#L18051">18051</span>
<span id="L18052" rel="#L18052">18052</span>
<span id="L18053" rel="#L18053">18053</span>
<span id="L18054" rel="#L18054">18054</span>
<span id="L18055" rel="#L18055">18055</span>
<span id="L18056" rel="#L18056">18056</span>
<span id="L18057" rel="#L18057">18057</span>
<span id="L18058" rel="#L18058">18058</span>
<span id="L18059" rel="#L18059">18059</span>
<span id="L18060" rel="#L18060">18060</span>
<span id="L18061" rel="#L18061">18061</span>
<span id="L18062" rel="#L18062">18062</span>
<span id="L18063" rel="#L18063">18063</span>
<span id="L18064" rel="#L18064">18064</span>
<span id="L18065" rel="#L18065">18065</span>
<span id="L18066" rel="#L18066">18066</span>
<span id="L18067" rel="#L18067">18067</span>
<span id="L18068" rel="#L18068">18068</span>
<span id="L18069" rel="#L18069">18069</span>
<span id="L18070" rel="#L18070">18070</span>
<span id="L18071" rel="#L18071">18071</span>
<span id="L18072" rel="#L18072">18072</span>
<span id="L18073" rel="#L18073">18073</span>
<span id="L18074" rel="#L18074">18074</span>
<span id="L18075" rel="#L18075">18075</span>
<span id="L18076" rel="#L18076">18076</span>
<span id="L18077" rel="#L18077">18077</span>
<span id="L18078" rel="#L18078">18078</span>
<span id="L18079" rel="#L18079">18079</span>
<span id="L18080" rel="#L18080">18080</span>
<span id="L18081" rel="#L18081">18081</span>
<span id="L18082" rel="#L18082">18082</span>
<span id="L18083" rel="#L18083">18083</span>
<span id="L18084" rel="#L18084">18084</span>
<span id="L18085" rel="#L18085">18085</span>
<span id="L18086" rel="#L18086">18086</span>
<span id="L18087" rel="#L18087">18087</span>
<span id="L18088" rel="#L18088">18088</span>
<span id="L18089" rel="#L18089">18089</span>
<span id="L18090" rel="#L18090">18090</span>
<span id="L18091" rel="#L18091">18091</span>
<span id="L18092" rel="#L18092">18092</span>
<span id="L18093" rel="#L18093">18093</span>
<span id="L18094" rel="#L18094">18094</span>
<span id="L18095" rel="#L18095">18095</span>
<span id="L18096" rel="#L18096">18096</span>
<span id="L18097" rel="#L18097">18097</span>
<span id="L18098" rel="#L18098">18098</span>
<span id="L18099" rel="#L18099">18099</span>
<span id="L18100" rel="#L18100">18100</span>
<span id="L18101" rel="#L18101">18101</span>
<span id="L18102" rel="#L18102">18102</span>
<span id="L18103" rel="#L18103">18103</span>
<span id="L18104" rel="#L18104">18104</span>
<span id="L18105" rel="#L18105">18105</span>
<span id="L18106" rel="#L18106">18106</span>
<span id="L18107" rel="#L18107">18107</span>
<span id="L18108" rel="#L18108">18108</span>
<span id="L18109" rel="#L18109">18109</span>
<span id="L18110" rel="#L18110">18110</span>
<span id="L18111" rel="#L18111">18111</span>
<span id="L18112" rel="#L18112">18112</span>
<span id="L18113" rel="#L18113">18113</span>
<span id="L18114" rel="#L18114">18114</span>
<span id="L18115" rel="#L18115">18115</span>
<span id="L18116" rel="#L18116">18116</span>
<span id="L18117" rel="#L18117">18117</span>
<span id="L18118" rel="#L18118">18118</span>
<span id="L18119" rel="#L18119">18119</span>
<span id="L18120" rel="#L18120">18120</span>
<span id="L18121" rel="#L18121">18121</span>
<span id="L18122" rel="#L18122">18122</span>
<span id="L18123" rel="#L18123">18123</span>
<span id="L18124" rel="#L18124">18124</span>
<span id="L18125" rel="#L18125">18125</span>
<span id="L18126" rel="#L18126">18126</span>
<span id="L18127" rel="#L18127">18127</span>
<span id="L18128" rel="#L18128">18128</span>
<span id="L18129" rel="#L18129">18129</span>
<span id="L18130" rel="#L18130">18130</span>
<span id="L18131" rel="#L18131">18131</span>
<span id="L18132" rel="#L18132">18132</span>
<span id="L18133" rel="#L18133">18133</span>
<span id="L18134" rel="#L18134">18134</span>
<span id="L18135" rel="#L18135">18135</span>
<span id="L18136" rel="#L18136">18136</span>
<span id="L18137" rel="#L18137">18137</span>
<span id="L18138" rel="#L18138">18138</span>
<span id="L18139" rel="#L18139">18139</span>
<span id="L18140" rel="#L18140">18140</span>
<span id="L18141" rel="#L18141">18141</span>
<span id="L18142" rel="#L18142">18142</span>
<span id="L18143" rel="#L18143">18143</span>
<span id="L18144" rel="#L18144">18144</span>
<span id="L18145" rel="#L18145">18145</span>
<span id="L18146" rel="#L18146">18146</span>
<span id="L18147" rel="#L18147">18147</span>
<span id="L18148" rel="#L18148">18148</span>
<span id="L18149" rel="#L18149">18149</span>
<span id="L18150" rel="#L18150">18150</span>
<span id="L18151" rel="#L18151">18151</span>
<span id="L18152" rel="#L18152">18152</span>
<span id="L18153" rel="#L18153">18153</span>
<span id="L18154" rel="#L18154">18154</span>
<span id="L18155" rel="#L18155">18155</span>
<span id="L18156" rel="#L18156">18156</span>
<span id="L18157" rel="#L18157">18157</span>
<span id="L18158" rel="#L18158">18158</span>
<span id="L18159" rel="#L18159">18159</span>
<span id="L18160" rel="#L18160">18160</span>
<span id="L18161" rel="#L18161">18161</span>
<span id="L18162" rel="#L18162">18162</span>
<span id="L18163" rel="#L18163">18163</span>
<span id="L18164" rel="#L18164">18164</span>
<span id="L18165" rel="#L18165">18165</span>
<span id="L18166" rel="#L18166">18166</span>
<span id="L18167" rel="#L18167">18167</span>
<span id="L18168" rel="#L18168">18168</span>
<span id="L18169" rel="#L18169">18169</span>
<span id="L18170" rel="#L18170">18170</span>
<span id="L18171" rel="#L18171">18171</span>
<span id="L18172" rel="#L18172">18172</span>
<span id="L18173" rel="#L18173">18173</span>
<span id="L18174" rel="#L18174">18174</span>
<span id="L18175" rel="#L18175">18175</span>
<span id="L18176" rel="#L18176">18176</span>
<span id="L18177" rel="#L18177">18177</span>
<span id="L18178" rel="#L18178">18178</span>
<span id="L18179" rel="#L18179">18179</span>
<span id="L18180" rel="#L18180">18180</span>
<span id="L18181" rel="#L18181">18181</span>
<span id="L18182" rel="#L18182">18182</span>
<span id="L18183" rel="#L18183">18183</span>
<span id="L18184" rel="#L18184">18184</span>
<span id="L18185" rel="#L18185">18185</span>
<span id="L18186" rel="#L18186">18186</span>
<span id="L18187" rel="#L18187">18187</span>
<span id="L18188" rel="#L18188">18188</span>
<span id="L18189" rel="#L18189">18189</span>
<span id="L18190" rel="#L18190">18190</span>
<span id="L18191" rel="#L18191">18191</span>
<span id="L18192" rel="#L18192">18192</span>
<span id="L18193" rel="#L18193">18193</span>
<span id="L18194" rel="#L18194">18194</span>
<span id="L18195" rel="#L18195">18195</span>
<span id="L18196" rel="#L18196">18196</span>
<span id="L18197" rel="#L18197">18197</span>
<span id="L18198" rel="#L18198">18198</span>
<span id="L18199" rel="#L18199">18199</span>
<span id="L18200" rel="#L18200">18200</span>
<span id="L18201" rel="#L18201">18201</span>
<span id="L18202" rel="#L18202">18202</span>
<span id="L18203" rel="#L18203">18203</span>
<span id="L18204" rel="#L18204">18204</span>
<span id="L18205" rel="#L18205">18205</span>
<span id="L18206" rel="#L18206">18206</span>
<span id="L18207" rel="#L18207">18207</span>
<span id="L18208" rel="#L18208">18208</span>
<span id="L18209" rel="#L18209">18209</span>
<span id="L18210" rel="#L18210">18210</span>
<span id="L18211" rel="#L18211">18211</span>
<span id="L18212" rel="#L18212">18212</span>
<span id="L18213" rel="#L18213">18213</span>
<span id="L18214" rel="#L18214">18214</span>
<span id="L18215" rel="#L18215">18215</span>
<span id="L18216" rel="#L18216">18216</span>
<span id="L18217" rel="#L18217">18217</span>
<span id="L18218" rel="#L18218">18218</span>
<span id="L18219" rel="#L18219">18219</span>
<span id="L18220" rel="#L18220">18220</span>
<span id="L18221" rel="#L18221">18221</span>
<span id="L18222" rel="#L18222">18222</span>
<span id="L18223" rel="#L18223">18223</span>
<span id="L18224" rel="#L18224">18224</span>
<span id="L18225" rel="#L18225">18225</span>
<span id="L18226" rel="#L18226">18226</span>
<span id="L18227" rel="#L18227">18227</span>
<span id="L18228" rel="#L18228">18228</span>
<span id="L18229" rel="#L18229">18229</span>
<span id="L18230" rel="#L18230">18230</span>
<span id="L18231" rel="#L18231">18231</span>
<span id="L18232" rel="#L18232">18232</span>
<span id="L18233" rel="#L18233">18233</span>
<span id="L18234" rel="#L18234">18234</span>
<span id="L18235" rel="#L18235">18235</span>
<span id="L18236" rel="#L18236">18236</span>
<span id="L18237" rel="#L18237">18237</span>
<span id="L18238" rel="#L18238">18238</span>
<span id="L18239" rel="#L18239">18239</span>
<span id="L18240" rel="#L18240">18240</span>
<span id="L18241" rel="#L18241">18241</span>
<span id="L18242" rel="#L18242">18242</span>
<span id="L18243" rel="#L18243">18243</span>
<span id="L18244" rel="#L18244">18244</span>
<span id="L18245" rel="#L18245">18245</span>
<span id="L18246" rel="#L18246">18246</span>
<span id="L18247" rel="#L18247">18247</span>
<span id="L18248" rel="#L18248">18248</span>
<span id="L18249" rel="#L18249">18249</span>
<span id="L18250" rel="#L18250">18250</span>
<span id="L18251" rel="#L18251">18251</span>
<span id="L18252" rel="#L18252">18252</span>
<span id="L18253" rel="#L18253">18253</span>
<span id="L18254" rel="#L18254">18254</span>
<span id="L18255" rel="#L18255">18255</span>
<span id="L18256" rel="#L18256">18256</span>
<span id="L18257" rel="#L18257">18257</span>
<span id="L18258" rel="#L18258">18258</span>
<span id="L18259" rel="#L18259">18259</span>
<span id="L18260" rel="#L18260">18260</span>
<span id="L18261" rel="#L18261">18261</span>
<span id="L18262" rel="#L18262">18262</span>
<span id="L18263" rel="#L18263">18263</span>
<span id="L18264" rel="#L18264">18264</span>
<span id="L18265" rel="#L18265">18265</span>
<span id="L18266" rel="#L18266">18266</span>
<span id="L18267" rel="#L18267">18267</span>
<span id="L18268" rel="#L18268">18268</span>
<span id="L18269" rel="#L18269">18269</span>
<span id="L18270" rel="#L18270">18270</span>
<span id="L18271" rel="#L18271">18271</span>
<span id="L18272" rel="#L18272">18272</span>
<span id="L18273" rel="#L18273">18273</span>
<span id="L18274" rel="#L18274">18274</span>
<span id="L18275" rel="#L18275">18275</span>
<span id="L18276" rel="#L18276">18276</span>
<span id="L18277" rel="#L18277">18277</span>
<span id="L18278" rel="#L18278">18278</span>
<span id="L18279" rel="#L18279">18279</span>
<span id="L18280" rel="#L18280">18280</span>
<span id="L18281" rel="#L18281">18281</span>
<span id="L18282" rel="#L18282">18282</span>
<span id="L18283" rel="#L18283">18283</span>
<span id="L18284" rel="#L18284">18284</span>
<span id="L18285" rel="#L18285">18285</span>
<span id="L18286" rel="#L18286">18286</span>
<span id="L18287" rel="#L18287">18287</span>
<span id="L18288" rel="#L18288">18288</span>
<span id="L18289" rel="#L18289">18289</span>
<span id="L18290" rel="#L18290">18290</span>
<span id="L18291" rel="#L18291">18291</span>
<span id="L18292" rel="#L18292">18292</span>
<span id="L18293" rel="#L18293">18293</span>
<span id="L18294" rel="#L18294">18294</span>
<span id="L18295" rel="#L18295">18295</span>
<span id="L18296" rel="#L18296">18296</span>
<span id="L18297" rel="#L18297">18297</span>
<span id="L18298" rel="#L18298">18298</span>
<span id="L18299" rel="#L18299">18299</span>
<span id="L18300" rel="#L18300">18300</span>
<span id="L18301" rel="#L18301">18301</span>
<span id="L18302" rel="#L18302">18302</span>
<span id="L18303" rel="#L18303">18303</span>
<span id="L18304" rel="#L18304">18304</span>
<span id="L18305" rel="#L18305">18305</span>
<span id="L18306" rel="#L18306">18306</span>
<span id="L18307" rel="#L18307">18307</span>
<span id="L18308" rel="#L18308">18308</span>
<span id="L18309" rel="#L18309">18309</span>
<span id="L18310" rel="#L18310">18310</span>
<span id="L18311" rel="#L18311">18311</span>
<span id="L18312" rel="#L18312">18312</span>
<span id="L18313" rel="#L18313">18313</span>
<span id="L18314" rel="#L18314">18314</span>
<span id="L18315" rel="#L18315">18315</span>
<span id="L18316" rel="#L18316">18316</span>
<span id="L18317" rel="#L18317">18317</span>
<span id="L18318" rel="#L18318">18318</span>
<span id="L18319" rel="#L18319">18319</span>
<span id="L18320" rel="#L18320">18320</span>
<span id="L18321" rel="#L18321">18321</span>
<span id="L18322" rel="#L18322">18322</span>
<span id="L18323" rel="#L18323">18323</span>
<span id="L18324" rel="#L18324">18324</span>
<span id="L18325" rel="#L18325">18325</span>
<span id="L18326" rel="#L18326">18326</span>
<span id="L18327" rel="#L18327">18327</span>
<span id="L18328" rel="#L18328">18328</span>
<span id="L18329" rel="#L18329">18329</span>
<span id="L18330" rel="#L18330">18330</span>
<span id="L18331" rel="#L18331">18331</span>
<span id="L18332" rel="#L18332">18332</span>
<span id="L18333" rel="#L18333">18333</span>
<span id="L18334" rel="#L18334">18334</span>
<span id="L18335" rel="#L18335">18335</span>
<span id="L18336" rel="#L18336">18336</span>
<span id="L18337" rel="#L18337">18337</span>
<span id="L18338" rel="#L18338">18338</span>
<span id="L18339" rel="#L18339">18339</span>
<span id="L18340" rel="#L18340">18340</span>
<span id="L18341" rel="#L18341">18341</span>
<span id="L18342" rel="#L18342">18342</span>
<span id="L18343" rel="#L18343">18343</span>
<span id="L18344" rel="#L18344">18344</span>
<span id="L18345" rel="#L18345">18345</span>
<span id="L18346" rel="#L18346">18346</span>
<span id="L18347" rel="#L18347">18347</span>
<span id="L18348" rel="#L18348">18348</span>
<span id="L18349" rel="#L18349">18349</span>
<span id="L18350" rel="#L18350">18350</span>
<span id="L18351" rel="#L18351">18351</span>
<span id="L18352" rel="#L18352">18352</span>
<span id="L18353" rel="#L18353">18353</span>
<span id="L18354" rel="#L18354">18354</span>
<span id="L18355" rel="#L18355">18355</span>
<span id="L18356" rel="#L18356">18356</span>
<span id="L18357" rel="#L18357">18357</span>
<span id="L18358" rel="#L18358">18358</span>
<span id="L18359" rel="#L18359">18359</span>
<span id="L18360" rel="#L18360">18360</span>
<span id="L18361" rel="#L18361">18361</span>
<span id="L18362" rel="#L18362">18362</span>
<span id="L18363" rel="#L18363">18363</span>
<span id="L18364" rel="#L18364">18364</span>
<span id="L18365" rel="#L18365">18365</span>
<span id="L18366" rel="#L18366">18366</span>
<span id="L18367" rel="#L18367">18367</span>
<span id="L18368" rel="#L18368">18368</span>
<span id="L18369" rel="#L18369">18369</span>
<span id="L18370" rel="#L18370">18370</span>
<span id="L18371" rel="#L18371">18371</span>
<span id="L18372" rel="#L18372">18372</span>
<span id="L18373" rel="#L18373">18373</span>
<span id="L18374" rel="#L18374">18374</span>
<span id="L18375" rel="#L18375">18375</span>
<span id="L18376" rel="#L18376">18376</span>
<span id="L18377" rel="#L18377">18377</span>
<span id="L18378" rel="#L18378">18378</span>
<span id="L18379" rel="#L18379">18379</span>
<span id="L18380" rel="#L18380">18380</span>
<span id="L18381" rel="#L18381">18381</span>
<span id="L18382" rel="#L18382">18382</span>
<span id="L18383" rel="#L18383">18383</span>
<span id="L18384" rel="#L18384">18384</span>
<span id="L18385" rel="#L18385">18385</span>
<span id="L18386" rel="#L18386">18386</span>
<span id="L18387" rel="#L18387">18387</span>
<span id="L18388" rel="#L18388">18388</span>
<span id="L18389" rel="#L18389">18389</span>
<span id="L18390" rel="#L18390">18390</span>
<span id="L18391" rel="#L18391">18391</span>
<span id="L18392" rel="#L18392">18392</span>
<span id="L18393" rel="#L18393">18393</span>
<span id="L18394" rel="#L18394">18394</span>
<span id="L18395" rel="#L18395">18395</span>
<span id="L18396" rel="#L18396">18396</span>
<span id="L18397" rel="#L18397">18397</span>
<span id="L18398" rel="#L18398">18398</span>
<span id="L18399" rel="#L18399">18399</span>
<span id="L18400" rel="#L18400">18400</span>
<span id="L18401" rel="#L18401">18401</span>
<span id="L18402" rel="#L18402">18402</span>
<span id="L18403" rel="#L18403">18403</span>
<span id="L18404" rel="#L18404">18404</span>
<span id="L18405" rel="#L18405">18405</span>
<span id="L18406" rel="#L18406">18406</span>
<span id="L18407" rel="#L18407">18407</span>
<span id="L18408" rel="#L18408">18408</span>
<span id="L18409" rel="#L18409">18409</span>
<span id="L18410" rel="#L18410">18410</span>
<span id="L18411" rel="#L18411">18411</span>
<span id="L18412" rel="#L18412">18412</span>
<span id="L18413" rel="#L18413">18413</span>
<span id="L18414" rel="#L18414">18414</span>
<span id="L18415" rel="#L18415">18415</span>
<span id="L18416" rel="#L18416">18416</span>
<span id="L18417" rel="#L18417">18417</span>
<span id="L18418" rel="#L18418">18418</span>
<span id="L18419" rel="#L18419">18419</span>
<span id="L18420" rel="#L18420">18420</span>
<span id="L18421" rel="#L18421">18421</span>
<span id="L18422" rel="#L18422">18422</span>
<span id="L18423" rel="#L18423">18423</span>
<span id="L18424" rel="#L18424">18424</span>
<span id="L18425" rel="#L18425">18425</span>
<span id="L18426" rel="#L18426">18426</span>
<span id="L18427" rel="#L18427">18427</span>
<span id="L18428" rel="#L18428">18428</span>
<span id="L18429" rel="#L18429">18429</span>
<span id="L18430" rel="#L18430">18430</span>
<span id="L18431" rel="#L18431">18431</span>
<span id="L18432" rel="#L18432">18432</span>
<span id="L18433" rel="#L18433">18433</span>
<span id="L18434" rel="#L18434">18434</span>
<span id="L18435" rel="#L18435">18435</span>
<span id="L18436" rel="#L18436">18436</span>
<span id="L18437" rel="#L18437">18437</span>
<span id="L18438" rel="#L18438">18438</span>
<span id="L18439" rel="#L18439">18439</span>
<span id="L18440" rel="#L18440">18440</span>
<span id="L18441" rel="#L18441">18441</span>
<span id="L18442" rel="#L18442">18442</span>
<span id="L18443" rel="#L18443">18443</span>
<span id="L18444" rel="#L18444">18444</span>
<span id="L18445" rel="#L18445">18445</span>
<span id="L18446" rel="#L18446">18446</span>
<span id="L18447" rel="#L18447">18447</span>
<span id="L18448" rel="#L18448">18448</span>
<span id="L18449" rel="#L18449">18449</span>
<span id="L18450" rel="#L18450">18450</span>
<span id="L18451" rel="#L18451">18451</span>
<span id="L18452" rel="#L18452">18452</span>
<span id="L18453" rel="#L18453">18453</span>
<span id="L18454" rel="#L18454">18454</span>
<span id="L18455" rel="#L18455">18455</span>
<span id="L18456" rel="#L18456">18456</span>
<span id="L18457" rel="#L18457">18457</span>
<span id="L18458" rel="#L18458">18458</span>
<span id="L18459" rel="#L18459">18459</span>
<span id="L18460" rel="#L18460">18460</span>
<span id="L18461" rel="#L18461">18461</span>
<span id="L18462" rel="#L18462">18462</span>
<span id="L18463" rel="#L18463">18463</span>
<span id="L18464" rel="#L18464">18464</span>
<span id="L18465" rel="#L18465">18465</span>
<span id="L18466" rel="#L18466">18466</span>
<span id="L18467" rel="#L18467">18467</span>
<span id="L18468" rel="#L18468">18468</span>
<span id="L18469" rel="#L18469">18469</span>
<span id="L18470" rel="#L18470">18470</span>
<span id="L18471" rel="#L18471">18471</span>
<span id="L18472" rel="#L18472">18472</span>
<span id="L18473" rel="#L18473">18473</span>
<span id="L18474" rel="#L18474">18474</span>
<span id="L18475" rel="#L18475">18475</span>
<span id="L18476" rel="#L18476">18476</span>
<span id="L18477" rel="#L18477">18477</span>
<span id="L18478" rel="#L18478">18478</span>
<span id="L18479" rel="#L18479">18479</span>
<span id="L18480" rel="#L18480">18480</span>
<span id="L18481" rel="#L18481">18481</span>
<span id="L18482" rel="#L18482">18482</span>
<span id="L18483" rel="#L18483">18483</span>
<span id="L18484" rel="#L18484">18484</span>
<span id="L18485" rel="#L18485">18485</span>
<span id="L18486" rel="#L18486">18486</span>
<span id="L18487" rel="#L18487">18487</span>
<span id="L18488" rel="#L18488">18488</span>
<span id="L18489" rel="#L18489">18489</span>
<span id="L18490" rel="#L18490">18490</span>
<span id="L18491" rel="#L18491">18491</span>
<span id="L18492" rel="#L18492">18492</span>
<span id="L18493" rel="#L18493">18493</span>
<span id="L18494" rel="#L18494">18494</span>
<span id="L18495" rel="#L18495">18495</span>
<span id="L18496" rel="#L18496">18496</span>
<span id="L18497" rel="#L18497">18497</span>
<span id="L18498" rel="#L18498">18498</span>
<span id="L18499" rel="#L18499">18499</span>
<span id="L18500" rel="#L18500">18500</span>
<span id="L18501" rel="#L18501">18501</span>
<span id="L18502" rel="#L18502">18502</span>
<span id="L18503" rel="#L18503">18503</span>
<span id="L18504" rel="#L18504">18504</span>
<span id="L18505" rel="#L18505">18505</span>
<span id="L18506" rel="#L18506">18506</span>
<span id="L18507" rel="#L18507">18507</span>
<span id="L18508" rel="#L18508">18508</span>
<span id="L18509" rel="#L18509">18509</span>
<span id="L18510" rel="#L18510">18510</span>
<span id="L18511" rel="#L18511">18511</span>
<span id="L18512" rel="#L18512">18512</span>
<span id="L18513" rel="#L18513">18513</span>
<span id="L18514" rel="#L18514">18514</span>
<span id="L18515" rel="#L18515">18515</span>
<span id="L18516" rel="#L18516">18516</span>
<span id="L18517" rel="#L18517">18517</span>
<span id="L18518" rel="#L18518">18518</span>
<span id="L18519" rel="#L18519">18519</span>
<span id="L18520" rel="#L18520">18520</span>
<span id="L18521" rel="#L18521">18521</span>
<span id="L18522" rel="#L18522">18522</span>
<span id="L18523" rel="#L18523">18523</span>
<span id="L18524" rel="#L18524">18524</span>
<span id="L18525" rel="#L18525">18525</span>
<span id="L18526" rel="#L18526">18526</span>
<span id="L18527" rel="#L18527">18527</span>
<span id="L18528" rel="#L18528">18528</span>
<span id="L18529" rel="#L18529">18529</span>
<span id="L18530" rel="#L18530">18530</span>
<span id="L18531" rel="#L18531">18531</span>
<span id="L18532" rel="#L18532">18532</span>
<span id="L18533" rel="#L18533">18533</span>
<span id="L18534" rel="#L18534">18534</span>
<span id="L18535" rel="#L18535">18535</span>
<span id="L18536" rel="#L18536">18536</span>
<span id="L18537" rel="#L18537">18537</span>
<span id="L18538" rel="#L18538">18538</span>
<span id="L18539" rel="#L18539">18539</span>
<span id="L18540" rel="#L18540">18540</span>
<span id="L18541" rel="#L18541">18541</span>
<span id="L18542" rel="#L18542">18542</span>
<span id="L18543" rel="#L18543">18543</span>
<span id="L18544" rel="#L18544">18544</span>
<span id="L18545" rel="#L18545">18545</span>
<span id="L18546" rel="#L18546">18546</span>
<span id="L18547" rel="#L18547">18547</span>
<span id="L18548" rel="#L18548">18548</span>
<span id="L18549" rel="#L18549">18549</span>
<span id="L18550" rel="#L18550">18550</span>
<span id="L18551" rel="#L18551">18551</span>
<span id="L18552" rel="#L18552">18552</span>
<span id="L18553" rel="#L18553">18553</span>
<span id="L18554" rel="#L18554">18554</span>
<span id="L18555" rel="#L18555">18555</span>
<span id="L18556" rel="#L18556">18556</span>
<span id="L18557" rel="#L18557">18557</span>
<span id="L18558" rel="#L18558">18558</span>
<span id="L18559" rel="#L18559">18559</span>
<span id="L18560" rel="#L18560">18560</span>
<span id="L18561" rel="#L18561">18561</span>
<span id="L18562" rel="#L18562">18562</span>
<span id="L18563" rel="#L18563">18563</span>
<span id="L18564" rel="#L18564">18564</span>
<span id="L18565" rel="#L18565">18565</span>
<span id="L18566" rel="#L18566">18566</span>
<span id="L18567" rel="#L18567">18567</span>
<span id="L18568" rel="#L18568">18568</span>
<span id="L18569" rel="#L18569">18569</span>
<span id="L18570" rel="#L18570">18570</span>
<span id="L18571" rel="#L18571">18571</span>
<span id="L18572" rel="#L18572">18572</span>
<span id="L18573" rel="#L18573">18573</span>
<span id="L18574" rel="#L18574">18574</span>
<span id="L18575" rel="#L18575">18575</span>
<span id="L18576" rel="#L18576">18576</span>
<span id="L18577" rel="#L18577">18577</span>
<span id="L18578" rel="#L18578">18578</span>
<span id="L18579" rel="#L18579">18579</span>
<span id="L18580" rel="#L18580">18580</span>
<span id="L18581" rel="#L18581">18581</span>
<span id="L18582" rel="#L18582">18582</span>
<span id="L18583" rel="#L18583">18583</span>
<span id="L18584" rel="#L18584">18584</span>
<span id="L18585" rel="#L18585">18585</span>
<span id="L18586" rel="#L18586">18586</span>
<span id="L18587" rel="#L18587">18587</span>
<span id="L18588" rel="#L18588">18588</span>
<span id="L18589" rel="#L18589">18589</span>
<span id="L18590" rel="#L18590">18590</span>
<span id="L18591" rel="#L18591">18591</span>
<span id="L18592" rel="#L18592">18592</span>
<span id="L18593" rel="#L18593">18593</span>
<span id="L18594" rel="#L18594">18594</span>
<span id="L18595" rel="#L18595">18595</span>
<span id="L18596" rel="#L18596">18596</span>
<span id="L18597" rel="#L18597">18597</span>
<span id="L18598" rel="#L18598">18598</span>
<span id="L18599" rel="#L18599">18599</span>
<span id="L18600" rel="#L18600">18600</span>
<span id="L18601" rel="#L18601">18601</span>
<span id="L18602" rel="#L18602">18602</span>
<span id="L18603" rel="#L18603">18603</span>
<span id="L18604" rel="#L18604">18604</span>
<span id="L18605" rel="#L18605">18605</span>
<span id="L18606" rel="#L18606">18606</span>
<span id="L18607" rel="#L18607">18607</span>
<span id="L18608" rel="#L18608">18608</span>
<span id="L18609" rel="#L18609">18609</span>
<span id="L18610" rel="#L18610">18610</span>
<span id="L18611" rel="#L18611">18611</span>
<span id="L18612" rel="#L18612">18612</span>
<span id="L18613" rel="#L18613">18613</span>
<span id="L18614" rel="#L18614">18614</span>
<span id="L18615" rel="#L18615">18615</span>
<span id="L18616" rel="#L18616">18616</span>
<span id="L18617" rel="#L18617">18617</span>
<span id="L18618" rel="#L18618">18618</span>
<span id="L18619" rel="#L18619">18619</span>
<span id="L18620" rel="#L18620">18620</span>
<span id="L18621" rel="#L18621">18621</span>
<span id="L18622" rel="#L18622">18622</span>
<span id="L18623" rel="#L18623">18623</span>
<span id="L18624" rel="#L18624">18624</span>
<span id="L18625" rel="#L18625">18625</span>
<span id="L18626" rel="#L18626">18626</span>
<span id="L18627" rel="#L18627">18627</span>
<span id="L18628" rel="#L18628">18628</span>
<span id="L18629" rel="#L18629">18629</span>
<span id="L18630" rel="#L18630">18630</span>
<span id="L18631" rel="#L18631">18631</span>
<span id="L18632" rel="#L18632">18632</span>
<span id="L18633" rel="#L18633">18633</span>
<span id="L18634" rel="#L18634">18634</span>
<span id="L18635" rel="#L18635">18635</span>
<span id="L18636" rel="#L18636">18636</span>
<span id="L18637" rel="#L18637">18637</span>
<span id="L18638" rel="#L18638">18638</span>
<span id="L18639" rel="#L18639">18639</span>
<span id="L18640" rel="#L18640">18640</span>
<span id="L18641" rel="#L18641">18641</span>
<span id="L18642" rel="#L18642">18642</span>
<span id="L18643" rel="#L18643">18643</span>
<span id="L18644" rel="#L18644">18644</span>
<span id="L18645" rel="#L18645">18645</span>
<span id="L18646" rel="#L18646">18646</span>
<span id="L18647" rel="#L18647">18647</span>
<span id="L18648" rel="#L18648">18648</span>
<span id="L18649" rel="#L18649">18649</span>
<span id="L18650" rel="#L18650">18650</span>
<span id="L18651" rel="#L18651">18651</span>
<span id="L18652" rel="#L18652">18652</span>
<span id="L18653" rel="#L18653">18653</span>
<span id="L18654" rel="#L18654">18654</span>
<span id="L18655" rel="#L18655">18655</span>
<span id="L18656" rel="#L18656">18656</span>
<span id="L18657" rel="#L18657">18657</span>
<span id="L18658" rel="#L18658">18658</span>
<span id="L18659" rel="#L18659">18659</span>
<span id="L18660" rel="#L18660">18660</span>
<span id="L18661" rel="#L18661">18661</span>
<span id="L18662" rel="#L18662">18662</span>
<span id="L18663" rel="#L18663">18663</span>
<span id="L18664" rel="#L18664">18664</span>
<span id="L18665" rel="#L18665">18665</span>
<span id="L18666" rel="#L18666">18666</span>
<span id="L18667" rel="#L18667">18667</span>
<span id="L18668" rel="#L18668">18668</span>
<span id="L18669" rel="#L18669">18669</span>
<span id="L18670" rel="#L18670">18670</span>
<span id="L18671" rel="#L18671">18671</span>
<span id="L18672" rel="#L18672">18672</span>
<span id="L18673" rel="#L18673">18673</span>
<span id="L18674" rel="#L18674">18674</span>
<span id="L18675" rel="#L18675">18675</span>
<span id="L18676" rel="#L18676">18676</span>
<span id="L18677" rel="#L18677">18677</span>
<span id="L18678" rel="#L18678">18678</span>
<span id="L18679" rel="#L18679">18679</span>
<span id="L18680" rel="#L18680">18680</span>
<span id="L18681" rel="#L18681">18681</span>
<span id="L18682" rel="#L18682">18682</span>
<span id="L18683" rel="#L18683">18683</span>
<span id="L18684" rel="#L18684">18684</span>
<span id="L18685" rel="#L18685">18685</span>
<span id="L18686" rel="#L18686">18686</span>
<span id="L18687" rel="#L18687">18687</span>
<span id="L18688" rel="#L18688">18688</span>
<span id="L18689" rel="#L18689">18689</span>
<span id="L18690" rel="#L18690">18690</span>
<span id="L18691" rel="#L18691">18691</span>
<span id="L18692" rel="#L18692">18692</span>
<span id="L18693" rel="#L18693">18693</span>
<span id="L18694" rel="#L18694">18694</span>
<span id="L18695" rel="#L18695">18695</span>
<span id="L18696" rel="#L18696">18696</span>
<span id="L18697" rel="#L18697">18697</span>
<span id="L18698" rel="#L18698">18698</span>
<span id="L18699" rel="#L18699">18699</span>
<span id="L18700" rel="#L18700">18700</span>
<span id="L18701" rel="#L18701">18701</span>
<span id="L18702" rel="#L18702">18702</span>
<span id="L18703" rel="#L18703">18703</span>
<span id="L18704" rel="#L18704">18704</span>
<span id="L18705" rel="#L18705">18705</span>
<span id="L18706" rel="#L18706">18706</span>
<span id="L18707" rel="#L18707">18707</span>
<span id="L18708" rel="#L18708">18708</span>
<span id="L18709" rel="#L18709">18709</span>
<span id="L18710" rel="#L18710">18710</span>
<span id="L18711" rel="#L18711">18711</span>
<span id="L18712" rel="#L18712">18712</span>
<span id="L18713" rel="#L18713">18713</span>
<span id="L18714" rel="#L18714">18714</span>
<span id="L18715" rel="#L18715">18715</span>
<span id="L18716" rel="#L18716">18716</span>
<span id="L18717" rel="#L18717">18717</span>
<span id="L18718" rel="#L18718">18718</span>
<span id="L18719" rel="#L18719">18719</span>
<span id="L18720" rel="#L18720">18720</span>
<span id="L18721" rel="#L18721">18721</span>
<span id="L18722" rel="#L18722">18722</span>
<span id="L18723" rel="#L18723">18723</span>
<span id="L18724" rel="#L18724">18724</span>
<span id="L18725" rel="#L18725">18725</span>
<span id="L18726" rel="#L18726">18726</span>
<span id="L18727" rel="#L18727">18727</span>
<span id="L18728" rel="#L18728">18728</span>
<span id="L18729" rel="#L18729">18729</span>
<span id="L18730" rel="#L18730">18730</span>
<span id="L18731" rel="#L18731">18731</span>
<span id="L18732" rel="#L18732">18732</span>
<span id="L18733" rel="#L18733">18733</span>
<span id="L18734" rel="#L18734">18734</span>
<span id="L18735" rel="#L18735">18735</span>
<span id="L18736" rel="#L18736">18736</span>
<span id="L18737" rel="#L18737">18737</span>
<span id="L18738" rel="#L18738">18738</span>
<span id="L18739" rel="#L18739">18739</span>
<span id="L18740" rel="#L18740">18740</span>
<span id="L18741" rel="#L18741">18741</span>
<span id="L18742" rel="#L18742">18742</span>
<span id="L18743" rel="#L18743">18743</span>
<span id="L18744" rel="#L18744">18744</span>
<span id="L18745" rel="#L18745">18745</span>
<span id="L18746" rel="#L18746">18746</span>
<span id="L18747" rel="#L18747">18747</span>
<span id="L18748" rel="#L18748">18748</span>
<span id="L18749" rel="#L18749">18749</span>
<span id="L18750" rel="#L18750">18750</span>
<span id="L18751" rel="#L18751">18751</span>
<span id="L18752" rel="#L18752">18752</span>
<span id="L18753" rel="#L18753">18753</span>
<span id="L18754" rel="#L18754">18754</span>
<span id="L18755" rel="#L18755">18755</span>
<span id="L18756" rel="#L18756">18756</span>
<span id="L18757" rel="#L18757">18757</span>
<span id="L18758" rel="#L18758">18758</span>
<span id="L18759" rel="#L18759">18759</span>
<span id="L18760" rel="#L18760">18760</span>
<span id="L18761" rel="#L18761">18761</span>
<span id="L18762" rel="#L18762">18762</span>
<span id="L18763" rel="#L18763">18763</span>
<span id="L18764" rel="#L18764">18764</span>
<span id="L18765" rel="#L18765">18765</span>
<span id="L18766" rel="#L18766">18766</span>
<span id="L18767" rel="#L18767">18767</span>
<span id="L18768" rel="#L18768">18768</span>
<span id="L18769" rel="#L18769">18769</span>
<span id="L18770" rel="#L18770">18770</span>
<span id="L18771" rel="#L18771">18771</span>
<span id="L18772" rel="#L18772">18772</span>
<span id="L18773" rel="#L18773">18773</span>
<span id="L18774" rel="#L18774">18774</span>
<span id="L18775" rel="#L18775">18775</span>
<span id="L18776" rel="#L18776">18776</span>
<span id="L18777" rel="#L18777">18777</span>
<span id="L18778" rel="#L18778">18778</span>
<span id="L18779" rel="#L18779">18779</span>
<span id="L18780" rel="#L18780">18780</span>
<span id="L18781" rel="#L18781">18781</span>
<span id="L18782" rel="#L18782">18782</span>
<span id="L18783" rel="#L18783">18783</span>
<span id="L18784" rel="#L18784">18784</span>
<span id="L18785" rel="#L18785">18785</span>
<span id="L18786" rel="#L18786">18786</span>
<span id="L18787" rel="#L18787">18787</span>
<span id="L18788" rel="#L18788">18788</span>
<span id="L18789" rel="#L18789">18789</span>
<span id="L18790" rel="#L18790">18790</span>
<span id="L18791" rel="#L18791">18791</span>
<span id="L18792" rel="#L18792">18792</span>
<span id="L18793" rel="#L18793">18793</span>
<span id="L18794" rel="#L18794">18794</span>
<span id="L18795" rel="#L18795">18795</span>
<span id="L18796" rel="#L18796">18796</span>
<span id="L18797" rel="#L18797">18797</span>
<span id="L18798" rel="#L18798">18798</span>
<span id="L18799" rel="#L18799">18799</span>
<span id="L18800" rel="#L18800">18800</span>
<span id="L18801" rel="#L18801">18801</span>
<span id="L18802" rel="#L18802">18802</span>
<span id="L18803" rel="#L18803">18803</span>
<span id="L18804" rel="#L18804">18804</span>
<span id="L18805" rel="#L18805">18805</span>
<span id="L18806" rel="#L18806">18806</span>
<span id="L18807" rel="#L18807">18807</span>
<span id="L18808" rel="#L18808">18808</span>
<span id="L18809" rel="#L18809">18809</span>
<span id="L18810" rel="#L18810">18810</span>
<span id="L18811" rel="#L18811">18811</span>
<span id="L18812" rel="#L18812">18812</span>
<span id="L18813" rel="#L18813">18813</span>
<span id="L18814" rel="#L18814">18814</span>
<span id="L18815" rel="#L18815">18815</span>
<span id="L18816" rel="#L18816">18816</span>
<span id="L18817" rel="#L18817">18817</span>
<span id="L18818" rel="#L18818">18818</span>
<span id="L18819" rel="#L18819">18819</span>
<span id="L18820" rel="#L18820">18820</span>
<span id="L18821" rel="#L18821">18821</span>
<span id="L18822" rel="#L18822">18822</span>
<span id="L18823" rel="#L18823">18823</span>
<span id="L18824" rel="#L18824">18824</span>
<span id="L18825" rel="#L18825">18825</span>
<span id="L18826" rel="#L18826">18826</span>
<span id="L18827" rel="#L18827">18827</span>
<span id="L18828" rel="#L18828">18828</span>
<span id="L18829" rel="#L18829">18829</span>
<span id="L18830" rel="#L18830">18830</span>
<span id="L18831" rel="#L18831">18831</span>
<span id="L18832" rel="#L18832">18832</span>
<span id="L18833" rel="#L18833">18833</span>
<span id="L18834" rel="#L18834">18834</span>
<span id="L18835" rel="#L18835">18835</span>
<span id="L18836" rel="#L18836">18836</span>
<span id="L18837" rel="#L18837">18837</span>
<span id="L18838" rel="#L18838">18838</span>
<span id="L18839" rel="#L18839">18839</span>
<span id="L18840" rel="#L18840">18840</span>
<span id="L18841" rel="#L18841">18841</span>
<span id="L18842" rel="#L18842">18842</span>
<span id="L18843" rel="#L18843">18843</span>
<span id="L18844" rel="#L18844">18844</span>
<span id="L18845" rel="#L18845">18845</span>
<span id="L18846" rel="#L18846">18846</span>
<span id="L18847" rel="#L18847">18847</span>
<span id="L18848" rel="#L18848">18848</span>
<span id="L18849" rel="#L18849">18849</span>
<span id="L18850" rel="#L18850">18850</span>
<span id="L18851" rel="#L18851">18851</span>
<span id="L18852" rel="#L18852">18852</span>
<span id="L18853" rel="#L18853">18853</span>
<span id="L18854" rel="#L18854">18854</span>
<span id="L18855" rel="#L18855">18855</span>
<span id="L18856" rel="#L18856">18856</span>
<span id="L18857" rel="#L18857">18857</span>
<span id="L18858" rel="#L18858">18858</span>
<span id="L18859" rel="#L18859">18859</span>
<span id="L18860" rel="#L18860">18860</span>
<span id="L18861" rel="#L18861">18861</span>
<span id="L18862" rel="#L18862">18862</span>
<span id="L18863" rel="#L18863">18863</span>
<span id="L18864" rel="#L18864">18864</span>
<span id="L18865" rel="#L18865">18865</span>
<span id="L18866" rel="#L18866">18866</span>
<span id="L18867" rel="#L18867">18867</span>
<span id="L18868" rel="#L18868">18868</span>
<span id="L18869" rel="#L18869">18869</span>
<span id="L18870" rel="#L18870">18870</span>
<span id="L18871" rel="#L18871">18871</span>
<span id="L18872" rel="#L18872">18872</span>
<span id="L18873" rel="#L18873">18873</span>
<span id="L18874" rel="#L18874">18874</span>
<span id="L18875" rel="#L18875">18875</span>
<span id="L18876" rel="#L18876">18876</span>
<span id="L18877" rel="#L18877">18877</span>
<span id="L18878" rel="#L18878">18878</span>
<span id="L18879" rel="#L18879">18879</span>
<span id="L18880" rel="#L18880">18880</span>
<span id="L18881" rel="#L18881">18881</span>
<span id="L18882" rel="#L18882">18882</span>
<span id="L18883" rel="#L18883">18883</span>
<span id="L18884" rel="#L18884">18884</span>
<span id="L18885" rel="#L18885">18885</span>
<span id="L18886" rel="#L18886">18886</span>
<span id="L18887" rel="#L18887">18887</span>
<span id="L18888" rel="#L18888">18888</span>
<span id="L18889" rel="#L18889">18889</span>
<span id="L18890" rel="#L18890">18890</span>
<span id="L18891" rel="#L18891">18891</span>
<span id="L18892" rel="#L18892">18892</span>
<span id="L18893" rel="#L18893">18893</span>
<span id="L18894" rel="#L18894">18894</span>
<span id="L18895" rel="#L18895">18895</span>
<span id="L18896" rel="#L18896">18896</span>
<span id="L18897" rel="#L18897">18897</span>
<span id="L18898" rel="#L18898">18898</span>
<span id="L18899" rel="#L18899">18899</span>
<span id="L18900" rel="#L18900">18900</span>
<span id="L18901" rel="#L18901">18901</span>
<span id="L18902" rel="#L18902">18902</span>
<span id="L18903" rel="#L18903">18903</span>
<span id="L18904" rel="#L18904">18904</span>
<span id="L18905" rel="#L18905">18905</span>
<span id="L18906" rel="#L18906">18906</span>
<span id="L18907" rel="#L18907">18907</span>
<span id="L18908" rel="#L18908">18908</span>
<span id="L18909" rel="#L18909">18909</span>
<span id="L18910" rel="#L18910">18910</span>
<span id="L18911" rel="#L18911">18911</span>
<span id="L18912" rel="#L18912">18912</span>
<span id="L18913" rel="#L18913">18913</span>
<span id="L18914" rel="#L18914">18914</span>
<span id="L18915" rel="#L18915">18915</span>
<span id="L18916" rel="#L18916">18916</span>
<span id="L18917" rel="#L18917">18917</span>
<span id="L18918" rel="#L18918">18918</span>
<span id="L18919" rel="#L18919">18919</span>
<span id="L18920" rel="#L18920">18920</span>
<span id="L18921" rel="#L18921">18921</span>
<span id="L18922" rel="#L18922">18922</span>
<span id="L18923" rel="#L18923">18923</span>
<span id="L18924" rel="#L18924">18924</span>
<span id="L18925" rel="#L18925">18925</span>
<span id="L18926" rel="#L18926">18926</span>
<span id="L18927" rel="#L18927">18927</span>
<span id="L18928" rel="#L18928">18928</span>
<span id="L18929" rel="#L18929">18929</span>
<span id="L18930" rel="#L18930">18930</span>
<span id="L18931" rel="#L18931">18931</span>
<span id="L18932" rel="#L18932">18932</span>
<span id="L18933" rel="#L18933">18933</span>
<span id="L18934" rel="#L18934">18934</span>
<span id="L18935" rel="#L18935">18935</span>
<span id="L18936" rel="#L18936">18936</span>
<span id="L18937" rel="#L18937">18937</span>
<span id="L18938" rel="#L18938">18938</span>
<span id="L18939" rel="#L18939">18939</span>
<span id="L18940" rel="#L18940">18940</span>
<span id="L18941" rel="#L18941">18941</span>
<span id="L18942" rel="#L18942">18942</span>
<span id="L18943" rel="#L18943">18943</span>
<span id="L18944" rel="#L18944">18944</span>
<span id="L18945" rel="#L18945">18945</span>
<span id="L18946" rel="#L18946">18946</span>
<span id="L18947" rel="#L18947">18947</span>
<span id="L18948" rel="#L18948">18948</span>
<span id="L18949" rel="#L18949">18949</span>
<span id="L18950" rel="#L18950">18950</span>
<span id="L18951" rel="#L18951">18951</span>
<span id="L18952" rel="#L18952">18952</span>
<span id="L18953" rel="#L18953">18953</span>
<span id="L18954" rel="#L18954">18954</span>
<span id="L18955" rel="#L18955">18955</span>
<span id="L18956" rel="#L18956">18956</span>
<span id="L18957" rel="#L18957">18957</span>
<span id="L18958" rel="#L18958">18958</span>
<span id="L18959" rel="#L18959">18959</span>
<span id="L18960" rel="#L18960">18960</span>
<span id="L18961" rel="#L18961">18961</span>
<span id="L18962" rel="#L18962">18962</span>
<span id="L18963" rel="#L18963">18963</span>
<span id="L18964" rel="#L18964">18964</span>
<span id="L18965" rel="#L18965">18965</span>
<span id="L18966" rel="#L18966">18966</span>
<span id="L18967" rel="#L18967">18967</span>
<span id="L18968" rel="#L18968">18968</span>
<span id="L18969" rel="#L18969">18969</span>
<span id="L18970" rel="#L18970">18970</span>
<span id="L18971" rel="#L18971">18971</span>
<span id="L18972" rel="#L18972">18972</span>
<span id="L18973" rel="#L18973">18973</span>
<span id="L18974" rel="#L18974">18974</span>
<span id="L18975" rel="#L18975">18975</span>
<span id="L18976" rel="#L18976">18976</span>
<span id="L18977" rel="#L18977">18977</span>
<span id="L18978" rel="#L18978">18978</span>
<span id="L18979" rel="#L18979">18979</span>
<span id="L18980" rel="#L18980">18980</span>
<span id="L18981" rel="#L18981">18981</span>
<span id="L18982" rel="#L18982">18982</span>
<span id="L18983" rel="#L18983">18983</span>
<span id="L18984" rel="#L18984">18984</span>
<span id="L18985" rel="#L18985">18985</span>
<span id="L18986" rel="#L18986">18986</span>
<span id="L18987" rel="#L18987">18987</span>
<span id="L18988" rel="#L18988">18988</span>
<span id="L18989" rel="#L18989">18989</span>
<span id="L18990" rel="#L18990">18990</span>
<span id="L18991" rel="#L18991">18991</span>
<span id="L18992" rel="#L18992">18992</span>
<span id="L18993" rel="#L18993">18993</span>
<span id="L18994" rel="#L18994">18994</span>
<span id="L18995" rel="#L18995">18995</span>
<span id="L18996" rel="#L18996">18996</span>
<span id="L18997" rel="#L18997">18997</span>
<span id="L18998" rel="#L18998">18998</span>
<span id="L18999" rel="#L18999">18999</span>
<span id="L19000" rel="#L19000">19000</span>
<span id="L19001" rel="#L19001">19001</span>
<span id="L19002" rel="#L19002">19002</span>
<span id="L19003" rel="#L19003">19003</span>
<span id="L19004" rel="#L19004">19004</span>
<span id="L19005" rel="#L19005">19005</span>
<span id="L19006" rel="#L19006">19006</span>
<span id="L19007" rel="#L19007">19007</span>
<span id="L19008" rel="#L19008">19008</span>
<span id="L19009" rel="#L19009">19009</span>
<span id="L19010" rel="#L19010">19010</span>
<span id="L19011" rel="#L19011">19011</span>
<span id="L19012" rel="#L19012">19012</span>
<span id="L19013" rel="#L19013">19013</span>
<span id="L19014" rel="#L19014">19014</span>
<span id="L19015" rel="#L19015">19015</span>
<span id="L19016" rel="#L19016">19016</span>
<span id="L19017" rel="#L19017">19017</span>
<span id="L19018" rel="#L19018">19018</span>
<span id="L19019" rel="#L19019">19019</span>
<span id="L19020" rel="#L19020">19020</span>
<span id="L19021" rel="#L19021">19021</span>
<span id="L19022" rel="#L19022">19022</span>
<span id="L19023" rel="#L19023">19023</span>
<span id="L19024" rel="#L19024">19024</span>
<span id="L19025" rel="#L19025">19025</span>
<span id="L19026" rel="#L19026">19026</span>
<span id="L19027" rel="#L19027">19027</span>
<span id="L19028" rel="#L19028">19028</span>
<span id="L19029" rel="#L19029">19029</span>
<span id="L19030" rel="#L19030">19030</span>
<span id="L19031" rel="#L19031">19031</span>
<span id="L19032" rel="#L19032">19032</span>
<span id="L19033" rel="#L19033">19033</span>
<span id="L19034" rel="#L19034">19034</span>
<span id="L19035" rel="#L19035">19035</span>
<span id="L19036" rel="#L19036">19036</span>
<span id="L19037" rel="#L19037">19037</span>
<span id="L19038" rel="#L19038">19038</span>
<span id="L19039" rel="#L19039">19039</span>
<span id="L19040" rel="#L19040">19040</span>
<span id="L19041" rel="#L19041">19041</span>
<span id="L19042" rel="#L19042">19042</span>
<span id="L19043" rel="#L19043">19043</span>
<span id="L19044" rel="#L19044">19044</span>
<span id="L19045" rel="#L19045">19045</span>
<span id="L19046" rel="#L19046">19046</span>
<span id="L19047" rel="#L19047">19047</span>
<span id="L19048" rel="#L19048">19048</span>
<span id="L19049" rel="#L19049">19049</span>
<span id="L19050" rel="#L19050">19050</span>
<span id="L19051" rel="#L19051">19051</span>
<span id="L19052" rel="#L19052">19052</span>
<span id="L19053" rel="#L19053">19053</span>
<span id="L19054" rel="#L19054">19054</span>
<span id="L19055" rel="#L19055">19055</span>
<span id="L19056" rel="#L19056">19056</span>
<span id="L19057" rel="#L19057">19057</span>
<span id="L19058" rel="#L19058">19058</span>
<span id="L19059" rel="#L19059">19059</span>
<span id="L19060" rel="#L19060">19060</span>
<span id="L19061" rel="#L19061">19061</span>
<span id="L19062" rel="#L19062">19062</span>
<span id="L19063" rel="#L19063">19063</span>
<span id="L19064" rel="#L19064">19064</span>
<span id="L19065" rel="#L19065">19065</span>
<span id="L19066" rel="#L19066">19066</span>
<span id="L19067" rel="#L19067">19067</span>
<span id="L19068" rel="#L19068">19068</span>
<span id="L19069" rel="#L19069">19069</span>
<span id="L19070" rel="#L19070">19070</span>
<span id="L19071" rel="#L19071">19071</span>
<span id="L19072" rel="#L19072">19072</span>
<span id="L19073" rel="#L19073">19073</span>
<span id="L19074" rel="#L19074">19074</span>
<span id="L19075" rel="#L19075">19075</span>
<span id="L19076" rel="#L19076">19076</span>
<span id="L19077" rel="#L19077">19077</span>
<span id="L19078" rel="#L19078">19078</span>
<span id="L19079" rel="#L19079">19079</span>
<span id="L19080" rel="#L19080">19080</span>
<span id="L19081" rel="#L19081">19081</span>
<span id="L19082" rel="#L19082">19082</span>
<span id="L19083" rel="#L19083">19083</span>
<span id="L19084" rel="#L19084">19084</span>
<span id="L19085" rel="#L19085">19085</span>
<span id="L19086" rel="#L19086">19086</span>
<span id="L19087" rel="#L19087">19087</span>
<span id="L19088" rel="#L19088">19088</span>
<span id="L19089" rel="#L19089">19089</span>
<span id="L19090" rel="#L19090">19090</span>
<span id="L19091" rel="#L19091">19091</span>
<span id="L19092" rel="#L19092">19092</span>
<span id="L19093" rel="#L19093">19093</span>
<span id="L19094" rel="#L19094">19094</span>
<span id="L19095" rel="#L19095">19095</span>
<span id="L19096" rel="#L19096">19096</span>
<span id="L19097" rel="#L19097">19097</span>
<span id="L19098" rel="#L19098">19098</span>
<span id="L19099" rel="#L19099">19099</span>
<span id="L19100" rel="#L19100">19100</span>
<span id="L19101" rel="#L19101">19101</span>
<span id="L19102" rel="#L19102">19102</span>
<span id="L19103" rel="#L19103">19103</span>
<span id="L19104" rel="#L19104">19104</span>
<span id="L19105" rel="#L19105">19105</span>
<span id="L19106" rel="#L19106">19106</span>
<span id="L19107" rel="#L19107">19107</span>
<span id="L19108" rel="#L19108">19108</span>
<span id="L19109" rel="#L19109">19109</span>
<span id="L19110" rel="#L19110">19110</span>
<span id="L19111" rel="#L19111">19111</span>
<span id="L19112" rel="#L19112">19112</span>
<span id="L19113" rel="#L19113">19113</span>
<span id="L19114" rel="#L19114">19114</span>
<span id="L19115" rel="#L19115">19115</span>
<span id="L19116" rel="#L19116">19116</span>
<span id="L19117" rel="#L19117">19117</span>
<span id="L19118" rel="#L19118">19118</span>
<span id="L19119" rel="#L19119">19119</span>
<span id="L19120" rel="#L19120">19120</span>
<span id="L19121" rel="#L19121">19121</span>
<span id="L19122" rel="#L19122">19122</span>
<span id="L19123" rel="#L19123">19123</span>
<span id="L19124" rel="#L19124">19124</span>
<span id="L19125" rel="#L19125">19125</span>
<span id="L19126" rel="#L19126">19126</span>
<span id="L19127" rel="#L19127">19127</span>
<span id="L19128" rel="#L19128">19128</span>
<span id="L19129" rel="#L19129">19129</span>
<span id="L19130" rel="#L19130">19130</span>
<span id="L19131" rel="#L19131">19131</span>
<span id="L19132" rel="#L19132">19132</span>
<span id="L19133" rel="#L19133">19133</span>
<span id="L19134" rel="#L19134">19134</span>
<span id="L19135" rel="#L19135">19135</span>
<span id="L19136" rel="#L19136">19136</span>
<span id="L19137" rel="#L19137">19137</span>
<span id="L19138" rel="#L19138">19138</span>
<span id="L19139" rel="#L19139">19139</span>
<span id="L19140" rel="#L19140">19140</span>
<span id="L19141" rel="#L19141">19141</span>
<span id="L19142" rel="#L19142">19142</span>
<span id="L19143" rel="#L19143">19143</span>
<span id="L19144" rel="#L19144">19144</span>
<span id="L19145" rel="#L19145">19145</span>
<span id="L19146" rel="#L19146">19146</span>
<span id="L19147" rel="#L19147">19147</span>
<span id="L19148" rel="#L19148">19148</span>
<span id="L19149" rel="#L19149">19149</span>
<span id="L19150" rel="#L19150">19150</span>
<span id="L19151" rel="#L19151">19151</span>
<span id="L19152" rel="#L19152">19152</span>
<span id="L19153" rel="#L19153">19153</span>
<span id="L19154" rel="#L19154">19154</span>
<span id="L19155" rel="#L19155">19155</span>
<span id="L19156" rel="#L19156">19156</span>
<span id="L19157" rel="#L19157">19157</span>
<span id="L19158" rel="#L19158">19158</span>
<span id="L19159" rel="#L19159">19159</span>
<span id="L19160" rel="#L19160">19160</span>
<span id="L19161" rel="#L19161">19161</span>
<span id="L19162" rel="#L19162">19162</span>
<span id="L19163" rel="#L19163">19163</span>
<span id="L19164" rel="#L19164">19164</span>
<span id="L19165" rel="#L19165">19165</span>
<span id="L19166" rel="#L19166">19166</span>
<span id="L19167" rel="#L19167">19167</span>
<span id="L19168" rel="#L19168">19168</span>
<span id="L19169" rel="#L19169">19169</span>
<span id="L19170" rel="#L19170">19170</span>
<span id="L19171" rel="#L19171">19171</span>
<span id="L19172" rel="#L19172">19172</span>
<span id="L19173" rel="#L19173">19173</span>
<span id="L19174" rel="#L19174">19174</span>
<span id="L19175" rel="#L19175">19175</span>
<span id="L19176" rel="#L19176">19176</span>
<span id="L19177" rel="#L19177">19177</span>
<span id="L19178" rel="#L19178">19178</span>
<span id="L19179" rel="#L19179">19179</span>
<span id="L19180" rel="#L19180">19180</span>
<span id="L19181" rel="#L19181">19181</span>
<span id="L19182" rel="#L19182">19182</span>
<span id="L19183" rel="#L19183">19183</span>
<span id="L19184" rel="#L19184">19184</span>
<span id="L19185" rel="#L19185">19185</span>
<span id="L19186" rel="#L19186">19186</span>
<span id="L19187" rel="#L19187">19187</span>
<span id="L19188" rel="#L19188">19188</span>
<span id="L19189" rel="#L19189">19189</span>
<span id="L19190" rel="#L19190">19190</span>
<span id="L19191" rel="#L19191">19191</span>
<span id="L19192" rel="#L19192">19192</span>
<span id="L19193" rel="#L19193">19193</span>
<span id="L19194" rel="#L19194">19194</span>
<span id="L19195" rel="#L19195">19195</span>
<span id="L19196" rel="#L19196">19196</span>
<span id="L19197" rel="#L19197">19197</span>
<span id="L19198" rel="#L19198">19198</span>
<span id="L19199" rel="#L19199">19199</span>
<span id="L19200" rel="#L19200">19200</span>
<span id="L19201" rel="#L19201">19201</span>
<span id="L19202" rel="#L19202">19202</span>
<span id="L19203" rel="#L19203">19203</span>
<span id="L19204" rel="#L19204">19204</span>
<span id="L19205" rel="#L19205">19205</span>
<span id="L19206" rel="#L19206">19206</span>
<span id="L19207" rel="#L19207">19207</span>
<span id="L19208" rel="#L19208">19208</span>
<span id="L19209" rel="#L19209">19209</span>
<span id="L19210" rel="#L19210">19210</span>
<span id="L19211" rel="#L19211">19211</span>
<span id="L19212" rel="#L19212">19212</span>
<span id="L19213" rel="#L19213">19213</span>
<span id="L19214" rel="#L19214">19214</span>
<span id="L19215" rel="#L19215">19215</span>
<span id="L19216" rel="#L19216">19216</span>
<span id="L19217" rel="#L19217">19217</span>
<span id="L19218" rel="#L19218">19218</span>
<span id="L19219" rel="#L19219">19219</span>
<span id="L19220" rel="#L19220">19220</span>
<span id="L19221" rel="#L19221">19221</span>
<span id="L19222" rel="#L19222">19222</span>
<span id="L19223" rel="#L19223">19223</span>
<span id="L19224" rel="#L19224">19224</span>
<span id="L19225" rel="#L19225">19225</span>
<span id="L19226" rel="#L19226">19226</span>
<span id="L19227" rel="#L19227">19227</span>
<span id="L19228" rel="#L19228">19228</span>
<span id="L19229" rel="#L19229">19229</span>
<span id="L19230" rel="#L19230">19230</span>
<span id="L19231" rel="#L19231">19231</span>
<span id="L19232" rel="#L19232">19232</span>
<span id="L19233" rel="#L19233">19233</span>
<span id="L19234" rel="#L19234">19234</span>
<span id="L19235" rel="#L19235">19235</span>
<span id="L19236" rel="#L19236">19236</span>
<span id="L19237" rel="#L19237">19237</span>
<span id="L19238" rel="#L19238">19238</span>
<span id="L19239" rel="#L19239">19239</span>
<span id="L19240" rel="#L19240">19240</span>
<span id="L19241" rel="#L19241">19241</span>
<span id="L19242" rel="#L19242">19242</span>
<span id="L19243" rel="#L19243">19243</span>
<span id="L19244" rel="#L19244">19244</span>
<span id="L19245" rel="#L19245">19245</span>
<span id="L19246" rel="#L19246">19246</span>
<span id="L19247" rel="#L19247">19247</span>
<span id="L19248" rel="#L19248">19248</span>
<span id="L19249" rel="#L19249">19249</span>
<span id="L19250" rel="#L19250">19250</span>
<span id="L19251" rel="#L19251">19251</span>
<span id="L19252" rel="#L19252">19252</span>
<span id="L19253" rel="#L19253">19253</span>
<span id="L19254" rel="#L19254">19254</span>
<span id="L19255" rel="#L19255">19255</span>
<span id="L19256" rel="#L19256">19256</span>
<span id="L19257" rel="#L19257">19257</span>
<span id="L19258" rel="#L19258">19258</span>
<span id="L19259" rel="#L19259">19259</span>
<span id="L19260" rel="#L19260">19260</span>
<span id="L19261" rel="#L19261">19261</span>
<span id="L19262" rel="#L19262">19262</span>
<span id="L19263" rel="#L19263">19263</span>
<span id="L19264" rel="#L19264">19264</span>
<span id="L19265" rel="#L19265">19265</span>
<span id="L19266" rel="#L19266">19266</span>
<span id="L19267" rel="#L19267">19267</span>
<span id="L19268" rel="#L19268">19268</span>
<span id="L19269" rel="#L19269">19269</span>
<span id="L19270" rel="#L19270">19270</span>
<span id="L19271" rel="#L19271">19271</span>
<span id="L19272" rel="#L19272">19272</span>
<span id="L19273" rel="#L19273">19273</span>
<span id="L19274" rel="#L19274">19274</span>
<span id="L19275" rel="#L19275">19275</span>
<span id="L19276" rel="#L19276">19276</span>
<span id="L19277" rel="#L19277">19277</span>
<span id="L19278" rel="#L19278">19278</span>
<span id="L19279" rel="#L19279">19279</span>
<span id="L19280" rel="#L19280">19280</span>
<span id="L19281" rel="#L19281">19281</span>
<span id="L19282" rel="#L19282">19282</span>
<span id="L19283" rel="#L19283">19283</span>
<span id="L19284" rel="#L19284">19284</span>
<span id="L19285" rel="#L19285">19285</span>
<span id="L19286" rel="#L19286">19286</span>
<span id="L19287" rel="#L19287">19287</span>
<span id="L19288" rel="#L19288">19288</span>
<span id="L19289" rel="#L19289">19289</span>
<span id="L19290" rel="#L19290">19290</span>
<span id="L19291" rel="#L19291">19291</span>
<span id="L19292" rel="#L19292">19292</span>
<span id="L19293" rel="#L19293">19293</span>
<span id="L19294" rel="#L19294">19294</span>
<span id="L19295" rel="#L19295">19295</span>
<span id="L19296" rel="#L19296">19296</span>
<span id="L19297" rel="#L19297">19297</span>
<span id="L19298" rel="#L19298">19298</span>
<span id="L19299" rel="#L19299">19299</span>
<span id="L19300" rel="#L19300">19300</span>
<span id="L19301" rel="#L19301">19301</span>
<span id="L19302" rel="#L19302">19302</span>
<span id="L19303" rel="#L19303">19303</span>
<span id="L19304" rel="#L19304">19304</span>
<span id="L19305" rel="#L19305">19305</span>
<span id="L19306" rel="#L19306">19306</span>
<span id="L19307" rel="#L19307">19307</span>
<span id="L19308" rel="#L19308">19308</span>
<span id="L19309" rel="#L19309">19309</span>
<span id="L19310" rel="#L19310">19310</span>
<span id="L19311" rel="#L19311">19311</span>
<span id="L19312" rel="#L19312">19312</span>
<span id="L19313" rel="#L19313">19313</span>
<span id="L19314" rel="#L19314">19314</span>
<span id="L19315" rel="#L19315">19315</span>
<span id="L19316" rel="#L19316">19316</span>
<span id="L19317" rel="#L19317">19317</span>
<span id="L19318" rel="#L19318">19318</span>
<span id="L19319" rel="#L19319">19319</span>
<span id="L19320" rel="#L19320">19320</span>
<span id="L19321" rel="#L19321">19321</span>
<span id="L19322" rel="#L19322">19322</span>
<span id="L19323" rel="#L19323">19323</span>
<span id="L19324" rel="#L19324">19324</span>
<span id="L19325" rel="#L19325">19325</span>
<span id="L19326" rel="#L19326">19326</span>
<span id="L19327" rel="#L19327">19327</span>
<span id="L19328" rel="#L19328">19328</span>
<span id="L19329" rel="#L19329">19329</span>
<span id="L19330" rel="#L19330">19330</span>
<span id="L19331" rel="#L19331">19331</span>
<span id="L19332" rel="#L19332">19332</span>
<span id="L19333" rel="#L19333">19333</span>
<span id="L19334" rel="#L19334">19334</span>
<span id="L19335" rel="#L19335">19335</span>
<span id="L19336" rel="#L19336">19336</span>
<span id="L19337" rel="#L19337">19337</span>
<span id="L19338" rel="#L19338">19338</span>
<span id="L19339" rel="#L19339">19339</span>
<span id="L19340" rel="#L19340">19340</span>
<span id="L19341" rel="#L19341">19341</span>
<span id="L19342" rel="#L19342">19342</span>
<span id="L19343" rel="#L19343">19343</span>
<span id="L19344" rel="#L19344">19344</span>
<span id="L19345" rel="#L19345">19345</span>
<span id="L19346" rel="#L19346">19346</span>
<span id="L19347" rel="#L19347">19347</span>
<span id="L19348" rel="#L19348">19348</span>
<span id="L19349" rel="#L19349">19349</span>
<span id="L19350" rel="#L19350">19350</span>
<span id="L19351" rel="#L19351">19351</span>
<span id="L19352" rel="#L19352">19352</span>
<span id="L19353" rel="#L19353">19353</span>
<span id="L19354" rel="#L19354">19354</span>
<span id="L19355" rel="#L19355">19355</span>
<span id="L19356" rel="#L19356">19356</span>
<span id="L19357" rel="#L19357">19357</span>
<span id="L19358" rel="#L19358">19358</span>
<span id="L19359" rel="#L19359">19359</span>
<span id="L19360" rel="#L19360">19360</span>
<span id="L19361" rel="#L19361">19361</span>
<span id="L19362" rel="#L19362">19362</span>
<span id="L19363" rel="#L19363">19363</span>
<span id="L19364" rel="#L19364">19364</span>
<span id="L19365" rel="#L19365">19365</span>
<span id="L19366" rel="#L19366">19366</span>
<span id="L19367" rel="#L19367">19367</span>
<span id="L19368" rel="#L19368">19368</span>
<span id="L19369" rel="#L19369">19369</span>
<span id="L19370" rel="#L19370">19370</span>
<span id="L19371" rel="#L19371">19371</span>
<span id="L19372" rel="#L19372">19372</span>
<span id="L19373" rel="#L19373">19373</span>
<span id="L19374" rel="#L19374">19374</span>
<span id="L19375" rel="#L19375">19375</span>
<span id="L19376" rel="#L19376">19376</span>
<span id="L19377" rel="#L19377">19377</span>
<span id="L19378" rel="#L19378">19378</span>
<span id="L19379" rel="#L19379">19379</span>
<span id="L19380" rel="#L19380">19380</span>
<span id="L19381" rel="#L19381">19381</span>
<span id="L19382" rel="#L19382">19382</span>
<span id="L19383" rel="#L19383">19383</span>
<span id="L19384" rel="#L19384">19384</span>
<span id="L19385" rel="#L19385">19385</span>
<span id="L19386" rel="#L19386">19386</span>
<span id="L19387" rel="#L19387">19387</span>
<span id="L19388" rel="#L19388">19388</span>
<span id="L19389" rel="#L19389">19389</span>
<span id="L19390" rel="#L19390">19390</span>
<span id="L19391" rel="#L19391">19391</span>
<span id="L19392" rel="#L19392">19392</span>
<span id="L19393" rel="#L19393">19393</span>
<span id="L19394" rel="#L19394">19394</span>
<span id="L19395" rel="#L19395">19395</span>
<span id="L19396" rel="#L19396">19396</span>
<span id="L19397" rel="#L19397">19397</span>
<span id="L19398" rel="#L19398">19398</span>
<span id="L19399" rel="#L19399">19399</span>
<span id="L19400" rel="#L19400">19400</span>
<span id="L19401" rel="#L19401">19401</span>
<span id="L19402" rel="#L19402">19402</span>
<span id="L19403" rel="#L19403">19403</span>
<span id="L19404" rel="#L19404">19404</span>
<span id="L19405" rel="#L19405">19405</span>
<span id="L19406" rel="#L19406">19406</span>
<span id="L19407" rel="#L19407">19407</span>
<span id="L19408" rel="#L19408">19408</span>
<span id="L19409" rel="#L19409">19409</span>
<span id="L19410" rel="#L19410">19410</span>
<span id="L19411" rel="#L19411">19411</span>
<span id="L19412" rel="#L19412">19412</span>
<span id="L19413" rel="#L19413">19413</span>
<span id="L19414" rel="#L19414">19414</span>
<span id="L19415" rel="#L19415">19415</span>
<span id="L19416" rel="#L19416">19416</span>
<span id="L19417" rel="#L19417">19417</span>
<span id="L19418" rel="#L19418">19418</span>
<span id="L19419" rel="#L19419">19419</span>
<span id="L19420" rel="#L19420">19420</span>
<span id="L19421" rel="#L19421">19421</span>
<span id="L19422" rel="#L19422">19422</span>
<span id="L19423" rel="#L19423">19423</span>
<span id="L19424" rel="#L19424">19424</span>
<span id="L19425" rel="#L19425">19425</span>
<span id="L19426" rel="#L19426">19426</span>
<span id="L19427" rel="#L19427">19427</span>
<span id="L19428" rel="#L19428">19428</span>
<span id="L19429" rel="#L19429">19429</span>
<span id="L19430" rel="#L19430">19430</span>
<span id="L19431" rel="#L19431">19431</span>
<span id="L19432" rel="#L19432">19432</span>
<span id="L19433" rel="#L19433">19433</span>
<span id="L19434" rel="#L19434">19434</span>
<span id="L19435" rel="#L19435">19435</span>
<span id="L19436" rel="#L19436">19436</span>
<span id="L19437" rel="#L19437">19437</span>
<span id="L19438" rel="#L19438">19438</span>
<span id="L19439" rel="#L19439">19439</span>
<span id="L19440" rel="#L19440">19440</span>
<span id="L19441" rel="#L19441">19441</span>
<span id="L19442" rel="#L19442">19442</span>
<span id="L19443" rel="#L19443">19443</span>
<span id="L19444" rel="#L19444">19444</span>
<span id="L19445" rel="#L19445">19445</span>
<span id="L19446" rel="#L19446">19446</span>
<span id="L19447" rel="#L19447">19447</span>
<span id="L19448" rel="#L19448">19448</span>
<span id="L19449" rel="#L19449">19449</span>
<span id="L19450" rel="#L19450">19450</span>
<span id="L19451" rel="#L19451">19451</span>
<span id="L19452" rel="#L19452">19452</span>
<span id="L19453" rel="#L19453">19453</span>
<span id="L19454" rel="#L19454">19454</span>
<span id="L19455" rel="#L19455">19455</span>
<span id="L19456" rel="#L19456">19456</span>
<span id="L19457" rel="#L19457">19457</span>
<span id="L19458" rel="#L19458">19458</span>
<span id="L19459" rel="#L19459">19459</span>
<span id="L19460" rel="#L19460">19460</span>
<span id="L19461" rel="#L19461">19461</span>
<span id="L19462" rel="#L19462">19462</span>
<span id="L19463" rel="#L19463">19463</span>
<span id="L19464" rel="#L19464">19464</span>
<span id="L19465" rel="#L19465">19465</span>
<span id="L19466" rel="#L19466">19466</span>
<span id="L19467" rel="#L19467">19467</span>
<span id="L19468" rel="#L19468">19468</span>
<span id="L19469" rel="#L19469">19469</span>
<span id="L19470" rel="#L19470">19470</span>
<span id="L19471" rel="#L19471">19471</span>
<span id="L19472" rel="#L19472">19472</span>
<span id="L19473" rel="#L19473">19473</span>
<span id="L19474" rel="#L19474">19474</span>
<span id="L19475" rel="#L19475">19475</span>
<span id="L19476" rel="#L19476">19476</span>
<span id="L19477" rel="#L19477">19477</span>
<span id="L19478" rel="#L19478">19478</span>
<span id="L19479" rel="#L19479">19479</span>
<span id="L19480" rel="#L19480">19480</span>
<span id="L19481" rel="#L19481">19481</span>
<span id="L19482" rel="#L19482">19482</span>
<span id="L19483" rel="#L19483">19483</span>
<span id="L19484" rel="#L19484">19484</span>
<span id="L19485" rel="#L19485">19485</span>
<span id="L19486" rel="#L19486">19486</span>
<span id="L19487" rel="#L19487">19487</span>
<span id="L19488" rel="#L19488">19488</span>
<span id="L19489" rel="#L19489">19489</span>
<span id="L19490" rel="#L19490">19490</span>
<span id="L19491" rel="#L19491">19491</span>
<span id="L19492" rel="#L19492">19492</span>
<span id="L19493" rel="#L19493">19493</span>
<span id="L19494" rel="#L19494">19494</span>
<span id="L19495" rel="#L19495">19495</span>
<span id="L19496" rel="#L19496">19496</span>
<span id="L19497" rel="#L19497">19497</span>
<span id="L19498" rel="#L19498">19498</span>
<span id="L19499" rel="#L19499">19499</span>
<span id="L19500" rel="#L19500">19500</span>
<span id="L19501" rel="#L19501">19501</span>
<span id="L19502" rel="#L19502">19502</span>
<span id="L19503" rel="#L19503">19503</span>
<span id="L19504" rel="#L19504">19504</span>
<span id="L19505" rel="#L19505">19505</span>
<span id="L19506" rel="#L19506">19506</span>
<span id="L19507" rel="#L19507">19507</span>
<span id="L19508" rel="#L19508">19508</span>
<span id="L19509" rel="#L19509">19509</span>
<span id="L19510" rel="#L19510">19510</span>
<span id="L19511" rel="#L19511">19511</span>
<span id="L19512" rel="#L19512">19512</span>
<span id="L19513" rel="#L19513">19513</span>
<span id="L19514" rel="#L19514">19514</span>
<span id="L19515" rel="#L19515">19515</span>
<span id="L19516" rel="#L19516">19516</span>
<span id="L19517" rel="#L19517">19517</span>
<span id="L19518" rel="#L19518">19518</span>
<span id="L19519" rel="#L19519">19519</span>
<span id="L19520" rel="#L19520">19520</span>
<span id="L19521" rel="#L19521">19521</span>
<span id="L19522" rel="#L19522">19522</span>
<span id="L19523" rel="#L19523">19523</span>
<span id="L19524" rel="#L19524">19524</span>
<span id="L19525" rel="#L19525">19525</span>
<span id="L19526" rel="#L19526">19526</span>
<span id="L19527" rel="#L19527">19527</span>
<span id="L19528" rel="#L19528">19528</span>
<span id="L19529" rel="#L19529">19529</span>
<span id="L19530" rel="#L19530">19530</span>
<span id="L19531" rel="#L19531">19531</span>
<span id="L19532" rel="#L19532">19532</span>
<span id="L19533" rel="#L19533">19533</span>
<span id="L19534" rel="#L19534">19534</span>
<span id="L19535" rel="#L19535">19535</span>
<span id="L19536" rel="#L19536">19536</span>
<span id="L19537" rel="#L19537">19537</span>
<span id="L19538" rel="#L19538">19538</span>
<span id="L19539" rel="#L19539">19539</span>
<span id="L19540" rel="#L19540">19540</span>
<span id="L19541" rel="#L19541">19541</span>
<span id="L19542" rel="#L19542">19542</span>
<span id="L19543" rel="#L19543">19543</span>
<span id="L19544" rel="#L19544">19544</span>
<span id="L19545" rel="#L19545">19545</span>
<span id="L19546" rel="#L19546">19546</span>
<span id="L19547" rel="#L19547">19547</span>
<span id="L19548" rel="#L19548">19548</span>
<span id="L19549" rel="#L19549">19549</span>
<span id="L19550" rel="#L19550">19550</span>
<span id="L19551" rel="#L19551">19551</span>
<span id="L19552" rel="#L19552">19552</span>
<span id="L19553" rel="#L19553">19553</span>
<span id="L19554" rel="#L19554">19554</span>
<span id="L19555" rel="#L19555">19555</span>
<span id="L19556" rel="#L19556">19556</span>
<span id="L19557" rel="#L19557">19557</span>
<span id="L19558" rel="#L19558">19558</span>
<span id="L19559" rel="#L19559">19559</span>
<span id="L19560" rel="#L19560">19560</span>
<span id="L19561" rel="#L19561">19561</span>
<span id="L19562" rel="#L19562">19562</span>
<span id="L19563" rel="#L19563">19563</span>
<span id="L19564" rel="#L19564">19564</span>
<span id="L19565" rel="#L19565">19565</span>
<span id="L19566" rel="#L19566">19566</span>
<span id="L19567" rel="#L19567">19567</span>
<span id="L19568" rel="#L19568">19568</span>
<span id="L19569" rel="#L19569">19569</span>
<span id="L19570" rel="#L19570">19570</span>
<span id="L19571" rel="#L19571">19571</span>
<span id="L19572" rel="#L19572">19572</span>
<span id="L19573" rel="#L19573">19573</span>
<span id="L19574" rel="#L19574">19574</span>
<span id="L19575" rel="#L19575">19575</span>
<span id="L19576" rel="#L19576">19576</span>
<span id="L19577" rel="#L19577">19577</span>
<span id="L19578" rel="#L19578">19578</span>
<span id="L19579" rel="#L19579">19579</span>
<span id="L19580" rel="#L19580">19580</span>
<span id="L19581" rel="#L19581">19581</span>
<span id="L19582" rel="#L19582">19582</span>
<span id="L19583" rel="#L19583">19583</span>
<span id="L19584" rel="#L19584">19584</span>
<span id="L19585" rel="#L19585">19585</span>
<span id="L19586" rel="#L19586">19586</span>
<span id="L19587" rel="#L19587">19587</span>
<span id="L19588" rel="#L19588">19588</span>
<span id="L19589" rel="#L19589">19589</span>
<span id="L19590" rel="#L19590">19590</span>
<span id="L19591" rel="#L19591">19591</span>
<span id="L19592" rel="#L19592">19592</span>
<span id="L19593" rel="#L19593">19593</span>
<span id="L19594" rel="#L19594">19594</span>
<span id="L19595" rel="#L19595">19595</span>
<span id="L19596" rel="#L19596">19596</span>
<span id="L19597" rel="#L19597">19597</span>
<span id="L19598" rel="#L19598">19598</span>
<span id="L19599" rel="#L19599">19599</span>
<span id="L19600" rel="#L19600">19600</span>
<span id="L19601" rel="#L19601">19601</span>
<span id="L19602" rel="#L19602">19602</span>
<span id="L19603" rel="#L19603">19603</span>
<span id="L19604" rel="#L19604">19604</span>
<span id="L19605" rel="#L19605">19605</span>
<span id="L19606" rel="#L19606">19606</span>
<span id="L19607" rel="#L19607">19607</span>
<span id="L19608" rel="#L19608">19608</span>
<span id="L19609" rel="#L19609">19609</span>
<span id="L19610" rel="#L19610">19610</span>
<span id="L19611" rel="#L19611">19611</span>
<span id="L19612" rel="#L19612">19612</span>
<span id="L19613" rel="#L19613">19613</span>
<span id="L19614" rel="#L19614">19614</span>
<span id="L19615" rel="#L19615">19615</span>
<span id="L19616" rel="#L19616">19616</span>
<span id="L19617" rel="#L19617">19617</span>
<span id="L19618" rel="#L19618">19618</span>
<span id="L19619" rel="#L19619">19619</span>
<span id="L19620" rel="#L19620">19620</span>
<span id="L19621" rel="#L19621">19621</span>
<span id="L19622" rel="#L19622">19622</span>
<span id="L19623" rel="#L19623">19623</span>
<span id="L19624" rel="#L19624">19624</span>
<span id="L19625" rel="#L19625">19625</span>
<span id="L19626" rel="#L19626">19626</span>
<span id="L19627" rel="#L19627">19627</span>
<span id="L19628" rel="#L19628">19628</span>
<span id="L19629" rel="#L19629">19629</span>
<span id="L19630" rel="#L19630">19630</span>
<span id="L19631" rel="#L19631">19631</span>
<span id="L19632" rel="#L19632">19632</span>
<span id="L19633" rel="#L19633">19633</span>
<span id="L19634" rel="#L19634">19634</span>
<span id="L19635" rel="#L19635">19635</span>
<span id="L19636" rel="#L19636">19636</span>
<span id="L19637" rel="#L19637">19637</span>
<span id="L19638" rel="#L19638">19638</span>
<span id="L19639" rel="#L19639">19639</span>
<span id="L19640" rel="#L19640">19640</span>
<span id="L19641" rel="#L19641">19641</span>
<span id="L19642" rel="#L19642">19642</span>
<span id="L19643" rel="#L19643">19643</span>
<span id="L19644" rel="#L19644">19644</span>
<span id="L19645" rel="#L19645">19645</span>
<span id="L19646" rel="#L19646">19646</span>
<span id="L19647" rel="#L19647">19647</span>
<span id="L19648" rel="#L19648">19648</span>
<span id="L19649" rel="#L19649">19649</span>
<span id="L19650" rel="#L19650">19650</span>
<span id="L19651" rel="#L19651">19651</span>
<span id="L19652" rel="#L19652">19652</span>
<span id="L19653" rel="#L19653">19653</span>
<span id="L19654" rel="#L19654">19654</span>
<span id="L19655" rel="#L19655">19655</span>
<span id="L19656" rel="#L19656">19656</span>
<span id="L19657" rel="#L19657">19657</span>
<span id="L19658" rel="#L19658">19658</span>
<span id="L19659" rel="#L19659">19659</span>
<span id="L19660" rel="#L19660">19660</span>
<span id="L19661" rel="#L19661">19661</span>
<span id="L19662" rel="#L19662">19662</span>
<span id="L19663" rel="#L19663">19663</span>
<span id="L19664" rel="#L19664">19664</span>
<span id="L19665" rel="#L19665">19665</span>
<span id="L19666" rel="#L19666">19666</span>
<span id="L19667" rel="#L19667">19667</span>
<span id="L19668" rel="#L19668">19668</span>
<span id="L19669" rel="#L19669">19669</span>
<span id="L19670" rel="#L19670">19670</span>
<span id="L19671" rel="#L19671">19671</span>
<span id="L19672" rel="#L19672">19672</span>
<span id="L19673" rel="#L19673">19673</span>
<span id="L19674" rel="#L19674">19674</span>
<span id="L19675" rel="#L19675">19675</span>
<span id="L19676" rel="#L19676">19676</span>
<span id="L19677" rel="#L19677">19677</span>
<span id="L19678" rel="#L19678">19678</span>
<span id="L19679" rel="#L19679">19679</span>
<span id="L19680" rel="#L19680">19680</span>
<span id="L19681" rel="#L19681">19681</span>
<span id="L19682" rel="#L19682">19682</span>
<span id="L19683" rel="#L19683">19683</span>
<span id="L19684" rel="#L19684">19684</span>
<span id="L19685" rel="#L19685">19685</span>
<span id="L19686" rel="#L19686">19686</span>
<span id="L19687" rel="#L19687">19687</span>
<span id="L19688" rel="#L19688">19688</span>
<span id="L19689" rel="#L19689">19689</span>
<span id="L19690" rel="#L19690">19690</span>
<span id="L19691" rel="#L19691">19691</span>
<span id="L19692" rel="#L19692">19692</span>
<span id="L19693" rel="#L19693">19693</span>
<span id="L19694" rel="#L19694">19694</span>
<span id="L19695" rel="#L19695">19695</span>
<span id="L19696" rel="#L19696">19696</span>
<span id="L19697" rel="#L19697">19697</span>
<span id="L19698" rel="#L19698">19698</span>
<span id="L19699" rel="#L19699">19699</span>
<span id="L19700" rel="#L19700">19700</span>
<span id="L19701" rel="#L19701">19701</span>
<span id="L19702" rel="#L19702">19702</span>
<span id="L19703" rel="#L19703">19703</span>
<span id="L19704" rel="#L19704">19704</span>
<span id="L19705" rel="#L19705">19705</span>
<span id="L19706" rel="#L19706">19706</span>
<span id="L19707" rel="#L19707">19707</span>
<span id="L19708" rel="#L19708">19708</span>
<span id="L19709" rel="#L19709">19709</span>
<span id="L19710" rel="#L19710">19710</span>
<span id="L19711" rel="#L19711">19711</span>
<span id="L19712" rel="#L19712">19712</span>
<span id="L19713" rel="#L19713">19713</span>
<span id="L19714" rel="#L19714">19714</span>
<span id="L19715" rel="#L19715">19715</span>
<span id="L19716" rel="#L19716">19716</span>
<span id="L19717" rel="#L19717">19717</span>
<span id="L19718" rel="#L19718">19718</span>
<span id="L19719" rel="#L19719">19719</span>
<span id="L19720" rel="#L19720">19720</span>
<span id="L19721" rel="#L19721">19721</span>
<span id="L19722" rel="#L19722">19722</span>
<span id="L19723" rel="#L19723">19723</span>
<span id="L19724" rel="#L19724">19724</span>
<span id="L19725" rel="#L19725">19725</span>
<span id="L19726" rel="#L19726">19726</span>
<span id="L19727" rel="#L19727">19727</span>
<span id="L19728" rel="#L19728">19728</span>
<span id="L19729" rel="#L19729">19729</span>
<span id="L19730" rel="#L19730">19730</span>
<span id="L19731" rel="#L19731">19731</span>
<span id="L19732" rel="#L19732">19732</span>
<span id="L19733" rel="#L19733">19733</span>
<span id="L19734" rel="#L19734">19734</span>
<span id="L19735" rel="#L19735">19735</span>
<span id="L19736" rel="#L19736">19736</span>
<span id="L19737" rel="#L19737">19737</span>
<span id="L19738" rel="#L19738">19738</span>
<span id="L19739" rel="#L19739">19739</span>
<span id="L19740" rel="#L19740">19740</span>
<span id="L19741" rel="#L19741">19741</span>
<span id="L19742" rel="#L19742">19742</span>
<span id="L19743" rel="#L19743">19743</span>
<span id="L19744" rel="#L19744">19744</span>
<span id="L19745" rel="#L19745">19745</span>
<span id="L19746" rel="#L19746">19746</span>
<span id="L19747" rel="#L19747">19747</span>
<span id="L19748" rel="#L19748">19748</span>
<span id="L19749" rel="#L19749">19749</span>
<span id="L19750" rel="#L19750">19750</span>
<span id="L19751" rel="#L19751">19751</span>
<span id="L19752" rel="#L19752">19752</span>
<span id="L19753" rel="#L19753">19753</span>
<span id="L19754" rel="#L19754">19754</span>
<span id="L19755" rel="#L19755">19755</span>
<span id="L19756" rel="#L19756">19756</span>
<span id="L19757" rel="#L19757">19757</span>
<span id="L19758" rel="#L19758">19758</span>
<span id="L19759" rel="#L19759">19759</span>
<span id="L19760" rel="#L19760">19760</span>
<span id="L19761" rel="#L19761">19761</span>
<span id="L19762" rel="#L19762">19762</span>
<span id="L19763" rel="#L19763">19763</span>
<span id="L19764" rel="#L19764">19764</span>
<span id="L19765" rel="#L19765">19765</span>
<span id="L19766" rel="#L19766">19766</span>
<span id="L19767" rel="#L19767">19767</span>
<span id="L19768" rel="#L19768">19768</span>
<span id="L19769" rel="#L19769">19769</span>
<span id="L19770" rel="#L19770">19770</span>
<span id="L19771" rel="#L19771">19771</span>
<span id="L19772" rel="#L19772">19772</span>
<span id="L19773" rel="#L19773">19773</span>
<span id="L19774" rel="#L19774">19774</span>
<span id="L19775" rel="#L19775">19775</span>
<span id="L19776" rel="#L19776">19776</span>
<span id="L19777" rel="#L19777">19777</span>
<span id="L19778" rel="#L19778">19778</span>
<span id="L19779" rel="#L19779">19779</span>
<span id="L19780" rel="#L19780">19780</span>
<span id="L19781" rel="#L19781">19781</span>
<span id="L19782" rel="#L19782">19782</span>
<span id="L19783" rel="#L19783">19783</span>
<span id="L19784" rel="#L19784">19784</span>
<span id="L19785" rel="#L19785">19785</span>
<span id="L19786" rel="#L19786">19786</span>
<span id="L19787" rel="#L19787">19787</span>
<span id="L19788" rel="#L19788">19788</span>
<span id="L19789" rel="#L19789">19789</span>
<span id="L19790" rel="#L19790">19790</span>
<span id="L19791" rel="#L19791">19791</span>
<span id="L19792" rel="#L19792">19792</span>
<span id="L19793" rel="#L19793">19793</span>
<span id="L19794" rel="#L19794">19794</span>
<span id="L19795" rel="#L19795">19795</span>
<span id="L19796" rel="#L19796">19796</span>
<span id="L19797" rel="#L19797">19797</span>
<span id="L19798" rel="#L19798">19798</span>
<span id="L19799" rel="#L19799">19799</span>
<span id="L19800" rel="#L19800">19800</span>
<span id="L19801" rel="#L19801">19801</span>
<span id="L19802" rel="#L19802">19802</span>
<span id="L19803" rel="#L19803">19803</span>
<span id="L19804" rel="#L19804">19804</span>
<span id="L19805" rel="#L19805">19805</span>
<span id="L19806" rel="#L19806">19806</span>
<span id="L19807" rel="#L19807">19807</span>
<span id="L19808" rel="#L19808">19808</span>
<span id="L19809" rel="#L19809">19809</span>
<span id="L19810" rel="#L19810">19810</span>
<span id="L19811" rel="#L19811">19811</span>
<span id="L19812" rel="#L19812">19812</span>
<span id="L19813" rel="#L19813">19813</span>
<span id="L19814" rel="#L19814">19814</span>
<span id="L19815" rel="#L19815">19815</span>
<span id="L19816" rel="#L19816">19816</span>
<span id="L19817" rel="#L19817">19817</span>
<span id="L19818" rel="#L19818">19818</span>
<span id="L19819" rel="#L19819">19819</span>
<span id="L19820" rel="#L19820">19820</span>
<span id="L19821" rel="#L19821">19821</span>
<span id="L19822" rel="#L19822">19822</span>
<span id="L19823" rel="#L19823">19823</span>
<span id="L19824" rel="#L19824">19824</span>
<span id="L19825" rel="#L19825">19825</span>
<span id="L19826" rel="#L19826">19826</span>
<span id="L19827" rel="#L19827">19827</span>
<span id="L19828" rel="#L19828">19828</span>
<span id="L19829" rel="#L19829">19829</span>
<span id="L19830" rel="#L19830">19830</span>
<span id="L19831" rel="#L19831">19831</span>
<span id="L19832" rel="#L19832">19832</span>
<span id="L19833" rel="#L19833">19833</span>
<span id="L19834" rel="#L19834">19834</span>
<span id="L19835" rel="#L19835">19835</span>
<span id="L19836" rel="#L19836">19836</span>
<span id="L19837" rel="#L19837">19837</span>
<span id="L19838" rel="#L19838">19838</span>
<span id="L19839" rel="#L19839">19839</span>
<span id="L19840" rel="#L19840">19840</span>
<span id="L19841" rel="#L19841">19841</span>
<span id="L19842" rel="#L19842">19842</span>
<span id="L19843" rel="#L19843">19843</span>
<span id="L19844" rel="#L19844">19844</span>
<span id="L19845" rel="#L19845">19845</span>
<span id="L19846" rel="#L19846">19846</span>
<span id="L19847" rel="#L19847">19847</span>
<span id="L19848" rel="#L19848">19848</span>
<span id="L19849" rel="#L19849">19849</span>
<span id="L19850" rel="#L19850">19850</span>
<span id="L19851" rel="#L19851">19851</span>
<span id="L19852" rel="#L19852">19852</span>
<span id="L19853" rel="#L19853">19853</span>
<span id="L19854" rel="#L19854">19854</span>
<span id="L19855" rel="#L19855">19855</span>
<span id="L19856" rel="#L19856">19856</span>
<span id="L19857" rel="#L19857">19857</span>
<span id="L19858" rel="#L19858">19858</span>
<span id="L19859" rel="#L19859">19859</span>
<span id="L19860" rel="#L19860">19860</span>
<span id="L19861" rel="#L19861">19861</span>
<span id="L19862" rel="#L19862">19862</span>
<span id="L19863" rel="#L19863">19863</span>
<span id="L19864" rel="#L19864">19864</span>
<span id="L19865" rel="#L19865">19865</span>
<span id="L19866" rel="#L19866">19866</span>
<span id="L19867" rel="#L19867">19867</span>
<span id="L19868" rel="#L19868">19868</span>
<span id="L19869" rel="#L19869">19869</span>
<span id="L19870" rel="#L19870">19870</span>
<span id="L19871" rel="#L19871">19871</span>
<span id="L19872" rel="#L19872">19872</span>
<span id="L19873" rel="#L19873">19873</span>
<span id="L19874" rel="#L19874">19874</span>
<span id="L19875" rel="#L19875">19875</span>
<span id="L19876" rel="#L19876">19876</span>
<span id="L19877" rel="#L19877">19877</span>
<span id="L19878" rel="#L19878">19878</span>
<span id="L19879" rel="#L19879">19879</span>
<span id="L19880" rel="#L19880">19880</span>
<span id="L19881" rel="#L19881">19881</span>
<span id="L19882" rel="#L19882">19882</span>
<span id="L19883" rel="#L19883">19883</span>
<span id="L19884" rel="#L19884">19884</span>
<span id="L19885" rel="#L19885">19885</span>
<span id="L19886" rel="#L19886">19886</span>
<span id="L19887" rel="#L19887">19887</span>
<span id="L19888" rel="#L19888">19888</span>
<span id="L19889" rel="#L19889">19889</span>
<span id="L19890" rel="#L19890">19890</span>
<span id="L19891" rel="#L19891">19891</span>
<span id="L19892" rel="#L19892">19892</span>
<span id="L19893" rel="#L19893">19893</span>
<span id="L19894" rel="#L19894">19894</span>
<span id="L19895" rel="#L19895">19895</span>
<span id="L19896" rel="#L19896">19896</span>
<span id="L19897" rel="#L19897">19897</span>
<span id="L19898" rel="#L19898">19898</span>
<span id="L19899" rel="#L19899">19899</span>
<span id="L19900" rel="#L19900">19900</span>
<span id="L19901" rel="#L19901">19901</span>
<span id="L19902" rel="#L19902">19902</span>
<span id="L19903" rel="#L19903">19903</span>
<span id="L19904" rel="#L19904">19904</span>
<span id="L19905" rel="#L19905">19905</span>
<span id="L19906" rel="#L19906">19906</span>
<span id="L19907" rel="#L19907">19907</span>
<span id="L19908" rel="#L19908">19908</span>
<span id="L19909" rel="#L19909">19909</span>
<span id="L19910" rel="#L19910">19910</span>
<span id="L19911" rel="#L19911">19911</span>
<span id="L19912" rel="#L19912">19912</span>
<span id="L19913" rel="#L19913">19913</span>
<span id="L19914" rel="#L19914">19914</span>
<span id="L19915" rel="#L19915">19915</span>
<span id="L19916" rel="#L19916">19916</span>
<span id="L19917" rel="#L19917">19917</span>
<span id="L19918" rel="#L19918">19918</span>
<span id="L19919" rel="#L19919">19919</span>
<span id="L19920" rel="#L19920">19920</span>
<span id="L19921" rel="#L19921">19921</span>
<span id="L19922" rel="#L19922">19922</span>
<span id="L19923" rel="#L19923">19923</span>
<span id="L19924" rel="#L19924">19924</span>
<span id="L19925" rel="#L19925">19925</span>
<span id="L19926" rel="#L19926">19926</span>
<span id="L19927" rel="#L19927">19927</span>
<span id="L19928" rel="#L19928">19928</span>
<span id="L19929" rel="#L19929">19929</span>
<span id="L19930" rel="#L19930">19930</span>
<span id="L19931" rel="#L19931">19931</span>
<span id="L19932" rel="#L19932">19932</span>
<span id="L19933" rel="#L19933">19933</span>
<span id="L19934" rel="#L19934">19934</span>
<span id="L19935" rel="#L19935">19935</span>
<span id="L19936" rel="#L19936">19936</span>
<span id="L19937" rel="#L19937">19937</span>
<span id="L19938" rel="#L19938">19938</span>
<span id="L19939" rel="#L19939">19939</span>
<span id="L19940" rel="#L19940">19940</span>
<span id="L19941" rel="#L19941">19941</span>
<span id="L19942" rel="#L19942">19942</span>
<span id="L19943" rel="#L19943">19943</span>
<span id="L19944" rel="#L19944">19944</span>
<span id="L19945" rel="#L19945">19945</span>
<span id="L19946" rel="#L19946">19946</span>
<span id="L19947" rel="#L19947">19947</span>
<span id="L19948" rel="#L19948">19948</span>
<span id="L19949" rel="#L19949">19949</span>
<span id="L19950" rel="#L19950">19950</span>
<span id="L19951" rel="#L19951">19951</span>
<span id="L19952" rel="#L19952">19952</span>
<span id="L19953" rel="#L19953">19953</span>
<span id="L19954" rel="#L19954">19954</span>
<span id="L19955" rel="#L19955">19955</span>
<span id="L19956" rel="#L19956">19956</span>
<span id="L19957" rel="#L19957">19957</span>
<span id="L19958" rel="#L19958">19958</span>
<span id="L19959" rel="#L19959">19959</span>
<span id="L19960" rel="#L19960">19960</span>
<span id="L19961" rel="#L19961">19961</span>
<span id="L19962" rel="#L19962">19962</span>
<span id="L19963" rel="#L19963">19963</span>
<span id="L19964" rel="#L19964">19964</span>
<span id="L19965" rel="#L19965">19965</span>
<span id="L19966" rel="#L19966">19966</span>
<span id="L19967" rel="#L19967">19967</span>
<span id="L19968" rel="#L19968">19968</span>
<span id="L19969" rel="#L19969">19969</span>
<span id="L19970" rel="#L19970">19970</span>
<span id="L19971" rel="#L19971">19971</span>
<span id="L19972" rel="#L19972">19972</span>
<span id="L19973" rel="#L19973">19973</span>
<span id="L19974" rel="#L19974">19974</span>
<span id="L19975" rel="#L19975">19975</span>
<span id="L19976" rel="#L19976">19976</span>
<span id="L19977" rel="#L19977">19977</span>
<span id="L19978" rel="#L19978">19978</span>
<span id="L19979" rel="#L19979">19979</span>
<span id="L19980" rel="#L19980">19980</span>
<span id="L19981" rel="#L19981">19981</span>
<span id="L19982" rel="#L19982">19982</span>
<span id="L19983" rel="#L19983">19983</span>
<span id="L19984" rel="#L19984">19984</span>
<span id="L19985" rel="#L19985">19985</span>
<span id="L19986" rel="#L19986">19986</span>
<span id="L19987" rel="#L19987">19987</span>
<span id="L19988" rel="#L19988">19988</span>
<span id="L19989" rel="#L19989">19989</span>
<span id="L19990" rel="#L19990">19990</span>
<span id="L19991" rel="#L19991">19991</span>
<span id="L19992" rel="#L19992">19992</span>
<span id="L19993" rel="#L19993">19993</span>
<span id="L19994" rel="#L19994">19994</span>
<span id="L19995" rel="#L19995">19995</span>
<span id="L19996" rel="#L19996">19996</span>
<span id="L19997" rel="#L19997">19997</span>
<span id="L19998" rel="#L19998">19998</span>
<span id="L19999" rel="#L19999">19999</span>
<span id="L20000" rel="#L20000">20000</span>
<span id="L20001" rel="#L20001">20001</span>
<span id="L20002" rel="#L20002">20002</span>
<span id="L20003" rel="#L20003">20003</span>
<span id="L20004" rel="#L20004">20004</span>
<span id="L20005" rel="#L20005">20005</span>
<span id="L20006" rel="#L20006">20006</span>
<span id="L20007" rel="#L20007">20007</span>
<span id="L20008" rel="#L20008">20008</span>
<span id="L20009" rel="#L20009">20009</span>
<span id="L20010" rel="#L20010">20010</span>
<span id="L20011" rel="#L20011">20011</span>
<span id="L20012" rel="#L20012">20012</span>
<span id="L20013" rel="#L20013">20013</span>
<span id="L20014" rel="#L20014">20014</span>
<span id="L20015" rel="#L20015">20015</span>
<span id="L20016" rel="#L20016">20016</span>
<span id="L20017" rel="#L20017">20017</span>
<span id="L20018" rel="#L20018">20018</span>
<span id="L20019" rel="#L20019">20019</span>
<span id="L20020" rel="#L20020">20020</span>
<span id="L20021" rel="#L20021">20021</span>
<span id="L20022" rel="#L20022">20022</span>
<span id="L20023" rel="#L20023">20023</span>
<span id="L20024" rel="#L20024">20024</span>
<span id="L20025" rel="#L20025">20025</span>
<span id="L20026" rel="#L20026">20026</span>
<span id="L20027" rel="#L20027">20027</span>
<span id="L20028" rel="#L20028">20028</span>
<span id="L20029" rel="#L20029">20029</span>
<span id="L20030" rel="#L20030">20030</span>
<span id="L20031" rel="#L20031">20031</span>
<span id="L20032" rel="#L20032">20032</span>
<span id="L20033" rel="#L20033">20033</span>
<span id="L20034" rel="#L20034">20034</span>
<span id="L20035" rel="#L20035">20035</span>
<span id="L20036" rel="#L20036">20036</span>
<span id="L20037" rel="#L20037">20037</span>
<span id="L20038" rel="#L20038">20038</span>
<span id="L20039" rel="#L20039">20039</span>
<span id="L20040" rel="#L20040">20040</span>
<span id="L20041" rel="#L20041">20041</span>
<span id="L20042" rel="#L20042">20042</span>
<span id="L20043" rel="#L20043">20043</span>
<span id="L20044" rel="#L20044">20044</span>
<span id="L20045" rel="#L20045">20045</span>
<span id="L20046" rel="#L20046">20046</span>
<span id="L20047" rel="#L20047">20047</span>
<span id="L20048" rel="#L20048">20048</span>
<span id="L20049" rel="#L20049">20049</span>
<span id="L20050" rel="#L20050">20050</span>
<span id="L20051" rel="#L20051">20051</span>
<span id="L20052" rel="#L20052">20052</span>
<span id="L20053" rel="#L20053">20053</span>
<span id="L20054" rel="#L20054">20054</span>
<span id="L20055" rel="#L20055">20055</span>
<span id="L20056" rel="#L20056">20056</span>
<span id="L20057" rel="#L20057">20057</span>
<span id="L20058" rel="#L20058">20058</span>
<span id="L20059" rel="#L20059">20059</span>
<span id="L20060" rel="#L20060">20060</span>
<span id="L20061" rel="#L20061">20061</span>
<span id="L20062" rel="#L20062">20062</span>
<span id="L20063" rel="#L20063">20063</span>
<span id="L20064" rel="#L20064">20064</span>
<span id="L20065" rel="#L20065">20065</span>
<span id="L20066" rel="#L20066">20066</span>
<span id="L20067" rel="#L20067">20067</span>
<span id="L20068" rel="#L20068">20068</span>
<span id="L20069" rel="#L20069">20069</span>
<span id="L20070" rel="#L20070">20070</span>
<span id="L20071" rel="#L20071">20071</span>
<span id="L20072" rel="#L20072">20072</span>
<span id="L20073" rel="#L20073">20073</span>
<span id="L20074" rel="#L20074">20074</span>
<span id="L20075" rel="#L20075">20075</span>
<span id="L20076" rel="#L20076">20076</span>
<span id="L20077" rel="#L20077">20077</span>
<span id="L20078" rel="#L20078">20078</span>
<span id="L20079" rel="#L20079">20079</span>
<span id="L20080" rel="#L20080">20080</span>
<span id="L20081" rel="#L20081">20081</span>
<span id="L20082" rel="#L20082">20082</span>
<span id="L20083" rel="#L20083">20083</span>
<span id="L20084" rel="#L20084">20084</span>
<span id="L20085" rel="#L20085">20085</span>
<span id="L20086" rel="#L20086">20086</span>
<span id="L20087" rel="#L20087">20087</span>
<span id="L20088" rel="#L20088">20088</span>
<span id="L20089" rel="#L20089">20089</span>
<span id="L20090" rel="#L20090">20090</span>
<span id="L20091" rel="#L20091">20091</span>
<span id="L20092" rel="#L20092">20092</span>
<span id="L20093" rel="#L20093">20093</span>
<span id="L20094" rel="#L20094">20094</span>
<span id="L20095" rel="#L20095">20095</span>
<span id="L20096" rel="#L20096">20096</span>
<span id="L20097" rel="#L20097">20097</span>
<span id="L20098" rel="#L20098">20098</span>
<span id="L20099" rel="#L20099">20099</span>
<span id="L20100" rel="#L20100">20100</span>
<span id="L20101" rel="#L20101">20101</span>
<span id="L20102" rel="#L20102">20102</span>
<span id="L20103" rel="#L20103">20103</span>
<span id="L20104" rel="#L20104">20104</span>
<span id="L20105" rel="#L20105">20105</span>
<span id="L20106" rel="#L20106">20106</span>
<span id="L20107" rel="#L20107">20107</span>
<span id="L20108" rel="#L20108">20108</span>
<span id="L20109" rel="#L20109">20109</span>
<span id="L20110" rel="#L20110">20110</span>
<span id="L20111" rel="#L20111">20111</span>
<span id="L20112" rel="#L20112">20112</span>
<span id="L20113" rel="#L20113">20113</span>
<span id="L20114" rel="#L20114">20114</span>
<span id="L20115" rel="#L20115">20115</span>
<span id="L20116" rel="#L20116">20116</span>
<span id="L20117" rel="#L20117">20117</span>
<span id="L20118" rel="#L20118">20118</span>
<span id="L20119" rel="#L20119">20119</span>
<span id="L20120" rel="#L20120">20120</span>
<span id="L20121" rel="#L20121">20121</span>
<span id="L20122" rel="#L20122">20122</span>
<span id="L20123" rel="#L20123">20123</span>
<span id="L20124" rel="#L20124">20124</span>
<span id="L20125" rel="#L20125">20125</span>
<span id="L20126" rel="#L20126">20126</span>
<span id="L20127" rel="#L20127">20127</span>
<span id="L20128" rel="#L20128">20128</span>
<span id="L20129" rel="#L20129">20129</span>
<span id="L20130" rel="#L20130">20130</span>
<span id="L20131" rel="#L20131">20131</span>
<span id="L20132" rel="#L20132">20132</span>
<span id="L20133" rel="#L20133">20133</span>
<span id="L20134" rel="#L20134">20134</span>
<span id="L20135" rel="#L20135">20135</span>
<span id="L20136" rel="#L20136">20136</span>
<span id="L20137" rel="#L20137">20137</span>
<span id="L20138" rel="#L20138">20138</span>
<span id="L20139" rel="#L20139">20139</span>
<span id="L20140" rel="#L20140">20140</span>
<span id="L20141" rel="#L20141">20141</span>
<span id="L20142" rel="#L20142">20142</span>
<span id="L20143" rel="#L20143">20143</span>
<span id="L20144" rel="#L20144">20144</span>
<span id="L20145" rel="#L20145">20145</span>
<span id="L20146" rel="#L20146">20146</span>
<span id="L20147" rel="#L20147">20147</span>
<span id="L20148" rel="#L20148">20148</span>
<span id="L20149" rel="#L20149">20149</span>
<span id="L20150" rel="#L20150">20150</span>
<span id="L20151" rel="#L20151">20151</span>
<span id="L20152" rel="#L20152">20152</span>
<span id="L20153" rel="#L20153">20153</span>
<span id="L20154" rel="#L20154">20154</span>
<span id="L20155" rel="#L20155">20155</span>
<span id="L20156" rel="#L20156">20156</span>
<span id="L20157" rel="#L20157">20157</span>
<span id="L20158" rel="#L20158">20158</span>
<span id="L20159" rel="#L20159">20159</span>
<span id="L20160" rel="#L20160">20160</span>
<span id="L20161" rel="#L20161">20161</span>
<span id="L20162" rel="#L20162">20162</span>
<span id="L20163" rel="#L20163">20163</span>
<span id="L20164" rel="#L20164">20164</span>
<span id="L20165" rel="#L20165">20165</span>
<span id="L20166" rel="#L20166">20166</span>
<span id="L20167" rel="#L20167">20167</span>
<span id="L20168" rel="#L20168">20168</span>
<span id="L20169" rel="#L20169">20169</span>
<span id="L20170" rel="#L20170">20170</span>
<span id="L20171" rel="#L20171">20171</span>
<span id="L20172" rel="#L20172">20172</span>
<span id="L20173" rel="#L20173">20173</span>
<span id="L20174" rel="#L20174">20174</span>
<span id="L20175" rel="#L20175">20175</span>
<span id="L20176" rel="#L20176">20176</span>
<span id="L20177" rel="#L20177">20177</span>
<span id="L20178" rel="#L20178">20178</span>
<span id="L20179" rel="#L20179">20179</span>
<span id="L20180" rel="#L20180">20180</span>
<span id="L20181" rel="#L20181">20181</span>
<span id="L20182" rel="#L20182">20182</span>
<span id="L20183" rel="#L20183">20183</span>
<span id="L20184" rel="#L20184">20184</span>
<span id="L20185" rel="#L20185">20185</span>
<span id="L20186" rel="#L20186">20186</span>
<span id="L20187" rel="#L20187">20187</span>
<span id="L20188" rel="#L20188">20188</span>
<span id="L20189" rel="#L20189">20189</span>
<span id="L20190" rel="#L20190">20190</span>
<span id="L20191" rel="#L20191">20191</span>
<span id="L20192" rel="#L20192">20192</span>
<span id="L20193" rel="#L20193">20193</span>
<span id="L20194" rel="#L20194">20194</span>
<span id="L20195" rel="#L20195">20195</span>
<span id="L20196" rel="#L20196">20196</span>
<span id="L20197" rel="#L20197">20197</span>
<span id="L20198" rel="#L20198">20198</span>
<span id="L20199" rel="#L20199">20199</span>
<span id="L20200" rel="#L20200">20200</span>
<span id="L20201" rel="#L20201">20201</span>
<span id="L20202" rel="#L20202">20202</span>
<span id="L20203" rel="#L20203">20203</span>
<span id="L20204" rel="#L20204">20204</span>
<span id="L20205" rel="#L20205">20205</span>
<span id="L20206" rel="#L20206">20206</span>
<span id="L20207" rel="#L20207">20207</span>
<span id="L20208" rel="#L20208">20208</span>
<span id="L20209" rel="#L20209">20209</span>
<span id="L20210" rel="#L20210">20210</span>
<span id="L20211" rel="#L20211">20211</span>
<span id="L20212" rel="#L20212">20212</span>
<span id="L20213" rel="#L20213">20213</span>
<span id="L20214" rel="#L20214">20214</span>
<span id="L20215" rel="#L20215">20215</span>
<span id="L20216" rel="#L20216">20216</span>
<span id="L20217" rel="#L20217">20217</span>
<span id="L20218" rel="#L20218">20218</span>
<span id="L20219" rel="#L20219">20219</span>
<span id="L20220" rel="#L20220">20220</span>
<span id="L20221" rel="#L20221">20221</span>
<span id="L20222" rel="#L20222">20222</span>
<span id="L20223" rel="#L20223">20223</span>
<span id="L20224" rel="#L20224">20224</span>
<span id="L20225" rel="#L20225">20225</span>
<span id="L20226" rel="#L20226">20226</span>
<span id="L20227" rel="#L20227">20227</span>
<span id="L20228" rel="#L20228">20228</span>
<span id="L20229" rel="#L20229">20229</span>
<span id="L20230" rel="#L20230">20230</span>
<span id="L20231" rel="#L20231">20231</span>
<span id="L20232" rel="#L20232">20232</span>
<span id="L20233" rel="#L20233">20233</span>
<span id="L20234" rel="#L20234">20234</span>
<span id="L20235" rel="#L20235">20235</span>
<span id="L20236" rel="#L20236">20236</span>
<span id="L20237" rel="#L20237">20237</span>
<span id="L20238" rel="#L20238">20238</span>
<span id="L20239" rel="#L20239">20239</span>
<span id="L20240" rel="#L20240">20240</span>
<span id="L20241" rel="#L20241">20241</span>
<span id="L20242" rel="#L20242">20242</span>
<span id="L20243" rel="#L20243">20243</span>
<span id="L20244" rel="#L20244">20244</span>
<span id="L20245" rel="#L20245">20245</span>
<span id="L20246" rel="#L20246">20246</span>
<span id="L20247" rel="#L20247">20247</span>
<span id="L20248" rel="#L20248">20248</span>
<span id="L20249" rel="#L20249">20249</span>
<span id="L20250" rel="#L20250">20250</span>
<span id="L20251" rel="#L20251">20251</span>
<span id="L20252" rel="#L20252">20252</span>
<span id="L20253" rel="#L20253">20253</span>
<span id="L20254" rel="#L20254">20254</span>
<span id="L20255" rel="#L20255">20255</span>
<span id="L20256" rel="#L20256">20256</span>
<span id="L20257" rel="#L20257">20257</span>
<span id="L20258" rel="#L20258">20258</span>
<span id="L20259" rel="#L20259">20259</span>
<span id="L20260" rel="#L20260">20260</span>
<span id="L20261" rel="#L20261">20261</span>
<span id="L20262" rel="#L20262">20262</span>
<span id="L20263" rel="#L20263">20263</span>
<span id="L20264" rel="#L20264">20264</span>
<span id="L20265" rel="#L20265">20265</span>
<span id="L20266" rel="#L20266">20266</span>
<span id="L20267" rel="#L20267">20267</span>
<span id="L20268" rel="#L20268">20268</span>
<span id="L20269" rel="#L20269">20269</span>
<span id="L20270" rel="#L20270">20270</span>
<span id="L20271" rel="#L20271">20271</span>
<span id="L20272" rel="#L20272">20272</span>
<span id="L20273" rel="#L20273">20273</span>
<span id="L20274" rel="#L20274">20274</span>
<span id="L20275" rel="#L20275">20275</span>
<span id="L20276" rel="#L20276">20276</span>
<span id="L20277" rel="#L20277">20277</span>
<span id="L20278" rel="#L20278">20278</span>
<span id="L20279" rel="#L20279">20279</span>
<span id="L20280" rel="#L20280">20280</span>
<span id="L20281" rel="#L20281">20281</span>
<span id="L20282" rel="#L20282">20282</span>
<span id="L20283" rel="#L20283">20283</span>
<span id="L20284" rel="#L20284">20284</span>
<span id="L20285" rel="#L20285">20285</span>
<span id="L20286" rel="#L20286">20286</span>
<span id="L20287" rel="#L20287">20287</span>
<span id="L20288" rel="#L20288">20288</span>
<span id="L20289" rel="#L20289">20289</span>
<span id="L20290" rel="#L20290">20290</span>
<span id="L20291" rel="#L20291">20291</span>
<span id="L20292" rel="#L20292">20292</span>
<span id="L20293" rel="#L20293">20293</span>
<span id="L20294" rel="#L20294">20294</span>
<span id="L20295" rel="#L20295">20295</span>
<span id="L20296" rel="#L20296">20296</span>
<span id="L20297" rel="#L20297">20297</span>
<span id="L20298" rel="#L20298">20298</span>
<span id="L20299" rel="#L20299">20299</span>
<span id="L20300" rel="#L20300">20300</span>
<span id="L20301" rel="#L20301">20301</span>
<span id="L20302" rel="#L20302">20302</span>
<span id="L20303" rel="#L20303">20303</span>
<span id="L20304" rel="#L20304">20304</span>
<span id="L20305" rel="#L20305">20305</span>
<span id="L20306" rel="#L20306">20306</span>
<span id="L20307" rel="#L20307">20307</span>
<span id="L20308" rel="#L20308">20308</span>
<span id="L20309" rel="#L20309">20309</span>
<span id="L20310" rel="#L20310">20310</span>
<span id="L20311" rel="#L20311">20311</span>
<span id="L20312" rel="#L20312">20312</span>
<span id="L20313" rel="#L20313">20313</span>
<span id="L20314" rel="#L20314">20314</span>
<span id="L20315" rel="#L20315">20315</span>
<span id="L20316" rel="#L20316">20316</span>
<span id="L20317" rel="#L20317">20317</span>
<span id="L20318" rel="#L20318">20318</span>
<span id="L20319" rel="#L20319">20319</span>
<span id="L20320" rel="#L20320">20320</span>
<span id="L20321" rel="#L20321">20321</span>
<span id="L20322" rel="#L20322">20322</span>
<span id="L20323" rel="#L20323">20323</span>
<span id="L20324" rel="#L20324">20324</span>
<span id="L20325" rel="#L20325">20325</span>
<span id="L20326" rel="#L20326">20326</span>
<span id="L20327" rel="#L20327">20327</span>
<span id="L20328" rel="#L20328">20328</span>
<span id="L20329" rel="#L20329">20329</span>
<span id="L20330" rel="#L20330">20330</span>
<span id="L20331" rel="#L20331">20331</span>
<span id="L20332" rel="#L20332">20332</span>
<span id="L20333" rel="#L20333">20333</span>
<span id="L20334" rel="#L20334">20334</span>
<span id="L20335" rel="#L20335">20335</span>
<span id="L20336" rel="#L20336">20336</span>
<span id="L20337" rel="#L20337">20337</span>
<span id="L20338" rel="#L20338">20338</span>
<span id="L20339" rel="#L20339">20339</span>
<span id="L20340" rel="#L20340">20340</span>
<span id="L20341" rel="#L20341">20341</span>
<span id="L20342" rel="#L20342">20342</span>
<span id="L20343" rel="#L20343">20343</span>
<span id="L20344" rel="#L20344">20344</span>
<span id="L20345" rel="#L20345">20345</span>
<span id="L20346" rel="#L20346">20346</span>
<span id="L20347" rel="#L20347">20347</span>
<span id="L20348" rel="#L20348">20348</span>
<span id="L20349" rel="#L20349">20349</span>
<span id="L20350" rel="#L20350">20350</span>
<span id="L20351" rel="#L20351">20351</span>
<span id="L20352" rel="#L20352">20352</span>
<span id="L20353" rel="#L20353">20353</span>
<span id="L20354" rel="#L20354">20354</span>
<span id="L20355" rel="#L20355">20355</span>
<span id="L20356" rel="#L20356">20356</span>
<span id="L20357" rel="#L20357">20357</span>
<span id="L20358" rel="#L20358">20358</span>
<span id="L20359" rel="#L20359">20359</span>
<span id="L20360" rel="#L20360">20360</span>
<span id="L20361" rel="#L20361">20361</span>
<span id="L20362" rel="#L20362">20362</span>
<span id="L20363" rel="#L20363">20363</span>
<span id="L20364" rel="#L20364">20364</span>
<span id="L20365" rel="#L20365">20365</span>
<span id="L20366" rel="#L20366">20366</span>
<span id="L20367" rel="#L20367">20367</span>
<span id="L20368" rel="#L20368">20368</span>
<span id="L20369" rel="#L20369">20369</span>
<span id="L20370" rel="#L20370">20370</span>
<span id="L20371" rel="#L20371">20371</span>
<span id="L20372" rel="#L20372">20372</span>
<span id="L20373" rel="#L20373">20373</span>
<span id="L20374" rel="#L20374">20374</span>
<span id="L20375" rel="#L20375">20375</span>
<span id="L20376" rel="#L20376">20376</span>
<span id="L20377" rel="#L20377">20377</span>
<span id="L20378" rel="#L20378">20378</span>
<span id="L20379" rel="#L20379">20379</span>
<span id="L20380" rel="#L20380">20380</span>
<span id="L20381" rel="#L20381">20381</span>
<span id="L20382" rel="#L20382">20382</span>
<span id="L20383" rel="#L20383">20383</span>
<span id="L20384" rel="#L20384">20384</span>
<span id="L20385" rel="#L20385">20385</span>
<span id="L20386" rel="#L20386">20386</span>
<span id="L20387" rel="#L20387">20387</span>
<span id="L20388" rel="#L20388">20388</span>
<span id="L20389" rel="#L20389">20389</span>
<span id="L20390" rel="#L20390">20390</span>
<span id="L20391" rel="#L20391">20391</span>
<span id="L20392" rel="#L20392">20392</span>
<span id="L20393" rel="#L20393">20393</span>
<span id="L20394" rel="#L20394">20394</span>
<span id="L20395" rel="#L20395">20395</span>
<span id="L20396" rel="#L20396">20396</span>
<span id="L20397" rel="#L20397">20397</span>
<span id="L20398" rel="#L20398">20398</span>
<span id="L20399" rel="#L20399">20399</span>
<span id="L20400" rel="#L20400">20400</span>
<span id="L20401" rel="#L20401">20401</span>
<span id="L20402" rel="#L20402">20402</span>
<span id="L20403" rel="#L20403">20403</span>
<span id="L20404" rel="#L20404">20404</span>
<span id="L20405" rel="#L20405">20405</span>
<span id="L20406" rel="#L20406">20406</span>
<span id="L20407" rel="#L20407">20407</span>
<span id="L20408" rel="#L20408">20408</span>
<span id="L20409" rel="#L20409">20409</span>
<span id="L20410" rel="#L20410">20410</span>
<span id="L20411" rel="#L20411">20411</span>
<span id="L20412" rel="#L20412">20412</span>
<span id="L20413" rel="#L20413">20413</span>
<span id="L20414" rel="#L20414">20414</span>
<span id="L20415" rel="#L20415">20415</span>
<span id="L20416" rel="#L20416">20416</span>
<span id="L20417" rel="#L20417">20417</span>
<span id="L20418" rel="#L20418">20418</span>
<span id="L20419" rel="#L20419">20419</span>
<span id="L20420" rel="#L20420">20420</span>
<span id="L20421" rel="#L20421">20421</span>
<span id="L20422" rel="#L20422">20422</span>
<span id="L20423" rel="#L20423">20423</span>
<span id="L20424" rel="#L20424">20424</span>
<span id="L20425" rel="#L20425">20425</span>
<span id="L20426" rel="#L20426">20426</span>
<span id="L20427" rel="#L20427">20427</span>
<span id="L20428" rel="#L20428">20428</span>
<span id="L20429" rel="#L20429">20429</span>
<span id="L20430" rel="#L20430">20430</span>
<span id="L20431" rel="#L20431">20431</span>
<span id="L20432" rel="#L20432">20432</span>
<span id="L20433" rel="#L20433">20433</span>
<span id="L20434" rel="#L20434">20434</span>
<span id="L20435" rel="#L20435">20435</span>
<span id="L20436" rel="#L20436">20436</span>
<span id="L20437" rel="#L20437">20437</span>
<span id="L20438" rel="#L20438">20438</span>
<span id="L20439" rel="#L20439">20439</span>
<span id="L20440" rel="#L20440">20440</span>
<span id="L20441" rel="#L20441">20441</span>
<span id="L20442" rel="#L20442">20442</span>
<span id="L20443" rel="#L20443">20443</span>
<span id="L20444" rel="#L20444">20444</span>
<span id="L20445" rel="#L20445">20445</span>
<span id="L20446" rel="#L20446">20446</span>
<span id="L20447" rel="#L20447">20447</span>
<span id="L20448" rel="#L20448">20448</span>
<span id="L20449" rel="#L20449">20449</span>
<span id="L20450" rel="#L20450">20450</span>
<span id="L20451" rel="#L20451">20451</span>
<span id="L20452" rel="#L20452">20452</span>
<span id="L20453" rel="#L20453">20453</span>
<span id="L20454" rel="#L20454">20454</span>
<span id="L20455" rel="#L20455">20455</span>
<span id="L20456" rel="#L20456">20456</span>
<span id="L20457" rel="#L20457">20457</span>
<span id="L20458" rel="#L20458">20458</span>
<span id="L20459" rel="#L20459">20459</span>
<span id="L20460" rel="#L20460">20460</span>
<span id="L20461" rel="#L20461">20461</span>
<span id="L20462" rel="#L20462">20462</span>
<span id="L20463" rel="#L20463">20463</span>
<span id="L20464" rel="#L20464">20464</span>
<span id="L20465" rel="#L20465">20465</span>
<span id="L20466" rel="#L20466">20466</span>
<span id="L20467" rel="#L20467">20467</span>
<span id="L20468" rel="#L20468">20468</span>
<span id="L20469" rel="#L20469">20469</span>
<span id="L20470" rel="#L20470">20470</span>
<span id="L20471" rel="#L20471">20471</span>
<span id="L20472" rel="#L20472">20472</span>
<span id="L20473" rel="#L20473">20473</span>
<span id="L20474" rel="#L20474">20474</span>
<span id="L20475" rel="#L20475">20475</span>
<span id="L20476" rel="#L20476">20476</span>
<span id="L20477" rel="#L20477">20477</span>
<span id="L20478" rel="#L20478">20478</span>
<span id="L20479" rel="#L20479">20479</span>
<span id="L20480" rel="#L20480">20480</span>
<span id="L20481" rel="#L20481">20481</span>
<span id="L20482" rel="#L20482">20482</span>
<span id="L20483" rel="#L20483">20483</span>
<span id="L20484" rel="#L20484">20484</span>
<span id="L20485" rel="#L20485">20485</span>
<span id="L20486" rel="#L20486">20486</span>
<span id="L20487" rel="#L20487">20487</span>
<span id="L20488" rel="#L20488">20488</span>
<span id="L20489" rel="#L20489">20489</span>
<span id="L20490" rel="#L20490">20490</span>
<span id="L20491" rel="#L20491">20491</span>
<span id="L20492" rel="#L20492">20492</span>
<span id="L20493" rel="#L20493">20493</span>
<span id="L20494" rel="#L20494">20494</span>
<span id="L20495" rel="#L20495">20495</span>
<span id="L20496" rel="#L20496">20496</span>
<span id="L20497" rel="#L20497">20497</span>
<span id="L20498" rel="#L20498">20498</span>
<span id="L20499" rel="#L20499">20499</span>
<span id="L20500" rel="#L20500">20500</span>
<span id="L20501" rel="#L20501">20501</span>
<span id="L20502" rel="#L20502">20502</span>
<span id="L20503" rel="#L20503">20503</span>
<span id="L20504" rel="#L20504">20504</span>
<span id="L20505" rel="#L20505">20505</span>
<span id="L20506" rel="#L20506">20506</span>
<span id="L20507" rel="#L20507">20507</span>
<span id="L20508" rel="#L20508">20508</span>
<span id="L20509" rel="#L20509">20509</span>
<span id="L20510" rel="#L20510">20510</span>
<span id="L20511" rel="#L20511">20511</span>
<span id="L20512" rel="#L20512">20512</span>
<span id="L20513" rel="#L20513">20513</span>
<span id="L20514" rel="#L20514">20514</span>
<span id="L20515" rel="#L20515">20515</span>
<span id="L20516" rel="#L20516">20516</span>
<span id="L20517" rel="#L20517">20517</span>
<span id="L20518" rel="#L20518">20518</span>
<span id="L20519" rel="#L20519">20519</span>
<span id="L20520" rel="#L20520">20520</span>
<span id="L20521" rel="#L20521">20521</span>
<span id="L20522" rel="#L20522">20522</span>
<span id="L20523" rel="#L20523">20523</span>
<span id="L20524" rel="#L20524">20524</span>
<span id="L20525" rel="#L20525">20525</span>
<span id="L20526" rel="#L20526">20526</span>
<span id="L20527" rel="#L20527">20527</span>
<span id="L20528" rel="#L20528">20528</span>
<span id="L20529" rel="#L20529">20529</span>
<span id="L20530" rel="#L20530">20530</span>
<span id="L20531" rel="#L20531">20531</span>
<span id="L20532" rel="#L20532">20532</span>
<span id="L20533" rel="#L20533">20533</span>
<span id="L20534" rel="#L20534">20534</span>
<span id="L20535" rel="#L20535">20535</span>
<span id="L20536" rel="#L20536">20536</span>
<span id="L20537" rel="#L20537">20537</span>
<span id="L20538" rel="#L20538">20538</span>
<span id="L20539" rel="#L20539">20539</span>
<span id="L20540" rel="#L20540">20540</span>
<span id="L20541" rel="#L20541">20541</span>
<span id="L20542" rel="#L20542">20542</span>
<span id="L20543" rel="#L20543">20543</span>
<span id="L20544" rel="#L20544">20544</span>
<span id="L20545" rel="#L20545">20545</span>
<span id="L20546" rel="#L20546">20546</span>
<span id="L20547" rel="#L20547">20547</span>
<span id="L20548" rel="#L20548">20548</span>
<span id="L20549" rel="#L20549">20549</span>
<span id="L20550" rel="#L20550">20550</span>
<span id="L20551" rel="#L20551">20551</span>
<span id="L20552" rel="#L20552">20552</span>
<span id="L20553" rel="#L20553">20553</span>
<span id="L20554" rel="#L20554">20554</span>
<span id="L20555" rel="#L20555">20555</span>
<span id="L20556" rel="#L20556">20556</span>
<span id="L20557" rel="#L20557">20557</span>
<span id="L20558" rel="#L20558">20558</span>
<span id="L20559" rel="#L20559">20559</span>
<span id="L20560" rel="#L20560">20560</span>
<span id="L20561" rel="#L20561">20561</span>
<span id="L20562" rel="#L20562">20562</span>
<span id="L20563" rel="#L20563">20563</span>
<span id="L20564" rel="#L20564">20564</span>
<span id="L20565" rel="#L20565">20565</span>
<span id="L20566" rel="#L20566">20566</span>
<span id="L20567" rel="#L20567">20567</span>
<span id="L20568" rel="#L20568">20568</span>
<span id="L20569" rel="#L20569">20569</span>
<span id="L20570" rel="#L20570">20570</span>
<span id="L20571" rel="#L20571">20571</span>
<span id="L20572" rel="#L20572">20572</span>
<span id="L20573" rel="#L20573">20573</span>
<span id="L20574" rel="#L20574">20574</span>
<span id="L20575" rel="#L20575">20575</span>
<span id="L20576" rel="#L20576">20576</span>
<span id="L20577" rel="#L20577">20577</span>
<span id="L20578" rel="#L20578">20578</span>
<span id="L20579" rel="#L20579">20579</span>
<span id="L20580" rel="#L20580">20580</span>
<span id="L20581" rel="#L20581">20581</span>
<span id="L20582" rel="#L20582">20582</span>
<span id="L20583" rel="#L20583">20583</span>
<span id="L20584" rel="#L20584">20584</span>
<span id="L20585" rel="#L20585">20585</span>
<span id="L20586" rel="#L20586">20586</span>
<span id="L20587" rel="#L20587">20587</span>
<span id="L20588" rel="#L20588">20588</span>
<span id="L20589" rel="#L20589">20589</span>
<span id="L20590" rel="#L20590">20590</span>
<span id="L20591" rel="#L20591">20591</span>
<span id="L20592" rel="#L20592">20592</span>
<span id="L20593" rel="#L20593">20593</span>
<span id="L20594" rel="#L20594">20594</span>
<span id="L20595" rel="#L20595">20595</span>
<span id="L20596" rel="#L20596">20596</span>
<span id="L20597" rel="#L20597">20597</span>
<span id="L20598" rel="#L20598">20598</span>
<span id="L20599" rel="#L20599">20599</span>
<span id="L20600" rel="#L20600">20600</span>
<span id="L20601" rel="#L20601">20601</span>
<span id="L20602" rel="#L20602">20602</span>
<span id="L20603" rel="#L20603">20603</span>
<span id="L20604" rel="#L20604">20604</span>
<span id="L20605" rel="#L20605">20605</span>
<span id="L20606" rel="#L20606">20606</span>
<span id="L20607" rel="#L20607">20607</span>
<span id="L20608" rel="#L20608">20608</span>
<span id="L20609" rel="#L20609">20609</span>
<span id="L20610" rel="#L20610">20610</span>
<span id="L20611" rel="#L20611">20611</span>
<span id="L20612" rel="#L20612">20612</span>
<span id="L20613" rel="#L20613">20613</span>
<span id="L20614" rel="#L20614">20614</span>
<span id="L20615" rel="#L20615">20615</span>
<span id="L20616" rel="#L20616">20616</span>
<span id="L20617" rel="#L20617">20617</span>
<span id="L20618" rel="#L20618">20618</span>
<span id="L20619" rel="#L20619">20619</span>
<span id="L20620" rel="#L20620">20620</span>
<span id="L20621" rel="#L20621">20621</span>
<span id="L20622" rel="#L20622">20622</span>
<span id="L20623" rel="#L20623">20623</span>
<span id="L20624" rel="#L20624">20624</span>
<span id="L20625" rel="#L20625">20625</span>
<span id="L20626" rel="#L20626">20626</span>
<span id="L20627" rel="#L20627">20627</span>
<span id="L20628" rel="#L20628">20628</span>
<span id="L20629" rel="#L20629">20629</span>
<span id="L20630" rel="#L20630">20630</span>
<span id="L20631" rel="#L20631">20631</span>
<span id="L20632" rel="#L20632">20632</span>
<span id="L20633" rel="#L20633">20633</span>
<span id="L20634" rel="#L20634">20634</span>
<span id="L20635" rel="#L20635">20635</span>
<span id="L20636" rel="#L20636">20636</span>
<span id="L20637" rel="#L20637">20637</span>
<span id="L20638" rel="#L20638">20638</span>
<span id="L20639" rel="#L20639">20639</span>
<span id="L20640" rel="#L20640">20640</span>
<span id="L20641" rel="#L20641">20641</span>
<span id="L20642" rel="#L20642">20642</span>
<span id="L20643" rel="#L20643">20643</span>
<span id="L20644" rel="#L20644">20644</span>
<span id="L20645" rel="#L20645">20645</span>
<span id="L20646" rel="#L20646">20646</span>
<span id="L20647" rel="#L20647">20647</span>
<span id="L20648" rel="#L20648">20648</span>
<span id="L20649" rel="#L20649">20649</span>
<span id="L20650" rel="#L20650">20650</span>
<span id="L20651" rel="#L20651">20651</span>
<span id="L20652" rel="#L20652">20652</span>
<span id="L20653" rel="#L20653">20653</span>
<span id="L20654" rel="#L20654">20654</span>
<span id="L20655" rel="#L20655">20655</span>
<span id="L20656" rel="#L20656">20656</span>
<span id="L20657" rel="#L20657">20657</span>
<span id="L20658" rel="#L20658">20658</span>
<span id="L20659" rel="#L20659">20659</span>
<span id="L20660" rel="#L20660">20660</span>
<span id="L20661" rel="#L20661">20661</span>
<span id="L20662" rel="#L20662">20662</span>
<span id="L20663" rel="#L20663">20663</span>
<span id="L20664" rel="#L20664">20664</span>
<span id="L20665" rel="#L20665">20665</span>
<span id="L20666" rel="#L20666">20666</span>
<span id="L20667" rel="#L20667">20667</span>
<span id="L20668" rel="#L20668">20668</span>
<span id="L20669" rel="#L20669">20669</span>
<span id="L20670" rel="#L20670">20670</span>
<span id="L20671" rel="#L20671">20671</span>
<span id="L20672" rel="#L20672">20672</span>
<span id="L20673" rel="#L20673">20673</span>
<span id="L20674" rel="#L20674">20674</span>
<span id="L20675" rel="#L20675">20675</span>
<span id="L20676" rel="#L20676">20676</span>
<span id="L20677" rel="#L20677">20677</span>
<span id="L20678" rel="#L20678">20678</span>
<span id="L20679" rel="#L20679">20679</span>
<span id="L20680" rel="#L20680">20680</span>
<span id="L20681" rel="#L20681">20681</span>
<span id="L20682" rel="#L20682">20682</span>
<span id="L20683" rel="#L20683">20683</span>
<span id="L20684" rel="#L20684">20684</span>
<span id="L20685" rel="#L20685">20685</span>
<span id="L20686" rel="#L20686">20686</span>
<span id="L20687" rel="#L20687">20687</span>
<span id="L20688" rel="#L20688">20688</span>
<span id="L20689" rel="#L20689">20689</span>
<span id="L20690" rel="#L20690">20690</span>
<span id="L20691" rel="#L20691">20691</span>
<span id="L20692" rel="#L20692">20692</span>
<span id="L20693" rel="#L20693">20693</span>
<span id="L20694" rel="#L20694">20694</span>
<span id="L20695" rel="#L20695">20695</span>
<span id="L20696" rel="#L20696">20696</span>
<span id="L20697" rel="#L20697">20697</span>
<span id="L20698" rel="#L20698">20698</span>
<span id="L20699" rel="#L20699">20699</span>
<span id="L20700" rel="#L20700">20700</span>
<span id="L20701" rel="#L20701">20701</span>
<span id="L20702" rel="#L20702">20702</span>
<span id="L20703" rel="#L20703">20703</span>
<span id="L20704" rel="#L20704">20704</span>
<span id="L20705" rel="#L20705">20705</span>
<span id="L20706" rel="#L20706">20706</span>
<span id="L20707" rel="#L20707">20707</span>
<span id="L20708" rel="#L20708">20708</span>
<span id="L20709" rel="#L20709">20709</span>
<span id="L20710" rel="#L20710">20710</span>
<span id="L20711" rel="#L20711">20711</span>
<span id="L20712" rel="#L20712">20712</span>
<span id="L20713" rel="#L20713">20713</span>
<span id="L20714" rel="#L20714">20714</span>
<span id="L20715" rel="#L20715">20715</span>
<span id="L20716" rel="#L20716">20716</span>
<span id="L20717" rel="#L20717">20717</span>
<span id="L20718" rel="#L20718">20718</span>
<span id="L20719" rel="#L20719">20719</span>
<span id="L20720" rel="#L20720">20720</span>
<span id="L20721" rel="#L20721">20721</span>
<span id="L20722" rel="#L20722">20722</span>
<span id="L20723" rel="#L20723">20723</span>
<span id="L20724" rel="#L20724">20724</span>
<span id="L20725" rel="#L20725">20725</span>
<span id="L20726" rel="#L20726">20726</span>
<span id="L20727" rel="#L20727">20727</span>
<span id="L20728" rel="#L20728">20728</span>
<span id="L20729" rel="#L20729">20729</span>
<span id="L20730" rel="#L20730">20730</span>
<span id="L20731" rel="#L20731">20731</span>
<span id="L20732" rel="#L20732">20732</span>
<span id="L20733" rel="#L20733">20733</span>
<span id="L20734" rel="#L20734">20734</span>
<span id="L20735" rel="#L20735">20735</span>
<span id="L20736" rel="#L20736">20736</span>
<span id="L20737" rel="#L20737">20737</span>
<span id="L20738" rel="#L20738">20738</span>
<span id="L20739" rel="#L20739">20739</span>
<span id="L20740" rel="#L20740">20740</span>
<span id="L20741" rel="#L20741">20741</span>
<span id="L20742" rel="#L20742">20742</span>
<span id="L20743" rel="#L20743">20743</span>
<span id="L20744" rel="#L20744">20744</span>
<span id="L20745" rel="#L20745">20745</span>
<span id="L20746" rel="#L20746">20746</span>
<span id="L20747" rel="#L20747">20747</span>
<span id="L20748" rel="#L20748">20748</span>
<span id="L20749" rel="#L20749">20749</span>
<span id="L20750" rel="#L20750">20750</span>
<span id="L20751" rel="#L20751">20751</span>
<span id="L20752" rel="#L20752">20752</span>
<span id="L20753" rel="#L20753">20753</span>
<span id="L20754" rel="#L20754">20754</span>
<span id="L20755" rel="#L20755">20755</span>
<span id="L20756" rel="#L20756">20756</span>
<span id="L20757" rel="#L20757">20757</span>
<span id="L20758" rel="#L20758">20758</span>
<span id="L20759" rel="#L20759">20759</span>
<span id="L20760" rel="#L20760">20760</span>
<span id="L20761" rel="#L20761">20761</span>
<span id="L20762" rel="#L20762">20762</span>
<span id="L20763" rel="#L20763">20763</span>
<span id="L20764" rel="#L20764">20764</span>
<span id="L20765" rel="#L20765">20765</span>
<span id="L20766" rel="#L20766">20766</span>
<span id="L20767" rel="#L20767">20767</span>
<span id="L20768" rel="#L20768">20768</span>
<span id="L20769" rel="#L20769">20769</span>
<span id="L20770" rel="#L20770">20770</span>
<span id="L20771" rel="#L20771">20771</span>
<span id="L20772" rel="#L20772">20772</span>
<span id="L20773" rel="#L20773">20773</span>
<span id="L20774" rel="#L20774">20774</span>
<span id="L20775" rel="#L20775">20775</span>
<span id="L20776" rel="#L20776">20776</span>
<span id="L20777" rel="#L20777">20777</span>
<span id="L20778" rel="#L20778">20778</span>
<span id="L20779" rel="#L20779">20779</span>
<span id="L20780" rel="#L20780">20780</span>
<span id="L20781" rel="#L20781">20781</span>
<span id="L20782" rel="#L20782">20782</span>
<span id="L20783" rel="#L20783">20783</span>
<span id="L20784" rel="#L20784">20784</span>
<span id="L20785" rel="#L20785">20785</span>
<span id="L20786" rel="#L20786">20786</span>
<span id="L20787" rel="#L20787">20787</span>
<span id="L20788" rel="#L20788">20788</span>
<span id="L20789" rel="#L20789">20789</span>
<span id="L20790" rel="#L20790">20790</span>
<span id="L20791" rel="#L20791">20791</span>
<span id="L20792" rel="#L20792">20792</span>
<span id="L20793" rel="#L20793">20793</span>
<span id="L20794" rel="#L20794">20794</span>
<span id="L20795" rel="#L20795">20795</span>
<span id="L20796" rel="#L20796">20796</span>
<span id="L20797" rel="#L20797">20797</span>
<span id="L20798" rel="#L20798">20798</span>
<span id="L20799" rel="#L20799">20799</span>
<span id="L20800" rel="#L20800">20800</span>
<span id="L20801" rel="#L20801">20801</span>
<span id="L20802" rel="#L20802">20802</span>
<span id="L20803" rel="#L20803">20803</span>
<span id="L20804" rel="#L20804">20804</span>
<span id="L20805" rel="#L20805">20805</span>
<span id="L20806" rel="#L20806">20806</span>
<span id="L20807" rel="#L20807">20807</span>
<span id="L20808" rel="#L20808">20808</span>
<span id="L20809" rel="#L20809">20809</span>
<span id="L20810" rel="#L20810">20810</span>
<span id="L20811" rel="#L20811">20811</span>
<span id="L20812" rel="#L20812">20812</span>
<span id="L20813" rel="#L20813">20813</span>
<span id="L20814" rel="#L20814">20814</span>
<span id="L20815" rel="#L20815">20815</span>
<span id="L20816" rel="#L20816">20816</span>
<span id="L20817" rel="#L20817">20817</span>
<span id="L20818" rel="#L20818">20818</span>
<span id="L20819" rel="#L20819">20819</span>
<span id="L20820" rel="#L20820">20820</span>
<span id="L20821" rel="#L20821">20821</span>
<span id="L20822" rel="#L20822">20822</span>
<span id="L20823" rel="#L20823">20823</span>
<span id="L20824" rel="#L20824">20824</span>
<span id="L20825" rel="#L20825">20825</span>
<span id="L20826" rel="#L20826">20826</span>
<span id="L20827" rel="#L20827">20827</span>
<span id="L20828" rel="#L20828">20828</span>
<span id="L20829" rel="#L20829">20829</span>
<span id="L20830" rel="#L20830">20830</span>
<span id="L20831" rel="#L20831">20831</span>
<span id="L20832" rel="#L20832">20832</span>
<span id="L20833" rel="#L20833">20833</span>
<span id="L20834" rel="#L20834">20834</span>
<span id="L20835" rel="#L20835">20835</span>
<span id="L20836" rel="#L20836">20836</span>
<span id="L20837" rel="#L20837">20837</span>
<span id="L20838" rel="#L20838">20838</span>
<span id="L20839" rel="#L20839">20839</span>
<span id="L20840" rel="#L20840">20840</span>
<span id="L20841" rel="#L20841">20841</span>
<span id="L20842" rel="#L20842">20842</span>
<span id="L20843" rel="#L20843">20843</span>
<span id="L20844" rel="#L20844">20844</span>
<span id="L20845" rel="#L20845">20845</span>
<span id="L20846" rel="#L20846">20846</span>
<span id="L20847" rel="#L20847">20847</span>
<span id="L20848" rel="#L20848">20848</span>
<span id="L20849" rel="#L20849">20849</span>
<span id="L20850" rel="#L20850">20850</span>
<span id="L20851" rel="#L20851">20851</span>
<span id="L20852" rel="#L20852">20852</span>
<span id="L20853" rel="#L20853">20853</span>
<span id="L20854" rel="#L20854">20854</span>
<span id="L20855" rel="#L20855">20855</span>
<span id="L20856" rel="#L20856">20856</span>
<span id="L20857" rel="#L20857">20857</span>
<span id="L20858" rel="#L20858">20858</span>
<span id="L20859" rel="#L20859">20859</span>
<span id="L20860" rel="#L20860">20860</span>
<span id="L20861" rel="#L20861">20861</span>
<span id="L20862" rel="#L20862">20862</span>
<span id="L20863" rel="#L20863">20863</span>
<span id="L20864" rel="#L20864">20864</span>
<span id="L20865" rel="#L20865">20865</span>
<span id="L20866" rel="#L20866">20866</span>
<span id="L20867" rel="#L20867">20867</span>
<span id="L20868" rel="#L20868">20868</span>
<span id="L20869" rel="#L20869">20869</span>
<span id="L20870" rel="#L20870">20870</span>
<span id="L20871" rel="#L20871">20871</span>
<span id="L20872" rel="#L20872">20872</span>
<span id="L20873" rel="#L20873">20873</span>
<span id="L20874" rel="#L20874">20874</span>
<span id="L20875" rel="#L20875">20875</span>
<span id="L20876" rel="#L20876">20876</span>
<span id="L20877" rel="#L20877">20877</span>
<span id="L20878" rel="#L20878">20878</span>
<span id="L20879" rel="#L20879">20879</span>
<span id="L20880" rel="#L20880">20880</span>
<span id="L20881" rel="#L20881">20881</span>
<span id="L20882" rel="#L20882">20882</span>
<span id="L20883" rel="#L20883">20883</span>
<span id="L20884" rel="#L20884">20884</span>
<span id="L20885" rel="#L20885">20885</span>
<span id="L20886" rel="#L20886">20886</span>
<span id="L20887" rel="#L20887">20887</span>
<span id="L20888" rel="#L20888">20888</span>
<span id="L20889" rel="#L20889">20889</span>
<span id="L20890" rel="#L20890">20890</span>
<span id="L20891" rel="#L20891">20891</span>
<span id="L20892" rel="#L20892">20892</span>
<span id="L20893" rel="#L20893">20893</span>
<span id="L20894" rel="#L20894">20894</span>
<span id="L20895" rel="#L20895">20895</span>
<span id="L20896" rel="#L20896">20896</span>
<span id="L20897" rel="#L20897">20897</span>
<span id="L20898" rel="#L20898">20898</span>
<span id="L20899" rel="#L20899">20899</span>
<span id="L20900" rel="#L20900">20900</span>
<span id="L20901" rel="#L20901">20901</span>
<span id="L20902" rel="#L20902">20902</span>
<span id="L20903" rel="#L20903">20903</span>
<span id="L20904" rel="#L20904">20904</span>
<span id="L20905" rel="#L20905">20905</span>
<span id="L20906" rel="#L20906">20906</span>
<span id="L20907" rel="#L20907">20907</span>
<span id="L20908" rel="#L20908">20908</span>
<span id="L20909" rel="#L20909">20909</span>
<span id="L20910" rel="#L20910">20910</span>
<span id="L20911" rel="#L20911">20911</span>
<span id="L20912" rel="#L20912">20912</span>
<span id="L20913" rel="#L20913">20913</span>
<span id="L20914" rel="#L20914">20914</span>
<span id="L20915" rel="#L20915">20915</span>
<span id="L20916" rel="#L20916">20916</span>
<span id="L20917" rel="#L20917">20917</span>
<span id="L20918" rel="#L20918">20918</span>
<span id="L20919" rel="#L20919">20919</span>
<span id="L20920" rel="#L20920">20920</span>
<span id="L20921" rel="#L20921">20921</span>
<span id="L20922" rel="#L20922">20922</span>
<span id="L20923" rel="#L20923">20923</span>
<span id="L20924" rel="#L20924">20924</span>
<span id="L20925" rel="#L20925">20925</span>
<span id="L20926" rel="#L20926">20926</span>
<span id="L20927" rel="#L20927">20927</span>
<span id="L20928" rel="#L20928">20928</span>
<span id="L20929" rel="#L20929">20929</span>
<span id="L20930" rel="#L20930">20930</span>
<span id="L20931" rel="#L20931">20931</span>
<span id="L20932" rel="#L20932">20932</span>
<span id="L20933" rel="#L20933">20933</span>
<span id="L20934" rel="#L20934">20934</span>
<span id="L20935" rel="#L20935">20935</span>
<span id="L20936" rel="#L20936">20936</span>
<span id="L20937" rel="#L20937">20937</span>
<span id="L20938" rel="#L20938">20938</span>
<span id="L20939" rel="#L20939">20939</span>
<span id="L20940" rel="#L20940">20940</span>
<span id="L20941" rel="#L20941">20941</span>
<span id="L20942" rel="#L20942">20942</span>
<span id="L20943" rel="#L20943">20943</span>
<span id="L20944" rel="#L20944">20944</span>
<span id="L20945" rel="#L20945">20945</span>
<span id="L20946" rel="#L20946">20946</span>
<span id="L20947" rel="#L20947">20947</span>
<span id="L20948" rel="#L20948">20948</span>
<span id="L20949" rel="#L20949">20949</span>
<span id="L20950" rel="#L20950">20950</span>
<span id="L20951" rel="#L20951">20951</span>
<span id="L20952" rel="#L20952">20952</span>
<span id="L20953" rel="#L20953">20953</span>
<span id="L20954" rel="#L20954">20954</span>
<span id="L20955" rel="#L20955">20955</span>
<span id="L20956" rel="#L20956">20956</span>
<span id="L20957" rel="#L20957">20957</span>
<span id="L20958" rel="#L20958">20958</span>
<span id="L20959" rel="#L20959">20959</span>
<span id="L20960" rel="#L20960">20960</span>
<span id="L20961" rel="#L20961">20961</span>
<span id="L20962" rel="#L20962">20962</span>
<span id="L20963" rel="#L20963">20963</span>
<span id="L20964" rel="#L20964">20964</span>
<span id="L20965" rel="#L20965">20965</span>
<span id="L20966" rel="#L20966">20966</span>
<span id="L20967" rel="#L20967">20967</span>
<span id="L20968" rel="#L20968">20968</span>
<span id="L20969" rel="#L20969">20969</span>
<span id="L20970" rel="#L20970">20970</span>
<span id="L20971" rel="#L20971">20971</span>
<span id="L20972" rel="#L20972">20972</span>
<span id="L20973" rel="#L20973">20973</span>
<span id="L20974" rel="#L20974">20974</span>
<span id="L20975" rel="#L20975">20975</span>
<span id="L20976" rel="#L20976">20976</span>
<span id="L20977" rel="#L20977">20977</span>
<span id="L20978" rel="#L20978">20978</span>
<span id="L20979" rel="#L20979">20979</span>
<span id="L20980" rel="#L20980">20980</span>
<span id="L20981" rel="#L20981">20981</span>
<span id="L20982" rel="#L20982">20982</span>
<span id="L20983" rel="#L20983">20983</span>
<span id="L20984" rel="#L20984">20984</span>
<span id="L20985" rel="#L20985">20985</span>
<span id="L20986" rel="#L20986">20986</span>
<span id="L20987" rel="#L20987">20987</span>
<span id="L20988" rel="#L20988">20988</span>
<span id="L20989" rel="#L20989">20989</span>
<span id="L20990" rel="#L20990">20990</span>
<span id="L20991" rel="#L20991">20991</span>
<span id="L20992" rel="#L20992">20992</span>
<span id="L20993" rel="#L20993">20993</span>
<span id="L20994" rel="#L20994">20994</span>
<span id="L20995" rel="#L20995">20995</span>
<span id="L20996" rel="#L20996">20996</span>
<span id="L20997" rel="#L20997">20997</span>
<span id="L20998" rel="#L20998">20998</span>
<span id="L20999" rel="#L20999">20999</span>
<span id="L21000" rel="#L21000">21000</span>
<span id="L21001" rel="#L21001">21001</span>
<span id="L21002" rel="#L21002">21002</span>
<span id="L21003" rel="#L21003">21003</span>
<span id="L21004" rel="#L21004">21004</span>
<span id="L21005" rel="#L21005">21005</span>
<span id="L21006" rel="#L21006">21006</span>
<span id="L21007" rel="#L21007">21007</span>
<span id="L21008" rel="#L21008">21008</span>
<span id="L21009" rel="#L21009">21009</span>
<span id="L21010" rel="#L21010">21010</span>
<span id="L21011" rel="#L21011">21011</span>
<span id="L21012" rel="#L21012">21012</span>
<span id="L21013" rel="#L21013">21013</span>
<span id="L21014" rel="#L21014">21014</span>
<span id="L21015" rel="#L21015">21015</span>
<span id="L21016" rel="#L21016">21016</span>
<span id="L21017" rel="#L21017">21017</span>
<span id="L21018" rel="#L21018">21018</span>
<span id="L21019" rel="#L21019">21019</span>
<span id="L21020" rel="#L21020">21020</span>
<span id="L21021" rel="#L21021">21021</span>
<span id="L21022" rel="#L21022">21022</span>
<span id="L21023" rel="#L21023">21023</span>
<span id="L21024" rel="#L21024">21024</span>
<span id="L21025" rel="#L21025">21025</span>
<span id="L21026" rel="#L21026">21026</span>
<span id="L21027" rel="#L21027">21027</span>
<span id="L21028" rel="#L21028">21028</span>
<span id="L21029" rel="#L21029">21029</span>
<span id="L21030" rel="#L21030">21030</span>
<span id="L21031" rel="#L21031">21031</span>
<span id="L21032" rel="#L21032">21032</span>
<span id="L21033" rel="#L21033">21033</span>
<span id="L21034" rel="#L21034">21034</span>
<span id="L21035" rel="#L21035">21035</span>
<span id="L21036" rel="#L21036">21036</span>
<span id="L21037" rel="#L21037">21037</span>
<span id="L21038" rel="#L21038">21038</span>
<span id="L21039" rel="#L21039">21039</span>
<span id="L21040" rel="#L21040">21040</span>
<span id="L21041" rel="#L21041">21041</span>
<span id="L21042" rel="#L21042">21042</span>
<span id="L21043" rel="#L21043">21043</span>
<span id="L21044" rel="#L21044">21044</span>
<span id="L21045" rel="#L21045">21045</span>
<span id="L21046" rel="#L21046">21046</span>
<span id="L21047" rel="#L21047">21047</span>
<span id="L21048" rel="#L21048">21048</span>
<span id="L21049" rel="#L21049">21049</span>
<span id="L21050" rel="#L21050">21050</span>
<span id="L21051" rel="#L21051">21051</span>
<span id="L21052" rel="#L21052">21052</span>
<span id="L21053" rel="#L21053">21053</span>
<span id="L21054" rel="#L21054">21054</span>
<span id="L21055" rel="#L21055">21055</span>
<span id="L21056" rel="#L21056">21056</span>
<span id="L21057" rel="#L21057">21057</span>
<span id="L21058" rel="#L21058">21058</span>
<span id="L21059" rel="#L21059">21059</span>
<span id="L21060" rel="#L21060">21060</span>
<span id="L21061" rel="#L21061">21061</span>
<span id="L21062" rel="#L21062">21062</span>
<span id="L21063" rel="#L21063">21063</span>
<span id="L21064" rel="#L21064">21064</span>
<span id="L21065" rel="#L21065">21065</span>
<span id="L21066" rel="#L21066">21066</span>
<span id="L21067" rel="#L21067">21067</span>
<span id="L21068" rel="#L21068">21068</span>
<span id="L21069" rel="#L21069">21069</span>
<span id="L21070" rel="#L21070">21070</span>
<span id="L21071" rel="#L21071">21071</span>
<span id="L21072" rel="#L21072">21072</span>
<span id="L21073" rel="#L21073">21073</span>
<span id="L21074" rel="#L21074">21074</span>
<span id="L21075" rel="#L21075">21075</span>
<span id="L21076" rel="#L21076">21076</span>
<span id="L21077" rel="#L21077">21077</span>
<span id="L21078" rel="#L21078">21078</span>
<span id="L21079" rel="#L21079">21079</span>
<span id="L21080" rel="#L21080">21080</span>
<span id="L21081" rel="#L21081">21081</span>
<span id="L21082" rel="#L21082">21082</span>
<span id="L21083" rel="#L21083">21083</span>
<span id="L21084" rel="#L21084">21084</span>
<span id="L21085" rel="#L21085">21085</span>
<span id="L21086" rel="#L21086">21086</span>
<span id="L21087" rel="#L21087">21087</span>
<span id="L21088" rel="#L21088">21088</span>
<span id="L21089" rel="#L21089">21089</span>
<span id="L21090" rel="#L21090">21090</span>
<span id="L21091" rel="#L21091">21091</span>
<span id="L21092" rel="#L21092">21092</span>
<span id="L21093" rel="#L21093">21093</span>
<span id="L21094" rel="#L21094">21094</span>
<span id="L21095" rel="#L21095">21095</span>
<span id="L21096" rel="#L21096">21096</span>
<span id="L21097" rel="#L21097">21097</span>
<span id="L21098" rel="#L21098">21098</span>
<span id="L21099" rel="#L21099">21099</span>
<span id="L21100" rel="#L21100">21100</span>
<span id="L21101" rel="#L21101">21101</span>
<span id="L21102" rel="#L21102">21102</span>
<span id="L21103" rel="#L21103">21103</span>
<span id="L21104" rel="#L21104">21104</span>
<span id="L21105" rel="#L21105">21105</span>
<span id="L21106" rel="#L21106">21106</span>
<span id="L21107" rel="#L21107">21107</span>
<span id="L21108" rel="#L21108">21108</span>
<span id="L21109" rel="#L21109">21109</span>
<span id="L21110" rel="#L21110">21110</span>
<span id="L21111" rel="#L21111">21111</span>
<span id="L21112" rel="#L21112">21112</span>
<span id="L21113" rel="#L21113">21113</span>
<span id="L21114" rel="#L21114">21114</span>
<span id="L21115" rel="#L21115">21115</span>
<span id="L21116" rel="#L21116">21116</span>
<span id="L21117" rel="#L21117">21117</span>
<span id="L21118" rel="#L21118">21118</span>
<span id="L21119" rel="#L21119">21119</span>
<span id="L21120" rel="#L21120">21120</span>
<span id="L21121" rel="#L21121">21121</span>
<span id="L21122" rel="#L21122">21122</span>
<span id="L21123" rel="#L21123">21123</span>
<span id="L21124" rel="#L21124">21124</span>
<span id="L21125" rel="#L21125">21125</span>
<span id="L21126" rel="#L21126">21126</span>
<span id="L21127" rel="#L21127">21127</span>
<span id="L21128" rel="#L21128">21128</span>
<span id="L21129" rel="#L21129">21129</span>
<span id="L21130" rel="#L21130">21130</span>
<span id="L21131" rel="#L21131">21131</span>
<span id="L21132" rel="#L21132">21132</span>
<span id="L21133" rel="#L21133">21133</span>
<span id="L21134" rel="#L21134">21134</span>
<span id="L21135" rel="#L21135">21135</span>
<span id="L21136" rel="#L21136">21136</span>
<span id="L21137" rel="#L21137">21137</span>
<span id="L21138" rel="#L21138">21138</span>
<span id="L21139" rel="#L21139">21139</span>
<span id="L21140" rel="#L21140">21140</span>
<span id="L21141" rel="#L21141">21141</span>
<span id="L21142" rel="#L21142">21142</span>
<span id="L21143" rel="#L21143">21143</span>
<span id="L21144" rel="#L21144">21144</span>
<span id="L21145" rel="#L21145">21145</span>
<span id="L21146" rel="#L21146">21146</span>
<span id="L21147" rel="#L21147">21147</span>
<span id="L21148" rel="#L21148">21148</span>
<span id="L21149" rel="#L21149">21149</span>
<span id="L21150" rel="#L21150">21150</span>
<span id="L21151" rel="#L21151">21151</span>
<span id="L21152" rel="#L21152">21152</span>
<span id="L21153" rel="#L21153">21153</span>
<span id="L21154" rel="#L21154">21154</span>
<span id="L21155" rel="#L21155">21155</span>
<span id="L21156" rel="#L21156">21156</span>
<span id="L21157" rel="#L21157">21157</span>
<span id="L21158" rel="#L21158">21158</span>
<span id="L21159" rel="#L21159">21159</span>
<span id="L21160" rel="#L21160">21160</span>
<span id="L21161" rel="#L21161">21161</span>
<span id="L21162" rel="#L21162">21162</span>
<span id="L21163" rel="#L21163">21163</span>
<span id="L21164" rel="#L21164">21164</span>
<span id="L21165" rel="#L21165">21165</span>
<span id="L21166" rel="#L21166">21166</span>
<span id="L21167" rel="#L21167">21167</span>
<span id="L21168" rel="#L21168">21168</span>
<span id="L21169" rel="#L21169">21169</span>
<span id="L21170" rel="#L21170">21170</span>
<span id="L21171" rel="#L21171">21171</span>
<span id="L21172" rel="#L21172">21172</span>
<span id="L21173" rel="#L21173">21173</span>
<span id="L21174" rel="#L21174">21174</span>
<span id="L21175" rel="#L21175">21175</span>
<span id="L21176" rel="#L21176">21176</span>
<span id="L21177" rel="#L21177">21177</span>
<span id="L21178" rel="#L21178">21178</span>
<span id="L21179" rel="#L21179">21179</span>
<span id="L21180" rel="#L21180">21180</span>
<span id="L21181" rel="#L21181">21181</span>
<span id="L21182" rel="#L21182">21182</span>
<span id="L21183" rel="#L21183">21183</span>
<span id="L21184" rel="#L21184">21184</span>
<span id="L21185" rel="#L21185">21185</span>
<span id="L21186" rel="#L21186">21186</span>
<span id="L21187" rel="#L21187">21187</span>
<span id="L21188" rel="#L21188">21188</span>
<span id="L21189" rel="#L21189">21189</span>
<span id="L21190" rel="#L21190">21190</span>
<span id="L21191" rel="#L21191">21191</span>
<span id="L21192" rel="#L21192">21192</span>
<span id="L21193" rel="#L21193">21193</span>
<span id="L21194" rel="#L21194">21194</span>
<span id="L21195" rel="#L21195">21195</span>
<span id="L21196" rel="#L21196">21196</span>
<span id="L21197" rel="#L21197">21197</span>
<span id="L21198" rel="#L21198">21198</span>
<span id="L21199" rel="#L21199">21199</span>
<span id="L21200" rel="#L21200">21200</span>
<span id="L21201" rel="#L21201">21201</span>
<span id="L21202" rel="#L21202">21202</span>
<span id="L21203" rel="#L21203">21203</span>
<span id="L21204" rel="#L21204">21204</span>
<span id="L21205" rel="#L21205">21205</span>
<span id="L21206" rel="#L21206">21206</span>
<span id="L21207" rel="#L21207">21207</span>
<span id="L21208" rel="#L21208">21208</span>
<span id="L21209" rel="#L21209">21209</span>
<span id="L21210" rel="#L21210">21210</span>
<span id="L21211" rel="#L21211">21211</span>
<span id="L21212" rel="#L21212">21212</span>
<span id="L21213" rel="#L21213">21213</span>
<span id="L21214" rel="#L21214">21214</span>
<span id="L21215" rel="#L21215">21215</span>
<span id="L21216" rel="#L21216">21216</span>
<span id="L21217" rel="#L21217">21217</span>
<span id="L21218" rel="#L21218">21218</span>
<span id="L21219" rel="#L21219">21219</span>
<span id="L21220" rel="#L21220">21220</span>
<span id="L21221" rel="#L21221">21221</span>
<span id="L21222" rel="#L21222">21222</span>
<span id="L21223" rel="#L21223">21223</span>
<span id="L21224" rel="#L21224">21224</span>
<span id="L21225" rel="#L21225">21225</span>
<span id="L21226" rel="#L21226">21226</span>
<span id="L21227" rel="#L21227">21227</span>
<span id="L21228" rel="#L21228">21228</span>
<span id="L21229" rel="#L21229">21229</span>
<span id="L21230" rel="#L21230">21230</span>
<span id="L21231" rel="#L21231">21231</span>
<span id="L21232" rel="#L21232">21232</span>
<span id="L21233" rel="#L21233">21233</span>
<span id="L21234" rel="#L21234">21234</span>
<span id="L21235" rel="#L21235">21235</span>
<span id="L21236" rel="#L21236">21236</span>
<span id="L21237" rel="#L21237">21237</span>
<span id="L21238" rel="#L21238">21238</span>
<span id="L21239" rel="#L21239">21239</span>
<span id="L21240" rel="#L21240">21240</span>
<span id="L21241" rel="#L21241">21241</span>
<span id="L21242" rel="#L21242">21242</span>
<span id="L21243" rel="#L21243">21243</span>
<span id="L21244" rel="#L21244">21244</span>
<span id="L21245" rel="#L21245">21245</span>
<span id="L21246" rel="#L21246">21246</span>
<span id="L21247" rel="#L21247">21247</span>
<span id="L21248" rel="#L21248">21248</span>
<span id="L21249" rel="#L21249">21249</span>
<span id="L21250" rel="#L21250">21250</span>
<span id="L21251" rel="#L21251">21251</span>
<span id="L21252" rel="#L21252">21252</span>
<span id="L21253" rel="#L21253">21253</span>
<span id="L21254" rel="#L21254">21254</span>
<span id="L21255" rel="#L21255">21255</span>
<span id="L21256" rel="#L21256">21256</span>
<span id="L21257" rel="#L21257">21257</span>
<span id="L21258" rel="#L21258">21258</span>
<span id="L21259" rel="#L21259">21259</span>
<span id="L21260" rel="#L21260">21260</span>
<span id="L21261" rel="#L21261">21261</span>
<span id="L21262" rel="#L21262">21262</span>
<span id="L21263" rel="#L21263">21263</span>
<span id="L21264" rel="#L21264">21264</span>
<span id="L21265" rel="#L21265">21265</span>
<span id="L21266" rel="#L21266">21266</span>
<span id="L21267" rel="#L21267">21267</span>
<span id="L21268" rel="#L21268">21268</span>
<span id="L21269" rel="#L21269">21269</span>
<span id="L21270" rel="#L21270">21270</span>
<span id="L21271" rel="#L21271">21271</span>
<span id="L21272" rel="#L21272">21272</span>
<span id="L21273" rel="#L21273">21273</span>
<span id="L21274" rel="#L21274">21274</span>
<span id="L21275" rel="#L21275">21275</span>
<span id="L21276" rel="#L21276">21276</span>
<span id="L21277" rel="#L21277">21277</span>
<span id="L21278" rel="#L21278">21278</span>
<span id="L21279" rel="#L21279">21279</span>
<span id="L21280" rel="#L21280">21280</span>
<span id="L21281" rel="#L21281">21281</span>
<span id="L21282" rel="#L21282">21282</span>
<span id="L21283" rel="#L21283">21283</span>
<span id="L21284" rel="#L21284">21284</span>
<span id="L21285" rel="#L21285">21285</span>
<span id="L21286" rel="#L21286">21286</span>
<span id="L21287" rel="#L21287">21287</span>
<span id="L21288" rel="#L21288">21288</span>
<span id="L21289" rel="#L21289">21289</span>
<span id="L21290" rel="#L21290">21290</span>
<span id="L21291" rel="#L21291">21291</span>
<span id="L21292" rel="#L21292">21292</span>
<span id="L21293" rel="#L21293">21293</span>
<span id="L21294" rel="#L21294">21294</span>
<span id="L21295" rel="#L21295">21295</span>
<span id="L21296" rel="#L21296">21296</span>
<span id="L21297" rel="#L21297">21297</span>
<span id="L21298" rel="#L21298">21298</span>
<span id="L21299" rel="#L21299">21299</span>
<span id="L21300" rel="#L21300">21300</span>
<span id="L21301" rel="#L21301">21301</span>
<span id="L21302" rel="#L21302">21302</span>
<span id="L21303" rel="#L21303">21303</span>
<span id="L21304" rel="#L21304">21304</span>
<span id="L21305" rel="#L21305">21305</span>
<span id="L21306" rel="#L21306">21306</span>
<span id="L21307" rel="#L21307">21307</span>
<span id="L21308" rel="#L21308">21308</span>
<span id="L21309" rel="#L21309">21309</span>
<span id="L21310" rel="#L21310">21310</span>
<span id="L21311" rel="#L21311">21311</span>
<span id="L21312" rel="#L21312">21312</span>
<span id="L21313" rel="#L21313">21313</span>
<span id="L21314" rel="#L21314">21314</span>
<span id="L21315" rel="#L21315">21315</span>
<span id="L21316" rel="#L21316">21316</span>
<span id="L21317" rel="#L21317">21317</span>
<span id="L21318" rel="#L21318">21318</span>
<span id="L21319" rel="#L21319">21319</span>
<span id="L21320" rel="#L21320">21320</span>
<span id="L21321" rel="#L21321">21321</span>
<span id="L21322" rel="#L21322">21322</span>
<span id="L21323" rel="#L21323">21323</span>
<span id="L21324" rel="#L21324">21324</span>
<span id="L21325" rel="#L21325">21325</span>
<span id="L21326" rel="#L21326">21326</span>
<span id="L21327" rel="#L21327">21327</span>
<span id="L21328" rel="#L21328">21328</span>
<span id="L21329" rel="#L21329">21329</span>
<span id="L21330" rel="#L21330">21330</span>
<span id="L21331" rel="#L21331">21331</span>
<span id="L21332" rel="#L21332">21332</span>
<span id="L21333" rel="#L21333">21333</span>
<span id="L21334" rel="#L21334">21334</span>
<span id="L21335" rel="#L21335">21335</span>
<span id="L21336" rel="#L21336">21336</span>
<span id="L21337" rel="#L21337">21337</span>
<span id="L21338" rel="#L21338">21338</span>
<span id="L21339" rel="#L21339">21339</span>
<span id="L21340" rel="#L21340">21340</span>
<span id="L21341" rel="#L21341">21341</span>
<span id="L21342" rel="#L21342">21342</span>
<span id="L21343" rel="#L21343">21343</span>
<span id="L21344" rel="#L21344">21344</span>
<span id="L21345" rel="#L21345">21345</span>
<span id="L21346" rel="#L21346">21346</span>
<span id="L21347" rel="#L21347">21347</span>
<span id="L21348" rel="#L21348">21348</span>
<span id="L21349" rel="#L21349">21349</span>
<span id="L21350" rel="#L21350">21350</span>
<span id="L21351" rel="#L21351">21351</span>
<span id="L21352" rel="#L21352">21352</span>
<span id="L21353" rel="#L21353">21353</span>
<span id="L21354" rel="#L21354">21354</span>
<span id="L21355" rel="#L21355">21355</span>
<span id="L21356" rel="#L21356">21356</span>
<span id="L21357" rel="#L21357">21357</span>
<span id="L21358" rel="#L21358">21358</span>
<span id="L21359" rel="#L21359">21359</span>
<span id="L21360" rel="#L21360">21360</span>
<span id="L21361" rel="#L21361">21361</span>
<span id="L21362" rel="#L21362">21362</span>
<span id="L21363" rel="#L21363">21363</span>
<span id="L21364" rel="#L21364">21364</span>
<span id="L21365" rel="#L21365">21365</span>
<span id="L21366" rel="#L21366">21366</span>
<span id="L21367" rel="#L21367">21367</span>
<span id="L21368" rel="#L21368">21368</span>
<span id="L21369" rel="#L21369">21369</span>
<span id="L21370" rel="#L21370">21370</span>
<span id="L21371" rel="#L21371">21371</span>
<span id="L21372" rel="#L21372">21372</span>
<span id="L21373" rel="#L21373">21373</span>
<span id="L21374" rel="#L21374">21374</span>
<span id="L21375" rel="#L21375">21375</span>
<span id="L21376" rel="#L21376">21376</span>
<span id="L21377" rel="#L21377">21377</span>
<span id="L21378" rel="#L21378">21378</span>
<span id="L21379" rel="#L21379">21379</span>
<span id="L21380" rel="#L21380">21380</span>
<span id="L21381" rel="#L21381">21381</span>
<span id="L21382" rel="#L21382">21382</span>
<span id="L21383" rel="#L21383">21383</span>
<span id="L21384" rel="#L21384">21384</span>
<span id="L21385" rel="#L21385">21385</span>
<span id="L21386" rel="#L21386">21386</span>
<span id="L21387" rel="#L21387">21387</span>
<span id="L21388" rel="#L21388">21388</span>
<span id="L21389" rel="#L21389">21389</span>
<span id="L21390" rel="#L21390">21390</span>
<span id="L21391" rel="#L21391">21391</span>
<span id="L21392" rel="#L21392">21392</span>
<span id="L21393" rel="#L21393">21393</span>
<span id="L21394" rel="#L21394">21394</span>
<span id="L21395" rel="#L21395">21395</span>
<span id="L21396" rel="#L21396">21396</span>
<span id="L21397" rel="#L21397">21397</span>
<span id="L21398" rel="#L21398">21398</span>
<span id="L21399" rel="#L21399">21399</span>
<span id="L21400" rel="#L21400">21400</span>
<span id="L21401" rel="#L21401">21401</span>
<span id="L21402" rel="#L21402">21402</span>
<span id="L21403" rel="#L21403">21403</span>
<span id="L21404" rel="#L21404">21404</span>
<span id="L21405" rel="#L21405">21405</span>
<span id="L21406" rel="#L21406">21406</span>
<span id="L21407" rel="#L21407">21407</span>
<span id="L21408" rel="#L21408">21408</span>
<span id="L21409" rel="#L21409">21409</span>
<span id="L21410" rel="#L21410">21410</span>
<span id="L21411" rel="#L21411">21411</span>
<span id="L21412" rel="#L21412">21412</span>
<span id="L21413" rel="#L21413">21413</span>
<span id="L21414" rel="#L21414">21414</span>
<span id="L21415" rel="#L21415">21415</span>
<span id="L21416" rel="#L21416">21416</span>
<span id="L21417" rel="#L21417">21417</span>
<span id="L21418" rel="#L21418">21418</span>
<span id="L21419" rel="#L21419">21419</span>
<span id="L21420" rel="#L21420">21420</span>
<span id="L21421" rel="#L21421">21421</span>
<span id="L21422" rel="#L21422">21422</span>
<span id="L21423" rel="#L21423">21423</span>
<span id="L21424" rel="#L21424">21424</span>
<span id="L21425" rel="#L21425">21425</span>
<span id="L21426" rel="#L21426">21426</span>
<span id="L21427" rel="#L21427">21427</span>
<span id="L21428" rel="#L21428">21428</span>
<span id="L21429" rel="#L21429">21429</span>
<span id="L21430" rel="#L21430">21430</span>
<span id="L21431" rel="#L21431">21431</span>
<span id="L21432" rel="#L21432">21432</span>
<span id="L21433" rel="#L21433">21433</span>
<span id="L21434" rel="#L21434">21434</span>
<span id="L21435" rel="#L21435">21435</span>
<span id="L21436" rel="#L21436">21436</span>
<span id="L21437" rel="#L21437">21437</span>
<span id="L21438" rel="#L21438">21438</span>
<span id="L21439" rel="#L21439">21439</span>
<span id="L21440" rel="#L21440">21440</span>
<span id="L21441" rel="#L21441">21441</span>
<span id="L21442" rel="#L21442">21442</span>
<span id="L21443" rel="#L21443">21443</span>
<span id="L21444" rel="#L21444">21444</span>
<span id="L21445" rel="#L21445">21445</span>
<span id="L21446" rel="#L21446">21446</span>
<span id="L21447" rel="#L21447">21447</span>
<span id="L21448" rel="#L21448">21448</span>
<span id="L21449" rel="#L21449">21449</span>
<span id="L21450" rel="#L21450">21450</span>
<span id="L21451" rel="#L21451">21451</span>
<span id="L21452" rel="#L21452">21452</span>
<span id="L21453" rel="#L21453">21453</span>
<span id="L21454" rel="#L21454">21454</span>
<span id="L21455" rel="#L21455">21455</span>
<span id="L21456" rel="#L21456">21456</span>
<span id="L21457" rel="#L21457">21457</span>
<span id="L21458" rel="#L21458">21458</span>
<span id="L21459" rel="#L21459">21459</span>
<span id="L21460" rel="#L21460">21460</span>
<span id="L21461" rel="#L21461">21461</span>
<span id="L21462" rel="#L21462">21462</span>
<span id="L21463" rel="#L21463">21463</span>
<span id="L21464" rel="#L21464">21464</span>
<span id="L21465" rel="#L21465">21465</span>
<span id="L21466" rel="#L21466">21466</span>
<span id="L21467" rel="#L21467">21467</span>
<span id="L21468" rel="#L21468">21468</span>
<span id="L21469" rel="#L21469">21469</span>
<span id="L21470" rel="#L21470">21470</span>
<span id="L21471" rel="#L21471">21471</span>
<span id="L21472" rel="#L21472">21472</span>
<span id="L21473" rel="#L21473">21473</span>
<span id="L21474" rel="#L21474">21474</span>
<span id="L21475" rel="#L21475">21475</span>
<span id="L21476" rel="#L21476">21476</span>
<span id="L21477" rel="#L21477">21477</span>
<span id="L21478" rel="#L21478">21478</span>
<span id="L21479" rel="#L21479">21479</span>
<span id="L21480" rel="#L21480">21480</span>
<span id="L21481" rel="#L21481">21481</span>
<span id="L21482" rel="#L21482">21482</span>
<span id="L21483" rel="#L21483">21483</span>
<span id="L21484" rel="#L21484">21484</span>
<span id="L21485" rel="#L21485">21485</span>
<span id="L21486" rel="#L21486">21486</span>
<span id="L21487" rel="#L21487">21487</span>
<span id="L21488" rel="#L21488">21488</span>
<span id="L21489" rel="#L21489">21489</span>
<span id="L21490" rel="#L21490">21490</span>
<span id="L21491" rel="#L21491">21491</span>
<span id="L21492" rel="#L21492">21492</span>
<span id="L21493" rel="#L21493">21493</span>
<span id="L21494" rel="#L21494">21494</span>
<span id="L21495" rel="#L21495">21495</span>
<span id="L21496" rel="#L21496">21496</span>
<span id="L21497" rel="#L21497">21497</span>
<span id="L21498" rel="#L21498">21498</span>
<span id="L21499" rel="#L21499">21499</span>
<span id="L21500" rel="#L21500">21500</span>
<span id="L21501" rel="#L21501">21501</span>
<span id="L21502" rel="#L21502">21502</span>
<span id="L21503" rel="#L21503">21503</span>
<span id="L21504" rel="#L21504">21504</span>
<span id="L21505" rel="#L21505">21505</span>
<span id="L21506" rel="#L21506">21506</span>
<span id="L21507" rel="#L21507">21507</span>
<span id="L21508" rel="#L21508">21508</span>
<span id="L21509" rel="#L21509">21509</span>
<span id="L21510" rel="#L21510">21510</span>
<span id="L21511" rel="#L21511">21511</span>
<span id="L21512" rel="#L21512">21512</span>
<span id="L21513" rel="#L21513">21513</span>
<span id="L21514" rel="#L21514">21514</span>
<span id="L21515" rel="#L21515">21515</span>
<span id="L21516" rel="#L21516">21516</span>
<span id="L21517" rel="#L21517">21517</span>
<span id="L21518" rel="#L21518">21518</span>
<span id="L21519" rel="#L21519">21519</span>
<span id="L21520" rel="#L21520">21520</span>
<span id="L21521" rel="#L21521">21521</span>
<span id="L21522" rel="#L21522">21522</span>
<span id="L21523" rel="#L21523">21523</span>
<span id="L21524" rel="#L21524">21524</span>
<span id="L21525" rel="#L21525">21525</span>
<span id="L21526" rel="#L21526">21526</span>
<span id="L21527" rel="#L21527">21527</span>
<span id="L21528" rel="#L21528">21528</span>
<span id="L21529" rel="#L21529">21529</span>
<span id="L21530" rel="#L21530">21530</span>
<span id="L21531" rel="#L21531">21531</span>
<span id="L21532" rel="#L21532">21532</span>
<span id="L21533" rel="#L21533">21533</span>
<span id="L21534" rel="#L21534">21534</span>
<span id="L21535" rel="#L21535">21535</span>
<span id="L21536" rel="#L21536">21536</span>
<span id="L21537" rel="#L21537">21537</span>
<span id="L21538" rel="#L21538">21538</span>
<span id="L21539" rel="#L21539">21539</span>
<span id="L21540" rel="#L21540">21540</span>
<span id="L21541" rel="#L21541">21541</span>
<span id="L21542" rel="#L21542">21542</span>
<span id="L21543" rel="#L21543">21543</span>
<span id="L21544" rel="#L21544">21544</span>
<span id="L21545" rel="#L21545">21545</span>
<span id="L21546" rel="#L21546">21546</span>
<span id="L21547" rel="#L21547">21547</span>
<span id="L21548" rel="#L21548">21548</span>
<span id="L21549" rel="#L21549">21549</span>
<span id="L21550" rel="#L21550">21550</span>
<span id="L21551" rel="#L21551">21551</span>
<span id="L21552" rel="#L21552">21552</span>
<span id="L21553" rel="#L21553">21553</span>
<span id="L21554" rel="#L21554">21554</span>
<span id="L21555" rel="#L21555">21555</span>
<span id="L21556" rel="#L21556">21556</span>
<span id="L21557" rel="#L21557">21557</span>
<span id="L21558" rel="#L21558">21558</span>
<span id="L21559" rel="#L21559">21559</span>
<span id="L21560" rel="#L21560">21560</span>
<span id="L21561" rel="#L21561">21561</span>
<span id="L21562" rel="#L21562">21562</span>
<span id="L21563" rel="#L21563">21563</span>
<span id="L21564" rel="#L21564">21564</span>
<span id="L21565" rel="#L21565">21565</span>
<span id="L21566" rel="#L21566">21566</span>
<span id="L21567" rel="#L21567">21567</span>
<span id="L21568" rel="#L21568">21568</span>
<span id="L21569" rel="#L21569">21569</span>
<span id="L21570" rel="#L21570">21570</span>
<span id="L21571" rel="#L21571">21571</span>
<span id="L21572" rel="#L21572">21572</span>
<span id="L21573" rel="#L21573">21573</span>
<span id="L21574" rel="#L21574">21574</span>
<span id="L21575" rel="#L21575">21575</span>
<span id="L21576" rel="#L21576">21576</span>
<span id="L21577" rel="#L21577">21577</span>
<span id="L21578" rel="#L21578">21578</span>
<span id="L21579" rel="#L21579">21579</span>
<span id="L21580" rel="#L21580">21580</span>
<span id="L21581" rel="#L21581">21581</span>
<span id="L21582" rel="#L21582">21582</span>
<span id="L21583" rel="#L21583">21583</span>
<span id="L21584" rel="#L21584">21584</span>
<span id="L21585" rel="#L21585">21585</span>
<span id="L21586" rel="#L21586">21586</span>
<span id="L21587" rel="#L21587">21587</span>
<span id="L21588" rel="#L21588">21588</span>
<span id="L21589" rel="#L21589">21589</span>
<span id="L21590" rel="#L21590">21590</span>
<span id="L21591" rel="#L21591">21591</span>
<span id="L21592" rel="#L21592">21592</span>
<span id="L21593" rel="#L21593">21593</span>
<span id="L21594" rel="#L21594">21594</span>
<span id="L21595" rel="#L21595">21595</span>
<span id="L21596" rel="#L21596">21596</span>
<span id="L21597" rel="#L21597">21597</span>
<span id="L21598" rel="#L21598">21598</span>
<span id="L21599" rel="#L21599">21599</span>
<span id="L21600" rel="#L21600">21600</span>
<span id="L21601" rel="#L21601">21601</span>
<span id="L21602" rel="#L21602">21602</span>
<span id="L21603" rel="#L21603">21603</span>
<span id="L21604" rel="#L21604">21604</span>
<span id="L21605" rel="#L21605">21605</span>
<span id="L21606" rel="#L21606">21606</span>
<span id="L21607" rel="#L21607">21607</span>
<span id="L21608" rel="#L21608">21608</span>
<span id="L21609" rel="#L21609">21609</span>
<span id="L21610" rel="#L21610">21610</span>
<span id="L21611" rel="#L21611">21611</span>
<span id="L21612" rel="#L21612">21612</span>
<span id="L21613" rel="#L21613">21613</span>
<span id="L21614" rel="#L21614">21614</span>
<span id="L21615" rel="#L21615">21615</span>
<span id="L21616" rel="#L21616">21616</span>
<span id="L21617" rel="#L21617">21617</span>
<span id="L21618" rel="#L21618">21618</span>
<span id="L21619" rel="#L21619">21619</span>
<span id="L21620" rel="#L21620">21620</span>
<span id="L21621" rel="#L21621">21621</span>
<span id="L21622" rel="#L21622">21622</span>
<span id="L21623" rel="#L21623">21623</span>
<span id="L21624" rel="#L21624">21624</span>
<span id="L21625" rel="#L21625">21625</span>
<span id="L21626" rel="#L21626">21626</span>
<span id="L21627" rel="#L21627">21627</span>
<span id="L21628" rel="#L21628">21628</span>
<span id="L21629" rel="#L21629">21629</span>
<span id="L21630" rel="#L21630">21630</span>
<span id="L21631" rel="#L21631">21631</span>
<span id="L21632" rel="#L21632">21632</span>
<span id="L21633" rel="#L21633">21633</span>
<span id="L21634" rel="#L21634">21634</span>
<span id="L21635" rel="#L21635">21635</span>
<span id="L21636" rel="#L21636">21636</span>
<span id="L21637" rel="#L21637">21637</span>
<span id="L21638" rel="#L21638">21638</span>
<span id="L21639" rel="#L21639">21639</span>
<span id="L21640" rel="#L21640">21640</span>
<span id="L21641" rel="#L21641">21641</span>
<span id="L21642" rel="#L21642">21642</span>
<span id="L21643" rel="#L21643">21643</span>
<span id="L21644" rel="#L21644">21644</span>
<span id="L21645" rel="#L21645">21645</span>
<span id="L21646" rel="#L21646">21646</span>
<span id="L21647" rel="#L21647">21647</span>
<span id="L21648" rel="#L21648">21648</span>
<span id="L21649" rel="#L21649">21649</span>
<span id="L21650" rel="#L21650">21650</span>
<span id="L21651" rel="#L21651">21651</span>
<span id="L21652" rel="#L21652">21652</span>
<span id="L21653" rel="#L21653">21653</span>
<span id="L21654" rel="#L21654">21654</span>
<span id="L21655" rel="#L21655">21655</span>
<span id="L21656" rel="#L21656">21656</span>
<span id="L21657" rel="#L21657">21657</span>
<span id="L21658" rel="#L21658">21658</span>
<span id="L21659" rel="#L21659">21659</span>
<span id="L21660" rel="#L21660">21660</span>
<span id="L21661" rel="#L21661">21661</span>
<span id="L21662" rel="#L21662">21662</span>
<span id="L21663" rel="#L21663">21663</span>
<span id="L21664" rel="#L21664">21664</span>
<span id="L21665" rel="#L21665">21665</span>
<span id="L21666" rel="#L21666">21666</span>
<span id="L21667" rel="#L21667">21667</span>
<span id="L21668" rel="#L21668">21668</span>
<span id="L21669" rel="#L21669">21669</span>
<span id="L21670" rel="#L21670">21670</span>
<span id="L21671" rel="#L21671">21671</span>
<span id="L21672" rel="#L21672">21672</span>
<span id="L21673" rel="#L21673">21673</span>
<span id="L21674" rel="#L21674">21674</span>
<span id="L21675" rel="#L21675">21675</span>
<span id="L21676" rel="#L21676">21676</span>
<span id="L21677" rel="#L21677">21677</span>
<span id="L21678" rel="#L21678">21678</span>
<span id="L21679" rel="#L21679">21679</span>
<span id="L21680" rel="#L21680">21680</span>
<span id="L21681" rel="#L21681">21681</span>
<span id="L21682" rel="#L21682">21682</span>
<span id="L21683" rel="#L21683">21683</span>
<span id="L21684" rel="#L21684">21684</span>
<span id="L21685" rel="#L21685">21685</span>
<span id="L21686" rel="#L21686">21686</span>
<span id="L21687" rel="#L21687">21687</span>
<span id="L21688" rel="#L21688">21688</span>
<span id="L21689" rel="#L21689">21689</span>
<span id="L21690" rel="#L21690">21690</span>
<span id="L21691" rel="#L21691">21691</span>
<span id="L21692" rel="#L21692">21692</span>
<span id="L21693" rel="#L21693">21693</span>
<span id="L21694" rel="#L21694">21694</span>
<span id="L21695" rel="#L21695">21695</span>
<span id="L21696" rel="#L21696">21696</span>
<span id="L21697" rel="#L21697">21697</span>
<span id="L21698" rel="#L21698">21698</span>
<span id="L21699" rel="#L21699">21699</span>
<span id="L21700" rel="#L21700">21700</span>
<span id="L21701" rel="#L21701">21701</span>
<span id="L21702" rel="#L21702">21702</span>
<span id="L21703" rel="#L21703">21703</span>
<span id="L21704" rel="#L21704">21704</span>
<span id="L21705" rel="#L21705">21705</span>
<span id="L21706" rel="#L21706">21706</span>
<span id="L21707" rel="#L21707">21707</span>
<span id="L21708" rel="#L21708">21708</span>
<span id="L21709" rel="#L21709">21709</span>
<span id="L21710" rel="#L21710">21710</span>
<span id="L21711" rel="#L21711">21711</span>
<span id="L21712" rel="#L21712">21712</span>
<span id="L21713" rel="#L21713">21713</span>
<span id="L21714" rel="#L21714">21714</span>
<span id="L21715" rel="#L21715">21715</span>
<span id="L21716" rel="#L21716">21716</span>
<span id="L21717" rel="#L21717">21717</span>
<span id="L21718" rel="#L21718">21718</span>
<span id="L21719" rel="#L21719">21719</span>
<span id="L21720" rel="#L21720">21720</span>
<span id="L21721" rel="#L21721">21721</span>
<span id="L21722" rel="#L21722">21722</span>
<span id="L21723" rel="#L21723">21723</span>
<span id="L21724" rel="#L21724">21724</span>
<span id="L21725" rel="#L21725">21725</span>
<span id="L21726" rel="#L21726">21726</span>
<span id="L21727" rel="#L21727">21727</span>
<span id="L21728" rel="#L21728">21728</span>
<span id="L21729" rel="#L21729">21729</span>
<span id="L21730" rel="#L21730">21730</span>
<span id="L21731" rel="#L21731">21731</span>
<span id="L21732" rel="#L21732">21732</span>
<span id="L21733" rel="#L21733">21733</span>
<span id="L21734" rel="#L21734">21734</span>
<span id="L21735" rel="#L21735">21735</span>
<span id="L21736" rel="#L21736">21736</span>
<span id="L21737" rel="#L21737">21737</span>
<span id="L21738" rel="#L21738">21738</span>
<span id="L21739" rel="#L21739">21739</span>
<span id="L21740" rel="#L21740">21740</span>
<span id="L21741" rel="#L21741">21741</span>
<span id="L21742" rel="#L21742">21742</span>
<span id="L21743" rel="#L21743">21743</span>
<span id="L21744" rel="#L21744">21744</span>
<span id="L21745" rel="#L21745">21745</span>
<span id="L21746" rel="#L21746">21746</span>
<span id="L21747" rel="#L21747">21747</span>
<span id="L21748" rel="#L21748">21748</span>
<span id="L21749" rel="#L21749">21749</span>
<span id="L21750" rel="#L21750">21750</span>
<span id="L21751" rel="#L21751">21751</span>
<span id="L21752" rel="#L21752">21752</span>
<span id="L21753" rel="#L21753">21753</span>
<span id="L21754" rel="#L21754">21754</span>
<span id="L21755" rel="#L21755">21755</span>
<span id="L21756" rel="#L21756">21756</span>
<span id="L21757" rel="#L21757">21757</span>
<span id="L21758" rel="#L21758">21758</span>
<span id="L21759" rel="#L21759">21759</span>
<span id="L21760" rel="#L21760">21760</span>
<span id="L21761" rel="#L21761">21761</span>
<span id="L21762" rel="#L21762">21762</span>
<span id="L21763" rel="#L21763">21763</span>
<span id="L21764" rel="#L21764">21764</span>
<span id="L21765" rel="#L21765">21765</span>
<span id="L21766" rel="#L21766">21766</span>
<span id="L21767" rel="#L21767">21767</span>
<span id="L21768" rel="#L21768">21768</span>
<span id="L21769" rel="#L21769">21769</span>
<span id="L21770" rel="#L21770">21770</span>
<span id="L21771" rel="#L21771">21771</span>
<span id="L21772" rel="#L21772">21772</span>
<span id="L21773" rel="#L21773">21773</span>
<span id="L21774" rel="#L21774">21774</span>
<span id="L21775" rel="#L21775">21775</span>
<span id="L21776" rel="#L21776">21776</span>
<span id="L21777" rel="#L21777">21777</span>
<span id="L21778" rel="#L21778">21778</span>
<span id="L21779" rel="#L21779">21779</span>
<span id="L21780" rel="#L21780">21780</span>
<span id="L21781" rel="#L21781">21781</span>
<span id="L21782" rel="#L21782">21782</span>
<span id="L21783" rel="#L21783">21783</span>
<span id="L21784" rel="#L21784">21784</span>
<span id="L21785" rel="#L21785">21785</span>
<span id="L21786" rel="#L21786">21786</span>
<span id="L21787" rel="#L21787">21787</span>
<span id="L21788" rel="#L21788">21788</span>
<span id="L21789" rel="#L21789">21789</span>
<span id="L21790" rel="#L21790">21790</span>
<span id="L21791" rel="#L21791">21791</span>
<span id="L21792" rel="#L21792">21792</span>
<span id="L21793" rel="#L21793">21793</span>
<span id="L21794" rel="#L21794">21794</span>
<span id="L21795" rel="#L21795">21795</span>
<span id="L21796" rel="#L21796">21796</span>
<span id="L21797" rel="#L21797">21797</span>
<span id="L21798" rel="#L21798">21798</span>
<span id="L21799" rel="#L21799">21799</span>
<span id="L21800" rel="#L21800">21800</span>
<span id="L21801" rel="#L21801">21801</span>
<span id="L21802" rel="#L21802">21802</span>
<span id="L21803" rel="#L21803">21803</span>
<span id="L21804" rel="#L21804">21804</span>
<span id="L21805" rel="#L21805">21805</span>
<span id="L21806" rel="#L21806">21806</span>
<span id="L21807" rel="#L21807">21807</span>
<span id="L21808" rel="#L21808">21808</span>
<span id="L21809" rel="#L21809">21809</span>
<span id="L21810" rel="#L21810">21810</span>
<span id="L21811" rel="#L21811">21811</span>
<span id="L21812" rel="#L21812">21812</span>
<span id="L21813" rel="#L21813">21813</span>
<span id="L21814" rel="#L21814">21814</span>
<span id="L21815" rel="#L21815">21815</span>
<span id="L21816" rel="#L21816">21816</span>
<span id="L21817" rel="#L21817">21817</span>
<span id="L21818" rel="#L21818">21818</span>
<span id="L21819" rel="#L21819">21819</span>
<span id="L21820" rel="#L21820">21820</span>
<span id="L21821" rel="#L21821">21821</span>
<span id="L21822" rel="#L21822">21822</span>
<span id="L21823" rel="#L21823">21823</span>
<span id="L21824" rel="#L21824">21824</span>
<span id="L21825" rel="#L21825">21825</span>
<span id="L21826" rel="#L21826">21826</span>
<span id="L21827" rel="#L21827">21827</span>
<span id="L21828" rel="#L21828">21828</span>
<span id="L21829" rel="#L21829">21829</span>
<span id="L21830" rel="#L21830">21830</span>
<span id="L21831" rel="#L21831">21831</span>
<span id="L21832" rel="#L21832">21832</span>
<span id="L21833" rel="#L21833">21833</span>
<span id="L21834" rel="#L21834">21834</span>
<span id="L21835" rel="#L21835">21835</span>
<span id="L21836" rel="#L21836">21836</span>
<span id="L21837" rel="#L21837">21837</span>
<span id="L21838" rel="#L21838">21838</span>
<span id="L21839" rel="#L21839">21839</span>
<span id="L21840" rel="#L21840">21840</span>
<span id="L21841" rel="#L21841">21841</span>
<span id="L21842" rel="#L21842">21842</span>
<span id="L21843" rel="#L21843">21843</span>
<span id="L21844" rel="#L21844">21844</span>
<span id="L21845" rel="#L21845">21845</span>
<span id="L21846" rel="#L21846">21846</span>
<span id="L21847" rel="#L21847">21847</span>
<span id="L21848" rel="#L21848">21848</span>
<span id="L21849" rel="#L21849">21849</span>
<span id="L21850" rel="#L21850">21850</span>
<span id="L21851" rel="#L21851">21851</span>
<span id="L21852" rel="#L21852">21852</span>
<span id="L21853" rel="#L21853">21853</span>
<span id="L21854" rel="#L21854">21854</span>
<span id="L21855" rel="#L21855">21855</span>
<span id="L21856" rel="#L21856">21856</span>
<span id="L21857" rel="#L21857">21857</span>
<span id="L21858" rel="#L21858">21858</span>
<span id="L21859" rel="#L21859">21859</span>
<span id="L21860" rel="#L21860">21860</span>
<span id="L21861" rel="#L21861">21861</span>
<span id="L21862" rel="#L21862">21862</span>
<span id="L21863" rel="#L21863">21863</span>
<span id="L21864" rel="#L21864">21864</span>
<span id="L21865" rel="#L21865">21865</span>
<span id="L21866" rel="#L21866">21866</span>
<span id="L21867" rel="#L21867">21867</span>
<span id="L21868" rel="#L21868">21868</span>
<span id="L21869" rel="#L21869">21869</span>
<span id="L21870" rel="#L21870">21870</span>
<span id="L21871" rel="#L21871">21871</span>
<span id="L21872" rel="#L21872">21872</span>
<span id="L21873" rel="#L21873">21873</span>
<span id="L21874" rel="#L21874">21874</span>
<span id="L21875" rel="#L21875">21875</span>
<span id="L21876" rel="#L21876">21876</span>
<span id="L21877" rel="#L21877">21877</span>
<span id="L21878" rel="#L21878">21878</span>
<span id="L21879" rel="#L21879">21879</span>
<span id="L21880" rel="#L21880">21880</span>
<span id="L21881" rel="#L21881">21881</span>
<span id="L21882" rel="#L21882">21882</span>
<span id="L21883" rel="#L21883">21883</span>
<span id="L21884" rel="#L21884">21884</span>
<span id="L21885" rel="#L21885">21885</span>
<span id="L21886" rel="#L21886">21886</span>
<span id="L21887" rel="#L21887">21887</span>
<span id="L21888" rel="#L21888">21888</span>
<span id="L21889" rel="#L21889">21889</span>
<span id="L21890" rel="#L21890">21890</span>
<span id="L21891" rel="#L21891">21891</span>
<span id="L21892" rel="#L21892">21892</span>
<span id="L21893" rel="#L21893">21893</span>
<span id="L21894" rel="#L21894">21894</span>
<span id="L21895" rel="#L21895">21895</span>
<span id="L21896" rel="#L21896">21896</span>
<span id="L21897" rel="#L21897">21897</span>
<span id="L21898" rel="#L21898">21898</span>
<span id="L21899" rel="#L21899">21899</span>
<span id="L21900" rel="#L21900">21900</span>
<span id="L21901" rel="#L21901">21901</span>
<span id="L21902" rel="#L21902">21902</span>
<span id="L21903" rel="#L21903">21903</span>
<span id="L21904" rel="#L21904">21904</span>
<span id="L21905" rel="#L21905">21905</span>
<span id="L21906" rel="#L21906">21906</span>
<span id="L21907" rel="#L21907">21907</span>
<span id="L21908" rel="#L21908">21908</span>
<span id="L21909" rel="#L21909">21909</span>
<span id="L21910" rel="#L21910">21910</span>
<span id="L21911" rel="#L21911">21911</span>
<span id="L21912" rel="#L21912">21912</span>
<span id="L21913" rel="#L21913">21913</span>
<span id="L21914" rel="#L21914">21914</span>
<span id="L21915" rel="#L21915">21915</span>
<span id="L21916" rel="#L21916">21916</span>
<span id="L21917" rel="#L21917">21917</span>
<span id="L21918" rel="#L21918">21918</span>
<span id="L21919" rel="#L21919">21919</span>
<span id="L21920" rel="#L21920">21920</span>
<span id="L21921" rel="#L21921">21921</span>
<span id="L21922" rel="#L21922">21922</span>
<span id="L21923" rel="#L21923">21923</span>
<span id="L21924" rel="#L21924">21924</span>
<span id="L21925" rel="#L21925">21925</span>
<span id="L21926" rel="#L21926">21926</span>
<span id="L21927" rel="#L21927">21927</span>
<span id="L21928" rel="#L21928">21928</span>
<span id="L21929" rel="#L21929">21929</span>
<span id="L21930" rel="#L21930">21930</span>
<span id="L21931" rel="#L21931">21931</span>
<span id="L21932" rel="#L21932">21932</span>
<span id="L21933" rel="#L21933">21933</span>
<span id="L21934" rel="#L21934">21934</span>
<span id="L21935" rel="#L21935">21935</span>
<span id="L21936" rel="#L21936">21936</span>
<span id="L21937" rel="#L21937">21937</span>
<span id="L21938" rel="#L21938">21938</span>
<span id="L21939" rel="#L21939">21939</span>
<span id="L21940" rel="#L21940">21940</span>
<span id="L21941" rel="#L21941">21941</span>
<span id="L21942" rel="#L21942">21942</span>
<span id="L21943" rel="#L21943">21943</span>
<span id="L21944" rel="#L21944">21944</span>
<span id="L21945" rel="#L21945">21945</span>
<span id="L21946" rel="#L21946">21946</span>
<span id="L21947" rel="#L21947">21947</span>
<span id="L21948" rel="#L21948">21948</span>
<span id="L21949" rel="#L21949">21949</span>
<span id="L21950" rel="#L21950">21950</span>
<span id="L21951" rel="#L21951">21951</span>
<span id="L21952" rel="#L21952">21952</span>
<span id="L21953" rel="#L21953">21953</span>
<span id="L21954" rel="#L21954">21954</span>
<span id="L21955" rel="#L21955">21955</span>
<span id="L21956" rel="#L21956">21956</span>
<span id="L21957" rel="#L21957">21957</span>
<span id="L21958" rel="#L21958">21958</span>
<span id="L21959" rel="#L21959">21959</span>
<span id="L21960" rel="#L21960">21960</span>
<span id="L21961" rel="#L21961">21961</span>
<span id="L21962" rel="#L21962">21962</span>
<span id="L21963" rel="#L21963">21963</span>
<span id="L21964" rel="#L21964">21964</span>
<span id="L21965" rel="#L21965">21965</span>
<span id="L21966" rel="#L21966">21966</span>
<span id="L21967" rel="#L21967">21967</span>
<span id="L21968" rel="#L21968">21968</span>
<span id="L21969" rel="#L21969">21969</span>
<span id="L21970" rel="#L21970">21970</span>
<span id="L21971" rel="#L21971">21971</span>
<span id="L21972" rel="#L21972">21972</span>
<span id="L21973" rel="#L21973">21973</span>
<span id="L21974" rel="#L21974">21974</span>
<span id="L21975" rel="#L21975">21975</span>
<span id="L21976" rel="#L21976">21976</span>
<span id="L21977" rel="#L21977">21977</span>
<span id="L21978" rel="#L21978">21978</span>
<span id="L21979" rel="#L21979">21979</span>
<span id="L21980" rel="#L21980">21980</span>
<span id="L21981" rel="#L21981">21981</span>
<span id="L21982" rel="#L21982">21982</span>
<span id="L21983" rel="#L21983">21983</span>
<span id="L21984" rel="#L21984">21984</span>
<span id="L21985" rel="#L21985">21985</span>
<span id="L21986" rel="#L21986">21986</span>
<span id="L21987" rel="#L21987">21987</span>
<span id="L21988" rel="#L21988">21988</span>
<span id="L21989" rel="#L21989">21989</span>
<span id="L21990" rel="#L21990">21990</span>
<span id="L21991" rel="#L21991">21991</span>
<span id="L21992" rel="#L21992">21992</span>
<span id="L21993" rel="#L21993">21993</span>
<span id="L21994" rel="#L21994">21994</span>
<span id="L21995" rel="#L21995">21995</span>
<span id="L21996" rel="#L21996">21996</span>
<span id="L21997" rel="#L21997">21997</span>
<span id="L21998" rel="#L21998">21998</span>
<span id="L21999" rel="#L21999">21999</span>
<span id="L22000" rel="#L22000">22000</span>
<span id="L22001" rel="#L22001">22001</span>
<span id="L22002" rel="#L22002">22002</span>
<span id="L22003" rel="#L22003">22003</span>
<span id="L22004" rel="#L22004">22004</span>
<span id="L22005" rel="#L22005">22005</span>
<span id="L22006" rel="#L22006">22006</span>
<span id="L22007" rel="#L22007">22007</span>
<span id="L22008" rel="#L22008">22008</span>
<span id="L22009" rel="#L22009">22009</span>
<span id="L22010" rel="#L22010">22010</span>
<span id="L22011" rel="#L22011">22011</span>
<span id="L22012" rel="#L22012">22012</span>
<span id="L22013" rel="#L22013">22013</span>
<span id="L22014" rel="#L22014">22014</span>
<span id="L22015" rel="#L22015">22015</span>
<span id="L22016" rel="#L22016">22016</span>
<span id="L22017" rel="#L22017">22017</span>
<span id="L22018" rel="#L22018">22018</span>
<span id="L22019" rel="#L22019">22019</span>
<span id="L22020" rel="#L22020">22020</span>
<span id="L22021" rel="#L22021">22021</span>
<span id="L22022" rel="#L22022">22022</span>
<span id="L22023" rel="#L22023">22023</span>
<span id="L22024" rel="#L22024">22024</span>
<span id="L22025" rel="#L22025">22025</span>
<span id="L22026" rel="#L22026">22026</span>
<span id="L22027" rel="#L22027">22027</span>
<span id="L22028" rel="#L22028">22028</span>
<span id="L22029" rel="#L22029">22029</span>
<span id="L22030" rel="#L22030">22030</span>
<span id="L22031" rel="#L22031">22031</span>
<span id="L22032" rel="#L22032">22032</span>
<span id="L22033" rel="#L22033">22033</span>
<span id="L22034" rel="#L22034">22034</span>
<span id="L22035" rel="#L22035">22035</span>
<span id="L22036" rel="#L22036">22036</span>
<span id="L22037" rel="#L22037">22037</span>
<span id="L22038" rel="#L22038">22038</span>
<span id="L22039" rel="#L22039">22039</span>
<span id="L22040" rel="#L22040">22040</span>
<span id="L22041" rel="#L22041">22041</span>
<span id="L22042" rel="#L22042">22042</span>
<span id="L22043" rel="#L22043">22043</span>
<span id="L22044" rel="#L22044">22044</span>
<span id="L22045" rel="#L22045">22045</span>
<span id="L22046" rel="#L22046">22046</span>
<span id="L22047" rel="#L22047">22047</span>
<span id="L22048" rel="#L22048">22048</span>
<span id="L22049" rel="#L22049">22049</span>
<span id="L22050" rel="#L22050">22050</span>
<span id="L22051" rel="#L22051">22051</span>
<span id="L22052" rel="#L22052">22052</span>
<span id="L22053" rel="#L22053">22053</span>
<span id="L22054" rel="#L22054">22054</span>
<span id="L22055" rel="#L22055">22055</span>
<span id="L22056" rel="#L22056">22056</span>
<span id="L22057" rel="#L22057">22057</span>
<span id="L22058" rel="#L22058">22058</span>
<span id="L22059" rel="#L22059">22059</span>
<span id="L22060" rel="#L22060">22060</span>
<span id="L22061" rel="#L22061">22061</span>
<span id="L22062" rel="#L22062">22062</span>
<span id="L22063" rel="#L22063">22063</span>
<span id="L22064" rel="#L22064">22064</span>
<span id="L22065" rel="#L22065">22065</span>
<span id="L22066" rel="#L22066">22066</span>
<span id="L22067" rel="#L22067">22067</span>
<span id="L22068" rel="#L22068">22068</span>
<span id="L22069" rel="#L22069">22069</span>
<span id="L22070" rel="#L22070">22070</span>
<span id="L22071" rel="#L22071">22071</span>
<span id="L22072" rel="#L22072">22072</span>
<span id="L22073" rel="#L22073">22073</span>
<span id="L22074" rel="#L22074">22074</span>
<span id="L22075" rel="#L22075">22075</span>
<span id="L22076" rel="#L22076">22076</span>
<span id="L22077" rel="#L22077">22077</span>
<span id="L22078" rel="#L22078">22078</span>
<span id="L22079" rel="#L22079">22079</span>
<span id="L22080" rel="#L22080">22080</span>
<span id="L22081" rel="#L22081">22081</span>
<span id="L22082" rel="#L22082">22082</span>
<span id="L22083" rel="#L22083">22083</span>
<span id="L22084" rel="#L22084">22084</span>
<span id="L22085" rel="#L22085">22085</span>
<span id="L22086" rel="#L22086">22086</span>
<span id="L22087" rel="#L22087">22087</span>
<span id="L22088" rel="#L22088">22088</span>
<span id="L22089" rel="#L22089">22089</span>
<span id="L22090" rel="#L22090">22090</span>
<span id="L22091" rel="#L22091">22091</span>
<span id="L22092" rel="#L22092">22092</span>
<span id="L22093" rel="#L22093">22093</span>
<span id="L22094" rel="#L22094">22094</span>
<span id="L22095" rel="#L22095">22095</span>
<span id="L22096" rel="#L22096">22096</span>
<span id="L22097" rel="#L22097">22097</span>
<span id="L22098" rel="#L22098">22098</span>
<span id="L22099" rel="#L22099">22099</span>
<span id="L22100" rel="#L22100">22100</span>
<span id="L22101" rel="#L22101">22101</span>
<span id="L22102" rel="#L22102">22102</span>
<span id="L22103" rel="#L22103">22103</span>
<span id="L22104" rel="#L22104">22104</span>
<span id="L22105" rel="#L22105">22105</span>
<span id="L22106" rel="#L22106">22106</span>
<span id="L22107" rel="#L22107">22107</span>
<span id="L22108" rel="#L22108">22108</span>
<span id="L22109" rel="#L22109">22109</span>
<span id="L22110" rel="#L22110">22110</span>
<span id="L22111" rel="#L22111">22111</span>
<span id="L22112" rel="#L22112">22112</span>
<span id="L22113" rel="#L22113">22113</span>
<span id="L22114" rel="#L22114">22114</span>
<span id="L22115" rel="#L22115">22115</span>
<span id="L22116" rel="#L22116">22116</span>
<span id="L22117" rel="#L22117">22117</span>
<span id="L22118" rel="#L22118">22118</span>
<span id="L22119" rel="#L22119">22119</span>
<span id="L22120" rel="#L22120">22120</span>
<span id="L22121" rel="#L22121">22121</span>
<span id="L22122" rel="#L22122">22122</span>
<span id="L22123" rel="#L22123">22123</span>
<span id="L22124" rel="#L22124">22124</span>
<span id="L22125" rel="#L22125">22125</span>
<span id="L22126" rel="#L22126">22126</span>
<span id="L22127" rel="#L22127">22127</span>
<span id="L22128" rel="#L22128">22128</span>
<span id="L22129" rel="#L22129">22129</span>
<span id="L22130" rel="#L22130">22130</span>
<span id="L22131" rel="#L22131">22131</span>
<span id="L22132" rel="#L22132">22132</span>
<span id="L22133" rel="#L22133">22133</span>
<span id="L22134" rel="#L22134">22134</span>
<span id="L22135" rel="#L22135">22135</span>
<span id="L22136" rel="#L22136">22136</span>
<span id="L22137" rel="#L22137">22137</span>
<span id="L22138" rel="#L22138">22138</span>
<span id="L22139" rel="#L22139">22139</span>
<span id="L22140" rel="#L22140">22140</span>
<span id="L22141" rel="#L22141">22141</span>
<span id="L22142" rel="#L22142">22142</span>
<span id="L22143" rel="#L22143">22143</span>
<span id="L22144" rel="#L22144">22144</span>
<span id="L22145" rel="#L22145">22145</span>
<span id="L22146" rel="#L22146">22146</span>
<span id="L22147" rel="#L22147">22147</span>
<span id="L22148" rel="#L22148">22148</span>
<span id="L22149" rel="#L22149">22149</span>
<span id="L22150" rel="#L22150">22150</span>
<span id="L22151" rel="#L22151">22151</span>
<span id="L22152" rel="#L22152">22152</span>
<span id="L22153" rel="#L22153">22153</span>
<span id="L22154" rel="#L22154">22154</span>
<span id="L22155" rel="#L22155">22155</span>
<span id="L22156" rel="#L22156">22156</span>
<span id="L22157" rel="#L22157">22157</span>
<span id="L22158" rel="#L22158">22158</span>
<span id="L22159" rel="#L22159">22159</span>
<span id="L22160" rel="#L22160">22160</span>
<span id="L22161" rel="#L22161">22161</span>
<span id="L22162" rel="#L22162">22162</span>
<span id="L22163" rel="#L22163">22163</span>
<span id="L22164" rel="#L22164">22164</span>
<span id="L22165" rel="#L22165">22165</span>
<span id="L22166" rel="#L22166">22166</span>
<span id="L22167" rel="#L22167">22167</span>
<span id="L22168" rel="#L22168">22168</span>
<span id="L22169" rel="#L22169">22169</span>
<span id="L22170" rel="#L22170">22170</span>
<span id="L22171" rel="#L22171">22171</span>
<span id="L22172" rel="#L22172">22172</span>
<span id="L22173" rel="#L22173">22173</span>
<span id="L22174" rel="#L22174">22174</span>
<span id="L22175" rel="#L22175">22175</span>
<span id="L22176" rel="#L22176">22176</span>
<span id="L22177" rel="#L22177">22177</span>
<span id="L22178" rel="#L22178">22178</span>
<span id="L22179" rel="#L22179">22179</span>
<span id="L22180" rel="#L22180">22180</span>
<span id="L22181" rel="#L22181">22181</span>
<span id="L22182" rel="#L22182">22182</span>
<span id="L22183" rel="#L22183">22183</span>
<span id="L22184" rel="#L22184">22184</span>
<span id="L22185" rel="#L22185">22185</span>
<span id="L22186" rel="#L22186">22186</span>
<span id="L22187" rel="#L22187">22187</span>
<span id="L22188" rel="#L22188">22188</span>
<span id="L22189" rel="#L22189">22189</span>
<span id="L22190" rel="#L22190">22190</span>
<span id="L22191" rel="#L22191">22191</span>
<span id="L22192" rel="#L22192">22192</span>
<span id="L22193" rel="#L22193">22193</span>
<span id="L22194" rel="#L22194">22194</span>
<span id="L22195" rel="#L22195">22195</span>
<span id="L22196" rel="#L22196">22196</span>
<span id="L22197" rel="#L22197">22197</span>
<span id="L22198" rel="#L22198">22198</span>
<span id="L22199" rel="#L22199">22199</span>
<span id="L22200" rel="#L22200">22200</span>
<span id="L22201" rel="#L22201">22201</span>
<span id="L22202" rel="#L22202">22202</span>
<span id="L22203" rel="#L22203">22203</span>
<span id="L22204" rel="#L22204">22204</span>
<span id="L22205" rel="#L22205">22205</span>
<span id="L22206" rel="#L22206">22206</span>
<span id="L22207" rel="#L22207">22207</span>
<span id="L22208" rel="#L22208">22208</span>
<span id="L22209" rel="#L22209">22209</span>
<span id="L22210" rel="#L22210">22210</span>
<span id="L22211" rel="#L22211">22211</span>
<span id="L22212" rel="#L22212">22212</span>
<span id="L22213" rel="#L22213">22213</span>
<span id="L22214" rel="#L22214">22214</span>
<span id="L22215" rel="#L22215">22215</span>
<span id="L22216" rel="#L22216">22216</span>
<span id="L22217" rel="#L22217">22217</span>
<span id="L22218" rel="#L22218">22218</span>
<span id="L22219" rel="#L22219">22219</span>
<span id="L22220" rel="#L22220">22220</span>
<span id="L22221" rel="#L22221">22221</span>
<span id="L22222" rel="#L22222">22222</span>
<span id="L22223" rel="#L22223">22223</span>
<span id="L22224" rel="#L22224">22224</span>
<span id="L22225" rel="#L22225">22225</span>
<span id="L22226" rel="#L22226">22226</span>
<span id="L22227" rel="#L22227">22227</span>
<span id="L22228" rel="#L22228">22228</span>
<span id="L22229" rel="#L22229">22229</span>
<span id="L22230" rel="#L22230">22230</span>
<span id="L22231" rel="#L22231">22231</span>
<span id="L22232" rel="#L22232">22232</span>
<span id="L22233" rel="#L22233">22233</span>
<span id="L22234" rel="#L22234">22234</span>
<span id="L22235" rel="#L22235">22235</span>
<span id="L22236" rel="#L22236">22236</span>
<span id="L22237" rel="#L22237">22237</span>
<span id="L22238" rel="#L22238">22238</span>
<span id="L22239" rel="#L22239">22239</span>
<span id="L22240" rel="#L22240">22240</span>
<span id="L22241" rel="#L22241">22241</span>
<span id="L22242" rel="#L22242">22242</span>
<span id="L22243" rel="#L22243">22243</span>
<span id="L22244" rel="#L22244">22244</span>
<span id="L22245" rel="#L22245">22245</span>
<span id="L22246" rel="#L22246">22246</span>
<span id="L22247" rel="#L22247">22247</span>
<span id="L22248" rel="#L22248">22248</span>
<span id="L22249" rel="#L22249">22249</span>
<span id="L22250" rel="#L22250">22250</span>
<span id="L22251" rel="#L22251">22251</span>
<span id="L22252" rel="#L22252">22252</span>
<span id="L22253" rel="#L22253">22253</span>
<span id="L22254" rel="#L22254">22254</span>
<span id="L22255" rel="#L22255">22255</span>
<span id="L22256" rel="#L22256">22256</span>
<span id="L22257" rel="#L22257">22257</span>
<span id="L22258" rel="#L22258">22258</span>
<span id="L22259" rel="#L22259">22259</span>
<span id="L22260" rel="#L22260">22260</span>
<span id="L22261" rel="#L22261">22261</span>
<span id="L22262" rel="#L22262">22262</span>
<span id="L22263" rel="#L22263">22263</span>
<span id="L22264" rel="#L22264">22264</span>
<span id="L22265" rel="#L22265">22265</span>
<span id="L22266" rel="#L22266">22266</span>
<span id="L22267" rel="#L22267">22267</span>
<span id="L22268" rel="#L22268">22268</span>
<span id="L22269" rel="#L22269">22269</span>
<span id="L22270" rel="#L22270">22270</span>
<span id="L22271" rel="#L22271">22271</span>
<span id="L22272" rel="#L22272">22272</span>
<span id="L22273" rel="#L22273">22273</span>
<span id="L22274" rel="#L22274">22274</span>
<span id="L22275" rel="#L22275">22275</span>
<span id="L22276" rel="#L22276">22276</span>
<span id="L22277" rel="#L22277">22277</span>
<span id="L22278" rel="#L22278">22278</span>
<span id="L22279" rel="#L22279">22279</span>
<span id="L22280" rel="#L22280">22280</span>
<span id="L22281" rel="#L22281">22281</span>
<span id="L22282" rel="#L22282">22282</span>
<span id="L22283" rel="#L22283">22283</span>
<span id="L22284" rel="#L22284">22284</span>
<span id="L22285" rel="#L22285">22285</span>
<span id="L22286" rel="#L22286">22286</span>
<span id="L22287" rel="#L22287">22287</span>
<span id="L22288" rel="#L22288">22288</span>
<span id="L22289" rel="#L22289">22289</span>
<span id="L22290" rel="#L22290">22290</span>
<span id="L22291" rel="#L22291">22291</span>
<span id="L22292" rel="#L22292">22292</span>
<span id="L22293" rel="#L22293">22293</span>
<span id="L22294" rel="#L22294">22294</span>
<span id="L22295" rel="#L22295">22295</span>
<span id="L22296" rel="#L22296">22296</span>
<span id="L22297" rel="#L22297">22297</span>
<span id="L22298" rel="#L22298">22298</span>
<span id="L22299" rel="#L22299">22299</span>
<span id="L22300" rel="#L22300">22300</span>
<span id="L22301" rel="#L22301">22301</span>
<span id="L22302" rel="#L22302">22302</span>
<span id="L22303" rel="#L22303">22303</span>
<span id="L22304" rel="#L22304">22304</span>
<span id="L22305" rel="#L22305">22305</span>
<span id="L22306" rel="#L22306">22306</span>
<span id="L22307" rel="#L22307">22307</span>
<span id="L22308" rel="#L22308">22308</span>
<span id="L22309" rel="#L22309">22309</span>
<span id="L22310" rel="#L22310">22310</span>
<span id="L22311" rel="#L22311">22311</span>
<span id="L22312" rel="#L22312">22312</span>
<span id="L22313" rel="#L22313">22313</span>
<span id="L22314" rel="#L22314">22314</span>
<span id="L22315" rel="#L22315">22315</span>
<span id="L22316" rel="#L22316">22316</span>
<span id="L22317" rel="#L22317">22317</span>
<span id="L22318" rel="#L22318">22318</span>
<span id="L22319" rel="#L22319">22319</span>
<span id="L22320" rel="#L22320">22320</span>
<span id="L22321" rel="#L22321">22321</span>
<span id="L22322" rel="#L22322">22322</span>
<span id="L22323" rel="#L22323">22323</span>
<span id="L22324" rel="#L22324">22324</span>
<span id="L22325" rel="#L22325">22325</span>
<span id="L22326" rel="#L22326">22326</span>
<span id="L22327" rel="#L22327">22327</span>
<span id="L22328" rel="#L22328">22328</span>
<span id="L22329" rel="#L22329">22329</span>
<span id="L22330" rel="#L22330">22330</span>
<span id="L22331" rel="#L22331">22331</span>
<span id="L22332" rel="#L22332">22332</span>
<span id="L22333" rel="#L22333">22333</span>
<span id="L22334" rel="#L22334">22334</span>
<span id="L22335" rel="#L22335">22335</span>
<span id="L22336" rel="#L22336">22336</span>
<span id="L22337" rel="#L22337">22337</span>
<span id="L22338" rel="#L22338">22338</span>
<span id="L22339" rel="#L22339">22339</span>
<span id="L22340" rel="#L22340">22340</span>
<span id="L22341" rel="#L22341">22341</span>
<span id="L22342" rel="#L22342">22342</span>
<span id="L22343" rel="#L22343">22343</span>
<span id="L22344" rel="#L22344">22344</span>
<span id="L22345" rel="#L22345">22345</span>
<span id="L22346" rel="#L22346">22346</span>
<span id="L22347" rel="#L22347">22347</span>
<span id="L22348" rel="#L22348">22348</span>
<span id="L22349" rel="#L22349">22349</span>
<span id="L22350" rel="#L22350">22350</span>
<span id="L22351" rel="#L22351">22351</span>
<span id="L22352" rel="#L22352">22352</span>
<span id="L22353" rel="#L22353">22353</span>
<span id="L22354" rel="#L22354">22354</span>
<span id="L22355" rel="#L22355">22355</span>
<span id="L22356" rel="#L22356">22356</span>
<span id="L22357" rel="#L22357">22357</span>
<span id="L22358" rel="#L22358">22358</span>
<span id="L22359" rel="#L22359">22359</span>
<span id="L22360" rel="#L22360">22360</span>
<span id="L22361" rel="#L22361">22361</span>
<span id="L22362" rel="#L22362">22362</span>
<span id="L22363" rel="#L22363">22363</span>
<span id="L22364" rel="#L22364">22364</span>
<span id="L22365" rel="#L22365">22365</span>
<span id="L22366" rel="#L22366">22366</span>
<span id="L22367" rel="#L22367">22367</span>
<span id="L22368" rel="#L22368">22368</span>
<span id="L22369" rel="#L22369">22369</span>
<span id="L22370" rel="#L22370">22370</span>
<span id="L22371" rel="#L22371">22371</span>
<span id="L22372" rel="#L22372">22372</span>
<span id="L22373" rel="#L22373">22373</span>
<span id="L22374" rel="#L22374">22374</span>
<span id="L22375" rel="#L22375">22375</span>
<span id="L22376" rel="#L22376">22376</span>
<span id="L22377" rel="#L22377">22377</span>
<span id="L22378" rel="#L22378">22378</span>
<span id="L22379" rel="#L22379">22379</span>
<span id="L22380" rel="#L22380">22380</span>
<span id="L22381" rel="#L22381">22381</span>
<span id="L22382" rel="#L22382">22382</span>
<span id="L22383" rel="#L22383">22383</span>
<span id="L22384" rel="#L22384">22384</span>
<span id="L22385" rel="#L22385">22385</span>
<span id="L22386" rel="#L22386">22386</span>
<span id="L22387" rel="#L22387">22387</span>
<span id="L22388" rel="#L22388">22388</span>
<span id="L22389" rel="#L22389">22389</span>
<span id="L22390" rel="#L22390">22390</span>
<span id="L22391" rel="#L22391">22391</span>
<span id="L22392" rel="#L22392">22392</span>
<span id="L22393" rel="#L22393">22393</span>
<span id="L22394" rel="#L22394">22394</span>
<span id="L22395" rel="#L22395">22395</span>
<span id="L22396" rel="#L22396">22396</span>
<span id="L22397" rel="#L22397">22397</span>
<span id="L22398" rel="#L22398">22398</span>
<span id="L22399" rel="#L22399">22399</span>
<span id="L22400" rel="#L22400">22400</span>
<span id="L22401" rel="#L22401">22401</span>
<span id="L22402" rel="#L22402">22402</span>
<span id="L22403" rel="#L22403">22403</span>
<span id="L22404" rel="#L22404">22404</span>
<span id="L22405" rel="#L22405">22405</span>
<span id="L22406" rel="#L22406">22406</span>
<span id="L22407" rel="#L22407">22407</span>
<span id="L22408" rel="#L22408">22408</span>
<span id="L22409" rel="#L22409">22409</span>
<span id="L22410" rel="#L22410">22410</span>
<span id="L22411" rel="#L22411">22411</span>
<span id="L22412" rel="#L22412">22412</span>
<span id="L22413" rel="#L22413">22413</span>
<span id="L22414" rel="#L22414">22414</span>
<span id="L22415" rel="#L22415">22415</span>
<span id="L22416" rel="#L22416">22416</span>
<span id="L22417" rel="#L22417">22417</span>
<span id="L22418" rel="#L22418">22418</span>
<span id="L22419" rel="#L22419">22419</span>
<span id="L22420" rel="#L22420">22420</span>
<span id="L22421" rel="#L22421">22421</span>
<span id="L22422" rel="#L22422">22422</span>
<span id="L22423" rel="#L22423">22423</span>
<span id="L22424" rel="#L22424">22424</span>
<span id="L22425" rel="#L22425">22425</span>
<span id="L22426" rel="#L22426">22426</span>
<span id="L22427" rel="#L22427">22427</span>
<span id="L22428" rel="#L22428">22428</span>
<span id="L22429" rel="#L22429">22429</span>
<span id="L22430" rel="#L22430">22430</span>
<span id="L22431" rel="#L22431">22431</span>
<span id="L22432" rel="#L22432">22432</span>
<span id="L22433" rel="#L22433">22433</span>
<span id="L22434" rel="#L22434">22434</span>
<span id="L22435" rel="#L22435">22435</span>
<span id="L22436" rel="#L22436">22436</span>
<span id="L22437" rel="#L22437">22437</span>
<span id="L22438" rel="#L22438">22438</span>
<span id="L22439" rel="#L22439">22439</span>
<span id="L22440" rel="#L22440">22440</span>
<span id="L22441" rel="#L22441">22441</span>
<span id="L22442" rel="#L22442">22442</span>
<span id="L22443" rel="#L22443">22443</span>
<span id="L22444" rel="#L22444">22444</span>
<span id="L22445" rel="#L22445">22445</span>
<span id="L22446" rel="#L22446">22446</span>
<span id="L22447" rel="#L22447">22447</span>
<span id="L22448" rel="#L22448">22448</span>
<span id="L22449" rel="#L22449">22449</span>
<span id="L22450" rel="#L22450">22450</span>
<span id="L22451" rel="#L22451">22451</span>
<span id="L22452" rel="#L22452">22452</span>
<span id="L22453" rel="#L22453">22453</span>
<span id="L22454" rel="#L22454">22454</span>
<span id="L22455" rel="#L22455">22455</span>
<span id="L22456" rel="#L22456">22456</span>
<span id="L22457" rel="#L22457">22457</span>
<span id="L22458" rel="#L22458">22458</span>
<span id="L22459" rel="#L22459">22459</span>
<span id="L22460" rel="#L22460">22460</span>
<span id="L22461" rel="#L22461">22461</span>
<span id="L22462" rel="#L22462">22462</span>
<span id="L22463" rel="#L22463">22463</span>
<span id="L22464" rel="#L22464">22464</span>
<span id="L22465" rel="#L22465">22465</span>
<span id="L22466" rel="#L22466">22466</span>
<span id="L22467" rel="#L22467">22467</span>
<span id="L22468" rel="#L22468">22468</span>
<span id="L22469" rel="#L22469">22469</span>
<span id="L22470" rel="#L22470">22470</span>
<span id="L22471" rel="#L22471">22471</span>
<span id="L22472" rel="#L22472">22472</span>
<span id="L22473" rel="#L22473">22473</span>
<span id="L22474" rel="#L22474">22474</span>
<span id="L22475" rel="#L22475">22475</span>
<span id="L22476" rel="#L22476">22476</span>
<span id="L22477" rel="#L22477">22477</span>
<span id="L22478" rel="#L22478">22478</span>
<span id="L22479" rel="#L22479">22479</span>
<span id="L22480" rel="#L22480">22480</span>
<span id="L22481" rel="#L22481">22481</span>
<span id="L22482" rel="#L22482">22482</span>
<span id="L22483" rel="#L22483">22483</span>
<span id="L22484" rel="#L22484">22484</span>
<span id="L22485" rel="#L22485">22485</span>
<span id="L22486" rel="#L22486">22486</span>
<span id="L22487" rel="#L22487">22487</span>
<span id="L22488" rel="#L22488">22488</span>
<span id="L22489" rel="#L22489">22489</span>
<span id="L22490" rel="#L22490">22490</span>
<span id="L22491" rel="#L22491">22491</span>
<span id="L22492" rel="#L22492">22492</span>
<span id="L22493" rel="#L22493">22493</span>
<span id="L22494" rel="#L22494">22494</span>
<span id="L22495" rel="#L22495">22495</span>
<span id="L22496" rel="#L22496">22496</span>
<span id="L22497" rel="#L22497">22497</span>
<span id="L22498" rel="#L22498">22498</span>
<span id="L22499" rel="#L22499">22499</span>
<span id="L22500" rel="#L22500">22500</span>
<span id="L22501" rel="#L22501">22501</span>
<span id="L22502" rel="#L22502">22502</span>
<span id="L22503" rel="#L22503">22503</span>
<span id="L22504" rel="#L22504">22504</span>
<span id="L22505" rel="#L22505">22505</span>
<span id="L22506" rel="#L22506">22506</span>
<span id="L22507" rel="#L22507">22507</span>
<span id="L22508" rel="#L22508">22508</span>
<span id="L22509" rel="#L22509">22509</span>
<span id="L22510" rel="#L22510">22510</span>
<span id="L22511" rel="#L22511">22511</span>
<span id="L22512" rel="#L22512">22512</span>
<span id="L22513" rel="#L22513">22513</span>
<span id="L22514" rel="#L22514">22514</span>
<span id="L22515" rel="#L22515">22515</span>
<span id="L22516" rel="#L22516">22516</span>
<span id="L22517" rel="#L22517">22517</span>
<span id="L22518" rel="#L22518">22518</span>
<span id="L22519" rel="#L22519">22519</span>
<span id="L22520" rel="#L22520">22520</span>
<span id="L22521" rel="#L22521">22521</span>
<span id="L22522" rel="#L22522">22522</span>
<span id="L22523" rel="#L22523">22523</span>
<span id="L22524" rel="#L22524">22524</span>
<span id="L22525" rel="#L22525">22525</span>
<span id="L22526" rel="#L22526">22526</span>
<span id="L22527" rel="#L22527">22527</span>
<span id="L22528" rel="#L22528">22528</span>
<span id="L22529" rel="#L22529">22529</span>
<span id="L22530" rel="#L22530">22530</span>
<span id="L22531" rel="#L22531">22531</span>
<span id="L22532" rel="#L22532">22532</span>
<span id="L22533" rel="#L22533">22533</span>
<span id="L22534" rel="#L22534">22534</span>
<span id="L22535" rel="#L22535">22535</span>
<span id="L22536" rel="#L22536">22536</span>
<span id="L22537" rel="#L22537">22537</span>
<span id="L22538" rel="#L22538">22538</span>
<span id="L22539" rel="#L22539">22539</span>
<span id="L22540" rel="#L22540">22540</span>
<span id="L22541" rel="#L22541">22541</span>
<span id="L22542" rel="#L22542">22542</span>
<span id="L22543" rel="#L22543">22543</span>
<span id="L22544" rel="#L22544">22544</span>
<span id="L22545" rel="#L22545">22545</span>
<span id="L22546" rel="#L22546">22546</span>
<span id="L22547" rel="#L22547">22547</span>
<span id="L22548" rel="#L22548">22548</span>
<span id="L22549" rel="#L22549">22549</span>
<span id="L22550" rel="#L22550">22550</span>
<span id="L22551" rel="#L22551">22551</span>
<span id="L22552" rel="#L22552">22552</span>
<span id="L22553" rel="#L22553">22553</span>
<span id="L22554" rel="#L22554">22554</span>
<span id="L22555" rel="#L22555">22555</span>
<span id="L22556" rel="#L22556">22556</span>
<span id="L22557" rel="#L22557">22557</span>
<span id="L22558" rel="#L22558">22558</span>
<span id="L22559" rel="#L22559">22559</span>
<span id="L22560" rel="#L22560">22560</span>
<span id="L22561" rel="#L22561">22561</span>
<span id="L22562" rel="#L22562">22562</span>
<span id="L22563" rel="#L22563">22563</span>
<span id="L22564" rel="#L22564">22564</span>
<span id="L22565" rel="#L22565">22565</span>
<span id="L22566" rel="#L22566">22566</span>
<span id="L22567" rel="#L22567">22567</span>
<span id="L22568" rel="#L22568">22568</span>
<span id="L22569" rel="#L22569">22569</span>
<span id="L22570" rel="#L22570">22570</span>
<span id="L22571" rel="#L22571">22571</span>
<span id="L22572" rel="#L22572">22572</span>
<span id="L22573" rel="#L22573">22573</span>
<span id="L22574" rel="#L22574">22574</span>
<span id="L22575" rel="#L22575">22575</span>
<span id="L22576" rel="#L22576">22576</span>
<span id="L22577" rel="#L22577">22577</span>
<span id="L22578" rel="#L22578">22578</span>
<span id="L22579" rel="#L22579">22579</span>
<span id="L22580" rel="#L22580">22580</span>
<span id="L22581" rel="#L22581">22581</span>
<span id="L22582" rel="#L22582">22582</span>
<span id="L22583" rel="#L22583">22583</span>
<span id="L22584" rel="#L22584">22584</span>
<span id="L22585" rel="#L22585">22585</span>
<span id="L22586" rel="#L22586">22586</span>
<span id="L22587" rel="#L22587">22587</span>
<span id="L22588" rel="#L22588">22588</span>
<span id="L22589" rel="#L22589">22589</span>
<span id="L22590" rel="#L22590">22590</span>
<span id="L22591" rel="#L22591">22591</span>
<span id="L22592" rel="#L22592">22592</span>
<span id="L22593" rel="#L22593">22593</span>
<span id="L22594" rel="#L22594">22594</span>
<span id="L22595" rel="#L22595">22595</span>
<span id="L22596" rel="#L22596">22596</span>
<span id="L22597" rel="#L22597">22597</span>
<span id="L22598" rel="#L22598">22598</span>
<span id="L22599" rel="#L22599">22599</span>
<span id="L22600" rel="#L22600">22600</span>
<span id="L22601" rel="#L22601">22601</span>
<span id="L22602" rel="#L22602">22602</span>
<span id="L22603" rel="#L22603">22603</span>
<span id="L22604" rel="#L22604">22604</span>
<span id="L22605" rel="#L22605">22605</span>
<span id="L22606" rel="#L22606">22606</span>
<span id="L22607" rel="#L22607">22607</span>
<span id="L22608" rel="#L22608">22608</span>
<span id="L22609" rel="#L22609">22609</span>
<span id="L22610" rel="#L22610">22610</span>
<span id="L22611" rel="#L22611">22611</span>
<span id="L22612" rel="#L22612">22612</span>
<span id="L22613" rel="#L22613">22613</span>
<span id="L22614" rel="#L22614">22614</span>
<span id="L22615" rel="#L22615">22615</span>
<span id="L22616" rel="#L22616">22616</span>
<span id="L22617" rel="#L22617">22617</span>
<span id="L22618" rel="#L22618">22618</span>
<span id="L22619" rel="#L22619">22619</span>
<span id="L22620" rel="#L22620">22620</span>
<span id="L22621" rel="#L22621">22621</span>
<span id="L22622" rel="#L22622">22622</span>
<span id="L22623" rel="#L22623">22623</span>
<span id="L22624" rel="#L22624">22624</span>
<span id="L22625" rel="#L22625">22625</span>
<span id="L22626" rel="#L22626">22626</span>
<span id="L22627" rel="#L22627">22627</span>
<span id="L22628" rel="#L22628">22628</span>
<span id="L22629" rel="#L22629">22629</span>
<span id="L22630" rel="#L22630">22630</span>
<span id="L22631" rel="#L22631">22631</span>
<span id="L22632" rel="#L22632">22632</span>
<span id="L22633" rel="#L22633">22633</span>
<span id="L22634" rel="#L22634">22634</span>
<span id="L22635" rel="#L22635">22635</span>
<span id="L22636" rel="#L22636">22636</span>
<span id="L22637" rel="#L22637">22637</span>
<span id="L22638" rel="#L22638">22638</span>
<span id="L22639" rel="#L22639">22639</span>
<span id="L22640" rel="#L22640">22640</span>
<span id="L22641" rel="#L22641">22641</span>
<span id="L22642" rel="#L22642">22642</span>
<span id="L22643" rel="#L22643">22643</span>
<span id="L22644" rel="#L22644">22644</span>
<span id="L22645" rel="#L22645">22645</span>
<span id="L22646" rel="#L22646">22646</span>
<span id="L22647" rel="#L22647">22647</span>
<span id="L22648" rel="#L22648">22648</span>
<span id="L22649" rel="#L22649">22649</span>
<span id="L22650" rel="#L22650">22650</span>
<span id="L22651" rel="#L22651">22651</span>
<span id="L22652" rel="#L22652">22652</span>
<span id="L22653" rel="#L22653">22653</span>
<span id="L22654" rel="#L22654">22654</span>
<span id="L22655" rel="#L22655">22655</span>
<span id="L22656" rel="#L22656">22656</span>
<span id="L22657" rel="#L22657">22657</span>
<span id="L22658" rel="#L22658">22658</span>
<span id="L22659" rel="#L22659">22659</span>
<span id="L22660" rel="#L22660">22660</span>
<span id="L22661" rel="#L22661">22661</span>
<span id="L22662" rel="#L22662">22662</span>
<span id="L22663" rel="#L22663">22663</span>
<span id="L22664" rel="#L22664">22664</span>
<span id="L22665" rel="#L22665">22665</span>
<span id="L22666" rel="#L22666">22666</span>
<span id="L22667" rel="#L22667">22667</span>
<span id="L22668" rel="#L22668">22668</span>
<span id="L22669" rel="#L22669">22669</span>
<span id="L22670" rel="#L22670">22670</span>
<span id="L22671" rel="#L22671">22671</span>
<span id="L22672" rel="#L22672">22672</span>
<span id="L22673" rel="#L22673">22673</span>
<span id="L22674" rel="#L22674">22674</span>
<span id="L22675" rel="#L22675">22675</span>
<span id="L22676" rel="#L22676">22676</span>
<span id="L22677" rel="#L22677">22677</span>
<span id="L22678" rel="#L22678">22678</span>
<span id="L22679" rel="#L22679">22679</span>
<span id="L22680" rel="#L22680">22680</span>
<span id="L22681" rel="#L22681">22681</span>
<span id="L22682" rel="#L22682">22682</span>
<span id="L22683" rel="#L22683">22683</span>
<span id="L22684" rel="#L22684">22684</span>
<span id="L22685" rel="#L22685">22685</span>
<span id="L22686" rel="#L22686">22686</span>
<span id="L22687" rel="#L22687">22687</span>
<span id="L22688" rel="#L22688">22688</span>
<span id="L22689" rel="#L22689">22689</span>
<span id="L22690" rel="#L22690">22690</span>
<span id="L22691" rel="#L22691">22691</span>
<span id="L22692" rel="#L22692">22692</span>
<span id="L22693" rel="#L22693">22693</span>
<span id="L22694" rel="#L22694">22694</span>
<span id="L22695" rel="#L22695">22695</span>
<span id="L22696" rel="#L22696">22696</span>
<span id="L22697" rel="#L22697">22697</span>
<span id="L22698" rel="#L22698">22698</span>
<span id="L22699" rel="#L22699">22699</span>
<span id="L22700" rel="#L22700">22700</span>
<span id="L22701" rel="#L22701">22701</span>
<span id="L22702" rel="#L22702">22702</span>
<span id="L22703" rel="#L22703">22703</span>
<span id="L22704" rel="#L22704">22704</span>
<span id="L22705" rel="#L22705">22705</span>
<span id="L22706" rel="#L22706">22706</span>
<span id="L22707" rel="#L22707">22707</span>
<span id="L22708" rel="#L22708">22708</span>
<span id="L22709" rel="#L22709">22709</span>
<span id="L22710" rel="#L22710">22710</span>
<span id="L22711" rel="#L22711">22711</span>
<span id="L22712" rel="#L22712">22712</span>
<span id="L22713" rel="#L22713">22713</span>
<span id="L22714" rel="#L22714">22714</span>
<span id="L22715" rel="#L22715">22715</span>
<span id="L22716" rel="#L22716">22716</span>
<span id="L22717" rel="#L22717">22717</span>
<span id="L22718" rel="#L22718">22718</span>
<span id="L22719" rel="#L22719">22719</span>
<span id="L22720" rel="#L22720">22720</span>
<span id="L22721" rel="#L22721">22721</span>
<span id="L22722" rel="#L22722">22722</span>
<span id="L22723" rel="#L22723">22723</span>
<span id="L22724" rel="#L22724">22724</span>
<span id="L22725" rel="#L22725">22725</span>
<span id="L22726" rel="#L22726">22726</span>
<span id="L22727" rel="#L22727">22727</span>
<span id="L22728" rel="#L22728">22728</span>
<span id="L22729" rel="#L22729">22729</span>
<span id="L22730" rel="#L22730">22730</span>
<span id="L22731" rel="#L22731">22731</span>
<span id="L22732" rel="#L22732">22732</span>
<span id="L22733" rel="#L22733">22733</span>
<span id="L22734" rel="#L22734">22734</span>
<span id="L22735" rel="#L22735">22735</span>
<span id="L22736" rel="#L22736">22736</span>
<span id="L22737" rel="#L22737">22737</span>
<span id="L22738" rel="#L22738">22738</span>
<span id="L22739" rel="#L22739">22739</span>
<span id="L22740" rel="#L22740">22740</span>
<span id="L22741" rel="#L22741">22741</span>
<span id="L22742" rel="#L22742">22742</span>
<span id="L22743" rel="#L22743">22743</span>
<span id="L22744" rel="#L22744">22744</span>
<span id="L22745" rel="#L22745">22745</span>
<span id="L22746" rel="#L22746">22746</span>
<span id="L22747" rel="#L22747">22747</span>
<span id="L22748" rel="#L22748">22748</span>
<span id="L22749" rel="#L22749">22749</span>
<span id="L22750" rel="#L22750">22750</span>
<span id="L22751" rel="#L22751">22751</span>
<span id="L22752" rel="#L22752">22752</span>
<span id="L22753" rel="#L22753">22753</span>
<span id="L22754" rel="#L22754">22754</span>
<span id="L22755" rel="#L22755">22755</span>
<span id="L22756" rel="#L22756">22756</span>
<span id="L22757" rel="#L22757">22757</span>
<span id="L22758" rel="#L22758">22758</span>
<span id="L22759" rel="#L22759">22759</span>
<span id="L22760" rel="#L22760">22760</span>
<span id="L22761" rel="#L22761">22761</span>
<span id="L22762" rel="#L22762">22762</span>
<span id="L22763" rel="#L22763">22763</span>
<span id="L22764" rel="#L22764">22764</span>
<span id="L22765" rel="#L22765">22765</span>
<span id="L22766" rel="#L22766">22766</span>
<span id="L22767" rel="#L22767">22767</span>
<span id="L22768" rel="#L22768">22768</span>
<span id="L22769" rel="#L22769">22769</span>
<span id="L22770" rel="#L22770">22770</span>
<span id="L22771" rel="#L22771">22771</span>
<span id="L22772" rel="#L22772">22772</span>
<span id="L22773" rel="#L22773">22773</span>
<span id="L22774" rel="#L22774">22774</span>
<span id="L22775" rel="#L22775">22775</span>
<span id="L22776" rel="#L22776">22776</span>
<span id="L22777" rel="#L22777">22777</span>
<span id="L22778" rel="#L22778">22778</span>
<span id="L22779" rel="#L22779">22779</span>
<span id="L22780" rel="#L22780">22780</span>
<span id="L22781" rel="#L22781">22781</span>
<span id="L22782" rel="#L22782">22782</span>
<span id="L22783" rel="#L22783">22783</span>
<span id="L22784" rel="#L22784">22784</span>
<span id="L22785" rel="#L22785">22785</span>
<span id="L22786" rel="#L22786">22786</span>
<span id="L22787" rel="#L22787">22787</span>
<span id="L22788" rel="#L22788">22788</span>
<span id="L22789" rel="#L22789">22789</span>
<span id="L22790" rel="#L22790">22790</span>
<span id="L22791" rel="#L22791">22791</span>
<span id="L22792" rel="#L22792">22792</span>
<span id="L22793" rel="#L22793">22793</span>
<span id="L22794" rel="#L22794">22794</span>
<span id="L22795" rel="#L22795">22795</span>
<span id="L22796" rel="#L22796">22796</span>
<span id="L22797" rel="#L22797">22797</span>
<span id="L22798" rel="#L22798">22798</span>
<span id="L22799" rel="#L22799">22799</span>
<span id="L22800" rel="#L22800">22800</span>
<span id="L22801" rel="#L22801">22801</span>
<span id="L22802" rel="#L22802">22802</span>
<span id="L22803" rel="#L22803">22803</span>
<span id="L22804" rel="#L22804">22804</span>
<span id="L22805" rel="#L22805">22805</span>
<span id="L22806" rel="#L22806">22806</span>
<span id="L22807" rel="#L22807">22807</span>
<span id="L22808" rel="#L22808">22808</span>
<span id="L22809" rel="#L22809">22809</span>
<span id="L22810" rel="#L22810">22810</span>
<span id="L22811" rel="#L22811">22811</span>
<span id="L22812" rel="#L22812">22812</span>
<span id="L22813" rel="#L22813">22813</span>
<span id="L22814" rel="#L22814">22814</span>
<span id="L22815" rel="#L22815">22815</span>
<span id="L22816" rel="#L22816">22816</span>
<span id="L22817" rel="#L22817">22817</span>
<span id="L22818" rel="#L22818">22818</span>
<span id="L22819" rel="#L22819">22819</span>
<span id="L22820" rel="#L22820">22820</span>
<span id="L22821" rel="#L22821">22821</span>
<span id="L22822" rel="#L22822">22822</span>
<span id="L22823" rel="#L22823">22823</span>
<span id="L22824" rel="#L22824">22824</span>
<span id="L22825" rel="#L22825">22825</span>
<span id="L22826" rel="#L22826">22826</span>
<span id="L22827" rel="#L22827">22827</span>
<span id="L22828" rel="#L22828">22828</span>
<span id="L22829" rel="#L22829">22829</span>
<span id="L22830" rel="#L22830">22830</span>
<span id="L22831" rel="#L22831">22831</span>
<span id="L22832" rel="#L22832">22832</span>
<span id="L22833" rel="#L22833">22833</span>
<span id="L22834" rel="#L22834">22834</span>
<span id="L22835" rel="#L22835">22835</span>
<span id="L22836" rel="#L22836">22836</span>
<span id="L22837" rel="#L22837">22837</span>
<span id="L22838" rel="#L22838">22838</span>
<span id="L22839" rel="#L22839">22839</span>
<span id="L22840" rel="#L22840">22840</span>
<span id="L22841" rel="#L22841">22841</span>
<span id="L22842" rel="#L22842">22842</span>
<span id="L22843" rel="#L22843">22843</span>
<span id="L22844" rel="#L22844">22844</span>
<span id="L22845" rel="#L22845">22845</span>
<span id="L22846" rel="#L22846">22846</span>
<span id="L22847" rel="#L22847">22847</span>
<span id="L22848" rel="#L22848">22848</span>
<span id="L22849" rel="#L22849">22849</span>
<span id="L22850" rel="#L22850">22850</span>
<span id="L22851" rel="#L22851">22851</span>
<span id="L22852" rel="#L22852">22852</span>
<span id="L22853" rel="#L22853">22853</span>
<span id="L22854" rel="#L22854">22854</span>
<span id="L22855" rel="#L22855">22855</span>
<span id="L22856" rel="#L22856">22856</span>
<span id="L22857" rel="#L22857">22857</span>
<span id="L22858" rel="#L22858">22858</span>
<span id="L22859" rel="#L22859">22859</span>
<span id="L22860" rel="#L22860">22860</span>
<span id="L22861" rel="#L22861">22861</span>
<span id="L22862" rel="#L22862">22862</span>
<span id="L22863" rel="#L22863">22863</span>
<span id="L22864" rel="#L22864">22864</span>
<span id="L22865" rel="#L22865">22865</span>
<span id="L22866" rel="#L22866">22866</span>
<span id="L22867" rel="#L22867">22867</span>
<span id="L22868" rel="#L22868">22868</span>
<span id="L22869" rel="#L22869">22869</span>
<span id="L22870" rel="#L22870">22870</span>
<span id="L22871" rel="#L22871">22871</span>
<span id="L22872" rel="#L22872">22872</span>
<span id="L22873" rel="#L22873">22873</span>
<span id="L22874" rel="#L22874">22874</span>
<span id="L22875" rel="#L22875">22875</span>
<span id="L22876" rel="#L22876">22876</span>
<span id="L22877" rel="#L22877">22877</span>
<span id="L22878" rel="#L22878">22878</span>
<span id="L22879" rel="#L22879">22879</span>
<span id="L22880" rel="#L22880">22880</span>
<span id="L22881" rel="#L22881">22881</span>
<span id="L22882" rel="#L22882">22882</span>
<span id="L22883" rel="#L22883">22883</span>
<span id="L22884" rel="#L22884">22884</span>
<span id="L22885" rel="#L22885">22885</span>
<span id="L22886" rel="#L22886">22886</span>
<span id="L22887" rel="#L22887">22887</span>
<span id="L22888" rel="#L22888">22888</span>
<span id="L22889" rel="#L22889">22889</span>
<span id="L22890" rel="#L22890">22890</span>
<span id="L22891" rel="#L22891">22891</span>
<span id="L22892" rel="#L22892">22892</span>
<span id="L22893" rel="#L22893">22893</span>
<span id="L22894" rel="#L22894">22894</span>
<span id="L22895" rel="#L22895">22895</span>
<span id="L22896" rel="#L22896">22896</span>
<span id="L22897" rel="#L22897">22897</span>
<span id="L22898" rel="#L22898">22898</span>
<span id="L22899" rel="#L22899">22899</span>
<span id="L22900" rel="#L22900">22900</span>
<span id="L22901" rel="#L22901">22901</span>
<span id="L22902" rel="#L22902">22902</span>
<span id="L22903" rel="#L22903">22903</span>
<span id="L22904" rel="#L22904">22904</span>
<span id="L22905" rel="#L22905">22905</span>
<span id="L22906" rel="#L22906">22906</span>
<span id="L22907" rel="#L22907">22907</span>
<span id="L22908" rel="#L22908">22908</span>
<span id="L22909" rel="#L22909">22909</span>
<span id="L22910" rel="#L22910">22910</span>
<span id="L22911" rel="#L22911">22911</span>
<span id="L22912" rel="#L22912">22912</span>
<span id="L22913" rel="#L22913">22913</span>
<span id="L22914" rel="#L22914">22914</span>
<span id="L22915" rel="#L22915">22915</span>
<span id="L22916" rel="#L22916">22916</span>
<span id="L22917" rel="#L22917">22917</span>
<span id="L22918" rel="#L22918">22918</span>
<span id="L22919" rel="#L22919">22919</span>
<span id="L22920" rel="#L22920">22920</span>
<span id="L22921" rel="#L22921">22921</span>
<span id="L22922" rel="#L22922">22922</span>
<span id="L22923" rel="#L22923">22923</span>
<span id="L22924" rel="#L22924">22924</span>
<span id="L22925" rel="#L22925">22925</span>
<span id="L22926" rel="#L22926">22926</span>
<span id="L22927" rel="#L22927">22927</span>
<span id="L22928" rel="#L22928">22928</span>
<span id="L22929" rel="#L22929">22929</span>
<span id="L22930" rel="#L22930">22930</span>
<span id="L22931" rel="#L22931">22931</span>
<span id="L22932" rel="#L22932">22932</span>
<span id="L22933" rel="#L22933">22933</span>
<span id="L22934" rel="#L22934">22934</span>
<span id="L22935" rel="#L22935">22935</span>
<span id="L22936" rel="#L22936">22936</span>
<span id="L22937" rel="#L22937">22937</span>
<span id="L22938" rel="#L22938">22938</span>
<span id="L22939" rel="#L22939">22939</span>
<span id="L22940" rel="#L22940">22940</span>
<span id="L22941" rel="#L22941">22941</span>
<span id="L22942" rel="#L22942">22942</span>
<span id="L22943" rel="#L22943">22943</span>
<span id="L22944" rel="#L22944">22944</span>
<span id="L22945" rel="#L22945">22945</span>
<span id="L22946" rel="#L22946">22946</span>
<span id="L22947" rel="#L22947">22947</span>
<span id="L22948" rel="#L22948">22948</span>
<span id="L22949" rel="#L22949">22949</span>
<span id="L22950" rel="#L22950">22950</span>
<span id="L22951" rel="#L22951">22951</span>
<span id="L22952" rel="#L22952">22952</span>
<span id="L22953" rel="#L22953">22953</span>
<span id="L22954" rel="#L22954">22954</span>
<span id="L22955" rel="#L22955">22955</span>
<span id="L22956" rel="#L22956">22956</span>
<span id="L22957" rel="#L22957">22957</span>
<span id="L22958" rel="#L22958">22958</span>
<span id="L22959" rel="#L22959">22959</span>
<span id="L22960" rel="#L22960">22960</span>
<span id="L22961" rel="#L22961">22961</span>
<span id="L22962" rel="#L22962">22962</span>
<span id="L22963" rel="#L22963">22963</span>
<span id="L22964" rel="#L22964">22964</span>
<span id="L22965" rel="#L22965">22965</span>
<span id="L22966" rel="#L22966">22966</span>
<span id="L22967" rel="#L22967">22967</span>
<span id="L22968" rel="#L22968">22968</span>
<span id="L22969" rel="#L22969">22969</span>
<span id="L22970" rel="#L22970">22970</span>
<span id="L22971" rel="#L22971">22971</span>
<span id="L22972" rel="#L22972">22972</span>
<span id="L22973" rel="#L22973">22973</span>
<span id="L22974" rel="#L22974">22974</span>
<span id="L22975" rel="#L22975">22975</span>
<span id="L22976" rel="#L22976">22976</span>
<span id="L22977" rel="#L22977">22977</span>
<span id="L22978" rel="#L22978">22978</span>
<span id="L22979" rel="#L22979">22979</span>
<span id="L22980" rel="#L22980">22980</span>
<span id="L22981" rel="#L22981">22981</span>
<span id="L22982" rel="#L22982">22982</span>
<span id="L22983" rel="#L22983">22983</span>
<span id="L22984" rel="#L22984">22984</span>
<span id="L22985" rel="#L22985">22985</span>
<span id="L22986" rel="#L22986">22986</span>
<span id="L22987" rel="#L22987">22987</span>
<span id="L22988" rel="#L22988">22988</span>
<span id="L22989" rel="#L22989">22989</span>
<span id="L22990" rel="#L22990">22990</span>
<span id="L22991" rel="#L22991">22991</span>
<span id="L22992" rel="#L22992">22992</span>
<span id="L22993" rel="#L22993">22993</span>
<span id="L22994" rel="#L22994">22994</span>
<span id="L22995" rel="#L22995">22995</span>
<span id="L22996" rel="#L22996">22996</span>
<span id="L22997" rel="#L22997">22997</span>
<span id="L22998" rel="#L22998">22998</span>
<span id="L22999" rel="#L22999">22999</span>
<span id="L23000" rel="#L23000">23000</span>
<span id="L23001" rel="#L23001">23001</span>
<span id="L23002" rel="#L23002">23002</span>
<span id="L23003" rel="#L23003">23003</span>
<span id="L23004" rel="#L23004">23004</span>
<span id="L23005" rel="#L23005">23005</span>
<span id="L23006" rel="#L23006">23006</span>
<span id="L23007" rel="#L23007">23007</span>
<span id="L23008" rel="#L23008">23008</span>
<span id="L23009" rel="#L23009">23009</span>
<span id="L23010" rel="#L23010">23010</span>
<span id="L23011" rel="#L23011">23011</span>
<span id="L23012" rel="#L23012">23012</span>
<span id="L23013" rel="#L23013">23013</span>
<span id="L23014" rel="#L23014">23014</span>
<span id="L23015" rel="#L23015">23015</span>
<span id="L23016" rel="#L23016">23016</span>
<span id="L23017" rel="#L23017">23017</span>
<span id="L23018" rel="#L23018">23018</span>
<span id="L23019" rel="#L23019">23019</span>
<span id="L23020" rel="#L23020">23020</span>
<span id="L23021" rel="#L23021">23021</span>
<span id="L23022" rel="#L23022">23022</span>
<span id="L23023" rel="#L23023">23023</span>
<span id="L23024" rel="#L23024">23024</span>
<span id="L23025" rel="#L23025">23025</span>
<span id="L23026" rel="#L23026">23026</span>
<span id="L23027" rel="#L23027">23027</span>
<span id="L23028" rel="#L23028">23028</span>
<span id="L23029" rel="#L23029">23029</span>
<span id="L23030" rel="#L23030">23030</span>
<span id="L23031" rel="#L23031">23031</span>
<span id="L23032" rel="#L23032">23032</span>
<span id="L23033" rel="#L23033">23033</span>
<span id="L23034" rel="#L23034">23034</span>
<span id="L23035" rel="#L23035">23035</span>
<span id="L23036" rel="#L23036">23036</span>
<span id="L23037" rel="#L23037">23037</span>
<span id="L23038" rel="#L23038">23038</span>
<span id="L23039" rel="#L23039">23039</span>
<span id="L23040" rel="#L23040">23040</span>
<span id="L23041" rel="#L23041">23041</span>
<span id="L23042" rel="#L23042">23042</span>
<span id="L23043" rel="#L23043">23043</span>
<span id="L23044" rel="#L23044">23044</span>
<span id="L23045" rel="#L23045">23045</span>
<span id="L23046" rel="#L23046">23046</span>
<span id="L23047" rel="#L23047">23047</span>
<span id="L23048" rel="#L23048">23048</span>
<span id="L23049" rel="#L23049">23049</span>
<span id="L23050" rel="#L23050">23050</span>
<span id="L23051" rel="#L23051">23051</span>
<span id="L23052" rel="#L23052">23052</span>
<span id="L23053" rel="#L23053">23053</span>
<span id="L23054" rel="#L23054">23054</span>
<span id="L23055" rel="#L23055">23055</span>
<span id="L23056" rel="#L23056">23056</span>
<span id="L23057" rel="#L23057">23057</span>
<span id="L23058" rel="#L23058">23058</span>
<span id="L23059" rel="#L23059">23059</span>
<span id="L23060" rel="#L23060">23060</span>
<span id="L23061" rel="#L23061">23061</span>
<span id="L23062" rel="#L23062">23062</span>
<span id="L23063" rel="#L23063">23063</span>
<span id="L23064" rel="#L23064">23064</span>
<span id="L23065" rel="#L23065">23065</span>
<span id="L23066" rel="#L23066">23066</span>
<span id="L23067" rel="#L23067">23067</span>
<span id="L23068" rel="#L23068">23068</span>
<span id="L23069" rel="#L23069">23069</span>
<span id="L23070" rel="#L23070">23070</span>
<span id="L23071" rel="#L23071">23071</span>
<span id="L23072" rel="#L23072">23072</span>
<span id="L23073" rel="#L23073">23073</span>
<span id="L23074" rel="#L23074">23074</span>
<span id="L23075" rel="#L23075">23075</span>
<span id="L23076" rel="#L23076">23076</span>
<span id="L23077" rel="#L23077">23077</span>
<span id="L23078" rel="#L23078">23078</span>
<span id="L23079" rel="#L23079">23079</span>
<span id="L23080" rel="#L23080">23080</span>
<span id="L23081" rel="#L23081">23081</span>
<span id="L23082" rel="#L23082">23082</span>
<span id="L23083" rel="#L23083">23083</span>
<span id="L23084" rel="#L23084">23084</span>
<span id="L23085" rel="#L23085">23085</span>
<span id="L23086" rel="#L23086">23086</span>
<span id="L23087" rel="#L23087">23087</span>
<span id="L23088" rel="#L23088">23088</span>
<span id="L23089" rel="#L23089">23089</span>
<span id="L23090" rel="#L23090">23090</span>
<span id="L23091" rel="#L23091">23091</span>
<span id="L23092" rel="#L23092">23092</span>
<span id="L23093" rel="#L23093">23093</span>
<span id="L23094" rel="#L23094">23094</span>
<span id="L23095" rel="#L23095">23095</span>
<span id="L23096" rel="#L23096">23096</span>
<span id="L23097" rel="#L23097">23097</span>
<span id="L23098" rel="#L23098">23098</span>
<span id="L23099" rel="#L23099">23099</span>
<span id="L23100" rel="#L23100">23100</span>
<span id="L23101" rel="#L23101">23101</span>
<span id="L23102" rel="#L23102">23102</span>
<span id="L23103" rel="#L23103">23103</span>
<span id="L23104" rel="#L23104">23104</span>
<span id="L23105" rel="#L23105">23105</span>
<span id="L23106" rel="#L23106">23106</span>
<span id="L23107" rel="#L23107">23107</span>
<span id="L23108" rel="#L23108">23108</span>
<span id="L23109" rel="#L23109">23109</span>
<span id="L23110" rel="#L23110">23110</span>
<span id="L23111" rel="#L23111">23111</span>
<span id="L23112" rel="#L23112">23112</span>
<span id="L23113" rel="#L23113">23113</span>
<span id="L23114" rel="#L23114">23114</span>
<span id="L23115" rel="#L23115">23115</span>
<span id="L23116" rel="#L23116">23116</span>
<span id="L23117" rel="#L23117">23117</span>
<span id="L23118" rel="#L23118">23118</span>
<span id="L23119" rel="#L23119">23119</span>
<span id="L23120" rel="#L23120">23120</span>
<span id="L23121" rel="#L23121">23121</span>
<span id="L23122" rel="#L23122">23122</span>
<span id="L23123" rel="#L23123">23123</span>
<span id="L23124" rel="#L23124">23124</span>
<span id="L23125" rel="#L23125">23125</span>
<span id="L23126" rel="#L23126">23126</span>
<span id="L23127" rel="#L23127">23127</span>
<span id="L23128" rel="#L23128">23128</span>
<span id="L23129" rel="#L23129">23129</span>
<span id="L23130" rel="#L23130">23130</span>
<span id="L23131" rel="#L23131">23131</span>
<span id="L23132" rel="#L23132">23132</span>
<span id="L23133" rel="#L23133">23133</span>
<span id="L23134" rel="#L23134">23134</span>
<span id="L23135" rel="#L23135">23135</span>
<span id="L23136" rel="#L23136">23136</span>
<span id="L23137" rel="#L23137">23137</span>
<span id="L23138" rel="#L23138">23138</span>
<span id="L23139" rel="#L23139">23139</span>
<span id="L23140" rel="#L23140">23140</span>
<span id="L23141" rel="#L23141">23141</span>
<span id="L23142" rel="#L23142">23142</span>
<span id="L23143" rel="#L23143">23143</span>
<span id="L23144" rel="#L23144">23144</span>
<span id="L23145" rel="#L23145">23145</span>
<span id="L23146" rel="#L23146">23146</span>
<span id="L23147" rel="#L23147">23147</span>
<span id="L23148" rel="#L23148">23148</span>
<span id="L23149" rel="#L23149">23149</span>
<span id="L23150" rel="#L23150">23150</span>
<span id="L23151" rel="#L23151">23151</span>
<span id="L23152" rel="#L23152">23152</span>
<span id="L23153" rel="#L23153">23153</span>
<span id="L23154" rel="#L23154">23154</span>
<span id="L23155" rel="#L23155">23155</span>
<span id="L23156" rel="#L23156">23156</span>
<span id="L23157" rel="#L23157">23157</span>
<span id="L23158" rel="#L23158">23158</span>
<span id="L23159" rel="#L23159">23159</span>
<span id="L23160" rel="#L23160">23160</span>
<span id="L23161" rel="#L23161">23161</span>
<span id="L23162" rel="#L23162">23162</span>
<span id="L23163" rel="#L23163">23163</span>
<span id="L23164" rel="#L23164">23164</span>
<span id="L23165" rel="#L23165">23165</span>
<span id="L23166" rel="#L23166">23166</span>
<span id="L23167" rel="#L23167">23167</span>
<span id="L23168" rel="#L23168">23168</span>
<span id="L23169" rel="#L23169">23169</span>
<span id="L23170" rel="#L23170">23170</span>
<span id="L23171" rel="#L23171">23171</span>
<span id="L23172" rel="#L23172">23172</span>
<span id="L23173" rel="#L23173">23173</span>
<span id="L23174" rel="#L23174">23174</span>
<span id="L23175" rel="#L23175">23175</span>
<span id="L23176" rel="#L23176">23176</span>
<span id="L23177" rel="#L23177">23177</span>
<span id="L23178" rel="#L23178">23178</span>
<span id="L23179" rel="#L23179">23179</span>
<span id="L23180" rel="#L23180">23180</span>
<span id="L23181" rel="#L23181">23181</span>
<span id="L23182" rel="#L23182">23182</span>
<span id="L23183" rel="#L23183">23183</span>
<span id="L23184" rel="#L23184">23184</span>
<span id="L23185" rel="#L23185">23185</span>
<span id="L23186" rel="#L23186">23186</span>
<span id="L23187" rel="#L23187">23187</span>
<span id="L23188" rel="#L23188">23188</span>
<span id="L23189" rel="#L23189">23189</span>
<span id="L23190" rel="#L23190">23190</span>
<span id="L23191" rel="#L23191">23191</span>
<span id="L23192" rel="#L23192">23192</span>
<span id="L23193" rel="#L23193">23193</span>
<span id="L23194" rel="#L23194">23194</span>
<span id="L23195" rel="#L23195">23195</span>
<span id="L23196" rel="#L23196">23196</span>
<span id="L23197" rel="#L23197">23197</span>
<span id="L23198" rel="#L23198">23198</span>
<span id="L23199" rel="#L23199">23199</span>
<span id="L23200" rel="#L23200">23200</span>
<span id="L23201" rel="#L23201">23201</span>
<span id="L23202" rel="#L23202">23202</span>
<span id="L23203" rel="#L23203">23203</span>
<span id="L23204" rel="#L23204">23204</span>
<span id="L23205" rel="#L23205">23205</span>
<span id="L23206" rel="#L23206">23206</span>
<span id="L23207" rel="#L23207">23207</span>
<span id="L23208" rel="#L23208">23208</span>
<span id="L23209" rel="#L23209">23209</span>
<span id="L23210" rel="#L23210">23210</span>
<span id="L23211" rel="#L23211">23211</span>
<span id="L23212" rel="#L23212">23212</span>
<span id="L23213" rel="#L23213">23213</span>
<span id="L23214" rel="#L23214">23214</span>
<span id="L23215" rel="#L23215">23215</span>
<span id="L23216" rel="#L23216">23216</span>
<span id="L23217" rel="#L23217">23217</span>
<span id="L23218" rel="#L23218">23218</span>
<span id="L23219" rel="#L23219">23219</span>
<span id="L23220" rel="#L23220">23220</span>
<span id="L23221" rel="#L23221">23221</span>
<span id="L23222" rel="#L23222">23222</span>
<span id="L23223" rel="#L23223">23223</span>
<span id="L23224" rel="#L23224">23224</span>
<span id="L23225" rel="#L23225">23225</span>
<span id="L23226" rel="#L23226">23226</span>
<span id="L23227" rel="#L23227">23227</span>
<span id="L23228" rel="#L23228">23228</span>
<span id="L23229" rel="#L23229">23229</span>
<span id="L23230" rel="#L23230">23230</span>
<span id="L23231" rel="#L23231">23231</span>
<span id="L23232" rel="#L23232">23232</span>
<span id="L23233" rel="#L23233">23233</span>
<span id="L23234" rel="#L23234">23234</span>
<span id="L23235" rel="#L23235">23235</span>
<span id="L23236" rel="#L23236">23236</span>
<span id="L23237" rel="#L23237">23237</span>
<span id="L23238" rel="#L23238">23238</span>
<span id="L23239" rel="#L23239">23239</span>
<span id="L23240" rel="#L23240">23240</span>
<span id="L23241" rel="#L23241">23241</span>
<span id="L23242" rel="#L23242">23242</span>
<span id="L23243" rel="#L23243">23243</span>
<span id="L23244" rel="#L23244">23244</span>
<span id="L23245" rel="#L23245">23245</span>
<span id="L23246" rel="#L23246">23246</span>
<span id="L23247" rel="#L23247">23247</span>
<span id="L23248" rel="#L23248">23248</span>
<span id="L23249" rel="#L23249">23249</span>
<span id="L23250" rel="#L23250">23250</span>
<span id="L23251" rel="#L23251">23251</span>
<span id="L23252" rel="#L23252">23252</span>
<span id="L23253" rel="#L23253">23253</span>
<span id="L23254" rel="#L23254">23254</span>
<span id="L23255" rel="#L23255">23255</span>
<span id="L23256" rel="#L23256">23256</span>
<span id="L23257" rel="#L23257">23257</span>
<span id="L23258" rel="#L23258">23258</span>
<span id="L23259" rel="#L23259">23259</span>
<span id="L23260" rel="#L23260">23260</span>
<span id="L23261" rel="#L23261">23261</span>
<span id="L23262" rel="#L23262">23262</span>
<span id="L23263" rel="#L23263">23263</span>
<span id="L23264" rel="#L23264">23264</span>
<span id="L23265" rel="#L23265">23265</span>
<span id="L23266" rel="#L23266">23266</span>
<span id="L23267" rel="#L23267">23267</span>
<span id="L23268" rel="#L23268">23268</span>
<span id="L23269" rel="#L23269">23269</span>
<span id="L23270" rel="#L23270">23270</span>
<span id="L23271" rel="#L23271">23271</span>
<span id="L23272" rel="#L23272">23272</span>
<span id="L23273" rel="#L23273">23273</span>
<span id="L23274" rel="#L23274">23274</span>
<span id="L23275" rel="#L23275">23275</span>
<span id="L23276" rel="#L23276">23276</span>
<span id="L23277" rel="#L23277">23277</span>
<span id="L23278" rel="#L23278">23278</span>
<span id="L23279" rel="#L23279">23279</span>
<span id="L23280" rel="#L23280">23280</span>
<span id="L23281" rel="#L23281">23281</span>
<span id="L23282" rel="#L23282">23282</span>
<span id="L23283" rel="#L23283">23283</span>
<span id="L23284" rel="#L23284">23284</span>
<span id="L23285" rel="#L23285">23285</span>
<span id="L23286" rel="#L23286">23286</span>
<span id="L23287" rel="#L23287">23287</span>
<span id="L23288" rel="#L23288">23288</span>
<span id="L23289" rel="#L23289">23289</span>
<span id="L23290" rel="#L23290">23290</span>
<span id="L23291" rel="#L23291">23291</span>
<span id="L23292" rel="#L23292">23292</span>
<span id="L23293" rel="#L23293">23293</span>
<span id="L23294" rel="#L23294">23294</span>
<span id="L23295" rel="#L23295">23295</span>
<span id="L23296" rel="#L23296">23296</span>
<span id="L23297" rel="#L23297">23297</span>
<span id="L23298" rel="#L23298">23298</span>
<span id="L23299" rel="#L23299">23299</span>
<span id="L23300" rel="#L23300">23300</span>
<span id="L23301" rel="#L23301">23301</span>
<span id="L23302" rel="#L23302">23302</span>
<span id="L23303" rel="#L23303">23303</span>
<span id="L23304" rel="#L23304">23304</span>
<span id="L23305" rel="#L23305">23305</span>
<span id="L23306" rel="#L23306">23306</span>
<span id="L23307" rel="#L23307">23307</span>
<span id="L23308" rel="#L23308">23308</span>
<span id="L23309" rel="#L23309">23309</span>
<span id="L23310" rel="#L23310">23310</span>
<span id="L23311" rel="#L23311">23311</span>
<span id="L23312" rel="#L23312">23312</span>
<span id="L23313" rel="#L23313">23313</span>
<span id="L23314" rel="#L23314">23314</span>
<span id="L23315" rel="#L23315">23315</span>
<span id="L23316" rel="#L23316">23316</span>
<span id="L23317" rel="#L23317">23317</span>
<span id="L23318" rel="#L23318">23318</span>
<span id="L23319" rel="#L23319">23319</span>
<span id="L23320" rel="#L23320">23320</span>
<span id="L23321" rel="#L23321">23321</span>
<span id="L23322" rel="#L23322">23322</span>
<span id="L23323" rel="#L23323">23323</span>
<span id="L23324" rel="#L23324">23324</span>
<span id="L23325" rel="#L23325">23325</span>
<span id="L23326" rel="#L23326">23326</span>
<span id="L23327" rel="#L23327">23327</span>
<span id="L23328" rel="#L23328">23328</span>
<span id="L23329" rel="#L23329">23329</span>
<span id="L23330" rel="#L23330">23330</span>
<span id="L23331" rel="#L23331">23331</span>
<span id="L23332" rel="#L23332">23332</span>
<span id="L23333" rel="#L23333">23333</span>
<span id="L23334" rel="#L23334">23334</span>
<span id="L23335" rel="#L23335">23335</span>
<span id="L23336" rel="#L23336">23336</span>
<span id="L23337" rel="#L23337">23337</span>
<span id="L23338" rel="#L23338">23338</span>
<span id="L23339" rel="#L23339">23339</span>
<span id="L23340" rel="#L23340">23340</span>
<span id="L23341" rel="#L23341">23341</span>
<span id="L23342" rel="#L23342">23342</span>
<span id="L23343" rel="#L23343">23343</span>
<span id="L23344" rel="#L23344">23344</span>
<span id="L23345" rel="#L23345">23345</span>
<span id="L23346" rel="#L23346">23346</span>
<span id="L23347" rel="#L23347">23347</span>
<span id="L23348" rel="#L23348">23348</span>
<span id="L23349" rel="#L23349">23349</span>
<span id="L23350" rel="#L23350">23350</span>
<span id="L23351" rel="#L23351">23351</span>
<span id="L23352" rel="#L23352">23352</span>
<span id="L23353" rel="#L23353">23353</span>
<span id="L23354" rel="#L23354">23354</span>
<span id="L23355" rel="#L23355">23355</span>
<span id="L23356" rel="#L23356">23356</span>
<span id="L23357" rel="#L23357">23357</span>
<span id="L23358" rel="#L23358">23358</span>
<span id="L23359" rel="#L23359">23359</span>
<span id="L23360" rel="#L23360">23360</span>
<span id="L23361" rel="#L23361">23361</span>
<span id="L23362" rel="#L23362">23362</span>
<span id="L23363" rel="#L23363">23363</span>
<span id="L23364" rel="#L23364">23364</span>
<span id="L23365" rel="#L23365">23365</span>
<span id="L23366" rel="#L23366">23366</span>
<span id="L23367" rel="#L23367">23367</span>
<span id="L23368" rel="#L23368">23368</span>
<span id="L23369" rel="#L23369">23369</span>
<span id="L23370" rel="#L23370">23370</span>
<span id="L23371" rel="#L23371">23371</span>
<span id="L23372" rel="#L23372">23372</span>
<span id="L23373" rel="#L23373">23373</span>
<span id="L23374" rel="#L23374">23374</span>
<span id="L23375" rel="#L23375">23375</span>
<span id="L23376" rel="#L23376">23376</span>
<span id="L23377" rel="#L23377">23377</span>
<span id="L23378" rel="#L23378">23378</span>
<span id="L23379" rel="#L23379">23379</span>
<span id="L23380" rel="#L23380">23380</span>
<span id="L23381" rel="#L23381">23381</span>
<span id="L23382" rel="#L23382">23382</span>
<span id="L23383" rel="#L23383">23383</span>
<span id="L23384" rel="#L23384">23384</span>
<span id="L23385" rel="#L23385">23385</span>
<span id="L23386" rel="#L23386">23386</span>
<span id="L23387" rel="#L23387">23387</span>
<span id="L23388" rel="#L23388">23388</span>
<span id="L23389" rel="#L23389">23389</span>
<span id="L23390" rel="#L23390">23390</span>
<span id="L23391" rel="#L23391">23391</span>
<span id="L23392" rel="#L23392">23392</span>
<span id="L23393" rel="#L23393">23393</span>
<span id="L23394" rel="#L23394">23394</span>
<span id="L23395" rel="#L23395">23395</span>
<span id="L23396" rel="#L23396">23396</span>
<span id="L23397" rel="#L23397">23397</span>
<span id="L23398" rel="#L23398">23398</span>
<span id="L23399" rel="#L23399">23399</span>
<span id="L23400" rel="#L23400">23400</span>
<span id="L23401" rel="#L23401">23401</span>
<span id="L23402" rel="#L23402">23402</span>
<span id="L23403" rel="#L23403">23403</span>
<span id="L23404" rel="#L23404">23404</span>
<span id="L23405" rel="#L23405">23405</span>
<span id="L23406" rel="#L23406">23406</span>
<span id="L23407" rel="#L23407">23407</span>
<span id="L23408" rel="#L23408">23408</span>
<span id="L23409" rel="#L23409">23409</span>
<span id="L23410" rel="#L23410">23410</span>
<span id="L23411" rel="#L23411">23411</span>
<span id="L23412" rel="#L23412">23412</span>
<span id="L23413" rel="#L23413">23413</span>
<span id="L23414" rel="#L23414">23414</span>
<span id="L23415" rel="#L23415">23415</span>
<span id="L23416" rel="#L23416">23416</span>
<span id="L23417" rel="#L23417">23417</span>
<span id="L23418" rel="#L23418">23418</span>
<span id="L23419" rel="#L23419">23419</span>
<span id="L23420" rel="#L23420">23420</span>
<span id="L23421" rel="#L23421">23421</span>
<span id="L23422" rel="#L23422">23422</span>
<span id="L23423" rel="#L23423">23423</span>
<span id="L23424" rel="#L23424">23424</span>
<span id="L23425" rel="#L23425">23425</span>
<span id="L23426" rel="#L23426">23426</span>
<span id="L23427" rel="#L23427">23427</span>
<span id="L23428" rel="#L23428">23428</span>
<span id="L23429" rel="#L23429">23429</span>
<span id="L23430" rel="#L23430">23430</span>
<span id="L23431" rel="#L23431">23431</span>
<span id="L23432" rel="#L23432">23432</span>
<span id="L23433" rel="#L23433">23433</span>
<span id="L23434" rel="#L23434">23434</span>
<span id="L23435" rel="#L23435">23435</span>
<span id="L23436" rel="#L23436">23436</span>
<span id="L23437" rel="#L23437">23437</span>
<span id="L23438" rel="#L23438">23438</span>
<span id="L23439" rel="#L23439">23439</span>
<span id="L23440" rel="#L23440">23440</span>
<span id="L23441" rel="#L23441">23441</span>
<span id="L23442" rel="#L23442">23442</span>
<span id="L23443" rel="#L23443">23443</span>
<span id="L23444" rel="#L23444">23444</span>
<span id="L23445" rel="#L23445">23445</span>
<span id="L23446" rel="#L23446">23446</span>
<span id="L23447" rel="#L23447">23447</span>
<span id="L23448" rel="#L23448">23448</span>
<span id="L23449" rel="#L23449">23449</span>
<span id="L23450" rel="#L23450">23450</span>
<span id="L23451" rel="#L23451">23451</span>
<span id="L23452" rel="#L23452">23452</span>
<span id="L23453" rel="#L23453">23453</span>
<span id="L23454" rel="#L23454">23454</span>
<span id="L23455" rel="#L23455">23455</span>
<span id="L23456" rel="#L23456">23456</span>
<span id="L23457" rel="#L23457">23457</span>
<span id="L23458" rel="#L23458">23458</span>
<span id="L23459" rel="#L23459">23459</span>
<span id="L23460" rel="#L23460">23460</span>
<span id="L23461" rel="#L23461">23461</span>
<span id="L23462" rel="#L23462">23462</span>
<span id="L23463" rel="#L23463">23463</span>
<span id="L23464" rel="#L23464">23464</span>
<span id="L23465" rel="#L23465">23465</span>
<span id="L23466" rel="#L23466">23466</span>
<span id="L23467" rel="#L23467">23467</span>
<span id="L23468" rel="#L23468">23468</span>
<span id="L23469" rel="#L23469">23469</span>
<span id="L23470" rel="#L23470">23470</span>
<span id="L23471" rel="#L23471">23471</span>
<span id="L23472" rel="#L23472">23472</span>
<span id="L23473" rel="#L23473">23473</span>
<span id="L23474" rel="#L23474">23474</span>
<span id="L23475" rel="#L23475">23475</span>
<span id="L23476" rel="#L23476">23476</span>
<span id="L23477" rel="#L23477">23477</span>
<span id="L23478" rel="#L23478">23478</span>
<span id="L23479" rel="#L23479">23479</span>
<span id="L23480" rel="#L23480">23480</span>
<span id="L23481" rel="#L23481">23481</span>
<span id="L23482" rel="#L23482">23482</span>
<span id="L23483" rel="#L23483">23483</span>
<span id="L23484" rel="#L23484">23484</span>
<span id="L23485" rel="#L23485">23485</span>
<span id="L23486" rel="#L23486">23486</span>
<span id="L23487" rel="#L23487">23487</span>
<span id="L23488" rel="#L23488">23488</span>
<span id="L23489" rel="#L23489">23489</span>
<span id="L23490" rel="#L23490">23490</span>
<span id="L23491" rel="#L23491">23491</span>
<span id="L23492" rel="#L23492">23492</span>
<span id="L23493" rel="#L23493">23493</span>
<span id="L23494" rel="#L23494">23494</span>
<span id="L23495" rel="#L23495">23495</span>
<span id="L23496" rel="#L23496">23496</span>
<span id="L23497" rel="#L23497">23497</span>
<span id="L23498" rel="#L23498">23498</span>
<span id="L23499" rel="#L23499">23499</span>
<span id="L23500" rel="#L23500">23500</span>
<span id="L23501" rel="#L23501">23501</span>
<span id="L23502" rel="#L23502">23502</span>
<span id="L23503" rel="#L23503">23503</span>
<span id="L23504" rel="#L23504">23504</span>
<span id="L23505" rel="#L23505">23505</span>
<span id="L23506" rel="#L23506">23506</span>
<span id="L23507" rel="#L23507">23507</span>
<span id="L23508" rel="#L23508">23508</span>
<span id="L23509" rel="#L23509">23509</span>
<span id="L23510" rel="#L23510">23510</span>
<span id="L23511" rel="#L23511">23511</span>
<span id="L23512" rel="#L23512">23512</span>
<span id="L23513" rel="#L23513">23513</span>
<span id="L23514" rel="#L23514">23514</span>
<span id="L23515" rel="#L23515">23515</span>
<span id="L23516" rel="#L23516">23516</span>
<span id="L23517" rel="#L23517">23517</span>
<span id="L23518" rel="#L23518">23518</span>
<span id="L23519" rel="#L23519">23519</span>
<span id="L23520" rel="#L23520">23520</span>
<span id="L23521" rel="#L23521">23521</span>
<span id="L23522" rel="#L23522">23522</span>
<span id="L23523" rel="#L23523">23523</span>
<span id="L23524" rel="#L23524">23524</span>
<span id="L23525" rel="#L23525">23525</span>
<span id="L23526" rel="#L23526">23526</span>
<span id="L23527" rel="#L23527">23527</span>
<span id="L23528" rel="#L23528">23528</span>
<span id="L23529" rel="#L23529">23529</span>
<span id="L23530" rel="#L23530">23530</span>
<span id="L23531" rel="#L23531">23531</span>
<span id="L23532" rel="#L23532">23532</span>
<span id="L23533" rel="#L23533">23533</span>
<span id="L23534" rel="#L23534">23534</span>
<span id="L23535" rel="#L23535">23535</span>
<span id="L23536" rel="#L23536">23536</span>
<span id="L23537" rel="#L23537">23537</span>
<span id="L23538" rel="#L23538">23538</span>
<span id="L23539" rel="#L23539">23539</span>
<span id="L23540" rel="#L23540">23540</span>
<span id="L23541" rel="#L23541">23541</span>
<span id="L23542" rel="#L23542">23542</span>
<span id="L23543" rel="#L23543">23543</span>
<span id="L23544" rel="#L23544">23544</span>
<span id="L23545" rel="#L23545">23545</span>
<span id="L23546" rel="#L23546">23546</span>
<span id="L23547" rel="#L23547">23547</span>
<span id="L23548" rel="#L23548">23548</span>
<span id="L23549" rel="#L23549">23549</span>
<span id="L23550" rel="#L23550">23550</span>
<span id="L23551" rel="#L23551">23551</span>
<span id="L23552" rel="#L23552">23552</span>
<span id="L23553" rel="#L23553">23553</span>
<span id="L23554" rel="#L23554">23554</span>
<span id="L23555" rel="#L23555">23555</span>
<span id="L23556" rel="#L23556">23556</span>
<span id="L23557" rel="#L23557">23557</span>
<span id="L23558" rel="#L23558">23558</span>
<span id="L23559" rel="#L23559">23559</span>
<span id="L23560" rel="#L23560">23560</span>
<span id="L23561" rel="#L23561">23561</span>
<span id="L23562" rel="#L23562">23562</span>
<span id="L23563" rel="#L23563">23563</span>
<span id="L23564" rel="#L23564">23564</span>
<span id="L23565" rel="#L23565">23565</span>
<span id="L23566" rel="#L23566">23566</span>
<span id="L23567" rel="#L23567">23567</span>
<span id="L23568" rel="#L23568">23568</span>
<span id="L23569" rel="#L23569">23569</span>
<span id="L23570" rel="#L23570">23570</span>
<span id="L23571" rel="#L23571">23571</span>
<span id="L23572" rel="#L23572">23572</span>
<span id="L23573" rel="#L23573">23573</span>
<span id="L23574" rel="#L23574">23574</span>
<span id="L23575" rel="#L23575">23575</span>
<span id="L23576" rel="#L23576">23576</span>
<span id="L23577" rel="#L23577">23577</span>
<span id="L23578" rel="#L23578">23578</span>
<span id="L23579" rel="#L23579">23579</span>
<span id="L23580" rel="#L23580">23580</span>
<span id="L23581" rel="#L23581">23581</span>
<span id="L23582" rel="#L23582">23582</span>
<span id="L23583" rel="#L23583">23583</span>
<span id="L23584" rel="#L23584">23584</span>
<span id="L23585" rel="#L23585">23585</span>
<span id="L23586" rel="#L23586">23586</span>
<span id="L23587" rel="#L23587">23587</span>
<span id="L23588" rel="#L23588">23588</span>
<span id="L23589" rel="#L23589">23589</span>
<span id="L23590" rel="#L23590">23590</span>
<span id="L23591" rel="#L23591">23591</span>
<span id="L23592" rel="#L23592">23592</span>
<span id="L23593" rel="#L23593">23593</span>
<span id="L23594" rel="#L23594">23594</span>
<span id="L23595" rel="#L23595">23595</span>
<span id="L23596" rel="#L23596">23596</span>
<span id="L23597" rel="#L23597">23597</span>
<span id="L23598" rel="#L23598">23598</span>
<span id="L23599" rel="#L23599">23599</span>
<span id="L23600" rel="#L23600">23600</span>
<span id="L23601" rel="#L23601">23601</span>
<span id="L23602" rel="#L23602">23602</span>
<span id="L23603" rel="#L23603">23603</span>
<span id="L23604" rel="#L23604">23604</span>
<span id="L23605" rel="#L23605">23605</span>
<span id="L23606" rel="#L23606">23606</span>
<span id="L23607" rel="#L23607">23607</span>
<span id="L23608" rel="#L23608">23608</span>
<span id="L23609" rel="#L23609">23609</span>
<span id="L23610" rel="#L23610">23610</span>
<span id="L23611" rel="#L23611">23611</span>
<span id="L23612" rel="#L23612">23612</span>
<span id="L23613" rel="#L23613">23613</span>
<span id="L23614" rel="#L23614">23614</span>
<span id="L23615" rel="#L23615">23615</span>
<span id="L23616" rel="#L23616">23616</span>
<span id="L23617" rel="#L23617">23617</span>
<span id="L23618" rel="#L23618">23618</span>
<span id="L23619" rel="#L23619">23619</span>
<span id="L23620" rel="#L23620">23620</span>
<span id="L23621" rel="#L23621">23621</span>
<span id="L23622" rel="#L23622">23622</span>
<span id="L23623" rel="#L23623">23623</span>
<span id="L23624" rel="#L23624">23624</span>
<span id="L23625" rel="#L23625">23625</span>
<span id="L23626" rel="#L23626">23626</span>
<span id="L23627" rel="#L23627">23627</span>
<span id="L23628" rel="#L23628">23628</span>
<span id="L23629" rel="#L23629">23629</span>
<span id="L23630" rel="#L23630">23630</span>
<span id="L23631" rel="#L23631">23631</span>
<span id="L23632" rel="#L23632">23632</span>
<span id="L23633" rel="#L23633">23633</span>
<span id="L23634" rel="#L23634">23634</span>
<span id="L23635" rel="#L23635">23635</span>
<span id="L23636" rel="#L23636">23636</span>
<span id="L23637" rel="#L23637">23637</span>
<span id="L23638" rel="#L23638">23638</span>
<span id="L23639" rel="#L23639">23639</span>
<span id="L23640" rel="#L23640">23640</span>
<span id="L23641" rel="#L23641">23641</span>
<span id="L23642" rel="#L23642">23642</span>
<span id="L23643" rel="#L23643">23643</span>
<span id="L23644" rel="#L23644">23644</span>
<span id="L23645" rel="#L23645">23645</span>
<span id="L23646" rel="#L23646">23646</span>
<span id="L23647" rel="#L23647">23647</span>
<span id="L23648" rel="#L23648">23648</span>
<span id="L23649" rel="#L23649">23649</span>
<span id="L23650" rel="#L23650">23650</span>
<span id="L23651" rel="#L23651">23651</span>
<span id="L23652" rel="#L23652">23652</span>
<span id="L23653" rel="#L23653">23653</span>
<span id="L23654" rel="#L23654">23654</span>
<span id="L23655" rel="#L23655">23655</span>
<span id="L23656" rel="#L23656">23656</span>
<span id="L23657" rel="#L23657">23657</span>
<span id="L23658" rel="#L23658">23658</span>
<span id="L23659" rel="#L23659">23659</span>
<span id="L23660" rel="#L23660">23660</span>
<span id="L23661" rel="#L23661">23661</span>
<span id="L23662" rel="#L23662">23662</span>
<span id="L23663" rel="#L23663">23663</span>
<span id="L23664" rel="#L23664">23664</span>
<span id="L23665" rel="#L23665">23665</span>
<span id="L23666" rel="#L23666">23666</span>
<span id="L23667" rel="#L23667">23667</span>
<span id="L23668" rel="#L23668">23668</span>
<span id="L23669" rel="#L23669">23669</span>
<span id="L23670" rel="#L23670">23670</span>
<span id="L23671" rel="#L23671">23671</span>
<span id="L23672" rel="#L23672">23672</span>
<span id="L23673" rel="#L23673">23673</span>
<span id="L23674" rel="#L23674">23674</span>
<span id="L23675" rel="#L23675">23675</span>
<span id="L23676" rel="#L23676">23676</span>
<span id="L23677" rel="#L23677">23677</span>
<span id="L23678" rel="#L23678">23678</span>
<span id="L23679" rel="#L23679">23679</span>
<span id="L23680" rel="#L23680">23680</span>
<span id="L23681" rel="#L23681">23681</span>
<span id="L23682" rel="#L23682">23682</span>
<span id="L23683" rel="#L23683">23683</span>
<span id="L23684" rel="#L23684">23684</span>
<span id="L23685" rel="#L23685">23685</span>
<span id="L23686" rel="#L23686">23686</span>
<span id="L23687" rel="#L23687">23687</span>
<span id="L23688" rel="#L23688">23688</span>
<span id="L23689" rel="#L23689">23689</span>
<span id="L23690" rel="#L23690">23690</span>
<span id="L23691" rel="#L23691">23691</span>
<span id="L23692" rel="#L23692">23692</span>
<span id="L23693" rel="#L23693">23693</span>
<span id="L23694" rel="#L23694">23694</span>
<span id="L23695" rel="#L23695">23695</span>
<span id="L23696" rel="#L23696">23696</span>
<span id="L23697" rel="#L23697">23697</span>
<span id="L23698" rel="#L23698">23698</span>
<span id="L23699" rel="#L23699">23699</span>
<span id="L23700" rel="#L23700">23700</span>
<span id="L23701" rel="#L23701">23701</span>
<span id="L23702" rel="#L23702">23702</span>
<span id="L23703" rel="#L23703">23703</span>
<span id="L23704" rel="#L23704">23704</span>
<span id="L23705" rel="#L23705">23705</span>
<span id="L23706" rel="#L23706">23706</span>
<span id="L23707" rel="#L23707">23707</span>
<span id="L23708" rel="#L23708">23708</span>
<span id="L23709" rel="#L23709">23709</span>
<span id="L23710" rel="#L23710">23710</span>
<span id="L23711" rel="#L23711">23711</span>
<span id="L23712" rel="#L23712">23712</span>
<span id="L23713" rel="#L23713">23713</span>
<span id="L23714" rel="#L23714">23714</span>
<span id="L23715" rel="#L23715">23715</span>
<span id="L23716" rel="#L23716">23716</span>
<span id="L23717" rel="#L23717">23717</span>
<span id="L23718" rel="#L23718">23718</span>
<span id="L23719" rel="#L23719">23719</span>
<span id="L23720" rel="#L23720">23720</span>
<span id="L23721" rel="#L23721">23721</span>
<span id="L23722" rel="#L23722">23722</span>
<span id="L23723" rel="#L23723">23723</span>
<span id="L23724" rel="#L23724">23724</span>
<span id="L23725" rel="#L23725">23725</span>
<span id="L23726" rel="#L23726">23726</span>
<span id="L23727" rel="#L23727">23727</span>
<span id="L23728" rel="#L23728">23728</span>
<span id="L23729" rel="#L23729">23729</span>
<span id="L23730" rel="#L23730">23730</span>
<span id="L23731" rel="#L23731">23731</span>
<span id="L23732" rel="#L23732">23732</span>
<span id="L23733" rel="#L23733">23733</span>
<span id="L23734" rel="#L23734">23734</span>
<span id="L23735" rel="#L23735">23735</span>
<span id="L23736" rel="#L23736">23736</span>
<span id="L23737" rel="#L23737">23737</span>
<span id="L23738" rel="#L23738">23738</span>
<span id="L23739" rel="#L23739">23739</span>
<span id="L23740" rel="#L23740">23740</span>
<span id="L23741" rel="#L23741">23741</span>
<span id="L23742" rel="#L23742">23742</span>
<span id="L23743" rel="#L23743">23743</span>
<span id="L23744" rel="#L23744">23744</span>
<span id="L23745" rel="#L23745">23745</span>
<span id="L23746" rel="#L23746">23746</span>
<span id="L23747" rel="#L23747">23747</span>
<span id="L23748" rel="#L23748">23748</span>
<span id="L23749" rel="#L23749">23749</span>
<span id="L23750" rel="#L23750">23750</span>
<span id="L23751" rel="#L23751">23751</span>
<span id="L23752" rel="#L23752">23752</span>
<span id="L23753" rel="#L23753">23753</span>
<span id="L23754" rel="#L23754">23754</span>
<span id="L23755" rel="#L23755">23755</span>
<span id="L23756" rel="#L23756">23756</span>
<span id="L23757" rel="#L23757">23757</span>
<span id="L23758" rel="#L23758">23758</span>
<span id="L23759" rel="#L23759">23759</span>
<span id="L23760" rel="#L23760">23760</span>
<span id="L23761" rel="#L23761">23761</span>
<span id="L23762" rel="#L23762">23762</span>
<span id="L23763" rel="#L23763">23763</span>
<span id="L23764" rel="#L23764">23764</span>
<span id="L23765" rel="#L23765">23765</span>
<span id="L23766" rel="#L23766">23766</span>
<span id="L23767" rel="#L23767">23767</span>
<span id="L23768" rel="#L23768">23768</span>
<span id="L23769" rel="#L23769">23769</span>
<span id="L23770" rel="#L23770">23770</span>
<span id="L23771" rel="#L23771">23771</span>
<span id="L23772" rel="#L23772">23772</span>
<span id="L23773" rel="#L23773">23773</span>
<span id="L23774" rel="#L23774">23774</span>
<span id="L23775" rel="#L23775">23775</span>
<span id="L23776" rel="#L23776">23776</span>
<span id="L23777" rel="#L23777">23777</span>
<span id="L23778" rel="#L23778">23778</span>
<span id="L23779" rel="#L23779">23779</span>
<span id="L23780" rel="#L23780">23780</span>
<span id="L23781" rel="#L23781">23781</span>
<span id="L23782" rel="#L23782">23782</span>
<span id="L23783" rel="#L23783">23783</span>
<span id="L23784" rel="#L23784">23784</span>
<span id="L23785" rel="#L23785">23785</span>
<span id="L23786" rel="#L23786">23786</span>
<span id="L23787" rel="#L23787">23787</span>
<span id="L23788" rel="#L23788">23788</span>
<span id="L23789" rel="#L23789">23789</span>
<span id="L23790" rel="#L23790">23790</span>
<span id="L23791" rel="#L23791">23791</span>
<span id="L23792" rel="#L23792">23792</span>
<span id="L23793" rel="#L23793">23793</span>
<span id="L23794" rel="#L23794">23794</span>
<span id="L23795" rel="#L23795">23795</span>
<span id="L23796" rel="#L23796">23796</span>
<span id="L23797" rel="#L23797">23797</span>
<span id="L23798" rel="#L23798">23798</span>
<span id="L23799" rel="#L23799">23799</span>
<span id="L23800" rel="#L23800">23800</span>
<span id="L23801" rel="#L23801">23801</span>
<span id="L23802" rel="#L23802">23802</span>
<span id="L23803" rel="#L23803">23803</span>
<span id="L23804" rel="#L23804">23804</span>
<span id="L23805" rel="#L23805">23805</span>
<span id="L23806" rel="#L23806">23806</span>
<span id="L23807" rel="#L23807">23807</span>
<span id="L23808" rel="#L23808">23808</span>
<span id="L23809" rel="#L23809">23809</span>
<span id="L23810" rel="#L23810">23810</span>
<span id="L23811" rel="#L23811">23811</span>
<span id="L23812" rel="#L23812">23812</span>
<span id="L23813" rel="#L23813">23813</span>
<span id="L23814" rel="#L23814">23814</span>
<span id="L23815" rel="#L23815">23815</span>
<span id="L23816" rel="#L23816">23816</span>
<span id="L23817" rel="#L23817">23817</span>
<span id="L23818" rel="#L23818">23818</span>
<span id="L23819" rel="#L23819">23819</span>
<span id="L23820" rel="#L23820">23820</span>
<span id="L23821" rel="#L23821">23821</span>
<span id="L23822" rel="#L23822">23822</span>
<span id="L23823" rel="#L23823">23823</span>
<span id="L23824" rel="#L23824">23824</span>
<span id="L23825" rel="#L23825">23825</span>
<span id="L23826" rel="#L23826">23826</span>
<span id="L23827" rel="#L23827">23827</span>
<span id="L23828" rel="#L23828">23828</span>
<span id="L23829" rel="#L23829">23829</span>
<span id="L23830" rel="#L23830">23830</span>
<span id="L23831" rel="#L23831">23831</span>
<span id="L23832" rel="#L23832">23832</span>
<span id="L23833" rel="#L23833">23833</span>
<span id="L23834" rel="#L23834">23834</span>
<span id="L23835" rel="#L23835">23835</span>
<span id="L23836" rel="#L23836">23836</span>
<span id="L23837" rel="#L23837">23837</span>
<span id="L23838" rel="#L23838">23838</span>
<span id="L23839" rel="#L23839">23839</span>
<span id="L23840" rel="#L23840">23840</span>
<span id="L23841" rel="#L23841">23841</span>
<span id="L23842" rel="#L23842">23842</span>
<span id="L23843" rel="#L23843">23843</span>
<span id="L23844" rel="#L23844">23844</span>
<span id="L23845" rel="#L23845">23845</span>
<span id="L23846" rel="#L23846">23846</span>
<span id="L23847" rel="#L23847">23847</span>
<span id="L23848" rel="#L23848">23848</span>
<span id="L23849" rel="#L23849">23849</span>
<span id="L23850" rel="#L23850">23850</span>
<span id="L23851" rel="#L23851">23851</span>
<span id="L23852" rel="#L23852">23852</span>
<span id="L23853" rel="#L23853">23853</span>
<span id="L23854" rel="#L23854">23854</span>
<span id="L23855" rel="#L23855">23855</span>
<span id="L23856" rel="#L23856">23856</span>
<span id="L23857" rel="#L23857">23857</span>
<span id="L23858" rel="#L23858">23858</span>
<span id="L23859" rel="#L23859">23859</span>
<span id="L23860" rel="#L23860">23860</span>
<span id="L23861" rel="#L23861">23861</span>
<span id="L23862" rel="#L23862">23862</span>
<span id="L23863" rel="#L23863">23863</span>
<span id="L23864" rel="#L23864">23864</span>
<span id="L23865" rel="#L23865">23865</span>
<span id="L23866" rel="#L23866">23866</span>
<span id="L23867" rel="#L23867">23867</span>
<span id="L23868" rel="#L23868">23868</span>
<span id="L23869" rel="#L23869">23869</span>
<span id="L23870" rel="#L23870">23870</span>
<span id="L23871" rel="#L23871">23871</span>
<span id="L23872" rel="#L23872">23872</span>
<span id="L23873" rel="#L23873">23873</span>
<span id="L23874" rel="#L23874">23874</span>
<span id="L23875" rel="#L23875">23875</span>
<span id="L23876" rel="#L23876">23876</span>
<span id="L23877" rel="#L23877">23877</span>
<span id="L23878" rel="#L23878">23878</span>
<span id="L23879" rel="#L23879">23879</span>
<span id="L23880" rel="#L23880">23880</span>
<span id="L23881" rel="#L23881">23881</span>
<span id="L23882" rel="#L23882">23882</span>
<span id="L23883" rel="#L23883">23883</span>
<span id="L23884" rel="#L23884">23884</span>
<span id="L23885" rel="#L23885">23885</span>
<span id="L23886" rel="#L23886">23886</span>
<span id="L23887" rel="#L23887">23887</span>
<span id="L23888" rel="#L23888">23888</span>
<span id="L23889" rel="#L23889">23889</span>
<span id="L23890" rel="#L23890">23890</span>
<span id="L23891" rel="#L23891">23891</span>
<span id="L23892" rel="#L23892">23892</span>
<span id="L23893" rel="#L23893">23893</span>
<span id="L23894" rel="#L23894">23894</span>
<span id="L23895" rel="#L23895">23895</span>
<span id="L23896" rel="#L23896">23896</span>
<span id="L23897" rel="#L23897">23897</span>
<span id="L23898" rel="#L23898">23898</span>
<span id="L23899" rel="#L23899">23899</span>
<span id="L23900" rel="#L23900">23900</span>
<span id="L23901" rel="#L23901">23901</span>
<span id="L23902" rel="#L23902">23902</span>
<span id="L23903" rel="#L23903">23903</span>
<span id="L23904" rel="#L23904">23904</span>
<span id="L23905" rel="#L23905">23905</span>
<span id="L23906" rel="#L23906">23906</span>
<span id="L23907" rel="#L23907">23907</span>
<span id="L23908" rel="#L23908">23908</span>
<span id="L23909" rel="#L23909">23909</span>
<span id="L23910" rel="#L23910">23910</span>
<span id="L23911" rel="#L23911">23911</span>
<span id="L23912" rel="#L23912">23912</span>
<span id="L23913" rel="#L23913">23913</span>
<span id="L23914" rel="#L23914">23914</span>
<span id="L23915" rel="#L23915">23915</span>
<span id="L23916" rel="#L23916">23916</span>
<span id="L23917" rel="#L23917">23917</span>
<span id="L23918" rel="#L23918">23918</span>
<span id="L23919" rel="#L23919">23919</span>
<span id="L23920" rel="#L23920">23920</span>
<span id="L23921" rel="#L23921">23921</span>
<span id="L23922" rel="#L23922">23922</span>
<span id="L23923" rel="#L23923">23923</span>
<span id="L23924" rel="#L23924">23924</span>
<span id="L23925" rel="#L23925">23925</span>
<span id="L23926" rel="#L23926">23926</span>
<span id="L23927" rel="#L23927">23927</span>
<span id="L23928" rel="#L23928">23928</span>
<span id="L23929" rel="#L23929">23929</span>
<span id="L23930" rel="#L23930">23930</span>
<span id="L23931" rel="#L23931">23931</span>
<span id="L23932" rel="#L23932">23932</span>
<span id="L23933" rel="#L23933">23933</span>
<span id="L23934" rel="#L23934">23934</span>
<span id="L23935" rel="#L23935">23935</span>
<span id="L23936" rel="#L23936">23936</span>
<span id="L23937" rel="#L23937">23937</span>
<span id="L23938" rel="#L23938">23938</span>
<span id="L23939" rel="#L23939">23939</span>
<span id="L23940" rel="#L23940">23940</span>
<span id="L23941" rel="#L23941">23941</span>
<span id="L23942" rel="#L23942">23942</span>
<span id="L23943" rel="#L23943">23943</span>
<span id="L23944" rel="#L23944">23944</span>
<span id="L23945" rel="#L23945">23945</span>
<span id="L23946" rel="#L23946">23946</span>
<span id="L23947" rel="#L23947">23947</span>
<span id="L23948" rel="#L23948">23948</span>
<span id="L23949" rel="#L23949">23949</span>
<span id="L23950" rel="#L23950">23950</span>
<span id="L23951" rel="#L23951">23951</span>
<span id="L23952" rel="#L23952">23952</span>
<span id="L23953" rel="#L23953">23953</span>
<span id="L23954" rel="#L23954">23954</span>
<span id="L23955" rel="#L23955">23955</span>
<span id="L23956" rel="#L23956">23956</span>
<span id="L23957" rel="#L23957">23957</span>
<span id="L23958" rel="#L23958">23958</span>
<span id="L23959" rel="#L23959">23959</span>
<span id="L23960" rel="#L23960">23960</span>
<span id="L23961" rel="#L23961">23961</span>
<span id="L23962" rel="#L23962">23962</span>
<span id="L23963" rel="#L23963">23963</span>
<span id="L23964" rel="#L23964">23964</span>
<span id="L23965" rel="#L23965">23965</span>
<span id="L23966" rel="#L23966">23966</span>
<span id="L23967" rel="#L23967">23967</span>
<span id="L23968" rel="#L23968">23968</span>
<span id="L23969" rel="#L23969">23969</span>
<span id="L23970" rel="#L23970">23970</span>
<span id="L23971" rel="#L23971">23971</span>
<span id="L23972" rel="#L23972">23972</span>
<span id="L23973" rel="#L23973">23973</span>
<span id="L23974" rel="#L23974">23974</span>
<span id="L23975" rel="#L23975">23975</span>
<span id="L23976" rel="#L23976">23976</span>
<span id="L23977" rel="#L23977">23977</span>
<span id="L23978" rel="#L23978">23978</span>
<span id="L23979" rel="#L23979">23979</span>
<span id="L23980" rel="#L23980">23980</span>
<span id="L23981" rel="#L23981">23981</span>
<span id="L23982" rel="#L23982">23982</span>
<span id="L23983" rel="#L23983">23983</span>
<span id="L23984" rel="#L23984">23984</span>
<span id="L23985" rel="#L23985">23985</span>
<span id="L23986" rel="#L23986">23986</span>
<span id="L23987" rel="#L23987">23987</span>
<span id="L23988" rel="#L23988">23988</span>
<span id="L23989" rel="#L23989">23989</span>
<span id="L23990" rel="#L23990">23990</span>
<span id="L23991" rel="#L23991">23991</span>
<span id="L23992" rel="#L23992">23992</span>
<span id="L23993" rel="#L23993">23993</span>
<span id="L23994" rel="#L23994">23994</span>
<span id="L23995" rel="#L23995">23995</span>
<span id="L23996" rel="#L23996">23996</span>
<span id="L23997" rel="#L23997">23997</span>
<span id="L23998" rel="#L23998">23998</span>
<span id="L23999" rel="#L23999">23999</span>
<span id="L24000" rel="#L24000">24000</span>
<span id="L24001" rel="#L24001">24001</span>
<span id="L24002" rel="#L24002">24002</span>
<span id="L24003" rel="#L24003">24003</span>
<span id="L24004" rel="#L24004">24004</span>
<span id="L24005" rel="#L24005">24005</span>
<span id="L24006" rel="#L24006">24006</span>
<span id="L24007" rel="#L24007">24007</span>
<span id="L24008" rel="#L24008">24008</span>
<span id="L24009" rel="#L24009">24009</span>
<span id="L24010" rel="#L24010">24010</span>
<span id="L24011" rel="#L24011">24011</span>
<span id="L24012" rel="#L24012">24012</span>
<span id="L24013" rel="#L24013">24013</span>
<span id="L24014" rel="#L24014">24014</span>
<span id="L24015" rel="#L24015">24015</span>
<span id="L24016" rel="#L24016">24016</span>
<span id="L24017" rel="#L24017">24017</span>
<span id="L24018" rel="#L24018">24018</span>
<span id="L24019" rel="#L24019">24019</span>
<span id="L24020" rel="#L24020">24020</span>
<span id="L24021" rel="#L24021">24021</span>
<span id="L24022" rel="#L24022">24022</span>
<span id="L24023" rel="#L24023">24023</span>
<span id="L24024" rel="#L24024">24024</span>
<span id="L24025" rel="#L24025">24025</span>
<span id="L24026" rel="#L24026">24026</span>
<span id="L24027" rel="#L24027">24027</span>
<span id="L24028" rel="#L24028">24028</span>
<span id="L24029" rel="#L24029">24029</span>
<span id="L24030" rel="#L24030">24030</span>
<span id="L24031" rel="#L24031">24031</span>
<span id="L24032" rel="#L24032">24032</span>
<span id="L24033" rel="#L24033">24033</span>
<span id="L24034" rel="#L24034">24034</span>
<span id="L24035" rel="#L24035">24035</span>
<span id="L24036" rel="#L24036">24036</span>
<span id="L24037" rel="#L24037">24037</span>
<span id="L24038" rel="#L24038">24038</span>
<span id="L24039" rel="#L24039">24039</span>
<span id="L24040" rel="#L24040">24040</span>
<span id="L24041" rel="#L24041">24041</span>
<span id="L24042" rel="#L24042">24042</span>
<span id="L24043" rel="#L24043">24043</span>
<span id="L24044" rel="#L24044">24044</span>
<span id="L24045" rel="#L24045">24045</span>
<span id="L24046" rel="#L24046">24046</span>
<span id="L24047" rel="#L24047">24047</span>
<span id="L24048" rel="#L24048">24048</span>
<span id="L24049" rel="#L24049">24049</span>
<span id="L24050" rel="#L24050">24050</span>
<span id="L24051" rel="#L24051">24051</span>
<span id="L24052" rel="#L24052">24052</span>
<span id="L24053" rel="#L24053">24053</span>
<span id="L24054" rel="#L24054">24054</span>
<span id="L24055" rel="#L24055">24055</span>
<span id="L24056" rel="#L24056">24056</span>
<span id="L24057" rel="#L24057">24057</span>
<span id="L24058" rel="#L24058">24058</span>
<span id="L24059" rel="#L24059">24059</span>
<span id="L24060" rel="#L24060">24060</span>
<span id="L24061" rel="#L24061">24061</span>
<span id="L24062" rel="#L24062">24062</span>
<span id="L24063" rel="#L24063">24063</span>
<span id="L24064" rel="#L24064">24064</span>
<span id="L24065" rel="#L24065">24065</span>
<span id="L24066" rel="#L24066">24066</span>
<span id="L24067" rel="#L24067">24067</span>
<span id="L24068" rel="#L24068">24068</span>
<span id="L24069" rel="#L24069">24069</span>
<span id="L24070" rel="#L24070">24070</span>
<span id="L24071" rel="#L24071">24071</span>
<span id="L24072" rel="#L24072">24072</span>
<span id="L24073" rel="#L24073">24073</span>
<span id="L24074" rel="#L24074">24074</span>
<span id="L24075" rel="#L24075">24075</span>
<span id="L24076" rel="#L24076">24076</span>
<span id="L24077" rel="#L24077">24077</span>
<span id="L24078" rel="#L24078">24078</span>
<span id="L24079" rel="#L24079">24079</span>
<span id="L24080" rel="#L24080">24080</span>
<span id="L24081" rel="#L24081">24081</span>
<span id="L24082" rel="#L24082">24082</span>
<span id="L24083" rel="#L24083">24083</span>
<span id="L24084" rel="#L24084">24084</span>
<span id="L24085" rel="#L24085">24085</span>
<span id="L24086" rel="#L24086">24086</span>
<span id="L24087" rel="#L24087">24087</span>
<span id="L24088" rel="#L24088">24088</span>
<span id="L24089" rel="#L24089">24089</span>
<span id="L24090" rel="#L24090">24090</span>
<span id="L24091" rel="#L24091">24091</span>
<span id="L24092" rel="#L24092">24092</span>
<span id="L24093" rel="#L24093">24093</span>
<span id="L24094" rel="#L24094">24094</span>
<span id="L24095" rel="#L24095">24095</span>
<span id="L24096" rel="#L24096">24096</span>
<span id="L24097" rel="#L24097">24097</span>
<span id="L24098" rel="#L24098">24098</span>
<span id="L24099" rel="#L24099">24099</span>
<span id="L24100" rel="#L24100">24100</span>
<span id="L24101" rel="#L24101">24101</span>
<span id="L24102" rel="#L24102">24102</span>
<span id="L24103" rel="#L24103">24103</span>
<span id="L24104" rel="#L24104">24104</span>
<span id="L24105" rel="#L24105">24105</span>
<span id="L24106" rel="#L24106">24106</span>
<span id="L24107" rel="#L24107">24107</span>
<span id="L24108" rel="#L24108">24108</span>
<span id="L24109" rel="#L24109">24109</span>
<span id="L24110" rel="#L24110">24110</span>
<span id="L24111" rel="#L24111">24111</span>
<span id="L24112" rel="#L24112">24112</span>
<span id="L24113" rel="#L24113">24113</span>
<span id="L24114" rel="#L24114">24114</span>
<span id="L24115" rel="#L24115">24115</span>
<span id="L24116" rel="#L24116">24116</span>
<span id="L24117" rel="#L24117">24117</span>
<span id="L24118" rel="#L24118">24118</span>
<span id="L24119" rel="#L24119">24119</span>
<span id="L24120" rel="#L24120">24120</span>
<span id="L24121" rel="#L24121">24121</span>
<span id="L24122" rel="#L24122">24122</span>
<span id="L24123" rel="#L24123">24123</span>
<span id="L24124" rel="#L24124">24124</span>
<span id="L24125" rel="#L24125">24125</span>
<span id="L24126" rel="#L24126">24126</span>
<span id="L24127" rel="#L24127">24127</span>
<span id="L24128" rel="#L24128">24128</span>
<span id="L24129" rel="#L24129">24129</span>
<span id="L24130" rel="#L24130">24130</span>
<span id="L24131" rel="#L24131">24131</span>
<span id="L24132" rel="#L24132">24132</span>
<span id="L24133" rel="#L24133">24133</span>
<span id="L24134" rel="#L24134">24134</span>
<span id="L24135" rel="#L24135">24135</span>
<span id="L24136" rel="#L24136">24136</span>
<span id="L24137" rel="#L24137">24137</span>
<span id="L24138" rel="#L24138">24138</span>
<span id="L24139" rel="#L24139">24139</span>
<span id="L24140" rel="#L24140">24140</span>
<span id="L24141" rel="#L24141">24141</span>
<span id="L24142" rel="#L24142">24142</span>
<span id="L24143" rel="#L24143">24143</span>
<span id="L24144" rel="#L24144">24144</span>
<span id="L24145" rel="#L24145">24145</span>
<span id="L24146" rel="#L24146">24146</span>
<span id="L24147" rel="#L24147">24147</span>
<span id="L24148" rel="#L24148">24148</span>
<span id="L24149" rel="#L24149">24149</span>
<span id="L24150" rel="#L24150">24150</span>
<span id="L24151" rel="#L24151">24151</span>
<span id="L24152" rel="#L24152">24152</span>
<span id="L24153" rel="#L24153">24153</span>
<span id="L24154" rel="#L24154">24154</span>
<span id="L24155" rel="#L24155">24155</span>
<span id="L24156" rel="#L24156">24156</span>
<span id="L24157" rel="#L24157">24157</span>
<span id="L24158" rel="#L24158">24158</span>
<span id="L24159" rel="#L24159">24159</span>
<span id="L24160" rel="#L24160">24160</span>
<span id="L24161" rel="#L24161">24161</span>
<span id="L24162" rel="#L24162">24162</span>
<span id="L24163" rel="#L24163">24163</span>
<span id="L24164" rel="#L24164">24164</span>
<span id="L24165" rel="#L24165">24165</span>
<span id="L24166" rel="#L24166">24166</span>
<span id="L24167" rel="#L24167">24167</span>
<span id="L24168" rel="#L24168">24168</span>
<span id="L24169" rel="#L24169">24169</span>
<span id="L24170" rel="#L24170">24170</span>
<span id="L24171" rel="#L24171">24171</span>
<span id="L24172" rel="#L24172">24172</span>
<span id="L24173" rel="#L24173">24173</span>
<span id="L24174" rel="#L24174">24174</span>
<span id="L24175" rel="#L24175">24175</span>
<span id="L24176" rel="#L24176">24176</span>
<span id="L24177" rel="#L24177">24177</span>
<span id="L24178" rel="#L24178">24178</span>
<span id="L24179" rel="#L24179">24179</span>
<span id="L24180" rel="#L24180">24180</span>
<span id="L24181" rel="#L24181">24181</span>
<span id="L24182" rel="#L24182">24182</span>
<span id="L24183" rel="#L24183">24183</span>
<span id="L24184" rel="#L24184">24184</span>
<span id="L24185" rel="#L24185">24185</span>
<span id="L24186" rel="#L24186">24186</span>
<span id="L24187" rel="#L24187">24187</span>
<span id="L24188" rel="#L24188">24188</span>
<span id="L24189" rel="#L24189">24189</span>
<span id="L24190" rel="#L24190">24190</span>
<span id="L24191" rel="#L24191">24191</span>
<span id="L24192" rel="#L24192">24192</span>
<span id="L24193" rel="#L24193">24193</span>
<span id="L24194" rel="#L24194">24194</span>
<span id="L24195" rel="#L24195">24195</span>
<span id="L24196" rel="#L24196">24196</span>
<span id="L24197" rel="#L24197">24197</span>
<span id="L24198" rel="#L24198">24198</span>
<span id="L24199" rel="#L24199">24199</span>
<span id="L24200" rel="#L24200">24200</span>
<span id="L24201" rel="#L24201">24201</span>
<span id="L24202" rel="#L24202">24202</span>
<span id="L24203" rel="#L24203">24203</span>
<span id="L24204" rel="#L24204">24204</span>
<span id="L24205" rel="#L24205">24205</span>
<span id="L24206" rel="#L24206">24206</span>
<span id="L24207" rel="#L24207">24207</span>
<span id="L24208" rel="#L24208">24208</span>
<span id="L24209" rel="#L24209">24209</span>
<span id="L24210" rel="#L24210">24210</span>
<span id="L24211" rel="#L24211">24211</span>
<span id="L24212" rel="#L24212">24212</span>
<span id="L24213" rel="#L24213">24213</span>
<span id="L24214" rel="#L24214">24214</span>
<span id="L24215" rel="#L24215">24215</span>
<span id="L24216" rel="#L24216">24216</span>
<span id="L24217" rel="#L24217">24217</span>
<span id="L24218" rel="#L24218">24218</span>
<span id="L24219" rel="#L24219">24219</span>
<span id="L24220" rel="#L24220">24220</span>
<span id="L24221" rel="#L24221">24221</span>
<span id="L24222" rel="#L24222">24222</span>
<span id="L24223" rel="#L24223">24223</span>
<span id="L24224" rel="#L24224">24224</span>
<span id="L24225" rel="#L24225">24225</span>
<span id="L24226" rel="#L24226">24226</span>
<span id="L24227" rel="#L24227">24227</span>
<span id="L24228" rel="#L24228">24228</span>
<span id="L24229" rel="#L24229">24229</span>
<span id="L24230" rel="#L24230">24230</span>
<span id="L24231" rel="#L24231">24231</span>
<span id="L24232" rel="#L24232">24232</span>
<span id="L24233" rel="#L24233">24233</span>
<span id="L24234" rel="#L24234">24234</span>
<span id="L24235" rel="#L24235">24235</span>
<span id="L24236" rel="#L24236">24236</span>
<span id="L24237" rel="#L24237">24237</span>
<span id="L24238" rel="#L24238">24238</span>
<span id="L24239" rel="#L24239">24239</span>
<span id="L24240" rel="#L24240">24240</span>
<span id="L24241" rel="#L24241">24241</span>
<span id="L24242" rel="#L24242">24242</span>
<span id="L24243" rel="#L24243">24243</span>
<span id="L24244" rel="#L24244">24244</span>
<span id="L24245" rel="#L24245">24245</span>
<span id="L24246" rel="#L24246">24246</span>
<span id="L24247" rel="#L24247">24247</span>
<span id="L24248" rel="#L24248">24248</span>
<span id="L24249" rel="#L24249">24249</span>
<span id="L24250" rel="#L24250">24250</span>
<span id="L24251" rel="#L24251">24251</span>
<span id="L24252" rel="#L24252">24252</span>
<span id="L24253" rel="#L24253">24253</span>
<span id="L24254" rel="#L24254">24254</span>
<span id="L24255" rel="#L24255">24255</span>
<span id="L24256" rel="#L24256">24256</span>
<span id="L24257" rel="#L24257">24257</span>
<span id="L24258" rel="#L24258">24258</span>
<span id="L24259" rel="#L24259">24259</span>
<span id="L24260" rel="#L24260">24260</span>
<span id="L24261" rel="#L24261">24261</span>
<span id="L24262" rel="#L24262">24262</span>
<span id="L24263" rel="#L24263">24263</span>
<span id="L24264" rel="#L24264">24264</span>
<span id="L24265" rel="#L24265">24265</span>
<span id="L24266" rel="#L24266">24266</span>
<span id="L24267" rel="#L24267">24267</span>
<span id="L24268" rel="#L24268">24268</span>
<span id="L24269" rel="#L24269">24269</span>
<span id="L24270" rel="#L24270">24270</span>
<span id="L24271" rel="#L24271">24271</span>
<span id="L24272" rel="#L24272">24272</span>
<span id="L24273" rel="#L24273">24273</span>
<span id="L24274" rel="#L24274">24274</span>
<span id="L24275" rel="#L24275">24275</span>
<span id="L24276" rel="#L24276">24276</span>
<span id="L24277" rel="#L24277">24277</span>
<span id="L24278" rel="#L24278">24278</span>
<span id="L24279" rel="#L24279">24279</span>
<span id="L24280" rel="#L24280">24280</span>
<span id="L24281" rel="#L24281">24281</span>
<span id="L24282" rel="#L24282">24282</span>
<span id="L24283" rel="#L24283">24283</span>
<span id="L24284" rel="#L24284">24284</span>
<span id="L24285" rel="#L24285">24285</span>
<span id="L24286" rel="#L24286">24286</span>
<span id="L24287" rel="#L24287">24287</span>
<span id="L24288" rel="#L24288">24288</span>
<span id="L24289" rel="#L24289">24289</span>
<span id="L24290" rel="#L24290">24290</span>
<span id="L24291" rel="#L24291">24291</span>
<span id="L24292" rel="#L24292">24292</span>
<span id="L24293" rel="#L24293">24293</span>
<span id="L24294" rel="#L24294">24294</span>
<span id="L24295" rel="#L24295">24295</span>
<span id="L24296" rel="#L24296">24296</span>
<span id="L24297" rel="#L24297">24297</span>
<span id="L24298" rel="#L24298">24298</span>
<span id="L24299" rel="#L24299">24299</span>
<span id="L24300" rel="#L24300">24300</span>
<span id="L24301" rel="#L24301">24301</span>
<span id="L24302" rel="#L24302">24302</span>
<span id="L24303" rel="#L24303">24303</span>
<span id="L24304" rel="#L24304">24304</span>
<span id="L24305" rel="#L24305">24305</span>
<span id="L24306" rel="#L24306">24306</span>
<span id="L24307" rel="#L24307">24307</span>
<span id="L24308" rel="#L24308">24308</span>
<span id="L24309" rel="#L24309">24309</span>
<span id="L24310" rel="#L24310">24310</span>
<span id="L24311" rel="#L24311">24311</span>
<span id="L24312" rel="#L24312">24312</span>
<span id="L24313" rel="#L24313">24313</span>
<span id="L24314" rel="#L24314">24314</span>
<span id="L24315" rel="#L24315">24315</span>
<span id="L24316" rel="#L24316">24316</span>
<span id="L24317" rel="#L24317">24317</span>
<span id="L24318" rel="#L24318">24318</span>
<span id="L24319" rel="#L24319">24319</span>
<span id="L24320" rel="#L24320">24320</span>
<span id="L24321" rel="#L24321">24321</span>
<span id="L24322" rel="#L24322">24322</span>
<span id="L24323" rel="#L24323">24323</span>
<span id="L24324" rel="#L24324">24324</span>
<span id="L24325" rel="#L24325">24325</span>
<span id="L24326" rel="#L24326">24326</span>
<span id="L24327" rel="#L24327">24327</span>
<span id="L24328" rel="#L24328">24328</span>
<span id="L24329" rel="#L24329">24329</span>
<span id="L24330" rel="#L24330">24330</span>
<span id="L24331" rel="#L24331">24331</span>
<span id="L24332" rel="#L24332">24332</span>
<span id="L24333" rel="#L24333">24333</span>
<span id="L24334" rel="#L24334">24334</span>
<span id="L24335" rel="#L24335">24335</span>
<span id="L24336" rel="#L24336">24336</span>
<span id="L24337" rel="#L24337">24337</span>
<span id="L24338" rel="#L24338">24338</span>
<span id="L24339" rel="#L24339">24339</span>
<span id="L24340" rel="#L24340">24340</span>
<span id="L24341" rel="#L24341">24341</span>
<span id="L24342" rel="#L24342">24342</span>
<span id="L24343" rel="#L24343">24343</span>
<span id="L24344" rel="#L24344">24344</span>
<span id="L24345" rel="#L24345">24345</span>
<span id="L24346" rel="#L24346">24346</span>
<span id="L24347" rel="#L24347">24347</span>
<span id="L24348" rel="#L24348">24348</span>
<span id="L24349" rel="#L24349">24349</span>
<span id="L24350" rel="#L24350">24350</span>
<span id="L24351" rel="#L24351">24351</span>
<span id="L24352" rel="#L24352">24352</span>
<span id="L24353" rel="#L24353">24353</span>
<span id="L24354" rel="#L24354">24354</span>
<span id="L24355" rel="#L24355">24355</span>
<span id="L24356" rel="#L24356">24356</span>
<span id="L24357" rel="#L24357">24357</span>
<span id="L24358" rel="#L24358">24358</span>
<span id="L24359" rel="#L24359">24359</span>
<span id="L24360" rel="#L24360">24360</span>
<span id="L24361" rel="#L24361">24361</span>
<span id="L24362" rel="#L24362">24362</span>
<span id="L24363" rel="#L24363">24363</span>
<span id="L24364" rel="#L24364">24364</span>
<span id="L24365" rel="#L24365">24365</span>
<span id="L24366" rel="#L24366">24366</span>
<span id="L24367" rel="#L24367">24367</span>
<span id="L24368" rel="#L24368">24368</span>
<span id="L24369" rel="#L24369">24369</span>
<span id="L24370" rel="#L24370">24370</span>
<span id="L24371" rel="#L24371">24371</span>
<span id="L24372" rel="#L24372">24372</span>
<span id="L24373" rel="#L24373">24373</span>
<span id="L24374" rel="#L24374">24374</span>
<span id="L24375" rel="#L24375">24375</span>
<span id="L24376" rel="#L24376">24376</span>
<span id="L24377" rel="#L24377">24377</span>
<span id="L24378" rel="#L24378">24378</span>
<span id="L24379" rel="#L24379">24379</span>
<span id="L24380" rel="#L24380">24380</span>
<span id="L24381" rel="#L24381">24381</span>
<span id="L24382" rel="#L24382">24382</span>
<span id="L24383" rel="#L24383">24383</span>
<span id="L24384" rel="#L24384">24384</span>
<span id="L24385" rel="#L24385">24385</span>
<span id="L24386" rel="#L24386">24386</span>
<span id="L24387" rel="#L24387">24387</span>
<span id="L24388" rel="#L24388">24388</span>
<span id="L24389" rel="#L24389">24389</span>
<span id="L24390" rel="#L24390">24390</span>
<span id="L24391" rel="#L24391">24391</span>
<span id="L24392" rel="#L24392">24392</span>
<span id="L24393" rel="#L24393">24393</span>
<span id="L24394" rel="#L24394">24394</span>
<span id="L24395" rel="#L24395">24395</span>
<span id="L24396" rel="#L24396">24396</span>
<span id="L24397" rel="#L24397">24397</span>
<span id="L24398" rel="#L24398">24398</span>
<span id="L24399" rel="#L24399">24399</span>
<span id="L24400" rel="#L24400">24400</span>
<span id="L24401" rel="#L24401">24401</span>
<span id="L24402" rel="#L24402">24402</span>
<span id="L24403" rel="#L24403">24403</span>
<span id="L24404" rel="#L24404">24404</span>
<span id="L24405" rel="#L24405">24405</span>
<span id="L24406" rel="#L24406">24406</span>
<span id="L24407" rel="#L24407">24407</span>
<span id="L24408" rel="#L24408">24408</span>
<span id="L24409" rel="#L24409">24409</span>
<span id="L24410" rel="#L24410">24410</span>
<span id="L24411" rel="#L24411">24411</span>
<span id="L24412" rel="#L24412">24412</span>
<span id="L24413" rel="#L24413">24413</span>
<span id="L24414" rel="#L24414">24414</span>
<span id="L24415" rel="#L24415">24415</span>
<span id="L24416" rel="#L24416">24416</span>
<span id="L24417" rel="#L24417">24417</span>
<span id="L24418" rel="#L24418">24418</span>
<span id="L24419" rel="#L24419">24419</span>
<span id="L24420" rel="#L24420">24420</span>
<span id="L24421" rel="#L24421">24421</span>
<span id="L24422" rel="#L24422">24422</span>
<span id="L24423" rel="#L24423">24423</span>
<span id="L24424" rel="#L24424">24424</span>
<span id="L24425" rel="#L24425">24425</span>
<span id="L24426" rel="#L24426">24426</span>
<span id="L24427" rel="#L24427">24427</span>
<span id="L24428" rel="#L24428">24428</span>
<span id="L24429" rel="#L24429">24429</span>
<span id="L24430" rel="#L24430">24430</span>
<span id="L24431" rel="#L24431">24431</span>
<span id="L24432" rel="#L24432">24432</span>
<span id="L24433" rel="#L24433">24433</span>
<span id="L24434" rel="#L24434">24434</span>
<span id="L24435" rel="#L24435">24435</span>
<span id="L24436" rel="#L24436">24436</span>
<span id="L24437" rel="#L24437">24437</span>
<span id="L24438" rel="#L24438">24438</span>
<span id="L24439" rel="#L24439">24439</span>
<span id="L24440" rel="#L24440">24440</span>
<span id="L24441" rel="#L24441">24441</span>
<span id="L24442" rel="#L24442">24442</span>
<span id="L24443" rel="#L24443">24443</span>
<span id="L24444" rel="#L24444">24444</span>
<span id="L24445" rel="#L24445">24445</span>
<span id="L24446" rel="#L24446">24446</span>
<span id="L24447" rel="#L24447">24447</span>
<span id="L24448" rel="#L24448">24448</span>
<span id="L24449" rel="#L24449">24449</span>
<span id="L24450" rel="#L24450">24450</span>
<span id="L24451" rel="#L24451">24451</span>
<span id="L24452" rel="#L24452">24452</span>
<span id="L24453" rel="#L24453">24453</span>
<span id="L24454" rel="#L24454">24454</span>
<span id="L24455" rel="#L24455">24455</span>
<span id="L24456" rel="#L24456">24456</span>
<span id="L24457" rel="#L24457">24457</span>
<span id="L24458" rel="#L24458">24458</span>
<span id="L24459" rel="#L24459">24459</span>
<span id="L24460" rel="#L24460">24460</span>
<span id="L24461" rel="#L24461">24461</span>
<span id="L24462" rel="#L24462">24462</span>
<span id="L24463" rel="#L24463">24463</span>
<span id="L24464" rel="#L24464">24464</span>
<span id="L24465" rel="#L24465">24465</span>
<span id="L24466" rel="#L24466">24466</span>
<span id="L24467" rel="#L24467">24467</span>
<span id="L24468" rel="#L24468">24468</span>
<span id="L24469" rel="#L24469">24469</span>
<span id="L24470" rel="#L24470">24470</span>
<span id="L24471" rel="#L24471">24471</span>
<span id="L24472" rel="#L24472">24472</span>
<span id="L24473" rel="#L24473">24473</span>
<span id="L24474" rel="#L24474">24474</span>
<span id="L24475" rel="#L24475">24475</span>
<span id="L24476" rel="#L24476">24476</span>
<span id="L24477" rel="#L24477">24477</span>
<span id="L24478" rel="#L24478">24478</span>
<span id="L24479" rel="#L24479">24479</span>
<span id="L24480" rel="#L24480">24480</span>
<span id="L24481" rel="#L24481">24481</span>
<span id="L24482" rel="#L24482">24482</span>
<span id="L24483" rel="#L24483">24483</span>
<span id="L24484" rel="#L24484">24484</span>
<span id="L24485" rel="#L24485">24485</span>
<span id="L24486" rel="#L24486">24486</span>
<span id="L24487" rel="#L24487">24487</span>
<span id="L24488" rel="#L24488">24488</span>
<span id="L24489" rel="#L24489">24489</span>
<span id="L24490" rel="#L24490">24490</span>
<span id="L24491" rel="#L24491">24491</span>
<span id="L24492" rel="#L24492">24492</span>
<span id="L24493" rel="#L24493">24493</span>
<span id="L24494" rel="#L24494">24494</span>
<span id="L24495" rel="#L24495">24495</span>
<span id="L24496" rel="#L24496">24496</span>
<span id="L24497" rel="#L24497">24497</span>
<span id="L24498" rel="#L24498">24498</span>
<span id="L24499" rel="#L24499">24499</span>
<span id="L24500" rel="#L24500">24500</span>
<span id="L24501" rel="#L24501">24501</span>
<span id="L24502" rel="#L24502">24502</span>
<span id="L24503" rel="#L24503">24503</span>
<span id="L24504" rel="#L24504">24504</span>
<span id="L24505" rel="#L24505">24505</span>
<span id="L24506" rel="#L24506">24506</span>
<span id="L24507" rel="#L24507">24507</span>
<span id="L24508" rel="#L24508">24508</span>
<span id="L24509" rel="#L24509">24509</span>
<span id="L24510" rel="#L24510">24510</span>
<span id="L24511" rel="#L24511">24511</span>
<span id="L24512" rel="#L24512">24512</span>
<span id="L24513" rel="#L24513">24513</span>
<span id="L24514" rel="#L24514">24514</span>
<span id="L24515" rel="#L24515">24515</span>
<span id="L24516" rel="#L24516">24516</span>
<span id="L24517" rel="#L24517">24517</span>
<span id="L24518" rel="#L24518">24518</span>
<span id="L24519" rel="#L24519">24519</span>
<span id="L24520" rel="#L24520">24520</span>
<span id="L24521" rel="#L24521">24521</span>
<span id="L24522" rel="#L24522">24522</span>
<span id="L24523" rel="#L24523">24523</span>
<span id="L24524" rel="#L24524">24524</span>
<span id="L24525" rel="#L24525">24525</span>
<span id="L24526" rel="#L24526">24526</span>
<span id="L24527" rel="#L24527">24527</span>
<span id="L24528" rel="#L24528">24528</span>
<span id="L24529" rel="#L24529">24529</span>
<span id="L24530" rel="#L24530">24530</span>
<span id="L24531" rel="#L24531">24531</span>
<span id="L24532" rel="#L24532">24532</span>
<span id="L24533" rel="#L24533">24533</span>
<span id="L24534" rel="#L24534">24534</span>
<span id="L24535" rel="#L24535">24535</span>
<span id="L24536" rel="#L24536">24536</span>
<span id="L24537" rel="#L24537">24537</span>
<span id="L24538" rel="#L24538">24538</span>
<span id="L24539" rel="#L24539">24539</span>
<span id="L24540" rel="#L24540">24540</span>
<span id="L24541" rel="#L24541">24541</span>
<span id="L24542" rel="#L24542">24542</span>
<span id="L24543" rel="#L24543">24543</span>
<span id="L24544" rel="#L24544">24544</span>
<span id="L24545" rel="#L24545">24545</span>
<span id="L24546" rel="#L24546">24546</span>
<span id="L24547" rel="#L24547">24547</span>
<span id="L24548" rel="#L24548">24548</span>
<span id="L24549" rel="#L24549">24549</span>
<span id="L24550" rel="#L24550">24550</span>
<span id="L24551" rel="#L24551">24551</span>
<span id="L24552" rel="#L24552">24552</span>
<span id="L24553" rel="#L24553">24553</span>
<span id="L24554" rel="#L24554">24554</span>
<span id="L24555" rel="#L24555">24555</span>
<span id="L24556" rel="#L24556">24556</span>
<span id="L24557" rel="#L24557">24557</span>
<span id="L24558" rel="#L24558">24558</span>
<span id="L24559" rel="#L24559">24559</span>
<span id="L24560" rel="#L24560">24560</span>
<span id="L24561" rel="#L24561">24561</span>
<span id="L24562" rel="#L24562">24562</span>
<span id="L24563" rel="#L24563">24563</span>
<span id="L24564" rel="#L24564">24564</span>
<span id="L24565" rel="#L24565">24565</span>
<span id="L24566" rel="#L24566">24566</span>
<span id="L24567" rel="#L24567">24567</span>
<span id="L24568" rel="#L24568">24568</span>
<span id="L24569" rel="#L24569">24569</span>
<span id="L24570" rel="#L24570">24570</span>
<span id="L24571" rel="#L24571">24571</span>
<span id="L24572" rel="#L24572">24572</span>
<span id="L24573" rel="#L24573">24573</span>
<span id="L24574" rel="#L24574">24574</span>
<span id="L24575" rel="#L24575">24575</span>
<span id="L24576" rel="#L24576">24576</span>
<span id="L24577" rel="#L24577">24577</span>
<span id="L24578" rel="#L24578">24578</span>
<span id="L24579" rel="#L24579">24579</span>
<span id="L24580" rel="#L24580">24580</span>
<span id="L24581" rel="#L24581">24581</span>
<span id="L24582" rel="#L24582">24582</span>
<span id="L24583" rel="#L24583">24583</span>
<span id="L24584" rel="#L24584">24584</span>
<span id="L24585" rel="#L24585">24585</span>
<span id="L24586" rel="#L24586">24586</span>
<span id="L24587" rel="#L24587">24587</span>
<span id="L24588" rel="#L24588">24588</span>
<span id="L24589" rel="#L24589">24589</span>
<span id="L24590" rel="#L24590">24590</span>
<span id="L24591" rel="#L24591">24591</span>
<span id="L24592" rel="#L24592">24592</span>
<span id="L24593" rel="#L24593">24593</span>
<span id="L24594" rel="#L24594">24594</span>
<span id="L24595" rel="#L24595">24595</span>
<span id="L24596" rel="#L24596">24596</span>
<span id="L24597" rel="#L24597">24597</span>
<span id="L24598" rel="#L24598">24598</span>
<span id="L24599" rel="#L24599">24599</span>
<span id="L24600" rel="#L24600">24600</span>
<span id="L24601" rel="#L24601">24601</span>
<span id="L24602" rel="#L24602">24602</span>
<span id="L24603" rel="#L24603">24603</span>
<span id="L24604" rel="#L24604">24604</span>
<span id="L24605" rel="#L24605">24605</span>
<span id="L24606" rel="#L24606">24606</span>
<span id="L24607" rel="#L24607">24607</span>
<span id="L24608" rel="#L24608">24608</span>
<span id="L24609" rel="#L24609">24609</span>
<span id="L24610" rel="#L24610">24610</span>
<span id="L24611" rel="#L24611">24611</span>
<span id="L24612" rel="#L24612">24612</span>
<span id="L24613" rel="#L24613">24613</span>
<span id="L24614" rel="#L24614">24614</span>
<span id="L24615" rel="#L24615">24615</span>
<span id="L24616" rel="#L24616">24616</span>
<span id="L24617" rel="#L24617">24617</span>
<span id="L24618" rel="#L24618">24618</span>
<span id="L24619" rel="#L24619">24619</span>
<span id="L24620" rel="#L24620">24620</span>
<span id="L24621" rel="#L24621">24621</span>
<span id="L24622" rel="#L24622">24622</span>
<span id="L24623" rel="#L24623">24623</span>
<span id="L24624" rel="#L24624">24624</span>
<span id="L24625" rel="#L24625">24625</span>
<span id="L24626" rel="#L24626">24626</span>
<span id="L24627" rel="#L24627">24627</span>
<span id="L24628" rel="#L24628">24628</span>
<span id="L24629" rel="#L24629">24629</span>
<span id="L24630" rel="#L24630">24630</span>
<span id="L24631" rel="#L24631">24631</span>
<span id="L24632" rel="#L24632">24632</span>
<span id="L24633" rel="#L24633">24633</span>
<span id="L24634" rel="#L24634">24634</span>
<span id="L24635" rel="#L24635">24635</span>
<span id="L24636" rel="#L24636">24636</span>
<span id="L24637" rel="#L24637">24637</span>
<span id="L24638" rel="#L24638">24638</span>
<span id="L24639" rel="#L24639">24639</span>
<span id="L24640" rel="#L24640">24640</span>
<span id="L24641" rel="#L24641">24641</span>
<span id="L24642" rel="#L24642">24642</span>
<span id="L24643" rel="#L24643">24643</span>
<span id="L24644" rel="#L24644">24644</span>
<span id="L24645" rel="#L24645">24645</span>
<span id="L24646" rel="#L24646">24646</span>
<span id="L24647" rel="#L24647">24647</span>
<span id="L24648" rel="#L24648">24648</span>
<span id="L24649" rel="#L24649">24649</span>
<span id="L24650" rel="#L24650">24650</span>
<span id="L24651" rel="#L24651">24651</span>
<span id="L24652" rel="#L24652">24652</span>
<span id="L24653" rel="#L24653">24653</span>
<span id="L24654" rel="#L24654">24654</span>
<span id="L24655" rel="#L24655">24655</span>
<span id="L24656" rel="#L24656">24656</span>
<span id="L24657" rel="#L24657">24657</span>
<span id="L24658" rel="#L24658">24658</span>
<span id="L24659" rel="#L24659">24659</span>
<span id="L24660" rel="#L24660">24660</span>
<span id="L24661" rel="#L24661">24661</span>
<span id="L24662" rel="#L24662">24662</span>
<span id="L24663" rel="#L24663">24663</span>
<span id="L24664" rel="#L24664">24664</span>
<span id="L24665" rel="#L24665">24665</span>
<span id="L24666" rel="#L24666">24666</span>
<span id="L24667" rel="#L24667">24667</span>
<span id="L24668" rel="#L24668">24668</span>
<span id="L24669" rel="#L24669">24669</span>
<span id="L24670" rel="#L24670">24670</span>
<span id="L24671" rel="#L24671">24671</span>
<span id="L24672" rel="#L24672">24672</span>
<span id="L24673" rel="#L24673">24673</span>
<span id="L24674" rel="#L24674">24674</span>
<span id="L24675" rel="#L24675">24675</span>
<span id="L24676" rel="#L24676">24676</span>
<span id="L24677" rel="#L24677">24677</span>
<span id="L24678" rel="#L24678">24678</span>
<span id="L24679" rel="#L24679">24679</span>
<span id="L24680" rel="#L24680">24680</span>
<span id="L24681" rel="#L24681">24681</span>
<span id="L24682" rel="#L24682">24682</span>
<span id="L24683" rel="#L24683">24683</span>
<span id="L24684" rel="#L24684">24684</span>
<span id="L24685" rel="#L24685">24685</span>
<span id="L24686" rel="#L24686">24686</span>
<span id="L24687" rel="#L24687">24687</span>
<span id="L24688" rel="#L24688">24688</span>
<span id="L24689" rel="#L24689">24689</span>
<span id="L24690" rel="#L24690">24690</span>
<span id="L24691" rel="#L24691">24691</span>
<span id="L24692" rel="#L24692">24692</span>
<span id="L24693" rel="#L24693">24693</span>
<span id="L24694" rel="#L24694">24694</span>
<span id="L24695" rel="#L24695">24695</span>
<span id="L24696" rel="#L24696">24696</span>
<span id="L24697" rel="#L24697">24697</span>
<span id="L24698" rel="#L24698">24698</span>
<span id="L24699" rel="#L24699">24699</span>
<span id="L24700" rel="#L24700">24700</span>
<span id="L24701" rel="#L24701">24701</span>
<span id="L24702" rel="#L24702">24702</span>
<span id="L24703" rel="#L24703">24703</span>
<span id="L24704" rel="#L24704">24704</span>
<span id="L24705" rel="#L24705">24705</span>
<span id="L24706" rel="#L24706">24706</span>
<span id="L24707" rel="#L24707">24707</span>
<span id="L24708" rel="#L24708">24708</span>
<span id="L24709" rel="#L24709">24709</span>
<span id="L24710" rel="#L24710">24710</span>
<span id="L24711" rel="#L24711">24711</span>
<span id="L24712" rel="#L24712">24712</span>
<span id="L24713" rel="#L24713">24713</span>
<span id="L24714" rel="#L24714">24714</span>
<span id="L24715" rel="#L24715">24715</span>
<span id="L24716" rel="#L24716">24716</span>
<span id="L24717" rel="#L24717">24717</span>
<span id="L24718" rel="#L24718">24718</span>
<span id="L24719" rel="#L24719">24719</span>
<span id="L24720" rel="#L24720">24720</span>
<span id="L24721" rel="#L24721">24721</span>
<span id="L24722" rel="#L24722">24722</span>
<span id="L24723" rel="#L24723">24723</span>
<span id="L24724" rel="#L24724">24724</span>
<span id="L24725" rel="#L24725">24725</span>
<span id="L24726" rel="#L24726">24726</span>
<span id="L24727" rel="#L24727">24727</span>
<span id="L24728" rel="#L24728">24728</span>
<span id="L24729" rel="#L24729">24729</span>
<span id="L24730" rel="#L24730">24730</span>
<span id="L24731" rel="#L24731">24731</span>
<span id="L24732" rel="#L24732">24732</span>
<span id="L24733" rel="#L24733">24733</span>
<span id="L24734" rel="#L24734">24734</span>
<span id="L24735" rel="#L24735">24735</span>
<span id="L24736" rel="#L24736">24736</span>
<span id="L24737" rel="#L24737">24737</span>
<span id="L24738" rel="#L24738">24738</span>
<span id="L24739" rel="#L24739">24739</span>
<span id="L24740" rel="#L24740">24740</span>
<span id="L24741" rel="#L24741">24741</span>
<span id="L24742" rel="#L24742">24742</span>
<span id="L24743" rel="#L24743">24743</span>
<span id="L24744" rel="#L24744">24744</span>
<span id="L24745" rel="#L24745">24745</span>
<span id="L24746" rel="#L24746">24746</span>
<span id="L24747" rel="#L24747">24747</span>
<span id="L24748" rel="#L24748">24748</span>
<span id="L24749" rel="#L24749">24749</span>
<span id="L24750" rel="#L24750">24750</span>
<span id="L24751" rel="#L24751">24751</span>
<span id="L24752" rel="#L24752">24752</span>
<span id="L24753" rel="#L24753">24753</span>
<span id="L24754" rel="#L24754">24754</span>
<span id="L24755" rel="#L24755">24755</span>
<span id="L24756" rel="#L24756">24756</span>
<span id="L24757" rel="#L24757">24757</span>
<span id="L24758" rel="#L24758">24758</span>
<span id="L24759" rel="#L24759">24759</span>
<span id="L24760" rel="#L24760">24760</span>
<span id="L24761" rel="#L24761">24761</span>
<span id="L24762" rel="#L24762">24762</span>
<span id="L24763" rel="#L24763">24763</span>
<span id="L24764" rel="#L24764">24764</span>
<span id="L24765" rel="#L24765">24765</span>
<span id="L24766" rel="#L24766">24766</span>
<span id="L24767" rel="#L24767">24767</span>
<span id="L24768" rel="#L24768">24768</span>
<span id="L24769" rel="#L24769">24769</span>
<span id="L24770" rel="#L24770">24770</span>
<span id="L24771" rel="#L24771">24771</span>
<span id="L24772" rel="#L24772">24772</span>
<span id="L24773" rel="#L24773">24773</span>
<span id="L24774" rel="#L24774">24774</span>
<span id="L24775" rel="#L24775">24775</span>
<span id="L24776" rel="#L24776">24776</span>
<span id="L24777" rel="#L24777">24777</span>
<span id="L24778" rel="#L24778">24778</span>
<span id="L24779" rel="#L24779">24779</span>
<span id="L24780" rel="#L24780">24780</span>
<span id="L24781" rel="#L24781">24781</span>
<span id="L24782" rel="#L24782">24782</span>
<span id="L24783" rel="#L24783">24783</span>
<span id="L24784" rel="#L24784">24784</span>
<span id="L24785" rel="#L24785">24785</span>
<span id="L24786" rel="#L24786">24786</span>
<span id="L24787" rel="#L24787">24787</span>
<span id="L24788" rel="#L24788">24788</span>
<span id="L24789" rel="#L24789">24789</span>
<span id="L24790" rel="#L24790">24790</span>
<span id="L24791" rel="#L24791">24791</span>
<span id="L24792" rel="#L24792">24792</span>
<span id="L24793" rel="#L24793">24793</span>
<span id="L24794" rel="#L24794">24794</span>
<span id="L24795" rel="#L24795">24795</span>
<span id="L24796" rel="#L24796">24796</span>
<span id="L24797" rel="#L24797">24797</span>
<span id="L24798" rel="#L24798">24798</span>
<span id="L24799" rel="#L24799">24799</span>
<span id="L24800" rel="#L24800">24800</span>
<span id="L24801" rel="#L24801">24801</span>
<span id="L24802" rel="#L24802">24802</span>
<span id="L24803" rel="#L24803">24803</span>
<span id="L24804" rel="#L24804">24804</span>
<span id="L24805" rel="#L24805">24805</span>
<span id="L24806" rel="#L24806">24806</span>
<span id="L24807" rel="#L24807">24807</span>
<span id="L24808" rel="#L24808">24808</span>
<span id="L24809" rel="#L24809">24809</span>
<span id="L24810" rel="#L24810">24810</span>
<span id="L24811" rel="#L24811">24811</span>
<span id="L24812" rel="#L24812">24812</span>
<span id="L24813" rel="#L24813">24813</span>
<span id="L24814" rel="#L24814">24814</span>
<span id="L24815" rel="#L24815">24815</span>
<span id="L24816" rel="#L24816">24816</span>
<span id="L24817" rel="#L24817">24817</span>
<span id="L24818" rel="#L24818">24818</span>
<span id="L24819" rel="#L24819">24819</span>
<span id="L24820" rel="#L24820">24820</span>
<span id="L24821" rel="#L24821">24821</span>
<span id="L24822" rel="#L24822">24822</span>
<span id="L24823" rel="#L24823">24823</span>
<span id="L24824" rel="#L24824">24824</span>
<span id="L24825" rel="#L24825">24825</span>
<span id="L24826" rel="#L24826">24826</span>
<span id="L24827" rel="#L24827">24827</span>
<span id="L24828" rel="#L24828">24828</span>
<span id="L24829" rel="#L24829">24829</span>
<span id="L24830" rel="#L24830">24830</span>
<span id="L24831" rel="#L24831">24831</span>
<span id="L24832" rel="#L24832">24832</span>
<span id="L24833" rel="#L24833">24833</span>
<span id="L24834" rel="#L24834">24834</span>
<span id="L24835" rel="#L24835">24835</span>
<span id="L24836" rel="#L24836">24836</span>
<span id="L24837" rel="#L24837">24837</span>
<span id="L24838" rel="#L24838">24838</span>
<span id="L24839" rel="#L24839">24839</span>
<span id="L24840" rel="#L24840">24840</span>
<span id="L24841" rel="#L24841">24841</span>
<span id="L24842" rel="#L24842">24842</span>
<span id="L24843" rel="#L24843">24843</span>
<span id="L24844" rel="#L24844">24844</span>
<span id="L24845" rel="#L24845">24845</span>
<span id="L24846" rel="#L24846">24846</span>
<span id="L24847" rel="#L24847">24847</span>
<span id="L24848" rel="#L24848">24848</span>
<span id="L24849" rel="#L24849">24849</span>
<span id="L24850" rel="#L24850">24850</span>
<span id="L24851" rel="#L24851">24851</span>
<span id="L24852" rel="#L24852">24852</span>
<span id="L24853" rel="#L24853">24853</span>
<span id="L24854" rel="#L24854">24854</span>
<span id="L24855" rel="#L24855">24855</span>
<span id="L24856" rel="#L24856">24856</span>
<span id="L24857" rel="#L24857">24857</span>
<span id="L24858" rel="#L24858">24858</span>
<span id="L24859" rel="#L24859">24859</span>
<span id="L24860" rel="#L24860">24860</span>
<span id="L24861" rel="#L24861">24861</span>
<span id="L24862" rel="#L24862">24862</span>
<span id="L24863" rel="#L24863">24863</span>
<span id="L24864" rel="#L24864">24864</span>
<span id="L24865" rel="#L24865">24865</span>
<span id="L24866" rel="#L24866">24866</span>
<span id="L24867" rel="#L24867">24867</span>
<span id="L24868" rel="#L24868">24868</span>
<span id="L24869" rel="#L24869">24869</span>
<span id="L24870" rel="#L24870">24870</span>
<span id="L24871" rel="#L24871">24871</span>
<span id="L24872" rel="#L24872">24872</span>
<span id="L24873" rel="#L24873">24873</span>
<span id="L24874" rel="#L24874">24874</span>
<span id="L24875" rel="#L24875">24875</span>
<span id="L24876" rel="#L24876">24876</span>
<span id="L24877" rel="#L24877">24877</span>
<span id="L24878" rel="#L24878">24878</span>
<span id="L24879" rel="#L24879">24879</span>
<span id="L24880" rel="#L24880">24880</span>
<span id="L24881" rel="#L24881">24881</span>
<span id="L24882" rel="#L24882">24882</span>
<span id="L24883" rel="#L24883">24883</span>
<span id="L24884" rel="#L24884">24884</span>
<span id="L24885" rel="#L24885">24885</span>
<span id="L24886" rel="#L24886">24886</span>
<span id="L24887" rel="#L24887">24887</span>
<span id="L24888" rel="#L24888">24888</span>
<span id="L24889" rel="#L24889">24889</span>
<span id="L24890" rel="#L24890">24890</span>
<span id="L24891" rel="#L24891">24891</span>
<span id="L24892" rel="#L24892">24892</span>
<span id="L24893" rel="#L24893">24893</span>
<span id="L24894" rel="#L24894">24894</span>
<span id="L24895" rel="#L24895">24895</span>
<span id="L24896" rel="#L24896">24896</span>
<span id="L24897" rel="#L24897">24897</span>
<span id="L24898" rel="#L24898">24898</span>
<span id="L24899" rel="#L24899">24899</span>
<span id="L24900" rel="#L24900">24900</span>
<span id="L24901" rel="#L24901">24901</span>
<span id="L24902" rel="#L24902">24902</span>
<span id="L24903" rel="#L24903">24903</span>
<span id="L24904" rel="#L24904">24904</span>
<span id="L24905" rel="#L24905">24905</span>
<span id="L24906" rel="#L24906">24906</span>
<span id="L24907" rel="#L24907">24907</span>
<span id="L24908" rel="#L24908">24908</span>
<span id="L24909" rel="#L24909">24909</span>
<span id="L24910" rel="#L24910">24910</span>
<span id="L24911" rel="#L24911">24911</span>
<span id="L24912" rel="#L24912">24912</span>
<span id="L24913" rel="#L24913">24913</span>
<span id="L24914" rel="#L24914">24914</span>
<span id="L24915" rel="#L24915">24915</span>
<span id="L24916" rel="#L24916">24916</span>
<span id="L24917" rel="#L24917">24917</span>
<span id="L24918" rel="#L24918">24918</span>
<span id="L24919" rel="#L24919">24919</span>
<span id="L24920" rel="#L24920">24920</span>
<span id="L24921" rel="#L24921">24921</span>
<span id="L24922" rel="#L24922">24922</span>
<span id="L24923" rel="#L24923">24923</span>
<span id="L24924" rel="#L24924">24924</span>
<span id="L24925" rel="#L24925">24925</span>
<span id="L24926" rel="#L24926">24926</span>
<span id="L24927" rel="#L24927">24927</span>
<span id="L24928" rel="#L24928">24928</span>
<span id="L24929" rel="#L24929">24929</span>
<span id="L24930" rel="#L24930">24930</span>
<span id="L24931" rel="#L24931">24931</span>
<span id="L24932" rel="#L24932">24932</span>
<span id="L24933" rel="#L24933">24933</span>
<span id="L24934" rel="#L24934">24934</span>
<span id="L24935" rel="#L24935">24935</span>
<span id="L24936" rel="#L24936">24936</span>
<span id="L24937" rel="#L24937">24937</span>
<span id="L24938" rel="#L24938">24938</span>
<span id="L24939" rel="#L24939">24939</span>
<span id="L24940" rel="#L24940">24940</span>
<span id="L24941" rel="#L24941">24941</span>
<span id="L24942" rel="#L24942">24942</span>
<span id="L24943" rel="#L24943">24943</span>
<span id="L24944" rel="#L24944">24944</span>
<span id="L24945" rel="#L24945">24945</span>
<span id="L24946" rel="#L24946">24946</span>
<span id="L24947" rel="#L24947">24947</span>
<span id="L24948" rel="#L24948">24948</span>
<span id="L24949" rel="#L24949">24949</span>
<span id="L24950" rel="#L24950">24950</span>
<span id="L24951" rel="#L24951">24951</span>
<span id="L24952" rel="#L24952">24952</span>
<span id="L24953" rel="#L24953">24953</span>
<span id="L24954" rel="#L24954">24954</span>
<span id="L24955" rel="#L24955">24955</span>
<span id="L24956" rel="#L24956">24956</span>
<span id="L24957" rel="#L24957">24957</span>
<span id="L24958" rel="#L24958">24958</span>
<span id="L24959" rel="#L24959">24959</span>
<span id="L24960" rel="#L24960">24960</span>
<span id="L24961" rel="#L24961">24961</span>
<span id="L24962" rel="#L24962">24962</span>
<span id="L24963" rel="#L24963">24963</span>
<span id="L24964" rel="#L24964">24964</span>
<span id="L24965" rel="#L24965">24965</span>
<span id="L24966" rel="#L24966">24966</span>
<span id="L24967" rel="#L24967">24967</span>
<span id="L24968" rel="#L24968">24968</span>
<span id="L24969" rel="#L24969">24969</span>
<span id="L24970" rel="#L24970">24970</span>
<span id="L24971" rel="#L24971">24971</span>
<span id="L24972" rel="#L24972">24972</span>
<span id="L24973" rel="#L24973">24973</span>
<span id="L24974" rel="#L24974">24974</span>
<span id="L24975" rel="#L24975">24975</span>
<span id="L24976" rel="#L24976">24976</span>
<span id="L24977" rel="#L24977">24977</span>
<span id="L24978" rel="#L24978">24978</span>
<span id="L24979" rel="#L24979">24979</span>
<span id="L24980" rel="#L24980">24980</span>
<span id="L24981" rel="#L24981">24981</span>
<span id="L24982" rel="#L24982">24982</span>
<span id="L24983" rel="#L24983">24983</span>
<span id="L24984" rel="#L24984">24984</span>
<span id="L24985" rel="#L24985">24985</span>
<span id="L24986" rel="#L24986">24986</span>
<span id="L24987" rel="#L24987">24987</span>
<span id="L24988" rel="#L24988">24988</span>
<span id="L24989" rel="#L24989">24989</span>
<span id="L24990" rel="#L24990">24990</span>
<span id="L24991" rel="#L24991">24991</span>
<span id="L24992" rel="#L24992">24992</span>
<span id="L24993" rel="#L24993">24993</span>
<span id="L24994" rel="#L24994">24994</span>
<span id="L24995" rel="#L24995">24995</span>
<span id="L24996" rel="#L24996">24996</span>
<span id="L24997" rel="#L24997">24997</span>
<span id="L24998" rel="#L24998">24998</span>
<span id="L24999" rel="#L24999">24999</span>
<span id="L25000" rel="#L25000">25000</span>
<span id="L25001" rel="#L25001">25001</span>
<span id="L25002" rel="#L25002">25002</span>
<span id="L25003" rel="#L25003">25003</span>
<span id="L25004" rel="#L25004">25004</span>
<span id="L25005" rel="#L25005">25005</span>
<span id="L25006" rel="#L25006">25006</span>
<span id="L25007" rel="#L25007">25007</span>
<span id="L25008" rel="#L25008">25008</span>
<span id="L25009" rel="#L25009">25009</span>
<span id="L25010" rel="#L25010">25010</span>
<span id="L25011" rel="#L25011">25011</span>
<span id="L25012" rel="#L25012">25012</span>
<span id="L25013" rel="#L25013">25013</span>
<span id="L25014" rel="#L25014">25014</span>
<span id="L25015" rel="#L25015">25015</span>
<span id="L25016" rel="#L25016">25016</span>
<span id="L25017" rel="#L25017">25017</span>
<span id="L25018" rel="#L25018">25018</span>
<span id="L25019" rel="#L25019">25019</span>
<span id="L25020" rel="#L25020">25020</span>
<span id="L25021" rel="#L25021">25021</span>
<span id="L25022" rel="#L25022">25022</span>
<span id="L25023" rel="#L25023">25023</span>
<span id="L25024" rel="#L25024">25024</span>
<span id="L25025" rel="#L25025">25025</span>
<span id="L25026" rel="#L25026">25026</span>
<span id="L25027" rel="#L25027">25027</span>
<span id="L25028" rel="#L25028">25028</span>
<span id="L25029" rel="#L25029">25029</span>
<span id="L25030" rel="#L25030">25030</span>
<span id="L25031" rel="#L25031">25031</span>
<span id="L25032" rel="#L25032">25032</span>
<span id="L25033" rel="#L25033">25033</span>
<span id="L25034" rel="#L25034">25034</span>
<span id="L25035" rel="#L25035">25035</span>
<span id="L25036" rel="#L25036">25036</span>
<span id="L25037" rel="#L25037">25037</span>
<span id="L25038" rel="#L25038">25038</span>
<span id="L25039" rel="#L25039">25039</span>
<span id="L25040" rel="#L25040">25040</span>
<span id="L25041" rel="#L25041">25041</span>
<span id="L25042" rel="#L25042">25042</span>
<span id="L25043" rel="#L25043">25043</span>
<span id="L25044" rel="#L25044">25044</span>
<span id="L25045" rel="#L25045">25045</span>
<span id="L25046" rel="#L25046">25046</span>
<span id="L25047" rel="#L25047">25047</span>
<span id="L25048" rel="#L25048">25048</span>
<span id="L25049" rel="#L25049">25049</span>
<span id="L25050" rel="#L25050">25050</span>
<span id="L25051" rel="#L25051">25051</span>
<span id="L25052" rel="#L25052">25052</span>
<span id="L25053" rel="#L25053">25053</span>
<span id="L25054" rel="#L25054">25054</span>
<span id="L25055" rel="#L25055">25055</span>
<span id="L25056" rel="#L25056">25056</span>
<span id="L25057" rel="#L25057">25057</span>
<span id="L25058" rel="#L25058">25058</span>
<span id="L25059" rel="#L25059">25059</span>
<span id="L25060" rel="#L25060">25060</span>
<span id="L25061" rel="#L25061">25061</span>
<span id="L25062" rel="#L25062">25062</span>
<span id="L25063" rel="#L25063">25063</span>
<span id="L25064" rel="#L25064">25064</span>
<span id="L25065" rel="#L25065">25065</span>
<span id="L25066" rel="#L25066">25066</span>
<span id="L25067" rel="#L25067">25067</span>
<span id="L25068" rel="#L25068">25068</span>
<span id="L25069" rel="#L25069">25069</span>
<span id="L25070" rel="#L25070">25070</span>
<span id="L25071" rel="#L25071">25071</span>
<span id="L25072" rel="#L25072">25072</span>
<span id="L25073" rel="#L25073">25073</span>
<span id="L25074" rel="#L25074">25074</span>
<span id="L25075" rel="#L25075">25075</span>
<span id="L25076" rel="#L25076">25076</span>
<span id="L25077" rel="#L25077">25077</span>
<span id="L25078" rel="#L25078">25078</span>
<span id="L25079" rel="#L25079">25079</span>
<span id="L25080" rel="#L25080">25080</span>
<span id="L25081" rel="#L25081">25081</span>
<span id="L25082" rel="#L25082">25082</span>
<span id="L25083" rel="#L25083">25083</span>
<span id="L25084" rel="#L25084">25084</span>
<span id="L25085" rel="#L25085">25085</span>
<span id="L25086" rel="#L25086">25086</span>
<span id="L25087" rel="#L25087">25087</span>
<span id="L25088" rel="#L25088">25088</span>
<span id="L25089" rel="#L25089">25089</span>
<span id="L25090" rel="#L25090">25090</span>
<span id="L25091" rel="#L25091">25091</span>
<span id="L25092" rel="#L25092">25092</span>
<span id="L25093" rel="#L25093">25093</span>
<span id="L25094" rel="#L25094">25094</span>
<span id="L25095" rel="#L25095">25095</span>
<span id="L25096" rel="#L25096">25096</span>
<span id="L25097" rel="#L25097">25097</span>
<span id="L25098" rel="#L25098">25098</span>
<span id="L25099" rel="#L25099">25099</span>
<span id="L25100" rel="#L25100">25100</span>
<span id="L25101" rel="#L25101">25101</span>
<span id="L25102" rel="#L25102">25102</span>
<span id="L25103" rel="#L25103">25103</span>
<span id="L25104" rel="#L25104">25104</span>
<span id="L25105" rel="#L25105">25105</span>
<span id="L25106" rel="#L25106">25106</span>
<span id="L25107" rel="#L25107">25107</span>
<span id="L25108" rel="#L25108">25108</span>
<span id="L25109" rel="#L25109">25109</span>
<span id="L25110" rel="#L25110">25110</span>
<span id="L25111" rel="#L25111">25111</span>
<span id="L25112" rel="#L25112">25112</span>
<span id="L25113" rel="#L25113">25113</span>
<span id="L25114" rel="#L25114">25114</span>
<span id="L25115" rel="#L25115">25115</span>
<span id="L25116" rel="#L25116">25116</span>
<span id="L25117" rel="#L25117">25117</span>
<span id="L25118" rel="#L25118">25118</span>
<span id="L25119" rel="#L25119">25119</span>
<span id="L25120" rel="#L25120">25120</span>
<span id="L25121" rel="#L25121">25121</span>
<span id="L25122" rel="#L25122">25122</span>
<span id="L25123" rel="#L25123">25123</span>
<span id="L25124" rel="#L25124">25124</span>
<span id="L25125" rel="#L25125">25125</span>
<span id="L25126" rel="#L25126">25126</span>
<span id="L25127" rel="#L25127">25127</span>
<span id="L25128" rel="#L25128">25128</span>
<span id="L25129" rel="#L25129">25129</span>
<span id="L25130" rel="#L25130">25130</span>
<span id="L25131" rel="#L25131">25131</span>
<span id="L25132" rel="#L25132">25132</span>
<span id="L25133" rel="#L25133">25133</span>
<span id="L25134" rel="#L25134">25134</span>
<span id="L25135" rel="#L25135">25135</span>
<span id="L25136" rel="#L25136">25136</span>
<span id="L25137" rel="#L25137">25137</span>
<span id="L25138" rel="#L25138">25138</span>
<span id="L25139" rel="#L25139">25139</span>
<span id="L25140" rel="#L25140">25140</span>
<span id="L25141" rel="#L25141">25141</span>
<span id="L25142" rel="#L25142">25142</span>
<span id="L25143" rel="#L25143">25143</span>
<span id="L25144" rel="#L25144">25144</span>
<span id="L25145" rel="#L25145">25145</span>
<span id="L25146" rel="#L25146">25146</span>
<span id="L25147" rel="#L25147">25147</span>
<span id="L25148" rel="#L25148">25148</span>
<span id="L25149" rel="#L25149">25149</span>
<span id="L25150" rel="#L25150">25150</span>
<span id="L25151" rel="#L25151">25151</span>
<span id="L25152" rel="#L25152">25152</span>
<span id="L25153" rel="#L25153">25153</span>
<span id="L25154" rel="#L25154">25154</span>
<span id="L25155" rel="#L25155">25155</span>
<span id="L25156" rel="#L25156">25156</span>
<span id="L25157" rel="#L25157">25157</span>
<span id="L25158" rel="#L25158">25158</span>
<span id="L25159" rel="#L25159">25159</span>
<span id="L25160" rel="#L25160">25160</span>
<span id="L25161" rel="#L25161">25161</span>
<span id="L25162" rel="#L25162">25162</span>
<span id="L25163" rel="#L25163">25163</span>
<span id="L25164" rel="#L25164">25164</span>
<span id="L25165" rel="#L25165">25165</span>
<span id="L25166" rel="#L25166">25166</span>
<span id="L25167" rel="#L25167">25167</span>
<span id="L25168" rel="#L25168">25168</span>
<span id="L25169" rel="#L25169">25169</span>
<span id="L25170" rel="#L25170">25170</span>
<span id="L25171" rel="#L25171">25171</span>
<span id="L25172" rel="#L25172">25172</span>
<span id="L25173" rel="#L25173">25173</span>
<span id="L25174" rel="#L25174">25174</span>
<span id="L25175" rel="#L25175">25175</span>
<span id="L25176" rel="#L25176">25176</span>
<span id="L25177" rel="#L25177">25177</span>
<span id="L25178" rel="#L25178">25178</span>
<span id="L25179" rel="#L25179">25179</span>
<span id="L25180" rel="#L25180">25180</span>
<span id="L25181" rel="#L25181">25181</span>
<span id="L25182" rel="#L25182">25182</span>
<span id="L25183" rel="#L25183">25183</span>
<span id="L25184" rel="#L25184">25184</span>
<span id="L25185" rel="#L25185">25185</span>
<span id="L25186" rel="#L25186">25186</span>
<span id="L25187" rel="#L25187">25187</span>
<span id="L25188" rel="#L25188">25188</span>
<span id="L25189" rel="#L25189">25189</span>
<span id="L25190" rel="#L25190">25190</span>
<span id="L25191" rel="#L25191">25191</span>
<span id="L25192" rel="#L25192">25192</span>
<span id="L25193" rel="#L25193">25193</span>
<span id="L25194" rel="#L25194">25194</span>
<span id="L25195" rel="#L25195">25195</span>
<span id="L25196" rel="#L25196">25196</span>
<span id="L25197" rel="#L25197">25197</span>
<span id="L25198" rel="#L25198">25198</span>
<span id="L25199" rel="#L25199">25199</span>
<span id="L25200" rel="#L25200">25200</span>
<span id="L25201" rel="#L25201">25201</span>
<span id="L25202" rel="#L25202">25202</span>
<span id="L25203" rel="#L25203">25203</span>
<span id="L25204" rel="#L25204">25204</span>
<span id="L25205" rel="#L25205">25205</span>
<span id="L25206" rel="#L25206">25206</span>
<span id="L25207" rel="#L25207">25207</span>
<span id="L25208" rel="#L25208">25208</span>
<span id="L25209" rel="#L25209">25209</span>
<span id="L25210" rel="#L25210">25210</span>
<span id="L25211" rel="#L25211">25211</span>
<span id="L25212" rel="#L25212">25212</span>
<span id="L25213" rel="#L25213">25213</span>
<span id="L25214" rel="#L25214">25214</span>
<span id="L25215" rel="#L25215">25215</span>
<span id="L25216" rel="#L25216">25216</span>
<span id="L25217" rel="#L25217">25217</span>
<span id="L25218" rel="#L25218">25218</span>
<span id="L25219" rel="#L25219">25219</span>
<span id="L25220" rel="#L25220">25220</span>
<span id="L25221" rel="#L25221">25221</span>
<span id="L25222" rel="#L25222">25222</span>
<span id="L25223" rel="#L25223">25223</span>
<span id="L25224" rel="#L25224">25224</span>
<span id="L25225" rel="#L25225">25225</span>
<span id="L25226" rel="#L25226">25226</span>
<span id="L25227" rel="#L25227">25227</span>
<span id="L25228" rel="#L25228">25228</span>
<span id="L25229" rel="#L25229">25229</span>
<span id="L25230" rel="#L25230">25230</span>
<span id="L25231" rel="#L25231">25231</span>
<span id="L25232" rel="#L25232">25232</span>
<span id="L25233" rel="#L25233">25233</span>
<span id="L25234" rel="#L25234">25234</span>
<span id="L25235" rel="#L25235">25235</span>
<span id="L25236" rel="#L25236">25236</span>
<span id="L25237" rel="#L25237">25237</span>
<span id="L25238" rel="#L25238">25238</span>
<span id="L25239" rel="#L25239">25239</span>
<span id="L25240" rel="#L25240">25240</span>
<span id="L25241" rel="#L25241">25241</span>
<span id="L25242" rel="#L25242">25242</span>
<span id="L25243" rel="#L25243">25243</span>
<span id="L25244" rel="#L25244">25244</span>
<span id="L25245" rel="#L25245">25245</span>
<span id="L25246" rel="#L25246">25246</span>
<span id="L25247" rel="#L25247">25247</span>
<span id="L25248" rel="#L25248">25248</span>
<span id="L25249" rel="#L25249">25249</span>
<span id="L25250" rel="#L25250">25250</span>
<span id="L25251" rel="#L25251">25251</span>
<span id="L25252" rel="#L25252">25252</span>
<span id="L25253" rel="#L25253">25253</span>
<span id="L25254" rel="#L25254">25254</span>
<span id="L25255" rel="#L25255">25255</span>
<span id="L25256" rel="#L25256">25256</span>
<span id="L25257" rel="#L25257">25257</span>
<span id="L25258" rel="#L25258">25258</span>
<span id="L25259" rel="#L25259">25259</span>
<span id="L25260" rel="#L25260">25260</span>
<span id="L25261" rel="#L25261">25261</span>
<span id="L25262" rel="#L25262">25262</span>
<span id="L25263" rel="#L25263">25263</span>
<span id="L25264" rel="#L25264">25264</span>
<span id="L25265" rel="#L25265">25265</span>
<span id="L25266" rel="#L25266">25266</span>
<span id="L25267" rel="#L25267">25267</span>
<span id="L25268" rel="#L25268">25268</span>
<span id="L25269" rel="#L25269">25269</span>
<span id="L25270" rel="#L25270">25270</span>
<span id="L25271" rel="#L25271">25271</span>
<span id="L25272" rel="#L25272">25272</span>
<span id="L25273" rel="#L25273">25273</span>
<span id="L25274" rel="#L25274">25274</span>
<span id="L25275" rel="#L25275">25275</span>
<span id="L25276" rel="#L25276">25276</span>
<span id="L25277" rel="#L25277">25277</span>
<span id="L25278" rel="#L25278">25278</span>
<span id="L25279" rel="#L25279">25279</span>
<span id="L25280" rel="#L25280">25280</span>
<span id="L25281" rel="#L25281">25281</span>
<span id="L25282" rel="#L25282">25282</span>
<span id="L25283" rel="#L25283">25283</span>
<span id="L25284" rel="#L25284">25284</span>
<span id="L25285" rel="#L25285">25285</span>
<span id="L25286" rel="#L25286">25286</span>
<span id="L25287" rel="#L25287">25287</span>
<span id="L25288" rel="#L25288">25288</span>
<span id="L25289" rel="#L25289">25289</span>
<span id="L25290" rel="#L25290">25290</span>
<span id="L25291" rel="#L25291">25291</span>
<span id="L25292" rel="#L25292">25292</span>
<span id="L25293" rel="#L25293">25293</span>
<span id="L25294" rel="#L25294">25294</span>
<span id="L25295" rel="#L25295">25295</span>
<span id="L25296" rel="#L25296">25296</span>
<span id="L25297" rel="#L25297">25297</span>
<span id="L25298" rel="#L25298">25298</span>
<span id="L25299" rel="#L25299">25299</span>
<span id="L25300" rel="#L25300">25300</span>
<span id="L25301" rel="#L25301">25301</span>
<span id="L25302" rel="#L25302">25302</span>
<span id="L25303" rel="#L25303">25303</span>
<span id="L25304" rel="#L25304">25304</span>
<span id="L25305" rel="#L25305">25305</span>
<span id="L25306" rel="#L25306">25306</span>
<span id="L25307" rel="#L25307">25307</span>
<span id="L25308" rel="#L25308">25308</span>
<span id="L25309" rel="#L25309">25309</span>
<span id="L25310" rel="#L25310">25310</span>
<span id="L25311" rel="#L25311">25311</span>
<span id="L25312" rel="#L25312">25312</span>
<span id="L25313" rel="#L25313">25313</span>
<span id="L25314" rel="#L25314">25314</span>
<span id="L25315" rel="#L25315">25315</span>
<span id="L25316" rel="#L25316">25316</span>
<span id="L25317" rel="#L25317">25317</span>
<span id="L25318" rel="#L25318">25318</span>
<span id="L25319" rel="#L25319">25319</span>
<span id="L25320" rel="#L25320">25320</span>
<span id="L25321" rel="#L25321">25321</span>
<span id="L25322" rel="#L25322">25322</span>
<span id="L25323" rel="#L25323">25323</span>
<span id="L25324" rel="#L25324">25324</span>
<span id="L25325" rel="#L25325">25325</span>
<span id="L25326" rel="#L25326">25326</span>
<span id="L25327" rel="#L25327">25327</span>
<span id="L25328" rel="#L25328">25328</span>
<span id="L25329" rel="#L25329">25329</span>
<span id="L25330" rel="#L25330">25330</span>
<span id="L25331" rel="#L25331">25331</span>
<span id="L25332" rel="#L25332">25332</span>
<span id="L25333" rel="#L25333">25333</span>
<span id="L25334" rel="#L25334">25334</span>
<span id="L25335" rel="#L25335">25335</span>
<span id="L25336" rel="#L25336">25336</span>
<span id="L25337" rel="#L25337">25337</span>
<span id="L25338" rel="#L25338">25338</span>
<span id="L25339" rel="#L25339">25339</span>
<span id="L25340" rel="#L25340">25340</span>
<span id="L25341" rel="#L25341">25341</span>
<span id="L25342" rel="#L25342">25342</span>
<span id="L25343" rel="#L25343">25343</span>
<span id="L25344" rel="#L25344">25344</span>
<span id="L25345" rel="#L25345">25345</span>
<span id="L25346" rel="#L25346">25346</span>
<span id="L25347" rel="#L25347">25347</span>
<span id="L25348" rel="#L25348">25348</span>
<span id="L25349" rel="#L25349">25349</span>
<span id="L25350" rel="#L25350">25350</span>
<span id="L25351" rel="#L25351">25351</span>
<span id="L25352" rel="#L25352">25352</span>
<span id="L25353" rel="#L25353">25353</span>
<span id="L25354" rel="#L25354">25354</span>
<span id="L25355" rel="#L25355">25355</span>
<span id="L25356" rel="#L25356">25356</span>
<span id="L25357" rel="#L25357">25357</span>
<span id="L25358" rel="#L25358">25358</span>
<span id="L25359" rel="#L25359">25359</span>
<span id="L25360" rel="#L25360">25360</span>
<span id="L25361" rel="#L25361">25361</span>
<span id="L25362" rel="#L25362">25362</span>
<span id="L25363" rel="#L25363">25363</span>
<span id="L25364" rel="#L25364">25364</span>
<span id="L25365" rel="#L25365">25365</span>
<span id="L25366" rel="#L25366">25366</span>
<span id="L25367" rel="#L25367">25367</span>
<span id="L25368" rel="#L25368">25368</span>
<span id="L25369" rel="#L25369">25369</span>
<span id="L25370" rel="#L25370">25370</span>
<span id="L25371" rel="#L25371">25371</span>
<span id="L25372" rel="#L25372">25372</span>
<span id="L25373" rel="#L25373">25373</span>
<span id="L25374" rel="#L25374">25374</span>
<span id="L25375" rel="#L25375">25375</span>
<span id="L25376" rel="#L25376">25376</span>
<span id="L25377" rel="#L25377">25377</span>
<span id="L25378" rel="#L25378">25378</span>
<span id="L25379" rel="#L25379">25379</span>
<span id="L25380" rel="#L25380">25380</span>
<span id="L25381" rel="#L25381">25381</span>
<span id="L25382" rel="#L25382">25382</span>
<span id="L25383" rel="#L25383">25383</span>
<span id="L25384" rel="#L25384">25384</span>
<span id="L25385" rel="#L25385">25385</span>
<span id="L25386" rel="#L25386">25386</span>
<span id="L25387" rel="#L25387">25387</span>
<span id="L25388" rel="#L25388">25388</span>
<span id="L25389" rel="#L25389">25389</span>
<span id="L25390" rel="#L25390">25390</span>
<span id="L25391" rel="#L25391">25391</span>
<span id="L25392" rel="#L25392">25392</span>
<span id="L25393" rel="#L25393">25393</span>
<span id="L25394" rel="#L25394">25394</span>
<span id="L25395" rel="#L25395">25395</span>
<span id="L25396" rel="#L25396">25396</span>
<span id="L25397" rel="#L25397">25397</span>
<span id="L25398" rel="#L25398">25398</span>
<span id="L25399" rel="#L25399">25399</span>
<span id="L25400" rel="#L25400">25400</span>
<span id="L25401" rel="#L25401">25401</span>
<span id="L25402" rel="#L25402">25402</span>
<span id="L25403" rel="#L25403">25403</span>
<span id="L25404" rel="#L25404">25404</span>
<span id="L25405" rel="#L25405">25405</span>
<span id="L25406" rel="#L25406">25406</span>
<span id="L25407" rel="#L25407">25407</span>
<span id="L25408" rel="#L25408">25408</span>
<span id="L25409" rel="#L25409">25409</span>
<span id="L25410" rel="#L25410">25410</span>
<span id="L25411" rel="#L25411">25411</span>
<span id="L25412" rel="#L25412">25412</span>
<span id="L25413" rel="#L25413">25413</span>
<span id="L25414" rel="#L25414">25414</span>
<span id="L25415" rel="#L25415">25415</span>
<span id="L25416" rel="#L25416">25416</span>
<span id="L25417" rel="#L25417">25417</span>
<span id="L25418" rel="#L25418">25418</span>
<span id="L25419" rel="#L25419">25419</span>
<span id="L25420" rel="#L25420">25420</span>
<span id="L25421" rel="#L25421">25421</span>
<span id="L25422" rel="#L25422">25422</span>
<span id="L25423" rel="#L25423">25423</span>
<span id="L25424" rel="#L25424">25424</span>
<span id="L25425" rel="#L25425">25425</span>
<span id="L25426" rel="#L25426">25426</span>
<span id="L25427" rel="#L25427">25427</span>
<span id="L25428" rel="#L25428">25428</span>
<span id="L25429" rel="#L25429">25429</span>
<span id="L25430" rel="#L25430">25430</span>
<span id="L25431" rel="#L25431">25431</span>
<span id="L25432" rel="#L25432">25432</span>
<span id="L25433" rel="#L25433">25433</span>
<span id="L25434" rel="#L25434">25434</span>
<span id="L25435" rel="#L25435">25435</span>
<span id="L25436" rel="#L25436">25436</span>
<span id="L25437" rel="#L25437">25437</span>
<span id="L25438" rel="#L25438">25438</span>
<span id="L25439" rel="#L25439">25439</span>
<span id="L25440" rel="#L25440">25440</span>
<span id="L25441" rel="#L25441">25441</span>
<span id="L25442" rel="#L25442">25442</span>
<span id="L25443" rel="#L25443">25443</span>
<span id="L25444" rel="#L25444">25444</span>
<span id="L25445" rel="#L25445">25445</span>
<span id="L25446" rel="#L25446">25446</span>
<span id="L25447" rel="#L25447">25447</span>
<span id="L25448" rel="#L25448">25448</span>
<span id="L25449" rel="#L25449">25449</span>
<span id="L25450" rel="#L25450">25450</span>
<span id="L25451" rel="#L25451">25451</span>
<span id="L25452" rel="#L25452">25452</span>
<span id="L25453" rel="#L25453">25453</span>
<span id="L25454" rel="#L25454">25454</span>
<span id="L25455" rel="#L25455">25455</span>
<span id="L25456" rel="#L25456">25456</span>
<span id="L25457" rel="#L25457">25457</span>
<span id="L25458" rel="#L25458">25458</span>
<span id="L25459" rel="#L25459">25459</span>
<span id="L25460" rel="#L25460">25460</span>
<span id="L25461" rel="#L25461">25461</span>
<span id="L25462" rel="#L25462">25462</span>
<span id="L25463" rel="#L25463">25463</span>
<span id="L25464" rel="#L25464">25464</span>
<span id="L25465" rel="#L25465">25465</span>
<span id="L25466" rel="#L25466">25466</span>
<span id="L25467" rel="#L25467">25467</span>
<span id="L25468" rel="#L25468">25468</span>
<span id="L25469" rel="#L25469">25469</span>
<span id="L25470" rel="#L25470">25470</span>
<span id="L25471" rel="#L25471">25471</span>
<span id="L25472" rel="#L25472">25472</span>
<span id="L25473" rel="#L25473">25473</span>
<span id="L25474" rel="#L25474">25474</span>
<span id="L25475" rel="#L25475">25475</span>
<span id="L25476" rel="#L25476">25476</span>
<span id="L25477" rel="#L25477">25477</span>
<span id="L25478" rel="#L25478">25478</span>
<span id="L25479" rel="#L25479">25479</span>
<span id="L25480" rel="#L25480">25480</span>
<span id="L25481" rel="#L25481">25481</span>
<span id="L25482" rel="#L25482">25482</span>
<span id="L25483" rel="#L25483">25483</span>
<span id="L25484" rel="#L25484">25484</span>
<span id="L25485" rel="#L25485">25485</span>
<span id="L25486" rel="#L25486">25486</span>
<span id="L25487" rel="#L25487">25487</span>
<span id="L25488" rel="#L25488">25488</span>
<span id="L25489" rel="#L25489">25489</span>
<span id="L25490" rel="#L25490">25490</span>
<span id="L25491" rel="#L25491">25491</span>
<span id="L25492" rel="#L25492">25492</span>
<span id="L25493" rel="#L25493">25493</span>
<span id="L25494" rel="#L25494">25494</span>
<span id="L25495" rel="#L25495">25495</span>
<span id="L25496" rel="#L25496">25496</span>
<span id="L25497" rel="#L25497">25497</span>
<span id="L25498" rel="#L25498">25498</span>
<span id="L25499" rel="#L25499">25499</span>
<span id="L25500" rel="#L25500">25500</span>
<span id="L25501" rel="#L25501">25501</span>
<span id="L25502" rel="#L25502">25502</span>
<span id="L25503" rel="#L25503">25503</span>
<span id="L25504" rel="#L25504">25504</span>
<span id="L25505" rel="#L25505">25505</span>
<span id="L25506" rel="#L25506">25506</span>
<span id="L25507" rel="#L25507">25507</span>
<span id="L25508" rel="#L25508">25508</span>
<span id="L25509" rel="#L25509">25509</span>
<span id="L25510" rel="#L25510">25510</span>
<span id="L25511" rel="#L25511">25511</span>
<span id="L25512" rel="#L25512">25512</span>
<span id="L25513" rel="#L25513">25513</span>
<span id="L25514" rel="#L25514">25514</span>
<span id="L25515" rel="#L25515">25515</span>
<span id="L25516" rel="#L25516">25516</span>
<span id="L25517" rel="#L25517">25517</span>
<span id="L25518" rel="#L25518">25518</span>
<span id="L25519" rel="#L25519">25519</span>
<span id="L25520" rel="#L25520">25520</span>
<span id="L25521" rel="#L25521">25521</span>
<span id="L25522" rel="#L25522">25522</span>
<span id="L25523" rel="#L25523">25523</span>
<span id="L25524" rel="#L25524">25524</span>
<span id="L25525" rel="#L25525">25525</span>
<span id="L25526" rel="#L25526">25526</span>
<span id="L25527" rel="#L25527">25527</span>
<span id="L25528" rel="#L25528">25528</span>
<span id="L25529" rel="#L25529">25529</span>
<span id="L25530" rel="#L25530">25530</span>
<span id="L25531" rel="#L25531">25531</span>
<span id="L25532" rel="#L25532">25532</span>
<span id="L25533" rel="#L25533">25533</span>
<span id="L25534" rel="#L25534">25534</span>
<span id="L25535" rel="#L25535">25535</span>
<span id="L25536" rel="#L25536">25536</span>
<span id="L25537" rel="#L25537">25537</span>
<span id="L25538" rel="#L25538">25538</span>
<span id="L25539" rel="#L25539">25539</span>
<span id="L25540" rel="#L25540">25540</span>
<span id="L25541" rel="#L25541">25541</span>
<span id="L25542" rel="#L25542">25542</span>
<span id="L25543" rel="#L25543">25543</span>
<span id="L25544" rel="#L25544">25544</span>
<span id="L25545" rel="#L25545">25545</span>
<span id="L25546" rel="#L25546">25546</span>
<span id="L25547" rel="#L25547">25547</span>
<span id="L25548" rel="#L25548">25548</span>
<span id="L25549" rel="#L25549">25549</span>
<span id="L25550" rel="#L25550">25550</span>
<span id="L25551" rel="#L25551">25551</span>
<span id="L25552" rel="#L25552">25552</span>
<span id="L25553" rel="#L25553">25553</span>
<span id="L25554" rel="#L25554">25554</span>
<span id="L25555" rel="#L25555">25555</span>
<span id="L25556" rel="#L25556">25556</span>
<span id="L25557" rel="#L25557">25557</span>
<span id="L25558" rel="#L25558">25558</span>
<span id="L25559" rel="#L25559">25559</span>
<span id="L25560" rel="#L25560">25560</span>
<span id="L25561" rel="#L25561">25561</span>
<span id="L25562" rel="#L25562">25562</span>
<span id="L25563" rel="#L25563">25563</span>
<span id="L25564" rel="#L25564">25564</span>
<span id="L25565" rel="#L25565">25565</span>
<span id="L25566" rel="#L25566">25566</span>
<span id="L25567" rel="#L25567">25567</span>
<span id="L25568" rel="#L25568">25568</span>
<span id="L25569" rel="#L25569">25569</span>
<span id="L25570" rel="#L25570">25570</span>
<span id="L25571" rel="#L25571">25571</span>
<span id="L25572" rel="#L25572">25572</span>
<span id="L25573" rel="#L25573">25573</span>
<span id="L25574" rel="#L25574">25574</span>
<span id="L25575" rel="#L25575">25575</span>
<span id="L25576" rel="#L25576">25576</span>
<span id="L25577" rel="#L25577">25577</span>
<span id="L25578" rel="#L25578">25578</span>
<span id="L25579" rel="#L25579">25579</span>
<span id="L25580" rel="#L25580">25580</span>
<span id="L25581" rel="#L25581">25581</span>
<span id="L25582" rel="#L25582">25582</span>
<span id="L25583" rel="#L25583">25583</span>
<span id="L25584" rel="#L25584">25584</span>
<span id="L25585" rel="#L25585">25585</span>
<span id="L25586" rel="#L25586">25586</span>
<span id="L25587" rel="#L25587">25587</span>
<span id="L25588" rel="#L25588">25588</span>
<span id="L25589" rel="#L25589">25589</span>
<span id="L25590" rel="#L25590">25590</span>
<span id="L25591" rel="#L25591">25591</span>
<span id="L25592" rel="#L25592">25592</span>
<span id="L25593" rel="#L25593">25593</span>
<span id="L25594" rel="#L25594">25594</span>
<span id="L25595" rel="#L25595">25595</span>
<span id="L25596" rel="#L25596">25596</span>
<span id="L25597" rel="#L25597">25597</span>
<span id="L25598" rel="#L25598">25598</span>
<span id="L25599" rel="#L25599">25599</span>
<span id="L25600" rel="#L25600">25600</span>
<span id="L25601" rel="#L25601">25601</span>
<span id="L25602" rel="#L25602">25602</span>
<span id="L25603" rel="#L25603">25603</span>
<span id="L25604" rel="#L25604">25604</span>
<span id="L25605" rel="#L25605">25605</span>
<span id="L25606" rel="#L25606">25606</span>
<span id="L25607" rel="#L25607">25607</span>
<span id="L25608" rel="#L25608">25608</span>
<span id="L25609" rel="#L25609">25609</span>
<span id="L25610" rel="#L25610">25610</span>
<span id="L25611" rel="#L25611">25611</span>
<span id="L25612" rel="#L25612">25612</span>
<span id="L25613" rel="#L25613">25613</span>
<span id="L25614" rel="#L25614">25614</span>
<span id="L25615" rel="#L25615">25615</span>
<span id="L25616" rel="#L25616">25616</span>
<span id="L25617" rel="#L25617">25617</span>
<span id="L25618" rel="#L25618">25618</span>
<span id="L25619" rel="#L25619">25619</span>
<span id="L25620" rel="#L25620">25620</span>
<span id="L25621" rel="#L25621">25621</span>
<span id="L25622" rel="#L25622">25622</span>
<span id="L25623" rel="#L25623">25623</span>
<span id="L25624" rel="#L25624">25624</span>
<span id="L25625" rel="#L25625">25625</span>
<span id="L25626" rel="#L25626">25626</span>
<span id="L25627" rel="#L25627">25627</span>
<span id="L25628" rel="#L25628">25628</span>
<span id="L25629" rel="#L25629">25629</span>
<span id="L25630" rel="#L25630">25630</span>
<span id="L25631" rel="#L25631">25631</span>
<span id="L25632" rel="#L25632">25632</span>
<span id="L25633" rel="#L25633">25633</span>
<span id="L25634" rel="#L25634">25634</span>
<span id="L25635" rel="#L25635">25635</span>
<span id="L25636" rel="#L25636">25636</span>
<span id="L25637" rel="#L25637">25637</span>
<span id="L25638" rel="#L25638">25638</span>
<span id="L25639" rel="#L25639">25639</span>
<span id="L25640" rel="#L25640">25640</span>
<span id="L25641" rel="#L25641">25641</span>
<span id="L25642" rel="#L25642">25642</span>
<span id="L25643" rel="#L25643">25643</span>
<span id="L25644" rel="#L25644">25644</span>
<span id="L25645" rel="#L25645">25645</span>
<span id="L25646" rel="#L25646">25646</span>
<span id="L25647" rel="#L25647">25647</span>
<span id="L25648" rel="#L25648">25648</span>
<span id="L25649" rel="#L25649">25649</span>
<span id="L25650" rel="#L25650">25650</span>
<span id="L25651" rel="#L25651">25651</span>
<span id="L25652" rel="#L25652">25652</span>
<span id="L25653" rel="#L25653">25653</span>
<span id="L25654" rel="#L25654">25654</span>
<span id="L25655" rel="#L25655">25655</span>
<span id="L25656" rel="#L25656">25656</span>
<span id="L25657" rel="#L25657">25657</span>
<span id="L25658" rel="#L25658">25658</span>
<span id="L25659" rel="#L25659">25659</span>
<span id="L25660" rel="#L25660">25660</span>
<span id="L25661" rel="#L25661">25661</span>
<span id="L25662" rel="#L25662">25662</span>
<span id="L25663" rel="#L25663">25663</span>
<span id="L25664" rel="#L25664">25664</span>
<span id="L25665" rel="#L25665">25665</span>
<span id="L25666" rel="#L25666">25666</span>
<span id="L25667" rel="#L25667">25667</span>
<span id="L25668" rel="#L25668">25668</span>
<span id="L25669" rel="#L25669">25669</span>
<span id="L25670" rel="#L25670">25670</span>
<span id="L25671" rel="#L25671">25671</span>
<span id="L25672" rel="#L25672">25672</span>
<span id="L25673" rel="#L25673">25673</span>
<span id="L25674" rel="#L25674">25674</span>
<span id="L25675" rel="#L25675">25675</span>
<span id="L25676" rel="#L25676">25676</span>
<span id="L25677" rel="#L25677">25677</span>
<span id="L25678" rel="#L25678">25678</span>
<span id="L25679" rel="#L25679">25679</span>
<span id="L25680" rel="#L25680">25680</span>
<span id="L25681" rel="#L25681">25681</span>
<span id="L25682" rel="#L25682">25682</span>
<span id="L25683" rel="#L25683">25683</span>
<span id="L25684" rel="#L25684">25684</span>
<span id="L25685" rel="#L25685">25685</span>
<span id="L25686" rel="#L25686">25686</span>
<span id="L25687" rel="#L25687">25687</span>
<span id="L25688" rel="#L25688">25688</span>
<span id="L25689" rel="#L25689">25689</span>
<span id="L25690" rel="#L25690">25690</span>
<span id="L25691" rel="#L25691">25691</span>
<span id="L25692" rel="#L25692">25692</span>
<span id="L25693" rel="#L25693">25693</span>
<span id="L25694" rel="#L25694">25694</span>
<span id="L25695" rel="#L25695">25695</span>
<span id="L25696" rel="#L25696">25696</span>
<span id="L25697" rel="#L25697">25697</span>
<span id="L25698" rel="#L25698">25698</span>
<span id="L25699" rel="#L25699">25699</span>
<span id="L25700" rel="#L25700">25700</span>
<span id="L25701" rel="#L25701">25701</span>
<span id="L25702" rel="#L25702">25702</span>
<span id="L25703" rel="#L25703">25703</span>
<span id="L25704" rel="#L25704">25704</span>
<span id="L25705" rel="#L25705">25705</span>
<span id="L25706" rel="#L25706">25706</span>
<span id="L25707" rel="#L25707">25707</span>
<span id="L25708" rel="#L25708">25708</span>
<span id="L25709" rel="#L25709">25709</span>
<span id="L25710" rel="#L25710">25710</span>
<span id="L25711" rel="#L25711">25711</span>
<span id="L25712" rel="#L25712">25712</span>
<span id="L25713" rel="#L25713">25713</span>
<span id="L25714" rel="#L25714">25714</span>
<span id="L25715" rel="#L25715">25715</span>
<span id="L25716" rel="#L25716">25716</span>
<span id="L25717" rel="#L25717">25717</span>
<span id="L25718" rel="#L25718">25718</span>
<span id="L25719" rel="#L25719">25719</span>
<span id="L25720" rel="#L25720">25720</span>
<span id="L25721" rel="#L25721">25721</span>
<span id="L25722" rel="#L25722">25722</span>
<span id="L25723" rel="#L25723">25723</span>
<span id="L25724" rel="#L25724">25724</span>
<span id="L25725" rel="#L25725">25725</span>
<span id="L25726" rel="#L25726">25726</span>
<span id="L25727" rel="#L25727">25727</span>
<span id="L25728" rel="#L25728">25728</span>
<span id="L25729" rel="#L25729">25729</span>
<span id="L25730" rel="#L25730">25730</span>
<span id="L25731" rel="#L25731">25731</span>
<span id="L25732" rel="#L25732">25732</span>
<span id="L25733" rel="#L25733">25733</span>
<span id="L25734" rel="#L25734">25734</span>
<span id="L25735" rel="#L25735">25735</span>
<span id="L25736" rel="#L25736">25736</span>
<span id="L25737" rel="#L25737">25737</span>
<span id="L25738" rel="#L25738">25738</span>
<span id="L25739" rel="#L25739">25739</span>
<span id="L25740" rel="#L25740">25740</span>
<span id="L25741" rel="#L25741">25741</span>
<span id="L25742" rel="#L25742">25742</span>
<span id="L25743" rel="#L25743">25743</span>
<span id="L25744" rel="#L25744">25744</span>
<span id="L25745" rel="#L25745">25745</span>
<span id="L25746" rel="#L25746">25746</span>
<span id="L25747" rel="#L25747">25747</span>
<span id="L25748" rel="#L25748">25748</span>
<span id="L25749" rel="#L25749">25749</span>
<span id="L25750" rel="#L25750">25750</span>
<span id="L25751" rel="#L25751">25751</span>
<span id="L25752" rel="#L25752">25752</span>
<span id="L25753" rel="#L25753">25753</span>
<span id="L25754" rel="#L25754">25754</span>
<span id="L25755" rel="#L25755">25755</span>
<span id="L25756" rel="#L25756">25756</span>
<span id="L25757" rel="#L25757">25757</span>
<span id="L25758" rel="#L25758">25758</span>
<span id="L25759" rel="#L25759">25759</span>
<span id="L25760" rel="#L25760">25760</span>
<span id="L25761" rel="#L25761">25761</span>
<span id="L25762" rel="#L25762">25762</span>
<span id="L25763" rel="#L25763">25763</span>
<span id="L25764" rel="#L25764">25764</span>
<span id="L25765" rel="#L25765">25765</span>
<span id="L25766" rel="#L25766">25766</span>
<span id="L25767" rel="#L25767">25767</span>
<span id="L25768" rel="#L25768">25768</span>
<span id="L25769" rel="#L25769">25769</span>
<span id="L25770" rel="#L25770">25770</span>
<span id="L25771" rel="#L25771">25771</span>
<span id="L25772" rel="#L25772">25772</span>
<span id="L25773" rel="#L25773">25773</span>
<span id="L25774" rel="#L25774">25774</span>
<span id="L25775" rel="#L25775">25775</span>
<span id="L25776" rel="#L25776">25776</span>
<span id="L25777" rel="#L25777">25777</span>
<span id="L25778" rel="#L25778">25778</span>
<span id="L25779" rel="#L25779">25779</span>
<span id="L25780" rel="#L25780">25780</span>
<span id="L25781" rel="#L25781">25781</span>
<span id="L25782" rel="#L25782">25782</span>
<span id="L25783" rel="#L25783">25783</span>
<span id="L25784" rel="#L25784">25784</span>
<span id="L25785" rel="#L25785">25785</span>
<span id="L25786" rel="#L25786">25786</span>
<span id="L25787" rel="#L25787">25787</span>
<span id="L25788" rel="#L25788">25788</span>
<span id="L25789" rel="#L25789">25789</span>
<span id="L25790" rel="#L25790">25790</span>
<span id="L25791" rel="#L25791">25791</span>
<span id="L25792" rel="#L25792">25792</span>
<span id="L25793" rel="#L25793">25793</span>
<span id="L25794" rel="#L25794">25794</span>
<span id="L25795" rel="#L25795">25795</span>
<span id="L25796" rel="#L25796">25796</span>
<span id="L25797" rel="#L25797">25797</span>
<span id="L25798" rel="#L25798">25798</span>
<span id="L25799" rel="#L25799">25799</span>
<span id="L25800" rel="#L25800">25800</span>
<span id="L25801" rel="#L25801">25801</span>
<span id="L25802" rel="#L25802">25802</span>
<span id="L25803" rel="#L25803">25803</span>
<span id="L25804" rel="#L25804">25804</span>
<span id="L25805" rel="#L25805">25805</span>
<span id="L25806" rel="#L25806">25806</span>
<span id="L25807" rel="#L25807">25807</span>
<span id="L25808" rel="#L25808">25808</span>
<span id="L25809" rel="#L25809">25809</span>
<span id="L25810" rel="#L25810">25810</span>
<span id="L25811" rel="#L25811">25811</span>
<span id="L25812" rel="#L25812">25812</span>
<span id="L25813" rel="#L25813">25813</span>
<span id="L25814" rel="#L25814">25814</span>
<span id="L25815" rel="#L25815">25815</span>
<span id="L25816" rel="#L25816">25816</span>
<span id="L25817" rel="#L25817">25817</span>
<span id="L25818" rel="#L25818">25818</span>
<span id="L25819" rel="#L25819">25819</span>
<span id="L25820" rel="#L25820">25820</span>
<span id="L25821" rel="#L25821">25821</span>
<span id="L25822" rel="#L25822">25822</span>
<span id="L25823" rel="#L25823">25823</span>
<span id="L25824" rel="#L25824">25824</span>
<span id="L25825" rel="#L25825">25825</span>
<span id="L25826" rel="#L25826">25826</span>
<span id="L25827" rel="#L25827">25827</span>
<span id="L25828" rel="#L25828">25828</span>
<span id="L25829" rel="#L25829">25829</span>
<span id="L25830" rel="#L25830">25830</span>
<span id="L25831" rel="#L25831">25831</span>
<span id="L25832" rel="#L25832">25832</span>
<span id="L25833" rel="#L25833">25833</span>
<span id="L25834" rel="#L25834">25834</span>
<span id="L25835" rel="#L25835">25835</span>
<span id="L25836" rel="#L25836">25836</span>
<span id="L25837" rel="#L25837">25837</span>
<span id="L25838" rel="#L25838">25838</span>
<span id="L25839" rel="#L25839">25839</span>
<span id="L25840" rel="#L25840">25840</span>
<span id="L25841" rel="#L25841">25841</span>
<span id="L25842" rel="#L25842">25842</span>
<span id="L25843" rel="#L25843">25843</span>
<span id="L25844" rel="#L25844">25844</span>
<span id="L25845" rel="#L25845">25845</span>
<span id="L25846" rel="#L25846">25846</span>
<span id="L25847" rel="#L25847">25847</span>
<span id="L25848" rel="#L25848">25848</span>
<span id="L25849" rel="#L25849">25849</span>
<span id="L25850" rel="#L25850">25850</span>
<span id="L25851" rel="#L25851">25851</span>
<span id="L25852" rel="#L25852">25852</span>
<span id="L25853" rel="#L25853">25853</span>
<span id="L25854" rel="#L25854">25854</span>
<span id="L25855" rel="#L25855">25855</span>
<span id="L25856" rel="#L25856">25856</span>
<span id="L25857" rel="#L25857">25857</span>
<span id="L25858" rel="#L25858">25858</span>
<span id="L25859" rel="#L25859">25859</span>
<span id="L25860" rel="#L25860">25860</span>
<span id="L25861" rel="#L25861">25861</span>
<span id="L25862" rel="#L25862">25862</span>
<span id="L25863" rel="#L25863">25863</span>
<span id="L25864" rel="#L25864">25864</span>
<span id="L25865" rel="#L25865">25865</span>
<span id="L25866" rel="#L25866">25866</span>
<span id="L25867" rel="#L25867">25867</span>
<span id="L25868" rel="#L25868">25868</span>
<span id="L25869" rel="#L25869">25869</span>
<span id="L25870" rel="#L25870">25870</span>
<span id="L25871" rel="#L25871">25871</span>
<span id="L25872" rel="#L25872">25872</span>
<span id="L25873" rel="#L25873">25873</span>
<span id="L25874" rel="#L25874">25874</span>
<span id="L25875" rel="#L25875">25875</span>
<span id="L25876" rel="#L25876">25876</span>
<span id="L25877" rel="#L25877">25877</span>
<span id="L25878" rel="#L25878">25878</span>
<span id="L25879" rel="#L25879">25879</span>
<span id="L25880" rel="#L25880">25880</span>
<span id="L25881" rel="#L25881">25881</span>
<span id="L25882" rel="#L25882">25882</span>
<span id="L25883" rel="#L25883">25883</span>
<span id="L25884" rel="#L25884">25884</span>
<span id="L25885" rel="#L25885">25885</span>
<span id="L25886" rel="#L25886">25886</span>
<span id="L25887" rel="#L25887">25887</span>
<span id="L25888" rel="#L25888">25888</span>
<span id="L25889" rel="#L25889">25889</span>
<span id="L25890" rel="#L25890">25890</span>
<span id="L25891" rel="#L25891">25891</span>
<span id="L25892" rel="#L25892">25892</span>
<span id="L25893" rel="#L25893">25893</span>
<span id="L25894" rel="#L25894">25894</span>
<span id="L25895" rel="#L25895">25895</span>
<span id="L25896" rel="#L25896">25896</span>
<span id="L25897" rel="#L25897">25897</span>
<span id="L25898" rel="#L25898">25898</span>
<span id="L25899" rel="#L25899">25899</span>
<span id="L25900" rel="#L25900">25900</span>
<span id="L25901" rel="#L25901">25901</span>
<span id="L25902" rel="#L25902">25902</span>
<span id="L25903" rel="#L25903">25903</span>
<span id="L25904" rel="#L25904">25904</span>
<span id="L25905" rel="#L25905">25905</span>
<span id="L25906" rel="#L25906">25906</span>
<span id="L25907" rel="#L25907">25907</span>
<span id="L25908" rel="#L25908">25908</span>
<span id="L25909" rel="#L25909">25909</span>
<span id="L25910" rel="#L25910">25910</span>
<span id="L25911" rel="#L25911">25911</span>
<span id="L25912" rel="#L25912">25912</span>
<span id="L25913" rel="#L25913">25913</span>
<span id="L25914" rel="#L25914">25914</span>
<span id="L25915" rel="#L25915">25915</span>
<span id="L25916" rel="#L25916">25916</span>
<span id="L25917" rel="#L25917">25917</span>
<span id="L25918" rel="#L25918">25918</span>
<span id="L25919" rel="#L25919">25919</span>
<span id="L25920" rel="#L25920">25920</span>
<span id="L25921" rel="#L25921">25921</span>
<span id="L25922" rel="#L25922">25922</span>
<span id="L25923" rel="#L25923">25923</span>
<span id="L25924" rel="#L25924">25924</span>
<span id="L25925" rel="#L25925">25925</span>
<span id="L25926" rel="#L25926">25926</span>
<span id="L25927" rel="#L25927">25927</span>
<span id="L25928" rel="#L25928">25928</span>
<span id="L25929" rel="#L25929">25929</span>
<span id="L25930" rel="#L25930">25930</span>
<span id="L25931" rel="#L25931">25931</span>
<span id="L25932" rel="#L25932">25932</span>
<span id="L25933" rel="#L25933">25933</span>
<span id="L25934" rel="#L25934">25934</span>
<span id="L25935" rel="#L25935">25935</span>
<span id="L25936" rel="#L25936">25936</span>
<span id="L25937" rel="#L25937">25937</span>
<span id="L25938" rel="#L25938">25938</span>
<span id="L25939" rel="#L25939">25939</span>
<span id="L25940" rel="#L25940">25940</span>
<span id="L25941" rel="#L25941">25941</span>
<span id="L25942" rel="#L25942">25942</span>
<span id="L25943" rel="#L25943">25943</span>
<span id="L25944" rel="#L25944">25944</span>
<span id="L25945" rel="#L25945">25945</span>
<span id="L25946" rel="#L25946">25946</span>
<span id="L25947" rel="#L25947">25947</span>
<span id="L25948" rel="#L25948">25948</span>
<span id="L25949" rel="#L25949">25949</span>
<span id="L25950" rel="#L25950">25950</span>
<span id="L25951" rel="#L25951">25951</span>
<span id="L25952" rel="#L25952">25952</span>
<span id="L25953" rel="#L25953">25953</span>
<span id="L25954" rel="#L25954">25954</span>
<span id="L25955" rel="#L25955">25955</span>
<span id="L25956" rel="#L25956">25956</span>
<span id="L25957" rel="#L25957">25957</span>
<span id="L25958" rel="#L25958">25958</span>
<span id="L25959" rel="#L25959">25959</span>
<span id="L25960" rel="#L25960">25960</span>
<span id="L25961" rel="#L25961">25961</span>
<span id="L25962" rel="#L25962">25962</span>
<span id="L25963" rel="#L25963">25963</span>
<span id="L25964" rel="#L25964">25964</span>
<span id="L25965" rel="#L25965">25965</span>
<span id="L25966" rel="#L25966">25966</span>
<span id="L25967" rel="#L25967">25967</span>
<span id="L25968" rel="#L25968">25968</span>
<span id="L25969" rel="#L25969">25969</span>
<span id="L25970" rel="#L25970">25970</span>
<span id="L25971" rel="#L25971">25971</span>
<span id="L25972" rel="#L25972">25972</span>
<span id="L25973" rel="#L25973">25973</span>
<span id="L25974" rel="#L25974">25974</span>
<span id="L25975" rel="#L25975">25975</span>
<span id="L25976" rel="#L25976">25976</span>
<span id="L25977" rel="#L25977">25977</span>
<span id="L25978" rel="#L25978">25978</span>
<span id="L25979" rel="#L25979">25979</span>
<span id="L25980" rel="#L25980">25980</span>
<span id="L25981" rel="#L25981">25981</span>
<span id="L25982" rel="#L25982">25982</span>
<span id="L25983" rel="#L25983">25983</span>
<span id="L25984" rel="#L25984">25984</span>
<span id="L25985" rel="#L25985">25985</span>
<span id="L25986" rel="#L25986">25986</span>
<span id="L25987" rel="#L25987">25987</span>
<span id="L25988" rel="#L25988">25988</span>
<span id="L25989" rel="#L25989">25989</span>
<span id="L25990" rel="#L25990">25990</span>
<span id="L25991" rel="#L25991">25991</span>
<span id="L25992" rel="#L25992">25992</span>
<span id="L25993" rel="#L25993">25993</span>
<span id="L25994" rel="#L25994">25994</span>
<span id="L25995" rel="#L25995">25995</span>
<span id="L25996" rel="#L25996">25996</span>
<span id="L25997" rel="#L25997">25997</span>
<span id="L25998" rel="#L25998">25998</span>
<span id="L25999" rel="#L25999">25999</span>
<span id="L26000" rel="#L26000">26000</span>
<span id="L26001" rel="#L26001">26001</span>
<span id="L26002" rel="#L26002">26002</span>
<span id="L26003" rel="#L26003">26003</span>
<span id="L26004" rel="#L26004">26004</span>
<span id="L26005" rel="#L26005">26005</span>
<span id="L26006" rel="#L26006">26006</span>
<span id="L26007" rel="#L26007">26007</span>
<span id="L26008" rel="#L26008">26008</span>
<span id="L26009" rel="#L26009">26009</span>
<span id="L26010" rel="#L26010">26010</span>
<span id="L26011" rel="#L26011">26011</span>
<span id="L26012" rel="#L26012">26012</span>
<span id="L26013" rel="#L26013">26013</span>
<span id="L26014" rel="#L26014">26014</span>
<span id="L26015" rel="#L26015">26015</span>
<span id="L26016" rel="#L26016">26016</span>
<span id="L26017" rel="#L26017">26017</span>
<span id="L26018" rel="#L26018">26018</span>
<span id="L26019" rel="#L26019">26019</span>
<span id="L26020" rel="#L26020">26020</span>
<span id="L26021" rel="#L26021">26021</span>
<span id="L26022" rel="#L26022">26022</span>
<span id="L26023" rel="#L26023">26023</span>
<span id="L26024" rel="#L26024">26024</span>
<span id="L26025" rel="#L26025">26025</span>
<span id="L26026" rel="#L26026">26026</span>
<span id="L26027" rel="#L26027">26027</span>
<span id="L26028" rel="#L26028">26028</span>
<span id="L26029" rel="#L26029">26029</span>
<span id="L26030" rel="#L26030">26030</span>
<span id="L26031" rel="#L26031">26031</span>
<span id="L26032" rel="#L26032">26032</span>
<span id="L26033" rel="#L26033">26033</span>
<span id="L26034" rel="#L26034">26034</span>
<span id="L26035" rel="#L26035">26035</span>
<span id="L26036" rel="#L26036">26036</span>
<span id="L26037" rel="#L26037">26037</span>
<span id="L26038" rel="#L26038">26038</span>
<span id="L26039" rel="#L26039">26039</span>
<span id="L26040" rel="#L26040">26040</span>
<span id="L26041" rel="#L26041">26041</span>
<span id="L26042" rel="#L26042">26042</span>
<span id="L26043" rel="#L26043">26043</span>
<span id="L26044" rel="#L26044">26044</span>
<span id="L26045" rel="#L26045">26045</span>
<span id="L26046" rel="#L26046">26046</span>
<span id="L26047" rel="#L26047">26047</span>
<span id="L26048" rel="#L26048">26048</span>
<span id="L26049" rel="#L26049">26049</span>
<span id="L26050" rel="#L26050">26050</span>
<span id="L26051" rel="#L26051">26051</span>
<span id="L26052" rel="#L26052">26052</span>
<span id="L26053" rel="#L26053">26053</span>
<span id="L26054" rel="#L26054">26054</span>
<span id="L26055" rel="#L26055">26055</span>
<span id="L26056" rel="#L26056">26056</span>
<span id="L26057" rel="#L26057">26057</span>
<span id="L26058" rel="#L26058">26058</span>
<span id="L26059" rel="#L26059">26059</span>
<span id="L26060" rel="#L26060">26060</span>
<span id="L26061" rel="#L26061">26061</span>
<span id="L26062" rel="#L26062">26062</span>
<span id="L26063" rel="#L26063">26063</span>
<span id="L26064" rel="#L26064">26064</span>
<span id="L26065" rel="#L26065">26065</span>
<span id="L26066" rel="#L26066">26066</span>
<span id="L26067" rel="#L26067">26067</span>
<span id="L26068" rel="#L26068">26068</span>
<span id="L26069" rel="#L26069">26069</span>
<span id="L26070" rel="#L26070">26070</span>
<span id="L26071" rel="#L26071">26071</span>
<span id="L26072" rel="#L26072">26072</span>
<span id="L26073" rel="#L26073">26073</span>
<span id="L26074" rel="#L26074">26074</span>
<span id="L26075" rel="#L26075">26075</span>
<span id="L26076" rel="#L26076">26076</span>
<span id="L26077" rel="#L26077">26077</span>
<span id="L26078" rel="#L26078">26078</span>
<span id="L26079" rel="#L26079">26079</span>
<span id="L26080" rel="#L26080">26080</span>
<span id="L26081" rel="#L26081">26081</span>
<span id="L26082" rel="#L26082">26082</span>
<span id="L26083" rel="#L26083">26083</span>
<span id="L26084" rel="#L26084">26084</span>
<span id="L26085" rel="#L26085">26085</span>
<span id="L26086" rel="#L26086">26086</span>
<span id="L26087" rel="#L26087">26087</span>
<span id="L26088" rel="#L26088">26088</span>
<span id="L26089" rel="#L26089">26089</span>
<span id="L26090" rel="#L26090">26090</span>
<span id="L26091" rel="#L26091">26091</span>
<span id="L26092" rel="#L26092">26092</span>
<span id="L26093" rel="#L26093">26093</span>
<span id="L26094" rel="#L26094">26094</span>
<span id="L26095" rel="#L26095">26095</span>
<span id="L26096" rel="#L26096">26096</span>
<span id="L26097" rel="#L26097">26097</span>
<span id="L26098" rel="#L26098">26098</span>
<span id="L26099" rel="#L26099">26099</span>
<span id="L26100" rel="#L26100">26100</span>
<span id="L26101" rel="#L26101">26101</span>
<span id="L26102" rel="#L26102">26102</span>
<span id="L26103" rel="#L26103">26103</span>
<span id="L26104" rel="#L26104">26104</span>
<span id="L26105" rel="#L26105">26105</span>
<span id="L26106" rel="#L26106">26106</span>
<span id="L26107" rel="#L26107">26107</span>
<span id="L26108" rel="#L26108">26108</span>
<span id="L26109" rel="#L26109">26109</span>
<span id="L26110" rel="#L26110">26110</span>
<span id="L26111" rel="#L26111">26111</span>
<span id="L26112" rel="#L26112">26112</span>
<span id="L26113" rel="#L26113">26113</span>
<span id="L26114" rel="#L26114">26114</span>
<span id="L26115" rel="#L26115">26115</span>
<span id="L26116" rel="#L26116">26116</span>
<span id="L26117" rel="#L26117">26117</span>
<span id="L26118" rel="#L26118">26118</span>
<span id="L26119" rel="#L26119">26119</span>
<span id="L26120" rel="#L26120">26120</span>
<span id="L26121" rel="#L26121">26121</span>
<span id="L26122" rel="#L26122">26122</span>
<span id="L26123" rel="#L26123">26123</span>
<span id="L26124" rel="#L26124">26124</span>
<span id="L26125" rel="#L26125">26125</span>
<span id="L26126" rel="#L26126">26126</span>
<span id="L26127" rel="#L26127">26127</span>
<span id="L26128" rel="#L26128">26128</span>
<span id="L26129" rel="#L26129">26129</span>
<span id="L26130" rel="#L26130">26130</span>
<span id="L26131" rel="#L26131">26131</span>
<span id="L26132" rel="#L26132">26132</span>
<span id="L26133" rel="#L26133">26133</span>
<span id="L26134" rel="#L26134">26134</span>
<span id="L26135" rel="#L26135">26135</span>
<span id="L26136" rel="#L26136">26136</span>
<span id="L26137" rel="#L26137">26137</span>
<span id="L26138" rel="#L26138">26138</span>
<span id="L26139" rel="#L26139">26139</span>
<span id="L26140" rel="#L26140">26140</span>
<span id="L26141" rel="#L26141">26141</span>
<span id="L26142" rel="#L26142">26142</span>
<span id="L26143" rel="#L26143">26143</span>
<span id="L26144" rel="#L26144">26144</span>
<span id="L26145" rel="#L26145">26145</span>
<span id="L26146" rel="#L26146">26146</span>
<span id="L26147" rel="#L26147">26147</span>
<span id="L26148" rel="#L26148">26148</span>
<span id="L26149" rel="#L26149">26149</span>
<span id="L26150" rel="#L26150">26150</span>
<span id="L26151" rel="#L26151">26151</span>
<span id="L26152" rel="#L26152">26152</span>
<span id="L26153" rel="#L26153">26153</span>
<span id="L26154" rel="#L26154">26154</span>
<span id="L26155" rel="#L26155">26155</span>
<span id="L26156" rel="#L26156">26156</span>
<span id="L26157" rel="#L26157">26157</span>
<span id="L26158" rel="#L26158">26158</span>
<span id="L26159" rel="#L26159">26159</span>
<span id="L26160" rel="#L26160">26160</span>
<span id="L26161" rel="#L26161">26161</span>
<span id="L26162" rel="#L26162">26162</span>
<span id="L26163" rel="#L26163">26163</span>
<span id="L26164" rel="#L26164">26164</span>
<span id="L26165" rel="#L26165">26165</span>
<span id="L26166" rel="#L26166">26166</span>
<span id="L26167" rel="#L26167">26167</span>
<span id="L26168" rel="#L26168">26168</span>
<span id="L26169" rel="#L26169">26169</span>
<span id="L26170" rel="#L26170">26170</span>
<span id="L26171" rel="#L26171">26171</span>
<span id="L26172" rel="#L26172">26172</span>
<span id="L26173" rel="#L26173">26173</span>
<span id="L26174" rel="#L26174">26174</span>
<span id="L26175" rel="#L26175">26175</span>
<span id="L26176" rel="#L26176">26176</span>
<span id="L26177" rel="#L26177">26177</span>
<span id="L26178" rel="#L26178">26178</span>
<span id="L26179" rel="#L26179">26179</span>
<span id="L26180" rel="#L26180">26180</span>
<span id="L26181" rel="#L26181">26181</span>
<span id="L26182" rel="#L26182">26182</span>
<span id="L26183" rel="#L26183">26183</span>
<span id="L26184" rel="#L26184">26184</span>
<span id="L26185" rel="#L26185">26185</span>
<span id="L26186" rel="#L26186">26186</span>
<span id="L26187" rel="#L26187">26187</span>
<span id="L26188" rel="#L26188">26188</span>
<span id="L26189" rel="#L26189">26189</span>
<span id="L26190" rel="#L26190">26190</span>
<span id="L26191" rel="#L26191">26191</span>
<span id="L26192" rel="#L26192">26192</span>
<span id="L26193" rel="#L26193">26193</span>
<span id="L26194" rel="#L26194">26194</span>
<span id="L26195" rel="#L26195">26195</span>
<span id="L26196" rel="#L26196">26196</span>
<span id="L26197" rel="#L26197">26197</span>
<span id="L26198" rel="#L26198">26198</span>
<span id="L26199" rel="#L26199">26199</span>
<span id="L26200" rel="#L26200">26200</span>
<span id="L26201" rel="#L26201">26201</span>
<span id="L26202" rel="#L26202">26202</span>
<span id="L26203" rel="#L26203">26203</span>
<span id="L26204" rel="#L26204">26204</span>
<span id="L26205" rel="#L26205">26205</span>
<span id="L26206" rel="#L26206">26206</span>
<span id="L26207" rel="#L26207">26207</span>
<span id="L26208" rel="#L26208">26208</span>
<span id="L26209" rel="#L26209">26209</span>
<span id="L26210" rel="#L26210">26210</span>
<span id="L26211" rel="#L26211">26211</span>
<span id="L26212" rel="#L26212">26212</span>
<span id="L26213" rel="#L26213">26213</span>
<span id="L26214" rel="#L26214">26214</span>
<span id="L26215" rel="#L26215">26215</span>
<span id="L26216" rel="#L26216">26216</span>
<span id="L26217" rel="#L26217">26217</span>
<span id="L26218" rel="#L26218">26218</span>
<span id="L26219" rel="#L26219">26219</span>
<span id="L26220" rel="#L26220">26220</span>
<span id="L26221" rel="#L26221">26221</span>
<span id="L26222" rel="#L26222">26222</span>
<span id="L26223" rel="#L26223">26223</span>
<span id="L26224" rel="#L26224">26224</span>
<span id="L26225" rel="#L26225">26225</span>
<span id="L26226" rel="#L26226">26226</span>
<span id="L26227" rel="#L26227">26227</span>
<span id="L26228" rel="#L26228">26228</span>
<span id="L26229" rel="#L26229">26229</span>
<span id="L26230" rel="#L26230">26230</span>
<span id="L26231" rel="#L26231">26231</span>
<span id="L26232" rel="#L26232">26232</span>
<span id="L26233" rel="#L26233">26233</span>
<span id="L26234" rel="#L26234">26234</span>
<span id="L26235" rel="#L26235">26235</span>
<span id="L26236" rel="#L26236">26236</span>
<span id="L26237" rel="#L26237">26237</span>
<span id="L26238" rel="#L26238">26238</span>
<span id="L26239" rel="#L26239">26239</span>
<span id="L26240" rel="#L26240">26240</span>
<span id="L26241" rel="#L26241">26241</span>
<span id="L26242" rel="#L26242">26242</span>
<span id="L26243" rel="#L26243">26243</span>
<span id="L26244" rel="#L26244">26244</span>
<span id="L26245" rel="#L26245">26245</span>
<span id="L26246" rel="#L26246">26246</span>
<span id="L26247" rel="#L26247">26247</span>
<span id="L26248" rel="#L26248">26248</span>
<span id="L26249" rel="#L26249">26249</span>
<span id="L26250" rel="#L26250">26250</span>
<span id="L26251" rel="#L26251">26251</span>
<span id="L26252" rel="#L26252">26252</span>
<span id="L26253" rel="#L26253">26253</span>
<span id="L26254" rel="#L26254">26254</span>
<span id="L26255" rel="#L26255">26255</span>
<span id="L26256" rel="#L26256">26256</span>
<span id="L26257" rel="#L26257">26257</span>
<span id="L26258" rel="#L26258">26258</span>
<span id="L26259" rel="#L26259">26259</span>
<span id="L26260" rel="#L26260">26260</span>
<span id="L26261" rel="#L26261">26261</span>
<span id="L26262" rel="#L26262">26262</span>
<span id="L26263" rel="#L26263">26263</span>
<span id="L26264" rel="#L26264">26264</span>
<span id="L26265" rel="#L26265">26265</span>
<span id="L26266" rel="#L26266">26266</span>
<span id="L26267" rel="#L26267">26267</span>
<span id="L26268" rel="#L26268">26268</span>
<span id="L26269" rel="#L26269">26269</span>
<span id="L26270" rel="#L26270">26270</span>
<span id="L26271" rel="#L26271">26271</span>
<span id="L26272" rel="#L26272">26272</span>
<span id="L26273" rel="#L26273">26273</span>
<span id="L26274" rel="#L26274">26274</span>
<span id="L26275" rel="#L26275">26275</span>
<span id="L26276" rel="#L26276">26276</span>
<span id="L26277" rel="#L26277">26277</span>
<span id="L26278" rel="#L26278">26278</span>
<span id="L26279" rel="#L26279">26279</span>
<span id="L26280" rel="#L26280">26280</span>
<span id="L26281" rel="#L26281">26281</span>
<span id="L26282" rel="#L26282">26282</span>
<span id="L26283" rel="#L26283">26283</span>
<span id="L26284" rel="#L26284">26284</span>
<span id="L26285" rel="#L26285">26285</span>
<span id="L26286" rel="#L26286">26286</span>
<span id="L26287" rel="#L26287">26287</span>
<span id="L26288" rel="#L26288">26288</span>
<span id="L26289" rel="#L26289">26289</span>
<span id="L26290" rel="#L26290">26290</span>
<span id="L26291" rel="#L26291">26291</span>
<span id="L26292" rel="#L26292">26292</span>
<span id="L26293" rel="#L26293">26293</span>
<span id="L26294" rel="#L26294">26294</span>
<span id="L26295" rel="#L26295">26295</span>
<span id="L26296" rel="#L26296">26296</span>
<span id="L26297" rel="#L26297">26297</span>
<span id="L26298" rel="#L26298">26298</span>
<span id="L26299" rel="#L26299">26299</span>
<span id="L26300" rel="#L26300">26300</span>
<span id="L26301" rel="#L26301">26301</span>
<span id="L26302" rel="#L26302">26302</span>
<span id="L26303" rel="#L26303">26303</span>
<span id="L26304" rel="#L26304">26304</span>
<span id="L26305" rel="#L26305">26305</span>
<span id="L26306" rel="#L26306">26306</span>
<span id="L26307" rel="#L26307">26307</span>
<span id="L26308" rel="#L26308">26308</span>
<span id="L26309" rel="#L26309">26309</span>
<span id="L26310" rel="#L26310">26310</span>

            </td>
            <td class="blob-line-code">
                  <div class='line' id='LC1'>/*!</div><div class='line' id='LC2'>&nbsp;* jQuery JavaScript Library v1.7.2</div><div class='line' id='LC3'>&nbsp;* http://jquery.com/</div><div class='line' id='LC4'>&nbsp;*</div><div class='line' id='LC5'>&nbsp;* Copyright 2011, John Resig</div><div class='line' id='LC6'>&nbsp;* Dual licensed under the MIT or GPL Version 2 licenses.</div><div class='line' id='LC7'>&nbsp;* http://jquery.org/license</div><div class='line' id='LC8'>&nbsp;*</div><div class='line' id='LC9'>&nbsp;* Includes Sizzle.js</div><div class='line' id='LC10'>&nbsp;* http://sizzlejs.com/</div><div class='line' id='LC11'>&nbsp;* Copyright 2011, The Dojo Foundation</div><div class='line' id='LC12'>&nbsp;* Released under the MIT, BSD, and GPL Licenses.</div><div class='line' id='LC13'>&nbsp;*</div><div class='line' id='LC14'>&nbsp;* Date: Wed Mar 21 12:46:34 2012 -0700</div><div class='line' id='LC15'>&nbsp;*/</div><div class='line' id='LC16'>(function( window, undefined ) {</div><div class='line' id='LC17'>&#39;use strict&#39;;</div><div class='line' id='LC18'><br/></div><div class='line' id='LC19'>// Use the correct document accordingly with window argument (sandbox)</div><div class='line' id='LC20'>var document = window.document,</div><div class='line' id='LC21'>	navigator = window.navigator,</div><div class='line' id='LC22'>	location = window.location;</div><div class='line' id='LC23'>var jQuery = (function() {</div><div class='line' id='LC24'><br/></div><div class='line' id='LC25'>// Define a local copy of jQuery</div><div class='line' id='LC26'>var jQuery = function( selector, context ) {</div><div class='line' id='LC27'>		// The jQuery object is actually just the init constructor &#39;enhanced&#39;</div><div class='line' id='LC28'>		return new jQuery.fn.init( selector, context, rootjQuery );</div><div class='line' id='LC29'>	},</div><div class='line' id='LC30'><br/></div><div class='line' id='LC31'>	// Map over jQuery in case of overwrite</div><div class='line' id='LC32'>	_jQuery = window.jQuery,</div><div class='line' id='LC33'><br/></div><div class='line' id='LC34'>	// Map over the $ in case of overwrite</div><div class='line' id='LC35'>	_$ = window.$,</div><div class='line' id='LC36'><br/></div><div class='line' id='LC37'>	// A central reference to the root jQuery(document)</div><div class='line' id='LC38'>	rootjQuery,</div><div class='line' id='LC39'><br/></div><div class='line' id='LC40'>	// A simple way to check for HTML strings or ID strings</div><div class='line' id='LC41'>	// Prioritize #id over &lt;tag&gt; to avoid XSS via location.hash (#9521)</div><div class='line' id='LC42'>	quickExpr = /^(?:[^#&lt;]*(&lt;[\w\W]+&gt;)[^&gt;]*$|#([\w\-]*)$)/,</div><div class='line' id='LC43'><br/></div><div class='line' id='LC44'>	// Check if a string has a non-whitespace character in it</div><div class='line' id='LC45'>	rnotwhite = /\S/,</div><div class='line' id='LC46'><br/></div><div class='line' id='LC47'>	// Used for trimming whitespace</div><div class='line' id='LC48'>	trimLeft = /^\s+/,</div><div class='line' id='LC49'>	trimRight = /\s+$/,</div><div class='line' id='LC50'><br/></div><div class='line' id='LC51'>	// Match a standalone tag</div><div class='line' id='LC52'>	rsingleTag = /^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;)?$/,</div><div class='line' id='LC53'><br/></div><div class='line' id='LC54'>	// JSON RegExp</div><div class='line' id='LC55'>	rvalidchars = /^[\],:{}\s]*$/,</div><div class='line' id='LC56'>	rvalidescape = /\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,</div><div class='line' id='LC57'>	rvalidtokens = /&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,</div><div class='line' id='LC58'>	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,</div><div class='line' id='LC59'><br/></div><div class='line' id='LC60'>	// Useragent RegExp</div><div class='line' id='LC61'>	rwebkit = /(webkit)[ \/]([\w.]+)/,</div><div class='line' id='LC62'>	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,</div><div class='line' id='LC63'>	rmsie = /(msie) ([\w.]+)/,</div><div class='line' id='LC64'>	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,</div><div class='line' id='LC65'><br/></div><div class='line' id='LC66'>	// Matches dashed string for camelizing</div><div class='line' id='LC67'>	rdashAlpha = /-([a-z]|[0-9])/ig,</div><div class='line' id='LC68'>	rmsPrefix = /^-ms-/,</div><div class='line' id='LC69'><br/></div><div class='line' id='LC70'>	// Used by jQuery.camelCase as callback to replace()</div><div class='line' id='LC71'>	fcamelCase = function( all, letter ) {</div><div class='line' id='LC72'>		return ( letter + &quot;&quot; ).toUpperCase();</div><div class='line' id='LC73'>	},</div><div class='line' id='LC74'><br/></div><div class='line' id='LC75'>	// Keep a UserAgent string for use with jQuery.browser</div><div class='line' id='LC76'>	userAgent = navigator.userAgent,</div><div class='line' id='LC77'><br/></div><div class='line' id='LC78'>	// For matching the engine and version of the browser</div><div class='line' id='LC79'>	browserMatch,</div><div class='line' id='LC80'><br/></div><div class='line' id='LC81'>	// The deferred used on DOM ready</div><div class='line' id='LC82'>	readyList,</div><div class='line' id='LC83'><br/></div><div class='line' id='LC84'>	// The ready event handler</div><div class='line' id='LC85'>	DOMContentLoaded,</div><div class='line' id='LC86'><br/></div><div class='line' id='LC87'>	// Save a reference to some core methods</div><div class='line' id='LC88'>	toString = Object.prototype.toString,</div><div class='line' id='LC89'>	hasOwn = Object.prototype.hasOwnProperty,</div><div class='line' id='LC90'>	push = Array.prototype.push,</div><div class='line' id='LC91'>	slice = Array.prototype.slice,</div><div class='line' id='LC92'>	trim = String.prototype.trim,</div><div class='line' id='LC93'>	indexOf = Array.prototype.indexOf,</div><div class='line' id='LC94'><br/></div><div class='line' id='LC95'>	// [[Class]] -&gt; type pairs</div><div class='line' id='LC96'>	class2type = {};</div><div class='line' id='LC97'><br/></div><div class='line' id='LC98'>jQuery.fn = jQuery.prototype = {</div><div class='line' id='LC99'>	constructor: jQuery,</div><div class='line' id='LC100'>	init: function( selector, context, rootjQuery ) {</div><div class='line' id='LC101'>		var match, elem, ret, doc;</div><div class='line' id='LC102'><br/></div><div class='line' id='LC103'>		// Handle $(&quot;&quot;), $(null), or $(undefined)</div><div class='line' id='LC104'>		if ( !selector ) {</div><div class='line' id='LC105'>			return this;</div><div class='line' id='LC106'>		}</div><div class='line' id='LC107'><br/></div><div class='line' id='LC108'>		// Handle $(DOMElement)</div><div class='line' id='LC109'>		if ( selector.nodeType ) {</div><div class='line' id='LC110'>			this.context = this[0] = selector;</div><div class='line' id='LC111'>			this.length = 1;</div><div class='line' id='LC112'>			return this;</div><div class='line' id='LC113'>		}</div><div class='line' id='LC114'><br/></div><div class='line' id='LC115'>		// The body element only exists once, optimize finding it</div><div class='line' id='LC116'>		if ( selector === &quot;body&quot; &amp;&amp; !context &amp;&amp; document.body ) {</div><div class='line' id='LC117'>			this.context = document;</div><div class='line' id='LC118'>			this[0] = document.body;</div><div class='line' id='LC119'>			this.selector = selector;</div><div class='line' id='LC120'>			this.length = 1;</div><div class='line' id='LC121'>			return this;</div><div class='line' id='LC122'>		}</div><div class='line' id='LC123'><br/></div><div class='line' id='LC124'>		// Handle HTML strings</div><div class='line' id='LC125'>		if ( typeof selector === &quot;string&quot; ) {</div><div class='line' id='LC126'>			// Are we dealing with HTML string or an ID?</div><div class='line' id='LC127'>			if ( selector.charAt(0) === &quot;&lt;&quot; &amp;&amp; selector.charAt( selector.length - 1 ) === &quot;&gt;&quot; &amp;&amp; selector.length &gt;= 3 ) {</div><div class='line' id='LC128'>				// Assume that strings that start and end with &lt;&gt; are HTML and skip the regex check</div><div class='line' id='LC129'>				match = [ null, selector, null ];</div><div class='line' id='LC130'><br/></div><div class='line' id='LC131'>			} else {</div><div class='line' id='LC132'>				match = quickExpr.exec( selector );</div><div class='line' id='LC133'>			}</div><div class='line' id='LC134'><br/></div><div class='line' id='LC135'>			// Verify a match, and that no context was specified for #id</div><div class='line' id='LC136'>			if ( match &amp;&amp; (match[1] || !context) ) {</div><div class='line' id='LC137'><br/></div><div class='line' id='LC138'>				// HANDLE: $(html) -&gt; $(array)</div><div class='line' id='LC139'>				if ( match[1] ) {</div><div class='line' id='LC140'>					context = context instanceof jQuery ? context[0] : context;</div><div class='line' id='LC141'>					doc = ( context ? context.ownerDocument || context : document );</div><div class='line' id='LC142'><br/></div><div class='line' id='LC143'>					// If a single string is passed in and it&#39;s a single tag</div><div class='line' id='LC144'>					// just do a createElement and skip the rest</div><div class='line' id='LC145'>					ret = rsingleTag.exec( selector );</div><div class='line' id='LC146'><br/></div><div class='line' id='LC147'>					if ( ret ) {</div><div class='line' id='LC148'>						if ( jQuery.isPlainObject( context ) ) {</div><div class='line' id='LC149'>							selector = [ document.createElement( ret[1] ) ];</div><div class='line' id='LC150'>							jQuery.fn.attr.call( selector, context, true );</div><div class='line' id='LC151'><br/></div><div class='line' id='LC152'>						} else {</div><div class='line' id='LC153'>							selector = [ doc.createElement( ret[1] ) ];</div><div class='line' id='LC154'>						}</div><div class='line' id='LC155'><br/></div><div class='line' id='LC156'>					} else {</div><div class='line' id='LC157'>						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );</div><div class='line' id='LC158'>						selector = ( ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment ).childNodes;</div><div class='line' id='LC159'>					}</div><div class='line' id='LC160'><br/></div><div class='line' id='LC161'>					return jQuery.merge( this, selector );</div><div class='line' id='LC162'><br/></div><div class='line' id='LC163'>				// HANDLE: $(&quot;#id&quot;)</div><div class='line' id='LC164'>				} else {</div><div class='line' id='LC165'>					elem = document.getElementById( match[2] );</div><div class='line' id='LC166'><br/></div><div class='line' id='LC167'>					// Check parentNode to catch when Blackberry 4.6 returns</div><div class='line' id='LC168'>					// nodes that are no longer in the document #6963</div><div class='line' id='LC169'>					if ( elem &amp;&amp; elem.parentNode ) {</div><div class='line' id='LC170'>						// Handle the case where IE and Opera return items</div><div class='line' id='LC171'>						// by name instead of ID</div><div class='line' id='LC172'>						if ( elem.id !== match[2] ) {</div><div class='line' id='LC173'>							return rootjQuery.find( selector );</div><div class='line' id='LC174'>						}</div><div class='line' id='LC175'><br/></div><div class='line' id='LC176'>						// Otherwise, we inject the element directly into the jQuery object</div><div class='line' id='LC177'>						this.length = 1;</div><div class='line' id='LC178'>						this[0] = elem;</div><div class='line' id='LC179'>					}</div><div class='line' id='LC180'><br/></div><div class='line' id='LC181'>					this.context = document;</div><div class='line' id='LC182'>					this.selector = selector;</div><div class='line' id='LC183'>					return this;</div><div class='line' id='LC184'>				}</div><div class='line' id='LC185'><br/></div><div class='line' id='LC186'>			// HANDLE: $(expr, $(...))</div><div class='line' id='LC187'>			} else if ( !context || context.jquery ) {</div><div class='line' id='LC188'>				return ( context || rootjQuery ).find( selector );</div><div class='line' id='LC189'><br/></div><div class='line' id='LC190'>			// HANDLE: $(expr, context)</div><div class='line' id='LC191'>			// (which is just equivalent to: $(context).find(expr)</div><div class='line' id='LC192'>			} else {</div><div class='line' id='LC193'>				return this.constructor( context ).find( selector );</div><div class='line' id='LC194'>			}</div><div class='line' id='LC195'><br/></div><div class='line' id='LC196'>		// HANDLE: $(function)</div><div class='line' id='LC197'>		// Shortcut for document ready</div><div class='line' id='LC198'>		} else if ( jQuery.isFunction( selector ) ) {</div><div class='line' id='LC199'>			return rootjQuery.ready( selector );</div><div class='line' id='LC200'>		}</div><div class='line' id='LC201'><br/></div><div class='line' id='LC202'>		if ( selector.selector !== undefined ) {</div><div class='line' id='LC203'>			this.selector = selector.selector;</div><div class='line' id='LC204'>			this.context = selector.context;</div><div class='line' id='LC205'>		}</div><div class='line' id='LC206'><br/></div><div class='line' id='LC207'>		return jQuery.makeArray( selector, this );</div><div class='line' id='LC208'>	},</div><div class='line' id='LC209'><br/></div><div class='line' id='LC210'>	// Start with an empty selector</div><div class='line' id='LC211'>	selector: &quot;&quot;,</div><div class='line' id='LC212'><br/></div><div class='line' id='LC213'>	// The current version of jQuery being used</div><div class='line' id='LC214'>	jquery: &quot;1.7.2&quot;,</div><div class='line' id='LC215'><br/></div><div class='line' id='LC216'>	// The default length of a jQuery object is 0</div><div class='line' id='LC217'>	length: 0,</div><div class='line' id='LC218'><br/></div><div class='line' id='LC219'>	// The number of elements contained in the matched element set</div><div class='line' id='LC220'>	size: function() {</div><div class='line' id='LC221'>		return this.length;</div><div class='line' id='LC222'>	},</div><div class='line' id='LC223'><br/></div><div class='line' id='LC224'>	toArray: function() {</div><div class='line' id='LC225'>		return slice.call( this, 0 );</div><div class='line' id='LC226'>	},</div><div class='line' id='LC227'><br/></div><div class='line' id='LC228'>	// Get the Nth element in the matched element set OR</div><div class='line' id='LC229'>	// Get the whole matched element set as a clean array</div><div class='line' id='LC230'>	get: function( num ) {</div><div class='line' id='LC231'>		return num == null ?</div><div class='line' id='LC232'><br/></div><div class='line' id='LC233'>			// Return a &#39;clean&#39; array</div><div class='line' id='LC234'>			this.toArray() :</div><div class='line' id='LC235'><br/></div><div class='line' id='LC236'>			// Return just the object</div><div class='line' id='LC237'>			( num &lt; 0 ? this[ this.length + num ] : this[ num ] );</div><div class='line' id='LC238'>	},</div><div class='line' id='LC239'><br/></div><div class='line' id='LC240'>	// Take an array of elements and push it onto the stack</div><div class='line' id='LC241'>	// (returning the new matched element set)</div><div class='line' id='LC242'>	pushStack: function( elems, name, selector ) {</div><div class='line' id='LC243'>		// Build a new jQuery matched element set</div><div class='line' id='LC244'>		var ret = this.constructor();</div><div class='line' id='LC245'><br/></div><div class='line' id='LC246'>		if ( jQuery.isArray( elems ) ) {</div><div class='line' id='LC247'>			push.apply( ret, elems );</div><div class='line' id='LC248'><br/></div><div class='line' id='LC249'>		} else {</div><div class='line' id='LC250'>			jQuery.merge( ret, elems );</div><div class='line' id='LC251'>		}</div><div class='line' id='LC252'><br/></div><div class='line' id='LC253'>		// Add the old object onto the stack (as a reference)</div><div class='line' id='LC254'>		ret.prevObject = this;</div><div class='line' id='LC255'><br/></div><div class='line' id='LC256'>		ret.context = this.context;</div><div class='line' id='LC257'><br/></div><div class='line' id='LC258'>		if ( name === &quot;find&quot; ) {</div><div class='line' id='LC259'>			ret.selector = this.selector + ( this.selector ? &quot; &quot; : &quot;&quot; ) + selector;</div><div class='line' id='LC260'>		} else if ( name ) {</div><div class='line' id='LC261'>			ret.selector = this.selector + &quot;.&quot; + name + &quot;(&quot; + selector + &quot;)&quot;;</div><div class='line' id='LC262'>		}</div><div class='line' id='LC263'><br/></div><div class='line' id='LC264'>		// Return the newly-formed element set</div><div class='line' id='LC265'>		return ret;</div><div class='line' id='LC266'>	},</div><div class='line' id='LC267'><br/></div><div class='line' id='LC268'>	// Execute a callback for every element in the matched set.</div><div class='line' id='LC269'>	// (You can seed the arguments with an array of args, but this is</div><div class='line' id='LC270'>	// only used internally.)</div><div class='line' id='LC271'>	each: function( callback, args ) {</div><div class='line' id='LC272'>		return jQuery.each( this, callback, args );</div><div class='line' id='LC273'>	},</div><div class='line' id='LC274'><br/></div><div class='line' id='LC275'>	ready: function( fn ) {</div><div class='line' id='LC276'>		// Attach the listeners</div><div class='line' id='LC277'>		jQuery.bindReady();</div><div class='line' id='LC278'><br/></div><div class='line' id='LC279'>		// Add the callback</div><div class='line' id='LC280'>		readyList.add( fn );</div><div class='line' id='LC281'><br/></div><div class='line' id='LC282'>		return this;</div><div class='line' id='LC283'>	},</div><div class='line' id='LC284'><br/></div><div class='line' id='LC285'>	eq: function( i ) {</div><div class='line' id='LC286'>		i = +i;</div><div class='line' id='LC287'>		return i === -1 ?</div><div class='line' id='LC288'>			this.slice( i ) :</div><div class='line' id='LC289'>			this.slice( i, i + 1 );</div><div class='line' id='LC290'>	},</div><div class='line' id='LC291'><br/></div><div class='line' id='LC292'>	first: function() {</div><div class='line' id='LC293'>		return this.eq( 0 );</div><div class='line' id='LC294'>	},</div><div class='line' id='LC295'><br/></div><div class='line' id='LC296'>	last: function() {</div><div class='line' id='LC297'>		return this.eq( -1 );</div><div class='line' id='LC298'>	},</div><div class='line' id='LC299'><br/></div><div class='line' id='LC300'>	slice: function() {</div><div class='line' id='LC301'>		return this.pushStack( slice.apply( this, arguments ),</div><div class='line' id='LC302'>			&quot;slice&quot;, slice.call(arguments).join(&quot;,&quot;) );</div><div class='line' id='LC303'>	},</div><div class='line' id='LC304'><br/></div><div class='line' id='LC305'>	map: function( callback ) {</div><div class='line' id='LC306'>		return this.pushStack( jQuery.map(this, function( elem, i ) {</div><div class='line' id='LC307'>			return callback.call( elem, i, elem );</div><div class='line' id='LC308'>		}));</div><div class='line' id='LC309'>	},</div><div class='line' id='LC310'><br/></div><div class='line' id='LC311'>	end: function() {</div><div class='line' id='LC312'>		return this.prevObject || this.constructor(null);</div><div class='line' id='LC313'>	},</div><div class='line' id='LC314'><br/></div><div class='line' id='LC315'>	// For internal use only.</div><div class='line' id='LC316'>	// Behaves like an Array&#39;s method, not like a jQuery method.</div><div class='line' id='LC317'>	push: push,</div><div class='line' id='LC318'>	sort: [].sort,</div><div class='line' id='LC319'>	splice: [].splice</div><div class='line' id='LC320'>};</div><div class='line' id='LC321'><br/></div><div class='line' id='LC322'>// Give the init function the jQuery prototype for later instantiation</div><div class='line' id='LC323'>jQuery.fn.init.prototype = jQuery.fn;</div><div class='line' id='LC324'><br/></div><div class='line' id='LC325'>jQuery.extend = jQuery.fn.extend = function() {</div><div class='line' id='LC326'>	var options, name, src, copy, copyIsArray, clone,</div><div class='line' id='LC327'>		target = arguments[0] || {},</div><div class='line' id='LC328'>		i = 1,</div><div class='line' id='LC329'>		length = arguments.length,</div><div class='line' id='LC330'>		deep = false;</div><div class='line' id='LC331'><br/></div><div class='line' id='LC332'>	// Handle a deep copy situation</div><div class='line' id='LC333'>	if ( typeof target === &quot;boolean&quot; ) {</div><div class='line' id='LC334'>		deep = target;</div><div class='line' id='LC335'>		target = arguments[1] || {};</div><div class='line' id='LC336'>		// skip the boolean and the target</div><div class='line' id='LC337'>		i = 2;</div><div class='line' id='LC338'>	}</div><div class='line' id='LC339'><br/></div><div class='line' id='LC340'>	// Handle case when target is a string or something (possible in deep copy)</div><div class='line' id='LC341'>	if ( typeof target !== &quot;object&quot; &amp;&amp; !jQuery.isFunction(target) ) {</div><div class='line' id='LC342'>		target = {};</div><div class='line' id='LC343'>	}</div><div class='line' id='LC344'><br/></div><div class='line' id='LC345'>	// extend jQuery itself if only one argument is passed</div><div class='line' id='LC346'>	if ( length === i ) {</div><div class='line' id='LC347'>		target = this;</div><div class='line' id='LC348'>		--i;</div><div class='line' id='LC349'>	}</div><div class='line' id='LC350'><br/></div><div class='line' id='LC351'>	for ( ; i &lt; length; i++ ) {</div><div class='line' id='LC352'>		// Only deal with non-null/undefined values</div><div class='line' id='LC353'>		if ( (options = arguments[ i ]) != null ) {</div><div class='line' id='LC354'>			// Extend the base object</div><div class='line' id='LC355'>			for ( name in options ) {</div><div class='line' id='LC356'>				src = target[ name ];</div><div class='line' id='LC357'>				copy = options[ name ];</div><div class='line' id='LC358'><br/></div><div class='line' id='LC359'>				// Prevent never-ending loop</div><div class='line' id='LC360'>				if ( target === copy ) {</div><div class='line' id='LC361'>					continue;</div><div class='line' id='LC362'>				}</div><div class='line' id='LC363'><br/></div><div class='line' id='LC364'>				// Recurse if we&#39;re merging plain objects or arrays</div><div class='line' id='LC365'>				if ( deep &amp;&amp; copy &amp;&amp; ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {</div><div class='line' id='LC366'>					if ( copyIsArray ) {</div><div class='line' id='LC367'>						copyIsArray = false;</div><div class='line' id='LC368'>						clone = src &amp;&amp; jQuery.isArray(src) ? src : [];</div><div class='line' id='LC369'><br/></div><div class='line' id='LC370'>					} else {</div><div class='line' id='LC371'>						clone = src &amp;&amp; jQuery.isPlainObject(src) ? src : {};</div><div class='line' id='LC372'>					}</div><div class='line' id='LC373'><br/></div><div class='line' id='LC374'>					// Never move original objects, clone them</div><div class='line' id='LC375'>					target[ name ] = jQuery.extend( deep, clone, copy );</div><div class='line' id='LC376'><br/></div><div class='line' id='LC377'>				// Don&#39;t bring in undefined values</div><div class='line' id='LC378'>				} else if ( copy !== undefined ) {</div><div class='line' id='LC379'>					target[ name ] = copy;</div><div class='line' id='LC380'>				}</div><div class='line' id='LC381'>			}</div><div class='line' id='LC382'>		}</div><div class='line' id='LC383'>	}</div><div class='line' id='LC384'><br/></div><div class='line' id='LC385'>	// Return the modified object</div><div class='line' id='LC386'>	return target;</div><div class='line' id='LC387'>};</div><div class='line' id='LC388'><br/></div><div class='line' id='LC389'>jQuery.extend({</div><div class='line' id='LC390'>	noConflict: function( deep ) {</div><div class='line' id='LC391'>		if ( window.$ === jQuery ) {</div><div class='line' id='LC392'>			window.$ = _$;</div><div class='line' id='LC393'>		}</div><div class='line' id='LC394'><br/></div><div class='line' id='LC395'>		if ( deep &amp;&amp; window.jQuery === jQuery ) {</div><div class='line' id='LC396'>			window.jQuery = _jQuery;</div><div class='line' id='LC397'>		}</div><div class='line' id='LC398'><br/></div><div class='line' id='LC399'>		return jQuery;</div><div class='line' id='LC400'>	},</div><div class='line' id='LC401'><br/></div><div class='line' id='LC402'>	// Is the DOM ready to be used? Set to true once it occurs.</div><div class='line' id='LC403'>	isReady: false,</div><div class='line' id='LC404'><br/></div><div class='line' id='LC405'>	// A counter to track how many items to wait for before</div><div class='line' id='LC406'>	// the ready event fires. See #6781</div><div class='line' id='LC407'>	readyWait: 1,</div><div class='line' id='LC408'><br/></div><div class='line' id='LC409'>	// Hold (or release) the ready event</div><div class='line' id='LC410'>	holdReady: function( hold ) {</div><div class='line' id='LC411'>		if ( hold ) {</div><div class='line' id='LC412'>			jQuery.readyWait++;</div><div class='line' id='LC413'>		} else {</div><div class='line' id='LC414'>			jQuery.ready( true );</div><div class='line' id='LC415'>		}</div><div class='line' id='LC416'>	},</div><div class='line' id='LC417'><br/></div><div class='line' id='LC418'>	// Handle when the DOM is ready</div><div class='line' id='LC419'>	ready: function( wait ) {</div><div class='line' id='LC420'>		// Either a released hold or an DOMready/load event and not yet ready</div><div class='line' id='LC421'>		if ( (wait === true &amp;&amp; !--jQuery.readyWait) || (wait !== true &amp;&amp; !jQuery.isReady) ) {</div><div class='line' id='LC422'>			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).</div><div class='line' id='LC423'>			if ( !document.body ) {</div><div class='line' id='LC424'>				return setTimeout( jQuery.ready, 1 );</div><div class='line' id='LC425'>			}</div><div class='line' id='LC426'><br/></div><div class='line' id='LC427'>			// Remember that the DOM is ready</div><div class='line' id='LC428'>			jQuery.isReady = true;</div><div class='line' id='LC429'><br/></div><div class='line' id='LC430'>			// If a normal DOM Ready event fired, decrement, and wait if need be</div><div class='line' id='LC431'>			if ( wait !== true &amp;&amp; --jQuery.readyWait &gt; 0 ) {</div><div class='line' id='LC432'>				return;</div><div class='line' id='LC433'>			}</div><div class='line' id='LC434'><br/></div><div class='line' id='LC435'>			// If there are functions bound, to execute</div><div class='line' id='LC436'>			readyList.fireWith( document, [ jQuery ] );</div><div class='line' id='LC437'><br/></div><div class='line' id='LC438'>			// Trigger any bound ready events</div><div class='line' id='LC439'>			if ( jQuery.fn.trigger ) {</div><div class='line' id='LC440'>				jQuery( document ).trigger( &quot;ready&quot; ).off( &quot;ready&quot; );</div><div class='line' id='LC441'>			}</div><div class='line' id='LC442'>		}</div><div class='line' id='LC443'>	},</div><div class='line' id='LC444'><br/></div><div class='line' id='LC445'>	bindReady: function() {</div><div class='line' id='LC446'>		if ( readyList ) {</div><div class='line' id='LC447'>			return;</div><div class='line' id='LC448'>		}</div><div class='line' id='LC449'><br/></div><div class='line' id='LC450'>		readyList = jQuery.Callbacks( &quot;once memory&quot; );</div><div class='line' id='LC451'><br/></div><div class='line' id='LC452'>		// Catch cases where $(document).ready() is called after the</div><div class='line' id='LC453'>		// browser event has already occurred.</div><div class='line' id='LC454'>		if ( document.readyState === &quot;complete&quot; ) {</div><div class='line' id='LC455'>			// Handle it asynchronously to allow scripts the opportunity to delay ready</div><div class='line' id='LC456'>			return setTimeout( jQuery.ready, 1 );</div><div class='line' id='LC457'>		}</div><div class='line' id='LC458'><br/></div><div class='line' id='LC459'>		// Mozilla, Opera and webkit nightlies currently support this event</div><div class='line' id='LC460'>		if ( document.addEventListener ) {</div><div class='line' id='LC461'>			// Use the handy event callback</div><div class='line' id='LC462'>			document.addEventListener( &quot;DOMContentLoaded&quot;, DOMContentLoaded, false );</div><div class='line' id='LC463'><br/></div><div class='line' id='LC464'>			// A fallback to window.onload, that will always work</div><div class='line' id='LC465'>			window.addEventListener( &quot;load&quot;, jQuery.ready, false );</div><div class='line' id='LC466'><br/></div><div class='line' id='LC467'>		// If IE event model is used</div><div class='line' id='LC468'>		} else if ( document.attachEvent ) {</div><div class='line' id='LC469'>			// ensure firing before onload,</div><div class='line' id='LC470'>			// maybe late but safe also for iframes</div><div class='line' id='LC471'>			document.attachEvent( &quot;onreadystatechange&quot;, DOMContentLoaded );</div><div class='line' id='LC472'><br/></div><div class='line' id='LC473'>			// A fallback to window.onload, that will always work</div><div class='line' id='LC474'>			window.attachEvent( &quot;onload&quot;, jQuery.ready );</div><div class='line' id='LC475'><br/></div><div class='line' id='LC476'>			// If IE and not a frame</div><div class='line' id='LC477'>			// continually check to see if the document is ready</div><div class='line' id='LC478'>			var toplevel = false;</div><div class='line' id='LC479'><br/></div><div class='line' id='LC480'>			try {</div><div class='line' id='LC481'>				toplevel = window.frameElement == null;</div><div class='line' id='LC482'>			} catch(e) {}</div><div class='line' id='LC483'><br/></div><div class='line' id='LC484'>			if ( document.documentElement.doScroll &amp;&amp; toplevel ) {</div><div class='line' id='LC485'>				doScrollCheck();</div><div class='line' id='LC486'>			}</div><div class='line' id='LC487'>		}</div><div class='line' id='LC488'>	},</div><div class='line' id='LC489'><br/></div><div class='line' id='LC490'>	// See test/unit/core.js for details concerning isFunction.</div><div class='line' id='LC491'>	// Since version 1.3, DOM methods and functions like alert</div><div class='line' id='LC492'>	// aren&#39;t supported. They return false on IE (#2968).</div><div class='line' id='LC493'>	isFunction: function( obj ) {</div><div class='line' id='LC494'>		return jQuery.type(obj) === &quot;function&quot;;</div><div class='line' id='LC495'>	},</div><div class='line' id='LC496'><br/></div><div class='line' id='LC497'>	isArray: Array.isArray || function( obj ) {</div><div class='line' id='LC498'>		return jQuery.type(obj) === &quot;array&quot;;</div><div class='line' id='LC499'>	},</div><div class='line' id='LC500'><br/></div><div class='line' id='LC501'>	isWindow: function( obj ) {</div><div class='line' id='LC502'>		return obj != null &amp;&amp; obj == obj.window;</div><div class='line' id='LC503'>	},</div><div class='line' id='LC504'><br/></div><div class='line' id='LC505'>	isNumeric: function( obj ) {</div><div class='line' id='LC506'>		return !isNaN( parseFloat(obj) ) &amp;&amp; isFinite( obj );</div><div class='line' id='LC507'>	},</div><div class='line' id='LC508'><br/></div><div class='line' id='LC509'>	type: function( obj ) {</div><div class='line' id='LC510'>		return obj == null ?</div><div class='line' id='LC511'>			String( obj ) :</div><div class='line' id='LC512'>			class2type[ toString.call(obj) ] || &quot;object&quot;;</div><div class='line' id='LC513'>	},</div><div class='line' id='LC514'><br/></div><div class='line' id='LC515'>	isPlainObject: function( obj ) {</div><div class='line' id='LC516'>		// Must be an Object.</div><div class='line' id='LC517'>		// Because of IE, we also have to check the presence of the constructor property.</div><div class='line' id='LC518'>		// Make sure that DOM nodes and window objects don&#39;t pass through, as well</div><div class='line' id='LC519'>		if ( !obj || jQuery.type(obj) !== &quot;object&quot; || obj.nodeType || jQuery.isWindow( obj ) ) {</div><div class='line' id='LC520'>			return false;</div><div class='line' id='LC521'>		}</div><div class='line' id='LC522'><br/></div><div class='line' id='LC523'>		try {</div><div class='line' id='LC524'>			// Not own constructor property must be Object</div><div class='line' id='LC525'>			if ( obj.constructor &amp;&amp;</div><div class='line' id='LC526'>				!hasOwn.call(obj, &quot;constructor&quot;) &amp;&amp;</div><div class='line' id='LC527'>				!hasOwn.call(obj.constructor.prototype, &quot;isPrototypeOf&quot;) ) {</div><div class='line' id='LC528'>				return false;</div><div class='line' id='LC529'>			}</div><div class='line' id='LC530'>		} catch ( e ) {</div><div class='line' id='LC531'>			// IE8,9 Will throw exceptions on certain host objects #9897</div><div class='line' id='LC532'>			return false;</div><div class='line' id='LC533'>		}</div><div class='line' id='LC534'><br/></div><div class='line' id='LC535'>		// Own properties are enumerated firstly, so to speed up,</div><div class='line' id='LC536'>		// if last one is own, then all properties are own.</div><div class='line' id='LC537'><br/></div><div class='line' id='LC538'>		var key;</div><div class='line' id='LC539'>		for ( key in obj ) {}</div><div class='line' id='LC540'><br/></div><div class='line' id='LC541'>		return key === undefined || hasOwn.call( obj, key );</div><div class='line' id='LC542'>	},</div><div class='line' id='LC543'><br/></div><div class='line' id='LC544'>	isEmptyObject: function( obj ) {</div><div class='line' id='LC545'>		for ( var name in obj ) {</div><div class='line' id='LC546'>			return false;</div><div class='line' id='LC547'>		}</div><div class='line' id='LC548'>		return true;</div><div class='line' id='LC549'>	},</div><div class='line' id='LC550'><br/></div><div class='line' id='LC551'>	error: function( msg ) {</div><div class='line' id='LC552'>		throw new Error( msg );</div><div class='line' id='LC553'>	},</div><div class='line' id='LC554'><br/></div><div class='line' id='LC555'>	parseJSON: function( data ) {</div><div class='line' id='LC556'>		if ( typeof data !== &quot;string&quot; || !data ) {</div><div class='line' id='LC557'>			return null;</div><div class='line' id='LC558'>		}</div><div class='line' id='LC559'><br/></div><div class='line' id='LC560'>		// Make sure leading/trailing whitespace is removed (IE can&#39;t handle it)</div><div class='line' id='LC561'>		data = jQuery.trim( data );</div><div class='line' id='LC562'><br/></div><div class='line' id='LC563'>		// Attempt to parse using the native JSON parser first</div><div class='line' id='LC564'>		if ( window.JSON &amp;&amp; window.JSON.parse ) {</div><div class='line' id='LC565'>			return window.JSON.parse( data );</div><div class='line' id='LC566'>		}</div><div class='line' id='LC567'><br/></div><div class='line' id='LC568'>		// Make sure the incoming data is actual JSON</div><div class='line' id='LC569'>		// Logic borrowed from http://json.org/json2.js</div><div class='line' id='LC570'>		if ( rvalidchars.test( data.replace( rvalidescape, &quot;@&quot; )</div><div class='line' id='LC571'>			.replace( rvalidtokens, &quot;]&quot; )</div><div class='line' id='LC572'>			.replace( rvalidbraces, &quot;&quot;)) ) {</div><div class='line' id='LC573'><br/></div><div class='line' id='LC574'>			return ( new Function( &quot;return &quot; + data ) )();</div><div class='line' id='LC575'><br/></div><div class='line' id='LC576'>		}</div><div class='line' id='LC577'>		jQuery.error( &quot;Invalid JSON: &quot; + data );</div><div class='line' id='LC578'>	},</div><div class='line' id='LC579'><br/></div><div class='line' id='LC580'>	// Cross-browser xml parsing</div><div class='line' id='LC581'>	parseXML: function( data ) {</div><div class='line' id='LC582'>		if ( typeof data !== &quot;string&quot; || !data ) {</div><div class='line' id='LC583'>			return null;</div><div class='line' id='LC584'>		}</div><div class='line' id='LC585'>		var xml, tmp;</div><div class='line' id='LC586'>		try {</div><div class='line' id='LC587'>			if ( window.DOMParser ) { // Standard</div><div class='line' id='LC588'>				tmp = new DOMParser();</div><div class='line' id='LC589'>				xml = tmp.parseFromString( data , &quot;text/xml&quot; );</div><div class='line' id='LC590'>			} else { // IE</div><div class='line' id='LC591'>				xml = new ActiveXObject( &quot;Microsoft.XMLDOM&quot; );</div><div class='line' id='LC592'>				xml.async = &quot;false&quot;;</div><div class='line' id='LC593'>				xml.loadXML( data );</div><div class='line' id='LC594'>			}</div><div class='line' id='LC595'>		} catch( e ) {</div><div class='line' id='LC596'>			xml = undefined;</div><div class='line' id='LC597'>		}</div><div class='line' id='LC598'>		if ( !xml || !xml.documentElement || xml.getElementsByTagName( &quot;parsererror&quot; ).length ) {</div><div class='line' id='LC599'>			jQuery.error( &quot;Invalid XML: &quot; + data );</div><div class='line' id='LC600'>		}</div><div class='line' id='LC601'>		return xml;</div><div class='line' id='LC602'>	},</div><div class='line' id='LC603'><br/></div><div class='line' id='LC604'>	noop: function() {},</div><div class='line' id='LC605'><br/></div><div class='line' id='LC606'>	// Evaluates a script in a global context</div><div class='line' id='LC607'>	// Workarounds based on findings by Jim Driscoll</div><div class='line' id='LC608'>	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context</div><div class='line' id='LC609'>	globalEval: function( data ) {</div><div class='line' id='LC610'>		if ( data &amp;&amp; rnotwhite.test( data ) ) {</div><div class='line' id='LC611'>			// We use execScript on Internet Explorer</div><div class='line' id='LC612'>			// We use an anonymous function so that context is window</div><div class='line' id='LC613'>			// rather than jQuery in Firefox</div><div class='line' id='LC614'>			( window.execScript || function( data ) {</div><div class='line' id='LC615'>				window[ &quot;eval&quot; ].call( window, data );</div><div class='line' id='LC616'>			} )( data );</div><div class='line' id='LC617'>		}</div><div class='line' id='LC618'>	},</div><div class='line' id='LC619'><br/></div><div class='line' id='LC620'>	// Convert dashed to camelCase; used by the css and data modules</div><div class='line' id='LC621'>	// Microsoft forgot to hump their vendor prefix (#9572)</div><div class='line' id='LC622'>	camelCase: function( string ) {</div><div class='line' id='LC623'>		return string.replace( rmsPrefix, &quot;ms-&quot; ).replace( rdashAlpha, fcamelCase );</div><div class='line' id='LC624'>	},</div><div class='line' id='LC625'><br/></div><div class='line' id='LC626'>	nodeName: function( elem, name ) {</div><div class='line' id='LC627'>		return elem.nodeName &amp;&amp; elem.nodeName.toUpperCase() === name.toUpperCase();</div><div class='line' id='LC628'>	},</div><div class='line' id='LC629'><br/></div><div class='line' id='LC630'>	// args is for internal usage only</div><div class='line' id='LC631'>	each: function( object, callback, args ) {</div><div class='line' id='LC632'>		var name, i = 0,</div><div class='line' id='LC633'>			length = object.length,</div><div class='line' id='LC634'>			isObj = length === undefined || jQuery.isFunction( object );</div><div class='line' id='LC635'><br/></div><div class='line' id='LC636'>		if ( args ) {</div><div class='line' id='LC637'>			if ( isObj ) {</div><div class='line' id='LC638'>				for ( name in object ) {</div><div class='line' id='LC639'>					if ( callback.apply( object[ name ], args ) === false ) {</div><div class='line' id='LC640'>						break;</div><div class='line' id='LC641'>					}</div><div class='line' id='LC642'>				}</div><div class='line' id='LC643'>			} else {</div><div class='line' id='LC644'>				for ( ; i &lt; length; ) {</div><div class='line' id='LC645'>					if ( callback.apply( object[ i++ ], args ) === false ) {</div><div class='line' id='LC646'>						break;</div><div class='line' id='LC647'>					}</div><div class='line' id='LC648'>				}</div><div class='line' id='LC649'>			}</div><div class='line' id='LC650'><br/></div><div class='line' id='LC651'>		// A special, fast, case for the most common use of each</div><div class='line' id='LC652'>		} else {</div><div class='line' id='LC653'>			if ( isObj ) {</div><div class='line' id='LC654'>				for ( name in object ) {</div><div class='line' id='LC655'>					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {</div><div class='line' id='LC656'>						break;</div><div class='line' id='LC657'>					}</div><div class='line' id='LC658'>				}</div><div class='line' id='LC659'>			} else {</div><div class='line' id='LC660'>				for ( ; i &lt; length; ) {</div><div class='line' id='LC661'>					if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {</div><div class='line' id='LC662'>						break;</div><div class='line' id='LC663'>					}</div><div class='line' id='LC664'>				}</div><div class='line' id='LC665'>			}</div><div class='line' id='LC666'>		}</div><div class='line' id='LC667'><br/></div><div class='line' id='LC668'>		return object;</div><div class='line' id='LC669'>	},</div><div class='line' id='LC670'><br/></div><div class='line' id='LC671'>	// Use native String.trim function wherever possible</div><div class='line' id='LC672'>	trim: trim ?</div><div class='line' id='LC673'>		function( text ) {</div><div class='line' id='LC674'>			return text == null ?</div><div class='line' id='LC675'>				&quot;&quot; :</div><div class='line' id='LC676'>				trim.call( text );</div><div class='line' id='LC677'>		} :</div><div class='line' id='LC678'><br/></div><div class='line' id='LC679'>		// Otherwise use our own trimming functionality</div><div class='line' id='LC680'>		function( text ) {</div><div class='line' id='LC681'>			return text == null ?</div><div class='line' id='LC682'>				&quot;&quot; :</div><div class='line' id='LC683'>				text.toString().replace( trimLeft, &quot;&quot; ).replace( trimRight, &quot;&quot; );</div><div class='line' id='LC684'>		},</div><div class='line' id='LC685'><br/></div><div class='line' id='LC686'>	// results is for internal usage only</div><div class='line' id='LC687'>	makeArray: function( array, results ) {</div><div class='line' id='LC688'>		var ret = results || [];</div><div class='line' id='LC689'><br/></div><div class='line' id='LC690'>		if ( array != null ) {</div><div class='line' id='LC691'>			// The window, strings (and functions) also have &#39;length&#39;</div><div class='line' id='LC692'>			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930</div><div class='line' id='LC693'>			var type = jQuery.type( array );</div><div class='line' id='LC694'><br/></div><div class='line' id='LC695'>			if ( array.length == null || type === &quot;string&quot; || type === &quot;function&quot; || type === &quot;regexp&quot; || jQuery.isWindow( array ) ) {</div><div class='line' id='LC696'>				push.call( ret, array );</div><div class='line' id='LC697'>			} else {</div><div class='line' id='LC698'>				jQuery.merge( ret, array );</div><div class='line' id='LC699'>			}</div><div class='line' id='LC700'>		}</div><div class='line' id='LC701'><br/></div><div class='line' id='LC702'>		return ret;</div><div class='line' id='LC703'>	},</div><div class='line' id='LC704'><br/></div><div class='line' id='LC705'>	inArray: function( elem, array, i ) {</div><div class='line' id='LC706'>		var len;</div><div class='line' id='LC707'><br/></div><div class='line' id='LC708'>		if ( array ) {</div><div class='line' id='LC709'>			if ( indexOf ) {</div><div class='line' id='LC710'>				return indexOf.call( array, elem, i );</div><div class='line' id='LC711'>			}</div><div class='line' id='LC712'><br/></div><div class='line' id='LC713'>			len = array.length;</div><div class='line' id='LC714'>			i = i ? i &lt; 0 ? Math.max( 0, len + i ) : i : 0;</div><div class='line' id='LC715'><br/></div><div class='line' id='LC716'>			for ( ; i &lt; len; i++ ) {</div><div class='line' id='LC717'>				// Skip accessing in sparse arrays</div><div class='line' id='LC718'>				if ( i in array &amp;&amp; array[ i ] === elem ) {</div><div class='line' id='LC719'>					return i;</div><div class='line' id='LC720'>				}</div><div class='line' id='LC721'>			}</div><div class='line' id='LC722'>		}</div><div class='line' id='LC723'><br/></div><div class='line' id='LC724'>		return -1;</div><div class='line' id='LC725'>	},</div><div class='line' id='LC726'><br/></div><div class='line' id='LC727'>	merge: function( first, second ) {</div><div class='line' id='LC728'>		var i = first.length,</div><div class='line' id='LC729'>			j = 0;</div><div class='line' id='LC730'><br/></div><div class='line' id='LC731'>		if ( typeof second.length === &quot;number&quot; ) {</div><div class='line' id='LC732'>			for ( var l = second.length; j &lt; l; j++ ) {</div><div class='line' id='LC733'>				first[ i++ ] = second[ j ];</div><div class='line' id='LC734'>			}</div><div class='line' id='LC735'><br/></div><div class='line' id='LC736'>		} else {</div><div class='line' id='LC737'>			while ( second[j] !== undefined ) {</div><div class='line' id='LC738'>				first[ i++ ] = second[ j++ ];</div><div class='line' id='LC739'>			}</div><div class='line' id='LC740'>		}</div><div class='line' id='LC741'><br/></div><div class='line' id='LC742'>		first.length = i;</div><div class='line' id='LC743'><br/></div><div class='line' id='LC744'>		return first;</div><div class='line' id='LC745'>	},</div><div class='line' id='LC746'><br/></div><div class='line' id='LC747'>	grep: function( elems, callback, inv ) {</div><div class='line' id='LC748'>		var ret = [], retVal;</div><div class='line' id='LC749'>		inv = !!inv;</div><div class='line' id='LC750'><br/></div><div class='line' id='LC751'>		// Go through the array, only saving the items</div><div class='line' id='LC752'>		// that pass the validator function</div><div class='line' id='LC753'>		for ( var i = 0, length = elems.length; i &lt; length; i++ ) {</div><div class='line' id='LC754'>			retVal = !!callback( elems[ i ], i );</div><div class='line' id='LC755'>			if ( inv !== retVal ) {</div><div class='line' id='LC756'>				ret.push( elems[ i ] );</div><div class='line' id='LC757'>			}</div><div class='line' id='LC758'>		}</div><div class='line' id='LC759'><br/></div><div class='line' id='LC760'>		return ret;</div><div class='line' id='LC761'>	},</div><div class='line' id='LC762'><br/></div><div class='line' id='LC763'>	// arg is for internal usage only</div><div class='line' id='LC764'>	map: function( elems, callback, arg ) {</div><div class='line' id='LC765'>		var value, key, ret = [],</div><div class='line' id='LC766'>			i = 0,</div><div class='line' id='LC767'>			length = elems.length,</div><div class='line' id='LC768'>			// jquery objects are treated as arrays</div><div class='line' id='LC769'>			isArray = elems instanceof jQuery || length !== undefined &amp;&amp; typeof length === &quot;number&quot; &amp;&amp; ( ( length &gt; 0 &amp;&amp; elems[ 0 ] &amp;&amp; elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;</div><div class='line' id='LC770'><br/></div><div class='line' id='LC771'>		// Go through the array, translating each of the items to their</div><div class='line' id='LC772'>		if ( isArray ) {</div><div class='line' id='LC773'>			for ( ; i &lt; length; i++ ) {</div><div class='line' id='LC774'>				value = callback( elems[ i ], i, arg );</div><div class='line' id='LC775'><br/></div><div class='line' id='LC776'>				if ( value != null ) {</div><div class='line' id='LC777'>					ret[ ret.length ] = value;</div><div class='line' id='LC778'>				}</div><div class='line' id='LC779'>			}</div><div class='line' id='LC780'><br/></div><div class='line' id='LC781'>		// Go through every key on the object,</div><div class='line' id='LC782'>		} else {</div><div class='line' id='LC783'>			for ( key in elems ) {</div><div class='line' id='LC784'>				value = callback( elems[ key ], key, arg );</div><div class='line' id='LC785'><br/></div><div class='line' id='LC786'>				if ( value != null ) {</div><div class='line' id='LC787'>					ret[ ret.length ] = value;</div><div class='line' id='LC788'>				}</div><div class='line' id='LC789'>			}</div><div class='line' id='LC790'>		}</div><div class='line' id='LC791'><br/></div><div class='line' id='LC792'>		// Flatten any nested arrays</div><div class='line' id='LC793'>		return ret.concat.apply( [], ret );</div><div class='line' id='LC794'>	},</div><div class='line' id='LC795'><br/></div><div class='line' id='LC796'>	// A global GUID counter for objects</div><div class='line' id='LC797'>	guid: 1,</div><div class='line' id='LC798'><br/></div><div class='line' id='LC799'>	// Bind a function to a context, optionally partially applying any</div><div class='line' id='LC800'>	// arguments.</div><div class='line' id='LC801'>	proxy: function( fn, context ) {</div><div class='line' id='LC802'>		if ( typeof context === &quot;string&quot; ) {</div><div class='line' id='LC803'>			var tmp = fn[ context ];</div><div class='line' id='LC804'>			context = fn;</div><div class='line' id='LC805'>			fn = tmp;</div><div class='line' id='LC806'>		}</div><div class='line' id='LC807'><br/></div><div class='line' id='LC808'>		// Quick check to determine if target is callable, in the spec</div><div class='line' id='LC809'>		// this throws a TypeError, but we will just return undefined.</div><div class='line' id='LC810'>		if ( !jQuery.isFunction( fn ) ) {</div><div class='line' id='LC811'>			return undefined;</div><div class='line' id='LC812'>		}</div><div class='line' id='LC813'><br/></div><div class='line' id='LC814'>		// Simulated bind</div><div class='line' id='LC815'>		var args = slice.call( arguments, 2 ),</div><div class='line' id='LC816'>			proxy = function() {</div><div class='line' id='LC817'>				return fn.apply( context, args.concat( slice.call( arguments ) ) );</div><div class='line' id='LC818'>			};</div><div class='line' id='LC819'><br/></div><div class='line' id='LC820'>		// Set the guid of unique handler to the same of original handler, so it can be removed</div><div class='line' id='LC821'>		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;</div><div class='line' id='LC822'><br/></div><div class='line' id='LC823'>		return proxy;</div><div class='line' id='LC824'>	},</div><div class='line' id='LC825'><br/></div><div class='line' id='LC826'>	// Mutifunctional method to get and set values to a collection</div><div class='line' id='LC827'>	// The value/s can optionally be executed if it&#39;s a function</div><div class='line' id='LC828'>	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {</div><div class='line' id='LC829'>		var exec,</div><div class='line' id='LC830'>			bulk = key == null,</div><div class='line' id='LC831'>			i = 0,</div><div class='line' id='LC832'>			length = elems.length;</div><div class='line' id='LC833'><br/></div><div class='line' id='LC834'>		// Sets many values</div><div class='line' id='LC835'>		if ( key &amp;&amp; typeof key === &quot;object&quot; ) {</div><div class='line' id='LC836'>			for ( i in key ) {</div><div class='line' id='LC837'>				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );</div><div class='line' id='LC838'>			}</div><div class='line' id='LC839'>			chainable = 1;</div><div class='line' id='LC840'><br/></div><div class='line' id='LC841'>		// Sets one value</div><div class='line' id='LC842'>		} else if ( value !== undefined ) {</div><div class='line' id='LC843'>			// Optionally, function values get executed if exec is true</div><div class='line' id='LC844'>			exec = pass === undefined &amp;&amp; jQuery.isFunction( value );</div><div class='line' id='LC845'><br/></div><div class='line' id='LC846'>			if ( bulk ) {</div><div class='line' id='LC847'>				// Bulk operations only iterate when executing function values</div><div class='line' id='LC848'>				if ( exec ) {</div><div class='line' id='LC849'>					exec = fn;</div><div class='line' id='LC850'>					fn = function( elem, key, value ) {</div><div class='line' id='LC851'>						return exec.call( jQuery( elem ), value );</div><div class='line' id='LC852'>					};</div><div class='line' id='LC853'><br/></div><div class='line' id='LC854'>				// Otherwise they run against the entire set</div><div class='line' id='LC855'>				} else {</div><div class='line' id='LC856'>					fn.call( elems, value );</div><div class='line' id='LC857'>					fn = null;</div><div class='line' id='LC858'>				}</div><div class='line' id='LC859'>			}</div><div class='line' id='LC860'><br/></div><div class='line' id='LC861'>			if ( fn ) {</div><div class='line' id='LC862'>				for (; i &lt; length; i++ ) {</div><div class='line' id='LC863'>					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );</div><div class='line' id='LC864'>				}</div><div class='line' id='LC865'>			}</div><div class='line' id='LC866'><br/></div><div class='line' id='LC867'>			chainable = 1;</div><div class='line' id='LC868'>		}</div><div class='line' id='LC869'><br/></div><div class='line' id='LC870'>		return chainable ?</div><div class='line' id='LC871'>			elems :</div><div class='line' id='LC872'><br/></div><div class='line' id='LC873'>			// Gets</div><div class='line' id='LC874'>			bulk ?</div><div class='line' id='LC875'>				fn.call( elems ) :</div><div class='line' id='LC876'>				length ? fn( elems[0], key ) : emptyGet;</div><div class='line' id='LC877'>	},</div><div class='line' id='LC878'><br/></div><div class='line' id='LC879'>	now: function() {</div><div class='line' id='LC880'>		return ( new Date() ).getTime();</div><div class='line' id='LC881'>	},</div><div class='line' id='LC882'><br/></div><div class='line' id='LC883'>	// Use of jQuery.browser is frowned upon.</div><div class='line' id='LC884'>	// More details: http://docs.jquery.com/Utilities/jQuery.browser</div><div class='line' id='LC885'>	uaMatch: function( ua ) {</div><div class='line' id='LC886'>		ua = ua.toLowerCase();</div><div class='line' id='LC887'><br/></div><div class='line' id='LC888'>		var match = rwebkit.exec( ua ) ||</div><div class='line' id='LC889'>			ropera.exec( ua ) ||</div><div class='line' id='LC890'>			rmsie.exec( ua ) ||</div><div class='line' id='LC891'>			ua.indexOf(&quot;compatible&quot;) &lt; 0 &amp;&amp; rmozilla.exec( ua ) ||</div><div class='line' id='LC892'>			[];</div><div class='line' id='LC893'><br/></div><div class='line' id='LC894'>		return { browser: match[1] || &quot;&quot;, version: match[2] || &quot;0&quot; };</div><div class='line' id='LC895'>	},</div><div class='line' id='LC896'><br/></div><div class='line' id='LC897'>	sub: function() {</div><div class='line' id='LC898'>		function jQuerySub( selector, context ) {</div><div class='line' id='LC899'>			return new jQuerySub.fn.init( selector, context );</div><div class='line' id='LC900'>		}</div><div class='line' id='LC901'>		jQuery.extend( true, jQuerySub, this );</div><div class='line' id='LC902'>		jQuerySub.superclass = this;</div><div class='line' id='LC903'>		jQuerySub.fn = jQuerySub.prototype = this();</div><div class='line' id='LC904'>		jQuerySub.fn.constructor = jQuerySub;</div><div class='line' id='LC905'>		jQuerySub.sub = this.sub;</div><div class='line' id='LC906'>		jQuerySub.fn.init = function init( selector, context ) {</div><div class='line' id='LC907'>			if ( context &amp;&amp; context instanceof jQuery &amp;&amp; !(context instanceof jQuerySub) ) {</div><div class='line' id='LC908'>				context = jQuerySub( context );</div><div class='line' id='LC909'>			}</div><div class='line' id='LC910'><br/></div><div class='line' id='LC911'>			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );</div><div class='line' id='LC912'>		};</div><div class='line' id='LC913'>		jQuerySub.fn.init.prototype = jQuerySub.fn;</div><div class='line' id='LC914'>		var rootjQuerySub = jQuerySub(document);</div><div class='line' id='LC915'>		return jQuerySub;</div><div class='line' id='LC916'>	},</div><div class='line' id='LC917'><br/></div><div class='line' id='LC918'>	browser: {}</div><div class='line' id='LC919'>});</div><div class='line' id='LC920'><br/></div><div class='line' id='LC921'>// Populate the class2type map</div><div class='line' id='LC922'>jQuery.each(&quot;Boolean Number String Function Array Date RegExp Object&quot;.split(&quot; &quot;), function(i, name) {</div><div class='line' id='LC923'>	class2type[ &quot;[object &quot; + name + &quot;]&quot; ] = name.toLowerCase();</div><div class='line' id='LC924'>});</div><div class='line' id='LC925'><br/></div><div class='line' id='LC926'>browserMatch = jQuery.uaMatch( userAgent );</div><div class='line' id='LC927'>if ( browserMatch.browser ) {</div><div class='line' id='LC928'>	jQuery.browser[ browserMatch.browser ] = true;</div><div class='line' id='LC929'>	jQuery.browser.version = browserMatch.version;</div><div class='line' id='LC930'>}</div><div class='line' id='LC931'><br/></div><div class='line' id='LC932'>// Deprecated, use jQuery.browser.webkit instead</div><div class='line' id='LC933'>if ( jQuery.browser.webkit ) {</div><div class='line' id='LC934'>	jQuery.browser.safari = true;</div><div class='line' id='LC935'>}</div><div class='line' id='LC936'><br/></div><div class='line' id='LC937'>// IE doesn&#39;t match non-breaking spaces with \s</div><div class='line' id='LC938'>if ( rnotwhite.test( &quot;\xA0&quot; ) ) {</div><div class='line' id='LC939'>	trimLeft = /^[\s\xA0]+/;</div><div class='line' id='LC940'>	trimRight = /[\s\xA0]+$/;</div><div class='line' id='LC941'>}</div><div class='line' id='LC942'><br/></div><div class='line' id='LC943'>// All jQuery objects should point back to these</div><div class='line' id='LC944'>rootjQuery = jQuery(document);</div><div class='line' id='LC945'><br/></div><div class='line' id='LC946'>// Cleanup functions for the document ready method</div><div class='line' id='LC947'>if ( document.addEventListener ) {</div><div class='line' id='LC948'>	DOMContentLoaded = function() {</div><div class='line' id='LC949'>		document.removeEventListener( &quot;DOMContentLoaded&quot;, DOMContentLoaded, false );</div><div class='line' id='LC950'>		jQuery.ready();</div><div class='line' id='LC951'>	};</div><div class='line' id='LC952'><br/></div><div class='line' id='LC953'>} else if ( document.attachEvent ) {</div><div class='line' id='LC954'>	DOMContentLoaded = function() {</div><div class='line' id='LC955'>		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).</div><div class='line' id='LC956'>		if ( document.readyState === &quot;complete&quot; ) {</div><div class='line' id='LC957'>			document.detachEvent( &quot;onreadystatechange&quot;, DOMContentLoaded );</div><div class='line' id='LC958'>			jQuery.ready();</div><div class='line' id='LC959'>		}</div><div class='line' id='LC960'>	};</div><div class='line' id='LC961'>}</div><div class='line' id='LC962'><br/></div><div class='line' id='LC963'>// The DOM ready check for Internet Explorer</div><div class='line' id='LC964'>function doScrollCheck() {</div><div class='line' id='LC965'>	if ( jQuery.isReady ) {</div><div class='line' id='LC966'>		return;</div><div class='line' id='LC967'>	}</div><div class='line' id='LC968'><br/></div><div class='line' id='LC969'>	try {</div><div class='line' id='LC970'>		// If IE is used, use the trick by Diego Perini</div><div class='line' id='LC971'>		// http://javascript.nwbox.com/IEContentLoaded/</div><div class='line' id='LC972'>		document.documentElement.doScroll(&quot;left&quot;);</div><div class='line' id='LC973'>	} catch(e) {</div><div class='line' id='LC974'>		setTimeout( doScrollCheck, 1 );</div><div class='line' id='LC975'>		return;</div><div class='line' id='LC976'>	}</div><div class='line' id='LC977'><br/></div><div class='line' id='LC978'>	// and execute any waiting functions</div><div class='line' id='LC979'>	jQuery.ready();</div><div class='line' id='LC980'>}</div><div class='line' id='LC981'><br/></div><div class='line' id='LC982'>return jQuery;</div><div class='line' id='LC983'><br/></div><div class='line' id='LC984'>})();</div><div class='line' id='LC985'><br/></div><div class='line' id='LC986'><br/></div><div class='line' id='LC987'>// String to Object flags format cache</div><div class='line' id='LC988'>var flagsCache = {};</div><div class='line' id='LC989'><br/></div><div class='line' id='LC990'>// Convert String-formatted flags into Object-formatted ones and store in cache</div><div class='line' id='LC991'>function createFlags( flags ) {</div><div class='line' id='LC992'>	var object = flagsCache[ flags ] = {},</div><div class='line' id='LC993'>		i, length;</div><div class='line' id='LC994'>	flags = flags.split( /\s+/ );</div><div class='line' id='LC995'>	for ( i = 0, length = flags.length; i &lt; length; i++ ) {</div><div class='line' id='LC996'>		object[ flags[i] ] = true;</div><div class='line' id='LC997'>	}</div><div class='line' id='LC998'>	return object;</div><div class='line' id='LC999'>}</div><div class='line' id='LC1000'><br/></div><div class='line' id='LC1001'>/*</div><div class='line' id='LC1002'>&nbsp;* Create a callback list using the following parameters:</div><div class='line' id='LC1003'>&nbsp;*</div><div class='line' id='LC1004'>&nbsp;*	flags:	an optional list of space-separated flags that will change how</div><div class='line' id='LC1005'>&nbsp;*			the callback list behaves</div><div class='line' id='LC1006'>&nbsp;*</div><div class='line' id='LC1007'>&nbsp;* By default a callback list will act like an event callback list and can be</div><div class='line' id='LC1008'>&nbsp;* &quot;fired&quot; multiple times.</div><div class='line' id='LC1009'>&nbsp;*</div><div class='line' id='LC1010'>&nbsp;* Possible flags:</div><div class='line' id='LC1011'>&nbsp;*</div><div class='line' id='LC1012'>&nbsp;*	once:			will ensure the callback list can only be fired once (like a Deferred)</div><div class='line' id='LC1013'>&nbsp;*</div><div class='line' id='LC1014'>&nbsp;*	memory:			will keep track of previous values and will call any callback added</div><div class='line' id='LC1015'>&nbsp;*					after the list has been fired right away with the latest &quot;memorized&quot;</div><div class='line' id='LC1016'>&nbsp;*					values (like a Deferred)</div><div class='line' id='LC1017'>&nbsp;*</div><div class='line' id='LC1018'>&nbsp;*	unique:			will ensure a callback can only be added once (no duplicate in the list)</div><div class='line' id='LC1019'>&nbsp;*</div><div class='line' id='LC1020'>&nbsp;*	stopOnFalse:	interrupt callings when a callback returns false</div><div class='line' id='LC1021'>&nbsp;*</div><div class='line' id='LC1022'>&nbsp;*/</div><div class='line' id='LC1023'>jQuery.Callbacks = function( flags ) {</div><div class='line' id='LC1024'><br/></div><div class='line' id='LC1025'>	// Convert flags from String-formatted to Object-formatted</div><div class='line' id='LC1026'>	// (we check in cache first)</div><div class='line' id='LC1027'>	flags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};</div><div class='line' id='LC1028'><br/></div><div class='line' id='LC1029'>	var // Actual callback list</div><div class='line' id='LC1030'>		list = [],</div><div class='line' id='LC1031'>		// Stack of fire calls for repeatable lists</div><div class='line' id='LC1032'>		stack = [],</div><div class='line' id='LC1033'>		// Last fire value (for non-forgettable lists)</div><div class='line' id='LC1034'>		memory,</div><div class='line' id='LC1035'>		// Flag to know if list was already fired</div><div class='line' id='LC1036'>		fired,</div><div class='line' id='LC1037'>		// Flag to know if list is currently firing</div><div class='line' id='LC1038'>		firing,</div><div class='line' id='LC1039'>		// First callback to fire (used internally by add and fireWith)</div><div class='line' id='LC1040'>		firingStart,</div><div class='line' id='LC1041'>		// End of the loop when firing</div><div class='line' id='LC1042'>		firingLength,</div><div class='line' id='LC1043'>		// Index of currently firing callback (modified by remove if needed)</div><div class='line' id='LC1044'>		firingIndex,</div><div class='line' id='LC1045'>		// Add one or several callbacks to the list</div><div class='line' id='LC1046'>		add = function( args ) {</div><div class='line' id='LC1047'>			var i,</div><div class='line' id='LC1048'>				length,</div><div class='line' id='LC1049'>				elem,</div><div class='line' id='LC1050'>				type,</div><div class='line' id='LC1051'>				actual;</div><div class='line' id='LC1052'>			for ( i = 0, length = args.length; i &lt; length; i++ ) {</div><div class='line' id='LC1053'>				elem = args[ i ];</div><div class='line' id='LC1054'>				type = jQuery.type( elem );</div><div class='line' id='LC1055'>				if ( type === &quot;array&quot; ) {</div><div class='line' id='LC1056'>					// Inspect recursively</div><div class='line' id='LC1057'>					add( elem );</div><div class='line' id='LC1058'>				} else if ( type === &quot;function&quot; ) {</div><div class='line' id='LC1059'>					// Add if not in unique mode and callback is not in</div><div class='line' id='LC1060'>					if ( !flags.unique || !self.has( elem ) ) {</div><div class='line' id='LC1061'>						list.push( elem );</div><div class='line' id='LC1062'>					}</div><div class='line' id='LC1063'>				}</div><div class='line' id='LC1064'>			}</div><div class='line' id='LC1065'>		},</div><div class='line' id='LC1066'>		// Fire callbacks</div><div class='line' id='LC1067'>		fire = function( context, args ) {</div><div class='line' id='LC1068'>			args = args || [];</div><div class='line' id='LC1069'>			memory = !flags.memory || [ context, args ];</div><div class='line' id='LC1070'>			fired = true;</div><div class='line' id='LC1071'>			firing = true;</div><div class='line' id='LC1072'>			firingIndex = firingStart || 0;</div><div class='line' id='LC1073'>			firingStart = 0;</div><div class='line' id='LC1074'>			firingLength = list.length;</div><div class='line' id='LC1075'>			for ( ; list &amp;&amp; firingIndex &lt; firingLength; firingIndex++ ) {</div><div class='line' id='LC1076'>				if ( list[ firingIndex ].apply( context, args ) === false &amp;&amp; flags.stopOnFalse ) {</div><div class='line' id='LC1077'>					memory = true; // Mark as halted</div><div class='line' id='LC1078'>					break;</div><div class='line' id='LC1079'>				}</div><div class='line' id='LC1080'>			}</div><div class='line' id='LC1081'>			firing = false;</div><div class='line' id='LC1082'>			if ( list ) {</div><div class='line' id='LC1083'>				if ( !flags.once ) {</div><div class='line' id='LC1084'>					if ( stack &amp;&amp; stack.length ) {</div><div class='line' id='LC1085'>						memory = stack.shift();</div><div class='line' id='LC1086'>						self.fireWith( memory[ 0 ], memory[ 1 ] );</div><div class='line' id='LC1087'>					}</div><div class='line' id='LC1088'>				} else if ( memory === true ) {</div><div class='line' id='LC1089'>					self.disable();</div><div class='line' id='LC1090'>				} else {</div><div class='line' id='LC1091'>					list = [];</div><div class='line' id='LC1092'>				}</div><div class='line' id='LC1093'>			}</div><div class='line' id='LC1094'>		},</div><div class='line' id='LC1095'>		// Actual Callbacks object</div><div class='line' id='LC1096'>		self = {</div><div class='line' id='LC1097'>			// Add a callback or a collection of callbacks to the list</div><div class='line' id='LC1098'>			add: function() {</div><div class='line' id='LC1099'>				if ( list ) {</div><div class='line' id='LC1100'>					var length = list.length;</div><div class='line' id='LC1101'>					add( arguments );</div><div class='line' id='LC1102'>					// Do we need to add the callbacks to the</div><div class='line' id='LC1103'>					// current firing batch?</div><div class='line' id='LC1104'>					if ( firing ) {</div><div class='line' id='LC1105'>						firingLength = list.length;</div><div class='line' id='LC1106'>					// With memory, if we&#39;re not firing then</div><div class='line' id='LC1107'>					// we should call right away, unless previous</div><div class='line' id='LC1108'>					// firing was halted (stopOnFalse)</div><div class='line' id='LC1109'>					} else if ( memory &amp;&amp; memory !== true ) {</div><div class='line' id='LC1110'>						firingStart = length;</div><div class='line' id='LC1111'>						fire( memory[ 0 ], memory[ 1 ] );</div><div class='line' id='LC1112'>					}</div><div class='line' id='LC1113'>				}</div><div class='line' id='LC1114'>				return this;</div><div class='line' id='LC1115'>			},</div><div class='line' id='LC1116'>			// Remove a callback from the list</div><div class='line' id='LC1117'>			remove: function() {</div><div class='line' id='LC1118'>				if ( list ) {</div><div class='line' id='LC1119'>					var args = arguments,</div><div class='line' id='LC1120'>						argIndex = 0,</div><div class='line' id='LC1121'>						argLength = args.length;</div><div class='line' id='LC1122'>					for ( ; argIndex &lt; argLength ; argIndex++ ) {</div><div class='line' id='LC1123'>						for ( var i = 0; i &lt; list.length; i++ ) {</div><div class='line' id='LC1124'>							if ( args[ argIndex ] === list[ i ] ) {</div><div class='line' id='LC1125'>								// Handle firingIndex and firingLength</div><div class='line' id='LC1126'>								if ( firing ) {</div><div class='line' id='LC1127'>									if ( i &lt;= firingLength ) {</div><div class='line' id='LC1128'>										firingLength--;</div><div class='line' id='LC1129'>										if ( i &lt;= firingIndex ) {</div><div class='line' id='LC1130'>											firingIndex--;</div><div class='line' id='LC1131'>										}</div><div class='line' id='LC1132'>									}</div><div class='line' id='LC1133'>								}</div><div class='line' id='LC1134'>								// Remove the element</div><div class='line' id='LC1135'>								list.splice( i--, 1 );</div><div class='line' id='LC1136'>								// If we have some unicity property then</div><div class='line' id='LC1137'>								// we only need to do this once</div><div class='line' id='LC1138'>								if ( flags.unique ) {</div><div class='line' id='LC1139'>									break;</div><div class='line' id='LC1140'>								}</div><div class='line' id='LC1141'>							}</div><div class='line' id='LC1142'>						}</div><div class='line' id='LC1143'>					}</div><div class='line' id='LC1144'>				}</div><div class='line' id='LC1145'>				return this;</div><div class='line' id='LC1146'>			},</div><div class='line' id='LC1147'>			// Control if a given callback is in the list</div><div class='line' id='LC1148'>			has: function( fn ) {</div><div class='line' id='LC1149'>				if ( list ) {</div><div class='line' id='LC1150'>					var i = 0,</div><div class='line' id='LC1151'>						length = list.length;</div><div class='line' id='LC1152'>					for ( ; i &lt; length; i++ ) {</div><div class='line' id='LC1153'>						if ( fn === list[ i ] ) {</div><div class='line' id='LC1154'>							return true;</div><div class='line' id='LC1155'>						}</div><div class='line' id='LC1156'>					}</div><div class='line' id='LC1157'>				}</div><div class='line' id='LC1158'>				return false;</div><div class='line' id='LC1159'>			},</div><div class='line' id='LC1160'>			// Remove all callbacks from the list</div><div class='line' id='LC1161'>			empty: function() {</div><div class='line' id='LC1162'>				list = [];</div><div class='line' id='LC1163'>				return this;</div><div class='line' id='LC1164'>			},</div><div class='line' id='LC1165'>			// Have the list do nothing anymore</div><div class='line' id='LC1166'>			disable: function() {</div><div class='line' id='LC1167'>				list = stack = memory = undefined;</div><div class='line' id='LC1168'>				return this;</div><div class='line' id='LC1169'>			},</div><div class='line' id='LC1170'>			// Is it disabled?</div><div class='line' id='LC1171'>			disabled: function() {</div><div class='line' id='LC1172'>				return !list;</div><div class='line' id='LC1173'>			},</div><div class='line' id='LC1174'>			// Lock the list in its current state</div><div class='line' id='LC1175'>			lock: function() {</div><div class='line' id='LC1176'>				stack = undefined;</div><div class='line' id='LC1177'>				if ( !memory || memory === true ) {</div><div class='line' id='LC1178'>					self.disable();</div><div class='line' id='LC1179'>				}</div><div class='line' id='LC1180'>				return this;</div><div class='line' id='LC1181'>			},</div><div class='line' id='LC1182'>			// Is it locked?</div><div class='line' id='LC1183'>			locked: function() {</div><div class='line' id='LC1184'>				return !stack;</div><div class='line' id='LC1185'>			},</div><div class='line' id='LC1186'>			// Call all callbacks with the given context and arguments</div><div class='line' id='LC1187'>			fireWith: function( context, args ) {</div><div class='line' id='LC1188'>				if ( stack ) {</div><div class='line' id='LC1189'>					if ( firing ) {</div><div class='line' id='LC1190'>						if ( !flags.once ) {</div><div class='line' id='LC1191'>							stack.push( [ context, args ] );</div><div class='line' id='LC1192'>						}</div><div class='line' id='LC1193'>					} else if ( !( flags.once &amp;&amp; memory ) ) {</div><div class='line' id='LC1194'>						fire( context, args );</div><div class='line' id='LC1195'>					}</div><div class='line' id='LC1196'>				}</div><div class='line' id='LC1197'>				return this;</div><div class='line' id='LC1198'>			},</div><div class='line' id='LC1199'>			// Call all the callbacks with the given arguments</div><div class='line' id='LC1200'>			fire: function() {</div><div class='line' id='LC1201'>				self.fireWith( this, arguments );</div><div class='line' id='LC1202'>				return this;</div><div class='line' id='LC1203'>			},</div><div class='line' id='LC1204'>			// To know if the callbacks have already been called at least once</div><div class='line' id='LC1205'>			fired: function() {</div><div class='line' id='LC1206'>				return !!fired;</div><div class='line' id='LC1207'>			}</div><div class='line' id='LC1208'>		};</div><div class='line' id='LC1209'><br/></div><div class='line' id='LC1210'>	return self;</div><div class='line' id='LC1211'>};</div><div class='line' id='LC1212'><br/></div><div class='line' id='LC1213'><br/></div><div class='line' id='LC1214'><br/></div><div class='line' id='LC1215'><br/></div><div class='line' id='LC1216'>var // Static reference to slice</div><div class='line' id='LC1217'>	sliceDeferred = [].slice;</div><div class='line' id='LC1218'><br/></div><div class='line' id='LC1219'>jQuery.extend({</div><div class='line' id='LC1220'><br/></div><div class='line' id='LC1221'>	Deferred: function( func ) {</div><div class='line' id='LC1222'>		var doneList = jQuery.Callbacks( &quot;once memory&quot; ),</div><div class='line' id='LC1223'>			failList = jQuery.Callbacks( &quot;once memory&quot; ),</div><div class='line' id='LC1224'>			progressList = jQuery.Callbacks( &quot;memory&quot; ),</div><div class='line' id='LC1225'>			state = &quot;pending&quot;,</div><div class='line' id='LC1226'>			lists = {</div><div class='line' id='LC1227'>				resolve: doneList,</div><div class='line' id='LC1228'>				reject: failList,</div><div class='line' id='LC1229'>				notify: progressList</div><div class='line' id='LC1230'>			},</div><div class='line' id='LC1231'>			promise = {</div><div class='line' id='LC1232'>				done: doneList.add,</div><div class='line' id='LC1233'>				fail: failList.add,</div><div class='line' id='LC1234'>				progress: progressList.add,</div><div class='line' id='LC1235'><br/></div><div class='line' id='LC1236'>				state: function() {</div><div class='line' id='LC1237'>					return state;</div><div class='line' id='LC1238'>				},</div><div class='line' id='LC1239'><br/></div><div class='line' id='LC1240'>				// Deprecated</div><div class='line' id='LC1241'>				isResolved: doneList.fired,</div><div class='line' id='LC1242'>				isRejected: failList.fired,</div><div class='line' id='LC1243'><br/></div><div class='line' id='LC1244'>				then: function( doneCallbacks, failCallbacks, progressCallbacks ) {</div><div class='line' id='LC1245'>					deferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );</div><div class='line' id='LC1246'>					return this;</div><div class='line' id='LC1247'>				},</div><div class='line' id='LC1248'>				always: function() {</div><div class='line' id='LC1249'>					deferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );</div><div class='line' id='LC1250'>					return this;</div><div class='line' id='LC1251'>				},</div><div class='line' id='LC1252'>				pipe: function( fnDone, fnFail, fnProgress ) {</div><div class='line' id='LC1253'>					return jQuery.Deferred(function( newDefer ) {</div><div class='line' id='LC1254'>						jQuery.each( {</div><div class='line' id='LC1255'>							done: [ fnDone, &quot;resolve&quot; ],</div><div class='line' id='LC1256'>							fail: [ fnFail, &quot;reject&quot; ],</div><div class='line' id='LC1257'>							progress: [ fnProgress, &quot;notify&quot; ]</div><div class='line' id='LC1258'>						}, function( handler, data ) {</div><div class='line' id='LC1259'>							var fn = data[ 0 ],</div><div class='line' id='LC1260'>								action = data[ 1 ],</div><div class='line' id='LC1261'>								returned;</div><div class='line' id='LC1262'>							if ( jQuery.isFunction( fn ) ) {</div><div class='line' id='LC1263'>								deferred[ handler ](function() {</div><div class='line' id='LC1264'>									returned = fn.apply( this, arguments );</div><div class='line' id='LC1265'>									if ( returned &amp;&amp; jQuery.isFunction( returned.promise ) ) {</div><div class='line' id='LC1266'>										returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );</div><div class='line' id='LC1267'>									} else {</div><div class='line' id='LC1268'>										newDefer[ action + &quot;With&quot; ]( this === deferred ? newDefer : this, [ returned ] );</div><div class='line' id='LC1269'>									}</div><div class='line' id='LC1270'>								});</div><div class='line' id='LC1271'>							} else {</div><div class='line' id='LC1272'>								deferred[ handler ]( newDefer[ action ] );</div><div class='line' id='LC1273'>							}</div><div class='line' id='LC1274'>						});</div><div class='line' id='LC1275'>					}).promise();</div><div class='line' id='LC1276'>				},</div><div class='line' id='LC1277'>				// Get a promise for this deferred</div><div class='line' id='LC1278'>				// If obj is provided, the promise aspect is added to the object</div><div class='line' id='LC1279'>				promise: function( obj ) {</div><div class='line' id='LC1280'>					if ( obj == null ) {</div><div class='line' id='LC1281'>						obj = promise;</div><div class='line' id='LC1282'>					} else {</div><div class='line' id='LC1283'>						for ( var key in promise ) {</div><div class='line' id='LC1284'>							obj[ key ] = promise[ key ];</div><div class='line' id='LC1285'>						}</div><div class='line' id='LC1286'>					}</div><div class='line' id='LC1287'>					return obj;</div><div class='line' id='LC1288'>				}</div><div class='line' id='LC1289'>			},</div><div class='line' id='LC1290'>			deferred = promise.promise({}),</div><div class='line' id='LC1291'>			key;</div><div class='line' id='LC1292'><br/></div><div class='line' id='LC1293'>		for ( key in lists ) {</div><div class='line' id='LC1294'>			deferred[ key ] = lists[ key ].fire;</div><div class='line' id='LC1295'>			deferred[ key + &quot;With&quot; ] = lists[ key ].fireWith;</div><div class='line' id='LC1296'>		}</div><div class='line' id='LC1297'><br/></div><div class='line' id='LC1298'>		// Handle state</div><div class='line' id='LC1299'>		deferred.done( function() {</div><div class='line' id='LC1300'>			state = &quot;resolved&quot;;</div><div class='line' id='LC1301'>		}, failList.disable, progressList.lock ).fail( function() {</div><div class='line' id='LC1302'>			state = &quot;rejected&quot;;</div><div class='line' id='LC1303'>		}, doneList.disable, progressList.lock );</div><div class='line' id='LC1304'><br/></div><div class='line' id='LC1305'>		// Call given func if any</div><div class='line' id='LC1306'>		if ( func ) {</div><div class='line' id='LC1307'>			func.call( deferred, deferred );</div><div class='line' id='LC1308'>		}</div><div class='line' id='LC1309'><br/></div><div class='line' id='LC1310'>		// All done!</div><div class='line' id='LC1311'>		return deferred;</div><div class='line' id='LC1312'>	},</div><div class='line' id='LC1313'><br/></div><div class='line' id='LC1314'>	// Deferred helper</div><div class='line' id='LC1315'>	when: function( firstParam ) {</div><div class='line' id='LC1316'>		var args = sliceDeferred.call( arguments, 0 ),</div><div class='line' id='LC1317'>			i = 0,</div><div class='line' id='LC1318'>			length = args.length,</div><div class='line' id='LC1319'>			pValues = new Array( length ),</div><div class='line' id='LC1320'>			count = length,</div><div class='line' id='LC1321'>			pCount = length,</div><div class='line' id='LC1322'>			deferred = length &lt;= 1 &amp;&amp; firstParam &amp;&amp; jQuery.isFunction( firstParam.promise ) ?</div><div class='line' id='LC1323'>				firstParam :</div><div class='line' id='LC1324'>				jQuery.Deferred(),</div><div class='line' id='LC1325'>			promise = deferred.promise();</div><div class='line' id='LC1326'>		function resolveFunc( i ) {</div><div class='line' id='LC1327'>			return function( value ) {</div><div class='line' id='LC1328'>				args[ i ] = arguments.length &gt; 1 ? sliceDeferred.call( arguments, 0 ) : value;</div><div class='line' id='LC1329'>				if ( !( --count ) ) {</div><div class='line' id='LC1330'>					deferred.resolveWith( deferred, args );</div><div class='line' id='LC1331'>				}</div><div class='line' id='LC1332'>			};</div><div class='line' id='LC1333'>		}</div><div class='line' id='LC1334'>		function progressFunc( i ) {</div><div class='line' id='LC1335'>			return function( value ) {</div><div class='line' id='LC1336'>				pValues[ i ] = arguments.length &gt; 1 ? sliceDeferred.call( arguments, 0 ) : value;</div><div class='line' id='LC1337'>				deferred.notifyWith( promise, pValues );</div><div class='line' id='LC1338'>			};</div><div class='line' id='LC1339'>		}</div><div class='line' id='LC1340'>		if ( length &gt; 1 ) {</div><div class='line' id='LC1341'>			for ( ; i &lt; length; i++ ) {</div><div class='line' id='LC1342'>				if ( args[ i ] &amp;&amp; args[ i ].promise &amp;&amp; jQuery.isFunction( args[ i ].promise ) ) {</div><div class='line' id='LC1343'>					args[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );</div><div class='line' id='LC1344'>				} else {</div><div class='line' id='LC1345'>					--count;</div><div class='line' id='LC1346'>				}</div><div class='line' id='LC1347'>			}</div><div class='line' id='LC1348'>			if ( !count ) {</div><div class='line' id='LC1349'>				deferred.resolveWith( deferred, args );</div><div class='line' id='LC1350'>			}</div><div class='line' id='LC1351'>		} else if ( deferred !== firstParam ) {</div><div class='line' id='LC1352'>			deferred.resolveWith( deferred, length ? [ firstParam ] : [] );</div><div class='line' id='LC1353'>		}</div><div class='line' id='LC1354'>		return promise;</div><div class='line' id='LC1355'>	}</div><div class='line' id='LC1356'>});</div><div class='line' id='LC1357'><br/></div><div class='line' id='LC1358'><br/></div><div class='line' id='LC1359'><br/></div><div class='line' id='LC1360'><br/></div><div class='line' id='LC1361'>jQuery.support = (function() {</div><div class='line' id='LC1362'><br/></div><div class='line' id='LC1363'>	var support,</div><div class='line' id='LC1364'>		all,</div><div class='line' id='LC1365'>		a,</div><div class='line' id='LC1366'>		select,</div><div class='line' id='LC1367'>		opt,</div><div class='line' id='LC1368'>		input,</div><div class='line' id='LC1369'>		fragment,</div><div class='line' id='LC1370'>		tds,</div><div class='line' id='LC1371'>		events,</div><div class='line' id='LC1372'>		eventName,</div><div class='line' id='LC1373'>		i,</div><div class='line' id='LC1374'>		isSupported,</div><div class='line' id='LC1375'>		div = document.createElement( &quot;div&quot; ),</div><div class='line' id='LC1376'>		documentElement = document.documentElement;</div><div class='line' id='LC1377'><br/></div><div class='line' id='LC1378'>	// Preliminary tests</div><div class='line' id='LC1379'>	div.setAttribute(&quot;className&quot;, &quot;t&quot;);</div><div class='line' id='LC1380'>	div.innerHTML = &quot;   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=&#39;/a&#39; style=&#39;top:1px;float:left;opacity:.55;&#39;&gt;a&lt;/a&gt;&lt;input type=&#39;checkbox&#39;/&gt;&quot;;</div><div class='line' id='LC1381'><br/></div><div class='line' id='LC1382'>	all = div.getElementsByTagName( &quot;*&quot; );</div><div class='line' id='LC1383'>	a = div.getElementsByTagName( &quot;a&quot; )[ 0 ];</div><div class='line' id='LC1384'><br/></div><div class='line' id='LC1385'>	// Can&#39;t get basic test support</div><div class='line' id='LC1386'>	if ( !all || !all.length || !a ) {</div><div class='line' id='LC1387'>		return {};</div><div class='line' id='LC1388'>	}</div><div class='line' id='LC1389'><br/></div><div class='line' id='LC1390'>	// First batch of supports tests</div><div class='line' id='LC1391'>	select = document.createElement( &quot;select&quot; );</div><div class='line' id='LC1392'>	opt = select.appendChild( document.createElement(&quot;option&quot;) );</div><div class='line' id='LC1393'>	input = div.getElementsByTagName( &quot;input&quot; )[ 0 ];</div><div class='line' id='LC1394'><br/></div><div class='line' id='LC1395'>	support = {</div><div class='line' id='LC1396'>		// IE strips leading whitespace when .innerHTML is used</div><div class='line' id='LC1397'>		leadingWhitespace: ( div.firstChild.nodeType === 3 ),</div><div class='line' id='LC1398'><br/></div><div class='line' id='LC1399'>		// Make sure that tbody elements aren&#39;t automatically inserted</div><div class='line' id='LC1400'>		// IE will insert them into empty tables</div><div class='line' id='LC1401'>		tbody: !div.getElementsByTagName(&quot;tbody&quot;).length,</div><div class='line' id='LC1402'><br/></div><div class='line' id='LC1403'>		// Make sure that link elements get serialized correctly by innerHTML</div><div class='line' id='LC1404'>		// This requires a wrapper element in IE</div><div class='line' id='LC1405'>		htmlSerialize: !!div.getElementsByTagName(&quot;link&quot;).length,</div><div class='line' id='LC1406'><br/></div><div class='line' id='LC1407'>		// Get the style information from getAttribute</div><div class='line' id='LC1408'>		// (IE uses .cssText instead)</div><div class='line' id='LC1409'>		style: /top/.test( a.getAttribute(&quot;style&quot;) ),</div><div class='line' id='LC1410'><br/></div><div class='line' id='LC1411'>		// Make sure that URLs aren&#39;t manipulated</div><div class='line' id='LC1412'>		// (IE normalizes it by default)</div><div class='line' id='LC1413'>		hrefNormalized: ( a.getAttribute(&quot;href&quot;) === &quot;/a&quot; ),</div><div class='line' id='LC1414'><br/></div><div class='line' id='LC1415'>		// Make sure that element opacity exists</div><div class='line' id='LC1416'>		// (IE uses filter instead)</div><div class='line' id='LC1417'>		// Use a regex to work around a WebKit issue. See #5145</div><div class='line' id='LC1418'>		opacity: /^0.55/.test( a.style.opacity ),</div><div class='line' id='LC1419'><br/></div><div class='line' id='LC1420'>		// Verify style float existence</div><div class='line' id='LC1421'>		// (IE uses styleFloat instead of cssFloat)</div><div class='line' id='LC1422'>		cssFloat: !!a.style.cssFloat,</div><div class='line' id='LC1423'><br/></div><div class='line' id='LC1424'>		// Make sure that if no value is specified for a checkbox</div><div class='line' id='LC1425'>		// that it defaults to &quot;on&quot;.</div><div class='line' id='LC1426'>		// (WebKit defaults to &quot;&quot; instead)</div><div class='line' id='LC1427'>		checkOn: ( input.value === &quot;on&quot; ),</div><div class='line' id='LC1428'><br/></div><div class='line' id='LC1429'>		// Make sure that a selected-by-default option has a working selected property.</div><div class='line' id='LC1430'>		// (WebKit defaults to false instead of true, IE too, if it&#39;s in an optgroup)</div><div class='line' id='LC1431'>		optSelected: opt.selected,</div><div class='line' id='LC1432'><br/></div><div class='line' id='LC1433'>		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)</div><div class='line' id='LC1434'>		getSetAttribute: div.className !== &quot;t&quot;,</div><div class='line' id='LC1435'><br/></div><div class='line' id='LC1436'>		// Tests for enctype support on a form(#6743)</div><div class='line' id='LC1437'>		enctype: !!document.createElement(&quot;form&quot;).enctype,</div><div class='line' id='LC1438'><br/></div><div class='line' id='LC1439'>		// Makes sure cloning an html5 element does not cause problems</div><div class='line' id='LC1440'>		// Where outerHTML is undefined, this still works</div><div class='line' id='LC1441'>		html5Clone: document.createElement(&quot;nav&quot;).cloneNode( true ).outerHTML !== &quot;&lt;:nav&gt;&lt;/:nav&gt;&quot;,</div><div class='line' id='LC1442'><br/></div><div class='line' id='LC1443'>		// Will be defined later</div><div class='line' id='LC1444'>		submitBubbles: true,</div><div class='line' id='LC1445'>		changeBubbles: true,</div><div class='line' id='LC1446'>		focusinBubbles: false,</div><div class='line' id='LC1447'>		deleteExpando: true,</div><div class='line' id='LC1448'>		noCloneEvent: true,</div><div class='line' id='LC1449'>		inlineBlockNeedsLayout: false,</div><div class='line' id='LC1450'>		shrinkWrapBlocks: false,</div><div class='line' id='LC1451'>		reliableMarginRight: true,</div><div class='line' id='LC1452'>		pixelMargin: true</div><div class='line' id='LC1453'>	};</div><div class='line' id='LC1454'><br/></div><div class='line' id='LC1455'>	// jQuery.boxModel DEPRECATED in 1.3, use jQuery.support.boxModel instead</div><div class='line' id='LC1456'>	jQuery.boxModel = support.boxModel = (document.compatMode === &quot;CSS1Compat&quot;);</div><div class='line' id='LC1457'><br/></div><div class='line' id='LC1458'>	// Make sure checked status is properly cloned</div><div class='line' id='LC1459'>	input.checked = true;</div><div class='line' id='LC1460'>	support.noCloneChecked = input.cloneNode( true ).checked;</div><div class='line' id='LC1461'><br/></div><div class='line' id='LC1462'>	// Make sure that the options inside disabled selects aren&#39;t marked as disabled</div><div class='line' id='LC1463'>	// (WebKit marks them as disabled)</div><div class='line' id='LC1464'>	select.disabled = true;</div><div class='line' id='LC1465'>	support.optDisabled = !opt.disabled;</div><div class='line' id='LC1466'><br/></div><div class='line' id='LC1467'>	// Test to see if it&#39;s possible to delete an expando from an element</div><div class='line' id='LC1468'>	// Fails in Internet Explorer</div><div class='line' id='LC1469'>	try {</div><div class='line' id='LC1470'>		delete div.test;</div><div class='line' id='LC1471'>	} catch( e ) {</div><div class='line' id='LC1472'>		support.deleteExpando = false;</div><div class='line' id='LC1473'>	}</div><div class='line' id='LC1474'><br/></div><div class='line' id='LC1475'>	if ( !div.addEventListener &amp;&amp; div.attachEvent &amp;&amp; div.fireEvent ) {</div><div class='line' id='LC1476'>		div.attachEvent( &quot;onclick&quot;, function() {</div><div class='line' id='LC1477'>			// Cloning a node shouldn&#39;t copy over any</div><div class='line' id='LC1478'>			// bound event handlers (IE does this)</div><div class='line' id='LC1479'>			support.noCloneEvent = false;</div><div class='line' id='LC1480'>		});</div><div class='line' id='LC1481'>		div.cloneNode( true ).fireEvent( &quot;onclick&quot; );</div><div class='line' id='LC1482'>	}</div><div class='line' id='LC1483'><br/></div><div class='line' id='LC1484'>	// Check if a radio maintains its value</div><div class='line' id='LC1485'>	// after being appended to the DOM</div><div class='line' id='LC1486'>	input = document.createElement(&quot;input&quot;);</div><div class='line' id='LC1487'>	input.value = &quot;t&quot;;</div><div class='line' id='LC1488'>	input.setAttribute(&quot;type&quot;, &quot;radio&quot;);</div><div class='line' id='LC1489'>	support.radioValue = input.value === &quot;t&quot;;</div><div class='line' id='LC1490'><br/></div><div class='line' id='LC1491'>	input.setAttribute(&quot;checked&quot;, &quot;checked&quot;);</div><div class='line' id='LC1492'><br/></div><div class='line' id='LC1493'>	// #11217 - WebKit loses check when the name is after the checked attribute</div><div class='line' id='LC1494'>	input.setAttribute( &quot;name&quot;, &quot;t&quot; );</div><div class='line' id='LC1495'><br/></div><div class='line' id='LC1496'>	div.appendChild( input );</div><div class='line' id='LC1497'>	fragment = document.createDocumentFragment();</div><div class='line' id='LC1498'>	fragment.appendChild( div.lastChild );</div><div class='line' id='LC1499'><br/></div><div class='line' id='LC1500'>	// WebKit doesn&#39;t clone checked state correctly in fragments</div><div class='line' id='LC1501'>	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;</div><div class='line' id='LC1502'><br/></div><div class='line' id='LC1503'>	// Check if a disconnected checkbox will retain its checked</div><div class='line' id='LC1504'>	// value of true after appended to the DOM (IE6/7)</div><div class='line' id='LC1505'>	support.appendChecked = input.checked;</div><div class='line' id='LC1506'><br/></div><div class='line' id='LC1507'>	fragment.removeChild( input );</div><div class='line' id='LC1508'>	fragment.appendChild( div );</div><div class='line' id='LC1509'><br/></div><div class='line' id='LC1510'>	// Technique from Juriy Zaytsev</div><div class='line' id='LC1511'>	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/</div><div class='line' id='LC1512'>	// We only care about the case where non-standard event systems</div><div class='line' id='LC1513'>	// are used, namely in IE. Short-circuiting here helps us to</div><div class='line' id='LC1514'>	// avoid an eval call (in setAttribute) which can cause CSP</div><div class='line' id='LC1515'>	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP</div><div class='line' id='LC1516'>	if ( div.attachEvent ) {</div><div class='line' id='LC1517'>		for ( i in {</div><div class='line' id='LC1518'>			submit: 1,</div><div class='line' id='LC1519'>			change: 1,</div><div class='line' id='LC1520'>			focusin: 1</div><div class='line' id='LC1521'>		}) {</div><div class='line' id='LC1522'>			eventName = &quot;on&quot; + i;</div><div class='line' id='LC1523'>			isSupported = ( eventName in div );</div><div class='line' id='LC1524'>			if ( !isSupported ) {</div><div class='line' id='LC1525'>				div.setAttribute( eventName, &quot;return;&quot; );</div><div class='line' id='LC1526'>				isSupported = ( typeof div[ eventName ] === &quot;function&quot; );</div><div class='line' id='LC1527'>			}</div><div class='line' id='LC1528'>			support[ i + &quot;Bubbles&quot; ] = isSupported;</div><div class='line' id='LC1529'>		}</div><div class='line' id='LC1530'>	}</div><div class='line' id='LC1531'><br/></div><div class='line' id='LC1532'>	fragment.removeChild( div );</div><div class='line' id='LC1533'><br/></div><div class='line' id='LC1534'>	// Null elements to avoid leaks in IE</div><div class='line' id='LC1535'>	fragment = select = opt = div = input = null;</div><div class='line' id='LC1536'><br/></div><div class='line' id='LC1537'>	// Run tests that need a body at doc ready</div><div class='line' id='LC1538'>	jQuery(function() {</div><div class='line' id='LC1539'>		var container, outer, inner, table, td, offsetSupport,</div><div class='line' id='LC1540'>			marginDiv, conMarginTop, style, html, positionTopLeftWidthHeight,</div><div class='line' id='LC1541'>			paddingMarginBorderVisibility, paddingMarginBorder,</div><div class='line' id='LC1542'>			body = document.getElementsByTagName(&quot;body&quot;)[0];</div><div class='line' id='LC1543'><br/></div><div class='line' id='LC1544'>		if ( !body ) {</div><div class='line' id='LC1545'>			// Return for frameset docs that don&#39;t have a body</div><div class='line' id='LC1546'>			return;</div><div class='line' id='LC1547'>		}</div><div class='line' id='LC1548'><br/></div><div class='line' id='LC1549'>		conMarginTop = 1;</div><div class='line' id='LC1550'>		paddingMarginBorder = &quot;padding:0;margin:0;border:&quot;;</div><div class='line' id='LC1551'>		positionTopLeftWidthHeight = &quot;position:absolute;top:0;left:0;width:1px;height:1px;&quot;;</div><div class='line' id='LC1552'>		paddingMarginBorderVisibility = paddingMarginBorder + &quot;0;visibility:hidden;&quot;;</div><div class='line' id='LC1553'>		style = &quot;style=&#39;&quot; + positionTopLeftWidthHeight + paddingMarginBorder + &quot;5px solid #000;&quot;;</div><div class='line' id='LC1554'>		html = &quot;&lt;div &quot; + style + &quot;display:block;&#39;&gt;&lt;div style=&#39;&quot; + paddingMarginBorder + &quot;0;display:block;overflow:hidden;&#39;&gt;&lt;/div&gt;&lt;/div&gt;&quot; +</div><div class='line' id='LC1555'>			&quot;&lt;table &quot; + style + &quot;&#39; cellpadding=&#39;0&#39; cellspacing=&#39;0&#39;&gt;&quot; +</div><div class='line' id='LC1556'>			&quot;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;;</div><div class='line' id='LC1557'><br/></div><div class='line' id='LC1558'>		container = document.createElement(&quot;div&quot;);</div><div class='line' id='LC1559'>		container.style.cssText = paddingMarginBorderVisibility + &quot;width:0;height:0;position:static;top:0;margin-top:&quot; + conMarginTop + &quot;px&quot;;</div><div class='line' id='LC1560'>		body.insertBefore( container, body.firstChild );</div><div class='line' id='LC1561'><br/></div><div class='line' id='LC1562'>		// Construct the test element</div><div class='line' id='LC1563'>		div = document.createElement(&quot;div&quot;);</div><div class='line' id='LC1564'>		container.appendChild( div );</div><div class='line' id='LC1565'><br/></div><div class='line' id='LC1566'>		// Check if table cells still have offsetWidth/Height when they are set</div><div class='line' id='LC1567'>		// to display:none and there are still other visible table cells in a</div><div class='line' id='LC1568'>		// table row; if so, offsetWidth/Height are not reliable for use when</div><div class='line' id='LC1569'>		// determining if an element has been hidden directly using</div><div class='line' id='LC1570'>		// display:none (it is still safe to use offsets if a parent element is</div><div class='line' id='LC1571'>		// hidden; don safety goggles and see bug #4512 for more information).</div><div class='line' id='LC1572'>		// (only IE 8 fails this test)</div><div class='line' id='LC1573'>		div.innerHTML = &quot;&lt;table&gt;&lt;tr&gt;&lt;td style=&#39;&quot; + paddingMarginBorder + &quot;0;display:none&#39;&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;;</div><div class='line' id='LC1574'>		tds = div.getElementsByTagName( &quot;td&quot; );</div><div class='line' id='LC1575'>		isSupported = ( tds[ 0 ].offsetHeight === 0 );</div><div class='line' id='LC1576'><br/></div><div class='line' id='LC1577'>		tds[ 0 ].style.display = &quot;&quot;;</div><div class='line' id='LC1578'>		tds[ 1 ].style.display = &quot;none&quot;;</div><div class='line' id='LC1579'><br/></div><div class='line' id='LC1580'>		// Check if empty table cells still have offsetWidth/Height</div><div class='line' id='LC1581'>		// (IE &lt;= 8 fail this test)</div><div class='line' id='LC1582'>		support.reliableHiddenOffsets = isSupported &amp;&amp; ( tds[ 0 ].offsetHeight === 0 );</div><div class='line' id='LC1583'><br/></div><div class='line' id='LC1584'>		// Check if div with explicit width and no margin-right incorrectly</div><div class='line' id='LC1585'>		// gets computed margin-right based on width of container. For more</div><div class='line' id='LC1586'>		// info see bug #3333</div><div class='line' id='LC1587'>		// Fails in WebKit before Feb 2011 nightlies</div><div class='line' id='LC1588'>		// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right</div><div class='line' id='LC1589'>		if ( window.getComputedStyle ) {</div><div class='line' id='LC1590'>			div.innerHTML = &quot;&quot;;</div><div class='line' id='LC1591'>			marginDiv = document.createElement( &quot;div&quot; );</div><div class='line' id='LC1592'>			marginDiv.style.width = &quot;0&quot;;</div><div class='line' id='LC1593'>			marginDiv.style.marginRight = &quot;0&quot;;</div><div class='line' id='LC1594'>			div.style.width = &quot;2px&quot;;</div><div class='line' id='LC1595'>			div.appendChild( marginDiv );</div><div class='line' id='LC1596'>			support.reliableMarginRight =</div><div class='line' id='LC1597'>				( parseInt( ( window.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;</div><div class='line' id='LC1598'>		}</div><div class='line' id='LC1599'><br/></div><div class='line' id='LC1600'>		if ( typeof div.style.zoom !== &quot;undefined&quot; ) {</div><div class='line' id='LC1601'>			// Check if natively block-level elements act like inline-block</div><div class='line' id='LC1602'>			// elements when setting their display to &#39;inline&#39; and giving</div><div class='line' id='LC1603'>			// them layout</div><div class='line' id='LC1604'>			// (IE &lt; 8 does this)</div><div class='line' id='LC1605'>			div.innerHTML = &quot;&quot;;</div><div class='line' id='LC1606'>			div.style.width = div.style.padding = &quot;1px&quot;;</div><div class='line' id='LC1607'>			div.style.border = 0;</div><div class='line' id='LC1608'>			div.style.overflow = &quot;hidden&quot;;</div><div class='line' id='LC1609'>			div.style.display = &quot;inline&quot;;</div><div class='line' id='LC1610'>			div.style.zoom = 1;</div><div class='line' id='LC1611'>			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );</div><div class='line' id='LC1612'><br/></div><div class='line' id='LC1613'>			// Check if elements with layout shrink-wrap their children</div><div class='line' id='LC1614'>			// (IE 6 does this)</div><div class='line' id='LC1615'>			div.style.display = &quot;block&quot;;</div><div class='line' id='LC1616'>			div.style.overflow = &quot;visible&quot;;</div><div class='line' id='LC1617'>			div.innerHTML = &quot;&lt;div style=&#39;width:5px;&#39;&gt;&lt;/div&gt;&quot;;</div><div class='line' id='LC1618'>			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );</div><div class='line' id='LC1619'>		}</div><div class='line' id='LC1620'><br/></div><div class='line' id='LC1621'>		div.style.cssText = positionTopLeftWidthHeight + paddingMarginBorderVisibility;</div><div class='line' id='LC1622'>		div.innerHTML = html;</div><div class='line' id='LC1623'><br/></div><div class='line' id='LC1624'>		outer = div.firstChild;</div><div class='line' id='LC1625'>		inner = outer.firstChild;</div><div class='line' id='LC1626'>		td = outer.nextSibling.firstChild.firstChild;</div><div class='line' id='LC1627'><br/></div><div class='line' id='LC1628'>		offsetSupport = {</div><div class='line' id='LC1629'>			doesNotAddBorder: ( inner.offsetTop !== 5 ),</div><div class='line' id='LC1630'>			doesAddBorderForTableAndCells: ( td.offsetTop === 5 )</div><div class='line' id='LC1631'>		};</div><div class='line' id='LC1632'><br/></div><div class='line' id='LC1633'>		inner.style.position = &quot;fixed&quot;;</div><div class='line' id='LC1634'>		inner.style.top = &quot;20px&quot;;</div><div class='line' id='LC1635'><br/></div><div class='line' id='LC1636'>		// safari subtracts parent border width here which is 5px</div><div class='line' id='LC1637'>		offsetSupport.fixedPosition = ( inner.offsetTop === 20 || inner.offsetTop === 15 );</div><div class='line' id='LC1638'>		inner.style.position = inner.style.top = &quot;&quot;;</div><div class='line' id='LC1639'><br/></div><div class='line' id='LC1640'>		outer.style.overflow = &quot;hidden&quot;;</div><div class='line' id='LC1641'>		outer.style.position = &quot;relative&quot;;</div><div class='line' id='LC1642'><br/></div><div class='line' id='LC1643'>		offsetSupport.subtractsBorderForOverflowNotVisible = ( inner.offsetTop === -5 );</div><div class='line' id='LC1644'>		offsetSupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== conMarginTop );</div><div class='line' id='LC1645'><br/></div><div class='line' id='LC1646'>		if ( window.getComputedStyle ) {</div><div class='line' id='LC1647'>			div.style.marginTop = &quot;1%&quot;;</div><div class='line' id='LC1648'>			support.pixelMargin = ( window.getComputedStyle( div, null ) || { marginTop: 0 } ).marginTop !== &quot;1%&quot;;</div><div class='line' id='LC1649'>		}</div><div class='line' id='LC1650'><br/></div><div class='line' id='LC1651'>		if ( typeof container.style.zoom !== &quot;undefined&quot; ) {</div><div class='line' id='LC1652'>			container.style.zoom = 1;</div><div class='line' id='LC1653'>		}</div><div class='line' id='LC1654'><br/></div><div class='line' id='LC1655'>		body.removeChild( container );</div><div class='line' id='LC1656'>		marginDiv = div = container = null;</div><div class='line' id='LC1657'><br/></div><div class='line' id='LC1658'>		jQuery.extend( support, offsetSupport );</div><div class='line' id='LC1659'>	});</div><div class='line' id='LC1660'><br/></div><div class='line' id='LC1661'>	return support;</div><div class='line' id='LC1662'>})();</div><div class='line' id='LC1663'><br/></div><div class='line' id='LC1664'><br/></div><div class='line' id='LC1665'><br/></div><div class='line' id='LC1666'><br/></div><div class='line' id='LC1667'>var rbrace = /^(?:\{.*\}|\[.*\])$/,</div><div class='line' id='LC1668'>	rmultiDash = /([A-Z])/g;</div><div class='line' id='LC1669'><br/></div><div class='line' id='LC1670'>jQuery.extend({</div><div class='line' id='LC1671'>	cache: {},</div><div class='line' id='LC1672'><br/></div><div class='line' id='LC1673'>	// Please use with caution</div><div class='line' id='LC1674'>	uuid: 0,</div><div class='line' id='LC1675'><br/></div><div class='line' id='LC1676'>	// Unique for each copy of jQuery on the page</div><div class='line' id='LC1677'>	// Non-digits removed to match rinlinejQuery</div><div class='line' id='LC1678'>	expando: &quot;jQuery&quot; + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, &quot;&quot; ),</div><div class='line' id='LC1679'><br/></div><div class='line' id='LC1680'>	// The following elements throw uncatchable exceptions if you</div><div class='line' id='LC1681'>	// attempt to add expando properties to them.</div><div class='line' id='LC1682'>	noData: {</div><div class='line' id='LC1683'>		&quot;embed&quot;: true,</div><div class='line' id='LC1684'>		// Ban all objects except for Flash (which handle expandos)</div><div class='line' id='LC1685'>		&quot;object&quot;: &quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;,</div><div class='line' id='LC1686'>		&quot;applet&quot;: true</div><div class='line' id='LC1687'>	},</div><div class='line' id='LC1688'><br/></div><div class='line' id='LC1689'>	hasData: function( elem ) {</div><div class='line' id='LC1690'>		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];</div><div class='line' id='LC1691'>		return !!elem &amp;&amp; !isEmptyDataObject( elem );</div><div class='line' id='LC1692'>	},</div><div class='line' id='LC1693'><br/></div><div class='line' id='LC1694'>	data: function( elem, name, data, pvt /* Internal Use Only */ ) {</div><div class='line' id='LC1695'>		if ( !jQuery.acceptData( elem ) ) {</div><div class='line' id='LC1696'>			return;</div><div class='line' id='LC1697'>		}</div><div class='line' id='LC1698'><br/></div><div class='line' id='LC1699'>		var privateCache, thisCache, ret,</div><div class='line' id='LC1700'>			internalKey = jQuery.expando,</div><div class='line' id='LC1701'>			getByName = typeof name === &quot;string&quot;,</div><div class='line' id='LC1702'><br/></div><div class='line' id='LC1703'>			// We have to handle DOM nodes and JS objects differently because IE6-7</div><div class='line' id='LC1704'>			// can&#39;t GC object references properly across the DOM-JS boundary</div><div class='line' id='LC1705'>			isNode = elem.nodeType,</div><div class='line' id='LC1706'><br/></div><div class='line' id='LC1707'>			// Only DOM nodes need the global jQuery cache; JS object data is</div><div class='line' id='LC1708'>			// attached directly to the object so GC can occur automatically</div><div class='line' id='LC1709'>			cache = isNode ? jQuery.cache : elem,</div><div class='line' id='LC1710'><br/></div><div class='line' id='LC1711'>			// Only defining an ID for JS objects if its cache already exists allows</div><div class='line' id='LC1712'>			// the code to shortcut on the same path as a DOM node with no cache</div><div class='line' id='LC1713'>			id = isNode ? elem[ internalKey ] : elem[ internalKey ] &amp;&amp; internalKey,</div><div class='line' id='LC1714'>			isEvents = name === &quot;events&quot;;</div><div class='line' id='LC1715'><br/></div><div class='line' id='LC1716'>		// Avoid doing any more work than we need to when trying to get data on an</div><div class='line' id='LC1717'>		// object that has no data at all</div><div class='line' id='LC1718'>		if ( (!id || !cache[id] || (!isEvents &amp;&amp; !pvt &amp;&amp; !cache[id].data)) &amp;&amp; getByName &amp;&amp; data === undefined ) {</div><div class='line' id='LC1719'>			return;</div><div class='line' id='LC1720'>		}</div><div class='line' id='LC1721'><br/></div><div class='line' id='LC1722'>		if ( !id ) {</div><div class='line' id='LC1723'>			// Only DOM nodes need a new unique ID for each element since their data</div><div class='line' id='LC1724'>			// ends up in the global cache</div><div class='line' id='LC1725'>			if ( isNode ) {</div><div class='line' id='LC1726'>				elem[ internalKey ] = id = ++jQuery.uuid;</div><div class='line' id='LC1727'>			} else {</div><div class='line' id='LC1728'>				id = internalKey;</div><div class='line' id='LC1729'>			}</div><div class='line' id='LC1730'>		}</div><div class='line' id='LC1731'><br/></div><div class='line' id='LC1732'>		if ( !cache[ id ] ) {</div><div class='line' id='LC1733'>			cache[ id ] = {};</div><div class='line' id='LC1734'><br/></div><div class='line' id='LC1735'>			// Avoids exposing jQuery metadata on plain JS objects when the object</div><div class='line' id='LC1736'>			// is serialized using JSON.stringify</div><div class='line' id='LC1737'>			if ( !isNode ) {</div><div class='line' id='LC1738'>				cache[ id ].toJSON = jQuery.noop;</div><div class='line' id='LC1739'>			}</div><div class='line' id='LC1740'>		}</div><div class='line' id='LC1741'><br/></div><div class='line' id='LC1742'>		// An object can be passed to jQuery.data instead of a key/value pair; this gets</div><div class='line' id='LC1743'>		// shallow copied over onto the existing cache</div><div class='line' id='LC1744'>		if ( typeof name === &quot;object&quot; || typeof name === &quot;function&quot; ) {</div><div class='line' id='LC1745'>			if ( pvt ) {</div><div class='line' id='LC1746'>				cache[ id ] = jQuery.extend( cache[ id ], name );</div><div class='line' id='LC1747'>			} else {</div><div class='line' id='LC1748'>				cache[ id ].data = jQuery.extend( cache[ id ].data, name );</div><div class='line' id='LC1749'>			}</div><div class='line' id='LC1750'>		}</div><div class='line' id='LC1751'><br/></div><div class='line' id='LC1752'>		privateCache = thisCache = cache[ id ];</div><div class='line' id='LC1753'><br/></div><div class='line' id='LC1754'>		// jQuery data() is stored in a separate object inside the object&#39;s internal data</div><div class='line' id='LC1755'>		// cache in order to avoid key collisions between internal data and user-defined</div><div class='line' id='LC1756'>		// data.</div><div class='line' id='LC1757'>		if ( !pvt ) {</div><div class='line' id='LC1758'>			if ( !thisCache.data ) {</div><div class='line' id='LC1759'>				thisCache.data = {};</div><div class='line' id='LC1760'>			}</div><div class='line' id='LC1761'><br/></div><div class='line' id='LC1762'>			thisCache = thisCache.data;</div><div class='line' id='LC1763'>		}</div><div class='line' id='LC1764'><br/></div><div class='line' id='LC1765'>		if ( data !== undefined ) {</div><div class='line' id='LC1766'>			thisCache[ jQuery.camelCase( name ) ] = data;</div><div class='line' id='LC1767'>		}</div><div class='line' id='LC1768'><br/></div><div class='line' id='LC1769'>		// Users should not attempt to inspect the internal events object using jQuery.data,</div><div class='line' id='LC1770'>		// it is undocumented and subject to change. But does anyone listen? No.</div><div class='line' id='LC1771'>		if ( isEvents &amp;&amp; !thisCache[ name ] ) {</div><div class='line' id='LC1772'>			return privateCache.events;</div><div class='line' id='LC1773'>		}</div><div class='line' id='LC1774'><br/></div><div class='line' id='LC1775'>		// Check for both converted-to-camel and non-converted data property names</div><div class='line' id='LC1776'>		// If a data property was specified</div><div class='line' id='LC1777'>		if ( getByName ) {</div><div class='line' id='LC1778'><br/></div><div class='line' id='LC1779'>			// First Try to find as-is property data</div><div class='line' id='LC1780'>			ret = thisCache[ name ];</div><div class='line' id='LC1781'><br/></div><div class='line' id='LC1782'>			// Test for null|undefined property data</div><div class='line' id='LC1783'>			if ( ret == null ) {</div><div class='line' id='LC1784'><br/></div><div class='line' id='LC1785'>				// Try to find the camelCased property</div><div class='line' id='LC1786'>				ret = thisCache[ jQuery.camelCase( name ) ];</div><div class='line' id='LC1787'>			}</div><div class='line' id='LC1788'>		} else {</div><div class='line' id='LC1789'>			ret = thisCache;</div><div class='line' id='LC1790'>		}</div><div class='line' id='LC1791'><br/></div><div class='line' id='LC1792'>		return ret;</div><div class='line' id='LC1793'>	},</div><div class='line' id='LC1794'><br/></div><div class='line' id='LC1795'>	removeData: function( elem, name, pvt /* Internal Use Only */ ) {</div><div class='line' id='LC1796'>		if ( !jQuery.acceptData( elem ) ) {</div><div class='line' id='LC1797'>			return;</div><div class='line' id='LC1798'>		}</div><div class='line' id='LC1799'><br/></div><div class='line' id='LC1800'>		var thisCache, i, l,</div><div class='line' id='LC1801'><br/></div><div class='line' id='LC1802'>			// Reference to internal data cache key</div><div class='line' id='LC1803'>			internalKey = jQuery.expando,</div><div class='line' id='LC1804'><br/></div><div class='line' id='LC1805'>			isNode = elem.nodeType,</div><div class='line' id='LC1806'><br/></div><div class='line' id='LC1807'>			// See jQuery.data for more information</div><div class='line' id='LC1808'>			cache = isNode ? jQuery.cache : elem,</div><div class='line' id='LC1809'><br/></div><div class='line' id='LC1810'>			// See jQuery.data for more information</div><div class='line' id='LC1811'>			id = isNode ? elem[ internalKey ] : internalKey;</div><div class='line' id='LC1812'><br/></div><div class='line' id='LC1813'>		// If there is already no cache entry for this object, there is no</div><div class='line' id='LC1814'>		// purpose in continuing</div><div class='line' id='LC1815'>		if ( !cache[ id ] ) {</div><div class='line' id='LC1816'>			return;</div><div class='line' id='LC1817'>		}</div><div class='line' id='LC1818'><br/></div><div class='line' id='LC1819'>		if ( name ) {</div><div class='line' id='LC1820'><br/></div><div class='line' id='LC1821'>			thisCache = pvt ? cache[ id ] : cache[ id ].data;</div><div class='line' id='LC1822'><br/></div><div class='line' id='LC1823'>			if ( thisCache ) {</div><div class='line' id='LC1824'><br/></div><div class='line' id='LC1825'>				// Support array or space separated string names for data keys</div><div class='line' id='LC1826'>				if ( !jQuery.isArray( name ) ) {</div><div class='line' id='LC1827'><br/></div><div class='line' id='LC1828'>					// try the string as a key before any manipulation</div><div class='line' id='LC1829'>					if ( name in thisCache ) {</div><div class='line' id='LC1830'>						name = [ name ];</div><div class='line' id='LC1831'>					} else {</div><div class='line' id='LC1832'><br/></div><div class='line' id='LC1833'>						// split the camel cased version by spaces unless a key with the spaces exists</div><div class='line' id='LC1834'>						name = jQuery.camelCase( name );</div><div class='line' id='LC1835'>						if ( name in thisCache ) {</div><div class='line' id='LC1836'>							name = [ name ];</div><div class='line' id='LC1837'>						} else {</div><div class='line' id='LC1838'>							name = name.split( &quot; &quot; );</div><div class='line' id='LC1839'>						}</div><div class='line' id='LC1840'>					}</div><div class='line' id='LC1841'>				}</div><div class='line' id='LC1842'><br/></div><div class='line' id='LC1843'>				for ( i = 0, l = name.length; i &lt; l; i++ ) {</div><div class='line' id='LC1844'>					delete thisCache[ name[i] ];</div><div class='line' id='LC1845'>				}</div><div class='line' id='LC1846'><br/></div><div class='line' id='LC1847'>				// If there is no data left in the cache, we want to continue</div><div class='line' id='LC1848'>				// and let the cache object itself get destroyed</div><div class='line' id='LC1849'>				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {</div><div class='line' id='LC1850'>					return;</div><div class='line' id='LC1851'>				}</div><div class='line' id='LC1852'>			}</div><div class='line' id='LC1853'>		}</div><div class='line' id='LC1854'><br/></div><div class='line' id='LC1855'>		// See jQuery.data for more information</div><div class='line' id='LC1856'>		if ( !pvt ) {</div><div class='line' id='LC1857'>			delete cache[ id ].data;</div><div class='line' id='LC1858'><br/></div><div class='line' id='LC1859'>			// Don&#39;t destroy the parent cache unless the internal data object</div><div class='line' id='LC1860'>			// had been the only thing left in it</div><div class='line' id='LC1861'>			if ( !isEmptyDataObject(cache[ id ]) ) {</div><div class='line' id='LC1862'>				return;</div><div class='line' id='LC1863'>			}</div><div class='line' id='LC1864'>		}</div><div class='line' id='LC1865'><br/></div><div class='line' id='LC1866'>		// Browsers that fail expando deletion also refuse to delete expandos on</div><div class='line' id='LC1867'>		// the window, but it will allow it on all other JS objects; other browsers</div><div class='line' id='LC1868'>		// don&#39;t care</div><div class='line' id='LC1869'>		// Ensure that `cache` is not a window object #10080</div><div class='line' id='LC1870'>		if ( jQuery.support.deleteExpando || !cache.setInterval ) {</div><div class='line' id='LC1871'>			delete cache[ id ];</div><div class='line' id='LC1872'>		} else {</div><div class='line' id='LC1873'>			cache[ id ] = null;</div><div class='line' id='LC1874'>		}</div><div class='line' id='LC1875'><br/></div><div class='line' id='LC1876'>		// We destroyed the cache and need to eliminate the expando on the node to avoid</div><div class='line' id='LC1877'>		// false lookups in the cache for entries that no longer exist</div><div class='line' id='LC1878'>		if ( isNode ) {</div><div class='line' id='LC1879'>			// IE does not allow us to delete expando properties from nodes,</div><div class='line' id='LC1880'>			// nor does it have a removeAttribute function on Document nodes;</div><div class='line' id='LC1881'>			// we must handle all of these cases</div><div class='line' id='LC1882'>			if ( jQuery.support.deleteExpando ) {</div><div class='line' id='LC1883'>				delete elem[ internalKey ];</div><div class='line' id='LC1884'>			} else if ( elem.removeAttribute ) {</div><div class='line' id='LC1885'>				elem.removeAttribute( internalKey );</div><div class='line' id='LC1886'>			} else {</div><div class='line' id='LC1887'>				elem[ internalKey ] = null;</div><div class='line' id='LC1888'>			}</div><div class='line' id='LC1889'>		}</div><div class='line' id='LC1890'>	},</div><div class='line' id='LC1891'><br/></div><div class='line' id='LC1892'>	// For internal use only.</div><div class='line' id='LC1893'>	_data: function( elem, name, data ) {</div><div class='line' id='LC1894'>		return jQuery.data( elem, name, data, true );</div><div class='line' id='LC1895'>	},</div><div class='line' id='LC1896'><br/></div><div class='line' id='LC1897'>	// A method for determining if a DOM node can handle the data expando</div><div class='line' id='LC1898'>	acceptData: function( elem ) {</div><div class='line' id='LC1899'>		if ( elem.nodeName ) {</div><div class='line' id='LC1900'>			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];</div><div class='line' id='LC1901'><br/></div><div class='line' id='LC1902'>			if ( match ) {</div><div class='line' id='LC1903'>				return !(match === true || elem.getAttribute(&quot;classid&quot;) !== match);</div><div class='line' id='LC1904'>			}</div><div class='line' id='LC1905'>		}</div><div class='line' id='LC1906'><br/></div><div class='line' id='LC1907'>		return true;</div><div class='line' id='LC1908'>	}</div><div class='line' id='LC1909'>});</div><div class='line' id='LC1910'><br/></div><div class='line' id='LC1911'>jQuery.fn.extend({</div><div class='line' id='LC1912'>	data: function( key, value ) {</div><div class='line' id='LC1913'>		var parts, part, attr, name, l,</div><div class='line' id='LC1914'>			elem = this[0],</div><div class='line' id='LC1915'>			i = 0,</div><div class='line' id='LC1916'>			data = null;</div><div class='line' id='LC1917'><br/></div><div class='line' id='LC1918'>		// Gets all values</div><div class='line' id='LC1919'>		if ( key === undefined ) {</div><div class='line' id='LC1920'>			if ( this.length ) {</div><div class='line' id='LC1921'>				data = jQuery.data( elem );</div><div class='line' id='LC1922'><br/></div><div class='line' id='LC1923'>				if ( elem.nodeType === 1 &amp;&amp; !jQuery._data( elem, &quot;parsedAttrs&quot; ) ) {</div><div class='line' id='LC1924'>					attr = elem.attributes;</div><div class='line' id='LC1925'>					for ( l = attr.length; i &lt; l; i++ ) {</div><div class='line' id='LC1926'>						name = attr[i].name;</div><div class='line' id='LC1927'><br/></div><div class='line' id='LC1928'>						if ( name.indexOf( &quot;data-&quot; ) === 0 ) {</div><div class='line' id='LC1929'>							name = jQuery.camelCase( name.substring(5) );</div><div class='line' id='LC1930'><br/></div><div class='line' id='LC1931'>							dataAttr( elem, name, data[ name ] );</div><div class='line' id='LC1932'>						}</div><div class='line' id='LC1933'>					}</div><div class='line' id='LC1934'>					jQuery._data( elem, &quot;parsedAttrs&quot;, true );</div><div class='line' id='LC1935'>				}</div><div class='line' id='LC1936'>			}</div><div class='line' id='LC1937'><br/></div><div class='line' id='LC1938'>			return data;</div><div class='line' id='LC1939'>		}</div><div class='line' id='LC1940'><br/></div><div class='line' id='LC1941'>		// Sets multiple values</div><div class='line' id='LC1942'>		if ( typeof key === &quot;object&quot; ) {</div><div class='line' id='LC1943'>			return this.each(function() {</div><div class='line' id='LC1944'>				jQuery.data( this, key );</div><div class='line' id='LC1945'>			});</div><div class='line' id='LC1946'>		}</div><div class='line' id='LC1947'><br/></div><div class='line' id='LC1948'>		parts = key.split( &quot;.&quot;, 2 );</div><div class='line' id='LC1949'>		parts[1] = parts[1] ? &quot;.&quot; + parts[1] : &quot;&quot;;</div><div class='line' id='LC1950'>		part = parts[1] + &quot;!&quot;;</div><div class='line' id='LC1951'><br/></div><div class='line' id='LC1952'>		return jQuery.access( this, function( value ) {</div><div class='line' id='LC1953'><br/></div><div class='line' id='LC1954'>			if ( value === undefined ) {</div><div class='line' id='LC1955'>				data = this.triggerHandler( &quot;getData&quot; + part, [ parts[0] ] );</div><div class='line' id='LC1956'><br/></div><div class='line' id='LC1957'>				// Try to fetch any internally stored data first</div><div class='line' id='LC1958'>				if ( data === undefined &amp;&amp; elem ) {</div><div class='line' id='LC1959'>					data = jQuery.data( elem, key );</div><div class='line' id='LC1960'>					data = dataAttr( elem, key, data );</div><div class='line' id='LC1961'>				}</div><div class='line' id='LC1962'><br/></div><div class='line' id='LC1963'>				return data === undefined &amp;&amp; parts[1] ?</div><div class='line' id='LC1964'>					this.data( parts[0] ) :</div><div class='line' id='LC1965'>					data;</div><div class='line' id='LC1966'>			}</div><div class='line' id='LC1967'><br/></div><div class='line' id='LC1968'>			parts[1] = value;</div><div class='line' id='LC1969'>			this.each(function() {</div><div class='line' id='LC1970'>				var self = jQuery( this );</div><div class='line' id='LC1971'><br/></div><div class='line' id='LC1972'>				self.triggerHandler( &quot;setData&quot; + part, parts );</div><div class='line' id='LC1973'>				jQuery.data( this, key, value );</div><div class='line' id='LC1974'>				self.triggerHandler( &quot;changeData&quot; + part, parts );</div><div class='line' id='LC1975'>			});</div><div class='line' id='LC1976'>		}, null, value, arguments.length &gt; 1, null, false );</div><div class='line' id='LC1977'>	},</div><div class='line' id='LC1978'><br/></div><div class='line' id='LC1979'>	removeData: function( key ) {</div><div class='line' id='LC1980'>		return this.each(function() {</div><div class='line' id='LC1981'>			jQuery.removeData( this, key );</div><div class='line' id='LC1982'>		});</div><div class='line' id='LC1983'>	}</div><div class='line' id='LC1984'>});</div><div class='line' id='LC1985'><br/></div><div class='line' id='LC1986'>function dataAttr( elem, key, data ) {</div><div class='line' id='LC1987'>	// If nothing was found internally, try to fetch any</div><div class='line' id='LC1988'>	// data from the HTML5 data-* attribute</div><div class='line' id='LC1989'>	if ( data === undefined &amp;&amp; elem.nodeType === 1 ) {</div><div class='line' id='LC1990'><br/></div><div class='line' id='LC1991'>		var name = &quot;data-&quot; + key.replace( rmultiDash, &quot;-$1&quot; ).toLowerCase();</div><div class='line' id='LC1992'><br/></div><div class='line' id='LC1993'>		data = elem.getAttribute( name );</div><div class='line' id='LC1994'><br/></div><div class='line' id='LC1995'>		if ( typeof data === &quot;string&quot; ) {</div><div class='line' id='LC1996'>			try {</div><div class='line' id='LC1997'>				data = data === &quot;true&quot; ? true :</div><div class='line' id='LC1998'>				data === &quot;false&quot; ? false :</div><div class='line' id='LC1999'>				data === &quot;null&quot; ? null :</div><div class='line' id='LC2000'>				jQuery.isNumeric( data ) ? +data :</div><div class='line' id='LC2001'>					rbrace.test( data ) ? jQuery.parseJSON( data ) :</div><div class='line' id='LC2002'>					data;</div><div class='line' id='LC2003'>			} catch( e ) {}</div><div class='line' id='LC2004'><br/></div><div class='line' id='LC2005'>			// Make sure we set the data so it isn&#39;t changed later</div><div class='line' id='LC2006'>			jQuery.data( elem, key, data );</div><div class='line' id='LC2007'><br/></div><div class='line' id='LC2008'>		} else {</div><div class='line' id='LC2009'>			data = undefined;</div><div class='line' id='LC2010'>		}</div><div class='line' id='LC2011'>	}</div><div class='line' id='LC2012'><br/></div><div class='line' id='LC2013'>	return data;</div><div class='line' id='LC2014'>}</div><div class='line' id='LC2015'><br/></div><div class='line' id='LC2016'>// checks a cache object for emptiness</div><div class='line' id='LC2017'>function isEmptyDataObject( obj ) {</div><div class='line' id='LC2018'>	for ( var name in obj ) {</div><div class='line' id='LC2019'><br/></div><div class='line' id='LC2020'>		// if the public data object is empty, the private is still empty</div><div class='line' id='LC2021'>		if ( name === &quot;data&quot; &amp;&amp; jQuery.isEmptyObject( obj[name] ) ) {</div><div class='line' id='LC2022'>			continue;</div><div class='line' id='LC2023'>		}</div><div class='line' id='LC2024'>		if ( name !== &quot;toJSON&quot; ) {</div><div class='line' id='LC2025'>			return false;</div><div class='line' id='LC2026'>		}</div><div class='line' id='LC2027'>	}</div><div class='line' id='LC2028'><br/></div><div class='line' id='LC2029'>	return true;</div><div class='line' id='LC2030'>}</div><div class='line' id='LC2031'><br/></div><div class='line' id='LC2032'><br/></div><div class='line' id='LC2033'><br/></div><div class='line' id='LC2034'><br/></div><div class='line' id='LC2035'>function handleQueueMarkDefer( elem, type, src ) {</div><div class='line' id='LC2036'>	var deferDataKey = type + &quot;defer&quot;,</div><div class='line' id='LC2037'>		queueDataKey = type + &quot;queue&quot;,</div><div class='line' id='LC2038'>		markDataKey = type + &quot;mark&quot;,</div><div class='line' id='LC2039'>		defer = jQuery._data( elem, deferDataKey );</div><div class='line' id='LC2040'>	if ( defer &amp;&amp;</div><div class='line' id='LC2041'>		( src === &quot;queue&quot; || !jQuery._data(elem, queueDataKey) ) &amp;&amp;</div><div class='line' id='LC2042'>		( src === &quot;mark&quot; || !jQuery._data(elem, markDataKey) ) ) {</div><div class='line' id='LC2043'>		// Give room for hard-coded callbacks to fire first</div><div class='line' id='LC2044'>		// and eventually mark/queue something else on the element</div><div class='line' id='LC2045'>		setTimeout( function() {</div><div class='line' id='LC2046'>			if ( !jQuery._data( elem, queueDataKey ) &amp;&amp;</div><div class='line' id='LC2047'>				!jQuery._data( elem, markDataKey ) ) {</div><div class='line' id='LC2048'>				jQuery.removeData( elem, deferDataKey, true );</div><div class='line' id='LC2049'>				defer.fire();</div><div class='line' id='LC2050'>			}</div><div class='line' id='LC2051'>		}, 0 );</div><div class='line' id='LC2052'>	}</div><div class='line' id='LC2053'>}</div><div class='line' id='LC2054'><br/></div><div class='line' id='LC2055'>jQuery.extend({</div><div class='line' id='LC2056'><br/></div><div class='line' id='LC2057'>	_mark: function( elem, type ) {</div><div class='line' id='LC2058'>		if ( elem ) {</div><div class='line' id='LC2059'>			type = ( type || &quot;fx&quot; ) + &quot;mark&quot;;</div><div class='line' id='LC2060'>			jQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );</div><div class='line' id='LC2061'>		}</div><div class='line' id='LC2062'>	},</div><div class='line' id='LC2063'><br/></div><div class='line' id='LC2064'>	_unmark: function( force, elem, type ) {</div><div class='line' id='LC2065'>		if ( force !== true ) {</div><div class='line' id='LC2066'>			type = elem;</div><div class='line' id='LC2067'>			elem = force;</div><div class='line' id='LC2068'>			force = false;</div><div class='line' id='LC2069'>		}</div><div class='line' id='LC2070'>		if ( elem ) {</div><div class='line' id='LC2071'>			type = type || &quot;fx&quot;;</div><div class='line' id='LC2072'>			var key = type + &quot;mark&quot;,</div><div class='line' id='LC2073'>				count = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );</div><div class='line' id='LC2074'>			if ( count ) {</div><div class='line' id='LC2075'>				jQuery._data( elem, key, count );</div><div class='line' id='LC2076'>			} else {</div><div class='line' id='LC2077'>				jQuery.removeData( elem, key, true );</div><div class='line' id='LC2078'>				handleQueueMarkDefer( elem, type, &quot;mark&quot; );</div><div class='line' id='LC2079'>			}</div><div class='line' id='LC2080'>		}</div><div class='line' id='LC2081'>	},</div><div class='line' id='LC2082'><br/></div><div class='line' id='LC2083'>	queue: function( elem, type, data ) {</div><div class='line' id='LC2084'>		var q;</div><div class='line' id='LC2085'>		if ( elem ) {</div><div class='line' id='LC2086'>			type = ( type || &quot;fx&quot; ) + &quot;queue&quot;;</div><div class='line' id='LC2087'>			q = jQuery._data( elem, type );</div><div class='line' id='LC2088'><br/></div><div class='line' id='LC2089'>			// Speed up dequeue by getting out quickly if this is just a lookup</div><div class='line' id='LC2090'>			if ( data ) {</div><div class='line' id='LC2091'>				if ( !q || jQuery.isArray(data) ) {</div><div class='line' id='LC2092'>					q = jQuery._data( elem, type, jQuery.makeArray(data) );</div><div class='line' id='LC2093'>				} else {</div><div class='line' id='LC2094'>					q.push( data );</div><div class='line' id='LC2095'>				}</div><div class='line' id='LC2096'>			}</div><div class='line' id='LC2097'>			return q || [];</div><div class='line' id='LC2098'>		}</div><div class='line' id='LC2099'>	},</div><div class='line' id='LC2100'><br/></div><div class='line' id='LC2101'>	dequeue: function( elem, type ) {</div><div class='line' id='LC2102'>		type = type || &quot;fx&quot;;</div><div class='line' id='LC2103'><br/></div><div class='line' id='LC2104'>		var queue = jQuery.queue( elem, type ),</div><div class='line' id='LC2105'>			fn = queue.shift(),</div><div class='line' id='LC2106'>			hooks = {};</div><div class='line' id='LC2107'><br/></div><div class='line' id='LC2108'>		// If the fx queue is dequeued, always remove the progress sentinel</div><div class='line' id='LC2109'>		if ( fn === &quot;inprogress&quot; ) {</div><div class='line' id='LC2110'>			fn = queue.shift();</div><div class='line' id='LC2111'>		}</div><div class='line' id='LC2112'><br/></div><div class='line' id='LC2113'>		if ( fn ) {</div><div class='line' id='LC2114'>			// Add a progress sentinel to prevent the fx queue from being</div><div class='line' id='LC2115'>			// automatically dequeued</div><div class='line' id='LC2116'>			if ( type === &quot;fx&quot; ) {</div><div class='line' id='LC2117'>				queue.unshift( &quot;inprogress&quot; );</div><div class='line' id='LC2118'>			}</div><div class='line' id='LC2119'><br/></div><div class='line' id='LC2120'>			jQuery._data( elem, type + &quot;.run&quot;, hooks );</div><div class='line' id='LC2121'>			fn.call( elem, function() {</div><div class='line' id='LC2122'>				jQuery.dequeue( elem, type );</div><div class='line' id='LC2123'>			}, hooks );</div><div class='line' id='LC2124'>		}</div><div class='line' id='LC2125'><br/></div><div class='line' id='LC2126'>		if ( !queue.length ) {</div><div class='line' id='LC2127'>			jQuery.removeData( elem, type + &quot;queue &quot; + type + &quot;.run&quot;, true );</div><div class='line' id='LC2128'>			handleQueueMarkDefer( elem, type, &quot;queue&quot; );</div><div class='line' id='LC2129'>		}</div><div class='line' id='LC2130'>	}</div><div class='line' id='LC2131'>});</div><div class='line' id='LC2132'><br/></div><div class='line' id='LC2133'>jQuery.fn.extend({</div><div class='line' id='LC2134'>	queue: function( type, data ) {</div><div class='line' id='LC2135'>		var setter = 2;</div><div class='line' id='LC2136'><br/></div><div class='line' id='LC2137'>		if ( typeof type !== &quot;string&quot; ) {</div><div class='line' id='LC2138'>			data = type;</div><div class='line' id='LC2139'>			type = &quot;fx&quot;;</div><div class='line' id='LC2140'>			setter--;</div><div class='line' id='LC2141'>		}</div><div class='line' id='LC2142'><br/></div><div class='line' id='LC2143'>		if ( arguments.length &lt; setter ) {</div><div class='line' id='LC2144'>			return jQuery.queue( this[0], type );</div><div class='line' id='LC2145'>		}</div><div class='line' id='LC2146'><br/></div><div class='line' id='LC2147'>		return data === undefined ?</div><div class='line' id='LC2148'>			this :</div><div class='line' id='LC2149'>			this.each(function() {</div><div class='line' id='LC2150'>				var queue = jQuery.queue( this, type, data );</div><div class='line' id='LC2151'><br/></div><div class='line' id='LC2152'>				if ( type === &quot;fx&quot; &amp;&amp; queue[0] !== &quot;inprogress&quot; ) {</div><div class='line' id='LC2153'>					jQuery.dequeue( this, type );</div><div class='line' id='LC2154'>				}</div><div class='line' id='LC2155'>			});</div><div class='line' id='LC2156'>	},</div><div class='line' id='LC2157'>	dequeue: function( type ) {</div><div class='line' id='LC2158'>		return this.each(function() {</div><div class='line' id='LC2159'>			jQuery.dequeue( this, type );</div><div class='line' id='LC2160'>		});</div><div class='line' id='LC2161'>	},</div><div class='line' id='LC2162'>	// Based off of the plugin by Clint Helfers, with permission.</div><div class='line' id='LC2163'>	// http://blindsignals.com/index.php/2009/07/jquery-delay/</div><div class='line' id='LC2164'>	delay: function( time, type ) {</div><div class='line' id='LC2165'>		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;</div><div class='line' id='LC2166'>		type = type || &quot;fx&quot;;</div><div class='line' id='LC2167'><br/></div><div class='line' id='LC2168'>		return this.queue( type, function( next, hooks ) {</div><div class='line' id='LC2169'>			var timeout = setTimeout( next, time );</div><div class='line' id='LC2170'>			hooks.stop = function() {</div><div class='line' id='LC2171'>				clearTimeout( timeout );</div><div class='line' id='LC2172'>			};</div><div class='line' id='LC2173'>		});</div><div class='line' id='LC2174'>	},</div><div class='line' id='LC2175'>	clearQueue: function( type ) {</div><div class='line' id='LC2176'>		return this.queue( type || &quot;fx&quot;, [] );</div><div class='line' id='LC2177'>	},</div><div class='line' id='LC2178'>	// Get a promise resolved when queues of a certain type</div><div class='line' id='LC2179'>	// are emptied (fx is the type by default)</div><div class='line' id='LC2180'>	promise: function( type, object ) {</div><div class='line' id='LC2181'>		if ( typeof type !== &quot;string&quot; ) {</div><div class='line' id='LC2182'>			object = type;</div><div class='line' id='LC2183'>			type = undefined;</div><div class='line' id='LC2184'>		}</div><div class='line' id='LC2185'>		type = type || &quot;fx&quot;;</div><div class='line' id='LC2186'>		var defer = jQuery.Deferred(),</div><div class='line' id='LC2187'>			elements = this,</div><div class='line' id='LC2188'>			i = elements.length,</div><div class='line' id='LC2189'>			count = 1,</div><div class='line' id='LC2190'>			deferDataKey = type + &quot;defer&quot;,</div><div class='line' id='LC2191'>			queueDataKey = type + &quot;queue&quot;,</div><div class='line' id='LC2192'>			markDataKey = type + &quot;mark&quot;,</div><div class='line' id='LC2193'>			tmp;</div><div class='line' id='LC2194'>		function resolve() {</div><div class='line' id='LC2195'>			if ( !( --count ) ) {</div><div class='line' id='LC2196'>				defer.resolveWith( elements, [ elements ] );</div><div class='line' id='LC2197'>			}</div><div class='line' id='LC2198'>		}</div><div class='line' id='LC2199'>		while( i-- ) {</div><div class='line' id='LC2200'>			if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||</div><div class='line' id='LC2201'>					( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||</div><div class='line' id='LC2202'>						jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &amp;&amp;</div><div class='line' id='LC2203'>					jQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( &quot;once memory&quot; ), true ) )) {</div><div class='line' id='LC2204'>				count++;</div><div class='line' id='LC2205'>				tmp.add( resolve );</div><div class='line' id='LC2206'>			}</div><div class='line' id='LC2207'>		}</div><div class='line' id='LC2208'>		resolve();</div><div class='line' id='LC2209'>		return defer.promise( object );</div><div class='line' id='LC2210'>	}</div><div class='line' id='LC2211'>});</div><div class='line' id='LC2212'><br/></div><div class='line' id='LC2213'><br/></div><div class='line' id='LC2214'><br/></div><div class='line' id='LC2215'><br/></div><div class='line' id='LC2216'>var rclass = /[\n\t\r]/g,</div><div class='line' id='LC2217'>	rspace = /\s+/,</div><div class='line' id='LC2218'>	rreturn = /\r/g,</div><div class='line' id='LC2219'>	rtype = /^(?:button|input)$/i,</div><div class='line' id='LC2220'>	rfocusable = /^(?:button|input|object|select|textarea)$/i,</div><div class='line' id='LC2221'>	rclickable = /^a(?:rea)?$/i,</div><div class='line' id='LC2222'>	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,</div><div class='line' id='LC2223'>	getSetAttribute = jQuery.support.getSetAttribute,</div><div class='line' id='LC2224'>	nodeHook, boolHook, fixSpecified;</div><div class='line' id='LC2225'><br/></div><div class='line' id='LC2226'>jQuery.fn.extend({</div><div class='line' id='LC2227'>	attr: function( name, value ) {</div><div class='line' id='LC2228'>		return jQuery.access( this, jQuery.attr, name, value, arguments.length &gt; 1 );</div><div class='line' id='LC2229'>	},</div><div class='line' id='LC2230'><br/></div><div class='line' id='LC2231'>	removeAttr: function( name ) {</div><div class='line' id='LC2232'>		return this.each(function() {</div><div class='line' id='LC2233'>			jQuery.removeAttr( this, name );</div><div class='line' id='LC2234'>		});</div><div class='line' id='LC2235'>	},</div><div class='line' id='LC2236'><br/></div><div class='line' id='LC2237'>	prop: function( name, value ) {</div><div class='line' id='LC2238'>		return jQuery.access( this, jQuery.prop, name, value, arguments.length &gt; 1 );</div><div class='line' id='LC2239'>	},</div><div class='line' id='LC2240'><br/></div><div class='line' id='LC2241'>	removeProp: function( name ) {</div><div class='line' id='LC2242'>		name = jQuery.propFix[ name ] || name;</div><div class='line' id='LC2243'>		return this.each(function() {</div><div class='line' id='LC2244'>			// try/catch handles cases where IE balks (such as removing a property on window)</div><div class='line' id='LC2245'>			try {</div><div class='line' id='LC2246'>				this[ name ] = undefined;</div><div class='line' id='LC2247'>				delete this[ name ];</div><div class='line' id='LC2248'>			} catch( e ) {}</div><div class='line' id='LC2249'>		});</div><div class='line' id='LC2250'>	},</div><div class='line' id='LC2251'><br/></div><div class='line' id='LC2252'>	addClass: function( value ) {</div><div class='line' id='LC2253'>		var classNames, i, l, elem,</div><div class='line' id='LC2254'>			setClass, c, cl;</div><div class='line' id='LC2255'><br/></div><div class='line' id='LC2256'>		if ( jQuery.isFunction( value ) ) {</div><div class='line' id='LC2257'>			return this.each(function( j ) {</div><div class='line' id='LC2258'>				jQuery( this ).addClass( value.call(this, j, this.className) );</div><div class='line' id='LC2259'>			});</div><div class='line' id='LC2260'>		}</div><div class='line' id='LC2261'><br/></div><div class='line' id='LC2262'>		if ( value &amp;&amp; typeof value === &quot;string&quot; ) {</div><div class='line' id='LC2263'>			classNames = value.split( rspace );</div><div class='line' id='LC2264'><br/></div><div class='line' id='LC2265'>			for ( i = 0, l = this.length; i &lt; l; i++ ) {</div><div class='line' id='LC2266'>				elem = this[ i ];</div><div class='line' id='LC2267'><br/></div><div class='line' id='LC2268'>				if ( elem.nodeType === 1 ) {</div><div class='line' id='LC2269'>					if ( !elem.className &amp;&amp; classNames.length === 1 ) {</div><div class='line' id='LC2270'>						elem.className = value;</div><div class='line' id='LC2271'><br/></div><div class='line' id='LC2272'>					} else {</div><div class='line' id='LC2273'>						setClass = &quot; &quot; + elem.className + &quot; &quot;;</div><div class='line' id='LC2274'><br/></div><div class='line' id='LC2275'>						for ( c = 0, cl = classNames.length; c &lt; cl; c++ ) {</div><div class='line' id='LC2276'>							if ( !~setClass.indexOf( &quot; &quot; + classNames[ c ] + &quot; &quot; ) ) {</div><div class='line' id='LC2277'>								setClass += classNames[ c ] + &quot; &quot;;</div><div class='line' id='LC2278'>							}</div><div class='line' id='LC2279'>						}</div><div class='line' id='LC2280'>						elem.className = jQuery.trim( setClass );</div><div class='line' id='LC2281'>					}</div><div class='line' id='LC2282'>				}</div><div class='line' id='LC2283'>			}</div><div class='line' id='LC2284'>		}</div><div class='line' id='LC2285'><br/></div><div class='line' id='LC2286'>		return this;</div><div class='line' id='LC2287'>	},</div><div class='line' id='LC2288'><br/></div><div class='line' id='LC2289'>	removeClass: function( value ) {</div><div class='line' id='LC2290'>		var classNames, i, l, elem, className, c, cl;</div><div class='line' id='LC2291'><br/></div><div class='line' id='LC2292'>		if ( jQuery.isFunction( value ) ) {</div><div class='line' id='LC2293'>			return this.each(function( j ) {</div><div class='line' id='LC2294'>				jQuery( this ).removeClass( value.call(this, j, this.className) );</div><div class='line' id='LC2295'>			});</div><div class='line' id='LC2296'>		}</div><div class='line' id='LC2297'><br/></div><div class='line' id='LC2298'>		if ( (value &amp;&amp; typeof value === &quot;string&quot;) || value === undefined ) {</div><div class='line' id='LC2299'>			classNames = ( value || &quot;&quot; ).split( rspace );</div><div class='line' id='LC2300'><br/></div><div class='line' id='LC2301'>			for ( i = 0, l = this.length; i &lt; l; i++ ) {</div><div class='line' id='LC2302'>				elem = this[ i ];</div><div class='line' id='LC2303'><br/></div><div class='line' id='LC2304'>				if ( elem.nodeType === 1 &amp;&amp; elem.className ) {</div><div class='line' id='LC2305'>					if ( value ) {</div><div class='line' id='LC2306'>						className = (&quot; &quot; + elem.className + &quot; &quot;).replace( rclass, &quot; &quot; );</div><div class='line' id='LC2307'>						for ( c = 0, cl = classNames.length; c &lt; cl; c++ ) {</div><div class='line' id='LC2308'>							className = className.replace(&quot; &quot; + classNames[ c ] + &quot; &quot;, &quot; &quot;);</div><div class='line' id='LC2309'>						}</div><div class='line' id='LC2310'>						elem.className = jQuery.trim( className );</div><div class='line' id='LC2311'><br/></div><div class='line' id='LC2312'>					} else {</div><div class='line' id='LC2313'>						elem.className = &quot;&quot;;</div><div class='line' id='LC2314'>					}</div><div class='line' id='LC2315'>				}</div><div class='line' id='LC2316'>			}</div><div class='line' id='LC2317'>		}</div><div class='line' id='LC2318'><br/></div><div class='line' id='LC2319'>		return this;</div><div class='line' id='LC2320'>	},</div><div class='line' id='LC2321'><br/></div><div class='line' id='LC2322'>	toggleClass: function( value, stateVal ) {</div><div class='line' id='LC2323'>		var type = typeof value,</div><div class='line' id='LC2324'>			isBool = typeof stateVal === &quot;boolean&quot;;</div><div class='line' id='LC2325'><br/></div><div class='line' id='LC2326'>		if ( jQuery.isFunction( value ) ) {</div><div class='line' id='LC2327'>			return this.each(function( i ) {</div><div class='line' id='LC2328'>				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );</div><div class='line' id='LC2329'>			});</div><div class='line' id='LC2330'>		}</div><div class='line' id='LC2331'><br/></div><div class='line' id='LC2332'>		return this.each(function() {</div><div class='line' id='LC2333'>			if ( type === &quot;string&quot; ) {</div><div class='line' id='LC2334'>				// toggle individual class names</div><div class='line' id='LC2335'>				var className,</div><div class='line' id='LC2336'>					i = 0,</div><div class='line' id='LC2337'>					self = jQuery( this ),</div><div class='line' id='LC2338'>					state = stateVal,</div><div class='line' id='LC2339'>					classNames = value.split( rspace );</div><div class='line' id='LC2340'><br/></div><div class='line' id='LC2341'>				while ( (className = classNames[ i++ ]) ) {</div><div class='line' id='LC2342'>					// check each className given, space seperated list</div><div class='line' id='LC2343'>					state = isBool ? state : !self.hasClass( className );</div><div class='line' id='LC2344'>					self[ state ? &quot;addClass&quot; : &quot;removeClass&quot; ]( className );</div><div class='line' id='LC2345'>				}</div><div class='line' id='LC2346'><br/></div><div class='line' id='LC2347'>			} else if ( type === &quot;undefined&quot; || type === &quot;boolean&quot; ) {</div><div class='line' id='LC2348'>				if ( this.className ) {</div><div class='line' id='LC2349'>					// store className if set</div><div class='line' id='LC2350'>					jQuery._data( this, &quot;__className__&quot;, this.className );</div><div class='line' id='LC2351'>				}</div><div class='line' id='LC2352'><br/></div><div class='line' id='LC2353'>				// toggle whole className</div><div class='line' id='LC2354'>				this.className = this.className || value === false ? &quot;&quot; : jQuery._data( this, &quot;__className__&quot; ) || &quot;&quot;;</div><div class='line' id='LC2355'>			}</div><div class='line' id='LC2356'>		});</div><div class='line' id='LC2357'>	},</div><div class='line' id='LC2358'><br/></div><div class='line' id='LC2359'>	hasClass: function( selector ) {</div><div class='line' id='LC2360'>		var className = &quot; &quot; + selector + &quot; &quot;,</div><div class='line' id='LC2361'>			i = 0,</div><div class='line' id='LC2362'>			l = this.length;</div><div class='line' id='LC2363'>		for ( ; i &lt; l; i++ ) {</div><div class='line' id='LC2364'>			if ( this[i].nodeType === 1 &amp;&amp; (&quot; &quot; + this[i].className + &quot; &quot;).replace(rclass, &quot; &quot;).indexOf( className ) &gt; -1 ) {</div><div class='line' id='LC2365'>				return true;</div><div class='line' id='LC2366'>			}</div><div class='line' id='LC2367'>		}</div><div class='line' id='LC2368'><br/></div><div class='line' id='LC2369'>		return false;</div><div class='line' id='LC2370'>	},</div><div class='line' id='LC2371'><br/></div><div class='line' id='LC2372'>	val: function( value ) {</div><div class='line' id='LC2373'>		var hooks, ret, isFunction,</div><div class='line' id='LC2374'>			elem = this[0];</div><div class='line' id='LC2375'><br/></div><div class='line' id='LC2376'>		if ( !arguments.length ) {</div><div class='line' id='LC2377'>			if ( elem ) {</div><div class='line' id='LC2378'>				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];</div><div class='line' id='LC2379'><br/></div><div class='line' id='LC2380'>				if ( hooks &amp;&amp; &quot;get&quot; in hooks &amp;&amp; (ret = hooks.get( elem, &quot;value&quot; )) !== undefined ) {</div><div class='line' id='LC2381'>					return ret;</div><div class='line' id='LC2382'>				}</div><div class='line' id='LC2383'><br/></div><div class='line' id='LC2384'>				ret = elem.value;</div><div class='line' id='LC2385'><br/></div><div class='line' id='LC2386'>				return typeof ret === &quot;string&quot; ?</div><div class='line' id='LC2387'>					// handle most common string cases</div><div class='line' id='LC2388'>					ret.replace(rreturn, &quot;&quot;) :</div><div class='line' id='LC2389'>					// handle cases where value is null/undef or number</div><div class='line' id='LC2390'>					ret == null ? &quot;&quot; : ret;</div><div class='line' id='LC2391'>			}</div><div class='line' id='LC2392'><br/></div><div class='line' id='LC2393'>			return;</div><div class='line' id='LC2394'>		}</div><div class='line' id='LC2395'><br/></div><div class='line' id='LC2396'>		isFunction = jQuery.isFunction( value );</div><div class='line' id='LC2397'><br/></div><div class='line' id='LC2398'>		return this.each(function( i ) {</div><div class='line' id='LC2399'>			var self = jQuery(this), val;</div><div class='line' id='LC2400'><br/></div><div class='line' id='LC2401'>			if ( this.nodeType !== 1 ) {</div><div class='line' id='LC2402'>				return;</div><div class='line' id='LC2403'>			}</div><div class='line' id='LC2404'><br/></div><div class='line' id='LC2405'>			if ( isFunction ) {</div><div class='line' id='LC2406'>				val = value.call( this, i, self.val() );</div><div class='line' id='LC2407'>			} else {</div><div class='line' id='LC2408'>				val = value;</div><div class='line' id='LC2409'>			}</div><div class='line' id='LC2410'><br/></div><div class='line' id='LC2411'>			// Treat null/undefined as &quot;&quot;; convert numbers to string</div><div class='line' id='LC2412'>			if ( val == null ) {</div><div class='line' id='LC2413'>				val = &quot;&quot;;</div><div class='line' id='LC2414'>			} else if ( typeof val === &quot;number&quot; ) {</div><div class='line' id='LC2415'>				val += &quot;&quot;;</div><div class='line' id='LC2416'>			} else if ( jQuery.isArray( val ) ) {</div><div class='line' id='LC2417'>				val = jQuery.map(val, function ( value ) {</div><div class='line' id='LC2418'>					return value == null ? &quot;&quot; : value + &quot;&quot;;</div><div class='line' id='LC2419'>				});</div><div class='line' id='LC2420'>			}</div><div class='line' id='LC2421'><br/></div><div class='line' id='LC2422'>			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];</div><div class='line' id='LC2423'><br/></div><div class='line' id='LC2424'>			// If set returns undefined, fall back to normal setting</div><div class='line' id='LC2425'>			if ( !hooks || !(&quot;set&quot; in hooks) || hooks.set( this, val, &quot;value&quot; ) === undefined ) {</div><div class='line' id='LC2426'>				this.value = val;</div><div class='line' id='LC2427'>			}</div><div class='line' id='LC2428'>		});</div><div class='line' id='LC2429'>	}</div><div class='line' id='LC2430'>});</div><div class='line' id='LC2431'><br/></div><div class='line' id='LC2432'>jQuery.extend({</div><div class='line' id='LC2433'>	valHooks: {</div><div class='line' id='LC2434'>		option: {</div><div class='line' id='LC2435'>			get: function( elem ) {</div><div class='line' id='LC2436'>				// attributes.value is undefined in Blackberry 4.7 but</div><div class='line' id='LC2437'>				// uses .value. See #6932</div><div class='line' id='LC2438'>				var val = elem.attributes.value;</div><div class='line' id='LC2439'>				return !val || val.specified ? elem.value : elem.text;</div><div class='line' id='LC2440'>			}</div><div class='line' id='LC2441'>		},</div><div class='line' id='LC2442'>		select: {</div><div class='line' id='LC2443'>			get: function( elem ) {</div><div class='line' id='LC2444'>				var value, i, max, option,</div><div class='line' id='LC2445'>					index = elem.selectedIndex,</div><div class='line' id='LC2446'>					values = [],</div><div class='line' id='LC2447'>					options = elem.options,</div><div class='line' id='LC2448'>					one = elem.type === &quot;select-one&quot;;</div><div class='line' id='LC2449'><br/></div><div class='line' id='LC2450'>				// Nothing was selected</div><div class='line' id='LC2451'>				if ( index &lt; 0 ) {</div><div class='line' id='LC2452'>					return null;</div><div class='line' id='LC2453'>				}</div><div class='line' id='LC2454'><br/></div><div class='line' id='LC2455'>				// Loop through all the selected options</div><div class='line' id='LC2456'>				i = one ? index : 0;</div><div class='line' id='LC2457'>				max = one ? index + 1 : options.length;</div><div class='line' id='LC2458'>				for ( ; i &lt; max; i++ ) {</div><div class='line' id='LC2459'>					option = options[ i ];</div><div class='line' id='LC2460'><br/></div><div class='line' id='LC2461'>					// Don&#39;t return options that are disabled or in a disabled optgroup</div><div class='line' id='LC2462'>					if ( option.selected &amp;&amp; (jQuery.support.optDisabled ? !option.disabled : option.getAttribute(&quot;disabled&quot;) === null) &amp;&amp;</div><div class='line' id='LC2463'>							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, &quot;optgroup&quot; )) ) {</div><div class='line' id='LC2464'><br/></div><div class='line' id='LC2465'>						// Get the specific value for the option</div><div class='line' id='LC2466'>						value = jQuery( option ).val();</div><div class='line' id='LC2467'><br/></div><div class='line' id='LC2468'>						// We don&#39;t need an array for one selects</div><div class='line' id='LC2469'>						if ( one ) {</div><div class='line' id='LC2470'>							return value;</div><div class='line' id='LC2471'>						}</div><div class='line' id='LC2472'><br/></div><div class='line' id='LC2473'>						// Multi-Selects return an array</div><div class='line' id='LC2474'>						values.push( value );</div><div class='line' id='LC2475'>					}</div><div class='line' id='LC2476'>				}</div><div class='line' id='LC2477'><br/></div><div class='line' id='LC2478'>				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()</div><div class='line' id='LC2479'>				if ( one &amp;&amp; !values.length &amp;&amp; options.length ) {</div><div class='line' id='LC2480'>					return jQuery( options[ index ] ).val();</div><div class='line' id='LC2481'>				}</div><div class='line' id='LC2482'><br/></div><div class='line' id='LC2483'>				return values;</div><div class='line' id='LC2484'>			},</div><div class='line' id='LC2485'><br/></div><div class='line' id='LC2486'>			set: function( elem, value ) {</div><div class='line' id='LC2487'>				var values = jQuery.makeArray( value );</div><div class='line' id='LC2488'><br/></div><div class='line' id='LC2489'>				jQuery(elem).find(&quot;option&quot;).each(function() {</div><div class='line' id='LC2490'>					this.selected = jQuery.inArray( jQuery(this).val(), values ) &gt;= 0;</div><div class='line' id='LC2491'>				});</div><div class='line' id='LC2492'><br/></div><div class='line' id='LC2493'>				if ( !values.length ) {</div><div class='line' id='LC2494'>					elem.selectedIndex = -1;</div><div class='line' id='LC2495'>				}</div><div class='line' id='LC2496'>				return values;</div><div class='line' id='LC2497'>			}</div><div class='line' id='LC2498'>		}</div><div class='line' id='LC2499'>	},</div><div class='line' id='LC2500'><br/></div><div class='line' id='LC2501'>	attrFn: {</div><div class='line' id='LC2502'>		val: true,</div><div class='line' id='LC2503'>		css: true,</div><div class='line' id='LC2504'>		html: true,</div><div class='line' id='LC2505'>		text: true,</div><div class='line' id='LC2506'>		data: true,</div><div class='line' id='LC2507'>		width: true,</div><div class='line' id='LC2508'>		height: true,</div><div class='line' id='LC2509'>		offset: true</div><div class='line' id='LC2510'>	},</div><div class='line' id='LC2511'><br/></div><div class='line' id='LC2512'>	attr: function( elem, name, value, pass ) {</div><div class='line' id='LC2513'>		var ret, hooks, notxml,</div><div class='line' id='LC2514'>			nType = elem.nodeType;</div><div class='line' id='LC2515'><br/></div><div class='line' id='LC2516'>		// don&#39;t get/set attributes on text, comment and attribute nodes</div><div class='line' id='LC2517'>		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {</div><div class='line' id='LC2518'>			return;</div><div class='line' id='LC2519'>		}</div><div class='line' id='LC2520'><br/></div><div class='line' id='LC2521'>		if ( pass &amp;&amp; name in jQuery.attrFn ) {</div><div class='line' id='LC2522'>			return jQuery( elem )[ name ]( value );</div><div class='line' id='LC2523'>		}</div><div class='line' id='LC2524'><br/></div><div class='line' id='LC2525'>		// Fallback to prop when attributes are not supported</div><div class='line' id='LC2526'>		if ( typeof elem.getAttribute === &quot;undefined&quot; ) {</div><div class='line' id='LC2527'>			return jQuery.prop( elem, name, value );</div><div class='line' id='LC2528'>		}</div><div class='line' id='LC2529'><br/></div><div class='line' id='LC2530'>		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );</div><div class='line' id='LC2531'><br/></div><div class='line' id='LC2532'>		// All attributes are lowercase</div><div class='line' id='LC2533'>		// Grab necessary hook if one is defined</div><div class='line' id='LC2534'>		if ( notxml ) {</div><div class='line' id='LC2535'>			name = name.toLowerCase();</div><div class='line' id='LC2536'>			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );</div><div class='line' id='LC2537'>		}</div><div class='line' id='LC2538'><br/></div><div class='line' id='LC2539'>		if ( value !== undefined ) {</div><div class='line' id='LC2540'><br/></div><div class='line' id='LC2541'>			if ( value === null ) {</div><div class='line' id='LC2542'>				jQuery.removeAttr( elem, name );</div><div class='line' id='LC2543'>				return;</div><div class='line' id='LC2544'><br/></div><div class='line' id='LC2545'>			} else if ( hooks &amp;&amp; &quot;set&quot; in hooks &amp;&amp; notxml &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ) {</div><div class='line' id='LC2546'>				return ret;</div><div class='line' id='LC2547'><br/></div><div class='line' id='LC2548'>			} else {</div><div class='line' id='LC2549'>				elem.setAttribute( name, &quot;&quot; + value );</div><div class='line' id='LC2550'>				return value;</div><div class='line' id='LC2551'>			}</div><div class='line' id='LC2552'><br/></div><div class='line' id='LC2553'>		} else if ( hooks &amp;&amp; &quot;get&quot; in hooks &amp;&amp; notxml &amp;&amp; (ret = hooks.get( elem, name )) !== null ) {</div><div class='line' id='LC2554'>			return ret;</div><div class='line' id='LC2555'><br/></div><div class='line' id='LC2556'>		} else {</div><div class='line' id='LC2557'><br/></div><div class='line' id='LC2558'>			ret = elem.getAttribute( name );</div><div class='line' id='LC2559'><br/></div><div class='line' id='LC2560'>			// Non-existent attributes return null, we normalize to undefined</div><div class='line' id='LC2561'>			return ret === null ?</div><div class='line' id='LC2562'>				undefined :</div><div class='line' id='LC2563'>				ret;</div><div class='line' id='LC2564'>		}</div><div class='line' id='LC2565'>	},</div><div class='line' id='LC2566'><br/></div><div class='line' id='LC2567'>	removeAttr: function( elem, value ) {</div><div class='line' id='LC2568'>		var propName, attrNames, name, l, isBool,</div><div class='line' id='LC2569'>			i = 0;</div><div class='line' id='LC2570'><br/></div><div class='line' id='LC2571'>		if ( value &amp;&amp; elem.nodeType === 1 ) {</div><div class='line' id='LC2572'>			attrNames = value.toLowerCase().split( rspace );</div><div class='line' id='LC2573'>			l = attrNames.length;</div><div class='line' id='LC2574'><br/></div><div class='line' id='LC2575'>			for ( ; i &lt; l; i++ ) {</div><div class='line' id='LC2576'>				name = attrNames[ i ];</div><div class='line' id='LC2577'><br/></div><div class='line' id='LC2578'>				if ( name ) {</div><div class='line' id='LC2579'>					propName = jQuery.propFix[ name ] || name;</div><div class='line' id='LC2580'>					isBool = rboolean.test( name );</div><div class='line' id='LC2581'><br/></div><div class='line' id='LC2582'>					// See #9699 for explanation of this approach (setting first, then removal)</div><div class='line' id='LC2583'>					// Do not do this for boolean attributes (see #10870)</div><div class='line' id='LC2584'>					if ( !isBool ) {</div><div class='line' id='LC2585'>						jQuery.attr( elem, name, &quot;&quot; );</div><div class='line' id='LC2586'>					}</div><div class='line' id='LC2587'>					elem.removeAttribute( getSetAttribute ? name : propName );</div><div class='line' id='LC2588'><br/></div><div class='line' id='LC2589'>					// Set corresponding property to false for boolean attributes</div><div class='line' id='LC2590'>					if ( isBool &amp;&amp; propName in elem ) {</div><div class='line' id='LC2591'>						elem[ propName ] = false;</div><div class='line' id='LC2592'>					}</div><div class='line' id='LC2593'>				}</div><div class='line' id='LC2594'>			}</div><div class='line' id='LC2595'>		}</div><div class='line' id='LC2596'>	},</div><div class='line' id='LC2597'><br/></div><div class='line' id='LC2598'>	attrHooks: {</div><div class='line' id='LC2599'>		type: {</div><div class='line' id='LC2600'>			set: function( elem, value ) {</div><div class='line' id='LC2601'>				// We can&#39;t allow the type property to be changed (since it causes problems in IE)</div><div class='line' id='LC2602'>				if ( rtype.test( elem.nodeName ) &amp;&amp; elem.parentNode ) {</div><div class='line' id='LC2603'>					jQuery.error( &quot;type property can&#39;t be changed&quot; );</div><div class='line' id='LC2604'>				} else if ( !jQuery.support.radioValue &amp;&amp; value === &quot;radio&quot; &amp;&amp; jQuery.nodeName(elem, &quot;input&quot;) ) {</div><div class='line' id='LC2605'>					// Setting the type on a radio button after the value resets the value in IE6-9</div><div class='line' id='LC2606'>					// Reset value to it&#39;s default in case type is set after value</div><div class='line' id='LC2607'>					// This is for element creation</div><div class='line' id='LC2608'>					var val = elem.value;</div><div class='line' id='LC2609'>					elem.setAttribute( &quot;type&quot;, value );</div><div class='line' id='LC2610'>					if ( val ) {</div><div class='line' id='LC2611'>						elem.value = val;</div><div class='line' id='LC2612'>					}</div><div class='line' id='LC2613'>					return value;</div><div class='line' id='LC2614'>				}</div><div class='line' id='LC2615'>			}</div><div class='line' id='LC2616'>		},</div><div class='line' id='LC2617'>		// Use the value property for back compat</div><div class='line' id='LC2618'>		// Use the nodeHook for button elements in IE6/7 (#1954)</div><div class='line' id='LC2619'>		value: {</div><div class='line' id='LC2620'>			get: function( elem, name ) {</div><div class='line' id='LC2621'>				if ( nodeHook &amp;&amp; jQuery.nodeName( elem, &quot;button&quot; ) ) {</div><div class='line' id='LC2622'>					return nodeHook.get( elem, name );</div><div class='line' id='LC2623'>				}</div><div class='line' id='LC2624'>				return name in elem ?</div><div class='line' id='LC2625'>					elem.value :</div><div class='line' id='LC2626'>					null;</div><div class='line' id='LC2627'>			},</div><div class='line' id='LC2628'>			set: function( elem, value, name ) {</div><div class='line' id='LC2629'>				if ( nodeHook &amp;&amp; jQuery.nodeName( elem, &quot;button&quot; ) ) {</div><div class='line' id='LC2630'>					return nodeHook.set( elem, value, name );</div><div class='line' id='LC2631'>				}</div><div class='line' id='LC2632'>				// Does not return so that setAttribute is also used</div><div class='line' id='LC2633'>				elem.value = value;</div><div class='line' id='LC2634'>			}</div><div class='line' id='LC2635'>		}</div><div class='line' id='LC2636'>	},</div><div class='line' id='LC2637'><br/></div><div class='line' id='LC2638'>	propFix: {</div><div class='line' id='LC2639'>		tabindex: &quot;tabIndex&quot;,</div><div class='line' id='LC2640'>		readonly: &quot;readOnly&quot;,</div><div class='line' id='LC2641'>		&quot;for&quot;: &quot;htmlFor&quot;,</div><div class='line' id='LC2642'>		&quot;class&quot;: &quot;className&quot;,</div><div class='line' id='LC2643'>		maxlength: &quot;maxLength&quot;,</div><div class='line' id='LC2644'>		cellspacing: &quot;cellSpacing&quot;,</div><div class='line' id='LC2645'>		cellpadding: &quot;cellPadding&quot;,</div><div class='line' id='LC2646'>		rowspan: &quot;rowSpan&quot;,</div><div class='line' id='LC2647'>		colspan: &quot;colSpan&quot;,</div><div class='line' id='LC2648'>		usemap: &quot;useMap&quot;,</div><div class='line' id='LC2649'>		frameborder: &quot;frameBorder&quot;,</div><div class='line' id='LC2650'>		contenteditable: &quot;contentEditable&quot;</div><div class='line' id='LC2651'>	},</div><div class='line' id='LC2652'><br/></div><div class='line' id='LC2653'>	prop: function( elem, name, value ) {</div><div class='line' id='LC2654'>		var ret, hooks, notxml,</div><div class='line' id='LC2655'>			nType = elem.nodeType;</div><div class='line' id='LC2656'><br/></div><div class='line' id='LC2657'>		// don&#39;t get/set properties on text, comment and attribute nodes</div><div class='line' id='LC2658'>		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {</div><div class='line' id='LC2659'>			return;</div><div class='line' id='LC2660'>		}</div><div class='line' id='LC2661'><br/></div><div class='line' id='LC2662'>		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );</div><div class='line' id='LC2663'><br/></div><div class='line' id='LC2664'>		if ( notxml ) {</div><div class='line' id='LC2665'>			// Fix name and attach hooks</div><div class='line' id='LC2666'>			name = jQuery.propFix[ name ] || name;</div><div class='line' id='LC2667'>			hooks = jQuery.propHooks[ name ];</div><div class='line' id='LC2668'>		}</div><div class='line' id='LC2669'><br/></div><div class='line' id='LC2670'>		if ( value !== undefined ) {</div><div class='line' id='LC2671'>			if ( hooks &amp;&amp; &quot;set&quot; in hooks &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ) {</div><div class='line' id='LC2672'>				return ret;</div><div class='line' id='LC2673'><br/></div><div class='line' id='LC2674'>			} else {</div><div class='line' id='LC2675'>				return ( elem[ name ] = value );</div><div class='line' id='LC2676'>			}</div><div class='line' id='LC2677'><br/></div><div class='line' id='LC2678'>		} else {</div><div class='line' id='LC2679'>			if ( hooks &amp;&amp; &quot;get&quot; in hooks &amp;&amp; (ret = hooks.get( elem, name )) !== null ) {</div><div class='line' id='LC2680'>				return ret;</div><div class='line' id='LC2681'><br/></div><div class='line' id='LC2682'>			} else {</div><div class='line' id='LC2683'>				return elem[ name ];</div><div class='line' id='LC2684'>			}</div><div class='line' id='LC2685'>		}</div><div class='line' id='LC2686'>	},</div><div class='line' id='LC2687'><br/></div><div class='line' id='LC2688'>	propHooks: {</div><div class='line' id='LC2689'>		tabIndex: {</div><div class='line' id='LC2690'>			get: function( elem ) {</div><div class='line' id='LC2691'>				// elem.tabIndex doesn&#39;t always return the correct value when it hasn&#39;t been explicitly set</div><div class='line' id='LC2692'>				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/</div><div class='line' id='LC2693'>				var attributeNode = elem.getAttributeNode(&quot;tabindex&quot;);</div><div class='line' id='LC2694'><br/></div><div class='line' id='LC2695'>				return attributeNode &amp;&amp; attributeNode.specified ?</div><div class='line' id='LC2696'>					parseInt( attributeNode.value, 10 ) :</div><div class='line' id='LC2697'>					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) &amp;&amp; elem.href ?</div><div class='line' id='LC2698'>						0 :</div><div class='line' id='LC2699'>						undefined;</div><div class='line' id='LC2700'>			}</div><div class='line' id='LC2701'>		}</div><div class='line' id='LC2702'>	}</div><div class='line' id='LC2703'>});</div><div class='line' id='LC2704'><br/></div><div class='line' id='LC2705'>// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)</div><div class='line' id='LC2706'>jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;</div><div class='line' id='LC2707'><br/></div><div class='line' id='LC2708'>// Hook for boolean attributes</div><div class='line' id='LC2709'>boolHook = {</div><div class='line' id='LC2710'>	get: function( elem, name ) {</div><div class='line' id='LC2711'>		// Align boolean attributes with corresponding properties</div><div class='line' id='LC2712'>		// Fall back to attribute presence where some booleans are not supported</div><div class='line' id='LC2713'>		var attrNode,</div><div class='line' id='LC2714'>			property = jQuery.prop( elem, name );</div><div class='line' id='LC2715'>		return property === true || typeof property !== &quot;boolean&quot; &amp;&amp; ( attrNode = elem.getAttributeNode(name) ) &amp;&amp; attrNode.nodeValue !== false ?</div><div class='line' id='LC2716'>			name.toLowerCase() :</div><div class='line' id='LC2717'>			undefined;</div><div class='line' id='LC2718'>	},</div><div class='line' id='LC2719'>	set: function( elem, value, name ) {</div><div class='line' id='LC2720'>		var propName;</div><div class='line' id='LC2721'>		if ( value === false ) {</div><div class='line' id='LC2722'>			// Remove boolean attributes when set to false</div><div class='line' id='LC2723'>			jQuery.removeAttr( elem, name );</div><div class='line' id='LC2724'>		} else {</div><div class='line' id='LC2725'>			// value is true since we know at this point it&#39;s type boolean and not false</div><div class='line' id='LC2726'>			// Set boolean attributes to the same name and set the DOM property</div><div class='line' id='LC2727'>			propName = jQuery.propFix[ name ] || name;</div><div class='line' id='LC2728'>			if ( propName in elem ) {</div><div class='line' id='LC2729'>				// Only set the IDL specifically if it already exists on the element</div><div class='line' id='LC2730'>				elem[ propName ] = true;</div><div class='line' id='LC2731'>			}</div><div class='line' id='LC2732'><br/></div><div class='line' id='LC2733'>			elem.setAttribute( name, name.toLowerCase() );</div><div class='line' id='LC2734'>		}</div><div class='line' id='LC2735'>		return name;</div><div class='line' id='LC2736'>	}</div><div class='line' id='LC2737'>};</div><div class='line' id='LC2738'><br/></div><div class='line' id='LC2739'>// IE6/7 do not support getting/setting some attributes with get/setAttribute</div><div class='line' id='LC2740'>if ( !getSetAttribute ) {</div><div class='line' id='LC2741'><br/></div><div class='line' id='LC2742'>	fixSpecified = {</div><div class='line' id='LC2743'>		name: true,</div><div class='line' id='LC2744'>		id: true,</div><div class='line' id='LC2745'>		coords: true</div><div class='line' id='LC2746'>	};</div><div class='line' id='LC2747'><br/></div><div class='line' id='LC2748'>	// Use this for any attribute in IE6/7</div><div class='line' id='LC2749'>	// This fixes almost every IE6/7 issue</div><div class='line' id='LC2750'>	nodeHook = jQuery.valHooks.button = {</div><div class='line' id='LC2751'>		get: function( elem, name ) {</div><div class='line' id='LC2752'>			var ret;</div><div class='line' id='LC2753'>			ret = elem.getAttributeNode( name );</div><div class='line' id='LC2754'>			return ret &amp;&amp; ( fixSpecified[ name ] ? ret.nodeValue !== &quot;&quot; : ret.specified ) ?</div><div class='line' id='LC2755'>				ret.nodeValue :</div><div class='line' id='LC2756'>				undefined;</div><div class='line' id='LC2757'>		},</div><div class='line' id='LC2758'>		set: function( elem, value, name ) {</div><div class='line' id='LC2759'>			// Set the existing or create a new attribute node</div><div class='line' id='LC2760'>			var ret = elem.getAttributeNode( name );</div><div class='line' id='LC2761'>			if ( !ret ) {</div><div class='line' id='LC2762'>				ret = document.createAttribute( name );</div><div class='line' id='LC2763'>				elem.setAttributeNode( ret );</div><div class='line' id='LC2764'>			}</div><div class='line' id='LC2765'>			return ( ret.nodeValue = value + &quot;&quot; );</div><div class='line' id='LC2766'>		}</div><div class='line' id='LC2767'>	};</div><div class='line' id='LC2768'><br/></div><div class='line' id='LC2769'>	// Apply the nodeHook to tabindex</div><div class='line' id='LC2770'>	jQuery.attrHooks.tabindex.set = nodeHook.set;</div><div class='line' id='LC2771'><br/></div><div class='line' id='LC2772'>	// Set width and height to auto instead of 0 on empty string( Bug #8150 )</div><div class='line' id='LC2773'>	// This is for removals</div><div class='line' id='LC2774'>	jQuery.each([ &quot;width&quot;, &quot;height&quot; ], function( i, name ) {</div><div class='line' id='LC2775'>		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {</div><div class='line' id='LC2776'>			set: function( elem, value ) {</div><div class='line' id='LC2777'>				if ( value === &quot;&quot; ) {</div><div class='line' id='LC2778'>					elem.setAttribute( name, &quot;auto&quot; );</div><div class='line' id='LC2779'>					return value;</div><div class='line' id='LC2780'>				}</div><div class='line' id='LC2781'>			}</div><div class='line' id='LC2782'>		});</div><div class='line' id='LC2783'>	});</div><div class='line' id='LC2784'><br/></div><div class='line' id='LC2785'>	// Set contenteditable to false on removals(#10429)</div><div class='line' id='LC2786'>	// Setting to empty string throws an error as an invalid value</div><div class='line' id='LC2787'>	jQuery.attrHooks.contenteditable = {</div><div class='line' id='LC2788'>		get: nodeHook.get,</div><div class='line' id='LC2789'>		set: function( elem, value, name ) {</div><div class='line' id='LC2790'>			if ( value === &quot;&quot; ) {</div><div class='line' id='LC2791'>				value = &quot;false&quot;;</div><div class='line' id='LC2792'>			}</div><div class='line' id='LC2793'>			nodeHook.set( elem, value, name );</div><div class='line' id='LC2794'>		}</div><div class='line' id='LC2795'>	};</div><div class='line' id='LC2796'>}</div><div class='line' id='LC2797'><br/></div><div class='line' id='LC2798'><br/></div><div class='line' id='LC2799'>// Some attributes require a special call on IE</div><div class='line' id='LC2800'>if ( !jQuery.support.hrefNormalized ) {</div><div class='line' id='LC2801'>	jQuery.each([ &quot;href&quot;, &quot;src&quot;, &quot;width&quot;, &quot;height&quot; ], function( i, name ) {</div><div class='line' id='LC2802'>		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {</div><div class='line' id='LC2803'>			get: function( elem ) {</div><div class='line' id='LC2804'>				var ret = elem.getAttribute( name, 2 );</div><div class='line' id='LC2805'>				return ret === null ? undefined : ret;</div><div class='line' id='LC2806'>			}</div><div class='line' id='LC2807'>		});</div><div class='line' id='LC2808'>	});</div><div class='line' id='LC2809'>}</div><div class='line' id='LC2810'><br/></div><div class='line' id='LC2811'>if ( !jQuery.support.style ) {</div><div class='line' id='LC2812'>	jQuery.attrHooks.style = {</div><div class='line' id='LC2813'>		get: function( elem ) {</div><div class='line' id='LC2814'>			// Return undefined in the case of empty string</div><div class='line' id='LC2815'>			// Normalize to lowercase since IE uppercases css property names</div><div class='line' id='LC2816'>			return elem.style.cssText.toLowerCase() || undefined;</div><div class='line' id='LC2817'>		},</div><div class='line' id='LC2818'>		set: function( elem, value ) {</div><div class='line' id='LC2819'>			return ( elem.style.cssText = &quot;&quot; + value );</div><div class='line' id='LC2820'>		}</div><div class='line' id='LC2821'>	};</div><div class='line' id='LC2822'>}</div><div class='line' id='LC2823'><br/></div><div class='line' id='LC2824'>// Safari mis-reports the default selected property of an option</div><div class='line' id='LC2825'>// Accessing the parent&#39;s selectedIndex property fixes it</div><div class='line' id='LC2826'>if ( !jQuery.support.optSelected ) {</div><div class='line' id='LC2827'>	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {</div><div class='line' id='LC2828'>		get: function( elem ) {</div><div class='line' id='LC2829'>			var parent = elem.parentNode;</div><div class='line' id='LC2830'><br/></div><div class='line' id='LC2831'>			if ( parent ) {</div><div class='line' id='LC2832'>				parent.selectedIndex;</div><div class='line' id='LC2833'><br/></div><div class='line' id='LC2834'>				// Make sure that it also works with optgroups, see #5701</div><div class='line' id='LC2835'>				if ( parent.parentNode ) {</div><div class='line' id='LC2836'>					parent.parentNode.selectedIndex;</div><div class='line' id='LC2837'>				}</div><div class='line' id='LC2838'>			}</div><div class='line' id='LC2839'>			return null;</div><div class='line' id='LC2840'>		}</div><div class='line' id='LC2841'>	});</div><div class='line' id='LC2842'>}</div><div class='line' id='LC2843'><br/></div><div class='line' id='LC2844'>// IE6/7 call enctype encoding</div><div class='line' id='LC2845'>if ( !jQuery.support.enctype ) {</div><div class='line' id='LC2846'>	jQuery.propFix.enctype = &quot;encoding&quot;;</div><div class='line' id='LC2847'>}</div><div class='line' id='LC2848'><br/></div><div class='line' id='LC2849'>// Radios and checkboxes getter/setter</div><div class='line' id='LC2850'>if ( !jQuery.support.checkOn ) {</div><div class='line' id='LC2851'>	jQuery.each([ &quot;radio&quot;, &quot;checkbox&quot; ], function() {</div><div class='line' id='LC2852'>		jQuery.valHooks[ this ] = {</div><div class='line' id='LC2853'>			get: function( elem ) {</div><div class='line' id='LC2854'>				// Handle the case where in Webkit &quot;&quot; is returned instead of &quot;on&quot; if a value isn&#39;t specified</div><div class='line' id='LC2855'>				return elem.getAttribute(&quot;value&quot;) === null ? &quot;on&quot; : elem.value;</div><div class='line' id='LC2856'>			}</div><div class='line' id='LC2857'>		};</div><div class='line' id='LC2858'>	});</div><div class='line' id='LC2859'>}</div><div class='line' id='LC2860'>jQuery.each([ &quot;radio&quot;, &quot;checkbox&quot; ], function() {</div><div class='line' id='LC2861'>	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {</div><div class='line' id='LC2862'>		set: function( elem, value ) {</div><div class='line' id='LC2863'>			if ( jQuery.isArray( value ) ) {</div><div class='line' id='LC2864'>				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) &gt;= 0 );</div><div class='line' id='LC2865'>			}</div><div class='line' id='LC2866'>		}</div><div class='line' id='LC2867'>	});</div><div class='line' id='LC2868'>});</div><div class='line' id='LC2869'><br/></div><div class='line' id='LC2870'><br/></div><div class='line' id='LC2871'><br/></div><div class='line' id='LC2872'><br/></div><div class='line' id='LC2873'>var rformElems = /^(?:textarea|input|select)$/i,</div><div class='line' id='LC2874'>	rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/,</div><div class='line' id='LC2875'>	rhoverHack = /(?:^|\s)hover(\.\S+)?\b/,</div><div class='line' id='LC2876'>	rkeyEvent = /^key/,</div><div class='line' id='LC2877'>	rmouseEvent = /^(?:mouse|contextmenu)|click/,</div><div class='line' id='LC2878'>	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,</div><div class='line' id='LC2879'>	rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,</div><div class='line' id='LC2880'>	quickParse = function( selector ) {</div><div class='line' id='LC2881'>		var quick = rquickIs.exec( selector );</div><div class='line' id='LC2882'>		if ( quick ) {</div><div class='line' id='LC2883'>			//   0  1    2   3</div><div class='line' id='LC2884'>			// [ _, tag, id, class ]</div><div class='line' id='LC2885'>			quick[1] = ( quick[1] || &quot;&quot; ).toLowerCase();</div><div class='line' id='LC2886'>			quick[3] = quick[3] &amp;&amp; new RegExp( &quot;(?:^|\\s)&quot; + quick[3] + &quot;(?:\\s|$)&quot; );</div><div class='line' id='LC2887'>		}</div><div class='line' id='LC2888'>		return quick;</div><div class='line' id='LC2889'>	},</div><div class='line' id='LC2890'>	quickIs = function( elem, m ) {</div><div class='line' id='LC2891'>		var attrs = elem.attributes || {};</div><div class='line' id='LC2892'>		return (</div><div class='line' id='LC2893'>			(!m[1] || elem.nodeName.toLowerCase() === m[1]) &amp;&amp;</div><div class='line' id='LC2894'>			(!m[2] || (attrs.id || {}).value === m[2]) &amp;&amp;</div><div class='line' id='LC2895'>			(!m[3] || m[3].test( (attrs[ &quot;class&quot; ] || {}).value ))</div><div class='line' id='LC2896'>		);</div><div class='line' id='LC2897'>	},</div><div class='line' id='LC2898'>	hoverHack = function( events ) {</div><div class='line' id='LC2899'>		return jQuery.event.special.hover ? events : events.replace( rhoverHack, &quot;mouseenter$1 mouseleave$1&quot; );</div><div class='line' id='LC2900'>	};</div><div class='line' id='LC2901'><br/></div><div class='line' id='LC2902'>/*</div><div class='line' id='LC2903'>&nbsp;* Helper functions for managing events -- not part of the public interface.</div><div class='line' id='LC2904'>&nbsp;* Props to Dean Edwards&#39; addEvent library for many of the ideas.</div><div class='line' id='LC2905'>&nbsp;*/</div><div class='line' id='LC2906'>jQuery.event = {</div><div class='line' id='LC2907'><br/></div><div class='line' id='LC2908'>	add: function( elem, types, handler, data, selector ) {</div><div class='line' id='LC2909'><br/></div><div class='line' id='LC2910'>		var elemData, eventHandle, events,</div><div class='line' id='LC2911'>			t, tns, type, namespaces, handleObj,</div><div class='line' id='LC2912'>			handleObjIn, quick, handlers, special;</div><div class='line' id='LC2913'><br/></div><div class='line' id='LC2914'>		// Don&#39;t attach events to noData or text/comment nodes (allow plain objects tho)</div><div class='line' id='LC2915'>		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {</div><div class='line' id='LC2916'>			return;</div><div class='line' id='LC2917'>		}</div><div class='line' id='LC2918'><br/></div><div class='line' id='LC2919'>		// Caller can pass in an object of custom data in lieu of the handler</div><div class='line' id='LC2920'>		if ( handler.handler ) {</div><div class='line' id='LC2921'>			handleObjIn = handler;</div><div class='line' id='LC2922'>			handler = handleObjIn.handler;</div><div class='line' id='LC2923'>			selector = handleObjIn.selector;</div><div class='line' id='LC2924'>		}</div><div class='line' id='LC2925'><br/></div><div class='line' id='LC2926'>		// Make sure that the handler has a unique ID, used to find/remove it later</div><div class='line' id='LC2927'>		if ( !handler.guid ) {</div><div class='line' id='LC2928'>			handler.guid = jQuery.guid++;</div><div class='line' id='LC2929'>		}</div><div class='line' id='LC2930'><br/></div><div class='line' id='LC2931'>		// Init the element&#39;s event structure and main handler, if this is the first</div><div class='line' id='LC2932'>		events = elemData.events;</div><div class='line' id='LC2933'>		if ( !events ) {</div><div class='line' id='LC2934'>			elemData.events = events = {};</div><div class='line' id='LC2935'>		}</div><div class='line' id='LC2936'>		eventHandle = elemData.handle;</div><div class='line' id='LC2937'>		if ( !eventHandle ) {</div><div class='line' id='LC2938'>			elemData.handle = eventHandle = function( e ) {</div><div class='line' id='LC2939'>				// Discard the second event of a jQuery.event.trigger() and</div><div class='line' id='LC2940'>				// when an event is called after a page has unloaded</div><div class='line' id='LC2941'>				return typeof jQuery !== &quot;undefined&quot; &amp;&amp; (!e || jQuery.event.triggered !== e.type) ?</div><div class='line' id='LC2942'>					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :</div><div class='line' id='LC2943'>					undefined;</div><div class='line' id='LC2944'>			};</div><div class='line' id='LC2945'>			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events</div><div class='line' id='LC2946'>			eventHandle.elem = elem;</div><div class='line' id='LC2947'>		}</div><div class='line' id='LC2948'><br/></div><div class='line' id='LC2949'>		// Handle multiple events separated by a space</div><div class='line' id='LC2950'>		// jQuery(...).bind(&quot;mouseover mouseout&quot;, fn);</div><div class='line' id='LC2951'>		types = jQuery.trim( hoverHack(types) ).split( &quot; &quot; );</div><div class='line' id='LC2952'>		for ( t = 0; t &lt; types.length; t++ ) {</div><div class='line' id='LC2953'><br/></div><div class='line' id='LC2954'>			tns = rtypenamespace.exec( types[t] ) || [];</div><div class='line' id='LC2955'>			type = tns[1];</div><div class='line' id='LC2956'>			namespaces = ( tns[2] || &quot;&quot; ).split( &quot;.&quot; ).sort();</div><div class='line' id='LC2957'><br/></div><div class='line' id='LC2958'>			// If event changes its type, use the special event handlers for the changed type</div><div class='line' id='LC2959'>			special = jQuery.event.special[ type ] || {};</div><div class='line' id='LC2960'><br/></div><div class='line' id='LC2961'>			// If selector defined, determine special event api type, otherwise given type</div><div class='line' id='LC2962'>			type = ( selector ? special.delegateType : special.bindType ) || type;</div><div class='line' id='LC2963'><br/></div><div class='line' id='LC2964'>			// Update special based on newly reset type</div><div class='line' id='LC2965'>			special = jQuery.event.special[ type ] || {};</div><div class='line' id='LC2966'><br/></div><div class='line' id='LC2967'>			// handleObj is passed to all event handlers</div><div class='line' id='LC2968'>			handleObj = jQuery.extend({</div><div class='line' id='LC2969'>				type: type,</div><div class='line' id='LC2970'>				origType: tns[1],</div><div class='line' id='LC2971'>				data: data,</div><div class='line' id='LC2972'>				handler: handler,</div><div class='line' id='LC2973'>				guid: handler.guid,</div><div class='line' id='LC2974'>				selector: selector,</div><div class='line' id='LC2975'>				quick: selector &amp;&amp; quickParse( selector ),</div><div class='line' id='LC2976'>				namespace: namespaces.join(&quot;.&quot;)</div><div class='line' id='LC2977'>			}, handleObjIn );</div><div class='line' id='LC2978'><br/></div><div class='line' id='LC2979'>			// Init the event handler queue if we&#39;re the first</div><div class='line' id='LC2980'>			handlers = events[ type ];</div><div class='line' id='LC2981'>			if ( !handlers ) {</div><div class='line' id='LC2982'>				handlers = events[ type ] = [];</div><div class='line' id='LC2983'>				handlers.delegateCount = 0;</div><div class='line' id='LC2984'><br/></div><div class='line' id='LC2985'>				// Only use addEventListener/attachEvent if the special events handler returns false</div><div class='line' id='LC2986'>				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {</div><div class='line' id='LC2987'>					// Bind the global event handler to the element</div><div class='line' id='LC2988'>					if ( elem.addEventListener ) {</div><div class='line' id='LC2989'>						elem.addEventListener( type, eventHandle, false );</div><div class='line' id='LC2990'><br/></div><div class='line' id='LC2991'>					} else if ( elem.attachEvent ) {</div><div class='line' id='LC2992'>						elem.attachEvent( &quot;on&quot; + type, eventHandle );</div><div class='line' id='LC2993'>					}</div><div class='line' id='LC2994'>				}</div><div class='line' id='LC2995'>			}</div><div class='line' id='LC2996'><br/></div><div class='line' id='LC2997'>			if ( special.add ) {</div><div class='line' id='LC2998'>				special.add.call( elem, handleObj );</div><div class='line' id='LC2999'><br/></div><div class='line' id='LC3000'>				if ( !handleObj.handler.guid ) {</div><div class='line' id='LC3001'>					handleObj.handler.guid = handler.guid;</div><div class='line' id='LC3002'>				}</div><div class='line' id='LC3003'>			}</div><div class='line' id='LC3004'><br/></div><div class='line' id='LC3005'>			// Add to the element&#39;s handler list, delegates in front</div><div class='line' id='LC3006'>			if ( selector ) {</div><div class='line' id='LC3007'>				handlers.splice( handlers.delegateCount++, 0, handleObj );</div><div class='line' id='LC3008'>			} else {</div><div class='line' id='LC3009'>				handlers.push( handleObj );</div><div class='line' id='LC3010'>			}</div><div class='line' id='LC3011'><br/></div><div class='line' id='LC3012'>			// Keep track of which events have ever been used, for event optimization</div><div class='line' id='LC3013'>			jQuery.event.global[ type ] = true;</div><div class='line' id='LC3014'>		}</div><div class='line' id='LC3015'><br/></div><div class='line' id='LC3016'>		// Nullify elem to prevent memory leaks in IE</div><div class='line' id='LC3017'>		elem = null;</div><div class='line' id='LC3018'>	},</div><div class='line' id='LC3019'><br/></div><div class='line' id='LC3020'>	global: {},</div><div class='line' id='LC3021'><br/></div><div class='line' id='LC3022'>	// Detach an event or set of events from an element</div><div class='line' id='LC3023'>	remove: function( elem, types, handler, selector, mappedTypes ) {</div><div class='line' id='LC3024'><br/></div><div class='line' id='LC3025'>		var elemData = jQuery.hasData( elem ) &amp;&amp; jQuery._data( elem ),</div><div class='line' id='LC3026'>			t, tns, type, origType, namespaces, origCount,</div><div class='line' id='LC3027'>			j, events, special, handle, eventType, handleObj;</div><div class='line' id='LC3028'><br/></div><div class='line' id='LC3029'>		if ( !elemData || !(events = elemData.events) ) {</div><div class='line' id='LC3030'>			return;</div><div class='line' id='LC3031'>		}</div><div class='line' id='LC3032'><br/></div><div class='line' id='LC3033'>		// Once for each type.namespace in types; type may be omitted</div><div class='line' id='LC3034'>		types = jQuery.trim( hoverHack( types || &quot;&quot; ) ).split(&quot; &quot;);</div><div class='line' id='LC3035'>		for ( t = 0; t &lt; types.length; t++ ) {</div><div class='line' id='LC3036'>			tns = rtypenamespace.exec( types[t] ) || [];</div><div class='line' id='LC3037'>			type = origType = tns[1];</div><div class='line' id='LC3038'>			namespaces = tns[2];</div><div class='line' id='LC3039'><br/></div><div class='line' id='LC3040'>			// Unbind all events (on this namespace, if provided) for the element</div><div class='line' id='LC3041'>			if ( !type ) {</div><div class='line' id='LC3042'>				for ( type in events ) {</div><div class='line' id='LC3043'>					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );</div><div class='line' id='LC3044'>				}</div><div class='line' id='LC3045'>				continue;</div><div class='line' id='LC3046'>			}</div><div class='line' id='LC3047'><br/></div><div class='line' id='LC3048'>			special = jQuery.event.special[ type ] || {};</div><div class='line' id='LC3049'>			type = ( selector? special.delegateType : special.bindType ) || type;</div><div class='line' id='LC3050'>			eventType = events[ type ] || [];</div><div class='line' id='LC3051'>			origCount = eventType.length;</div><div class='line' id='LC3052'>			namespaces = namespaces ? new RegExp(&quot;(^|\\.)&quot; + namespaces.split(&quot;.&quot;).sort().join(&quot;\\.(?:.*\\.)?&quot;) + &quot;(\\.|$)&quot;) : null;</div><div class='line' id='LC3053'><br/></div><div class='line' id='LC3054'>			// Remove matching events</div><div class='line' id='LC3055'>			for ( j = 0; j &lt; eventType.length; j++ ) {</div><div class='line' id='LC3056'>				handleObj = eventType[ j ];</div><div class='line' id='LC3057'><br/></div><div class='line' id='LC3058'>				if ( ( mappedTypes || origType === handleObj.origType ) &amp;&amp;</div><div class='line' id='LC3059'>					 ( !handler || handler.guid === handleObj.guid ) &amp;&amp;</div><div class='line' id='LC3060'>					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &amp;&amp;</div><div class='line' id='LC3061'>					 ( !selector || selector === handleObj.selector || selector === &quot;**&quot; &amp;&amp; handleObj.selector ) ) {</div><div class='line' id='LC3062'>					eventType.splice( j--, 1 );</div><div class='line' id='LC3063'><br/></div><div class='line' id='LC3064'>					if ( handleObj.selector ) {</div><div class='line' id='LC3065'>						eventType.delegateCount--;</div><div class='line' id='LC3066'>					}</div><div class='line' id='LC3067'>					if ( special.remove ) {</div><div class='line' id='LC3068'>						special.remove.call( elem, handleObj );</div><div class='line' id='LC3069'>					}</div><div class='line' id='LC3070'>				}</div><div class='line' id='LC3071'>			}</div><div class='line' id='LC3072'><br/></div><div class='line' id='LC3073'>			// Remove generic event handler if we removed something and no more handlers exist</div><div class='line' id='LC3074'>			// (avoids potential for endless recursion during removal of special event handlers)</div><div class='line' id='LC3075'>			if ( eventType.length === 0 &amp;&amp; origCount !== eventType.length ) {</div><div class='line' id='LC3076'>				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {</div><div class='line' id='LC3077'>					jQuery.removeEvent( elem, type, elemData.handle );</div><div class='line' id='LC3078'>				}</div><div class='line' id='LC3079'><br/></div><div class='line' id='LC3080'>				delete events[ type ];</div><div class='line' id='LC3081'>			}</div><div class='line' id='LC3082'>		}</div><div class='line' id='LC3083'><br/></div><div class='line' id='LC3084'>		// Remove the expando if it&#39;s no longer used</div><div class='line' id='LC3085'>		if ( jQuery.isEmptyObject( events ) ) {</div><div class='line' id='LC3086'>			handle = elemData.handle;</div><div class='line' id='LC3087'>			if ( handle ) {</div><div class='line' id='LC3088'>				handle.elem = null;</div><div class='line' id='LC3089'>			}</div><div class='line' id='LC3090'><br/></div><div class='line' id='LC3091'>			// removeData also checks for emptiness and clears the expando if empty</div><div class='line' id='LC3092'>			// so use it instead of delete</div><div class='line' id='LC3093'>			jQuery.removeData( elem, [ &quot;events&quot;, &quot;handle&quot; ], true );</div><div class='line' id='LC3094'>		}</div><div class='line' id='LC3095'>	},</div><div class='line' id='LC3096'><br/></div><div class='line' id='LC3097'>	// Events that are safe to short-circuit if no handlers are attached.</div><div class='line' id='LC3098'>	// Native DOM events should not be added, they may have inline handlers.</div><div class='line' id='LC3099'>	customEvent: {</div><div class='line' id='LC3100'>		&quot;getData&quot;: true,</div><div class='line' id='LC3101'>		&quot;setData&quot;: true,</div><div class='line' id='LC3102'>		&quot;changeData&quot;: true</div><div class='line' id='LC3103'>	},</div><div class='line' id='LC3104'><br/></div><div class='line' id='LC3105'>	trigger: function( event, data, elem, onlyHandlers ) {</div><div class='line' id='LC3106'>		// Don&#39;t do events on text and comment nodes</div><div class='line' id='LC3107'>		if ( elem &amp;&amp; (elem.nodeType === 3 || elem.nodeType === 8) ) {</div><div class='line' id='LC3108'>			return;</div><div class='line' id='LC3109'>		}</div><div class='line' id='LC3110'><br/></div><div class='line' id='LC3111'>		// Event object or event type</div><div class='line' id='LC3112'>		var type = event.type || event,</div><div class='line' id='LC3113'>			namespaces = [],</div><div class='line' id='LC3114'>			cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;</div><div class='line' id='LC3115'><br/></div><div class='line' id='LC3116'>		// focus/blur morphs to focusin/out; ensure we&#39;re not firing them right now</div><div class='line' id='LC3117'>		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {</div><div class='line' id='LC3118'>			return;</div><div class='line' id='LC3119'>		}</div><div class='line' id='LC3120'><br/></div><div class='line' id='LC3121'>		if ( type.indexOf( &quot;!&quot; ) &gt;= 0 ) {</div><div class='line' id='LC3122'>			// Exclusive events trigger only for the exact event (no namespaces)</div><div class='line' id='LC3123'>			type = type.slice(0, -1);</div><div class='line' id='LC3124'>			exclusive = true;</div><div class='line' id='LC3125'>		}</div><div class='line' id='LC3126'><br/></div><div class='line' id='LC3127'>		if ( type.indexOf( &quot;.&quot; ) &gt;= 0 ) {</div><div class='line' id='LC3128'>			// Namespaced trigger; create a regexp to match event type in handle()</div><div class='line' id='LC3129'>			namespaces = type.split(&quot;.&quot;);</div><div class='line' id='LC3130'>			type = namespaces.shift();</div><div class='line' id='LC3131'>			namespaces.sort();</div><div class='line' id='LC3132'>		}</div><div class='line' id='LC3133'><br/></div><div class='line' id='LC3134'>		if ( (!elem || jQuery.event.customEvent[ type ]) &amp;&amp; !jQuery.event.global[ type ] ) {</div><div class='line' id='LC3135'>			// No jQuery handlers for this event type, and it can&#39;t have inline handlers</div><div class='line' id='LC3136'>			return;</div><div class='line' id='LC3137'>		}</div><div class='line' id='LC3138'><br/></div><div class='line' id='LC3139'>		// Caller can pass in an Event, Object, or just an event type string</div><div class='line' id='LC3140'>		event = typeof event === &quot;object&quot; ?</div><div class='line' id='LC3141'>			// jQuery.Event object</div><div class='line' id='LC3142'>			event[ jQuery.expando ] ? event :</div><div class='line' id='LC3143'>			// Object literal</div><div class='line' id='LC3144'>			new jQuery.Event( type, event ) :</div><div class='line' id='LC3145'>			// Just the event type (string)</div><div class='line' id='LC3146'>			new jQuery.Event( type );</div><div class='line' id='LC3147'><br/></div><div class='line' id='LC3148'>		event.type = type;</div><div class='line' id='LC3149'>		event.isTrigger = true;</div><div class='line' id='LC3150'>		event.exclusive = exclusive;</div><div class='line' id='LC3151'>		event.namespace = namespaces.join( &quot;.&quot; );</div><div class='line' id='LC3152'>		event.namespace_re = event.namespace? new RegExp(&quot;(^|\\.)&quot; + namespaces.join(&quot;\\.(?:.*\\.)?&quot;) + &quot;(\\.|$)&quot;) : null;</div><div class='line' id='LC3153'>		ontype = type.indexOf( &quot;:&quot; ) &lt; 0 ? &quot;on&quot; + type : &quot;&quot;;</div><div class='line' id='LC3154'><br/></div><div class='line' id='LC3155'>		// Handle a global trigger</div><div class='line' id='LC3156'>		if ( !elem ) {</div><div class='line' id='LC3157'><br/></div><div class='line' id='LC3158'>			// TODO: Stop taunting the data cache; remove global events and always attach to document</div><div class='line' id='LC3159'>			cache = jQuery.cache;</div><div class='line' id='LC3160'>			for ( i in cache ) {</div><div class='line' id='LC3161'>				if ( cache[ i ].events &amp;&amp; cache[ i ].events[ type ] ) {</div><div class='line' id='LC3162'>					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );</div><div class='line' id='LC3163'>				}</div><div class='line' id='LC3164'>			}</div><div class='line' id='LC3165'>			return;</div><div class='line' id='LC3166'>		}</div><div class='line' id='LC3167'><br/></div><div class='line' id='LC3168'>		// Clean up the event in case it is being reused</div><div class='line' id='LC3169'>		event.result = undefined;</div><div class='line' id='LC3170'>		if ( !event.target ) {</div><div class='line' id='LC3171'>			event.target = elem;</div><div class='line' id='LC3172'>		}</div><div class='line' id='LC3173'><br/></div><div class='line' id='LC3174'>		// Clone any incoming data and prepend the event, creating the handler arg list</div><div class='line' id='LC3175'>		data = data != null ? jQuery.makeArray( data ) : [];</div><div class='line' id='LC3176'>		data.unshift( event );</div><div class='line' id='LC3177'><br/></div><div class='line' id='LC3178'>		// Allow special events to draw outside the lines</div><div class='line' id='LC3179'>		special = jQuery.event.special[ type ] || {};</div><div class='line' id='LC3180'>		if ( special.trigger &amp;&amp; special.trigger.apply( elem, data ) === false ) {</div><div class='line' id='LC3181'>			return;</div><div class='line' id='LC3182'>		}</div><div class='line' id='LC3183'><br/></div><div class='line' id='LC3184'>		// Determine event propagation path in advance, per W3C events spec (#9951)</div><div class='line' id='LC3185'>		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)</div><div class='line' id='LC3186'>		eventPath = [[ elem, special.bindType || type ]];</div><div class='line' id='LC3187'>		if ( !onlyHandlers &amp;&amp; !special.noBubble &amp;&amp; !jQuery.isWindow( elem ) ) {</div><div class='line' id='LC3188'><br/></div><div class='line' id='LC3189'>			bubbleType = special.delegateType || type;</div><div class='line' id='LC3190'>			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;</div><div class='line' id='LC3191'>			old = null;</div><div class='line' id='LC3192'>			for ( ; cur; cur = cur.parentNode ) {</div><div class='line' id='LC3193'>				eventPath.push([ cur, bubbleType ]);</div><div class='line' id='LC3194'>				old = cur;</div><div class='line' id='LC3195'>			}</div><div class='line' id='LC3196'><br/></div><div class='line' id='LC3197'>			// Only add window if we got to document (e.g., not plain obj or detached DOM)</div><div class='line' id='LC3198'>			if ( old &amp;&amp; old === elem.ownerDocument ) {</div><div class='line' id='LC3199'>				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);</div><div class='line' id='LC3200'>			}</div><div class='line' id='LC3201'>		}</div><div class='line' id='LC3202'><br/></div><div class='line' id='LC3203'>		// Fire handlers on the event path</div><div class='line' id='LC3204'>		for ( i = 0; i &lt; eventPath.length &amp;&amp; !event.isPropagationStopped(); i++ ) {</div><div class='line' id='LC3205'><br/></div><div class='line' id='LC3206'>			cur = eventPath[i][0];</div><div class='line' id='LC3207'>			event.type = eventPath[i][1];</div><div class='line' id='LC3208'><br/></div><div class='line' id='LC3209'>			handle = ( jQuery._data( cur, &quot;events&quot; ) || {} )[ event.type ] &amp;&amp; jQuery._data( cur, &quot;handle&quot; );</div><div class='line' id='LC3210'>			if ( handle ) {</div><div class='line' id='LC3211'>				handle.apply( cur, data );</div><div class='line' id='LC3212'>			}</div><div class='line' id='LC3213'>			// Note that this is a bare JS function and not a jQuery handler</div><div class='line' id='LC3214'>			handle = ontype &amp;&amp; cur[ ontype ];</div><div class='line' id='LC3215'>			if ( handle &amp;&amp; jQuery.acceptData( cur ) &amp;&amp; handle.apply( cur, data ) === false ) {</div><div class='line' id='LC3216'>				event.preventDefault();</div><div class='line' id='LC3217'>			}</div><div class='line' id='LC3218'>		}</div><div class='line' id='LC3219'>		event.type = type;</div><div class='line' id='LC3220'><br/></div><div class='line' id='LC3221'>		// If nobody prevented the default action, do it now</div><div class='line' id='LC3222'>		if ( !onlyHandlers &amp;&amp; !event.isDefaultPrevented() ) {</div><div class='line' id='LC3223'><br/></div><div class='line' id='LC3224'>			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &amp;&amp;</div><div class='line' id='LC3225'>				!(type === &quot;click&quot; &amp;&amp; jQuery.nodeName( elem, &quot;a&quot; )) &amp;&amp; jQuery.acceptData( elem ) ) {</div><div class='line' id='LC3226'><br/></div><div class='line' id='LC3227'>				// Call a native DOM method on the target with the same name name as the event.</div><div class='line' id='LC3228'>				// Can&#39;t use an .isFunction() check here because IE6/7 fails that test.</div><div class='line' id='LC3229'>				// Don&#39;t do default actions on window, that&#39;s where global variables be (#6170)</div><div class='line' id='LC3230'>				// IE&lt;9 dies on focus/blur to hidden element (#1486)</div><div class='line' id='LC3231'>				if ( ontype &amp;&amp; elem[ type ] &amp;&amp; ((type !== &quot;focus&quot; &amp;&amp; type !== &quot;blur&quot;) || event.target.offsetWidth !== 0) &amp;&amp; !jQuery.isWindow( elem ) ) {</div><div class='line' id='LC3232'><br/></div><div class='line' id='LC3233'>					// Don&#39;t re-trigger an onFOO event when we call its FOO() method</div><div class='line' id='LC3234'>					old = elem[ ontype ];</div><div class='line' id='LC3235'><br/></div><div class='line' id='LC3236'>					if ( old ) {</div><div class='line' id='LC3237'>						elem[ ontype ] = null;</div><div class='line' id='LC3238'>					}</div><div class='line' id='LC3239'><br/></div><div class='line' id='LC3240'>					// Prevent re-triggering of the same event, since we already bubbled it above</div><div class='line' id='LC3241'>					jQuery.event.triggered = type;</div><div class='line' id='LC3242'>					elem[ type ]();</div><div class='line' id='LC3243'>					jQuery.event.triggered = undefined;</div><div class='line' id='LC3244'><br/></div><div class='line' id='LC3245'>					if ( old ) {</div><div class='line' id='LC3246'>						elem[ ontype ] = old;</div><div class='line' id='LC3247'>					}</div><div class='line' id='LC3248'>				}</div><div class='line' id='LC3249'>			}</div><div class='line' id='LC3250'>		}</div><div class='line' id='LC3251'><br/></div><div class='line' id='LC3252'>		return event.result;</div><div class='line' id='LC3253'>	},</div><div class='line' id='LC3254'><br/></div><div class='line' id='LC3255'>	dispatch: function( event ) {</div><div class='line' id='LC3256'><br/></div><div class='line' id='LC3257'>		// Make a writable jQuery.Event from the native event object</div><div class='line' id='LC3258'>		event = jQuery.event.fix( event || window.event );</div><div class='line' id='LC3259'><br/></div><div class='line' id='LC3260'>		var handlers = ( (jQuery._data( this, &quot;events&quot; ) || {} )[ event.type ] || []),</div><div class='line' id='LC3261'>			delegateCount = handlers.delegateCount,</div><div class='line' id='LC3262'>			args = [].slice.call( arguments, 0 ),</div><div class='line' id='LC3263'>			run_all = !event.exclusive &amp;&amp; !event.namespace,</div><div class='line' id='LC3264'>			special = jQuery.event.special[ event.type ] || {},</div><div class='line' id='LC3265'>			handlerQueue = [],</div><div class='line' id='LC3266'>			i, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;</div><div class='line' id='LC3267'><br/></div><div class='line' id='LC3268'>		// Use the fix-ed jQuery.Event rather than the (read-only) native event</div><div class='line' id='LC3269'>		args[0] = event;</div><div class='line' id='LC3270'>		event.delegateTarget = this;</div><div class='line' id='LC3271'><br/></div><div class='line' id='LC3272'>		// Call the preDispatch hook for the mapped type, and let it bail if desired</div><div class='line' id='LC3273'>		if ( special.preDispatch &amp;&amp; special.preDispatch.call( this, event ) === false ) {</div><div class='line' id='LC3274'>			return;</div><div class='line' id='LC3275'>		}</div><div class='line' id='LC3276'><br/></div><div class='line' id='LC3277'>		// Determine handlers that should run if there are delegated events</div><div class='line' id='LC3278'>		// Avoid non-left-click bubbling in Firefox (#3861)</div><div class='line' id='LC3279'>		if ( delegateCount &amp;&amp; !(event.button &amp;&amp; event.type === &quot;click&quot;) ) {</div><div class='line' id='LC3280'><br/></div><div class='line' id='LC3281'>			// Pregenerate a single jQuery object for reuse with .is()</div><div class='line' id='LC3282'>			jqcur = jQuery(this);</div><div class='line' id='LC3283'>			jqcur.context = this.ownerDocument || this;</div><div class='line' id='LC3284'><br/></div><div class='line' id='LC3285'>			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {</div><div class='line' id='LC3286'><br/></div><div class='line' id='LC3287'>				// Don&#39;t process events on disabled elements (#6911, #8165)</div><div class='line' id='LC3288'>				if ( cur.disabled !== true ) {</div><div class='line' id='LC3289'>					selMatch = {};</div><div class='line' id='LC3290'>					matches = [];</div><div class='line' id='LC3291'>					jqcur[0] = cur;</div><div class='line' id='LC3292'>					for ( i = 0; i &lt; delegateCount; i++ ) {</div><div class='line' id='LC3293'>						handleObj = handlers[ i ];</div><div class='line' id='LC3294'>						sel = handleObj.selector;</div><div class='line' id='LC3295'><br/></div><div class='line' id='LC3296'>						if ( selMatch[ sel ] === undefined ) {</div><div class='line' id='LC3297'>							selMatch[ sel ] = (</div><div class='line' id='LC3298'>								handleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )</div><div class='line' id='LC3299'>							);</div><div class='line' id='LC3300'>						}</div><div class='line' id='LC3301'>						if ( selMatch[ sel ] ) {</div><div class='line' id='LC3302'>							matches.push( handleObj );</div><div class='line' id='LC3303'>						}</div><div class='line' id='LC3304'>					}</div><div class='line' id='LC3305'>					if ( matches.length ) {</div><div class='line' id='LC3306'>						handlerQueue.push({ elem: cur, matches: matches });</div><div class='line' id='LC3307'>					}</div><div class='line' id='LC3308'>				}</div><div class='line' id='LC3309'>			}</div><div class='line' id='LC3310'>		}</div><div class='line' id='LC3311'><br/></div><div class='line' id='LC3312'>		// Add the remaining (directly-bound) handlers</div><div class='line' id='LC3313'>		if ( handlers.length &gt; delegateCount ) {</div><div class='line' id='LC3314'>			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });</div><div class='line' id='LC3315'>		}</div><div class='line' id='LC3316'><br/></div><div class='line' id='LC3317'>		// Run delegates first; they may want to stop propagation beneath us</div><div class='line' id='LC3318'>		for ( i = 0; i &lt; handlerQueue.length &amp;&amp; !event.isPropagationStopped(); i++ ) {</div><div class='line' id='LC3319'>			matched = handlerQueue[ i ];</div><div class='line' id='LC3320'>			event.currentTarget = matched.elem;</div><div class='line' id='LC3321'><br/></div><div class='line' id='LC3322'>			for ( j = 0; j &lt; matched.matches.length &amp;&amp; !event.isImmediatePropagationStopped(); j++ ) {</div><div class='line' id='LC3323'>				handleObj = matched.matches[ j ];</div><div class='line' id='LC3324'><br/></div><div class='line' id='LC3325'>				// Triggered event must either 1) be non-exclusive and have no namespace, or</div><div class='line' id='LC3326'>				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).</div><div class='line' id='LC3327'>				if ( run_all || (!event.namespace &amp;&amp; !handleObj.namespace) || event.namespace_re &amp;&amp; event.namespace_re.test( handleObj.namespace ) ) {</div><div class='line' id='LC3328'><br/></div><div class='line' id='LC3329'>					event.data = handleObj.data;</div><div class='line' id='LC3330'>					event.handleObj = handleObj;</div><div class='line' id='LC3331'><br/></div><div class='line' id='LC3332'>					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )</div><div class='line' id='LC3333'>							.apply( matched.elem, args );</div><div class='line' id='LC3334'><br/></div><div class='line' id='LC3335'>					if ( ret !== undefined ) {</div><div class='line' id='LC3336'>						event.result = ret;</div><div class='line' id='LC3337'>						if ( ret === false ) {</div><div class='line' id='LC3338'>							event.preventDefault();</div><div class='line' id='LC3339'>							event.stopPropagation();</div><div class='line' id='LC3340'>						}</div><div class='line' id='LC3341'>					}</div><div class='line' id='LC3342'>				}</div><div class='line' id='LC3343'>			}</div><div class='line' id='LC3344'>		}</div><div class='line' id='LC3345'><br/></div><div class='line' id='LC3346'>		// Call the postDispatch hook for the mapped type</div><div class='line' id='LC3347'>		if ( special.postDispatch ) {</div><div class='line' id='LC3348'>			special.postDispatch.call( this, event );</div><div class='line' id='LC3349'>		}</div><div class='line' id='LC3350'><br/></div><div class='line' id='LC3351'>		return event.result;</div><div class='line' id='LC3352'>	},</div><div class='line' id='LC3353'><br/></div><div class='line' id='LC3354'>	// Includes some event props shared by KeyEvent and MouseEvent</div><div class='line' id='LC3355'>	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***</div><div class='line' id='LC3356'>	props: &quot;attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which&quot;.split(&quot; &quot;),</div><div class='line' id='LC3357'><br/></div><div class='line' id='LC3358'>	fixHooks: {},</div><div class='line' id='LC3359'><br/></div><div class='line' id='LC3360'>	keyHooks: {</div><div class='line' id='LC3361'>		props: &quot;char charCode key keyCode&quot;.split(&quot; &quot;),</div><div class='line' id='LC3362'>		filter: function( event, original ) {</div><div class='line' id='LC3363'><br/></div><div class='line' id='LC3364'>			// Add which for key events</div><div class='line' id='LC3365'>			if ( event.which == null ) {</div><div class='line' id='LC3366'>				event.which = original.charCode != null ? original.charCode : original.keyCode;</div><div class='line' id='LC3367'>			}</div><div class='line' id='LC3368'><br/></div><div class='line' id='LC3369'>			return event;</div><div class='line' id='LC3370'>		}</div><div class='line' id='LC3371'>	},</div><div class='line' id='LC3372'><br/></div><div class='line' id='LC3373'>	mouseHooks: {</div><div class='line' id='LC3374'>		props: &quot;button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement&quot;.split(&quot; &quot;),</div><div class='line' id='LC3375'>		filter: function( event, original ) {</div><div class='line' id='LC3376'>			var eventDoc, doc, body,</div><div class='line' id='LC3377'>				button = original.button,</div><div class='line' id='LC3378'>				fromElement = original.fromElement;</div><div class='line' id='LC3379'><br/></div><div class='line' id='LC3380'>			// Calculate pageX/Y if missing and clientX/Y available</div><div class='line' id='LC3381'>			if ( event.pageX == null &amp;&amp; original.clientX != null ) {</div><div class='line' id='LC3382'>				eventDoc = event.target.ownerDocument || document;</div><div class='line' id='LC3383'>				doc = eventDoc.documentElement;</div><div class='line' id='LC3384'>				body = eventDoc.body;</div><div class='line' id='LC3385'><br/></div><div class='line' id='LC3386'>				event.pageX = original.clientX + ( doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0 ) - ( doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0 );</div><div class='line' id='LC3387'>				event.pageY = original.clientY + ( doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0 ) - ( doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );</div><div class='line' id='LC3388'>			}</div><div class='line' id='LC3389'><br/></div><div class='line' id='LC3390'>			// Add relatedTarget, if necessary</div><div class='line' id='LC3391'>			if ( !event.relatedTarget &amp;&amp; fromElement ) {</div><div class='line' id='LC3392'>				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;</div><div class='line' id='LC3393'>			}</div><div class='line' id='LC3394'><br/></div><div class='line' id='LC3395'>			// Add which for click: 1 === left; 2 === middle; 3 === right</div><div class='line' id='LC3396'>			// Note: button is not normalized, so don&#39;t use it</div><div class='line' id='LC3397'>			if ( !event.which &amp;&amp; button !== undefined ) {</div><div class='line' id='LC3398'>				event.which = ( button &amp; 1 ? 1 : ( button &amp; 2 ? 3 : ( button &amp; 4 ? 2 : 0 ) ) );</div><div class='line' id='LC3399'>			}</div><div class='line' id='LC3400'><br/></div><div class='line' id='LC3401'>			return event;</div><div class='line' id='LC3402'>		}</div><div class='line' id='LC3403'>	},</div><div class='line' id='LC3404'><br/></div><div class='line' id='LC3405'>	fix: function( event ) {</div><div class='line' id='LC3406'>		if ( event[ jQuery.expando ] ) {</div><div class='line' id='LC3407'>			return event;</div><div class='line' id='LC3408'>		}</div><div class='line' id='LC3409'><br/></div><div class='line' id='LC3410'>		// Create a writable copy of the event object and normalize some properties</div><div class='line' id='LC3411'>		var i, prop,</div><div class='line' id='LC3412'>			originalEvent = event,</div><div class='line' id='LC3413'>			fixHook = jQuery.event.fixHooks[ event.type ] || {},</div><div class='line' id='LC3414'>			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;</div><div class='line' id='LC3415'><br/></div><div class='line' id='LC3416'>		event = jQuery.Event( originalEvent );</div><div class='line' id='LC3417'><br/></div><div class='line' id='LC3418'>		for ( i = copy.length; i; ) {</div><div class='line' id='LC3419'>			prop = copy[ --i ];</div><div class='line' id='LC3420'>			event[ prop ] = originalEvent[ prop ];</div><div class='line' id='LC3421'>		}</div><div class='line' id='LC3422'><br/></div><div class='line' id='LC3423'>		// Fix target property, if necessary (#1925, IE 6/7/8 &amp; Safari2)</div><div class='line' id='LC3424'>		if ( !event.target ) {</div><div class='line' id='LC3425'>			event.target = originalEvent.srcElement || document;</div><div class='line' id='LC3426'>		}</div><div class='line' id='LC3427'><br/></div><div class='line' id='LC3428'>		// Target should not be a text node (#504, Safari)</div><div class='line' id='LC3429'>		if ( event.target.nodeType === 3 ) {</div><div class='line' id='LC3430'>			event.target = event.target.parentNode;</div><div class='line' id='LC3431'>		}</div><div class='line' id='LC3432'><br/></div><div class='line' id='LC3433'>		// For mouse/key events; add metaKey if it&#39;s not there (#3368, IE6/7/8)</div><div class='line' id='LC3434'>		if ( event.metaKey === undefined ) {</div><div class='line' id='LC3435'>			event.metaKey = event.ctrlKey;</div><div class='line' id='LC3436'>		}</div><div class='line' id='LC3437'><br/></div><div class='line' id='LC3438'>		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;</div><div class='line' id='LC3439'>	},</div><div class='line' id='LC3440'><br/></div><div class='line' id='LC3441'>	special: {</div><div class='line' id='LC3442'>		ready: {</div><div class='line' id='LC3443'>			// Make sure the ready event is setup</div><div class='line' id='LC3444'>			setup: jQuery.bindReady</div><div class='line' id='LC3445'>		},</div><div class='line' id='LC3446'><br/></div><div class='line' id='LC3447'>		load: {</div><div class='line' id='LC3448'>			// Prevent triggered image.load events from bubbling to window.load</div><div class='line' id='LC3449'>			noBubble: true</div><div class='line' id='LC3450'>		},</div><div class='line' id='LC3451'><br/></div><div class='line' id='LC3452'>		focus: {</div><div class='line' id='LC3453'>			delegateType: &quot;focusin&quot;</div><div class='line' id='LC3454'>		},</div><div class='line' id='LC3455'>		blur: {</div><div class='line' id='LC3456'>			delegateType: &quot;focusout&quot;</div><div class='line' id='LC3457'>		},</div><div class='line' id='LC3458'><br/></div><div class='line' id='LC3459'>		beforeunload: {</div><div class='line' id='LC3460'>			setup: function( data, namespaces, eventHandle ) {</div><div class='line' id='LC3461'>				// We only want to do this special case on windows</div><div class='line' id='LC3462'>				if ( jQuery.isWindow( this ) ) {</div><div class='line' id='LC3463'>					this.onbeforeunload = eventHandle;</div><div class='line' id='LC3464'>				}</div><div class='line' id='LC3465'>			},</div><div class='line' id='LC3466'><br/></div><div class='line' id='LC3467'>			teardown: function( namespaces, eventHandle ) {</div><div class='line' id='LC3468'>				if ( this.onbeforeunload === eventHandle ) {</div><div class='line' id='LC3469'>					this.onbeforeunload = null;</div><div class='line' id='LC3470'>				}</div><div class='line' id='LC3471'>			}</div><div class='line' id='LC3472'>		}</div><div class='line' id='LC3473'>	},</div><div class='line' id='LC3474'><br/></div><div class='line' id='LC3475'>	simulate: function( type, elem, event, bubble ) {</div><div class='line' id='LC3476'>		// Piggyback on a donor event to simulate a different one.</div><div class='line' id='LC3477'>		// Fake originalEvent to avoid donor&#39;s stopPropagation, but if the</div><div class='line' id='LC3478'>		// simulated event prevents default then we do the same on the donor.</div><div class='line' id='LC3479'>		var e = jQuery.extend(</div><div class='line' id='LC3480'>			new jQuery.Event(),</div><div class='line' id='LC3481'>			event,</div><div class='line' id='LC3482'>			{ type: type,</div><div class='line' id='LC3483'>				isSimulated: true,</div><div class='line' id='LC3484'>				originalEvent: {}</div><div class='line' id='LC3485'>			}</div><div class='line' id='LC3486'>		);</div><div class='line' id='LC3487'>		if ( bubble ) {</div><div class='line' id='LC3488'>			jQuery.event.trigger( e, null, elem );</div><div class='line' id='LC3489'>		} else {</div><div class='line' id='LC3490'>			jQuery.event.dispatch.call( elem, e );</div><div class='line' id='LC3491'>		}</div><div class='line' id='LC3492'>		if ( e.isDefaultPrevented() ) {</div><div class='line' id='LC3493'>			event.preventDefault();</div><div class='line' id='LC3494'>		}</div><div class='line' id='LC3495'>	}</div><div class='line' id='LC3496'>};</div><div class='line' id='LC3497'><br/></div><div class='line' id='LC3498'>// Some plugins are using, but it&#39;s undocumented/deprecated and will be removed.</div><div class='line' id='LC3499'>// The 1.7 special event interface should provide all the hooks needed now.</div><div class='line' id='LC3500'>jQuery.event.handle = jQuery.event.dispatch;</div><div class='line' id='LC3501'><br/></div><div class='line' id='LC3502'>jQuery.removeEvent = document.removeEventListener ?</div><div class='line' id='LC3503'>	function( elem, type, handle ) {</div><div class='line' id='LC3504'>		if ( elem.removeEventListener ) {</div><div class='line' id='LC3505'>			elem.removeEventListener( type, handle, false );</div><div class='line' id='LC3506'>		}</div><div class='line' id='LC3507'>	} :</div><div class='line' id='LC3508'>	function( elem, type, handle ) {</div><div class='line' id='LC3509'>		if ( elem.detachEvent ) {</div><div class='line' id='LC3510'>			elem.detachEvent( &quot;on&quot; + type, handle );</div><div class='line' id='LC3511'>		}</div><div class='line' id='LC3512'>	};</div><div class='line' id='LC3513'><br/></div><div class='line' id='LC3514'>jQuery.Event = function( src, props ) {</div><div class='line' id='LC3515'>	// Allow instantiation without the &#39;new&#39; keyword</div><div class='line' id='LC3516'>	if ( !(this instanceof jQuery.Event) ) {</div><div class='line' id='LC3517'>		return new jQuery.Event( src, props );</div><div class='line' id='LC3518'>	}</div><div class='line' id='LC3519'><br/></div><div class='line' id='LC3520'>	// Event object</div><div class='line' id='LC3521'>	if ( src &amp;&amp; src.type ) {</div><div class='line' id='LC3522'>		this.originalEvent = src;</div><div class='line' id='LC3523'>		this.type = src.type;</div><div class='line' id='LC3524'><br/></div><div class='line' id='LC3525'>		// Events bubbling up the document may have been marked as prevented</div><div class='line' id='LC3526'>		// by a handler lower down the tree; reflect the correct value.</div><div class='line' id='LC3527'>		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||</div><div class='line' id='LC3528'>			src.getPreventDefault &amp;&amp; src.getPreventDefault() ) ? returnTrue : returnFalse;</div><div class='line' id='LC3529'><br/></div><div class='line' id='LC3530'>	// Event type</div><div class='line' id='LC3531'>	} else {</div><div class='line' id='LC3532'>		this.type = src;</div><div class='line' id='LC3533'>	}</div><div class='line' id='LC3534'><br/></div><div class='line' id='LC3535'>	// Put explicitly provided properties onto the event object</div><div class='line' id='LC3536'>	if ( props ) {</div><div class='line' id='LC3537'>		jQuery.extend( this, props );</div><div class='line' id='LC3538'>	}</div><div class='line' id='LC3539'><br/></div><div class='line' id='LC3540'>	// Create a timestamp if incoming event doesn&#39;t have one</div><div class='line' id='LC3541'>	this.timeStamp = src &amp;&amp; src.timeStamp || jQuery.now();</div><div class='line' id='LC3542'><br/></div><div class='line' id='LC3543'>	// Mark it as fixed</div><div class='line' id='LC3544'>	this[ jQuery.expando ] = true;</div><div class='line' id='LC3545'>};</div><div class='line' id='LC3546'><br/></div><div class='line' id='LC3547'>function returnFalse() {</div><div class='line' id='LC3548'>	return false;</div><div class='line' id='LC3549'>}</div><div class='line' id='LC3550'>function returnTrue() {</div><div class='line' id='LC3551'>	return true;</div><div class='line' id='LC3552'>}</div><div class='line' id='LC3553'><br/></div><div class='line' id='LC3554'>// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding</div><div class='line' id='LC3555'>// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html</div><div class='line' id='LC3556'>jQuery.Event.prototype = {</div><div class='line' id='LC3557'>	preventDefault: function() {</div><div class='line' id='LC3558'>		this.isDefaultPrevented = returnTrue;</div><div class='line' id='LC3559'><br/></div><div class='line' id='LC3560'>		var e = this.originalEvent;</div><div class='line' id='LC3561'>		if ( !e ) {</div><div class='line' id='LC3562'>			return;</div><div class='line' id='LC3563'>		}</div><div class='line' id='LC3564'><br/></div><div class='line' id='LC3565'>		// if preventDefault exists run it on the original event</div><div class='line' id='LC3566'>		if ( e.preventDefault ) {</div><div class='line' id='LC3567'>			e.preventDefault();</div><div class='line' id='LC3568'><br/></div><div class='line' id='LC3569'>		// otherwise set the returnValue property of the original event to false (IE)</div><div class='line' id='LC3570'>		} else {</div><div class='line' id='LC3571'>			e.returnValue = false;</div><div class='line' id='LC3572'>		}</div><div class='line' id='LC3573'>	},</div><div class='line' id='LC3574'>	stopPropagation: function() {</div><div class='line' id='LC3575'>		this.isPropagationStopped = returnTrue;</div><div class='line' id='LC3576'><br/></div><div class='line' id='LC3577'>		var e = this.originalEvent;</div><div class='line' id='LC3578'>		if ( !e ) {</div><div class='line' id='LC3579'>			return;</div><div class='line' id='LC3580'>		}</div><div class='line' id='LC3581'>		// if stopPropagation exists run it on the original event</div><div class='line' id='LC3582'>		if ( e.stopPropagation ) {</div><div class='line' id='LC3583'>			e.stopPropagation();</div><div class='line' id='LC3584'>		}</div><div class='line' id='LC3585'>		// otherwise set the cancelBubble property of the original event to true (IE)</div><div class='line' id='LC3586'>		e.cancelBubble = true;</div><div class='line' id='LC3587'>	},</div><div class='line' id='LC3588'>	stopImmediatePropagation: function() {</div><div class='line' id='LC3589'>		this.isImmediatePropagationStopped = returnTrue;</div><div class='line' id='LC3590'>		this.stopPropagation();</div><div class='line' id='LC3591'>	},</div><div class='line' id='LC3592'>	isDefaultPrevented: returnFalse,</div><div class='line' id='LC3593'>	isPropagationStopped: returnFalse,</div><div class='line' id='LC3594'>	isImmediatePropagationStopped: returnFalse</div><div class='line' id='LC3595'>};</div><div class='line' id='LC3596'><br/></div><div class='line' id='LC3597'>// Create mouseenter/leave events using mouseover/out and event-time checks</div><div class='line' id='LC3598'>jQuery.each({</div><div class='line' id='LC3599'>	mouseenter: &quot;mouseover&quot;,</div><div class='line' id='LC3600'>	mouseleave: &quot;mouseout&quot;</div><div class='line' id='LC3601'>}, function( orig, fix ) {</div><div class='line' id='LC3602'>	jQuery.event.special[ orig ] = {</div><div class='line' id='LC3603'>		delegateType: fix,</div><div class='line' id='LC3604'>		bindType: fix,</div><div class='line' id='LC3605'><br/></div><div class='line' id='LC3606'>		handle: function( event ) {</div><div class='line' id='LC3607'>			var target = this,</div><div class='line' id='LC3608'>				related = event.relatedTarget,</div><div class='line' id='LC3609'>				handleObj = event.handleObj,</div><div class='line' id='LC3610'>				selector = handleObj.selector,</div><div class='line' id='LC3611'>				ret;</div><div class='line' id='LC3612'><br/></div><div class='line' id='LC3613'>			// For mousenter/leave call the handler if related is outside the target.</div><div class='line' id='LC3614'>			// NB: No relatedTarget if the mouse left/entered the browser window</div><div class='line' id='LC3615'>			if ( !related || (related !== target &amp;&amp; !jQuery.contains( target, related )) ) {</div><div class='line' id='LC3616'>				event.type = handleObj.origType;</div><div class='line' id='LC3617'>				ret = handleObj.handler.apply( this, arguments );</div><div class='line' id='LC3618'>				event.type = fix;</div><div class='line' id='LC3619'>			}</div><div class='line' id='LC3620'>			return ret;</div><div class='line' id='LC3621'>		}</div><div class='line' id='LC3622'>	};</div><div class='line' id='LC3623'>});</div><div class='line' id='LC3624'><br/></div><div class='line' id='LC3625'>// IE submit delegation</div><div class='line' id='LC3626'>if ( !jQuery.support.submitBubbles ) {</div><div class='line' id='LC3627'><br/></div><div class='line' id='LC3628'>	jQuery.event.special.submit = {</div><div class='line' id='LC3629'>		setup: function() {</div><div class='line' id='LC3630'>			// Only need this for delegated form submit events</div><div class='line' id='LC3631'>			if ( jQuery.nodeName( this, &quot;form&quot; ) ) {</div><div class='line' id='LC3632'>				return false;</div><div class='line' id='LC3633'>			}</div><div class='line' id='LC3634'><br/></div><div class='line' id='LC3635'>			// Lazy-add a submit handler when a descendant form may potentially be submitted</div><div class='line' id='LC3636'>			jQuery.event.add( this, &quot;click._submit keypress._submit&quot;, function( e ) {</div><div class='line' id='LC3637'>				// Node name check avoids a VML-related crash in IE (#9807)</div><div class='line' id='LC3638'>				var elem = e.target,</div><div class='line' id='LC3639'>					form = jQuery.nodeName( elem, &quot;input&quot; ) || jQuery.nodeName( elem, &quot;button&quot; ) ? elem.form : undefined;</div><div class='line' id='LC3640'>				if ( form &amp;&amp; !form._submit_attached ) {</div><div class='line' id='LC3641'>					jQuery.event.add( form, &quot;submit._submit&quot;, function( event ) {</div><div class='line' id='LC3642'>						event._submit_bubble = true;</div><div class='line' id='LC3643'>					});</div><div class='line' id='LC3644'>					form._submit_attached = true;</div><div class='line' id='LC3645'>				}</div><div class='line' id='LC3646'>			});</div><div class='line' id='LC3647'>			// return undefined since we don&#39;t need an event listener</div><div class='line' id='LC3648'>		},</div><div class='line' id='LC3649'><br/></div><div class='line' id='LC3650'>		postDispatch: function( event ) {</div><div class='line' id='LC3651'>			// If form was submitted by the user, bubble the event up the tree</div><div class='line' id='LC3652'>			if ( event._submit_bubble ) {</div><div class='line' id='LC3653'>				delete event._submit_bubble;</div><div class='line' id='LC3654'>				if ( this.parentNode &amp;&amp; !event.isTrigger ) {</div><div class='line' id='LC3655'>					jQuery.event.simulate( &quot;submit&quot;, this.parentNode, event, true );</div><div class='line' id='LC3656'>				}</div><div class='line' id='LC3657'>			}</div><div class='line' id='LC3658'>		},</div><div class='line' id='LC3659'><br/></div><div class='line' id='LC3660'>		teardown: function() {</div><div class='line' id='LC3661'>			// Only need this for delegated form submit events</div><div class='line' id='LC3662'>			if ( jQuery.nodeName( this, &quot;form&quot; ) ) {</div><div class='line' id='LC3663'>				return false;</div><div class='line' id='LC3664'>			}</div><div class='line' id='LC3665'><br/></div><div class='line' id='LC3666'>			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above</div><div class='line' id='LC3667'>			jQuery.event.remove( this, &quot;._submit&quot; );</div><div class='line' id='LC3668'>		}</div><div class='line' id='LC3669'>	};</div><div class='line' id='LC3670'>}</div><div class='line' id='LC3671'><br/></div><div class='line' id='LC3672'>// IE change delegation and checkbox/radio fix</div><div class='line' id='LC3673'>if ( !jQuery.support.changeBubbles ) {</div><div class='line' id='LC3674'><br/></div><div class='line' id='LC3675'>	jQuery.event.special.change = {</div><div class='line' id='LC3676'><br/></div><div class='line' id='LC3677'>		setup: function() {</div><div class='line' id='LC3678'><br/></div><div class='line' id='LC3679'>			if ( rformElems.test( this.nodeName ) ) {</div><div class='line' id='LC3680'>				// IE doesn&#39;t fire change on a check/radio until blur; trigger it on click</div><div class='line' id='LC3681'>				// after a propertychange. Eat the blur-change in special.change.handle.</div><div class='line' id='LC3682'>				// This still fires onchange a second time for check/radio after blur.</div><div class='line' id='LC3683'>				if ( this.type === &quot;checkbox&quot; || this.type === &quot;radio&quot; ) {</div><div class='line' id='LC3684'>					jQuery.event.add( this, &quot;propertychange._change&quot;, function( event ) {</div><div class='line' id='LC3685'>						if ( event.originalEvent.propertyName === &quot;checked&quot; ) {</div><div class='line' id='LC3686'>							this._just_changed = true;</div><div class='line' id='LC3687'>						}</div><div class='line' id='LC3688'>					});</div><div class='line' id='LC3689'>					jQuery.event.add( this, &quot;click._change&quot;, function( event ) {</div><div class='line' id='LC3690'>						if ( this._just_changed &amp;&amp; !event.isTrigger ) {</div><div class='line' id='LC3691'>							this._just_changed = false;</div><div class='line' id='LC3692'>							jQuery.event.simulate( &quot;change&quot;, this, event, true );</div><div class='line' id='LC3693'>						}</div><div class='line' id='LC3694'>					});</div><div class='line' id='LC3695'>				}</div><div class='line' id='LC3696'>				return false;</div><div class='line' id='LC3697'>			}</div><div class='line' id='LC3698'>			// Delegated event; lazy-add a change handler on descendant inputs</div><div class='line' id='LC3699'>			jQuery.event.add( this, &quot;beforeactivate._change&quot;, function( e ) {</div><div class='line' id='LC3700'>				var elem = e.target;</div><div class='line' id='LC3701'><br/></div><div class='line' id='LC3702'>				if ( rformElems.test( elem.nodeName ) &amp;&amp; !elem._change_attached ) {</div><div class='line' id='LC3703'>					jQuery.event.add( elem, &quot;change._change&quot;, function( event ) {</div><div class='line' id='LC3704'>						if ( this.parentNode &amp;&amp; !event.isSimulated &amp;&amp; !event.isTrigger ) {</div><div class='line' id='LC3705'>							jQuery.event.simulate( &quot;change&quot;, this.parentNode, event, true );</div><div class='line' id='LC3706'>						}</div><div class='line' id='LC3707'>					});</div><div class='line' id='LC3708'>					elem._change_attached = true;</div><div class='line' id='LC3709'>				}</div><div class='line' id='LC3710'>			});</div><div class='line' id='LC3711'>		},</div><div class='line' id='LC3712'><br/></div><div class='line' id='LC3713'>		handle: function( event ) {</div><div class='line' id='LC3714'>			var elem = event.target;</div><div class='line' id='LC3715'><br/></div><div class='line' id='LC3716'>			// Swallow native change events from checkbox/radio, we already triggered them above</div><div class='line' id='LC3717'>			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== &quot;radio&quot; &amp;&amp; elem.type !== &quot;checkbox&quot;) ) {</div><div class='line' id='LC3718'>				return event.handleObj.handler.apply( this, arguments );</div><div class='line' id='LC3719'>			}</div><div class='line' id='LC3720'>		},</div><div class='line' id='LC3721'><br/></div><div class='line' id='LC3722'>		teardown: function() {</div><div class='line' id='LC3723'>			jQuery.event.remove( this, &quot;._change&quot; );</div><div class='line' id='LC3724'><br/></div><div class='line' id='LC3725'>			return rformElems.test( this.nodeName );</div><div class='line' id='LC3726'>		}</div><div class='line' id='LC3727'>	};</div><div class='line' id='LC3728'>}</div><div class='line' id='LC3729'><br/></div><div class='line' id='LC3730'>// Create &quot;bubbling&quot; focus and blur events</div><div class='line' id='LC3731'>if ( !jQuery.support.focusinBubbles ) {</div><div class='line' id='LC3732'>	jQuery.each({ focus: &quot;focusin&quot;, blur: &quot;focusout&quot; }, function( orig, fix ) {</div><div class='line' id='LC3733'><br/></div><div class='line' id='LC3734'>		// Attach a single capturing handler while someone wants focusin/focusout</div><div class='line' id='LC3735'>		var attaches = 0,</div><div class='line' id='LC3736'>			handler = function( event ) {</div><div class='line' id='LC3737'>				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );</div><div class='line' id='LC3738'>			};</div><div class='line' id='LC3739'><br/></div><div class='line' id='LC3740'>		jQuery.event.special[ fix ] = {</div><div class='line' id='LC3741'>			setup: function() {</div><div class='line' id='LC3742'>				if ( attaches++ === 0 ) {</div><div class='line' id='LC3743'>					document.addEventListener( orig, handler, true );</div><div class='line' id='LC3744'>				}</div><div class='line' id='LC3745'>			},</div><div class='line' id='LC3746'>			teardown: function() {</div><div class='line' id='LC3747'>				if ( --attaches === 0 ) {</div><div class='line' id='LC3748'>					document.removeEventListener( orig, handler, true );</div><div class='line' id='LC3749'>				}</div><div class='line' id='LC3750'>			}</div><div class='line' id='LC3751'>		};</div><div class='line' id='LC3752'>	});</div><div class='line' id='LC3753'>}</div><div class='line' id='LC3754'><br/></div><div class='line' id='LC3755'>jQuery.fn.extend({</div><div class='line' id='LC3756'><br/></div><div class='line' id='LC3757'>	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {</div><div class='line' id='LC3758'>		var origFn, type;</div><div class='line' id='LC3759'><br/></div><div class='line' id='LC3760'>		// Types can be a map of types/handlers</div><div class='line' id='LC3761'>		if ( typeof types === &quot;object&quot; ) {</div><div class='line' id='LC3762'>			// ( types-Object, selector, data )</div><div class='line' id='LC3763'>			if ( typeof selector !== &quot;string&quot; ) { // &amp;&amp; selector != null</div><div class='line' id='LC3764'>				// ( types-Object, data )</div><div class='line' id='LC3765'>				data = data || selector;</div><div class='line' id='LC3766'>				selector = undefined;</div><div class='line' id='LC3767'>			}</div><div class='line' id='LC3768'>			for ( type in types ) {</div><div class='line' id='LC3769'>				this.on( type, selector, data, types[ type ], one );</div><div class='line' id='LC3770'>			}</div><div class='line' id='LC3771'>			return this;</div><div class='line' id='LC3772'>		}</div><div class='line' id='LC3773'><br/></div><div class='line' id='LC3774'>		if ( data == null &amp;&amp; fn == null ) {</div><div class='line' id='LC3775'>			// ( types, fn )</div><div class='line' id='LC3776'>			fn = selector;</div><div class='line' id='LC3777'>			data = selector = undefined;</div><div class='line' id='LC3778'>		} else if ( fn == null ) {</div><div class='line' id='LC3779'>			if ( typeof selector === &quot;string&quot; ) {</div><div class='line' id='LC3780'>				// ( types, selector, fn )</div><div class='line' id='LC3781'>				fn = data;</div><div class='line' id='LC3782'>				data = undefined;</div><div class='line' id='LC3783'>			} else {</div><div class='line' id='LC3784'>				// ( types, data, fn )</div><div class='line' id='LC3785'>				fn = data;</div><div class='line' id='LC3786'>				data = selector;</div><div class='line' id='LC3787'>				selector = undefined;</div><div class='line' id='LC3788'>			}</div><div class='line' id='LC3789'>		}</div><div class='line' id='LC3790'>		if ( fn === false ) {</div><div class='line' id='LC3791'>			fn = returnFalse;</div><div class='line' id='LC3792'>		} else if ( !fn ) {</div><div class='line' id='LC3793'>			return this;</div><div class='line' id='LC3794'>		}</div><div class='line' id='LC3795'><br/></div><div class='line' id='LC3796'>		if ( one === 1 ) {</div><div class='line' id='LC3797'>			origFn = fn;</div><div class='line' id='LC3798'>			fn = function( event ) {</div><div class='line' id='LC3799'>				// Can use an empty set, since event contains the info</div><div class='line' id='LC3800'>				jQuery().off( event );</div><div class='line' id='LC3801'>				return origFn.apply( this, arguments );</div><div class='line' id='LC3802'>			};</div><div class='line' id='LC3803'>			// Use same guid so caller can remove using origFn</div><div class='line' id='LC3804'>			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );</div><div class='line' id='LC3805'>		}</div><div class='line' id='LC3806'>		return this.each( function() {</div><div class='line' id='LC3807'>			jQuery.event.add( this, types, fn, data, selector );</div><div class='line' id='LC3808'>		});</div><div class='line' id='LC3809'>	},</div><div class='line' id='LC3810'>	one: function( types, selector, data, fn ) {</div><div class='line' id='LC3811'>		return this.on( types, selector, data, fn, 1 );</div><div class='line' id='LC3812'>	},</div><div class='line' id='LC3813'>	off: function( types, selector, fn ) {</div><div class='line' id='LC3814'>		if ( types &amp;&amp; types.preventDefault &amp;&amp; types.handleObj ) {</div><div class='line' id='LC3815'>			// ( event )  dispatched jQuery.Event</div><div class='line' id='LC3816'>			var handleObj = types.handleObj;</div><div class='line' id='LC3817'>			jQuery( types.delegateTarget ).off(</div><div class='line' id='LC3818'>				handleObj.namespace ? handleObj.origType + &quot;.&quot; + handleObj.namespace : handleObj.origType,</div><div class='line' id='LC3819'>				handleObj.selector,</div><div class='line' id='LC3820'>				handleObj.handler</div><div class='line' id='LC3821'>			);</div><div class='line' id='LC3822'>			return this;</div><div class='line' id='LC3823'>		}</div><div class='line' id='LC3824'>		if ( typeof types === &quot;object&quot; ) {</div><div class='line' id='LC3825'>			// ( types-object [, selector] )</div><div class='line' id='LC3826'>			for ( var type in types ) {</div><div class='line' id='LC3827'>				this.off( type, selector, types[ type ] );</div><div class='line' id='LC3828'>			}</div><div class='line' id='LC3829'>			return this;</div><div class='line' id='LC3830'>		}</div><div class='line' id='LC3831'>		if ( selector === false || typeof selector === &quot;function&quot; ) {</div><div class='line' id='LC3832'>			// ( types [, fn] )</div><div class='line' id='LC3833'>			fn = selector;</div><div class='line' id='LC3834'>			selector = undefined;</div><div class='line' id='LC3835'>		}</div><div class='line' id='LC3836'>		if ( fn === false ) {</div><div class='line' id='LC3837'>			fn = returnFalse;</div><div class='line' id='LC3838'>		}</div><div class='line' id='LC3839'>		return this.each(function() {</div><div class='line' id='LC3840'>			jQuery.event.remove( this, types, fn, selector );</div><div class='line' id='LC3841'>		});</div><div class='line' id='LC3842'>	},</div><div class='line' id='LC3843'><br/></div><div class='line' id='LC3844'>	bind: function( types, data, fn ) {</div><div class='line' id='LC3845'>		return this.on( types, null, data, fn );</div><div class='line' id='LC3846'>	},</div><div class='line' id='LC3847'>	unbind: function( types, fn ) {</div><div class='line' id='LC3848'>		return this.off( types, null, fn );</div><div class='line' id='LC3849'>	},</div><div class='line' id='LC3850'><br/></div><div class='line' id='LC3851'>	live: function( types, data, fn ) {</div><div class='line' id='LC3852'>		jQuery( this.context ).on( types, this.selector, data, fn );</div><div class='line' id='LC3853'>		return this;</div><div class='line' id='LC3854'>	},</div><div class='line' id='LC3855'>	die: function( types, fn ) {</div><div class='line' id='LC3856'>		jQuery( this.context ).off( types, this.selector || &quot;**&quot;, fn );</div><div class='line' id='LC3857'>		return this;</div><div class='line' id='LC3858'>	},</div><div class='line' id='LC3859'><br/></div><div class='line' id='LC3860'>	delegate: function( selector, types, data, fn ) {</div><div class='line' id='LC3861'>		return this.on( types, selector, data, fn );</div><div class='line' id='LC3862'>	},</div><div class='line' id='LC3863'>	undelegate: function( selector, types, fn ) {</div><div class='line' id='LC3864'>		// ( namespace ) or ( selector, types [, fn] )</div><div class='line' id='LC3865'>		return arguments.length == 1? this.off( selector, &quot;**&quot; ) : this.off( types, selector, fn );</div><div class='line' id='LC3866'>	},</div><div class='line' id='LC3867'><br/></div><div class='line' id='LC3868'>	trigger: function( type, data ) {</div><div class='line' id='LC3869'>		return this.each(function() {</div><div class='line' id='LC3870'>			jQuery.event.trigger( type, data, this );</div><div class='line' id='LC3871'>		});</div><div class='line' id='LC3872'>	},</div><div class='line' id='LC3873'>	triggerHandler: function( type, data ) {</div><div class='line' id='LC3874'>		if ( this[0] ) {</div><div class='line' id='LC3875'>			return jQuery.event.trigger( type, data, this[0], true );</div><div class='line' id='LC3876'>		}</div><div class='line' id='LC3877'>	},</div><div class='line' id='LC3878'><br/></div><div class='line' id='LC3879'>	toggle: function( fn ) {</div><div class='line' id='LC3880'>		// Save reference to arguments for access in closure</div><div class='line' id='LC3881'>		var args = arguments,</div><div class='line' id='LC3882'>			guid = fn.guid || jQuery.guid++,</div><div class='line' id='LC3883'>			i = 0,</div><div class='line' id='LC3884'>			toggler = function( event ) {</div><div class='line' id='LC3885'>				// Figure out which function to execute</div><div class='line' id='LC3886'>				var lastToggle = ( jQuery._data( this, &quot;lastToggle&quot; + fn.guid ) || 0 ) % i;</div><div class='line' id='LC3887'>				jQuery._data( this, &quot;lastToggle&quot; + fn.guid, lastToggle + 1 );</div><div class='line' id='LC3888'><br/></div><div class='line' id='LC3889'>				// Make sure that clicks stop</div><div class='line' id='LC3890'>				event.preventDefault();</div><div class='line' id='LC3891'><br/></div><div class='line' id='LC3892'>				// and execute the function</div><div class='line' id='LC3893'>				return args[ lastToggle ].apply( this, arguments ) || false;</div><div class='line' id='LC3894'>			};</div><div class='line' id='LC3895'><br/></div><div class='line' id='LC3896'>		// link all the functions, so any of them can unbind this click handler</div><div class='line' id='LC3897'>		toggler.guid = guid;</div><div class='line' id='LC3898'>		while ( i &lt; args.length ) {</div><div class='line' id='LC3899'>			args[ i++ ].guid = guid;</div><div class='line' id='LC3900'>		}</div><div class='line' id='LC3901'><br/></div><div class='line' id='LC3902'>		return this.click( toggler );</div><div class='line' id='LC3903'>	},</div><div class='line' id='LC3904'><br/></div><div class='line' id='LC3905'>	hover: function( fnOver, fnOut ) {</div><div class='line' id='LC3906'>		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );</div><div class='line' id='LC3907'>	}</div><div class='line' id='LC3908'>});</div><div class='line' id='LC3909'><br/></div><div class='line' id='LC3910'>jQuery.each( (&quot;blur focus focusin focusout load resize scroll unload click dblclick &quot; +</div><div class='line' id='LC3911'>	&quot;mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave &quot; +</div><div class='line' id='LC3912'>	&quot;change select submit keydown keypress keyup error contextmenu&quot;).split(&quot; &quot;), function( i, name ) {</div><div class='line' id='LC3913'><br/></div><div class='line' id='LC3914'>	// Handle event binding</div><div class='line' id='LC3915'>	jQuery.fn[ name ] = function( data, fn ) {</div><div class='line' id='LC3916'>		if ( fn == null ) {</div><div class='line' id='LC3917'>			fn = data;</div><div class='line' id='LC3918'>			data = null;</div><div class='line' id='LC3919'>		}</div><div class='line' id='LC3920'><br/></div><div class='line' id='LC3921'>		return arguments.length &gt; 0 ?</div><div class='line' id='LC3922'>			this.on( name, null, data, fn ) :</div><div class='line' id='LC3923'>			this.trigger( name );</div><div class='line' id='LC3924'>	};</div><div class='line' id='LC3925'><br/></div><div class='line' id='LC3926'>	if ( jQuery.attrFn ) {</div><div class='line' id='LC3927'>		jQuery.attrFn[ name ] = true;</div><div class='line' id='LC3928'>	}</div><div class='line' id='LC3929'><br/></div><div class='line' id='LC3930'>	if ( rkeyEvent.test( name ) ) {</div><div class='line' id='LC3931'>		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;</div><div class='line' id='LC3932'>	}</div><div class='line' id='LC3933'><br/></div><div class='line' id='LC3934'>	if ( rmouseEvent.test( name ) ) {</div><div class='line' id='LC3935'>		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;</div><div class='line' id='LC3936'>	}</div><div class='line' id='LC3937'>});</div><div class='line' id='LC3938'><br/></div><div class='line' id='LC3939'><br/></div><div class='line' id='LC3940'><br/></div><div class='line' id='LC3941'>/*!</div><div class='line' id='LC3942'>&nbsp;* Sizzle CSS Selector Engine</div><div class='line' id='LC3943'>&nbsp;*  Copyright 2011, The Dojo Foundation</div><div class='line' id='LC3944'>&nbsp;*  Released under the MIT, BSD, and GPL Licenses.</div><div class='line' id='LC3945'>&nbsp;*  More information: http://sizzlejs.com/</div><div class='line' id='LC3946'>&nbsp;*/</div><div class='line' id='LC3947'>(function(){</div><div class='line' id='LC3948'><br/></div><div class='line' id='LC3949'>var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|[&#39;&quot;][^&#39;&quot;]*[&#39;&quot;]|[^\[\]&#39;&quot;]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?((?:.|\r|\n)*)/g,</div><div class='line' id='LC3950'>	expando = &quot;sizcache&quot; + (Math.random() + &#39;&#39;).replace(&#39;.&#39;, &#39;&#39;),</div><div class='line' id='LC3951'>	done = 0,</div><div class='line' id='LC3952'>	toString = Object.prototype.toString,</div><div class='line' id='LC3953'>	hasDuplicate = false,</div><div class='line' id='LC3954'>	baseHasDuplicate = true,</div><div class='line' id='LC3955'>	rBackslash = /\\/g,</div><div class='line' id='LC3956'>	rReturn = /\r\n/g,</div><div class='line' id='LC3957'>	rNonWord = /\W/;</div><div class='line' id='LC3958'><br/></div><div class='line' id='LC3959'>// Here we check if the JavaScript engine is using some sort of</div><div class='line' id='LC3960'>// optimization where it does not always call our comparision</div><div class='line' id='LC3961'>// function. If that is the case, discard the hasDuplicate value.</div><div class='line' id='LC3962'>//   Thus far that includes Google Chrome.</div><div class='line' id='LC3963'>[0, 0].sort(function() {</div><div class='line' id='LC3964'>	baseHasDuplicate = false;</div><div class='line' id='LC3965'>	return 0;</div><div class='line' id='LC3966'>});</div><div class='line' id='LC3967'><br/></div><div class='line' id='LC3968'>var Sizzle = function( selector, context, results, seed ) {</div><div class='line' id='LC3969'>	results = results || [];</div><div class='line' id='LC3970'>	context = context || document;</div><div class='line' id='LC3971'><br/></div><div class='line' id='LC3972'>	var origContext = context;</div><div class='line' id='LC3973'><br/></div><div class='line' id='LC3974'>	if ( context.nodeType !== 1 &amp;&amp; context.nodeType !== 9 ) {</div><div class='line' id='LC3975'>		return [];</div><div class='line' id='LC3976'>	}</div><div class='line' id='LC3977'><br/></div><div class='line' id='LC3978'>	if ( !selector || typeof selector !== &quot;string&quot; ) {</div><div class='line' id='LC3979'>		return results;</div><div class='line' id='LC3980'>	}</div><div class='line' id='LC3981'><br/></div><div class='line' id='LC3982'>	var m, set, checkSet, extra, ret, cur, pop, i,</div><div class='line' id='LC3983'>		prune = true,</div><div class='line' id='LC3984'>		contextXML = Sizzle.isXML( context ),</div><div class='line' id='LC3985'>		parts = [],</div><div class='line' id='LC3986'>		soFar = selector;</div><div class='line' id='LC3987'><br/></div><div class='line' id='LC3988'>	// Reset the position of the chunker regexp (start from head)</div><div class='line' id='LC3989'>	do {</div><div class='line' id='LC3990'>		chunker.exec( &quot;&quot; );</div><div class='line' id='LC3991'>		m = chunker.exec( soFar );</div><div class='line' id='LC3992'><br/></div><div class='line' id='LC3993'>		if ( m ) {</div><div class='line' id='LC3994'>			soFar = m[3];</div><div class='line' id='LC3995'><br/></div><div class='line' id='LC3996'>			parts.push( m[1] );</div><div class='line' id='LC3997'><br/></div><div class='line' id='LC3998'>			if ( m[2] ) {</div><div class='line' id='LC3999'>				extra = m[3];</div><div class='line' id='LC4000'>				break;</div><div class='line' id='LC4001'>			}</div><div class='line' id='LC4002'>		}</div><div class='line' id='LC4003'>	} while ( m );</div><div class='line' id='LC4004'><br/></div><div class='line' id='LC4005'>	if ( parts.length &gt; 1 &amp;&amp; origPOS.exec( selector ) ) {</div><div class='line' id='LC4006'><br/></div><div class='line' id='LC4007'>		if ( parts.length === 2 &amp;&amp; Expr.relative[ parts[0] ] ) {</div><div class='line' id='LC4008'>			set = posProcess( parts[0] + parts[1], context, seed );</div><div class='line' id='LC4009'><br/></div><div class='line' id='LC4010'>		} else {</div><div class='line' id='LC4011'>			set = Expr.relative[ parts[0] ] ?</div><div class='line' id='LC4012'>				[ context ] :</div><div class='line' id='LC4013'>				Sizzle( parts.shift(), context );</div><div class='line' id='LC4014'><br/></div><div class='line' id='LC4015'>			while ( parts.length ) {</div><div class='line' id='LC4016'>				selector = parts.shift();</div><div class='line' id='LC4017'><br/></div><div class='line' id='LC4018'>				if ( Expr.relative[ selector ] ) {</div><div class='line' id='LC4019'>					selector += parts.shift();</div><div class='line' id='LC4020'>				}</div><div class='line' id='LC4021'><br/></div><div class='line' id='LC4022'>				set = posProcess( selector, set, seed );</div><div class='line' id='LC4023'>			}</div><div class='line' id='LC4024'>		}</div><div class='line' id='LC4025'><br/></div><div class='line' id='LC4026'>	} else {</div><div class='line' id='LC4027'>		// Take a shortcut and set the context if the root selector is an ID</div><div class='line' id='LC4028'>		// (but not if it&#39;ll be faster if the inner selector is an ID)</div><div class='line' id='LC4029'>		if ( !seed &amp;&amp; parts.length &gt; 1 &amp;&amp; context.nodeType === 9 &amp;&amp; !contextXML &amp;&amp;</div><div class='line' id='LC4030'>				Expr.match.ID.test(parts[0]) &amp;&amp; !Expr.match.ID.test(parts[parts.length - 1]) ) {</div><div class='line' id='LC4031'><br/></div><div class='line' id='LC4032'>			ret = Sizzle.find( parts.shift(), context, contextXML );</div><div class='line' id='LC4033'>			context = ret.expr ?</div><div class='line' id='LC4034'>				Sizzle.filter( ret.expr, ret.set )[0] :</div><div class='line' id='LC4035'>				ret.set[0];</div><div class='line' id='LC4036'>		}</div><div class='line' id='LC4037'><br/></div><div class='line' id='LC4038'>		if ( context ) {</div><div class='line' id='LC4039'>			ret = seed ?</div><div class='line' id='LC4040'>				{ expr: parts.pop(), set: makeArray(seed) } :</div><div class='line' id='LC4041'>				Sizzle.find( parts.pop(), parts.length === 1 &amp;&amp; (parts[0] === &quot;~&quot; || parts[0] === &quot;+&quot;) &amp;&amp; context.parentNode ? context.parentNode : context, contextXML );</div><div class='line' id='LC4042'><br/></div><div class='line' id='LC4043'>			set = ret.expr ?</div><div class='line' id='LC4044'>				Sizzle.filter( ret.expr, ret.set ) :</div><div class='line' id='LC4045'>				ret.set;</div><div class='line' id='LC4046'><br/></div><div class='line' id='LC4047'>			if ( parts.length &gt; 0 ) {</div><div class='line' id='LC4048'>				checkSet = makeArray( set );</div><div class='line' id='LC4049'><br/></div><div class='line' id='LC4050'>			} else {</div><div class='line' id='LC4051'>				prune = false;</div><div class='line' id='LC4052'>			}</div><div class='line' id='LC4053'><br/></div><div class='line' id='LC4054'>			while ( parts.length ) {</div><div class='line' id='LC4055'>				cur = parts.pop();</div><div class='line' id='LC4056'>				pop = cur;</div><div class='line' id='LC4057'><br/></div><div class='line' id='LC4058'>				if ( !Expr.relative[ cur ] ) {</div><div class='line' id='LC4059'>					cur = &quot;&quot;;</div><div class='line' id='LC4060'>				} else {</div><div class='line' id='LC4061'>					pop = parts.pop();</div><div class='line' id='LC4062'>				}</div><div class='line' id='LC4063'><br/></div><div class='line' id='LC4064'>				if ( pop == null ) {</div><div class='line' id='LC4065'>					pop = context;</div><div class='line' id='LC4066'>				}</div><div class='line' id='LC4067'><br/></div><div class='line' id='LC4068'>				Expr.relative[ cur ]( checkSet, pop, contextXML );</div><div class='line' id='LC4069'>			}</div><div class='line' id='LC4070'><br/></div><div class='line' id='LC4071'>		} else {</div><div class='line' id='LC4072'>			checkSet = parts = [];</div><div class='line' id='LC4073'>		}</div><div class='line' id='LC4074'>	}</div><div class='line' id='LC4075'><br/></div><div class='line' id='LC4076'>	if ( !checkSet ) {</div><div class='line' id='LC4077'>		checkSet = set;</div><div class='line' id='LC4078'>	}</div><div class='line' id='LC4079'><br/></div><div class='line' id='LC4080'>	if ( !checkSet ) {</div><div class='line' id='LC4081'>		Sizzle.error( cur || selector );</div><div class='line' id='LC4082'>	}</div><div class='line' id='LC4083'><br/></div><div class='line' id='LC4084'>	if ( toString.call(checkSet) === &quot;[object Array]&quot; ) {</div><div class='line' id='LC4085'>		if ( !prune ) {</div><div class='line' id='LC4086'>			results.push.apply( results, checkSet );</div><div class='line' id='LC4087'><br/></div><div class='line' id='LC4088'>		} else if ( context &amp;&amp; context.nodeType === 1 ) {</div><div class='line' id='LC4089'>			for ( i = 0; checkSet[i] != null; i++ ) {</div><div class='line' id='LC4090'>				if ( checkSet[i] &amp;&amp; (checkSet[i] === true || checkSet[i].nodeType === 1 &amp;&amp; Sizzle.contains(context, checkSet[i])) ) {</div><div class='line' id='LC4091'>					results.push( set[i] );</div><div class='line' id='LC4092'>				}</div><div class='line' id='LC4093'>			}</div><div class='line' id='LC4094'><br/></div><div class='line' id='LC4095'>		} else {</div><div class='line' id='LC4096'>			for ( i = 0; checkSet[i] != null; i++ ) {</div><div class='line' id='LC4097'>				if ( checkSet[i] &amp;&amp; checkSet[i].nodeType === 1 ) {</div><div class='line' id='LC4098'>					results.push( set[i] );</div><div class='line' id='LC4099'>				}</div><div class='line' id='LC4100'>			}</div><div class='line' id='LC4101'>		}</div><div class='line' id='LC4102'><br/></div><div class='line' id='LC4103'>	} else {</div><div class='line' id='LC4104'>		makeArray( checkSet, results );</div><div class='line' id='LC4105'>	}</div><div class='line' id='LC4106'><br/></div><div class='line' id='LC4107'>	if ( extra ) {</div><div class='line' id='LC4108'>		Sizzle( extra, origContext, results, seed );</div><div class='line' id='LC4109'>		Sizzle.uniqueSort( results );</div><div class='line' id='LC4110'>	}</div><div class='line' id='LC4111'><br/></div><div class='line' id='LC4112'>	return results;</div><div class='line' id='LC4113'>};</div><div class='line' id='LC4114'><br/></div><div class='line' id='LC4115'>Sizzle.uniqueSort = function( results ) {</div><div class='line' id='LC4116'>	if ( sortOrder ) {</div><div class='line' id='LC4117'>		hasDuplicate = baseHasDuplicate;</div><div class='line' id='LC4118'>		results.sort( sortOrder );</div><div class='line' id='LC4119'><br/></div><div class='line' id='LC4120'>		if ( hasDuplicate ) {</div><div class='line' id='LC4121'>			for ( var i = 1; i &lt; results.length; i++ ) {</div><div class='line' id='LC4122'>				if ( results[i] === results[ i - 1 ] ) {</div><div class='line' id='LC4123'>					results.splice( i--, 1 );</div><div class='line' id='LC4124'>				}</div><div class='line' id='LC4125'>			}</div><div class='line' id='LC4126'>		}</div><div class='line' id='LC4127'>	}</div><div class='line' id='LC4128'><br/></div><div class='line' id='LC4129'>	return results;</div><div class='line' id='LC4130'>};</div><div class='line' id='LC4131'><br/></div><div class='line' id='LC4132'>Sizzle.matches = function( expr, set ) {</div><div class='line' id='LC4133'>	return Sizzle( expr, null, null, set );</div><div class='line' id='LC4134'>};</div><div class='line' id='LC4135'><br/></div><div class='line' id='LC4136'>Sizzle.matchesSelector = function( node, expr ) {</div><div class='line' id='LC4137'>	return Sizzle( expr, null, null, [node] ).length &gt; 0;</div><div class='line' id='LC4138'>};</div><div class='line' id='LC4139'><br/></div><div class='line' id='LC4140'>Sizzle.find = function( expr, context, isXML ) {</div><div class='line' id='LC4141'>	var set, i, len, match, type, left;</div><div class='line' id='LC4142'><br/></div><div class='line' id='LC4143'>	if ( !expr ) {</div><div class='line' id='LC4144'>		return [];</div><div class='line' id='LC4145'>	}</div><div class='line' id='LC4146'><br/></div><div class='line' id='LC4147'>	for ( i = 0, len = Expr.order.length; i &lt; len; i++ ) {</div><div class='line' id='LC4148'>		type = Expr.order[i];</div><div class='line' id='LC4149'><br/></div><div class='line' id='LC4150'>		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {</div><div class='line' id='LC4151'>			left = match[1];</div><div class='line' id='LC4152'>			match.splice( 1, 1 );</div><div class='line' id='LC4153'><br/></div><div class='line' id='LC4154'>			if ( left.substr( left.length - 1 ) !== &quot;\\&quot; ) {</div><div class='line' id='LC4155'>				match[1] = (match[1] || &quot;&quot;).replace( rBackslash, &quot;&quot; );</div><div class='line' id='LC4156'>				set = Expr.find[ type ]( match, context, isXML );</div><div class='line' id='LC4157'><br/></div><div class='line' id='LC4158'>				if ( set != null ) {</div><div class='line' id='LC4159'>					expr = expr.replace( Expr.match[ type ], &quot;&quot; );</div><div class='line' id='LC4160'>					break;</div><div class='line' id='LC4161'>				}</div><div class='line' id='LC4162'>			}</div><div class='line' id='LC4163'>		}</div><div class='line' id='LC4164'>	}</div><div class='line' id='LC4165'><br/></div><div class='line' id='LC4166'>	if ( !set ) {</div><div class='line' id='LC4167'>		set = typeof context.getElementsByTagName !== &quot;undefined&quot; ?</div><div class='line' id='LC4168'>			context.getElementsByTagName( &quot;*&quot; ) :</div><div class='line' id='LC4169'>			[];</div><div class='line' id='LC4170'>	}</div><div class='line' id='LC4171'><br/></div><div class='line' id='LC4172'>	return { set: set, expr: expr };</div><div class='line' id='LC4173'>};</div><div class='line' id='LC4174'><br/></div><div class='line' id='LC4175'>Sizzle.filter = function( expr, set, inplace, not ) {</div><div class='line' id='LC4176'>	var match, anyFound,</div><div class='line' id='LC4177'>		type, found, item, filter, left,</div><div class='line' id='LC4178'>		i, pass,</div><div class='line' id='LC4179'>		old = expr,</div><div class='line' id='LC4180'>		result = [],</div><div class='line' id='LC4181'>		curLoop = set,</div><div class='line' id='LC4182'>		isXMLFilter = set &amp;&amp; set[0] &amp;&amp; Sizzle.isXML( set[0] );</div><div class='line' id='LC4183'><br/></div><div class='line' id='LC4184'>	while ( expr &amp;&amp; set.length ) {</div><div class='line' id='LC4185'>		for ( type in Expr.filter ) {</div><div class='line' id='LC4186'>			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null &amp;&amp; match[2] ) {</div><div class='line' id='LC4187'>				filter = Expr.filter[ type ];</div><div class='line' id='LC4188'>				left = match[1];</div><div class='line' id='LC4189'><br/></div><div class='line' id='LC4190'>				anyFound = false;</div><div class='line' id='LC4191'><br/></div><div class='line' id='LC4192'>				match.splice(1,1);</div><div class='line' id='LC4193'><br/></div><div class='line' id='LC4194'>				if ( left.substr( left.length - 1 ) === &quot;\\&quot; ) {</div><div class='line' id='LC4195'>					continue;</div><div class='line' id='LC4196'>				}</div><div class='line' id='LC4197'><br/></div><div class='line' id='LC4198'>				if ( curLoop === result ) {</div><div class='line' id='LC4199'>					result = [];</div><div class='line' id='LC4200'>				}</div><div class='line' id='LC4201'><br/></div><div class='line' id='LC4202'>				if ( Expr.preFilter[ type ] ) {</div><div class='line' id='LC4203'>					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );</div><div class='line' id='LC4204'><br/></div><div class='line' id='LC4205'>					if ( !match ) {</div><div class='line' id='LC4206'>						anyFound = found = true;</div><div class='line' id='LC4207'><br/></div><div class='line' id='LC4208'>					} else if ( match === true ) {</div><div class='line' id='LC4209'>						continue;</div><div class='line' id='LC4210'>					}</div><div class='line' id='LC4211'>				}</div><div class='line' id='LC4212'><br/></div><div class='line' id='LC4213'>				if ( match ) {</div><div class='line' id='LC4214'>					for ( i = 0; (item = curLoop[i]) != null; i++ ) {</div><div class='line' id='LC4215'>						if ( item ) {</div><div class='line' id='LC4216'>							found = filter( item, match, i, curLoop );</div><div class='line' id='LC4217'>							pass = not ^ found;</div><div class='line' id='LC4218'><br/></div><div class='line' id='LC4219'>							if ( inplace &amp;&amp; found != null ) {</div><div class='line' id='LC4220'>								if ( pass ) {</div><div class='line' id='LC4221'>									anyFound = true;</div><div class='line' id='LC4222'><br/></div><div class='line' id='LC4223'>								} else {</div><div class='line' id='LC4224'>									curLoop[i] = false;</div><div class='line' id='LC4225'>								}</div><div class='line' id='LC4226'><br/></div><div class='line' id='LC4227'>							} else if ( pass ) {</div><div class='line' id='LC4228'>								result.push( item );</div><div class='line' id='LC4229'>								anyFound = true;</div><div class='line' id='LC4230'>							}</div><div class='line' id='LC4231'>						}</div><div class='line' id='LC4232'>					}</div><div class='line' id='LC4233'>				}</div><div class='line' id='LC4234'><br/></div><div class='line' id='LC4235'>				if ( found !== undefined ) {</div><div class='line' id='LC4236'>					if ( !inplace ) {</div><div class='line' id='LC4237'>						curLoop = result;</div><div class='line' id='LC4238'>					}</div><div class='line' id='LC4239'><br/></div><div class='line' id='LC4240'>					expr = expr.replace( Expr.match[ type ], &quot;&quot; );</div><div class='line' id='LC4241'><br/></div><div class='line' id='LC4242'>					if ( !anyFound ) {</div><div class='line' id='LC4243'>						return [];</div><div class='line' id='LC4244'>					}</div><div class='line' id='LC4245'><br/></div><div class='line' id='LC4246'>					break;</div><div class='line' id='LC4247'>				}</div><div class='line' id='LC4248'>			}</div><div class='line' id='LC4249'>		}</div><div class='line' id='LC4250'><br/></div><div class='line' id='LC4251'>		// Improper expression</div><div class='line' id='LC4252'>		if ( expr === old ) {</div><div class='line' id='LC4253'>			if ( anyFound == null ) {</div><div class='line' id='LC4254'>				Sizzle.error( expr );</div><div class='line' id='LC4255'><br/></div><div class='line' id='LC4256'>			} else {</div><div class='line' id='LC4257'>				break;</div><div class='line' id='LC4258'>			}</div><div class='line' id='LC4259'>		}</div><div class='line' id='LC4260'><br/></div><div class='line' id='LC4261'>		old = expr;</div><div class='line' id='LC4262'>	}</div><div class='line' id='LC4263'><br/></div><div class='line' id='LC4264'>	return curLoop;</div><div class='line' id='LC4265'>};</div><div class='line' id='LC4266'><br/></div><div class='line' id='LC4267'>Sizzle.error = function( msg ) {</div><div class='line' id='LC4268'>	throw new Error( &quot;Syntax error, unrecognized expression: &quot; + msg );</div><div class='line' id='LC4269'>};</div><div class='line' id='LC4270'><br/></div><div class='line' id='LC4271'>/**</div><div class='line' id='LC4272'>&nbsp;* Utility function for retreiving the text value of an array of DOM nodes</div><div class='line' id='LC4273'>&nbsp;* @param {Array|Element} elem</div><div class='line' id='LC4274'>&nbsp;*/</div><div class='line' id='LC4275'>var getText = Sizzle.getText = function( elem ) {</div><div class='line' id='LC4276'>&nbsp;&nbsp;&nbsp;&nbsp;var i, node,</div><div class='line' id='LC4277'>		nodeType = elem.nodeType,</div><div class='line' id='LC4278'>		ret = &quot;&quot;;</div><div class='line' id='LC4279'><br/></div><div class='line' id='LC4280'>	if ( nodeType ) {</div><div class='line' id='LC4281'>		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {</div><div class='line' id='LC4282'>			// Use textContent || innerText for elements</div><div class='line' id='LC4283'>			if ( typeof elem.textContent === &#39;string&#39; ) {</div><div class='line' id='LC4284'>				return elem.textContent;</div><div class='line' id='LC4285'>			} else if ( typeof elem.innerText === &#39;string&#39; ) {</div><div class='line' id='LC4286'>				// Replace IE&#39;s carriage returns</div><div class='line' id='LC4287'>				return elem.innerText.replace( rReturn, &#39;&#39; );</div><div class='line' id='LC4288'>			} else {</div><div class='line' id='LC4289'>				// Traverse it&#39;s children</div><div class='line' id='LC4290'>				for ( elem = elem.firstChild; elem; elem = elem.nextSibling) {</div><div class='line' id='LC4291'>					ret += getText( elem );</div><div class='line' id='LC4292'>				}</div><div class='line' id='LC4293'>			}</div><div class='line' id='LC4294'>		} else if ( nodeType === 3 || nodeType === 4 ) {</div><div class='line' id='LC4295'>			return elem.nodeValue;</div><div class='line' id='LC4296'>		}</div><div class='line' id='LC4297'>	} else {</div><div class='line' id='LC4298'><br/></div><div class='line' id='LC4299'>		// If no nodeType, this is expected to be an array</div><div class='line' id='LC4300'>		for ( i = 0; (node = elem[i]); i++ ) {</div><div class='line' id='LC4301'>			// Do not traverse comment nodes</div><div class='line' id='LC4302'>			if ( node.nodeType !== 8 ) {</div><div class='line' id='LC4303'>				ret += getText( node );</div><div class='line' id='LC4304'>			}</div><div class='line' id='LC4305'>		}</div><div class='line' id='LC4306'>	}</div><div class='line' id='LC4307'>	return ret;</div><div class='line' id='LC4308'>};</div><div class='line' id='LC4309'><br/></div><div class='line' id='LC4310'>var Expr = Sizzle.selectors = {</div><div class='line' id='LC4311'>	order: [ &quot;ID&quot;, &quot;NAME&quot;, &quot;TAG&quot; ],</div><div class='line' id='LC4312'><br/></div><div class='line' id='LC4313'>	match: {</div><div class='line' id='LC4314'>		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,</div><div class='line' id='LC4315'>		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,</div><div class='line' id='LC4316'>		NAME: /\[name=[&#39;&quot;]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)[&#39;&quot;]*\]/,</div><div class='line' id='LC4317'>		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:([&#39;&quot;])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,</div><div class='line' id='LC4318'>		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,</div><div class='line' id='LC4319'>		CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,</div><div class='line' id='LC4320'>		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,</div><div class='line' id='LC4321'>		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\(([&#39;&quot;]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/</div><div class='line' id='LC4322'>	},</div><div class='line' id='LC4323'><br/></div><div class='line' id='LC4324'>	leftMatch: {},</div><div class='line' id='LC4325'><br/></div><div class='line' id='LC4326'>	attrMap: {</div><div class='line' id='LC4327'>		&quot;class&quot;: &quot;className&quot;,</div><div class='line' id='LC4328'>		&quot;for&quot;: &quot;htmlFor&quot;</div><div class='line' id='LC4329'>	},</div><div class='line' id='LC4330'><br/></div><div class='line' id='LC4331'>	attrHandle: {</div><div class='line' id='LC4332'>		href: function( elem ) {</div><div class='line' id='LC4333'>			return elem.getAttribute( &quot;href&quot; );</div><div class='line' id='LC4334'>		},</div><div class='line' id='LC4335'>		type: function( elem ) {</div><div class='line' id='LC4336'>			return elem.getAttribute( &quot;type&quot; );</div><div class='line' id='LC4337'>		}</div><div class='line' id='LC4338'>	},</div><div class='line' id='LC4339'><br/></div><div class='line' id='LC4340'>	relative: {</div><div class='line' id='LC4341'>		&quot;+&quot;: function(checkSet, part){</div><div class='line' id='LC4342'>			var isPartStr = typeof part === &quot;string&quot;,</div><div class='line' id='LC4343'>				isTag = isPartStr &amp;&amp; !rNonWord.test( part ),</div><div class='line' id='LC4344'>				isPartStrNotTag = isPartStr &amp;&amp; !isTag;</div><div class='line' id='LC4345'><br/></div><div class='line' id='LC4346'>			if ( isTag ) {</div><div class='line' id='LC4347'>				part = part.toLowerCase();</div><div class='line' id='LC4348'>			}</div><div class='line' id='LC4349'><br/></div><div class='line' id='LC4350'>			for ( var i = 0, l = checkSet.length, elem; i &lt; l; i++ ) {</div><div class='line' id='LC4351'>				if ( (elem = checkSet[i]) ) {</div><div class='line' id='LC4352'>					while ( (elem = elem.previousSibling) &amp;&amp; elem.nodeType !== 1 ) {}</div><div class='line' id='LC4353'><br/></div><div class='line' id='LC4354'>					checkSet[i] = isPartStrNotTag || elem &amp;&amp; elem.nodeName.toLowerCase() === part ?</div><div class='line' id='LC4355'>						elem || false :</div><div class='line' id='LC4356'>						elem === part;</div><div class='line' id='LC4357'>				}</div><div class='line' id='LC4358'>			}</div><div class='line' id='LC4359'><br/></div><div class='line' id='LC4360'>			if ( isPartStrNotTag ) {</div><div class='line' id='LC4361'>				Sizzle.filter( part, checkSet, true );</div><div class='line' id='LC4362'>			}</div><div class='line' id='LC4363'>		},</div><div class='line' id='LC4364'><br/></div><div class='line' id='LC4365'>		&quot;&gt;&quot;: function( checkSet, part ) {</div><div class='line' id='LC4366'>			var elem,</div><div class='line' id='LC4367'>				isPartStr = typeof part === &quot;string&quot;,</div><div class='line' id='LC4368'>				i = 0,</div><div class='line' id='LC4369'>				l = checkSet.length;</div><div class='line' id='LC4370'><br/></div><div class='line' id='LC4371'>			if ( isPartStr &amp;&amp; !rNonWord.test( part ) ) {</div><div class='line' id='LC4372'>				part = part.toLowerCase();</div><div class='line' id='LC4373'><br/></div><div class='line' id='LC4374'>				for ( ; i &lt; l; i++ ) {</div><div class='line' id='LC4375'>					elem = checkSet[i];</div><div class='line' id='LC4376'><br/></div><div class='line' id='LC4377'>					if ( elem ) {</div><div class='line' id='LC4378'>						var parent = elem.parentNode;</div><div class='line' id='LC4379'>						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;</div><div class='line' id='LC4380'>					}</div><div class='line' id='LC4381'>				}</div><div class='line' id='LC4382'><br/></div><div class='line' id='LC4383'>			} else {</div><div class='line' id='LC4384'>				for ( ; i &lt; l; i++ ) {</div><div class='line' id='LC4385'>					elem = checkSet[i];</div><div class='line' id='LC4386'><br/></div><div class='line' id='LC4387'>					if ( elem ) {</div><div class='line' id='LC4388'>						checkSet[i] = isPartStr ?</div><div class='line' id='LC4389'>							elem.parentNode :</div><div class='line' id='LC4390'>							elem.parentNode === part;</div><div class='line' id='LC4391'>					}</div><div class='line' id='LC4392'>				}</div><div class='line' id='LC4393'><br/></div><div class='line' id='LC4394'>				if ( isPartStr ) {</div><div class='line' id='LC4395'>					Sizzle.filter( part, checkSet, true );</div><div class='line' id='LC4396'>				}</div><div class='line' id='LC4397'>			}</div><div class='line' id='LC4398'>		},</div><div class='line' id='LC4399'><br/></div><div class='line' id='LC4400'>		&quot;&quot;: function(checkSet, part, isXML){</div><div class='line' id='LC4401'>			var nodeCheck,</div><div class='line' id='LC4402'>				doneName = done++,</div><div class='line' id='LC4403'>				checkFn = dirCheck;</div><div class='line' id='LC4404'><br/></div><div class='line' id='LC4405'>			if ( typeof part === &quot;string&quot; &amp;&amp; !rNonWord.test( part ) ) {</div><div class='line' id='LC4406'>				part = part.toLowerCase();</div><div class='line' id='LC4407'>				nodeCheck = part;</div><div class='line' id='LC4408'>				checkFn = dirNodeCheck;</div><div class='line' id='LC4409'>			}</div><div class='line' id='LC4410'><br/></div><div class='line' id='LC4411'>			checkFn( &quot;parentNode&quot;, part, doneName, checkSet, nodeCheck, isXML );</div><div class='line' id='LC4412'>		},</div><div class='line' id='LC4413'><br/></div><div class='line' id='LC4414'>		&quot;~&quot;: function( checkSet, part, isXML ) {</div><div class='line' id='LC4415'>			var nodeCheck,</div><div class='line' id='LC4416'>				doneName = done++,</div><div class='line' id='LC4417'>				checkFn = dirCheck;</div><div class='line' id='LC4418'><br/></div><div class='line' id='LC4419'>			if ( typeof part === &quot;string&quot; &amp;&amp; !rNonWord.test( part ) ) {</div><div class='line' id='LC4420'>				part = part.toLowerCase();</div><div class='line' id='LC4421'>				nodeCheck = part;</div><div class='line' id='LC4422'>				checkFn = dirNodeCheck;</div><div class='line' id='LC4423'>			}</div><div class='line' id='LC4424'><br/></div><div class='line' id='LC4425'>			checkFn( &quot;previousSibling&quot;, part, doneName, checkSet, nodeCheck, isXML );</div><div class='line' id='LC4426'>		}</div><div class='line' id='LC4427'>	},</div><div class='line' id='LC4428'><br/></div><div class='line' id='LC4429'>	find: {</div><div class='line' id='LC4430'>		ID: function( match, context, isXML ) {</div><div class='line' id='LC4431'>			if ( typeof context.getElementById !== &quot;undefined&quot; &amp;&amp; !isXML ) {</div><div class='line' id='LC4432'>				var m = context.getElementById(match[1]);</div><div class='line' id='LC4433'>				// Check parentNode to catch when Blackberry 4.6 returns</div><div class='line' id='LC4434'>				// nodes that are no longer in the document #6963</div><div class='line' id='LC4435'>				return m &amp;&amp; m.parentNode ? [m] : [];</div><div class='line' id='LC4436'>			}</div><div class='line' id='LC4437'>		},</div><div class='line' id='LC4438'><br/></div><div class='line' id='LC4439'>		NAME: function( match, context ) {</div><div class='line' id='LC4440'>			if ( typeof context.getElementsByName !== &quot;undefined&quot; ) {</div><div class='line' id='LC4441'>				var ret = [],</div><div class='line' id='LC4442'>					results = context.getElementsByName( match[1] );</div><div class='line' id='LC4443'><br/></div><div class='line' id='LC4444'>				for ( var i = 0, l = results.length; i &lt; l; i++ ) {</div><div class='line' id='LC4445'>					if ( results[i].getAttribute(&quot;name&quot;) === match[1] ) {</div><div class='line' id='LC4446'>						ret.push( results[i] );</div><div class='line' id='LC4447'>					}</div><div class='line' id='LC4448'>				}</div><div class='line' id='LC4449'><br/></div><div class='line' id='LC4450'>				return ret.length === 0 ? null : ret;</div><div class='line' id='LC4451'>			}</div><div class='line' id='LC4452'>		},</div><div class='line' id='LC4453'><br/></div><div class='line' id='LC4454'>		TAG: function( match, context ) {</div><div class='line' id='LC4455'>			if ( typeof context.getElementsByTagName !== &quot;undefined&quot; ) {</div><div class='line' id='LC4456'>				return context.getElementsByTagName( match[1] );</div><div class='line' id='LC4457'>			}</div><div class='line' id='LC4458'>		}</div><div class='line' id='LC4459'>	},</div><div class='line' id='LC4460'>	preFilter: {</div><div class='line' id='LC4461'>		CLASS: function( match, curLoop, inplace, result, not, isXML ) {</div><div class='line' id='LC4462'>			match = &quot; &quot; + match[1].replace( rBackslash, &quot;&quot; ) + &quot; &quot;;</div><div class='line' id='LC4463'><br/></div><div class='line' id='LC4464'>			if ( isXML ) {</div><div class='line' id='LC4465'>				return match;</div><div class='line' id='LC4466'>			}</div><div class='line' id='LC4467'><br/></div><div class='line' id='LC4468'>			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {</div><div class='line' id='LC4469'>				if ( elem ) {</div><div class='line' id='LC4470'>					if ( not ^ (elem.className &amp;&amp; (&quot; &quot; + elem.className + &quot; &quot;).replace(/[\t\n\r]/g, &quot; &quot;).indexOf(match) &gt;= 0) ) {</div><div class='line' id='LC4471'>						if ( !inplace ) {</div><div class='line' id='LC4472'>							result.push( elem );</div><div class='line' id='LC4473'>						}</div><div class='line' id='LC4474'><br/></div><div class='line' id='LC4475'>					} else if ( inplace ) {</div><div class='line' id='LC4476'>						curLoop[i] = false;</div><div class='line' id='LC4477'>					}</div><div class='line' id='LC4478'>				}</div><div class='line' id='LC4479'>			}</div><div class='line' id='LC4480'><br/></div><div class='line' id='LC4481'>			return false;</div><div class='line' id='LC4482'>		},</div><div class='line' id='LC4483'><br/></div><div class='line' id='LC4484'>		ID: function( match ) {</div><div class='line' id='LC4485'>			return match[1].replace( rBackslash, &quot;&quot; );</div><div class='line' id='LC4486'>		},</div><div class='line' id='LC4487'><br/></div><div class='line' id='LC4488'>		TAG: function( match, curLoop ) {</div><div class='line' id='LC4489'>			return match[1].replace( rBackslash, &quot;&quot; ).toLowerCase();</div><div class='line' id='LC4490'>		},</div><div class='line' id='LC4491'><br/></div><div class='line' id='LC4492'>		CHILD: function( match ) {</div><div class='line' id='LC4493'>			if ( match[1] === &quot;nth&quot; ) {</div><div class='line' id='LC4494'>				if ( !match[2] ) {</div><div class='line' id='LC4495'>					Sizzle.error( match[0] );</div><div class='line' id='LC4496'>				}</div><div class='line' id='LC4497'><br/></div><div class='line' id='LC4498'>				match[2] = match[2].replace(/^\+|\s*/g, &#39;&#39;);</div><div class='line' id='LC4499'><br/></div><div class='line' id='LC4500'>				// parse equations like &#39;even&#39;, &#39;odd&#39;, &#39;5&#39;, &#39;2n&#39;, &#39;3n+2&#39;, &#39;4n-1&#39;, &#39;-n+6&#39;</div><div class='line' id='LC4501'>				var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(</div><div class='line' id='LC4502'>					match[2] === &quot;even&quot; &amp;&amp; &quot;2n&quot; || match[2] === &quot;odd&quot; &amp;&amp; &quot;2n+1&quot; ||</div><div class='line' id='LC4503'>					!/\D/.test( match[2] ) &amp;&amp; &quot;0n+&quot; + match[2] || match[2]);</div><div class='line' id='LC4504'><br/></div><div class='line' id='LC4505'>				// calculate the numbers (first)n+(last) including if they are negative</div><div class='line' id='LC4506'>				match[2] = (test[1] + (test[2] || 1)) - 0;</div><div class='line' id='LC4507'>				match[3] = test[3] - 0;</div><div class='line' id='LC4508'>			}</div><div class='line' id='LC4509'>			else if ( match[2] ) {</div><div class='line' id='LC4510'>				Sizzle.error( match[0] );</div><div class='line' id='LC4511'>			}</div><div class='line' id='LC4512'><br/></div><div class='line' id='LC4513'>			// TODO: Move to normal caching system</div><div class='line' id='LC4514'>			match[0] = done++;</div><div class='line' id='LC4515'><br/></div><div class='line' id='LC4516'>			return match;</div><div class='line' id='LC4517'>		},</div><div class='line' id='LC4518'><br/></div><div class='line' id='LC4519'>		ATTR: function( match, curLoop, inplace, result, not, isXML ) {</div><div class='line' id='LC4520'>			var name = match[1] = match[1].replace( rBackslash, &quot;&quot; );</div><div class='line' id='LC4521'><br/></div><div class='line' id='LC4522'>			if ( !isXML &amp;&amp; Expr.attrMap[name] ) {</div><div class='line' id='LC4523'>				match[1] = Expr.attrMap[name];</div><div class='line' id='LC4524'>			}</div><div class='line' id='LC4525'><br/></div><div class='line' id='LC4526'>			// Handle if an un-quoted value was used</div><div class='line' id='LC4527'>			match[4] = ( match[4] || match[5] || &quot;&quot; ).replace( rBackslash, &quot;&quot; );</div><div class='line' id='LC4528'><br/></div><div class='line' id='LC4529'>			if ( match[2] === &quot;~=&quot; ) {</div><div class='line' id='LC4530'>				match[4] = &quot; &quot; + match[4] + &quot; &quot;;</div><div class='line' id='LC4531'>			}</div><div class='line' id='LC4532'><br/></div><div class='line' id='LC4533'>			return match;</div><div class='line' id='LC4534'>		},</div><div class='line' id='LC4535'><br/></div><div class='line' id='LC4536'>		PSEUDO: function( match, curLoop, inplace, result, not ) {</div><div class='line' id='LC4537'>			if ( match[1] === &quot;not&quot; ) {</div><div class='line' id='LC4538'>				// If we&#39;re dealing with a complex expression, or a simple one</div><div class='line' id='LC4539'>				if ( ( chunker.exec(match[3]) || &quot;&quot; ).length &gt; 1 || /^\w/.test(match[3]) ) {</div><div class='line' id='LC4540'>					match[3] = Sizzle(match[3], null, null, curLoop);</div><div class='line' id='LC4541'><br/></div><div class='line' id='LC4542'>				} else {</div><div class='line' id='LC4543'>					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);</div><div class='line' id='LC4544'><br/></div><div class='line' id='LC4545'>					if ( !inplace ) {</div><div class='line' id='LC4546'>						result.push.apply( result, ret );</div><div class='line' id='LC4547'>					}</div><div class='line' id='LC4548'><br/></div><div class='line' id='LC4549'>					return false;</div><div class='line' id='LC4550'>				}</div><div class='line' id='LC4551'><br/></div><div class='line' id='LC4552'>			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {</div><div class='line' id='LC4553'>				return true;</div><div class='line' id='LC4554'>			}</div><div class='line' id='LC4555'><br/></div><div class='line' id='LC4556'>			return match;</div><div class='line' id='LC4557'>		},</div><div class='line' id='LC4558'><br/></div><div class='line' id='LC4559'>		POS: function( match ) {</div><div class='line' id='LC4560'>			match.unshift( true );</div><div class='line' id='LC4561'><br/></div><div class='line' id='LC4562'>			return match;</div><div class='line' id='LC4563'>		}</div><div class='line' id='LC4564'>	},</div><div class='line' id='LC4565'><br/></div><div class='line' id='LC4566'>	filters: {</div><div class='line' id='LC4567'>		enabled: function( elem ) {</div><div class='line' id='LC4568'>			return elem.disabled === false &amp;&amp; elem.type !== &quot;hidden&quot;;</div><div class='line' id='LC4569'>		},</div><div class='line' id='LC4570'><br/></div><div class='line' id='LC4571'>		disabled: function( elem ) {</div><div class='line' id='LC4572'>			return elem.disabled === true;</div><div class='line' id='LC4573'>		},</div><div class='line' id='LC4574'><br/></div><div class='line' id='LC4575'>		checked: function( elem ) {</div><div class='line' id='LC4576'>			return elem.checked === true;</div><div class='line' id='LC4577'>		},</div><div class='line' id='LC4578'><br/></div><div class='line' id='LC4579'>		selected: function( elem ) {</div><div class='line' id='LC4580'>			// Accessing this property makes selected-by-default</div><div class='line' id='LC4581'>			// options in Safari work properly</div><div class='line' id='LC4582'>			if ( elem.parentNode ) {</div><div class='line' id='LC4583'>				elem.parentNode.selectedIndex;</div><div class='line' id='LC4584'>			}</div><div class='line' id='LC4585'><br/></div><div class='line' id='LC4586'>			return elem.selected === true;</div><div class='line' id='LC4587'>		},</div><div class='line' id='LC4588'><br/></div><div class='line' id='LC4589'>		parent: function( elem ) {</div><div class='line' id='LC4590'>			return !!elem.firstChild;</div><div class='line' id='LC4591'>		},</div><div class='line' id='LC4592'><br/></div><div class='line' id='LC4593'>		empty: function( elem ) {</div><div class='line' id='LC4594'>			return !elem.firstChild;</div><div class='line' id='LC4595'>		},</div><div class='line' id='LC4596'><br/></div><div class='line' id='LC4597'>		has: function( elem, i, match ) {</div><div class='line' id='LC4598'>			return !!Sizzle( match[3], elem ).length;</div><div class='line' id='LC4599'>		},</div><div class='line' id='LC4600'><br/></div><div class='line' id='LC4601'>		header: function( elem ) {</div><div class='line' id='LC4602'>			return (/h\d/i).test( elem.nodeName );</div><div class='line' id='LC4603'>		},</div><div class='line' id='LC4604'><br/></div><div class='line' id='LC4605'>		text: function( elem ) {</div><div class='line' id='LC4606'>			var attr = elem.getAttribute( &quot;type&quot; ), type = elem.type;</div><div class='line' id='LC4607'>			// IE6 and 7 will map elem.type to &#39;text&#39; for new HTML5 types (search, etc)</div><div class='line' id='LC4608'>			// use getAttribute instead to test this case</div><div class='line' id='LC4609'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;text&quot; === type &amp;&amp; ( attr === type || attr === null );</div><div class='line' id='LC4610'>		},</div><div class='line' id='LC4611'><br/></div><div class='line' id='LC4612'>		radio: function( elem ) {</div><div class='line' id='LC4613'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;radio&quot; === elem.type;</div><div class='line' id='LC4614'>		},</div><div class='line' id='LC4615'><br/></div><div class='line' id='LC4616'>		checkbox: function( elem ) {</div><div class='line' id='LC4617'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;checkbox&quot; === elem.type;</div><div class='line' id='LC4618'>		},</div><div class='line' id='LC4619'><br/></div><div class='line' id='LC4620'>		file: function( elem ) {</div><div class='line' id='LC4621'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;file&quot; === elem.type;</div><div class='line' id='LC4622'>		},</div><div class='line' id='LC4623'><br/></div><div class='line' id='LC4624'>		password: function( elem ) {</div><div class='line' id='LC4625'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;password&quot; === elem.type;</div><div class='line' id='LC4626'>		},</div><div class='line' id='LC4627'><br/></div><div class='line' id='LC4628'>		submit: function( elem ) {</div><div class='line' id='LC4629'>			var name = elem.nodeName.toLowerCase();</div><div class='line' id='LC4630'>			return (name === &quot;input&quot; || name === &quot;button&quot;) &amp;&amp; &quot;submit&quot; === elem.type;</div><div class='line' id='LC4631'>		},</div><div class='line' id='LC4632'><br/></div><div class='line' id='LC4633'>		image: function( elem ) {</div><div class='line' id='LC4634'>			return elem.nodeName.toLowerCase() === &quot;input&quot; &amp;&amp; &quot;image&quot; === elem.type;</div><div class='line' id='LC4635'>		},</div><div class='line' id='LC4636'><br/></div><div class='line' id='LC4637'>		reset: function( elem ) {</div><div class='line' id='LC4638'>			var name = elem.nodeName.toLowerCase();</div><div class='line' id='LC4639'>			return (name === &quot;input&quot; || name === &quot;button&quot;) &amp;&amp; &quot;reset&quot; === elem.type;</div><div class='line' id='LC4640'>		},</div><div class='line' id='LC4641'><br/></div><div class='line' id='LC4642'>		button: function( elem ) {</div><div class='line' id='LC4643'>			var name = elem.nodeName.toLowerCase();</div><div class='line' id='LC4644'>			return name === &quot;input&quot; &amp;&amp; &quot;button&quot; === elem.type || name === &quot;button&quot;;</div><div class='line' id='LC4645'>		},</div><div class='line' id='LC4646'><br/></div><div class='line' id='LC4647'>		input: function( elem ) {</div><div class='line' id='LC4648'>			return (/input|select|textarea|button/i).test( elem.nodeName );</div><div class='line' id='LC4649'>		},</div><div class='line' id='LC4650'><br/></div><div class='line' id='LC4651'>		focus: function( elem ) {</div><div class='line' id='LC4652'>			return elem === elem.ownerDocument.activeElement;</div><div class='line' id='LC4653'>		}</div><div class='line' id='LC4654'>	},</div><div class='line' id='LC4655'>	setFilters: {</div><div class='line' id='LC4656'>		first: function( elem, i ) {</div><div class='line' id='LC4657'>			return i === 0;</div><div class='line' id='LC4658'>		},</div><div class='line' id='LC4659'><br/></div><div class='line' id='LC4660'>		last: function( elem, i, match, array ) {</div><div class='line' id='LC4661'>			return i === array.length - 1;</div><div class='line' id='LC4662'>		},</div><div class='line' id='LC4663'><br/></div><div class='line' id='LC4664'>		even: function( elem, i ) {</div><div class='line' id='LC4665'>			return i % 2 === 0;</div><div class='line' id='LC4666'>		},</div><div class='line' id='LC4667'><br/></div><div class='line' id='LC4668'>		odd: function( elem, i ) {</div><div class='line' id='LC4669'>			return i % 2 === 1;</div><div class='line' id='LC4670'>		},</div><div class='line' id='LC4671'><br/></div><div class='line' id='LC4672'>		lt: function( elem, i, match ) {</div><div class='line' id='LC4673'>			return i &lt; match[3] - 0;</div><div class='line' id='LC4674'>		},</div><div class='line' id='LC4675'><br/></div><div class='line' id='LC4676'>		gt: function( elem, i, match ) {</div><div class='line' id='LC4677'>			return i &gt; match[3] - 0;</div><div class='line' id='LC4678'>		},</div><div class='line' id='LC4679'><br/></div><div class='line' id='LC4680'>		nth: function( elem, i, match ) {</div><div class='line' id='LC4681'>			return match[3] - 0 === i;</div><div class='line' id='LC4682'>		},</div><div class='line' id='LC4683'><br/></div><div class='line' id='LC4684'>		eq: function( elem, i, match ) {</div><div class='line' id='LC4685'>			return match[3] - 0 === i;</div><div class='line' id='LC4686'>		}</div><div class='line' id='LC4687'>	},</div><div class='line' id='LC4688'>	filter: {</div><div class='line' id='LC4689'>		PSEUDO: function( elem, match, i, array ) {</div><div class='line' id='LC4690'>			var name = match[1],</div><div class='line' id='LC4691'>				filter = Expr.filters[ name ];</div><div class='line' id='LC4692'><br/></div><div class='line' id='LC4693'>			if ( filter ) {</div><div class='line' id='LC4694'>				return filter( elem, i, match, array );</div><div class='line' id='LC4695'><br/></div><div class='line' id='LC4696'>			} else if ( name === &quot;contains&quot; ) {</div><div class='line' id='LC4697'>				return (elem.textContent || elem.innerText || getText([ elem ]) || &quot;&quot;).indexOf(match[3]) &gt;= 0;</div><div class='line' id='LC4698'><br/></div><div class='line' id='LC4699'>			} else if ( name === &quot;not&quot; ) {</div><div class='line' id='LC4700'>				var not = match[3];</div><div class='line' id='LC4701'><br/></div><div class='line' id='LC4702'>				for ( var j = 0, l = not.length; j &lt; l; j++ ) {</div><div class='line' id='LC4703'>					if ( not[j] === elem ) {</div><div class='line' id='LC4704'>						return false;</div><div class='line' id='LC4705'>					}</div><div class='line' id='LC4706'>				}</div><div class='line' id='LC4707'><br/></div><div class='line' id='LC4708'>				return true;</div><div class='line' id='LC4709'><br/></div><div class='line' id='LC4710'>			} else {</div><div class='line' id='LC4711'>				Sizzle.error( name );</div><div class='line' id='LC4712'>			}</div><div class='line' id='LC4713'>		},</div><div class='line' id='LC4714'><br/></div><div class='line' id='LC4715'>		CHILD: function( elem, match ) {</div><div class='line' id='LC4716'>			var first, last,</div><div class='line' id='LC4717'>				doneName, parent, cache,</div><div class='line' id='LC4718'>				count, diff,</div><div class='line' id='LC4719'>				type = match[1],</div><div class='line' id='LC4720'>				node = elem;</div><div class='line' id='LC4721'><br/></div><div class='line' id='LC4722'>			switch ( type ) {</div><div class='line' id='LC4723'>				case &quot;only&quot;:</div><div class='line' id='LC4724'>				case &quot;first&quot;:</div><div class='line' id='LC4725'>					while ( (node = node.previousSibling) ) {</div><div class='line' id='LC4726'>						if ( node.nodeType === 1 ) {</div><div class='line' id='LC4727'>							return false;</div><div class='line' id='LC4728'>						}</div><div class='line' id='LC4729'>					}</div><div class='line' id='LC4730'><br/></div><div class='line' id='LC4731'>					if ( type === &quot;first&quot; ) {</div><div class='line' id='LC4732'>						return true;</div><div class='line' id='LC4733'>					}</div><div class='line' id='LC4734'><br/></div><div class='line' id='LC4735'>					node = elem;</div><div class='line' id='LC4736'><br/></div><div class='line' id='LC4737'>					/* falls through */</div><div class='line' id='LC4738'>				case &quot;last&quot;:</div><div class='line' id='LC4739'>					while ( (node = node.nextSibling) ) {</div><div class='line' id='LC4740'>						if ( node.nodeType === 1 ) {</div><div class='line' id='LC4741'>							return false;</div><div class='line' id='LC4742'>						}</div><div class='line' id='LC4743'>					}</div><div class='line' id='LC4744'><br/></div><div class='line' id='LC4745'>					return true;</div><div class='line' id='LC4746'><br/></div><div class='line' id='LC4747'>				case &quot;nth&quot;:</div><div class='line' id='LC4748'>					first = match[2];</div><div class='line' id='LC4749'>					last = match[3];</div><div class='line' id='LC4750'><br/></div><div class='line' id='LC4751'>					if ( first === 1 &amp;&amp; last === 0 ) {</div><div class='line' id='LC4752'>						return true;</div><div class='line' id='LC4753'>					}</div><div class='line' id='LC4754'><br/></div><div class='line' id='LC4755'>					doneName = match[0];</div><div class='line' id='LC4756'>					parent = elem.parentNode;</div><div class='line' id='LC4757'><br/></div><div class='line' id='LC4758'>					if ( parent &amp;&amp; (parent[ expando ] !== doneName || !elem.nodeIndex) ) {</div><div class='line' id='LC4759'>						count = 0;</div><div class='line' id='LC4760'><br/></div><div class='line' id='LC4761'>						for ( node = parent.firstChild; node; node = node.nextSibling ) {</div><div class='line' id='LC4762'>							if ( node.nodeType === 1 ) {</div><div class='line' id='LC4763'>								node.nodeIndex = ++count;</div><div class='line' id='LC4764'>							}</div><div class='line' id='LC4765'>						}</div><div class='line' id='LC4766'><br/></div><div class='line' id='LC4767'>						parent[ expando ] = doneName;</div><div class='line' id='LC4768'>					}</div><div class='line' id='LC4769'><br/></div><div class='line' id='LC4770'>					diff = elem.nodeIndex - last;</div><div class='line' id='LC4771'><br/></div><div class='line' id='LC4772'>					if ( first === 0 ) {</div><div class='line' id='LC4773'>						return diff === 0;</div><div class='line' id='LC4774'><br/></div><div class='line' id='LC4775'>					} else {</div><div class='line' id='LC4776'>						return ( diff % first === 0 &amp;&amp; diff / first &gt;= 0 );</div><div class='line' id='LC4777'>					}</div><div class='line' id='LC4778'>			}</div><div class='line' id='LC4779'>		},</div><div class='line' id='LC4780'><br/></div><div class='line' id='LC4781'>		ID: function( elem, match ) {</div><div class='line' id='LC4782'>			return elem.nodeType === 1 &amp;&amp; elem.getAttribute(&quot;id&quot;) === match;</div><div class='line' id='LC4783'>		},</div><div class='line' id='LC4784'><br/></div><div class='line' id='LC4785'>		TAG: function( elem, match ) {</div><div class='line' id='LC4786'>			return (match === &quot;*&quot; &amp;&amp; elem.nodeType === 1) || !!elem.nodeName &amp;&amp; elem.nodeName.toLowerCase() === match;</div><div class='line' id='LC4787'>		},</div><div class='line' id='LC4788'><br/></div><div class='line' id='LC4789'>		CLASS: function( elem, match ) {</div><div class='line' id='LC4790'>			return (&quot; &quot; + (elem.className || elem.getAttribute(&quot;class&quot;)) + &quot; &quot;)</div><div class='line' id='LC4791'>				.indexOf( match ) &gt; -1;</div><div class='line' id='LC4792'>		},</div><div class='line' id='LC4793'><br/></div><div class='line' id='LC4794'>		ATTR: function( elem, match ) {</div><div class='line' id='LC4795'>			var name = match[1],</div><div class='line' id='LC4796'>				result = Sizzle.attr ?</div><div class='line' id='LC4797'>					Sizzle.attr( elem, name ) :</div><div class='line' id='LC4798'>					Expr.attrHandle[ name ] ?</div><div class='line' id='LC4799'>					Expr.attrHandle[ name ]( elem ) :</div><div class='line' id='LC4800'>					elem[ name ] != null ?</div><div class='line' id='LC4801'>						elem[ name ] :</div><div class='line' id='LC4802'>						elem.getAttribute( name ),</div><div class='line' id='LC4803'>				value = result + &quot;&quot;,</div><div class='line' id='LC4804'>				type = match[2],</div><div class='line' id='LC4805'>				check = match[4];</div><div class='line' id='LC4806'><br/></div><div class='line' id='LC4807'>			return result == null ?</div><div class='line' id='LC4808'>				type === &quot;!=&quot; :</div><div class='line' id='LC4809'>				!type &amp;&amp; Sizzle.attr ?</div><div class='line' id='LC4810'>				result != null :</div><div class='line' id='LC4811'>				type === &quot;=&quot; ?</div><div class='line' id='LC4812'>				value === check :</div><div class='line' id='LC4813'>				type === &quot;*=&quot; ?</div><div class='line' id='LC4814'>				value.indexOf(check) &gt;= 0 :</div><div class='line' id='LC4815'>				type === &quot;~=&quot; ?</div><div class='line' id='LC4816'>				(&quot; &quot; + value + &quot; &quot;).indexOf(check) &gt;= 0 :</div><div class='line' id='LC4817'>				!check ?</div><div class='line' id='LC4818'>				value &amp;&amp; result !== false :</div><div class='line' id='LC4819'>				type === &quot;!=&quot; ?</div><div class='line' id='LC4820'>				value !== check :</div><div class='line' id='LC4821'>				type === &quot;^=&quot; ?</div><div class='line' id='LC4822'>				value.indexOf(check) === 0 :</div><div class='line' id='LC4823'>				type === &quot;$=&quot; ?</div><div class='line' id='LC4824'>				value.substr(value.length - check.length) === check :</div><div class='line' id='LC4825'>				type === &quot;|=&quot; ?</div><div class='line' id='LC4826'>				value === check || value.substr(0, check.length + 1) === check + &quot;-&quot; :</div><div class='line' id='LC4827'>				false;</div><div class='line' id='LC4828'>		},</div><div class='line' id='LC4829'><br/></div><div class='line' id='LC4830'>		POS: function( elem, match, i, array ) {</div><div class='line' id='LC4831'>			var name = match[2],</div><div class='line' id='LC4832'>				filter = Expr.setFilters[ name ];</div><div class='line' id='LC4833'><br/></div><div class='line' id='LC4834'>			if ( filter ) {</div><div class='line' id='LC4835'>				return filter( elem, i, match, array );</div><div class='line' id='LC4836'>			}</div><div class='line' id='LC4837'>		}</div><div class='line' id='LC4838'>	}</div><div class='line' id='LC4839'>};</div><div class='line' id='LC4840'><br/></div><div class='line' id='LC4841'>var origPOS = Expr.match.POS,</div><div class='line' id='LC4842'>	fescape = function(all, num){</div><div class='line' id='LC4843'>		return &quot;\\&quot; + (num - 0 + 1);</div><div class='line' id='LC4844'>	};</div><div class='line' id='LC4845'><br/></div><div class='line' id='LC4846'>for ( var type in Expr.match ) {</div><div class='line' id='LC4847'>	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );</div><div class='line' id='LC4848'>	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );</div><div class='line' id='LC4849'>}</div><div class='line' id='LC4850'>// Expose origPOS</div><div class='line' id='LC4851'>// &quot;global&quot; as in regardless of relation to brackets/parens</div><div class='line' id='LC4852'>Expr.match.globalPOS = origPOS;</div><div class='line' id='LC4853'><br/></div><div class='line' id='LC4854'>var makeArray = function( array, results ) {</div><div class='line' id='LC4855'>	array = Array.prototype.slice.call( array, 0 );</div><div class='line' id='LC4856'><br/></div><div class='line' id='LC4857'>	if ( results ) {</div><div class='line' id='LC4858'>		results.push.apply( results, array );</div><div class='line' id='LC4859'>		return results;</div><div class='line' id='LC4860'>	}</div><div class='line' id='LC4861'><br/></div><div class='line' id='LC4862'>	return array;</div><div class='line' id='LC4863'>};</div><div class='line' id='LC4864'><br/></div><div class='line' id='LC4865'>// Perform a simple check to determine if the browser is capable of</div><div class='line' id='LC4866'>// converting a NodeList to an array using builtin methods.</div><div class='line' id='LC4867'>// Also verifies that the returned array holds DOM nodes</div><div class='line' id='LC4868'>// (which is not the case in the Blackberry browser)</div><div class='line' id='LC4869'>try {</div><div class='line' id='LC4870'>	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;</div><div class='line' id='LC4871'><br/></div><div class='line' id='LC4872'>// Provide a fallback method if it does not work</div><div class='line' id='LC4873'>} catch( e ) {</div><div class='line' id='LC4874'>	makeArray = function( array, results ) {</div><div class='line' id='LC4875'>		var i = 0,</div><div class='line' id='LC4876'>			ret = results || [];</div><div class='line' id='LC4877'><br/></div><div class='line' id='LC4878'>		if ( toString.call(array) === &quot;[object Array]&quot; ) {</div><div class='line' id='LC4879'>			Array.prototype.push.apply( ret, array );</div><div class='line' id='LC4880'><br/></div><div class='line' id='LC4881'>		} else {</div><div class='line' id='LC4882'>			if ( typeof array.length === &quot;number&quot; ) {</div><div class='line' id='LC4883'>				for ( var l = array.length; i &lt; l; i++ ) {</div><div class='line' id='LC4884'>					ret.push( array[i] );</div><div class='line' id='LC4885'>				}</div><div class='line' id='LC4886'><br/></div><div class='line' id='LC4887'>			} else {</div><div class='line' id='LC4888'>				for ( ; array[i]; i++ ) {</div><div class='line' id='LC4889'>					ret.push( array[i] );</div><div class='line' id='LC4890'>				}</div><div class='line' id='LC4891'>			}</div><div class='line' id='LC4892'>		}</div><div class='line' id='LC4893'><br/></div><div class='line' id='LC4894'>		return ret;</div><div class='line' id='LC4895'>	};</div><div class='line' id='LC4896'>}</div><div class='line' id='LC4897'><br/></div><div class='line' id='LC4898'>var sortOrder, siblingCheck;</div><div class='line' id='LC4899'><br/></div><div class='line' id='LC4900'>if ( document.documentElement.compareDocumentPosition ) {</div><div class='line' id='LC4901'>	sortOrder = function( a, b ) {</div><div class='line' id='LC4902'>		if ( a === b ) {</div><div class='line' id='LC4903'>			hasDuplicate = true;</div><div class='line' id='LC4904'>			return 0;</div><div class='line' id='LC4905'>		}</div><div class='line' id='LC4906'><br/></div><div class='line' id='LC4907'>		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {</div><div class='line' id='LC4908'>			return a.compareDocumentPosition ? -1 : 1;</div><div class='line' id='LC4909'>		}</div><div class='line' id='LC4910'><br/></div><div class='line' id='LC4911'>		return a.compareDocumentPosition(b) &amp; 4 ? -1 : 1;</div><div class='line' id='LC4912'>	};</div><div class='line' id='LC4913'><br/></div><div class='line' id='LC4914'>} else {</div><div class='line' id='LC4915'>	sortOrder = function( a, b ) {</div><div class='line' id='LC4916'>		// The nodes are identical, we can exit early</div><div class='line' id='LC4917'>		if ( a === b ) {</div><div class='line' id='LC4918'>			hasDuplicate = true;</div><div class='line' id='LC4919'>			return 0;</div><div class='line' id='LC4920'><br/></div><div class='line' id='LC4921'>		// Fallback to using sourceIndex (in IE) if it&#39;s available on both nodes</div><div class='line' id='LC4922'>		} else if ( a.sourceIndex &amp;&amp; b.sourceIndex ) {</div><div class='line' id='LC4923'>			return a.sourceIndex - b.sourceIndex;</div><div class='line' id='LC4924'>		}</div><div class='line' id='LC4925'><br/></div><div class='line' id='LC4926'>		var al, bl,</div><div class='line' id='LC4927'>			ap = [],</div><div class='line' id='LC4928'>			bp = [],</div><div class='line' id='LC4929'>			aup = a.parentNode,</div><div class='line' id='LC4930'>			bup = b.parentNode,</div><div class='line' id='LC4931'>			cur = aup;</div><div class='line' id='LC4932'><br/></div><div class='line' id='LC4933'>		// If the nodes are siblings (or identical) we can do a quick check</div><div class='line' id='LC4934'>		if ( aup === bup ) {</div><div class='line' id='LC4935'>			return siblingCheck( a, b );</div><div class='line' id='LC4936'><br/></div><div class='line' id='LC4937'>		// If no parents were found then the nodes are disconnected</div><div class='line' id='LC4938'>		} else if ( !aup ) {</div><div class='line' id='LC4939'>			return -1;</div><div class='line' id='LC4940'><br/></div><div class='line' id='LC4941'>		} else if ( !bup ) {</div><div class='line' id='LC4942'>			return 1;</div><div class='line' id='LC4943'>		}</div><div class='line' id='LC4944'><br/></div><div class='line' id='LC4945'>		// Otherwise they&#39;re somewhere else in the tree so we need</div><div class='line' id='LC4946'>		// to build up a full list of the parentNodes for comparison</div><div class='line' id='LC4947'>		while ( cur ) {</div><div class='line' id='LC4948'>			ap.unshift( cur );</div><div class='line' id='LC4949'>			cur = cur.parentNode;</div><div class='line' id='LC4950'>		}</div><div class='line' id='LC4951'><br/></div><div class='line' id='LC4952'>		cur = bup;</div><div class='line' id='LC4953'><br/></div><div class='line' id='LC4954'>		while ( cur ) {</div><div class='line' id='LC4955'>			bp.unshift( cur );</div><div class='line' id='LC4956'>			cur = cur.parentNode;</div><div class='line' id='LC4957'>		}</div><div class='line' id='LC4958'><br/></div><div class='line' id='LC4959'>		al = ap.length;</div><div class='line' id='LC4960'>		bl = bp.length;</div><div class='line' id='LC4961'><br/></div><div class='line' id='LC4962'>		// Start walking down the tree looking for a discrepancy</div><div class='line' id='LC4963'>		for ( var i = 0; i &lt; al &amp;&amp; i &lt; bl; i++ ) {</div><div class='line' id='LC4964'>			if ( ap[i] !== bp[i] ) {</div><div class='line' id='LC4965'>				return siblingCheck( ap[i], bp[i] );</div><div class='line' id='LC4966'>			}</div><div class='line' id='LC4967'>		}</div><div class='line' id='LC4968'><br/></div><div class='line' id='LC4969'>		// We ended someplace up the tree so do a sibling check</div><div class='line' id='LC4970'>		return i === al ?</div><div class='line' id='LC4971'>			siblingCheck( a, bp[i], -1 ) :</div><div class='line' id='LC4972'>			siblingCheck( ap[i], b, 1 );</div><div class='line' id='LC4973'>	};</div><div class='line' id='LC4974'><br/></div><div class='line' id='LC4975'>	siblingCheck = function( a, b, ret ) {</div><div class='line' id='LC4976'>		if ( a === b ) {</div><div class='line' id='LC4977'>			return ret;</div><div class='line' id='LC4978'>		}</div><div class='line' id='LC4979'><br/></div><div class='line' id='LC4980'>		var cur = a.nextSibling;</div><div class='line' id='LC4981'><br/></div><div class='line' id='LC4982'>		while ( cur ) {</div><div class='line' id='LC4983'>			if ( cur === b ) {</div><div class='line' id='LC4984'>				return -1;</div><div class='line' id='LC4985'>			}</div><div class='line' id='LC4986'><br/></div><div class='line' id='LC4987'>			cur = cur.nextSibling;</div><div class='line' id='LC4988'>		}</div><div class='line' id='LC4989'><br/></div><div class='line' id='LC4990'>		return 1;</div><div class='line' id='LC4991'>	};</div><div class='line' id='LC4992'>}</div><div class='line' id='LC4993'><br/></div><div class='line' id='LC4994'>// Check to see if the browser returns elements by name when</div><div class='line' id='LC4995'>// querying by getElementById (and provide a workaround)</div><div class='line' id='LC4996'>(function(){</div><div class='line' id='LC4997'>	// We&#39;re going to inject a fake input element with a specified name</div><div class='line' id='LC4998'>	var form = document.createElement(&quot;div&quot;),</div><div class='line' id='LC4999'>		id = &quot;script&quot; + (new Date()).getTime(),</div><div class='line' id='LC5000'>		root = document.documentElement;</div><div class='line' id='LC5001'><br/></div><div class='line' id='LC5002'>	form.innerHTML = &quot;&lt;a name=&#39;&quot; + id + &quot;&#39;/&gt;&quot;;</div><div class='line' id='LC5003'><br/></div><div class='line' id='LC5004'>	// Inject it into the root element, check its status, and remove it quickly</div><div class='line' id='LC5005'>	root.insertBefore( form, root.firstChild );</div><div class='line' id='LC5006'><br/></div><div class='line' id='LC5007'>	// The workaround has to do additional checks after a getElementById</div><div class='line' id='LC5008'>	// Which slows things down for other browsers (hence the branching)</div><div class='line' id='LC5009'>	if ( document.getElementById( id ) ) {</div><div class='line' id='LC5010'>		Expr.find.ID = function( match, context, isXML ) {</div><div class='line' id='LC5011'>			if ( typeof context.getElementById !== &quot;undefined&quot; &amp;&amp; !isXML ) {</div><div class='line' id='LC5012'>				var m = context.getElementById(match[1]);</div><div class='line' id='LC5013'><br/></div><div class='line' id='LC5014'>				return m ?</div><div class='line' id='LC5015'>					m.id === match[1] || typeof m.getAttributeNode !== &quot;undefined&quot; &amp;&amp; m.getAttributeNode(&quot;id&quot;).nodeValue === match[1] ?</div><div class='line' id='LC5016'>						[m] :</div><div class='line' id='LC5017'>						undefined :</div><div class='line' id='LC5018'>					[];</div><div class='line' id='LC5019'>			}</div><div class='line' id='LC5020'>		};</div><div class='line' id='LC5021'><br/></div><div class='line' id='LC5022'>		Expr.filter.ID = function( elem, match ) {</div><div class='line' id='LC5023'>			var node = typeof elem.getAttributeNode !== &quot;undefined&quot; &amp;&amp; elem.getAttributeNode(&quot;id&quot;);</div><div class='line' id='LC5024'><br/></div><div class='line' id='LC5025'>			return elem.nodeType === 1 &amp;&amp; node &amp;&amp; node.nodeValue === match;</div><div class='line' id='LC5026'>		};</div><div class='line' id='LC5027'>	}</div><div class='line' id='LC5028'><br/></div><div class='line' id='LC5029'>	root.removeChild( form );</div><div class='line' id='LC5030'><br/></div><div class='line' id='LC5031'>	// release memory in IE</div><div class='line' id='LC5032'>	root = form = null;</div><div class='line' id='LC5033'>})();</div><div class='line' id='LC5034'><br/></div><div class='line' id='LC5035'>(function(){</div><div class='line' id='LC5036'>	// Check to see if the browser returns only elements</div><div class='line' id='LC5037'>	// when doing getElementsByTagName(&quot;*&quot;)</div><div class='line' id='LC5038'><br/></div><div class='line' id='LC5039'>	// Create a fake element</div><div class='line' id='LC5040'>	var div = document.createElement(&quot;div&quot;);</div><div class='line' id='LC5041'>	div.appendChild( document.createComment(&quot;&quot;) );</div><div class='line' id='LC5042'><br/></div><div class='line' id='LC5043'>	// Make sure no comments are found</div><div class='line' id='LC5044'>	if ( div.getElementsByTagName(&quot;*&quot;).length &gt; 0 ) {</div><div class='line' id='LC5045'>		Expr.find.TAG = function( match, context ) {</div><div class='line' id='LC5046'>			var results = context.getElementsByTagName( match[1] );</div><div class='line' id='LC5047'><br/></div><div class='line' id='LC5048'>			// Filter out possible comments</div><div class='line' id='LC5049'>			if ( match[1] === &quot;*&quot; ) {</div><div class='line' id='LC5050'>				var tmp = [];</div><div class='line' id='LC5051'><br/></div><div class='line' id='LC5052'>				for ( var i = 0; results[i]; i++ ) {</div><div class='line' id='LC5053'>					if ( results[i].nodeType === 1 ) {</div><div class='line' id='LC5054'>						tmp.push( results[i] );</div><div class='line' id='LC5055'>					}</div><div class='line' id='LC5056'>				}</div><div class='line' id='LC5057'><br/></div><div class='line' id='LC5058'>				results = tmp;</div><div class='line' id='LC5059'>			}</div><div class='line' id='LC5060'><br/></div><div class='line' id='LC5061'>			return results;</div><div class='line' id='LC5062'>		};</div><div class='line' id='LC5063'>	}</div><div class='line' id='LC5064'><br/></div><div class='line' id='LC5065'>	// Check to see if an attribute returns normalized href attributes</div><div class='line' id='LC5066'>	div.innerHTML = &quot;&lt;a href=&#39;#&#39;&gt;&lt;/a&gt;&quot;;</div><div class='line' id='LC5067'><br/></div><div class='line' id='LC5068'>	if ( div.firstChild &amp;&amp; typeof div.firstChild.getAttribute !== &quot;undefined&quot; &amp;&amp;</div><div class='line' id='LC5069'>			div.firstChild.getAttribute(&quot;href&quot;) !== &quot;#&quot; ) {</div><div class='line' id='LC5070'><br/></div><div class='line' id='LC5071'>		Expr.attrHandle.href = function( elem ) {</div><div class='line' id='LC5072'>			return elem.getAttribute( &quot;href&quot;, 2 );</div><div class='line' id='LC5073'>		};</div><div class='line' id='LC5074'>	}</div><div class='line' id='LC5075'><br/></div><div class='line' id='LC5076'>	// release memory in IE</div><div class='line' id='LC5077'>	div = null;</div><div class='line' id='LC5078'>})();</div><div class='line' id='LC5079'><br/></div><div class='line' id='LC5080'>if ( document.querySelectorAll ) {</div><div class='line' id='LC5081'>	(function(){</div><div class='line' id='LC5082'>		var oldSizzle = Sizzle,</div><div class='line' id='LC5083'>			div = document.createElement(&quot;div&quot;),</div><div class='line' id='LC5084'>			id = &quot;__sizzle__&quot;;</div><div class='line' id='LC5085'><br/></div><div class='line' id='LC5086'>		div.innerHTML = &quot;&lt;p class=&#39;TEST&#39;&gt;&lt;/p&gt;&quot;;</div><div class='line' id='LC5087'><br/></div><div class='line' id='LC5088'>		// Safari can&#39;t handle uppercase or unicode characters when</div><div class='line' id='LC5089'>		// in quirks mode.</div><div class='line' id='LC5090'>		if ( div.querySelectorAll &amp;&amp; div.querySelectorAll(&quot;.TEST&quot;).length === 0 ) {</div><div class='line' id='LC5091'>			return;</div><div class='line' id='LC5092'>		}</div><div class='line' id='LC5093'><br/></div><div class='line' id='LC5094'>		Sizzle = function( query, context, extra, seed ) {</div><div class='line' id='LC5095'>			context = context || document;</div><div class='line' id='LC5096'><br/></div><div class='line' id='LC5097'>			// Only use querySelectorAll on non-XML documents</div><div class='line' id='LC5098'>			// (ID selectors don&#39;t work in non-HTML documents)</div><div class='line' id='LC5099'>			if ( !seed &amp;&amp; !Sizzle.isXML(context) ) {</div><div class='line' id='LC5100'>				// See if we find a selector to speed up</div><div class='line' id='LC5101'>				var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );</div><div class='line' id='LC5102'><br/></div><div class='line' id='LC5103'>				if ( match &amp;&amp; (context.nodeType === 1 || context.nodeType === 9) ) {</div><div class='line' id='LC5104'>					// Speed-up: Sizzle(&quot;TAG&quot;)</div><div class='line' id='LC5105'>					if ( match[1] ) {</div><div class='line' id='LC5106'>						return makeArray( context.getElementsByTagName( query ), extra );</div><div class='line' id='LC5107'><br/></div><div class='line' id='LC5108'>					// Speed-up: Sizzle(&quot;.CLASS&quot;)</div><div class='line' id='LC5109'>					} else if ( match[2] &amp;&amp; Expr.find.CLASS &amp;&amp; context.getElementsByClassName ) {</div><div class='line' id='LC5110'>						return makeArray( context.getElementsByClassName( match[2] ), extra );</div><div class='line' id='LC5111'>					}</div><div class='line' id='LC5112'>				}</div><div class='line' id='LC5113'><br/></div><div class='line' id='LC5114'>				if ( context.nodeType === 9 ) {</div><div class='line' id='LC5115'>					// Speed-up: Sizzle(&quot;body&quot;)</div><div class='line' id='LC5116'>					// The body element only exists once, optimize finding it</div><div class='line' id='LC5117'>					if ( query === &quot;body&quot; &amp;&amp; context.body ) {</div><div class='line' id='LC5118'>						return makeArray( [ context.body ], extra );</div><div class='line' id='LC5119'><br/></div><div class='line' id='LC5120'>					// Speed-up: Sizzle(&quot;#ID&quot;)</div><div class='line' id='LC5121'>					} else if ( match &amp;&amp; match[3] ) {</div><div class='line' id='LC5122'>						var elem = context.getElementById( match[3] );</div><div class='line' id='LC5123'><br/></div><div class='line' id='LC5124'>						// Check parentNode to catch when Blackberry 4.6 returns</div><div class='line' id='LC5125'>						// nodes that are no longer in the document #6963</div><div class='line' id='LC5126'>						if ( elem &amp;&amp; elem.parentNode ) {</div><div class='line' id='LC5127'>							// Handle the case where IE and Opera return items</div><div class='line' id='LC5128'>							// by name instead of ID</div><div class='line' id='LC5129'>							if ( elem.id === match[3] ) {</div><div class='line' id='LC5130'>								return makeArray( [ elem ], extra );</div><div class='line' id='LC5131'>							}</div><div class='line' id='LC5132'><br/></div><div class='line' id='LC5133'>						} else {</div><div class='line' id='LC5134'>							return makeArray( [], extra );</div><div class='line' id='LC5135'>						}</div><div class='line' id='LC5136'>					}</div><div class='line' id='LC5137'><br/></div><div class='line' id='LC5138'>					try {</div><div class='line' id='LC5139'>						return makeArray( context.querySelectorAll(query), extra );</div><div class='line' id='LC5140'>					} catch(qsaError) {}</div><div class='line' id='LC5141'><br/></div><div class='line' id='LC5142'>				// qSA works strangely on Element-rooted queries</div><div class='line' id='LC5143'>				// We can work around this by specifying an extra ID on the root</div><div class='line' id='LC5144'>				// and working up from there (Thanks to Andrew Dupont for the technique)</div><div class='line' id='LC5145'>				// IE 8 doesn&#39;t work on object elements</div><div class='line' id='LC5146'>				} else if ( context.nodeType === 1 &amp;&amp; context.nodeName.toLowerCase() !== &quot;object&quot; ) {</div><div class='line' id='LC5147'>					var oldContext = context,</div><div class='line' id='LC5148'>						old = context.getAttribute( &quot;id&quot; ),</div><div class='line' id='LC5149'>						nid = old || id,</div><div class='line' id='LC5150'>						hasParent = context.parentNode,</div><div class='line' id='LC5151'>						relativeHierarchySelector = /^\s*[+~]/.test( query );</div><div class='line' id='LC5152'><br/></div><div class='line' id='LC5153'>					if ( !old ) {</div><div class='line' id='LC5154'>						context.setAttribute( &quot;id&quot;, nid );</div><div class='line' id='LC5155'>					} else {</div><div class='line' id='LC5156'>						nid = nid.replace( /&#39;/g, &quot;\\$&amp;&quot; );</div><div class='line' id='LC5157'>					}</div><div class='line' id='LC5158'>					if ( relativeHierarchySelector &amp;&amp; hasParent ) {</div><div class='line' id='LC5159'>						context = context.parentNode;</div><div class='line' id='LC5160'>					}</div><div class='line' id='LC5161'><br/></div><div class='line' id='LC5162'>					try {</div><div class='line' id='LC5163'>						if ( !relativeHierarchySelector || hasParent ) {</div><div class='line' id='LC5164'>							return makeArray( context.querySelectorAll( &quot;[id=&#39;&quot; + nid + &quot;&#39;] &quot; + query ), extra );</div><div class='line' id='LC5165'>						}</div><div class='line' id='LC5166'><br/></div><div class='line' id='LC5167'>					} catch(pseudoError) {</div><div class='line' id='LC5168'>					} finally {</div><div class='line' id='LC5169'>						if ( !old ) {</div><div class='line' id='LC5170'>							oldContext.removeAttribute( &quot;id&quot; );</div><div class='line' id='LC5171'>						}</div><div class='line' id='LC5172'>					}</div><div class='line' id='LC5173'>				}</div><div class='line' id='LC5174'>			}</div><div class='line' id='LC5175'><br/></div><div class='line' id='LC5176'>			return oldSizzle(query, context, extra, seed);</div><div class='line' id='LC5177'>		};</div><div class='line' id='LC5178'><br/></div><div class='line' id='LC5179'>		for ( var prop in oldSizzle ) {</div><div class='line' id='LC5180'>			Sizzle[ prop ] = oldSizzle[ prop ];</div><div class='line' id='LC5181'>		}</div><div class='line' id='LC5182'><br/></div><div class='line' id='LC5183'>		// release memory in IE</div><div class='line' id='LC5184'>		div = null;</div><div class='line' id='LC5185'>	})();</div><div class='line' id='LC5186'>}</div><div class='line' id='LC5187'><br/></div><div class='line' id='LC5188'>(function(){</div><div class='line' id='LC5189'>	var html = document.documentElement,</div><div class='line' id='LC5190'>		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;</div><div class='line' id='LC5191'><br/></div><div class='line' id='LC5192'>	if ( matches ) {</div><div class='line' id='LC5193'>		// Check to see if it&#39;s possible to do matchesSelector</div><div class='line' id='LC5194'>		// on a disconnected node (IE 9 fails this)</div><div class='line' id='LC5195'>		var disconnectedMatch = !matches.call( document.createElement( &quot;div&quot; ), &quot;div&quot; ),</div><div class='line' id='LC5196'>			pseudoWorks = false;</div><div class='line' id='LC5197'><br/></div><div class='line' id='LC5198'>		try {</div><div class='line' id='LC5199'>			// This should fail with an exception</div><div class='line' id='LC5200'>			// Gecko does not error, returns false instead</div><div class='line' id='LC5201'>			matches.call( document.documentElement, &quot;[test!=&#39;&#39;]:sizzle&quot; );</div><div class='line' id='LC5202'><br/></div><div class='line' id='LC5203'>		} catch( pseudoError ) {</div><div class='line' id='LC5204'>			pseudoWorks = true;</div><div class='line' id='LC5205'>		}</div><div class='line' id='LC5206'><br/></div><div class='line' id='LC5207'>		Sizzle.matchesSelector = function( node, expr ) {</div><div class='line' id='LC5208'>			// Make sure that attribute selectors are quoted</div><div class='line' id='LC5209'>			expr = expr.replace(/\=\s*([^&#39;&quot;\]]*)\s*\]/g, &quot;=&#39;$1&#39;]&quot;);</div><div class='line' id='LC5210'><br/></div><div class='line' id='LC5211'>			if ( !Sizzle.isXML( node ) ) {</div><div class='line' id='LC5212'>				try {</div><div class='line' id='LC5213'>					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) &amp;&amp; !/!=/.test( expr ) ) {</div><div class='line' id='LC5214'>						var ret = matches.call( node, expr );</div><div class='line' id='LC5215'><br/></div><div class='line' id='LC5216'>						// IE 9&#39;s matchesSelector returns false on disconnected nodes</div><div class='line' id='LC5217'>						if ( ret || !disconnectedMatch ||</div><div class='line' id='LC5218'>								// As well, disconnected nodes are said to be in a document</div><div class='line' id='LC5219'>								// fragment in IE 9, so check for that</div><div class='line' id='LC5220'>								node.document &amp;&amp; node.document.nodeType !== 11 ) {</div><div class='line' id='LC5221'>							return ret;</div><div class='line' id='LC5222'>						}</div><div class='line' id='LC5223'>					}</div><div class='line' id='LC5224'>				} catch(e) {}</div><div class='line' id='LC5225'>			}</div><div class='line' id='LC5226'><br/></div><div class='line' id='LC5227'>			return Sizzle(expr, null, null, [node]).length &gt; 0;</div><div class='line' id='LC5228'>		};</div><div class='line' id='LC5229'>	}</div><div class='line' id='LC5230'>})();</div><div class='line' id='LC5231'><br/></div><div class='line' id='LC5232'>(function(){</div><div class='line' id='LC5233'>	var div = document.createElement(&quot;div&quot;);</div><div class='line' id='LC5234'><br/></div><div class='line' id='LC5235'>	div.innerHTML = &quot;&lt;div class=&#39;test e&#39;&gt;&lt;/div&gt;&lt;div class=&#39;test&#39;&gt;&lt;/div&gt;&quot;;</div><div class='line' id='LC5236'><br/></div><div class='line' id='LC5237'>	// Opera can&#39;t find a second classname (in 9.6)</div><div class='line' id='LC5238'>	// Also, make sure that getElementsByClassName actually exists</div><div class='line' id='LC5239'>	if ( !div.getElementsByClassName || div.getElementsByClassName(&quot;e&quot;).length === 0 ) {</div><div class='line' id='LC5240'>		return;</div><div class='line' id='LC5241'>	}</div><div class='line' id='LC5242'><br/></div><div class='line' id='LC5243'>	// Safari caches class attributes, doesn&#39;t catch changes (in 3.2)</div><div class='line' id='LC5244'>	div.lastChild.className = &quot;e&quot;;</div><div class='line' id='LC5245'><br/></div><div class='line' id='LC5246'>	if ( div.getElementsByClassName(&quot;e&quot;).length === 1 ) {</div><div class='line' id='LC5247'>		return;</div><div class='line' id='LC5248'>	}</div><div class='line' id='LC5249'><br/></div><div class='line' id='LC5250'>	Expr.order.splice(1, 0, &quot;CLASS&quot;);</div><div class='line' id='LC5251'>	Expr.find.CLASS = function( match, context, isXML ) {</div><div class='line' id='LC5252'>		if ( typeof context.getElementsByClassName !== &quot;undefined&quot; &amp;&amp; !isXML ) {</div><div class='line' id='LC5253'>			return context.getElementsByClassName(match[1]);</div><div class='line' id='LC5254'>		}</div><div class='line' id='LC5255'>	};</div><div class='line' id='LC5256'><br/></div><div class='line' id='LC5257'>	// release memory in IE</div><div class='line' id='LC5258'>	div = null;</div><div class='line' id='LC5259'>})();</div><div class='line' id='LC5260'><br/></div><div class='line' id='LC5261'>function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {</div><div class='line' id='LC5262'>	for ( var i = 0, l = checkSet.length; i &lt; l; i++ ) {</div><div class='line' id='LC5263'>		var elem = checkSet[i];</div><div class='line' id='LC5264'><br/></div><div class='line' id='LC5265'>		if ( elem ) {</div><div class='line' id='LC5266'>			var match = false;</div><div class='line' id='LC5267'><br/></div><div class='line' id='LC5268'>			elem = elem[dir];</div><div class='line' id='LC5269'><br/></div><div class='line' id='LC5270'>			while ( elem ) {</div><div class='line' id='LC5271'>				if ( elem[ expando ] === doneName ) {</div><div class='line' id='LC5272'>					match = checkSet[elem.sizset];</div><div class='line' id='LC5273'>					break;</div><div class='line' id='LC5274'>				}</div><div class='line' id='LC5275'><br/></div><div class='line' id='LC5276'>				if ( elem.nodeType === 1 &amp;&amp; !isXML ){</div><div class='line' id='LC5277'>					elem[ expando ] = doneName;</div><div class='line' id='LC5278'>					elem.sizset = i;</div><div class='line' id='LC5279'>				}</div><div class='line' id='LC5280'><br/></div><div class='line' id='LC5281'>				if ( elem.nodeName.toLowerCase() === cur ) {</div><div class='line' id='LC5282'>					match = elem;</div><div class='line' id='LC5283'>					break;</div><div class='line' id='LC5284'>				}</div><div class='line' id='LC5285'><br/></div><div class='line' id='LC5286'>				elem = elem[dir];</div><div class='line' id='LC5287'>			}</div><div class='line' id='LC5288'><br/></div><div class='line' id='LC5289'>			checkSet[i] = match;</div><div class='line' id='LC5290'>		}</div><div class='line' id='LC5291'>	}</div><div class='line' id='LC5292'>}</div><div class='line' id='LC5293'><br/></div><div class='line' id='LC5294'>function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {</div><div class='line' id='LC5295'>	for ( var i = 0, l = checkSet.length; i &lt; l; i++ ) {</div><div class='line' id='LC5296'>		var elem = checkSet[i];</div><div class='line' id='LC5297'><br/></div><div class='line' id='LC5298'>		if ( elem ) {</div><div class='line' id='LC5299'>			var match = false;</div><div class='line' id='LC5300'><br/></div><div class='line' id='LC5301'>			elem = elem[dir];</div><div class='line' id='LC5302'><br/></div><div class='line' id='LC5303'>			while ( elem ) {</div><div class='line' id='LC5304'>				if ( elem[ expando ] === doneName ) {</div><div class='line' id='LC5305'>					match = checkSet[elem.sizset];</div><div class='line' id='LC5306'>					break;</div><div class='line' id='LC5307'>				}</div><div class='line' id='LC5308'><br/></div><div class='line' id='LC5309'>				if ( elem.nodeType === 1 ) {</div><div class='line' id='LC5310'>					if ( !isXML ) {</div><div class='line' id='LC5311'>						elem[ expando ] = doneName;</div><div class='line' id='LC5312'>						elem.sizset = i;</div><div class='line' id='LC5313'>					}</div><div class='line' id='LC5314'><br/></div><div class='line' id='LC5315'>					if ( typeof cur !== &quot;string&quot; ) {</div><div class='line' id='LC5316'>						if ( elem === cur ) {</div><div class='line' id='LC5317'>							match = true;</div><div class='line' id='LC5318'>							break;</div><div class='line' id='LC5319'>						}</div><div class='line' id='LC5320'><br/></div><div class='line' id='LC5321'>					} else if ( Sizzle.filter( cur, [elem] ).length &gt; 0 ) {</div><div class='line' id='LC5322'>						match = elem;</div><div class='line' id='LC5323'>						break;</div><div class='line' id='LC5324'>					}</div><div class='line' id='LC5325'>				}</div><div class='line' id='LC5326'><br/></div><div class='line' id='LC5327'>				elem = elem[dir];</div><div class='line' id='LC5328'>			}</div><div class='line' id='LC5329'><br/></div><div class='line' id='LC5330'>			checkSet[i] = match;</div><div class='line' id='LC5331'>		}</div><div class='line' id='LC5332'>	}</div><div class='line' id='LC5333'>}</div><div class='line' id='LC5334'><br/></div><div class='line' id='LC5335'>if ( document.documentElement.contains ) {</div><div class='line' id='LC5336'>	Sizzle.contains = function( a, b ) {</div><div class='line' id='LC5337'>		return a !== b &amp;&amp; (a.contains ? a.contains(b) : true);</div><div class='line' id='LC5338'>	};</div><div class='line' id='LC5339'><br/></div><div class='line' id='LC5340'>} else if ( document.documentElement.compareDocumentPosition ) {</div><div class='line' id='LC5341'>	Sizzle.contains = function( a, b ) {</div><div class='line' id='LC5342'>		return !!(a.compareDocumentPosition(b) &amp; 16);</div><div class='line' id='LC5343'>	};</div><div class='line' id='LC5344'><br/></div><div class='line' id='LC5345'>} else {</div><div class='line' id='LC5346'>	Sizzle.contains = function() {</div><div class='line' id='LC5347'>		return false;</div><div class='line' id='LC5348'>	};</div><div class='line' id='LC5349'>}</div><div class='line' id='LC5350'><br/></div><div class='line' id='LC5351'>Sizzle.isXML = function( elem ) {</div><div class='line' id='LC5352'>	// documentElement is verified for cases where it doesn&#39;t yet exist</div><div class='line' id='LC5353'>	// (such as loading iframes in IE - #4833)</div><div class='line' id='LC5354'>	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;</div><div class='line' id='LC5355'><br/></div><div class='line' id='LC5356'>	return documentElement ? documentElement.nodeName !== &quot;HTML&quot; : false;</div><div class='line' id='LC5357'>};</div><div class='line' id='LC5358'><br/></div><div class='line' id='LC5359'>var posProcess = function( selector, context, seed ) {</div><div class='line' id='LC5360'>	var match,</div><div class='line' id='LC5361'>		tmpSet = [],</div><div class='line' id='LC5362'>		later = &quot;&quot;,</div><div class='line' id='LC5363'>		root = context.nodeType ? [context] : context;</div><div class='line' id='LC5364'><br/></div><div class='line' id='LC5365'>	// Position selectors must be done after the filter</div><div class='line' id='LC5366'>	// And so must :not(positional) so we move all PSEUDOs to the end</div><div class='line' id='LC5367'>	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {</div><div class='line' id='LC5368'>		later += match[0];</div><div class='line' id='LC5369'>		selector = selector.replace( Expr.match.PSEUDO, &quot;&quot; );</div><div class='line' id='LC5370'>	}</div><div class='line' id='LC5371'><br/></div><div class='line' id='LC5372'>	selector = Expr.relative[selector] ? selector + &quot;*&quot; : selector;</div><div class='line' id='LC5373'><br/></div><div class='line' id='LC5374'>	for ( var i = 0, l = root.length; i &lt; l; i++ ) {</div><div class='line' id='LC5375'>		Sizzle( selector, root[i], tmpSet, seed );</div><div class='line' id='LC5376'>	}</div><div class='line' id='LC5377'><br/></div><div class='line' id='LC5378'>	return Sizzle.filter( later, tmpSet );</div><div class='line' id='LC5379'>};</div><div class='line' id='LC5380'><br/></div><div class='line' id='LC5381'>// EXPOSE</div><div class='line' id='LC5382'>// Override sizzle attribute retrieval</div><div class='line' id='LC5383'>Sizzle.attr = jQuery.attr;</div><div class='line' id='LC5384'>Sizzle.selectors.attrMap = {};</div><div class='line' id='LC5385'>jQuery.find = Sizzle;</div><div class='line' id='LC5386'>jQuery.expr = Sizzle.selectors;</div><div class='line' id='LC5387'>jQuery.expr[&quot;:&quot;] = jQuery.expr.filters;</div><div class='line' id='LC5388'>jQuery.unique = Sizzle.uniqueSort;</div><div class='line' id='LC5389'>jQuery.text = Sizzle.getText;</div><div class='line' id='LC5390'>jQuery.isXMLDoc = Sizzle.isXML;</div><div class='line' id='LC5391'>jQuery.contains = Sizzle.contains;</div><div class='line' id='LC5392'><br/></div><div class='line' id='LC5393'><br/></div><div class='line' id='LC5394'>})();</div><div class='line' id='LC5395'><br/></div><div class='line' id='LC5396'><br/></div><div class='line' id='LC5397'>var runtil = /Until$/,</div><div class='line' id='LC5398'>	rparentsprev = /^(?:parents|prevUntil|prevAll)/,</div><div class='line' id='LC5399'>	// Note: This RegExp should be improved, or likely pulled from Sizzle</div><div class='line' id='LC5400'>	rmultiselector = /,/,</div><div class='line' id='LC5401'>	isSimple = /^.[^:#\[\.,]*$/,</div><div class='line' id='LC5402'>	slice = Array.prototype.slice,</div><div class='line' id='LC5403'>	POS = jQuery.expr.match.globalPOS,</div><div class='line' id='LC5404'>	// methods guaranteed to produce a unique set when starting from a unique set</div><div class='line' id='LC5405'>	guaranteedUnique = {</div><div class='line' id='LC5406'>		children: true,</div><div class='line' id='LC5407'>		contents: true,</div><div class='line' id='LC5408'>		next: true,</div><div class='line' id='LC5409'>		prev: true</div><div class='line' id='LC5410'>	};</div><div class='line' id='LC5411'><br/></div><div class='line' id='LC5412'>jQuery.fn.extend({</div><div class='line' id='LC5413'>	find: function( selector ) {</div><div class='line' id='LC5414'>		var self = this,</div><div class='line' id='LC5415'>			i, l;</div><div class='line' id='LC5416'><br/></div><div class='line' id='LC5417'>		if ( typeof selector !== &quot;string&quot; ) {</div><div class='line' id='LC5418'>			return jQuery( selector ).filter(function() {</div><div class='line' id='LC5419'>				for ( i = 0, l = self.length; i &lt; l; i++ ) {</div><div class='line' id='LC5420'>					if ( jQuery.contains( self[ i ], this ) ) {</div><div class='line' id='LC5421'>						return true;</div><div class='line' id='LC5422'>					}</div><div class='line' id='LC5423'>				}</div><div class='line' id='LC5424'>			});</div><div class='line' id='LC5425'>		}</div><div class='line' id='LC5426'><br/></div><div class='line' id='LC5427'>		var ret = this.pushStack( &quot;&quot;, &quot;find&quot;, selector ),</div><div class='line' id='LC5428'>			length, n, r;</div><div class='line' id='LC5429'><br/></div><div class='line' id='LC5430'>		for ( i = 0, l = this.length; i &lt; l; i++ ) {</div><div class='line' id='LC5431'>			length = ret.length;</div><div class='line' id='LC5432'>			jQuery.find( selector, this[i], ret );</div><div class='line' id='LC5433'><br/></div><div class='line' id='LC5434'>			if ( i &gt; 0 ) {</div><div class='line' id='LC5435'>				// Make sure that the results are unique</div><div class='line' id='LC5436'>				for ( n = length; n &lt; ret.length; n++ ) {</div><div class='line' id='LC5437'>					for ( r = 0; r &lt; length; r++ ) {</div><div class='line' id='LC5438'>						if ( ret[r] === ret[n] ) {</div><div class='line' id='LC5439'>							ret.splice(n--, 1);</div><div class='line' id='LC5440'>							break;</div><div class='line' id='LC5441'>						}</div><div class='line' id='LC5442'>					}</div><div class='line' id='LC5443'>				}</div><div class='line' id='LC5444'>			}</div><div class='line' id='LC5445'>		}</div><div class='line' id='LC5446'><br/></div><div class='line' id='LC5447'>		return ret;</div><div class='line' id='LC5448'>	},</div><div class='line' id='LC5449'><br/></div><div class='line' id='LC5450'>	has: function( target ) {</div><div class='line' id='LC5451'>		var targets = jQuery( target );</div><div class='line' id='LC5452'>		return this.filter(function() {</div><div class='line' id='LC5453'>			for ( var i = 0, l = targets.length; i &lt; l; i++ ) {</div><div class='line' id='LC5454'>				if ( jQuery.contains( this, targets[i] ) ) {</div><div class='line' id='LC5455'>					return true;</div><div class='line' id='LC5456'>				}</div><div class='line' id='LC5457'>			}</div><div class='line' id='LC5458'>		});</div><div class='line' id='LC5459'>	},</div><div class='line' id='LC5460'><br/></div><div class='line' id='LC5461'>	not: function( selector ) {</div><div class='line' id='LC5462'>		return this.pushStack( winnow(this, selector, false), &quot;not&quot;, selector);</div><div class='line' id='LC5463'>	},</div><div class='line' id='LC5464'><br/></div><div class='line' id='LC5465'>	filter: function( selector ) {</div><div class='line' id='LC5466'>		return this.pushStack( winnow(this, selector, true), &quot;filter&quot;, selector );</div><div class='line' id='LC5467'>	},</div><div class='line' id='LC5468'><br/></div><div class='line' id='LC5469'>	is: function( selector ) {</div><div class='line' id='LC5470'>		return !!selector &amp;&amp; (</div><div class='line' id='LC5471'>			typeof selector === &quot;string&quot; ?</div><div class='line' id='LC5472'>				// If this is a positional selector, check membership in the returned set</div><div class='line' id='LC5473'>				// so $(&quot;p:first&quot;).is(&quot;p:last&quot;) won&#39;t return true for a doc with two &quot;p&quot;.</div><div class='line' id='LC5474'>				POS.test( selector ) ?</div><div class='line' id='LC5475'>					jQuery( selector, this.context ).index( this[0] ) &gt;= 0 :</div><div class='line' id='LC5476'>					jQuery.filter( selector, this ).length &gt; 0 :</div><div class='line' id='LC5477'>				this.filter( selector ).length &gt; 0 );</div><div class='line' id='LC5478'>	},</div><div class='line' id='LC5479'><br/></div><div class='line' id='LC5480'>	closest: function( selectors, context ) {</div><div class='line' id='LC5481'>		var ret = [], i, l, cur = this[0];</div><div class='line' id='LC5482'><br/></div><div class='line' id='LC5483'>		// Array (deprecated as of jQuery 1.7)</div><div class='line' id='LC5484'>		if ( jQuery.isArray( selectors ) ) {</div><div class='line' id='LC5485'>			var level = 1;</div><div class='line' id='LC5486'><br/></div><div class='line' id='LC5487'>			while ( cur &amp;&amp; cur.ownerDocument &amp;&amp; cur !== context ) {</div><div class='line' id='LC5488'>				for ( i = 0; i &lt; selectors.length; i++ ) {</div><div class='line' id='LC5489'><br/></div><div class='line' id='LC5490'>					if ( jQuery( cur ).is( selectors[ i ] ) ) {</div><div class='line' id='LC5491'>						ret.push({ selector: selectors[ i ], elem: cur, level: level });</div><div class='line' id='LC5492'>					}</div><div class='line' id='LC5493'>				}</div><div class='line' id='LC5494'><br/></div><div class='line' id='LC5495'>				cur = cur.parentNode;</div><div class='line' id='LC5496'>				level++;</div><div class='line' id='LC5497'>			}</div><div class='line' id='LC5498'><br/></div><div class='line' id='LC5499'>			return ret;</div><div class='line' id='LC5500'>		}</div><div class='line' id='LC5501'><br/></div><div class='line' id='LC5502'>		// String</div><div class='line' id='LC5503'>		var pos = POS.test( selectors ) || typeof selectors !== &quot;string&quot; ?</div><div class='line' id='LC5504'>				jQuery( selectors, context || this.context ) :</div><div class='line' id='LC5505'>				0;</div><div class='line' id='LC5506'><br/></div><div class='line' id='LC5507'>		for ( i = 0, l = this.length; i &lt; l; i++ ) {</div><div class='line' id='LC5508'>			cur = this[i];</div><div class='line' id='LC5509'><br/></div><div class='line' id='LC5510'>			while ( cur ) {</div><div class='line' id='LC5511'>				if ( pos ? pos.index(cur) &gt; -1 : jQuery.find.matchesSelector(cur, selectors) ) {</div><div class='line' id='LC5512'>					ret.push( cur );</div><div class='line' id='LC5513'>					break;</div><div class='line' id='LC5514'><br/></div><div class='line' id='LC5515'>				} else {</div><div class='line' id='LC5516'>					cur = cur.parentNode;</div><div class='line' id='LC5517'>					if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {</div><div class='line' id='LC5518'>						break;</div><div class='line' id='LC5519'>					}</div><div class='line' id='LC5520'>				}</div><div class='line' id='LC5521'>			}</div><div class='line' id='LC5522'>		}</div><div class='line' id='LC5523'><br/></div><div class='line' id='LC5524'>		ret = ret.length &gt; 1 ? jQuery.unique( ret ) : ret;</div><div class='line' id='LC5525'><br/></div><div class='line' id='LC5526'>		return this.pushStack( ret, &quot;closest&quot;, selectors );</div><div class='line' id='LC5527'>	},</div><div class='line' id='LC5528'><br/></div><div class='line' id='LC5529'>	// Determine the position of an element within</div><div class='line' id='LC5530'>	// the matched set of elements</div><div class='line' id='LC5531'>	index: function( elem ) {</div><div class='line' id='LC5532'><br/></div><div class='line' id='LC5533'>		// No argument, return index in parent</div><div class='line' id='LC5534'>		if ( !elem ) {</div><div class='line' id='LC5535'>			return ( this[0] &amp;&amp; this[0].parentNode ) ? this.prevAll().length : -1;</div><div class='line' id='LC5536'>		}</div><div class='line' id='LC5537'><br/></div><div class='line' id='LC5538'>		// index in selector</div><div class='line' id='LC5539'>		if ( typeof elem === &quot;string&quot; ) {</div><div class='line' id='LC5540'>			return jQuery.inArray( this[0], jQuery( elem ) );</div><div class='line' id='LC5541'>		}</div><div class='line' id='LC5542'><br/></div><div class='line' id='LC5543'>		// Locate the position of the desired element</div><div class='line' id='LC5544'>		return jQuery.inArray(</div><div class='line' id='LC5545'>			// If it receives a jQuery object, the first element is used</div><div class='line' id='LC5546'>			elem.jquery ? elem[0] : elem, this );</div><div class='line' id='LC5547'>	},</div><div class='line' id='LC5548'><br/></div><div class='line' id='LC5549'>	add: function( selector, context ) {</div><div class='line' id='LC5550'>		var set = typeof selector === &quot;string&quot; ?</div><div class='line' id='LC5551'>				jQuery( selector, context ) :</div><div class='line' id='LC5552'>				jQuery.makeArray( selector &amp;&amp; selector.nodeType ? [ selector ] : selector ),</div><div class='line' id='LC5553'>			all = jQuery.merge( this.get(), set );</div><div class='line' id='LC5554'><br/></div><div class='line' id='LC5555'>		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?</div><div class='line' id='LC5556'>			all :</div><div class='line' id='LC5557'>			jQuery.unique( all ) );</div><div class='line' id='LC5558'>	},</div><div class='line' id='LC5559'><br/></div><div class='line' id='LC5560'>	andSelf: function() {</div><div class='line' id='LC5561'>		return this.add( this.prevObject );</div><div class='line' id='LC5562'>	}</div><div class='line' id='LC5563'>});</div><div class='line' id='LC5564'><br/></div><div class='line' id='LC5565'>// A painfully simple check to see if an element is disconnected</div><div class='line' id='LC5566'>// from a document (should be improved, where feasible).</div><div class='line' id='LC5567'>function isDisconnected( node ) {</div><div class='line' id='LC5568'>	return !node || !node.parentNode || node.parentNode.nodeType === 11;</div><div class='line' id='LC5569'>}</div><div class='line' id='LC5570'><br/></div><div class='line' id='LC5571'>jQuery.each({</div><div class='line' id='LC5572'>	parent: function( elem ) {</div><div class='line' id='LC5573'>		var parent = elem.parentNode;</div><div class='line' id='LC5574'>		return parent &amp;&amp; parent.nodeType !== 11 ? parent : null;</div><div class='line' id='LC5575'>	},</div><div class='line' id='LC5576'>	parents: function( elem ) {</div><div class='line' id='LC5577'>		return jQuery.dir( elem, &quot;parentNode&quot; );</div><div class='line' id='LC5578'>	},</div><div class='line' id='LC5579'>	parentsUntil: function( elem, i, until ) {</div><div class='line' id='LC5580'>		return jQuery.dir( elem, &quot;parentNode&quot;, until );</div><div class='line' id='LC5581'>	},</div><div class='line' id='LC5582'>	next: function( elem ) {</div><div class='line' id='LC5583'>		return jQuery.nth( elem, 2, &quot;nextSibling&quot; );</div><div class='line' id='LC5584'>	},</div><div class='line' id='LC5585'>	prev: function( elem ) {</div><div class='line' id='LC5586'>		return jQuery.nth( elem, 2, &quot;previousSibling&quot; );</div><div class='line' id='LC5587'>	},</div><div class='line' id='LC5588'>	nextAll: function( elem ) {</div><div class='line' id='LC5589'>		return jQuery.dir( elem, &quot;nextSibling&quot; );</div><div class='line' id='LC5590'>	},</div><div class='line' id='LC5591'>	prevAll: function( elem ) {</div><div class='line' id='LC5592'>		return jQuery.dir( elem, &quot;previousSibling&quot; );</div><div class='line' id='LC5593'>	},</div><div class='line' id='LC5594'>	nextUntil: function( elem, i, until ) {</div><div class='line' id='LC5595'>		return jQuery.dir( elem, &quot;nextSibling&quot;, until );</div><div class='line' id='LC5596'>	},</div><div class='line' id='LC5597'>	prevUntil: function( elem, i, until ) {</div><div class='line' id='LC5598'>		return jQuery.dir( elem, &quot;previousSibling&quot;, until );</div><div class='line' id='LC5599'>	},</div><div class='line' id='LC5600'>	siblings: function( elem ) {</div><div class='line' id='LC5601'>		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );</div><div class='line' id='LC5602'>	},</div><div class='line' id='LC5603'>	children: function( elem ) {</div><div class='line' id='LC5604'>		return jQuery.sibling( elem.firstChild );</div><div class='line' id='LC5605'>	},</div><div class='line' id='LC5606'>	contents: function( elem ) {</div><div class='line' id='LC5607'>		return jQuery.nodeName( elem, &quot;iframe&quot; ) ?</div><div class='line' id='LC5608'>			elem.contentDocument || elem.contentWindow.document :</div><div class='line' id='LC5609'>			jQuery.makeArray( elem.childNodes );</div><div class='line' id='LC5610'>	}</div><div class='line' id='LC5611'>}, function( name, fn ) {</div><div class='line' id='LC5612'>	jQuery.fn[ name ] = function( until, selector ) {</div><div class='line' id='LC5613'>		var ret = jQuery.map( this, fn, until );</div><div class='line' id='LC5614'><br/></div><div class='line' id='LC5615'>		if ( !runtil.test( name ) ) {</div><div class='line' id='LC5616'>			selector = until;</div><div class='line' id='LC5617'>		}</div><div class='line' id='LC5618'><br/></div><div class='line' id='LC5619'>		if ( selector &amp;&amp; typeof selector === &quot;string&quot; ) {</div><div class='line' id='LC5620'>			ret = jQuery.filter( selector, ret );</div><div class='line' id='LC5621'>		}</div><div class='line' id='LC5622'><br/></div><div class='line' id='LC5623'>		ret = this.length &gt; 1 &amp;&amp; !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;</div><div class='line' id='LC5624'><br/></div><div class='line' id='LC5625'>		if ( (this.length &gt; 1 || rmultiselector.test( selector )) &amp;&amp; rparentsprev.test( name ) ) {</div><div class='line' id='LC5626'>			ret = ret.reverse();</div><div class='line' id='LC5627'>		}</div><div class='line' id='LC5628'><br/></div><div class='line' id='LC5629'>		return this.pushStack( ret, name, slice.call( arguments ).join(&quot;,&quot;) );</div><div class='line' id='LC5630'>	};</div><div class='line' id='LC5631'>});</div><div class='line' id='LC5632'><br/></div><div class='line' id='LC5633'>jQuery.extend({</div><div class='line' id='LC5634'>	filter: function( expr, elems, not ) {</div><div class='line' id='LC5635'>		if ( not ) {</div><div class='line' id='LC5636'>			expr = &quot;:not(&quot; + expr + &quot;)&quot;;</div><div class='line' id='LC5637'>		}</div><div class='line' id='LC5638'><br/></div><div class='line' id='LC5639'>		return elems.length === 1 ?</div><div class='line' id='LC5640'>			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :</div><div class='line' id='LC5641'>			jQuery.find.matches(expr, elems);</div><div class='line' id='LC5642'>	},</div><div class='line' id='LC5643'><br/></div><div class='line' id='LC5644'>	dir: function( elem, dir, until ) {</div><div class='line' id='LC5645'>		var matched = [],</div><div class='line' id='LC5646'>			cur = elem[ dir ];</div><div class='line' id='LC5647'><br/></div><div class='line' id='LC5648'>		while ( cur &amp;&amp; cur.nodeType !== 9 &amp;&amp; (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {</div><div class='line' id='LC5649'>			if ( cur.nodeType === 1 ) {</div><div class='line' id='LC5650'>				matched.push( cur );</div><div class='line' id='LC5651'>			}</div><div class='line' id='LC5652'>			cur = cur[dir];</div><div class='line' id='LC5653'>		}</div><div class='line' id='LC5654'>		return matched;</div><div class='line' id='LC5655'>	},</div><div class='line' id='LC5656'><br/></div><div class='line' id='LC5657'>	nth: function( cur, result, dir, elem ) {</div><div class='line' id='LC5658'>		result = result || 1;</div><div class='line' id='LC5659'>		var num = 0;</div><div class='line' id='LC5660'><br/></div><div class='line' id='LC5661'>		for ( ; cur; cur = cur[dir] ) {</div><div class='line' id='LC5662'>			if ( cur.nodeType === 1 &amp;&amp; ++num === result ) {</div><div class='line' id='LC5663'>				break;</div><div class='line' id='LC5664'>			}</div><div class='line' id='LC5665'>		}</div><div class='line' id='LC5666'><br/></div><div class='line' id='LC5667'>		return cur;</div><div class='line' id='LC5668'>	},</div><div class='line' id='LC5669'><br/></div><div class='line' id='LC5670'>	sibling: function( n, elem ) {</div><div class='line' id='LC5671'>		var r = [];</div><div class='line' id='LC5672'><br/></div><div class='line' id='LC5673'>		for ( ; n; n = n.nextSibling ) {</div><div class='line' id='LC5674'>			if ( n.nodeType === 1 &amp;&amp; n !== elem ) {</div><div class='line' id='LC5675'>				r.push( n );</div><div class='line' id='LC5676'>			}</div><div class='line' id='LC5677'>		}</div><div class='line' id='LC5678'><br/></div><div class='line' id='LC5679'>		return r;</div><div class='line' id='LC5680'>	}</div><div class='line' id='LC5681'>});</div><div class='line' id='LC5682'><br/></div><div class='line' id='LC5683'>// Implement the identical functionality for filter and not</div><div class='line' id='LC5684'>function winnow( elements, qualifier, keep ) {</div><div class='line' id='LC5685'><br/></div><div class='line' id='LC5686'>	// Can&#39;t pass null or undefined to indexOf in Firefox 4</div><div class='line' id='LC5687'>	// Set to 0 to skip string check</div><div class='line' id='LC5688'>	qualifier = qualifier || 0;</div><div class='line' id='LC5689'><br/></div><div class='line' id='LC5690'>	if ( jQuery.isFunction( qualifier ) ) {</div><div class='line' id='LC5691'>		return jQuery.grep(elements, function( elem, i ) {</div><div class='line' id='LC5692'>			var retVal = !!qualifier.call( elem, i, elem );</div><div class='line' id='LC5693'>			return retVal === keep;</div><div class='line' id='LC5694'>		});</div><div class='line' id='LC5695'><br/></div><div class='line' id='LC5696'>	} else if ( qualifier.nodeType ) {</div><div class='line' id='LC5697'>		return jQuery.grep(elements, function( elem, i ) {</div><div class='line' id='LC5698'>			return ( elem === qualifier ) === keep;</div><div class='line' id='LC5699'>		});</div><div class='line' id='LC5700'><br/></div><div class='line' id='LC5701'>	} else if ( typeof qualifier === &quot;string&quot; ) {</div><div class='line' id='LC5702'>		var filtered = jQuery.grep(elements, function( elem ) {</div><div class='line' id='LC5703'>			return elem.nodeType === 1;</div><div class='line' id='LC5704'>		});</div><div class='line' id='LC5705'><br/></div><div class='line' id='LC5706'>		if ( isSimple.test( qualifier ) ) {</div><div class='line' id='LC5707'>			return jQuery.filter(qualifier, filtered, !keep);</div><div class='line' id='LC5708'>		} else {</div><div class='line' id='LC5709'>			qualifier = jQuery.filter( qualifier, filtered );</div><div class='line' id='LC5710'>		}</div><div class='line' id='LC5711'>	}</div><div class='line' id='LC5712'><br/></div><div class='line' id='LC5713'>	return jQuery.grep(elements, function( elem, i ) {</div><div class='line' id='LC5714'>		return ( jQuery.inArray( elem, qualifier ) &gt;= 0 ) === keep;</div><div class='line' id='LC5715'>	});</div><div class='line' id='LC5716'>}</div><div class='line' id='LC5717'><br/></div><div class='line' id='LC5718'><br/></div><div class='line' id='LC5719'><br/></div><div class='line' id='LC5720'><br/></div><div class='line' id='LC5721'>function createSafeFragment( document ) {</div><div class='line' id='LC5722'>	var list = nodeNames.split( &quot;|&quot; ),</div><div class='line' id='LC5723'>	safeFrag = document.createDocumentFragment();</div><div class='line' id='LC5724'><br/></div><div class='line' id='LC5725'>	if ( safeFrag.createElement ) {</div><div class='line' id='LC5726'>		while ( list.length ) {</div><div class='line' id='LC5727'>			safeFrag.createElement(</div><div class='line' id='LC5728'>				list.pop()</div><div class='line' id='LC5729'>			);</div><div class='line' id='LC5730'>		}</div><div class='line' id='LC5731'>	}</div><div class='line' id='LC5732'>	return safeFrag;</div><div class='line' id='LC5733'>}</div><div class='line' id='LC5734'><br/></div><div class='line' id='LC5735'>var nodeNames = &quot;abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|&quot; +</div><div class='line' id='LC5736'>		&quot;header|hgroup|mark|meter|nav|output|progress|section|summary|time|video&quot;,</div><div class='line' id='LC5737'>	rinlinejQuery = / jQuery\d+=&quot;(?:\d+|null)&quot;/g,</div><div class='line' id='LC5738'>	rleadingWhitespace = /^\s+/,</div><div class='line' id='LC5739'>	rxhtmlTag = /&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/ig,</div><div class='line' id='LC5740'>	rtagName = /&lt;([\w:]+)/,</div><div class='line' id='LC5741'>	rtbody = /&lt;tbody/i,</div><div class='line' id='LC5742'>	rhtml = /&lt;|&amp;#?\w+;/,</div><div class='line' id='LC5743'>	rnoInnerhtml = /&lt;(?:script|style)/i,</div><div class='line' id='LC5744'>	rnocache = /&lt;(?:script|object|embed|option|style)/i,</div><div class='line' id='LC5745'>	rnoshimcache = new RegExp(&quot;&lt;(?:&quot; + nodeNames + &quot;)[\\s/&gt;]&quot;, &quot;i&quot;),</div><div class='line' id='LC5746'>	// checked=&quot;checked&quot; or checked</div><div class='line' id='LC5747'>	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,</div><div class='line' id='LC5748'>	rscriptType = /\/(java|ecma)script/i,</div><div class='line' id='LC5749'>	rcleanScript = /^\s*&lt;!(?:\[CDATA\[|\-\-)/,</div><div class='line' id='LC5750'>	wrapMap = {</div><div class='line' id='LC5751'>		option: [ 1, &quot;&lt;select multiple=&#39;multiple&#39;&gt;&quot;, &quot;&lt;/select&gt;&quot; ],</div><div class='line' id='LC5752'>		legend: [ 1, &quot;&lt;fieldset&gt;&quot;, &quot;&lt;/fieldset&gt;&quot; ],</div><div class='line' id='LC5753'>		thead: [ 1, &quot;&lt;table&gt;&quot;, &quot;&lt;/table&gt;&quot; ],</div><div class='line' id='LC5754'>		tr: [ 2, &quot;&lt;table&gt;&lt;tbody&gt;&quot;, &quot;&lt;/tbody&gt;&lt;/table&gt;&quot; ],</div><div class='line' id='LC5755'>		td: [ 3, &quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;, &quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot; ],</div><div class='line' id='LC5756'>		col: [ 2, &quot;&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;&quot;, &quot;&lt;/colgroup&gt;&lt;/table&gt;&quot; ],</div><div class='line' id='LC5757'>		area: [ 1, &quot;&lt;map&gt;&quot;, &quot;&lt;/map&gt;&quot; ],</div><div class='line' id='LC5758'>		_default: [ 0, &quot;&quot;, &quot;&quot; ]</div><div class='line' id='LC5759'>	},</div><div class='line' id='LC5760'>	safeFragment = createSafeFragment( document );</div><div class='line' id='LC5761'><br/></div><div class='line' id='LC5762'>wrapMap.optgroup = wrapMap.option;</div><div class='line' id='LC5763'>wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;</div><div class='line' id='LC5764'>wrapMap.th = wrapMap.td;</div><div class='line' id='LC5765'><br/></div><div class='line' id='LC5766'>// IE can&#39;t serialize &lt;link&gt; and &lt;script&gt; tags normally</div><div class='line' id='LC5767'>if ( !jQuery.support.htmlSerialize ) {</div><div class='line' id='LC5768'>	wrapMap._default = [ 1, &quot;div&lt;div&gt;&quot;, &quot;&lt;/div&gt;&quot; ];</div><div class='line' id='LC5769'>}</div><div class='line' id='LC5770'><br/></div><div class='line' id='LC5771'>jQuery.fn.extend({</div><div class='line' id='LC5772'>	text: function( value ) {</div><div class='line' id='LC5773'>		return jQuery.access( this, function( value ) {</div><div class='line' id='LC5774'>			return value === undefined ?</div><div class='line' id='LC5775'>				jQuery.text( this ) :</div><div class='line' id='LC5776'>				this.empty().append( ( this[0] &amp;&amp; this[0].ownerDocument || document ).createTextNode( value ) );</div><div class='line' id='LC5777'>		}, null, value, arguments.length );</div><div class='line' id='LC5778'>	},</div><div class='line' id='LC5779'><br/></div><div class='line' id='LC5780'>	wrapAll: function( html ) {</div><div class='line' id='LC5781'>		if ( jQuery.isFunction( html ) ) {</div><div class='line' id='LC5782'>			return this.each(function(i) {</div><div class='line' id='LC5783'>				jQuery(this).wrapAll( html.call(this, i) );</div><div class='line' id='LC5784'>			});</div><div class='line' id='LC5785'>		}</div><div class='line' id='LC5786'><br/></div><div class='line' id='LC5787'>		if ( this[0] ) {</div><div class='line' id='LC5788'>			// The elements to wrap the target around</div><div class='line' id='LC5789'>			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);</div><div class='line' id='LC5790'><br/></div><div class='line' id='LC5791'>			if ( this[0].parentNode ) {</div><div class='line' id='LC5792'>				wrap.insertBefore( this[0] );</div><div class='line' id='LC5793'>			}</div><div class='line' id='LC5794'><br/></div><div class='line' id='LC5795'>			wrap.map(function() {</div><div class='line' id='LC5796'>				var elem = this;</div><div class='line' id='LC5797'><br/></div><div class='line' id='LC5798'>				while ( elem.firstChild &amp;&amp; elem.firstChild.nodeType === 1 ) {</div><div class='line' id='LC5799'>					elem = elem.firstChild;</div><div class='line' id='LC5800'>				}</div><div class='line' id='LC5801'><br/></div><div class='line' id='LC5802'>				return elem;</div><div class='line' id='LC5803'>			}).append( this );</div><div class='line' id='LC5804'>		}</div><div class='line' id='LC5805'><br/></div><div class='line' id='LC5806'>		return this;</div><div class='line' id='LC5807'>	},</div><div class='line' id='LC5808'><br/></div><div class='line' id='LC5809'>	wrapInner: function( html ) {</div><div class='line' id='LC5810'>		if ( jQuery.isFunction( html ) ) {</div><div class='line' id='LC5811'>			return this.each(function(i) {</div><div class='line' id='LC5812'>				jQuery(this).wrapInner( html.call(this, i) );</div><div class='line' id='LC5813'>			});</div><div class='line' id='LC5814'>		}</div><div class='line' id='LC5815'><br/></div><div class='line' id='LC5816'>		return this.each(function() {</div><div class='line' id='LC5817'>			var self = jQuery( this ),</div><div class='line' id='LC5818'>				contents = self.contents();</div><div class='line' id='LC5819'><br/></div><div class='line' id='LC5820'>			if ( contents.length ) {</div><div class='line' id='LC5821'>				contents.wrapAll( html );</div><div class='line' id='LC5822'><br/></div><div class='line' id='LC5823'>			} else {</div><div class='line' id='LC5824'>				self.append( html );</div><div class='line' id='LC5825'>			}</div><div class='line' id='LC5826'>		});</div><div class='line' id='LC5827'>	},</div><div class='line' id='LC5828'><br/></div><div class='line' id='LC5829'>	wrap: function( html ) {</div><div class='line' id='LC5830'>		var isFunction = jQuery.isFunction( html );</div><div class='line' id='LC5831'><br/></div><div class='line' id='LC5832'>		return this.each(function(i) {</div><div class='line' id='LC5833'>			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );</div><div class='line' id='LC5834'>		});</div><div class='line' id='LC5835'>	},</div><div class='line' id='LC5836'><br/></div><div class='line' id='LC5837'>	unwrap: function() {</div><div class='line' id='LC5838'>		return this.parent().each(function() {</div><div class='line' id='LC5839'>			if ( !jQuery.nodeName( this, &quot;body&quot; ) ) {</div><div class='line' id='LC5840'>				jQuery( this ).replaceWith( this.childNodes );</div><div class='line' id='LC5841'>			}</div><div class='line' id='LC5842'>		}).end();</div><div class='line' id='LC5843'>	},</div><div class='line' id='LC5844'><br/></div><div class='line' id='LC5845'>	append: function() {</div><div class='line' id='LC5846'>		return this.domManip(arguments, true, function( elem ) {</div><div class='line' id='LC5847'>			if ( this.nodeType === 1 ) {</div><div class='line' id='LC5848'>				this.appendChild( elem );</div><div class='line' id='LC5849'>			}</div><div class='line' id='LC5850'>		});</div><div class='line' id='LC5851'>	},</div><div class='line' id='LC5852'><br/></div><div class='line' id='LC5853'>	prepend: function() {</div><div class='line' id='LC5854'>		return this.domManip(arguments, true, function( elem ) {</div><div class='line' id='LC5855'>			if ( this.nodeType === 1 ) {</div><div class='line' id='LC5856'>				this.insertBefore( elem, this.firstChild );</div><div class='line' id='LC5857'>			}</div><div class='line' id='LC5858'>		});</div><div class='line' id='LC5859'>	},</div><div class='line' id='LC5860'><br/></div><div class='line' id='LC5861'>	before: function() {</div><div class='line' id='LC5862'>		if ( this[0] &amp;&amp; this[0].parentNode ) {</div><div class='line' id='LC5863'>			return this.domManip(arguments, false, function( elem ) {</div><div class='line' id='LC5864'>				this.parentNode.insertBefore( elem, this );</div><div class='line' id='LC5865'>			});</div><div class='line' id='LC5866'>		} else if ( arguments.length ) {</div><div class='line' id='LC5867'>			var set = jQuery.clean( arguments );</div><div class='line' id='LC5868'>			set.push.apply( set, this.toArray() );</div><div class='line' id='LC5869'>			return this.pushStack( set, &quot;before&quot;, arguments );</div><div class='line' id='LC5870'>		}</div><div class='line' id='LC5871'>	},</div><div class='line' id='LC5872'><br/></div><div class='line' id='LC5873'>	after: function() {</div><div class='line' id='LC5874'>		if ( this[0] &amp;&amp; this[0].parentNode ) {</div><div class='line' id='LC5875'>			return this.domManip(arguments, false, function( elem ) {</div><div class='line' id='LC5876'>				this.parentNode.insertBefore( elem, this.nextSibling );</div><div class='line' id='LC5877'>			});</div><div class='line' id='LC5878'>		} else if ( arguments.length ) {</div><div class='line' id='LC5879'>			var set = this.pushStack( this, &quot;after&quot;, arguments );</div><div class='line' id='LC5880'>			set.push.apply( set, jQuery.clean(arguments) );</div><div class='line' id='LC5881'>			return set;</div><div class='line' id='LC5882'>		}</div><div class='line' id='LC5883'>	},</div><div class='line' id='LC5884'><br/></div><div class='line' id='LC5885'>	// keepData is for internal use only--do not document</div><div class='line' id='LC5886'>	remove: function( selector, keepData ) {</div><div class='line' id='LC5887'>		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {</div><div class='line' id='LC5888'>			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {</div><div class='line' id='LC5889'>				if ( !keepData &amp;&amp; elem.nodeType === 1 ) {</div><div class='line' id='LC5890'>					jQuery.cleanData( elem.getElementsByTagName(&quot;*&quot;) );</div><div class='line' id='LC5891'>					jQuery.cleanData( [ elem ] );</div><div class='line' id='LC5892'>				}</div><div class='line' id='LC5893'><br/></div><div class='line' id='LC5894'>				if ( elem.parentNode ) {</div><div class='line' id='LC5895'>					elem.parentNode.removeChild( elem );</div><div class='line' id='LC5896'>				}</div><div class='line' id='LC5897'>			}</div><div class='line' id='LC5898'>		}</div><div class='line' id='LC5899'><br/></div><div class='line' id='LC5900'>		return this;</div><div class='line' id='LC5901'>	},</div><div class='line' id='LC5902'><br/></div><div class='line' id='LC5903'>	empty: function() {</div><div class='line' id='LC5904'>		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {</div><div class='line' id='LC5905'>			// Remove element nodes and prevent memory leaks</div><div class='line' id='LC5906'>			if ( elem.nodeType === 1 ) {</div><div class='line' id='LC5907'>				jQuery.cleanData( elem.getElementsByTagName(&quot;*&quot;) );</div><div class='line' id='LC5908'>			}</div><div class='line' id='LC5909'><br/></div><div class='line' id='LC5910'>			// Remove any remaining nodes</div><div class='line' id='LC5911'>			while ( elem.firstChild ) {</div><div class='line' id='LC5912'>				elem.removeChild( elem.firstChild );</div><div class='line' id='LC5913'>			}</div><div class='line' id='LC5914'>		}</div><div class='line' id='LC5915'><br/></div><div class='line' id='LC5916'>		return this;</div><div class='line' id='LC5917'>	},</div><div class='line' id='LC5918'><br/></div><div class='line' id='LC5919'>	clone: function( dataAndEvents, deepDataAndEvents ) {</div><div class='line' id='LC5920'>		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;</div><div class='line' id='LC5921'>		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;</div><div class='line' id='LC5922'><br/></div><div class='line' id='LC5923'>		return this.map( function () {</div><div class='line' id='LC5924'>			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );</div><div class='line' id='LC5925'>		});</div><div class='line' id='LC5926'>	},</div><div class='line' id='LC5927'><br/></div><div class='line' id='LC5928'>	html: function( value ) {</div><div class='line' id='LC5929'>		return jQuery.access( this, function( value ) {</div><div class='line' id='LC5930'>			var elem = this[0] || {},</div><div class='line' id='LC5931'>				i = 0,</div><div class='line' id='LC5932'>				l = this.length;</div><div class='line' id='LC5933'><br/></div><div class='line' id='LC5934'>			if ( value === undefined ) {</div><div class='line' id='LC5935'>				return elem.nodeType === 1 ?</div><div class='line' id='LC5936'>					elem.innerHTML.replace( rinlinejQuery, &quot;&quot; ) :</div><div class='line' id='LC5937'>					null;</div><div class='line' id='LC5938'>			}</div><div class='line' id='LC5939'><br/></div><div class='line' id='LC5940'><br/></div><div class='line' id='LC5941'>			if ( typeof value === &quot;string&quot; &amp;&amp; !rnoInnerhtml.test( value ) &amp;&amp;</div><div class='line' id='LC5942'>				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &amp;&amp;</div><div class='line' id='LC5943'>				!wrapMap[ ( rtagName.exec( value ) || [&quot;&quot;, &quot;&quot;] )[1].toLowerCase() ] ) {</div><div class='line' id='LC5944'><br/></div><div class='line' id='LC5945'>				value = value.replace( rxhtmlTag, &quot;&lt;$1&gt;&lt;/$2&gt;&quot; );</div><div class='line' id='LC5946'><br/></div><div class='line' id='LC5947'>				try {</div><div class='line' id='LC5948'>					for (; i &lt; l; i++ ) {</div><div class='line' id='LC5949'>						// Remove element nodes and prevent memory leaks</div><div class='line' id='LC5950'>						elem = this[i] || {};</div><div class='line' id='LC5951'>						if ( elem.nodeType === 1 ) {</div><div class='line' id='LC5952'>							jQuery.cleanData( elem.getElementsByTagName( &quot;*&quot; ) );</div><div class='line' id='LC5953'>							elem.innerHTML = value;</div><div class='line' id='LC5954'>						}</div><div class='line' id='LC5955'>					}</div><div class='line' id='LC5956'><br/></div><div class='line' id='LC5957'>					elem = 0;</div><div class='line' id='LC5958'><br/></div><div class='line' id='LC5959'>				// If using innerHTML throws an exception, use the fallback method</div><div class='line' id='LC5960'>				} catch(e) {}</div><div class='line' id='LC5961'>			}</div><div class='line' id='LC5962'><br/></div><div class='line' id='LC5963'>			if ( elem ) {</div><div class='line' id='LC5964'>				this.empty().append( value );</div><div class='line' id='LC5965'>			}</div><div class='line' id='LC5966'>		}, null, value, arguments.length );</div><div class='line' id='LC5967'>	},</div><div class='line' id='LC5968'><br/></div><div class='line' id='LC5969'>	replaceWith: function( value ) {</div><div class='line' id='LC5970'>		if ( this[0] &amp;&amp; this[0].parentNode ) {</div><div class='line' id='LC5971'>			// Make sure that the elements are removed from the DOM before they are inserted</div><div class='line' id='LC5972'>			// this can help fix replacing a parent with child elements</div><div class='line' id='LC5973'>			if ( jQuery.isFunction( value ) ) {</div><div class='line' id='LC5974'>				return this.each(function(i) {</div><div class='line' id='LC5975'>					var self = jQuery(this), old = self.html();</div><div class='line' id='LC5976'>					self.replaceWith( value.call( this, i, old ) );</div><div class='line' id='LC5977'>				});</div><div class='line' id='LC5978'>			}</div><div class='line' id='LC5979'><br/></div><div class='line' id='LC5980'>			if ( typeof value !== &quot;string&quot; ) {</div><div class='line' id='LC5981'>				value = jQuery( value ).detach();</div><div class='line' id='LC5982'>			}</div><div class='line' id='LC5983'><br/></div><div class='line' id='LC5984'>			return this.each(function() {</div><div class='line' id='LC5985'>				var next = this.nextSibling,</div><div class='line' id='LC5986'>					parent = this.parentNode;</div><div class='line' id='LC5987'><br/></div><div class='line' id='LC5988'>				jQuery( this ).remove();</div><div class='line' id='LC5989'><br/></div><div class='line' id='LC5990'>				if ( next ) {</div><div class='line' id='LC5991'>					jQuery(next).before( value );</div><div class='line' id='LC5992'>				} else {</div><div class='line' id='LC5993'>					jQuery(parent).append( value );</div><div class='line' id='LC5994'>				}</div><div class='line' id='LC5995'>			});</div><div class='line' id='LC5996'>		} else {</div><div class='line' id='LC5997'>			return this.length ?</div><div class='line' id='LC5998'>				this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), &quot;replaceWith&quot;, value ) :</div><div class='line' id='LC5999'>				this;</div><div class='line' id='LC6000'>		}</div><div class='line' id='LC6001'>	},</div><div class='line' id='LC6002'><br/></div><div class='line' id='LC6003'>	detach: function( selector ) {</div><div class='line' id='LC6004'>		return this.remove( selector, true );</div><div class='line' id='LC6005'>	},</div><div class='line' id='LC6006'><br/></div><div class='line' id='LC6007'>	domManip: function( args, table, callback ) {</div><div class='line' id='LC6008'>		var results, first, fragment, parent,</div><div class='line' id='LC6009'>			value = args[0],</div><div class='line' id='LC6010'>			scripts = [];</div><div class='line' id='LC6011'><br/></div><div class='line' id='LC6012'>		// We can&#39;t cloneNode fragments that contain checked, in WebKit</div><div class='line' id='LC6013'>		if ( !jQuery.support.checkClone &amp;&amp; arguments.length === 3 &amp;&amp; typeof value === &quot;string&quot; &amp;&amp; rchecked.test( value ) ) {</div><div class='line' id='LC6014'>			return this.each(function() {</div><div class='line' id='LC6015'>				jQuery(this).domManip( args, table, callback, true );</div><div class='line' id='LC6016'>			});</div><div class='line' id='LC6017'>		}</div><div class='line' id='LC6018'><br/></div><div class='line' id='LC6019'>		if ( jQuery.isFunction(value) ) {</div><div class='line' id='LC6020'>			return this.each(function(i) {</div><div class='line' id='LC6021'>				var self = jQuery(this);</div><div class='line' id='LC6022'>				args[0] = value.call(this, i, table ? self.html() : undefined);</div><div class='line' id='LC6023'>				self.domManip( args, table, callback );</div><div class='line' id='LC6024'>			});</div><div class='line' id='LC6025'>		}</div><div class='line' id='LC6026'><br/></div><div class='line' id='LC6027'>		if ( this[0] ) {</div><div class='line' id='LC6028'>			parent = value &amp;&amp; value.parentNode;</div><div class='line' id='LC6029'><br/></div><div class='line' id='LC6030'>			// If we&#39;re in a fragment, just use that instead of building a new one</div><div class='line' id='LC6031'>			if ( jQuery.support.parentNode &amp;&amp; parent &amp;&amp; parent.nodeType === 11 &amp;&amp; parent.childNodes.length === this.length ) {</div><div class='line' id='LC6032'>				results = { fragment: parent };</div><div class='line' id='LC6033'><br/></div><div class='line' id='LC6034'>			} else {</div><div class='line' id='LC6035'>				results = jQuery.buildFragment( args, this, scripts );</div><div class='line' id='LC6036'>			}</div><div class='line' id='LC6037'><br/></div><div class='line' id='LC6038'>			fragment = results.fragment;</div><div class='line' id='LC6039'><br/></div><div class='line' id='LC6040'>			if ( fragment.childNodes.length === 1 ) {</div><div class='line' id='LC6041'>				first = fragment = fragment.firstChild;</div><div class='line' id='LC6042'>			} else {</div><div class='line' id='LC6043'>				first = fragment.firstChild;</div><div class='line' id='LC6044'>			}</div><div class='line' id='LC6045'><br/></div><div class='line' id='LC6046'>			if ( first ) {</div><div class='line' id='LC6047'>				table = table &amp;&amp; jQuery.nodeName( first, &quot;tr&quot; );</div><div class='line' id='LC6048'><br/></div><div class='line' id='LC6049'>				for ( var i = 0, l = this.length, lastIndex = l - 1; i &lt; l; i++ ) {</div><div class='line' id='LC6050'>					callback.call(</div><div class='line' id='LC6051'>						table ?</div><div class='line' id='LC6052'>							root(this[i], first) :</div><div class='line' id='LC6053'>							this[i],</div><div class='line' id='LC6054'>						// Make sure that we do not leak memory by inadvertently discarding</div><div class='line' id='LC6055'>						// the original fragment (which might have attached data) instead of</div><div class='line' id='LC6056'>						// using it; in addition, use the original fragment object for the last</div><div class='line' id='LC6057'>						// item instead of first because it can end up being emptied incorrectly</div><div class='line' id='LC6058'>						// in certain situations (Bug #8070).</div><div class='line' id='LC6059'>						// Fragments from the fragment cache must always be cloned and never used</div><div class='line' id='LC6060'>						// in place.</div><div class='line' id='LC6061'>						results.cacheable || ( l &gt; 1 &amp;&amp; i &lt; lastIndex ) ?</div><div class='line' id='LC6062'>							jQuery.clone( fragment, true, true ) :</div><div class='line' id='LC6063'>							fragment</div><div class='line' id='LC6064'>					);</div><div class='line' id='LC6065'>				}</div><div class='line' id='LC6066'>			}</div><div class='line' id='LC6067'><br/></div><div class='line' id='LC6068'>			if ( scripts.length ) {</div><div class='line' id='LC6069'>				jQuery.each( scripts, function( i, elem ) {</div><div class='line' id='LC6070'>					if ( elem.src ) {</div><div class='line' id='LC6071'>						jQuery.ajax({</div><div class='line' id='LC6072'>							type: &quot;GET&quot;,</div><div class='line' id='LC6073'>							global: false,</div><div class='line' id='LC6074'>							url: elem.src,</div><div class='line' id='LC6075'>							async: false,</div><div class='line' id='LC6076'>							dataType: &quot;script&quot;</div><div class='line' id='LC6077'>						});</div><div class='line' id='LC6078'>					} else {</div><div class='line' id='LC6079'>						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || &quot;&quot; ).replace( rcleanScript, &quot;/*$0*/&quot; ) );</div><div class='line' id='LC6080'>					}</div><div class='line' id='LC6081'><br/></div><div class='line' id='LC6082'>					if ( elem.parentNode ) {</div><div class='line' id='LC6083'>						elem.parentNode.removeChild( elem );</div><div class='line' id='LC6084'>					}</div><div class='line' id='LC6085'>				});</div><div class='line' id='LC6086'>			}</div><div class='line' id='LC6087'>		}</div><div class='line' id='LC6088'><br/></div><div class='line' id='LC6089'>		return this;</div><div class='line' id='LC6090'>	}</div><div class='line' id='LC6091'>});</div><div class='line' id='LC6092'><br/></div><div class='line' id='LC6093'>function root( elem, cur ) {</div><div class='line' id='LC6094'>	return jQuery.nodeName(elem, &quot;table&quot;) ?</div><div class='line' id='LC6095'>		(elem.getElementsByTagName(&quot;tbody&quot;)[0] ||</div><div class='line' id='LC6096'>		elem.appendChild(elem.ownerDocument.createElement(&quot;tbody&quot;))) :</div><div class='line' id='LC6097'>		elem;</div><div class='line' id='LC6098'>}</div><div class='line' id='LC6099'><br/></div><div class='line' id='LC6100'>function cloneCopyEvent( src, dest ) {</div><div class='line' id='LC6101'><br/></div><div class='line' id='LC6102'>	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {</div><div class='line' id='LC6103'>		return;</div><div class='line' id='LC6104'>	}</div><div class='line' id='LC6105'><br/></div><div class='line' id='LC6106'>	var type, i, l,</div><div class='line' id='LC6107'>		oldData = jQuery._data( src ),</div><div class='line' id='LC6108'>		curData = jQuery._data( dest, oldData ),</div><div class='line' id='LC6109'>		events = oldData.events;</div><div class='line' id='LC6110'><br/></div><div class='line' id='LC6111'>	if ( events ) {</div><div class='line' id='LC6112'>		delete curData.handle;</div><div class='line' id='LC6113'>		curData.events = {};</div><div class='line' id='LC6114'><br/></div><div class='line' id='LC6115'>		for ( type in events ) {</div><div class='line' id='LC6116'>			for ( i = 0, l = events[ type ].length; i &lt; l; i++ ) {</div><div class='line' id='LC6117'>				jQuery.event.add( dest, type, events[ type ][ i ] );</div><div class='line' id='LC6118'>			}</div><div class='line' id='LC6119'>		}</div><div class='line' id='LC6120'>	}</div><div class='line' id='LC6121'><br/></div><div class='line' id='LC6122'>	// make the cloned public data object a copy from the original</div><div class='line' id='LC6123'>	if ( curData.data ) {</div><div class='line' id='LC6124'>		curData.data = jQuery.extend( {}, curData.data );</div><div class='line' id='LC6125'>	}</div><div class='line' id='LC6126'>}</div><div class='line' id='LC6127'><br/></div><div class='line' id='LC6128'>function cloneFixAttributes( src, dest ) {</div><div class='line' id='LC6129'>	var nodeName;</div><div class='line' id='LC6130'><br/></div><div class='line' id='LC6131'>	// We do not need to do anything for non-Elements</div><div class='line' id='LC6132'>	if ( dest.nodeType !== 1 ) {</div><div class='line' id='LC6133'>		return;</div><div class='line' id='LC6134'>	}</div><div class='line' id='LC6135'><br/></div><div class='line' id='LC6136'>	// clearAttributes removes the attributes, which we don&#39;t want,</div><div class='line' id='LC6137'>	// but also removes the attachEvent events, which we *do* want</div><div class='line' id='LC6138'>	if ( dest.clearAttributes ) {</div><div class='line' id='LC6139'>		dest.clearAttributes();</div><div class='line' id='LC6140'>	}</div><div class='line' id='LC6141'><br/></div><div class='line' id='LC6142'>	// mergeAttributes, in contrast, only merges back on the</div><div class='line' id='LC6143'>	// original attributes, not the events</div><div class='line' id='LC6144'>	if ( dest.mergeAttributes ) {</div><div class='line' id='LC6145'>		dest.mergeAttributes( src );</div><div class='line' id='LC6146'>	}</div><div class='line' id='LC6147'><br/></div><div class='line' id='LC6148'>	nodeName = dest.nodeName.toLowerCase();</div><div class='line' id='LC6149'><br/></div><div class='line' id='LC6150'>	// IE6-8 fail to clone children inside object elements that use</div><div class='line' id='LC6151'>	// the proprietary classid attribute value (rather than the type</div><div class='line' id='LC6152'>	// attribute) to identify the type of content to display</div><div class='line' id='LC6153'>	if ( nodeName === &quot;object&quot; ) {</div><div class='line' id='LC6154'>		dest.outerHTML = src.outerHTML;</div><div class='line' id='LC6155'><br/></div><div class='line' id='LC6156'>	} else if ( nodeName === &quot;input&quot; &amp;&amp; (src.type === &quot;checkbox&quot; || src.type === &quot;radio&quot;) ) {</div><div class='line' id='LC6157'>		// IE6-8 fails to persist the checked state of a cloned checkbox</div><div class='line' id='LC6158'>		// or radio button. Worse, IE6-7 fail to give the cloned element</div><div class='line' id='LC6159'>		// a checked appearance if the defaultChecked value isn&#39;t also set</div><div class='line' id='LC6160'>		if ( src.checked ) {</div><div class='line' id='LC6161'>			dest.defaultChecked = dest.checked = src.checked;</div><div class='line' id='LC6162'>		}</div><div class='line' id='LC6163'><br/></div><div class='line' id='LC6164'>		// IE6-7 get confused and end up setting the value of a cloned</div><div class='line' id='LC6165'>		// checkbox/radio button to an empty string instead of &quot;on&quot;</div><div class='line' id='LC6166'>		if ( dest.value !== src.value ) {</div><div class='line' id='LC6167'>			dest.value = src.value;</div><div class='line' id='LC6168'>		}</div><div class='line' id='LC6169'><br/></div><div class='line' id='LC6170'>	// IE6-8 fails to return the selected option to the default selected</div><div class='line' id='LC6171'>	// state when cloning options</div><div class='line' id='LC6172'>	} else if ( nodeName === &quot;option&quot; ) {</div><div class='line' id='LC6173'>		dest.selected = src.defaultSelected;</div><div class='line' id='LC6174'><br/></div><div class='line' id='LC6175'>	// IE6-8 fails to set the defaultValue to the correct value when</div><div class='line' id='LC6176'>	// cloning other types of input fields</div><div class='line' id='LC6177'>	} else if ( nodeName === &quot;input&quot; || nodeName === &quot;textarea&quot; ) {</div><div class='line' id='LC6178'>		dest.defaultValue = src.defaultValue;</div><div class='line' id='LC6179'><br/></div><div class='line' id='LC6180'>	// IE blanks contents when cloning scripts</div><div class='line' id='LC6181'>	} else if ( nodeName === &quot;script&quot; &amp;&amp; dest.text !== src.text ) {</div><div class='line' id='LC6182'>		dest.text = src.text;</div><div class='line' id='LC6183'>	}</div><div class='line' id='LC6184'><br/></div><div class='line' id='LC6185'>	// Event data gets referenced instead of copied if the expando</div><div class='line' id='LC6186'>	// gets copied too</div><div class='line' id='LC6187'>	dest.removeAttribute( jQuery.expando );</div><div class='line' id='LC6188'><br/></div><div class='line' id='LC6189'>	// Clear flags for bubbling special change/submit events, they must</div><div class='line' id='LC6190'>	// be reattached when the newly cloned events are first activated</div><div class='line' id='LC6191'>	dest.removeAttribute( &quot;_submit_attached&quot; );</div><div class='line' id='LC6192'>	dest.removeAttribute( &quot;_change_attached&quot; );</div><div class='line' id='LC6193'>}</div><div class='line' id='LC6194'><br/></div><div class='line' id='LC6195'>jQuery.buildFragment = function( args, nodes, scripts ) {</div><div class='line' id='LC6196'>	var fragment, cacheable, cacheresults, doc,</div><div class='line' id='LC6197'>	first = args[ 0 ];</div><div class='line' id='LC6198'><br/></div><div class='line' id='LC6199'>	// nodes may contain either an explicit document object,</div><div class='line' id='LC6200'>	// a jQuery collection or context object.</div><div class='line' id='LC6201'>	// If nodes[0] contains a valid object to assign to doc</div><div class='line' id='LC6202'>	if ( nodes &amp;&amp; nodes[0] ) {</div><div class='line' id='LC6203'>		doc = nodes[0].ownerDocument || nodes[0];</div><div class='line' id='LC6204'>	}</div><div class='line' id='LC6205'><br/></div><div class='line' id='LC6206'>	// Ensure that an attr object doesn&#39;t incorrectly stand in as a document object</div><div class='line' id='LC6207'>	// Chrome and Firefox seem to allow this to occur and will throw exception</div><div class='line' id='LC6208'>	// Fixes #8950</div><div class='line' id='LC6209'>	if ( !doc.createDocumentFragment ) {</div><div class='line' id='LC6210'>		doc = document;</div><div class='line' id='LC6211'>	}</div><div class='line' id='LC6212'><br/></div><div class='line' id='LC6213'>	// Only cache &quot;small&quot; (1/2 KB) HTML strings that are associated with the main document</div><div class='line' id='LC6214'>	// Cloning options loses the selected state, so don&#39;t cache them</div><div class='line' id='LC6215'>	// IE 6 doesn&#39;t like it when you put &lt;object&gt; or &lt;embed&gt; elements in a fragment</div><div class='line' id='LC6216'>	// Also, WebKit does not clone &#39;checked&#39; attributes on cloneNode, so don&#39;t cache</div><div class='line' id='LC6217'>	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501</div><div class='line' id='LC6218'>	if ( args.length === 1 &amp;&amp; typeof first === &quot;string&quot; &amp;&amp; first.length &lt; 512 &amp;&amp; doc === document &amp;&amp;</div><div class='line' id='LC6219'>		first.charAt(0) === &quot;&lt;&quot; &amp;&amp; !rnocache.test( first ) &amp;&amp;</div><div class='line' id='LC6220'>		(jQuery.support.checkClone || !rchecked.test( first )) &amp;&amp;</div><div class='line' id='LC6221'>		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {</div><div class='line' id='LC6222'><br/></div><div class='line' id='LC6223'>		cacheable = true;</div><div class='line' id='LC6224'><br/></div><div class='line' id='LC6225'>		cacheresults = jQuery.fragments[ first ];</div><div class='line' id='LC6226'>		if ( cacheresults &amp;&amp; cacheresults !== 1 ) {</div><div class='line' id='LC6227'>			fragment = cacheresults;</div><div class='line' id='LC6228'>		}</div><div class='line' id='LC6229'>	}</div><div class='line' id='LC6230'><br/></div><div class='line' id='LC6231'>	if ( !fragment ) {</div><div class='line' id='LC6232'>		fragment = doc.createDocumentFragment();</div><div class='line' id='LC6233'>		jQuery.clean( args, doc, fragment, scripts );</div><div class='line' id='LC6234'>	}</div><div class='line' id='LC6235'><br/></div><div class='line' id='LC6236'>	if ( cacheable ) {</div><div class='line' id='LC6237'>		jQuery.fragments[ first ] = cacheresults ? fragment : 1;</div><div class='line' id='LC6238'>	}</div><div class='line' id='LC6239'><br/></div><div class='line' id='LC6240'>	return { fragment: fragment, cacheable: cacheable };</div><div class='line' id='LC6241'>};</div><div class='line' id='LC6242'><br/></div><div class='line' id='LC6243'>jQuery.fragments = {};</div><div class='line' id='LC6244'><br/></div><div class='line' id='LC6245'>jQuery.each({</div><div class='line' id='LC6246'>	appendTo: &quot;append&quot;,</div><div class='line' id='LC6247'>	prependTo: &quot;prepend&quot;,</div><div class='line' id='LC6248'>	insertBefore: &quot;before&quot;,</div><div class='line' id='LC6249'>	insertAfter: &quot;after&quot;,</div><div class='line' id='LC6250'>	replaceAll: &quot;replaceWith&quot;</div><div class='line' id='LC6251'>}, function( name, original ) {</div><div class='line' id='LC6252'>	jQuery.fn[ name ] = function( selector ) {</div><div class='line' id='LC6253'>		var ret = [],</div><div class='line' id='LC6254'>			insert = jQuery( selector ),</div><div class='line' id='LC6255'>			parent = this.length === 1 &amp;&amp; this[0].parentNode;</div><div class='line' id='LC6256'><br/></div><div class='line' id='LC6257'>		if ( parent &amp;&amp; parent.nodeType === 11 &amp;&amp; parent.childNodes.length === 1 &amp;&amp; insert.length === 1 ) {</div><div class='line' id='LC6258'>			insert[ original ]( this[0] );</div><div class='line' id='LC6259'>			return this;</div><div class='line' id='LC6260'><br/></div><div class='line' id='LC6261'>		} else {</div><div class='line' id='LC6262'>			for ( var i = 0, l = insert.length; i &lt; l; i++ ) {</div><div class='line' id='LC6263'>				var elems = ( i &gt; 0 ? this.clone(true) : this ).get();</div><div class='line' id='LC6264'>				jQuery( insert[i] )[ original ]( elems );</div><div class='line' id='LC6265'>				ret = ret.concat( elems );</div><div class='line' id='LC6266'>			}</div><div class='line' id='LC6267'><br/></div><div class='line' id='LC6268'>			return this.pushStack( ret, name, insert.selector );</div><div class='line' id='LC6269'>		}</div><div class='line' id='LC6270'>	};</div><div class='line' id='LC6271'>});</div><div class='line' id='LC6272'><br/></div><div class='line' id='LC6273'>function getAll( elem ) {</div><div class='line' id='LC6274'>	if ( typeof elem.getElementsByTagName !== &quot;undefined&quot; ) {</div><div class='line' id='LC6275'>		return elem.getElementsByTagName( &quot;*&quot; );</div><div class='line' id='LC6276'><br/></div><div class='line' id='LC6277'>	} else if ( typeof elem.querySelectorAll !== &quot;undefined&quot; ) {</div><div class='line' id='LC6278'>		return elem.querySelectorAll( &quot;*&quot; );</div><div class='line' id='LC6279'><br/></div><div class='line' id='LC6280'>	} else {</div><div class='line' id='LC6281'>		return [];</div><div class='line' id='LC6282'>	}</div><div class='line' id='LC6283'>}</div><div class='line' id='LC6284'><br/></div><div class='line' id='LC6285'>// Used in clean, fixes the defaultChecked property</div><div class='line' id='LC6286'>function fixDefaultChecked( elem ) {</div><div class='line' id='LC6287'>	if ( elem.type === &quot;checkbox&quot; || elem.type === &quot;radio&quot; ) {</div><div class='line' id='LC6288'>		elem.defaultChecked = elem.checked;</div><div class='line' id='LC6289'>	}</div><div class='line' id='LC6290'>}</div><div class='line' id='LC6291'>// Finds all inputs and passes them to fixDefaultChecked</div><div class='line' id='LC6292'>function findInputs( elem ) {</div><div class='line' id='LC6293'>	var nodeName = ( elem.nodeName || &quot;&quot; ).toLowerCase();</div><div class='line' id='LC6294'>	if ( nodeName === &quot;input&quot; ) {</div><div class='line' id='LC6295'>		fixDefaultChecked( elem );</div><div class='line' id='LC6296'>	// Skip scripts, get other children</div><div class='line' id='LC6297'>	} else if ( nodeName !== &quot;script&quot; &amp;&amp; typeof elem.getElementsByTagName !== &quot;undefined&quot; ) {</div><div class='line' id='LC6298'>		jQuery.grep( elem.getElementsByTagName(&quot;input&quot;), fixDefaultChecked );</div><div class='line' id='LC6299'>	}</div><div class='line' id='LC6300'>}</div><div class='line' id='LC6301'><br/></div><div class='line' id='LC6302'>// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js</div><div class='line' id='LC6303'>function shimCloneNode( elem ) {</div><div class='line' id='LC6304'>	var div = document.createElement( &quot;div&quot; );</div><div class='line' id='LC6305'>	safeFragment.appendChild( div );</div><div class='line' id='LC6306'><br/></div><div class='line' id='LC6307'>	div.innerHTML = elem.outerHTML;</div><div class='line' id='LC6308'>	return div.firstChild;</div><div class='line' id='LC6309'>}</div><div class='line' id='LC6310'><br/></div><div class='line' id='LC6311'>jQuery.extend({</div><div class='line' id='LC6312'>	clone: function( elem, dataAndEvents, deepDataAndEvents ) {</div><div class='line' id='LC6313'>		var srcElements,</div><div class='line' id='LC6314'>			destElements,</div><div class='line' id='LC6315'>			i,</div><div class='line' id='LC6316'>			// IE&lt;=8 does not properly clone detached, unknown element nodes</div><div class='line' id='LC6317'>			clone = jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( &quot;&lt;&quot; + elem.nodeName + &quot;&gt;&quot; ) ?</div><div class='line' id='LC6318'>				elem.cloneNode( true ) :</div><div class='line' id='LC6319'>				shimCloneNode( elem );</div><div class='line' id='LC6320'><br/></div><div class='line' id='LC6321'>		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &amp;&amp;</div><div class='line' id='LC6322'>				(elem.nodeType === 1 || elem.nodeType === 11) &amp;&amp; !jQuery.isXMLDoc(elem) ) {</div><div class='line' id='LC6323'>			// IE copies events bound via attachEvent when using cloneNode.</div><div class='line' id='LC6324'>			// Calling detachEvent on the clone will also remove the events</div><div class='line' id='LC6325'>			// from the original. In order to get around this, we use some</div><div class='line' id='LC6326'>			// proprietary methods to clear the events. Thanks to MooTools</div><div class='line' id='LC6327'>			// guys for this hotness.</div><div class='line' id='LC6328'><br/></div><div class='line' id='LC6329'>			cloneFixAttributes( elem, clone );</div><div class='line' id='LC6330'><br/></div><div class='line' id='LC6331'>			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead</div><div class='line' id='LC6332'>			srcElements = getAll( elem );</div><div class='line' id='LC6333'>			destElements = getAll( clone );</div><div class='line' id='LC6334'><br/></div><div class='line' id='LC6335'>			// Weird iteration because IE will replace the length property</div><div class='line' id='LC6336'>			// with an element if you are cloning the body and one of the</div><div class='line' id='LC6337'>			// elements on the page has a name or id of &quot;length&quot;</div><div class='line' id='LC6338'>			for ( i = 0; srcElements[i]; ++i ) {</div><div class='line' id='LC6339'>				// Ensure that the destination node is not null; Fixes #9587</div><div class='line' id='LC6340'>				if ( destElements[i] ) {</div><div class='line' id='LC6341'>					cloneFixAttributes( srcElements[i], destElements[i] );</div><div class='line' id='LC6342'>				}</div><div class='line' id='LC6343'>			}</div><div class='line' id='LC6344'>		}</div><div class='line' id='LC6345'><br/></div><div class='line' id='LC6346'>		// Copy the events from the original to the clone</div><div class='line' id='LC6347'>		if ( dataAndEvents ) {</div><div class='line' id='LC6348'>			cloneCopyEvent( elem, clone );</div><div class='line' id='LC6349'><br/></div><div class='line' id='LC6350'>			if ( deepDataAndEvents ) {</div><div class='line' id='LC6351'>				srcElements = getAll( elem );</div><div class='line' id='LC6352'>				destElements = getAll( clone );</div><div class='line' id='LC6353'><br/></div><div class='line' id='LC6354'>				for ( i = 0; srcElements[i]; ++i ) {</div><div class='line' id='LC6355'>					cloneCopyEvent( srcElements[i], destElements[i] );</div><div class='line' id='LC6356'>				}</div><div class='line' id='LC6357'>			}</div><div class='line' id='LC6358'>		}</div><div class='line' id='LC6359'><br/></div><div class='line' id='LC6360'>		srcElements = destElements = null;</div><div class='line' id='LC6361'><br/></div><div class='line' id='LC6362'>		// Return the cloned set</div><div class='line' id='LC6363'>		return clone;</div><div class='line' id='LC6364'>	},</div><div class='line' id='LC6365'><br/></div><div class='line' id='LC6366'>	clean: function( elems, context, fragment, scripts ) {</div><div class='line' id='LC6367'>		var checkScriptType, script, j,</div><div class='line' id='LC6368'>				ret = [];</div><div class='line' id='LC6369'><br/></div><div class='line' id='LC6370'>		context = context || document;</div><div class='line' id='LC6371'><br/></div><div class='line' id='LC6372'>		// !context.createElement fails in IE with an error but returns typeof &#39;object&#39;</div><div class='line' id='LC6373'>		if ( typeof context.createElement === &quot;undefined&quot; ) {</div><div class='line' id='LC6374'>			context = context.ownerDocument || context[0] &amp;&amp; context[0].ownerDocument || document;</div><div class='line' id='LC6375'>		}</div><div class='line' id='LC6376'><br/></div><div class='line' id='LC6377'>		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {</div><div class='line' id='LC6378'>			if ( typeof elem === &quot;number&quot; ) {</div><div class='line' id='LC6379'>				elem += &quot;&quot;;</div><div class='line' id='LC6380'>			}</div><div class='line' id='LC6381'><br/></div><div class='line' id='LC6382'>			if ( !elem ) {</div><div class='line' id='LC6383'>				continue;</div><div class='line' id='LC6384'>			}</div><div class='line' id='LC6385'><br/></div><div class='line' id='LC6386'>			// Convert html string into DOM nodes</div><div class='line' id='LC6387'>			if ( typeof elem === &quot;string&quot; ) {</div><div class='line' id='LC6388'>				if ( !rhtml.test( elem ) ) {</div><div class='line' id='LC6389'>					elem = context.createTextNode( elem );</div><div class='line' id='LC6390'>				} else {</div><div class='line' id='LC6391'>					// Fix &quot;XHTML&quot;-style tags in all browsers</div><div class='line' id='LC6392'>					elem = elem.replace(rxhtmlTag, &quot;&lt;$1&gt;&lt;/$2&gt;&quot;);</div><div class='line' id='LC6393'><br/></div><div class='line' id='LC6394'>					// Trim whitespace, otherwise indexOf won&#39;t work as expected</div><div class='line' id='LC6395'>					var tag = ( rtagName.exec( elem ) || [&quot;&quot;, &quot;&quot;] )[1].toLowerCase(),</div><div class='line' id='LC6396'>						wrap = wrapMap[ tag ] || wrapMap._default,</div><div class='line' id='LC6397'>						depth = wrap[0],</div><div class='line' id='LC6398'>						div = context.createElement(&quot;div&quot;),</div><div class='line' id='LC6399'>						safeChildNodes = safeFragment.childNodes,</div><div class='line' id='LC6400'>						remove;</div><div class='line' id='LC6401'><br/></div><div class='line' id='LC6402'>					// Append wrapper element to unknown element safe doc fragment</div><div class='line' id='LC6403'>					if ( context === document ) {</div><div class='line' id='LC6404'>						// Use the fragment we&#39;ve already created for this document</div><div class='line' id='LC6405'>						safeFragment.appendChild( div );</div><div class='line' id='LC6406'>					} else {</div><div class='line' id='LC6407'>						// Use a fragment created with the owner document</div><div class='line' id='LC6408'>						createSafeFragment( context ).appendChild( div );</div><div class='line' id='LC6409'>					}</div><div class='line' id='LC6410'><br/></div><div class='line' id='LC6411'>					// Go to html and back, then peel off extra wrappers</div><div class='line' id='LC6412'>					div.innerHTML = wrap[1] + elem + wrap[2];</div><div class='line' id='LC6413'><br/></div><div class='line' id='LC6414'>					// Move to the right depth</div><div class='line' id='LC6415'>					while ( depth-- ) {</div><div class='line' id='LC6416'>						div = div.lastChild;</div><div class='line' id='LC6417'>					}</div><div class='line' id='LC6418'><br/></div><div class='line' id='LC6419'>					// Remove IE&#39;s autoinserted &lt;tbody&gt; from table fragments</div><div class='line' id='LC6420'>					if ( !jQuery.support.tbody ) {</div><div class='line' id='LC6421'><br/></div><div class='line' id='LC6422'>						// String was a &lt;table&gt;, *may* have spurious &lt;tbody&gt;</div><div class='line' id='LC6423'>						var hasBody = rtbody.test(elem),</div><div class='line' id='LC6424'>							tbody = tag === &quot;table&quot; &amp;&amp; !hasBody ?</div><div class='line' id='LC6425'>								div.firstChild &amp;&amp; div.firstChild.childNodes :</div><div class='line' id='LC6426'><br/></div><div class='line' id='LC6427'>								// String was a bare &lt;thead&gt; or &lt;tfoot&gt;</div><div class='line' id='LC6428'>								wrap[1] === &quot;&lt;table&gt;&quot; &amp;&amp; !hasBody ?</div><div class='line' id='LC6429'>									div.childNodes :</div><div class='line' id='LC6430'>									[];</div><div class='line' id='LC6431'><br/></div><div class='line' id='LC6432'>						for ( j = tbody.length - 1; j &gt;= 0 ; --j ) {</div><div class='line' id='LC6433'>							if ( jQuery.nodeName( tbody[ j ], &quot;tbody&quot; ) &amp;&amp; !tbody[ j ].childNodes.length ) {</div><div class='line' id='LC6434'>								tbody[ j ].parentNode.removeChild( tbody[ j ] );</div><div class='line' id='LC6435'>							}</div><div class='line' id='LC6436'>						}</div><div class='line' id='LC6437'>					}</div><div class='line' id='LC6438'><br/></div><div class='line' id='LC6439'>					// IE completely kills leading whitespace when innerHTML is used</div><div class='line' id='LC6440'>					if ( !jQuery.support.leadingWhitespace &amp;&amp; rleadingWhitespace.test( elem ) ) {</div><div class='line' id='LC6441'>						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );</div><div class='line' id='LC6442'>					}</div><div class='line' id='LC6443'><br/></div><div class='line' id='LC6444'>					elem = div.childNodes;</div><div class='line' id='LC6445'><br/></div><div class='line' id='LC6446'>					// Clear elements from DocumentFragment (safeFragment or otherwise)</div><div class='line' id='LC6447'>					// to avoid hoarding elements. Fixes #11356</div><div class='line' id='LC6448'>					if ( div ) {</div><div class='line' id='LC6449'>						div.parentNode.removeChild( div );</div><div class='line' id='LC6450'><br/></div><div class='line' id='LC6451'>						// Guard against -1 index exceptions in FF3.6</div><div class='line' id='LC6452'>						if ( safeChildNodes.length &gt; 0 ) {</div><div class='line' id='LC6453'>							remove = safeChildNodes[ safeChildNodes.length - 1 ];</div><div class='line' id='LC6454'><br/></div><div class='line' id='LC6455'>							if ( remove &amp;&amp; remove.parentNode ) {</div><div class='line' id='LC6456'>								remove.parentNode.removeChild( remove );</div><div class='line' id='LC6457'>							}</div><div class='line' id='LC6458'>						}</div><div class='line' id='LC6459'>					}</div><div class='line' id='LC6460'>				}</div><div class='line' id='LC6461'>			}</div><div class='line' id='LC6462'><br/></div><div class='line' id='LC6463'>			// Resets defaultChecked for any radios and checkboxes</div><div class='line' id='LC6464'>			// about to be appended to the DOM in IE 6/7 (#8060)</div><div class='line' id='LC6465'>			var len;</div><div class='line' id='LC6466'>			if ( !jQuery.support.appendChecked ) {</div><div class='line' id='LC6467'>				if ( elem[0] &amp;&amp; typeof (len = elem.length) === &quot;number&quot; ) {</div><div class='line' id='LC6468'>					for ( j = 0; j &lt; len; j++ ) {</div><div class='line' id='LC6469'>						findInputs( elem[j] );</div><div class='line' id='LC6470'>					}</div><div class='line' id='LC6471'>				} else {</div><div class='line' id='LC6472'>					findInputs( elem );</div><div class='line' id='LC6473'>				}</div><div class='line' id='LC6474'>			}</div><div class='line' id='LC6475'><br/></div><div class='line' id='LC6476'>			if ( elem.nodeType ) {</div><div class='line' id='LC6477'>				ret.push( elem );</div><div class='line' id='LC6478'>			} else {</div><div class='line' id='LC6479'>				ret = jQuery.merge( ret, elem );</div><div class='line' id='LC6480'>			}</div><div class='line' id='LC6481'>		}</div><div class='line' id='LC6482'><br/></div><div class='line' id='LC6483'>		if ( fragment ) {</div><div class='line' id='LC6484'>			checkScriptType = function( elem ) {</div><div class='line' id='LC6485'>				return !elem.type || rscriptType.test( elem.type );</div><div class='line' id='LC6486'>			};</div><div class='line' id='LC6487'>			for ( i = 0; ret[i]; i++ ) {</div><div class='line' id='LC6488'>				script = ret[i];</div><div class='line' id='LC6489'>				if ( scripts &amp;&amp; jQuery.nodeName( script, &quot;script&quot; ) &amp;&amp; (!script.type || rscriptType.test( script.type )) ) {</div><div class='line' id='LC6490'>					scripts.push( script.parentNode ? script.parentNode.removeChild( script ) : script );</div><div class='line' id='LC6491'><br/></div><div class='line' id='LC6492'>				} else {</div><div class='line' id='LC6493'>					if ( script.nodeType === 1 ) {</div><div class='line' id='LC6494'>						var jsTags = jQuery.grep( script.getElementsByTagName( &quot;script&quot; ), checkScriptType );</div><div class='line' id='LC6495'><br/></div><div class='line' id='LC6496'>						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );</div><div class='line' id='LC6497'>					}</div><div class='line' id='LC6498'>					fragment.appendChild( script );</div><div class='line' id='LC6499'>				}</div><div class='line' id='LC6500'>			}</div><div class='line' id='LC6501'>		}</div><div class='line' id='LC6502'><br/></div><div class='line' id='LC6503'>		return ret;</div><div class='line' id='LC6504'>	},</div><div class='line' id='LC6505'><br/></div><div class='line' id='LC6506'>	cleanData: function( elems ) {</div><div class='line' id='LC6507'>		var data, id,</div><div class='line' id='LC6508'>			cache = jQuery.cache,</div><div class='line' id='LC6509'>			special = jQuery.event.special,</div><div class='line' id='LC6510'>			deleteExpando = jQuery.support.deleteExpando;</div><div class='line' id='LC6511'><br/></div><div class='line' id='LC6512'>		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {</div><div class='line' id='LC6513'>			if ( elem.nodeName &amp;&amp; jQuery.noData[elem.nodeName.toLowerCase()] ) {</div><div class='line' id='LC6514'>				continue;</div><div class='line' id='LC6515'>			}</div><div class='line' id='LC6516'><br/></div><div class='line' id='LC6517'>			id = elem[ jQuery.expando ];</div><div class='line' id='LC6518'><br/></div><div class='line' id='LC6519'>			if ( id ) {</div><div class='line' id='LC6520'>				data = cache[ id ];</div><div class='line' id='LC6521'><br/></div><div class='line' id='LC6522'>				if ( data &amp;&amp; data.events ) {</div><div class='line' id='LC6523'>					for ( var type in data.events ) {</div><div class='line' id='LC6524'>						if ( special[ type ] ) {</div><div class='line' id='LC6525'>							jQuery.event.remove( elem, type );</div><div class='line' id='LC6526'><br/></div><div class='line' id='LC6527'>						// This is a shortcut to avoid jQuery.event.remove&#39;s overhead</div><div class='line' id='LC6528'>						} else {</div><div class='line' id='LC6529'>							jQuery.removeEvent( elem, type, data.handle );</div><div class='line' id='LC6530'>						}</div><div class='line' id='LC6531'>					}</div><div class='line' id='LC6532'><br/></div><div class='line' id='LC6533'>					// Null the DOM reference to avoid IE6/7/8 leak (#7054)</div><div class='line' id='LC6534'>					if ( data.handle ) {</div><div class='line' id='LC6535'>						data.handle.elem = null;</div><div class='line' id='LC6536'>					}</div><div class='line' id='LC6537'>				}</div><div class='line' id='LC6538'><br/></div><div class='line' id='LC6539'>				if ( deleteExpando ) {</div><div class='line' id='LC6540'>					delete elem[ jQuery.expando ];</div><div class='line' id='LC6541'><br/></div><div class='line' id='LC6542'>				} else if ( elem.removeAttribute ) {</div><div class='line' id='LC6543'>					elem.removeAttribute( jQuery.expando );</div><div class='line' id='LC6544'>				}</div><div class='line' id='LC6545'><br/></div><div class='line' id='LC6546'>				delete cache[ id ];</div><div class='line' id='LC6547'>			}</div><div class='line' id='LC6548'>		}</div><div class='line' id='LC6549'>	}</div><div class='line' id='LC6550'>});</div><div class='line' id='LC6551'><br/></div><div class='line' id='LC6552'><br/></div><div class='line' id='LC6553'><br/></div><div class='line' id='LC6554'><br/></div><div class='line' id='LC6555'>var ralpha = /alpha\([^)]*\)/i,</div><div class='line' id='LC6556'>	ropacity = /opacity=([^)]*)/,</div><div class='line' id='LC6557'>	// fixed for IE9, see #8346</div><div class='line' id='LC6558'>	rupper = /([A-Z]|^ms)/g,</div><div class='line' id='LC6559'>	rnum = /^[\-+]?(?:\d*\.)?\d+$/i,</div><div class='line' id='LC6560'>	rnumnonpx = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,</div><div class='line' id='LC6561'>	rrelNum = /^([\-+])=([\-+.\de]+)/,</div><div class='line' id='LC6562'>	rmargin = /^margin/,</div><div class='line' id='LC6563'><br/></div><div class='line' id='LC6564'>	cssShow = { position: &quot;absolute&quot;, visibility: &quot;hidden&quot;, display: &quot;block&quot; },</div><div class='line' id='LC6565'><br/></div><div class='line' id='LC6566'>	// order is important!</div><div class='line' id='LC6567'>	cssExpand = [ &quot;Top&quot;, &quot;Right&quot;, &quot;Bottom&quot;, &quot;Left&quot; ],</div><div class='line' id='LC6568'><br/></div><div class='line' id='LC6569'>	curCSS,</div><div class='line' id='LC6570'><br/></div><div class='line' id='LC6571'>	getComputedStyle,</div><div class='line' id='LC6572'>	currentStyle;</div><div class='line' id='LC6573'><br/></div><div class='line' id='LC6574'>jQuery.fn.css = function( name, value ) {</div><div class='line' id='LC6575'>	return jQuery.access( this, function( elem, name, value ) {</div><div class='line' id='LC6576'>		return value !== undefined ?</div><div class='line' id='LC6577'>			jQuery.style( elem, name, value ) :</div><div class='line' id='LC6578'>			jQuery.css( elem, name );</div><div class='line' id='LC6579'>	}, name, value, arguments.length &gt; 1 );</div><div class='line' id='LC6580'>};</div><div class='line' id='LC6581'><br/></div><div class='line' id='LC6582'>jQuery.extend({</div><div class='line' id='LC6583'>	// Add in style property hooks for overriding the default</div><div class='line' id='LC6584'>	// behavior of getting and setting a style property</div><div class='line' id='LC6585'>	cssHooks: {</div><div class='line' id='LC6586'>		opacity: {</div><div class='line' id='LC6587'>			get: function( elem, computed ) {</div><div class='line' id='LC6588'>				if ( computed ) {</div><div class='line' id='LC6589'>					// We should always get a number back from opacity</div><div class='line' id='LC6590'>					var ret = curCSS( elem, &quot;opacity&quot; );</div><div class='line' id='LC6591'>					return ret === &quot;&quot; ? &quot;1&quot; : ret;</div><div class='line' id='LC6592'><br/></div><div class='line' id='LC6593'>				} else {</div><div class='line' id='LC6594'>					return elem.style.opacity;</div><div class='line' id='LC6595'>				}</div><div class='line' id='LC6596'>			}</div><div class='line' id='LC6597'>		}</div><div class='line' id='LC6598'>	},</div><div class='line' id='LC6599'><br/></div><div class='line' id='LC6600'>	// Exclude the following css properties to add px</div><div class='line' id='LC6601'>	cssNumber: {</div><div class='line' id='LC6602'>		&quot;fillOpacity&quot;: true,</div><div class='line' id='LC6603'>		&quot;fontWeight&quot;: true,</div><div class='line' id='LC6604'>		&quot;lineHeight&quot;: true,</div><div class='line' id='LC6605'>		&quot;opacity&quot;: true,</div><div class='line' id='LC6606'>		&quot;orphans&quot;: true,</div><div class='line' id='LC6607'>		&quot;widows&quot;: true,</div><div class='line' id='LC6608'>		&quot;zIndex&quot;: true,</div><div class='line' id='LC6609'>		&quot;zoom&quot;: true</div><div class='line' id='LC6610'>	},</div><div class='line' id='LC6611'><br/></div><div class='line' id='LC6612'>	// Add in properties whose names you wish to fix before</div><div class='line' id='LC6613'>	// setting or getting the value</div><div class='line' id='LC6614'>	cssProps: {</div><div class='line' id='LC6615'>		// normalize float css property</div><div class='line' id='LC6616'>		&quot;float&quot;: jQuery.support.cssFloat ? &quot;cssFloat&quot; : &quot;styleFloat&quot;</div><div class='line' id='LC6617'>	},</div><div class='line' id='LC6618'><br/></div><div class='line' id='LC6619'>	// Get and set the style property on a DOM Node</div><div class='line' id='LC6620'>	style: function( elem, name, value, extra ) {</div><div class='line' id='LC6621'>		// Don&#39;t set styles on text and comment nodes</div><div class='line' id='LC6622'>		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {</div><div class='line' id='LC6623'>			return;</div><div class='line' id='LC6624'>		}</div><div class='line' id='LC6625'><br/></div><div class='line' id='LC6626'>		// Make sure that we&#39;re working with the right name</div><div class='line' id='LC6627'>		var ret, type, origName = jQuery.camelCase( name ),</div><div class='line' id='LC6628'>			style = elem.style, hooks = jQuery.cssHooks[ origName ];</div><div class='line' id='LC6629'><br/></div><div class='line' id='LC6630'>		name = jQuery.cssProps[ origName ] || origName;</div><div class='line' id='LC6631'><br/></div><div class='line' id='LC6632'>		// Check if we&#39;re setting a value</div><div class='line' id='LC6633'>		if ( value !== undefined ) {</div><div class='line' id='LC6634'>			type = typeof value;</div><div class='line' id='LC6635'><br/></div><div class='line' id='LC6636'>			// convert relative number strings (+= or -=) to relative numbers. #7345</div><div class='line' id='LC6637'>			if ( type === &quot;string&quot; &amp;&amp; (ret = rrelNum.exec( value )) ) {</div><div class='line' id='LC6638'>				value = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );</div><div class='line' id='LC6639'>				// Fixes bug #9237</div><div class='line' id='LC6640'>				type = &quot;number&quot;;</div><div class='line' id='LC6641'>			}</div><div class='line' id='LC6642'><br/></div><div class='line' id='LC6643'>			// Make sure that NaN and null values aren&#39;t set. See: #7116</div><div class='line' id='LC6644'>			if ( value == null || type === &quot;number&quot; &amp;&amp; isNaN( value ) ) {</div><div class='line' id='LC6645'>				return;</div><div class='line' id='LC6646'>			}</div><div class='line' id='LC6647'><br/></div><div class='line' id='LC6648'>			// If a number was passed in, add &#39;px&#39; to the (except for certain CSS properties)</div><div class='line' id='LC6649'>			if ( type === &quot;number&quot; &amp;&amp; !jQuery.cssNumber[ origName ] ) {</div><div class='line' id='LC6650'>				value += &quot;px&quot;;</div><div class='line' id='LC6651'>			}</div><div class='line' id='LC6652'><br/></div><div class='line' id='LC6653'>			// If a hook was provided, use that value, otherwise just set the specified value</div><div class='line' id='LC6654'>			if ( !hooks || !(&quot;set&quot; in hooks) || (value = hooks.set( elem, value )) !== undefined ) {</div><div class='line' id='LC6655'>				// Wrapped to prevent IE from throwing errors when &#39;invalid&#39; values are provided</div><div class='line' id='LC6656'>				// Fixes bug #5509</div><div class='line' id='LC6657'>				try {</div><div class='line' id='LC6658'>					style[ name ] = value;</div><div class='line' id='LC6659'>				} catch(e) {}</div><div class='line' id='LC6660'>			}</div><div class='line' id='LC6661'><br/></div><div class='line' id='LC6662'>		} else {</div><div class='line' id='LC6663'>			// If a hook was provided get the non-computed value from there</div><div class='line' id='LC6664'>			if ( hooks &amp;&amp; &quot;get&quot; in hooks &amp;&amp; (ret = hooks.get( elem, false, extra )) !== undefined ) {</div><div class='line' id='LC6665'>				return ret;</div><div class='line' id='LC6666'>			}</div><div class='line' id='LC6667'><br/></div><div class='line' id='LC6668'>			// Otherwise just get the value from the style object</div><div class='line' id='LC6669'>			return style[ name ];</div><div class='line' id='LC6670'>		}</div><div class='line' id='LC6671'>	},</div><div class='line' id='LC6672'><br/></div><div class='line' id='LC6673'>	css: function( elem, name, extra ) {</div><div class='line' id='LC6674'>		var ret, hooks;</div><div class='line' id='LC6675'><br/></div><div class='line' id='LC6676'>		// Make sure that we&#39;re working with the right name</div><div class='line' id='LC6677'>		name = jQuery.camelCase( name );</div><div class='line' id='LC6678'>		hooks = jQuery.cssHooks[ name ];</div><div class='line' id='LC6679'>		name = jQuery.cssProps[ name ] || name;</div><div class='line' id='LC6680'><br/></div><div class='line' id='LC6681'>		// cssFloat needs a special treatment</div><div class='line' id='LC6682'>		if ( name === &quot;cssFloat&quot; ) {</div><div class='line' id='LC6683'>			name = &quot;float&quot;;</div><div class='line' id='LC6684'>		}</div><div class='line' id='LC6685'><br/></div><div class='line' id='LC6686'>		// If a hook was provided get the computed value from there</div><div class='line' id='LC6687'>		if ( hooks &amp;&amp; &quot;get&quot; in hooks &amp;&amp; (ret = hooks.get( elem, true, extra )) !== undefined ) {</div><div class='line' id='LC6688'>			return ret;</div><div class='line' id='LC6689'><br/></div><div class='line' id='LC6690'>		// Otherwise, if a way to get the computed value exists, use that</div><div class='line' id='LC6691'>		} else if ( curCSS ) {</div><div class='line' id='LC6692'>			return curCSS( elem, name );</div><div class='line' id='LC6693'>		}</div><div class='line' id='LC6694'>	},</div><div class='line' id='LC6695'><br/></div><div class='line' id='LC6696'>	// A method for quickly swapping in/out CSS properties to get correct calculations</div><div class='line' id='LC6697'>	swap: function( elem, options, callback ) {</div><div class='line' id='LC6698'>		var old = {},</div><div class='line' id='LC6699'>			ret, name;</div><div class='line' id='LC6700'><br/></div><div class='line' id='LC6701'>		// Remember the old values, and insert the new ones</div><div class='line' id='LC6702'>		for ( name in options ) {</div><div class='line' id='LC6703'>			old[ name ] = elem.style[ name ];</div><div class='line' id='LC6704'>			elem.style[ name ] = options[ name ];</div><div class='line' id='LC6705'>		}</div><div class='line' id='LC6706'><br/></div><div class='line' id='LC6707'>		ret = callback.call( elem );</div><div class='line' id='LC6708'><br/></div><div class='line' id='LC6709'>		// Revert the old values</div><div class='line' id='LC6710'>		for ( name in options ) {</div><div class='line' id='LC6711'>			elem.style[ name ] = old[ name ];</div><div class='line' id='LC6712'>		}</div><div class='line' id='LC6713'><br/></div><div class='line' id='LC6714'>		return ret;</div><div class='line' id='LC6715'>	}</div><div class='line' id='LC6716'>});</div><div class='line' id='LC6717'><br/></div><div class='line' id='LC6718'>// DEPRECATED in 1.3, Use jQuery.css() instead</div><div class='line' id='LC6719'>jQuery.curCSS = jQuery.css;</div><div class='line' id='LC6720'><br/></div><div class='line' id='LC6721'>if ( document.defaultView &amp;&amp; document.defaultView.getComputedStyle ) {</div><div class='line' id='LC6722'>	getComputedStyle = function( elem, name ) {</div><div class='line' id='LC6723'>		var ret, defaultView, computedStyle, width,</div><div class='line' id='LC6724'>			style = elem.style;</div><div class='line' id='LC6725'><br/></div><div class='line' id='LC6726'>		name = name.replace( rupper, &quot;-$1&quot; ).toLowerCase();</div><div class='line' id='LC6727'><br/></div><div class='line' id='LC6728'>		if ( (defaultView = elem.ownerDocument.defaultView) &amp;&amp;</div><div class='line' id='LC6729'>				(computedStyle = defaultView.getComputedStyle( elem, null )) ) {</div><div class='line' id='LC6730'><br/></div><div class='line' id='LC6731'>			ret = computedStyle.getPropertyValue( name );</div><div class='line' id='LC6732'>			if ( ret === &quot;&quot; &amp;&amp; !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {</div><div class='line' id='LC6733'>				ret = jQuery.style( elem, name );</div><div class='line' id='LC6734'>			}</div><div class='line' id='LC6735'>		}</div><div class='line' id='LC6736'><br/></div><div class='line' id='LC6737'>		// A tribute to the &quot;awesome hack by Dean Edwards&quot;</div><div class='line' id='LC6738'>		// WebKit uses &quot;computed value (percentage if specified)&quot; instead of &quot;used value&quot; for margins</div><div class='line' id='LC6739'>		// which is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values</div><div class='line' id='LC6740'>		if ( !jQuery.support.pixelMargin &amp;&amp; computedStyle &amp;&amp; rmargin.test( name ) &amp;&amp; rnumnonpx.test( ret ) ) {</div><div class='line' id='LC6741'>			width = style.width;</div><div class='line' id='LC6742'>			style.width = ret;</div><div class='line' id='LC6743'>			ret = computedStyle.width;</div><div class='line' id='LC6744'>			style.width = width;</div><div class='line' id='LC6745'>		}</div><div class='line' id='LC6746'><br/></div><div class='line' id='LC6747'>		return ret;</div><div class='line' id='LC6748'>	};</div><div class='line' id='LC6749'>}</div><div class='line' id='LC6750'><br/></div><div class='line' id='LC6751'>if ( document.documentElement.currentStyle ) {</div><div class='line' id='LC6752'>	currentStyle = function( elem, name ) {</div><div class='line' id='LC6753'>		var left, rsLeft, uncomputed,</div><div class='line' id='LC6754'>			ret = elem.currentStyle &amp;&amp; elem.currentStyle[ name ],</div><div class='line' id='LC6755'>			style = elem.style;</div><div class='line' id='LC6756'><br/></div><div class='line' id='LC6757'>		// Avoid setting ret to empty string here</div><div class='line' id='LC6758'>		// so we don&#39;t default to auto</div><div class='line' id='LC6759'>		if ( ret == null &amp;&amp; style &amp;&amp; (uncomputed = style[ name ]) ) {</div><div class='line' id='LC6760'>			ret = uncomputed;</div><div class='line' id='LC6761'>		}</div><div class='line' id='LC6762'><br/></div><div class='line' id='LC6763'>		// From the awesome hack by Dean Edwards</div><div class='line' id='LC6764'>		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291</div><div class='line' id='LC6765'><br/></div><div class='line' id='LC6766'>		// If we&#39;re not dealing with a regular pixel number</div><div class='line' id='LC6767'>		// but a number that has a weird ending, we need to convert it to pixels</div><div class='line' id='LC6768'>		if ( rnumnonpx.test( ret ) ) {</div><div class='line' id='LC6769'><br/></div><div class='line' id='LC6770'>			// Remember the original values</div><div class='line' id='LC6771'>			left = style.left;</div><div class='line' id='LC6772'>			rsLeft = elem.runtimeStyle &amp;&amp; elem.runtimeStyle.left;</div><div class='line' id='LC6773'><br/></div><div class='line' id='LC6774'>			// Put in the new values to get a computed value out</div><div class='line' id='LC6775'>			if ( rsLeft ) {</div><div class='line' id='LC6776'>				elem.runtimeStyle.left = elem.currentStyle.left;</div><div class='line' id='LC6777'>			}</div><div class='line' id='LC6778'>			style.left = name === &quot;fontSize&quot; ? &quot;1em&quot; : ret;</div><div class='line' id='LC6779'>			ret = style.pixelLeft + &quot;px&quot;;</div><div class='line' id='LC6780'><br/></div><div class='line' id='LC6781'>			// Revert the changed values</div><div class='line' id='LC6782'>			style.left = left;</div><div class='line' id='LC6783'>			if ( rsLeft ) {</div><div class='line' id='LC6784'>				elem.runtimeStyle.left = rsLeft;</div><div class='line' id='LC6785'>			}</div><div class='line' id='LC6786'>		}</div><div class='line' id='LC6787'><br/></div><div class='line' id='LC6788'>		return ret === &quot;&quot; ? &quot;auto&quot; : ret;</div><div class='line' id='LC6789'>	};</div><div class='line' id='LC6790'>}</div><div class='line' id='LC6791'><br/></div><div class='line' id='LC6792'>curCSS = getComputedStyle || currentStyle;</div><div class='line' id='LC6793'><br/></div><div class='line' id='LC6794'>function getWidthOrHeight( elem, name, extra ) {</div><div class='line' id='LC6795'><br/></div><div class='line' id='LC6796'>	// Start with offset property</div><div class='line' id='LC6797'>	var val = name === &quot;width&quot; ? elem.offsetWidth : elem.offsetHeight,</div><div class='line' id='LC6798'>		i = name === &quot;width&quot; ? 1 : 0,</div><div class='line' id='LC6799'>		len = 4;</div><div class='line' id='LC6800'><br/></div><div class='line' id='LC6801'>	if ( val &gt; 0 ) {</div><div class='line' id='LC6802'>		if ( extra !== &quot;border&quot; ) {</div><div class='line' id='LC6803'>			for ( ; i &lt; len; i += 2 ) {</div><div class='line' id='LC6804'>				if ( !extra ) {</div><div class='line' id='LC6805'>					val -= parseFloat( jQuery.css( elem, &quot;padding&quot; + cssExpand[ i ] ) ) || 0;</div><div class='line' id='LC6806'>				}</div><div class='line' id='LC6807'>				if ( extra === &quot;margin&quot; ) {</div><div class='line' id='LC6808'>					val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ] ) ) || 0;</div><div class='line' id='LC6809'>				} else {</div><div class='line' id='LC6810'>					val -= parseFloat( jQuery.css( elem, &quot;border&quot; + cssExpand[ i ] + &quot;Width&quot; ) ) || 0;</div><div class='line' id='LC6811'>				}</div><div class='line' id='LC6812'>			}</div><div class='line' id='LC6813'>		}</div><div class='line' id='LC6814'><br/></div><div class='line' id='LC6815'>		return val + &quot;px&quot;;</div><div class='line' id='LC6816'>	}</div><div class='line' id='LC6817'><br/></div><div class='line' id='LC6818'>	// Fall back to computed then uncomputed css if necessary</div><div class='line' id='LC6819'>	val = curCSS( elem, name );</div><div class='line' id='LC6820'>	if ( val &lt; 0 || val == null ) {</div><div class='line' id='LC6821'>		val = elem.style[ name ];</div><div class='line' id='LC6822'>	}</div><div class='line' id='LC6823'><br/></div><div class='line' id='LC6824'>	// Computed unit is not pixels. Stop here and return.</div><div class='line' id='LC6825'>	if ( rnumnonpx.test(val) ) {</div><div class='line' id='LC6826'>		return val;</div><div class='line' id='LC6827'>	}</div><div class='line' id='LC6828'><br/></div><div class='line' id='LC6829'>	// Normalize &quot;&quot;, auto, and prepare for extra</div><div class='line' id='LC6830'>	val = parseFloat( val ) || 0;</div><div class='line' id='LC6831'><br/></div><div class='line' id='LC6832'>	// Add padding, border, margin</div><div class='line' id='LC6833'>	if ( extra ) {</div><div class='line' id='LC6834'>		for ( ; i &lt; len; i += 2 ) {</div><div class='line' id='LC6835'>			val += parseFloat( jQuery.css( elem, &quot;padding&quot; + cssExpand[ i ] ) ) || 0;</div><div class='line' id='LC6836'>			if ( extra !== &quot;padding&quot; ) {</div><div class='line' id='LC6837'>				val += parseFloat( jQuery.css( elem, &quot;border&quot; + cssExpand[ i ] + &quot;Width&quot; ) ) || 0;</div><div class='line' id='LC6838'>			}</div><div class='line' id='LC6839'>			if ( extra === &quot;margin&quot; ) {</div><div class='line' id='LC6840'>				val += parseFloat( jQuery.css( elem, extra + cssExpand[ i ]) ) || 0;</div><div class='line' id='LC6841'>			}</div><div class='line' id='LC6842'>		}</div><div class='line' id='LC6843'>	}</div><div class='line' id='LC6844'><br/></div><div class='line' id='LC6845'>	return val + &quot;px&quot;;</div><div class='line' id='LC6846'>}</div><div class='line' id='LC6847'><br/></div><div class='line' id='LC6848'>jQuery.each([ &quot;height&quot;, &quot;width&quot; ], function( i, name ) {</div><div class='line' id='LC6849'>	jQuery.cssHooks[ name ] = {</div><div class='line' id='LC6850'>		get: function( elem, computed, extra ) {</div><div class='line' id='LC6851'>			if ( computed ) {</div><div class='line' id='LC6852'>				if ( elem.offsetWidth !== 0 ) {</div><div class='line' id='LC6853'>					return getWidthOrHeight( elem, name, extra );</div><div class='line' id='LC6854'>				} else {</div><div class='line' id='LC6855'>					return jQuery.swap( elem, cssShow, function() {</div><div class='line' id='LC6856'>						return getWidthOrHeight( elem, name, extra );</div><div class='line' id='LC6857'>					});</div><div class='line' id='LC6858'>				}</div><div class='line' id='LC6859'>			}</div><div class='line' id='LC6860'>		},</div><div class='line' id='LC6861'><br/></div><div class='line' id='LC6862'>		set: function( elem, value ) {</div><div class='line' id='LC6863'>			return rnum.test( value ) ?</div><div class='line' id='LC6864'>				value + &quot;px&quot; :</div><div class='line' id='LC6865'>				value;</div><div class='line' id='LC6866'>		}</div><div class='line' id='LC6867'>	};</div><div class='line' id='LC6868'>});</div><div class='line' id='LC6869'><br/></div><div class='line' id='LC6870'>if ( !jQuery.support.opacity ) {</div><div class='line' id='LC6871'>	jQuery.cssHooks.opacity = {</div><div class='line' id='LC6872'>		get: function( elem, computed ) {</div><div class='line' id='LC6873'>			// IE uses filters for opacity</div><div class='line' id='LC6874'>			return ropacity.test( (computed &amp;&amp; elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || &quot;&quot; ) ?</div><div class='line' id='LC6875'>				( parseFloat( RegExp.$1 ) / 100 ) + &quot;&quot; :</div><div class='line' id='LC6876'>				computed ? &quot;1&quot; : &quot;&quot;;</div><div class='line' id='LC6877'>		},</div><div class='line' id='LC6878'><br/></div><div class='line' id='LC6879'>		set: function( elem, value ) {</div><div class='line' id='LC6880'>			var style = elem.style,</div><div class='line' id='LC6881'>				currentStyle = elem.currentStyle,</div><div class='line' id='LC6882'>				opacity = jQuery.isNumeric( value ) ? &quot;alpha(opacity=&quot; + value * 100 + &quot;)&quot; : &quot;&quot;,</div><div class='line' id='LC6883'>				filter = currentStyle &amp;&amp; currentStyle.filter || style.filter || &quot;&quot;;</div><div class='line' id='LC6884'><br/></div><div class='line' id='LC6885'>			// IE has trouble with opacity if it does not have layout</div><div class='line' id='LC6886'>			// Force it by setting the zoom level</div><div class='line' id='LC6887'>			style.zoom = 1;</div><div class='line' id='LC6888'><br/></div><div class='line' id='LC6889'>			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652</div><div class='line' id='LC6890'>			if ( value &gt;= 1 &amp;&amp; jQuery.trim( filter.replace( ralpha, &quot;&quot; ) ) === &quot;&quot; ) {</div><div class='line' id='LC6891'><br/></div><div class='line' id='LC6892'>				// Setting style.filter to null, &quot;&quot; &amp; &quot; &quot; still leave &quot;filter:&quot; in the cssText</div><div class='line' id='LC6893'>				// if &quot;filter:&quot; is present at all, clearType is disabled, we want to avoid this</div><div class='line' id='LC6894'>				// style.removeAttribute is IE Only, but so apparently is this code path...</div><div class='line' id='LC6895'>				style.removeAttribute( &quot;filter&quot; );</div><div class='line' id='LC6896'><br/></div><div class='line' id='LC6897'>				// if there there is no filter style applied in a css rule, we are done</div><div class='line' id='LC6898'>				if ( currentStyle &amp;&amp; !currentStyle.filter ) {</div><div class='line' id='LC6899'>					return;</div><div class='line' id='LC6900'>				}</div><div class='line' id='LC6901'>			}</div><div class='line' id='LC6902'><br/></div><div class='line' id='LC6903'>			// otherwise, set new filter values</div><div class='line' id='LC6904'>			style.filter = ralpha.test( filter ) ?</div><div class='line' id='LC6905'>				filter.replace( ralpha, opacity ) :</div><div class='line' id='LC6906'>				filter + &quot; &quot; + opacity;</div><div class='line' id='LC6907'>		}</div><div class='line' id='LC6908'>	};</div><div class='line' id='LC6909'>}</div><div class='line' id='LC6910'><br/></div><div class='line' id='LC6911'>jQuery(function() {</div><div class='line' id='LC6912'>	// This hook cannot be added until DOM ready because the support test</div><div class='line' id='LC6913'>	// for it is not run until after DOM ready</div><div class='line' id='LC6914'>	if ( !jQuery.support.reliableMarginRight ) {</div><div class='line' id='LC6915'>		jQuery.cssHooks.marginRight = {</div><div class='line' id='LC6916'>			get: function( elem, computed ) {</div><div class='line' id='LC6917'>				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right</div><div class='line' id='LC6918'>				// Work around by temporarily setting element display to inline-block</div><div class='line' id='LC6919'>				return jQuery.swap( elem, { &quot;display&quot;: &quot;inline-block&quot; }, function() {</div><div class='line' id='LC6920'>					if ( computed ) {</div><div class='line' id='LC6921'>						return curCSS( elem, &quot;margin-right&quot; );</div><div class='line' id='LC6922'>					} else {</div><div class='line' id='LC6923'>						return elem.style.marginRight;</div><div class='line' id='LC6924'>					}</div><div class='line' id='LC6925'>				});</div><div class='line' id='LC6926'>			}</div><div class='line' id='LC6927'>		};</div><div class='line' id='LC6928'>	}</div><div class='line' id='LC6929'>});</div><div class='line' id='LC6930'><br/></div><div class='line' id='LC6931'>if ( jQuery.expr &amp;&amp; jQuery.expr.filters ) {</div><div class='line' id='LC6932'>	jQuery.expr.filters.hidden = function( elem ) {</div><div class='line' id='LC6933'>		var width = elem.offsetWidth,</div><div class='line' id='LC6934'>			height = elem.offsetHeight;</div><div class='line' id='LC6935'><br/></div><div class='line' id='LC6936'>		return ( width === 0 &amp;&amp; height === 0 ) || (!jQuery.support.reliableHiddenOffsets &amp;&amp; ((elem.style &amp;&amp; elem.style.display) || jQuery.css( elem, &quot;display&quot; )) === &quot;none&quot;);</div><div class='line' id='LC6937'>	};</div><div class='line' id='LC6938'><br/></div><div class='line' id='LC6939'>	jQuery.expr.filters.visible = function( elem ) {</div><div class='line' id='LC6940'>		return !jQuery.expr.filters.hidden( elem );</div><div class='line' id='LC6941'>	};</div><div class='line' id='LC6942'>}</div><div class='line' id='LC6943'><br/></div><div class='line' id='LC6944'>// These hooks are used by animate to expand properties</div><div class='line' id='LC6945'>jQuery.each({</div><div class='line' id='LC6946'>	margin: &quot;&quot;,</div><div class='line' id='LC6947'>	padding: &quot;&quot;,</div><div class='line' id='LC6948'>	border: &quot;Width&quot;</div><div class='line' id='LC6949'>}, function( prefix, suffix ) {</div><div class='line' id='LC6950'><br/></div><div class='line' id='LC6951'>	jQuery.cssHooks[ prefix + suffix ] = {</div><div class='line' id='LC6952'>		expand: function( value ) {</div><div class='line' id='LC6953'>			var i,</div><div class='line' id='LC6954'><br/></div><div class='line' id='LC6955'>				// assumes a single number if not a string</div><div class='line' id='LC6956'>				parts = typeof value === &quot;string&quot; ? value.split(&quot; &quot;) : [ value ],</div><div class='line' id='LC6957'>				expanded = {};</div><div class='line' id='LC6958'><br/></div><div class='line' id='LC6959'>			for ( i = 0; i &lt; 4; i++ ) {</div><div class='line' id='LC6960'>				expanded[ prefix + cssExpand[ i ] + suffix ] =</div><div class='line' id='LC6961'>					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];</div><div class='line' id='LC6962'>			}</div><div class='line' id='LC6963'><br/></div><div class='line' id='LC6964'>			return expanded;</div><div class='line' id='LC6965'>		}</div><div class='line' id='LC6966'>	};</div><div class='line' id='LC6967'>});</div><div class='line' id='LC6968'><br/></div><div class='line' id='LC6969'><br/></div><div class='line' id='LC6970'><br/></div><div class='line' id='LC6971'><br/></div><div class='line' id='LC6972'>var r20 = /%20/g,</div><div class='line' id='LC6973'>	rbracket = /\[\]$/,</div><div class='line' id='LC6974'>	rCRLF = /\r?\n/g,</div><div class='line' id='LC6975'>	rhash = /#.*$/,</div><div class='line' id='LC6976'>	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL</div><div class='line' id='LC6977'>	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,</div><div class='line' id='LC6978'>	// #7653, #8125, #8152: local protocol detection</div><div class='line' id='LC6979'>	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,</div><div class='line' id='LC6980'>	rnoContent = /^(?:GET|HEAD)$/,</div><div class='line' id='LC6981'>	rprotocol = /^\/\//,</div><div class='line' id='LC6982'>	rquery = /\?/,</div><div class='line' id='LC6983'>	rscript = /&lt;script\b[^&lt;]*(?:(?!&lt;\/script&gt;)&lt;[^&lt;]*)*&lt;\/script&gt;/gi,</div><div class='line' id='LC6984'>	rselectTextarea = /^(?:select|textarea)/i,</div><div class='line' id='LC6985'>	rspacesAjax = /\s+/,</div><div class='line' id='LC6986'>	rts = /([?&amp;])_=[^&amp;]*/,</div><div class='line' id='LC6987'>	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,</div><div class='line' id='LC6988'><br/></div><div class='line' id='LC6989'>	// Keep a copy of the old load method</div><div class='line' id='LC6990'>	_load = jQuery.fn.load,</div><div class='line' id='LC6991'><br/></div><div class='line' id='LC6992'>	/* Prefilters</div><div class='line' id='LC6993'>	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)</div><div class='line' id='LC6994'>	 * 2) These are called:</div><div class='line' id='LC6995'>	 *    - BEFORE asking for a transport</div><div class='line' id='LC6996'>	 *    - AFTER param serialization (s.data is a string if s.processData is true)</div><div class='line' id='LC6997'>	 * 3) key is the dataType</div><div class='line' id='LC6998'>	 * 4) the catchall symbol &quot;*&quot; can be used</div><div class='line' id='LC6999'>	 * 5) execution will start with transport dataType and THEN continue down to &quot;*&quot; if needed</div><div class='line' id='LC7000'>	 */</div><div class='line' id='LC7001'>	prefilters = {},</div><div class='line' id='LC7002'><br/></div><div class='line' id='LC7003'>	/* Transports bindings</div><div class='line' id='LC7004'>	 * 1) key is the dataType</div><div class='line' id='LC7005'>	 * 2) the catchall symbol &quot;*&quot; can be used</div><div class='line' id='LC7006'>	 * 3) selection will start with transport dataType and THEN go to &quot;*&quot; if needed</div><div class='line' id='LC7007'>	 */</div><div class='line' id='LC7008'>	transports = {},</div><div class='line' id='LC7009'><br/></div><div class='line' id='LC7010'>	// Document location</div><div class='line' id='LC7011'>	ajaxLocation,</div><div class='line' id='LC7012'><br/></div><div class='line' id='LC7013'>	// Document location segments</div><div class='line' id='LC7014'>	ajaxLocParts,</div><div class='line' id='LC7015'><br/></div><div class='line' id='LC7016'>	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression</div><div class='line' id='LC7017'>	allTypes = [&quot;*/&quot;] + [&quot;*&quot;];</div><div class='line' id='LC7018'><br/></div><div class='line' id='LC7019'>// #8138, IE may throw an exception when accessing</div><div class='line' id='LC7020'>// a field from window.location if document.domain has been set</div><div class='line' id='LC7021'>try {</div><div class='line' id='LC7022'>	ajaxLocation = location.href;</div><div class='line' id='LC7023'>} catch( e ) {</div><div class='line' id='LC7024'>	// Use the href attribute of an A element</div><div class='line' id='LC7025'>	// since IE will modify it given document.location</div><div class='line' id='LC7026'>	ajaxLocation = document.createElement( &quot;a&quot; );</div><div class='line' id='LC7027'>	ajaxLocation.href = &quot;&quot;;</div><div class='line' id='LC7028'>	ajaxLocation = ajaxLocation.href;</div><div class='line' id='LC7029'>}</div><div class='line' id='LC7030'><br/></div><div class='line' id='LC7031'>// Segment location into parts</div><div class='line' id='LC7032'>ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];</div><div class='line' id='LC7033'><br/></div><div class='line' id='LC7034'>// Base &quot;constructor&quot; for jQuery.ajaxPrefilter and jQuery.ajaxTransport</div><div class='line' id='LC7035'>function addToPrefiltersOrTransports( structure ) {</div><div class='line' id='LC7036'><br/></div><div class='line' id='LC7037'>	// dataTypeExpression is optional and defaults to &quot;*&quot;</div><div class='line' id='LC7038'>	return function( dataTypeExpression, func ) {</div><div class='line' id='LC7039'><br/></div><div class='line' id='LC7040'>		if ( typeof dataTypeExpression !== &quot;string&quot; ) {</div><div class='line' id='LC7041'>			func = dataTypeExpression;</div><div class='line' id='LC7042'>			dataTypeExpression = &quot;*&quot;;</div><div class='line' id='LC7043'>		}</div><div class='line' id='LC7044'><br/></div><div class='line' id='LC7045'>		if ( jQuery.isFunction( func ) ) {</div><div class='line' id='LC7046'>			var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),</div><div class='line' id='LC7047'>				i = 0,</div><div class='line' id='LC7048'>				length = dataTypes.length,</div><div class='line' id='LC7049'>				dataType,</div><div class='line' id='LC7050'>				list,</div><div class='line' id='LC7051'>				placeBefore;</div><div class='line' id='LC7052'><br/></div><div class='line' id='LC7053'>			// For each dataType in the dataTypeExpression</div><div class='line' id='LC7054'>			for ( ; i &lt; length; i++ ) {</div><div class='line' id='LC7055'>				dataType = dataTypes[ i ];</div><div class='line' id='LC7056'>				// We control if we&#39;re asked to add before</div><div class='line' id='LC7057'>				// any existing element</div><div class='line' id='LC7058'>				placeBefore = /^\+/.test( dataType );</div><div class='line' id='LC7059'>				if ( placeBefore ) {</div><div class='line' id='LC7060'>					dataType = dataType.substr( 1 ) || &quot;*&quot;;</div><div class='line' id='LC7061'>				}</div><div class='line' id='LC7062'>				list = structure[ dataType ] = structure[ dataType ] || [];</div><div class='line' id='LC7063'>				// then we add to the structure accordingly</div><div class='line' id='LC7064'>				list[ placeBefore ? &quot;unshift&quot; : &quot;push&quot; ]( func );</div><div class='line' id='LC7065'>			}</div><div class='line' id='LC7066'>		}</div><div class='line' id='LC7067'>	};</div><div class='line' id='LC7068'>}</div><div class='line' id='LC7069'><br/></div><div class='line' id='LC7070'>// Base inspection function for prefilters and transports</div><div class='line' id='LC7071'>function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,</div><div class='line' id='LC7072'>		dataType /* internal */, inspected /* internal */ ) {</div><div class='line' id='LC7073'><br/></div><div class='line' id='LC7074'>	dataType = dataType || options.dataTypes[ 0 ];</div><div class='line' id='LC7075'>	inspected = inspected || {};</div><div class='line' id='LC7076'><br/></div><div class='line' id='LC7077'>	inspected[ dataType ] = true;</div><div class='line' id='LC7078'><br/></div><div class='line' id='LC7079'>	var list = structure[ dataType ],</div><div class='line' id='LC7080'>		i = 0,</div><div class='line' id='LC7081'>		length = list ? list.length : 0,</div><div class='line' id='LC7082'>		executeOnly = ( structure === prefilters ),</div><div class='line' id='LC7083'>		selection;</div><div class='line' id='LC7084'><br/></div><div class='line' id='LC7085'>	for ( ; i &lt; length &amp;&amp; ( executeOnly || !selection ); i++ ) {</div><div class='line' id='LC7086'>		selection = list[ i ]( options, originalOptions, jqXHR );</div><div class='line' id='LC7087'>		// If we got redirected to another dataType</div><div class='line' id='LC7088'>		// we try there if executing only and not done already</div><div class='line' id='LC7089'>		if ( typeof selection === &quot;string&quot; ) {</div><div class='line' id='LC7090'>			if ( !executeOnly || inspected[ selection ] ) {</div><div class='line' id='LC7091'>				selection = undefined;</div><div class='line' id='LC7092'>			} else {</div><div class='line' id='LC7093'>				options.dataTypes.unshift( selection );</div><div class='line' id='LC7094'>				selection = inspectPrefiltersOrTransports(</div><div class='line' id='LC7095'>						structure, options, originalOptions, jqXHR, selection, inspected );</div><div class='line' id='LC7096'>			}</div><div class='line' id='LC7097'>		}</div><div class='line' id='LC7098'>	}</div><div class='line' id='LC7099'>	// If we&#39;re only executing or nothing was selected</div><div class='line' id='LC7100'>	// we try the catchall dataType if not done already</div><div class='line' id='LC7101'>	if ( ( executeOnly || !selection ) &amp;&amp; !inspected[ &quot;*&quot; ] ) {</div><div class='line' id='LC7102'>		selection = inspectPrefiltersOrTransports(</div><div class='line' id='LC7103'>				structure, options, originalOptions, jqXHR, &quot;*&quot;, inspected );</div><div class='line' id='LC7104'>	}</div><div class='line' id='LC7105'>	// unnecessary when only executing (prefilters)</div><div class='line' id='LC7106'>	// but it&#39;ll be ignored by the caller in that case</div><div class='line' id='LC7107'>	return selection;</div><div class='line' id='LC7108'>}</div><div class='line' id='LC7109'><br/></div><div class='line' id='LC7110'>// A special extend for ajax options</div><div class='line' id='LC7111'>// that takes &quot;flat&quot; options (not to be deep extended)</div><div class='line' id='LC7112'>// Fixes #9887</div><div class='line' id='LC7113'>function ajaxExtend( target, src ) {</div><div class='line' id='LC7114'>	var key, deep,</div><div class='line' id='LC7115'>		flatOptions = jQuery.ajaxSettings.flatOptions || {};</div><div class='line' id='LC7116'>	for ( key in src ) {</div><div class='line' id='LC7117'>		if ( src[ key ] !== undefined ) {</div><div class='line' id='LC7118'>			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];</div><div class='line' id='LC7119'>		}</div><div class='line' id='LC7120'>	}</div><div class='line' id='LC7121'>	if ( deep ) {</div><div class='line' id='LC7122'>		jQuery.extend( true, target, deep );</div><div class='line' id='LC7123'>	}</div><div class='line' id='LC7124'>}</div><div class='line' id='LC7125'><br/></div><div class='line' id='LC7126'>jQuery.fn.extend({</div><div class='line' id='LC7127'>	load: function( url, params, callback ) {</div><div class='line' id='LC7128'>		if ( typeof url !== &quot;string&quot; &amp;&amp; _load ) {</div><div class='line' id='LC7129'>			return _load.apply( this, arguments );</div><div class='line' id='LC7130'><br/></div><div class='line' id='LC7131'>		// Don&#39;t do a request if no elements are being requested</div><div class='line' id='LC7132'>		} else if ( !this.length ) {</div><div class='line' id='LC7133'>			return this;</div><div class='line' id='LC7134'>		}</div><div class='line' id='LC7135'><br/></div><div class='line' id='LC7136'>		var off = url.indexOf( &quot; &quot; );</div><div class='line' id='LC7137'>		if ( off &gt;= 0 ) {</div><div class='line' id='LC7138'>			var selector = url.slice( off, url.length );</div><div class='line' id='LC7139'>			url = url.slice( 0, off );</div><div class='line' id='LC7140'>		}</div><div class='line' id='LC7141'><br/></div><div class='line' id='LC7142'>		// Default to a GET request</div><div class='line' id='LC7143'>		var type = &quot;GET&quot;;</div><div class='line' id='LC7144'><br/></div><div class='line' id='LC7145'>		// If the second parameter was provided</div><div class='line' id='LC7146'>		if ( params ) {</div><div class='line' id='LC7147'>			// If it&#39;s a function</div><div class='line' id='LC7148'>			if ( jQuery.isFunction( params ) ) {</div><div class='line' id='LC7149'>				// We assume that it&#39;s the callback</div><div class='line' id='LC7150'>				callback = params;</div><div class='line' id='LC7151'>				params = undefined;</div><div class='line' id='LC7152'><br/></div><div class='line' id='LC7153'>			// Otherwise, build a param string</div><div class='line' id='LC7154'>			} else if ( typeof params === &quot;object&quot; ) {</div><div class='line' id='LC7155'>				params = jQuery.param( params, jQuery.ajaxSettings.traditional );</div><div class='line' id='LC7156'>				type = &quot;POST&quot;;</div><div class='line' id='LC7157'>			}</div><div class='line' id='LC7158'>		}</div><div class='line' id='LC7159'><br/></div><div class='line' id='LC7160'>		var self = this;</div><div class='line' id='LC7161'><br/></div><div class='line' id='LC7162'>		// Request the remote document</div><div class='line' id='LC7163'>		jQuery.ajax({</div><div class='line' id='LC7164'>			url: url,</div><div class='line' id='LC7165'>			type: type,</div><div class='line' id='LC7166'>			dataType: &quot;html&quot;,</div><div class='line' id='LC7167'>			data: params,</div><div class='line' id='LC7168'>			// Complete callback (responseText is used internally)</div><div class='line' id='LC7169'>			complete: function( jqXHR, status, responseText ) {</div><div class='line' id='LC7170'>				// Store the response as specified by the jqXHR object</div><div class='line' id='LC7171'>				responseText = jqXHR.responseText;</div><div class='line' id='LC7172'>				// If successful, inject the HTML into all the matched elements</div><div class='line' id='LC7173'>				if ( jqXHR.isResolved() ) {</div><div class='line' id='LC7174'>					// #4825: Get the actual response in case</div><div class='line' id='LC7175'>					// a dataFilter is present in ajaxSettings</div><div class='line' id='LC7176'>					jqXHR.done(function( r ) {</div><div class='line' id='LC7177'>						responseText = r;</div><div class='line' id='LC7178'>					});</div><div class='line' id='LC7179'>					// See if a selector was specified</div><div class='line' id='LC7180'>					self.html( selector ?</div><div class='line' id='LC7181'>						// Create a dummy div to hold the results</div><div class='line' id='LC7182'>						jQuery(&quot;&lt;div&gt;&quot;)</div><div class='line' id='LC7183'>							// inject the contents of the document in, removing the scripts</div><div class='line' id='LC7184'>							// to avoid any &#39;Permission Denied&#39; errors in IE</div><div class='line' id='LC7185'>							.append(responseText.replace(rscript, &quot;&quot;))</div><div class='line' id='LC7186'><br/></div><div class='line' id='LC7187'>							// Locate the specified elements</div><div class='line' id='LC7188'>							.find(selector) :</div><div class='line' id='LC7189'><br/></div><div class='line' id='LC7190'>						// If not, just inject the full result</div><div class='line' id='LC7191'>						responseText );</div><div class='line' id='LC7192'>				}</div><div class='line' id='LC7193'><br/></div><div class='line' id='LC7194'>				if ( callback ) {</div><div class='line' id='LC7195'>					self.each( callback, [ responseText, status, jqXHR ] );</div><div class='line' id='LC7196'>				}</div><div class='line' id='LC7197'>			}</div><div class='line' id='LC7198'>		});</div><div class='line' id='LC7199'><br/></div><div class='line' id='LC7200'>		return this;</div><div class='line' id='LC7201'>	},</div><div class='line' id='LC7202'><br/></div><div class='line' id='LC7203'>	serialize: function() {</div><div class='line' id='LC7204'>		return jQuery.param( this.serializeArray() );</div><div class='line' id='LC7205'>	},</div><div class='line' id='LC7206'><br/></div><div class='line' id='LC7207'>	serializeArray: function() {</div><div class='line' id='LC7208'>		return this.map(function(){</div><div class='line' id='LC7209'>			return this.elements ? jQuery.makeArray( this.elements ) : this;</div><div class='line' id='LC7210'>		})</div><div class='line' id='LC7211'>		.filter(function(){</div><div class='line' id='LC7212'>			return this.name &amp;&amp; !this.disabled &amp;&amp;</div><div class='line' id='LC7213'>				( this.checked || rselectTextarea.test( this.nodeName ) ||</div><div class='line' id='LC7214'>					rinput.test( this.type ) );</div><div class='line' id='LC7215'>		})</div><div class='line' id='LC7216'>		.map(function( i, elem ){</div><div class='line' id='LC7217'>			var val = jQuery( this ).val();</div><div class='line' id='LC7218'><br/></div><div class='line' id='LC7219'>			return val == null ?</div><div class='line' id='LC7220'>				null :</div><div class='line' id='LC7221'>				jQuery.isArray( val ) ?</div><div class='line' id='LC7222'>					jQuery.map( val, function( val, i ){</div><div class='line' id='LC7223'>						return { name: elem.name, value: val.replace( rCRLF, &quot;\r\n&quot; ) };</div><div class='line' id='LC7224'>					}) :</div><div class='line' id='LC7225'>					{ name: elem.name, value: val.replace( rCRLF, &quot;\r\n&quot; ) };</div><div class='line' id='LC7226'>		}).get();</div><div class='line' id='LC7227'>	}</div><div class='line' id='LC7228'>});</div><div class='line' id='LC7229'><br/></div><div class='line' id='LC7230'>// Attach a bunch of functions for handling common AJAX events</div><div class='line' id='LC7231'>jQuery.each( &quot;ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend&quot;.split( &quot; &quot; ), function( i, o ){</div><div class='line' id='LC7232'>	jQuery.fn[ o ] = function( f ){</div><div class='line' id='LC7233'>		return this.on( o, f );</div><div class='line' id='LC7234'>	};</div><div class='line' id='LC7235'>});</div><div class='line' id='LC7236'><br/></div><div class='line' id='LC7237'>jQuery.each( [ &quot;get&quot;, &quot;post&quot; ], function( i, method ) {</div><div class='line' id='LC7238'>	jQuery[ method ] = function( url, data, callback, type ) {</div><div class='line' id='LC7239'>		// shift arguments if data argument was omitted</div><div class='line' id='LC7240'>		if ( jQuery.isFunction( data ) ) {</div><div class='line' id='LC7241'>			type = type || callback;</div><div class='line' id='LC7242'>			callback = data;</div><div class='line' id='LC7243'>			data = undefined;</div><div class='line' id='LC7244'>		}</div><div class='line' id='LC7245'><br/></div><div class='line' id='LC7246'>		return jQuery.ajax({</div><div class='line' id='LC7247'>			type: method,</div><div class='line' id='LC7248'>			url: url,</div><div class='line' id='LC7249'>			data: data,</div><div class='line' id='LC7250'>			success: callback,</div><div class='line' id='LC7251'>			dataType: type</div><div class='line' id='LC7252'>		});</div><div class='line' id='LC7253'>	};</div><div class='line' id='LC7254'>});</div><div class='line' id='LC7255'><br/></div><div class='line' id='LC7256'>jQuery.extend({</div><div class='line' id='LC7257'><br/></div><div class='line' id='LC7258'>	getScript: function( url, callback ) {</div><div class='line' id='LC7259'>		return jQuery.get( url, undefined, callback, &quot;script&quot; );</div><div class='line' id='LC7260'>	},</div><div class='line' id='LC7261'><br/></div><div class='line' id='LC7262'>	getJSON: function( url, data, callback ) {</div><div class='line' id='LC7263'>		return jQuery.get( url, data, callback, &quot;json&quot; );</div><div class='line' id='LC7264'>	},</div><div class='line' id='LC7265'><br/></div><div class='line' id='LC7266'>	// Creates a full fledged settings object into target</div><div class='line' id='LC7267'>	// with both ajaxSettings and settings fields.</div><div class='line' id='LC7268'>	// If target is omitted, writes into ajaxSettings.</div><div class='line' id='LC7269'>	ajaxSetup: function( target, settings ) {</div><div class='line' id='LC7270'>		if ( settings ) {</div><div class='line' id='LC7271'>			// Building a settings object</div><div class='line' id='LC7272'>			ajaxExtend( target, jQuery.ajaxSettings );</div><div class='line' id='LC7273'>		} else {</div><div class='line' id='LC7274'>			// Extending ajaxSettings</div><div class='line' id='LC7275'>			settings = target;</div><div class='line' id='LC7276'>			target = jQuery.ajaxSettings;</div><div class='line' id='LC7277'>		}</div><div class='line' id='LC7278'>		ajaxExtend( target, settings );</div><div class='line' id='LC7279'>		return target;</div><div class='line' id='LC7280'>	},</div><div class='line' id='LC7281'><br/></div><div class='line' id='LC7282'>	ajaxSettings: {</div><div class='line' id='LC7283'>		url: ajaxLocation,</div><div class='line' id='LC7284'>		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),</div><div class='line' id='LC7285'>		global: true,</div><div class='line' id='LC7286'>		type: &quot;GET&quot;,</div><div class='line' id='LC7287'>		contentType: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,</div><div class='line' id='LC7288'>		processData: true,</div><div class='line' id='LC7289'>		async: true,</div><div class='line' id='LC7290'>		/*</div><div class='line' id='LC7291'>		timeout: 0,</div><div class='line' id='LC7292'>		data: null,</div><div class='line' id='LC7293'>		dataType: null,</div><div class='line' id='LC7294'>		username: null,</div><div class='line' id='LC7295'>		password: null,</div><div class='line' id='LC7296'>		cache: null,</div><div class='line' id='LC7297'>		traditional: false,</div><div class='line' id='LC7298'>		headers: {},</div><div class='line' id='LC7299'>		*/</div><div class='line' id='LC7300'><br/></div><div class='line' id='LC7301'>		accepts: {</div><div class='line' id='LC7302'>			xml: &quot;application/xml, text/xml&quot;,</div><div class='line' id='LC7303'>			html: &quot;text/html&quot;,</div><div class='line' id='LC7304'>			text: &quot;text/plain&quot;,</div><div class='line' id='LC7305'>			json: &quot;application/json, text/javascript&quot;,</div><div class='line' id='LC7306'>			&quot;*&quot;: allTypes</div><div class='line' id='LC7307'>		},</div><div class='line' id='LC7308'><br/></div><div class='line' id='LC7309'>		contents: {</div><div class='line' id='LC7310'>			xml: /xml/,</div><div class='line' id='LC7311'>			html: /html/,</div><div class='line' id='LC7312'>			json: /json/</div><div class='line' id='LC7313'>		},</div><div class='line' id='LC7314'><br/></div><div class='line' id='LC7315'>		responseFields: {</div><div class='line' id='LC7316'>			xml: &quot;responseXML&quot;,</div><div class='line' id='LC7317'>			text: &quot;responseText&quot;</div><div class='line' id='LC7318'>		},</div><div class='line' id='LC7319'><br/></div><div class='line' id='LC7320'>		// List of data converters</div><div class='line' id='LC7321'>		// 1) key format is &quot;source_type destination_type&quot; (a single space in-between)</div><div class='line' id='LC7322'>		// 2) the catchall symbol &quot;*&quot; can be used for source_type</div><div class='line' id='LC7323'>		converters: {</div><div class='line' id='LC7324'><br/></div><div class='line' id='LC7325'>			// Convert anything to text</div><div class='line' id='LC7326'>			&quot;* text&quot;: window.String,</div><div class='line' id='LC7327'><br/></div><div class='line' id='LC7328'>			// Text to html (true = no transformation)</div><div class='line' id='LC7329'>			&quot;text html&quot;: true,</div><div class='line' id='LC7330'><br/></div><div class='line' id='LC7331'>			// Evaluate text as a json expression</div><div class='line' id='LC7332'>			&quot;text json&quot;: jQuery.parseJSON,</div><div class='line' id='LC7333'><br/></div><div class='line' id='LC7334'>			// Parse text as xml</div><div class='line' id='LC7335'>			&quot;text xml&quot;: jQuery.parseXML</div><div class='line' id='LC7336'>		},</div><div class='line' id='LC7337'><br/></div><div class='line' id='LC7338'>		// For options that shouldn&#39;t be deep extended:</div><div class='line' id='LC7339'>		// you can add your own custom options here if</div><div class='line' id='LC7340'>		// and when you create one that shouldn&#39;t be</div><div class='line' id='LC7341'>		// deep extended (see ajaxExtend)</div><div class='line' id='LC7342'>		flatOptions: {</div><div class='line' id='LC7343'>			context: true,</div><div class='line' id='LC7344'>			url: true</div><div class='line' id='LC7345'>		}</div><div class='line' id='LC7346'>	},</div><div class='line' id='LC7347'><br/></div><div class='line' id='LC7348'>	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),</div><div class='line' id='LC7349'>	ajaxTransport: addToPrefiltersOrTransports( transports ),</div><div class='line' id='LC7350'><br/></div><div class='line' id='LC7351'>	// Main method</div><div class='line' id='LC7352'>	ajax: function( url, options ) {</div><div class='line' id='LC7353'><br/></div><div class='line' id='LC7354'>		// If url is an object, simulate pre-1.5 signature</div><div class='line' id='LC7355'>		if ( typeof url === &quot;object&quot; ) {</div><div class='line' id='LC7356'>			options = url;</div><div class='line' id='LC7357'>			url = undefined;</div><div class='line' id='LC7358'>		}</div><div class='line' id='LC7359'><br/></div><div class='line' id='LC7360'>		// Force options to be an object</div><div class='line' id='LC7361'>		options = options || {};</div><div class='line' id='LC7362'><br/></div><div class='line' id='LC7363'>		var // Create the final options object</div><div class='line' id='LC7364'>			s = jQuery.ajaxSetup( {}, options ),</div><div class='line' id='LC7365'>			// Callbacks context</div><div class='line' id='LC7366'>			callbackContext = s.context || s,</div><div class='line' id='LC7367'>			// Context for global events</div><div class='line' id='LC7368'>			// It&#39;s the callbackContext if one was provided in the options</div><div class='line' id='LC7369'>			// and if it&#39;s a DOM node or a jQuery collection</div><div class='line' id='LC7370'>			globalEventContext = callbackContext !== s &amp;&amp;</div><div class='line' id='LC7371'>				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?</div><div class='line' id='LC7372'>						jQuery( callbackContext ) : jQuery.event,</div><div class='line' id='LC7373'>			// Deferreds</div><div class='line' id='LC7374'>			deferred = jQuery.Deferred(),</div><div class='line' id='LC7375'>			completeDeferred = jQuery.Callbacks( &quot;once memory&quot; ),</div><div class='line' id='LC7376'>			// Status-dependent callbacks</div><div class='line' id='LC7377'>			statusCode = s.statusCode || {},</div><div class='line' id='LC7378'>			// ifModified key</div><div class='line' id='LC7379'>			ifModifiedKey,</div><div class='line' id='LC7380'>			// Headers (they are sent all at once)</div><div class='line' id='LC7381'>			requestHeaders = {},</div><div class='line' id='LC7382'>			requestHeadersNames = {},</div><div class='line' id='LC7383'>			// Response headers</div><div class='line' id='LC7384'>			responseHeadersString,</div><div class='line' id='LC7385'>			responseHeaders,</div><div class='line' id='LC7386'>			// transport</div><div class='line' id='LC7387'>			transport,</div><div class='line' id='LC7388'>			// timeout handle</div><div class='line' id='LC7389'>			timeoutTimer,</div><div class='line' id='LC7390'>			// Cross-domain detection vars</div><div class='line' id='LC7391'>			parts,</div><div class='line' id='LC7392'>			// The jqXHR state</div><div class='line' id='LC7393'>			state = 0,</div><div class='line' id='LC7394'>			// To know if global events are to be dispatched</div><div class='line' id='LC7395'>			fireGlobals,</div><div class='line' id='LC7396'>			// Loop variable</div><div class='line' id='LC7397'>			i,</div><div class='line' id='LC7398'>			// Fake xhr</div><div class='line' id='LC7399'>			jqXHR = {</div><div class='line' id='LC7400'><br/></div><div class='line' id='LC7401'>				readyState: 0,</div><div class='line' id='LC7402'><br/></div><div class='line' id='LC7403'>				// Caches the header</div><div class='line' id='LC7404'>				setRequestHeader: function( name, value ) {</div><div class='line' id='LC7405'>					if ( !state ) {</div><div class='line' id='LC7406'>						var lname = name.toLowerCase();</div><div class='line' id='LC7407'>						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;</div><div class='line' id='LC7408'>						requestHeaders[ name ] = value;</div><div class='line' id='LC7409'>					}</div><div class='line' id='LC7410'>					return this;</div><div class='line' id='LC7411'>				},</div><div class='line' id='LC7412'><br/></div><div class='line' id='LC7413'>				// Raw string</div><div class='line' id='LC7414'>				getAllResponseHeaders: function() {</div><div class='line' id='LC7415'>					return state === 2 ? responseHeadersString : null;</div><div class='line' id='LC7416'>				},</div><div class='line' id='LC7417'><br/></div><div class='line' id='LC7418'>				// Builds headers hashtable if needed</div><div class='line' id='LC7419'>				getResponseHeader: function( key ) {</div><div class='line' id='LC7420'>					var match;</div><div class='line' id='LC7421'>					if ( state === 2 ) {</div><div class='line' id='LC7422'>						if ( !responseHeaders ) {</div><div class='line' id='LC7423'>							responseHeaders = {};</div><div class='line' id='LC7424'>							while( ( match = rheaders.exec( responseHeadersString ) ) ) {</div><div class='line' id='LC7425'>								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];</div><div class='line' id='LC7426'>							}</div><div class='line' id='LC7427'>						}</div><div class='line' id='LC7428'>						match = responseHeaders[ key.toLowerCase() ];</div><div class='line' id='LC7429'>					}</div><div class='line' id='LC7430'>					return match === undefined ? null : match;</div><div class='line' id='LC7431'>				},</div><div class='line' id='LC7432'><br/></div><div class='line' id='LC7433'>				// Overrides response content-type header</div><div class='line' id='LC7434'>				overrideMimeType: function( type ) {</div><div class='line' id='LC7435'>					if ( !state ) {</div><div class='line' id='LC7436'>						s.mimeType = type;</div><div class='line' id='LC7437'>					}</div><div class='line' id='LC7438'>					return this;</div><div class='line' id='LC7439'>				},</div><div class='line' id='LC7440'><br/></div><div class='line' id='LC7441'>				// Cancel the request</div><div class='line' id='LC7442'>				abort: function( statusText ) {</div><div class='line' id='LC7443'>					statusText = statusText || &quot;abort&quot;;</div><div class='line' id='LC7444'>					if ( transport ) {</div><div class='line' id='LC7445'>						transport.abort( statusText );</div><div class='line' id='LC7446'>					}</div><div class='line' id='LC7447'>					done( 0, statusText );</div><div class='line' id='LC7448'>					return this;</div><div class='line' id='LC7449'>				}</div><div class='line' id='LC7450'>			};</div><div class='line' id='LC7451'><br/></div><div class='line' id='LC7452'>		// Callback for when everything is done</div><div class='line' id='LC7453'>		// It is defined here because jslint complains if it is declared</div><div class='line' id='LC7454'>		// at the end of the function (which would be more logical and readable)</div><div class='line' id='LC7455'>		function done( status, nativeStatusText, responses, headers ) {</div><div class='line' id='LC7456'><br/></div><div class='line' id='LC7457'>			// Called once</div><div class='line' id='LC7458'>			if ( state === 2 ) {</div><div class='line' id='LC7459'>				return;</div><div class='line' id='LC7460'>			}</div><div class='line' id='LC7461'><br/></div><div class='line' id='LC7462'>			// State is &quot;done&quot; now</div><div class='line' id='LC7463'>			state = 2;</div><div class='line' id='LC7464'><br/></div><div class='line' id='LC7465'>			// Clear timeout if it exists</div><div class='line' id='LC7466'>			if ( timeoutTimer ) {</div><div class='line' id='LC7467'>				clearTimeout( timeoutTimer );</div><div class='line' id='LC7468'>			}</div><div class='line' id='LC7469'><br/></div><div class='line' id='LC7470'>			// Dereference transport for early garbage collection</div><div class='line' id='LC7471'>			// (no matter how long the jqXHR object will be used)</div><div class='line' id='LC7472'>			transport = undefined;</div><div class='line' id='LC7473'><br/></div><div class='line' id='LC7474'>			// Cache response headers</div><div class='line' id='LC7475'>			responseHeadersString = headers || &quot;&quot;;</div><div class='line' id='LC7476'><br/></div><div class='line' id='LC7477'>			// Set readyState</div><div class='line' id='LC7478'>			jqXHR.readyState = status &gt; 0 ? 4 : 0;</div><div class='line' id='LC7479'><br/></div><div class='line' id='LC7480'>			var isSuccess,</div><div class='line' id='LC7481'>				success,</div><div class='line' id='LC7482'>				error,</div><div class='line' id='LC7483'>				statusText = nativeStatusText,</div><div class='line' id='LC7484'>				response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,</div><div class='line' id='LC7485'>				lastModified,</div><div class='line' id='LC7486'>				etag;</div><div class='line' id='LC7487'><br/></div><div class='line' id='LC7488'>			// If successful, handle type chaining</div><div class='line' id='LC7489'>			if ( status &gt;= 200 &amp;&amp; status &lt; 300 || status === 304 ) {</div><div class='line' id='LC7490'><br/></div><div class='line' id='LC7491'>				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</div><div class='line' id='LC7492'>				if ( s.ifModified ) {</div><div class='line' id='LC7493'><br/></div><div class='line' id='LC7494'>					if ( ( lastModified = jqXHR.getResponseHeader( &quot;Last-Modified&quot; ) ) ) {</div><div class='line' id='LC7495'>						jQuery.lastModified[ ifModifiedKey ] = lastModified;</div><div class='line' id='LC7496'>					}</div><div class='line' id='LC7497'>					if ( ( etag = jqXHR.getResponseHeader( &quot;Etag&quot; ) ) ) {</div><div class='line' id='LC7498'>						jQuery.etag[ ifModifiedKey ] = etag;</div><div class='line' id='LC7499'>					}</div><div class='line' id='LC7500'>				}</div><div class='line' id='LC7501'><br/></div><div class='line' id='LC7502'>				// If not modified</div><div class='line' id='LC7503'>				if ( status === 304 ) {</div><div class='line' id='LC7504'><br/></div><div class='line' id='LC7505'>					statusText = &quot;notmodified&quot;;</div><div class='line' id='LC7506'>					isSuccess = true;</div><div class='line' id='LC7507'><br/></div><div class='line' id='LC7508'>				// If we have data</div><div class='line' id='LC7509'>				} else {</div><div class='line' id='LC7510'><br/></div><div class='line' id='LC7511'>					try {</div><div class='line' id='LC7512'>						success = ajaxConvert( s, response );</div><div class='line' id='LC7513'>						statusText = &quot;success&quot;;</div><div class='line' id='LC7514'>						isSuccess = true;</div><div class='line' id='LC7515'>					} catch(e) {</div><div class='line' id='LC7516'>						// We have a parsererror</div><div class='line' id='LC7517'>						statusText = &quot;parsererror&quot;;</div><div class='line' id='LC7518'>						error = e;</div><div class='line' id='LC7519'>					}</div><div class='line' id='LC7520'>				}</div><div class='line' id='LC7521'>			} else {</div><div class='line' id='LC7522'>				// We extract error from statusText</div><div class='line' id='LC7523'>				// then normalize statusText and status for non-aborts</div><div class='line' id='LC7524'>				error = statusText;</div><div class='line' id='LC7525'>				if ( !statusText || status ) {</div><div class='line' id='LC7526'>					statusText = &quot;error&quot;;</div><div class='line' id='LC7527'>					if ( status &lt; 0 ) {</div><div class='line' id='LC7528'>						status = 0;</div><div class='line' id='LC7529'>					}</div><div class='line' id='LC7530'>				}</div><div class='line' id='LC7531'>			}</div><div class='line' id='LC7532'><br/></div><div class='line' id='LC7533'>			// Set data for the fake xhr object</div><div class='line' id='LC7534'>			jqXHR.status = status;</div><div class='line' id='LC7535'>			jqXHR.statusText = &quot;&quot; + ( nativeStatusText || statusText );</div><div class='line' id='LC7536'><br/></div><div class='line' id='LC7537'>			// Success/Error</div><div class='line' id='LC7538'>			if ( isSuccess ) {</div><div class='line' id='LC7539'>				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );</div><div class='line' id='LC7540'>			} else {</div><div class='line' id='LC7541'>				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );</div><div class='line' id='LC7542'>			}</div><div class='line' id='LC7543'><br/></div><div class='line' id='LC7544'>			// Status-dependent callbacks</div><div class='line' id='LC7545'>			jqXHR.statusCode( statusCode );</div><div class='line' id='LC7546'>			statusCode = undefined;</div><div class='line' id='LC7547'><br/></div><div class='line' id='LC7548'>			if ( fireGlobals ) {</div><div class='line' id='LC7549'>				globalEventContext.trigger( &quot;ajax&quot; + ( isSuccess ? &quot;Success&quot; : &quot;Error&quot; ),</div><div class='line' id='LC7550'>						[ jqXHR, s, isSuccess ? success : error ] );</div><div class='line' id='LC7551'>			}</div><div class='line' id='LC7552'><br/></div><div class='line' id='LC7553'>			// Complete</div><div class='line' id='LC7554'>			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );</div><div class='line' id='LC7555'><br/></div><div class='line' id='LC7556'>			if ( fireGlobals ) {</div><div class='line' id='LC7557'>				globalEventContext.trigger( &quot;ajaxComplete&quot;, [ jqXHR, s ] );</div><div class='line' id='LC7558'>				// Handle the global AJAX counter</div><div class='line' id='LC7559'>				if ( !( --jQuery.active ) ) {</div><div class='line' id='LC7560'>					jQuery.event.trigger( &quot;ajaxStop&quot; );</div><div class='line' id='LC7561'>				}</div><div class='line' id='LC7562'>			}</div><div class='line' id='LC7563'>		}</div><div class='line' id='LC7564'><br/></div><div class='line' id='LC7565'>		// Attach deferreds</div><div class='line' id='LC7566'>		deferred.promise( jqXHR );</div><div class='line' id='LC7567'>		jqXHR.success = jqXHR.done;</div><div class='line' id='LC7568'>		jqXHR.error = jqXHR.fail;</div><div class='line' id='LC7569'>		jqXHR.complete = completeDeferred.add;</div><div class='line' id='LC7570'><br/></div><div class='line' id='LC7571'>		// Status-dependent callbacks</div><div class='line' id='LC7572'>		jqXHR.statusCode = function( map ) {</div><div class='line' id='LC7573'>			if ( map ) {</div><div class='line' id='LC7574'>				var tmp;</div><div class='line' id='LC7575'>				if ( state &lt; 2 ) {</div><div class='line' id='LC7576'>					for ( tmp in map ) {</div><div class='line' id='LC7577'>						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];</div><div class='line' id='LC7578'>					}</div><div class='line' id='LC7579'>				} else {</div><div class='line' id='LC7580'>					tmp = map[ jqXHR.status ];</div><div class='line' id='LC7581'>					jqXHR.then( tmp, tmp );</div><div class='line' id='LC7582'>				}</div><div class='line' id='LC7583'>			}</div><div class='line' id='LC7584'>			return this;</div><div class='line' id='LC7585'>		};</div><div class='line' id='LC7586'><br/></div><div class='line' id='LC7587'>		// Remove hash character (#7531: and string promotion)</div><div class='line' id='LC7588'>		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)</div><div class='line' id='LC7589'>		// We also use the url parameter if available</div><div class='line' id='LC7590'>		s.url = ( ( url || s.url ) + &quot;&quot; ).replace( rhash, &quot;&quot; ).replace( rprotocol, ajaxLocParts[ 1 ] + &quot;//&quot; );</div><div class='line' id='LC7591'><br/></div><div class='line' id='LC7592'>		// Extract dataTypes list</div><div class='line' id='LC7593'>		s.dataTypes = jQuery.trim( s.dataType || &quot;*&quot; ).toLowerCase().split( rspacesAjax );</div><div class='line' id='LC7594'><br/></div><div class='line' id='LC7595'>		// Determine if a cross-domain request is in order</div><div class='line' id='LC7596'>		if ( s.crossDomain == null ) {</div><div class='line' id='LC7597'>			parts = rurl.exec( s.url.toLowerCase() );</div><div class='line' id='LC7598'>			s.crossDomain = !!( parts &amp;&amp;</div><div class='line' id='LC7599'>				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||</div><div class='line' id='LC7600'>					( parts[ 3 ] || ( parts[ 1 ] === &quot;http:&quot; ? 80 : 443 ) ) !=</div><div class='line' id='LC7601'>						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === &quot;http:&quot; ? 80 : 443 ) ) )</div><div class='line' id='LC7602'>			);</div><div class='line' id='LC7603'>		}</div><div class='line' id='LC7604'><br/></div><div class='line' id='LC7605'>		// Convert data if not already a string</div><div class='line' id='LC7606'>		if ( s.data &amp;&amp; s.processData &amp;&amp; typeof s.data !== &quot;string&quot; ) {</div><div class='line' id='LC7607'>			s.data = jQuery.param( s.data, s.traditional );</div><div class='line' id='LC7608'>		}</div><div class='line' id='LC7609'><br/></div><div class='line' id='LC7610'>		// Apply prefilters</div><div class='line' id='LC7611'>		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );</div><div class='line' id='LC7612'><br/></div><div class='line' id='LC7613'>		// If request was aborted inside a prefilter, stop there</div><div class='line' id='LC7614'>		if ( state === 2 ) {</div><div class='line' id='LC7615'>			return false;</div><div class='line' id='LC7616'>		}</div><div class='line' id='LC7617'><br/></div><div class='line' id='LC7618'>		// We can fire global events as of now if asked to</div><div class='line' id='LC7619'>		fireGlobals = s.global;</div><div class='line' id='LC7620'><br/></div><div class='line' id='LC7621'>		// Uppercase the type</div><div class='line' id='LC7622'>		s.type = s.type.toUpperCase();</div><div class='line' id='LC7623'><br/></div><div class='line' id='LC7624'>		// Determine if request has content</div><div class='line' id='LC7625'>		s.hasContent = !rnoContent.test( s.type );</div><div class='line' id='LC7626'><br/></div><div class='line' id='LC7627'>		// Watch for a new set of requests</div><div class='line' id='LC7628'>		if ( fireGlobals &amp;&amp; jQuery.active++ === 0 ) {</div><div class='line' id='LC7629'>			jQuery.event.trigger( &quot;ajaxStart&quot; );</div><div class='line' id='LC7630'>		}</div><div class='line' id='LC7631'><br/></div><div class='line' id='LC7632'>		// More options handling for requests with no content</div><div class='line' id='LC7633'>		if ( !s.hasContent ) {</div><div class='line' id='LC7634'><br/></div><div class='line' id='LC7635'>			// If data is available, append data to url</div><div class='line' id='LC7636'>			if ( s.data ) {</div><div class='line' id='LC7637'>				s.url += ( rquery.test( s.url ) ? &quot;&amp;&quot; : &quot;?&quot; ) + s.data;</div><div class='line' id='LC7638'>				// #9682: remove data so that it&#39;s not used in an eventual retry</div><div class='line' id='LC7639'>				delete s.data;</div><div class='line' id='LC7640'>			}</div><div class='line' id='LC7641'><br/></div><div class='line' id='LC7642'>			// Get ifModifiedKey before adding the anti-cache parameter</div><div class='line' id='LC7643'>			ifModifiedKey = s.url;</div><div class='line' id='LC7644'><br/></div><div class='line' id='LC7645'>			// Add anti-cache in url if needed</div><div class='line' id='LC7646'>			if ( s.cache === false ) {</div><div class='line' id='LC7647'><br/></div><div class='line' id='LC7648'>				var ts = jQuery.now(),</div><div class='line' id='LC7649'>					// try replacing _= if it is there</div><div class='line' id='LC7650'>					ret = s.url.replace( rts, &quot;$1_=&quot; + ts );</div><div class='line' id='LC7651'><br/></div><div class='line' id='LC7652'>				// if nothing was replaced, add timestamp to the end</div><div class='line' id='LC7653'>				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? &quot;&amp;&quot; : &quot;?&quot; ) + &quot;_=&quot; + ts : &quot;&quot; );</div><div class='line' id='LC7654'>			}</div><div class='line' id='LC7655'>		}</div><div class='line' id='LC7656'><br/></div><div class='line' id='LC7657'>		// Set the correct header, if data is being sent</div><div class='line' id='LC7658'>		if ( s.data &amp;&amp; s.hasContent &amp;&amp; s.contentType !== false || options.contentType ) {</div><div class='line' id='LC7659'>			jqXHR.setRequestHeader( &quot;Content-Type&quot;, s.contentType );</div><div class='line' id='LC7660'>		}</div><div class='line' id='LC7661'><br/></div><div class='line' id='LC7662'>		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</div><div class='line' id='LC7663'>		if ( s.ifModified ) {</div><div class='line' id='LC7664'>			ifModifiedKey = ifModifiedKey || s.url;</div><div class='line' id='LC7665'>			if ( jQuery.lastModified[ ifModifiedKey ] ) {</div><div class='line' id='LC7666'>				jqXHR.setRequestHeader( &quot;If-Modified-Since&quot;, jQuery.lastModified[ ifModifiedKey ] );</div><div class='line' id='LC7667'>			}</div><div class='line' id='LC7668'>			if ( jQuery.etag[ ifModifiedKey ] ) {</div><div class='line' id='LC7669'>				jqXHR.setRequestHeader( &quot;If-None-Match&quot;, jQuery.etag[ ifModifiedKey ] );</div><div class='line' id='LC7670'>			}</div><div class='line' id='LC7671'>		}</div><div class='line' id='LC7672'><br/></div><div class='line' id='LC7673'>		// Set the Accepts header for the server, depending on the dataType</div><div class='line' id='LC7674'>		jqXHR.setRequestHeader(</div><div class='line' id='LC7675'>			&quot;Accept&quot;,</div><div class='line' id='LC7676'>			s.dataTypes[ 0 ] &amp;&amp; s.accepts[ s.dataTypes[0] ] ?</div><div class='line' id='LC7677'>				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== &quot;*&quot; ? &quot;, &quot; + allTypes + &quot;; q=0.01&quot; : &quot;&quot; ) :</div><div class='line' id='LC7678'>				s.accepts[ &quot;*&quot; ]</div><div class='line' id='LC7679'>		);</div><div class='line' id='LC7680'><br/></div><div class='line' id='LC7681'>		// Check for headers option</div><div class='line' id='LC7682'>		for ( i in s.headers ) {</div><div class='line' id='LC7683'>			jqXHR.setRequestHeader( i, s.headers[ i ] );</div><div class='line' id='LC7684'>		}</div><div class='line' id='LC7685'><br/></div><div class='line' id='LC7686'>		// Allow custom headers/mimetypes and early abort</div><div class='line' id='LC7687'>		if ( s.beforeSend &amp;&amp; ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {</div><div class='line' id='LC7688'>				// Abort if not done already</div><div class='line' id='LC7689'>				jqXHR.abort();</div><div class='line' id='LC7690'>				return false;</div><div class='line' id='LC7691'><br/></div><div class='line' id='LC7692'>		}</div><div class='line' id='LC7693'><br/></div><div class='line' id='LC7694'>		// Install callbacks on deferreds</div><div class='line' id='LC7695'>		for ( i in { success: 1, error: 1, complete: 1 } ) {</div><div class='line' id='LC7696'>			jqXHR[ i ]( s[ i ] );</div><div class='line' id='LC7697'>		}</div><div class='line' id='LC7698'><br/></div><div class='line' id='LC7699'>		// Get transport</div><div class='line' id='LC7700'>		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );</div><div class='line' id='LC7701'><br/></div><div class='line' id='LC7702'>		// If no transport, we auto-abort</div><div class='line' id='LC7703'>		if ( !transport ) {</div><div class='line' id='LC7704'>			done( -1, &quot;No Transport&quot; );</div><div class='line' id='LC7705'>		} else {</div><div class='line' id='LC7706'>			jqXHR.readyState = 1;</div><div class='line' id='LC7707'>			// Send global event</div><div class='line' id='LC7708'>			if ( fireGlobals ) {</div><div class='line' id='LC7709'>				globalEventContext.trigger( &quot;ajaxSend&quot;, [ jqXHR, s ] );</div><div class='line' id='LC7710'>			}</div><div class='line' id='LC7711'>			// Timeout</div><div class='line' id='LC7712'>			if ( s.async &amp;&amp; s.timeout &gt; 0 ) {</div><div class='line' id='LC7713'>				timeoutTimer = setTimeout( function(){</div><div class='line' id='LC7714'>					jqXHR.abort( &quot;timeout&quot; );</div><div class='line' id='LC7715'>				}, s.timeout );</div><div class='line' id='LC7716'>			}</div><div class='line' id='LC7717'><br/></div><div class='line' id='LC7718'>			try {</div><div class='line' id='LC7719'>				state = 1;</div><div class='line' id='LC7720'>				transport.send( requestHeaders, done );</div><div class='line' id='LC7721'>			} catch (e) {</div><div class='line' id='LC7722'>				// Propagate exception as error if not done</div><div class='line' id='LC7723'>				if ( state &lt; 2 ) {</div><div class='line' id='LC7724'>					done( -1, e );</div><div class='line' id='LC7725'>				// Simply rethrow otherwise</div><div class='line' id='LC7726'>				} else {</div><div class='line' id='LC7727'>					throw e;</div><div class='line' id='LC7728'>				}</div><div class='line' id='LC7729'>			}</div><div class='line' id='LC7730'>		}</div><div class='line' id='LC7731'><br/></div><div class='line' id='LC7732'>		return jqXHR;</div><div class='line' id='LC7733'>	},</div><div class='line' id='LC7734'><br/></div><div class='line' id='LC7735'>	// Serialize an array of form elements or a set of</div><div class='line' id='LC7736'>	// key/values into a query string</div><div class='line' id='LC7737'>	param: function( a, traditional ) {</div><div class='line' id='LC7738'>		var s = [],</div><div class='line' id='LC7739'>			add = function( key, value ) {</div><div class='line' id='LC7740'>				// If value is a function, invoke it and return its value</div><div class='line' id='LC7741'>				value = jQuery.isFunction( value ) ? value() : value;</div><div class='line' id='LC7742'>				s[ s.length ] = encodeURIComponent( key ) + &quot;=&quot; + encodeURIComponent( value );</div><div class='line' id='LC7743'>			};</div><div class='line' id='LC7744'><br/></div><div class='line' id='LC7745'>		// Set traditional to true for jQuery &lt;= 1.3.2 behavior.</div><div class='line' id='LC7746'>		if ( traditional === undefined ) {</div><div class='line' id='LC7747'>			traditional = jQuery.ajaxSettings.traditional;</div><div class='line' id='LC7748'>		}</div><div class='line' id='LC7749'><br/></div><div class='line' id='LC7750'>		// If an array was passed in, assume that it is an array of form elements.</div><div class='line' id='LC7751'>		if ( jQuery.isArray( a ) || ( a.jquery &amp;&amp; !jQuery.isPlainObject( a ) ) ) {</div><div class='line' id='LC7752'>			// Serialize the form elements</div><div class='line' id='LC7753'>			jQuery.each( a, function() {</div><div class='line' id='LC7754'>				add( this.name, this.value );</div><div class='line' id='LC7755'>			});</div><div class='line' id='LC7756'><br/></div><div class='line' id='LC7757'>		} else {</div><div class='line' id='LC7758'>			// If traditional, encode the &quot;old&quot; way (the way 1.3.2 or older</div><div class='line' id='LC7759'>			// did it), otherwise encode params recursively.</div><div class='line' id='LC7760'>			for ( var prefix in a ) {</div><div class='line' id='LC7761'>				buildParams( prefix, a[ prefix ], traditional, add );</div><div class='line' id='LC7762'>			}</div><div class='line' id='LC7763'>		}</div><div class='line' id='LC7764'><br/></div><div class='line' id='LC7765'>		// Return the resulting serialization</div><div class='line' id='LC7766'>		return s.join( &quot;&amp;&quot; ).replace( r20, &quot;+&quot; );</div><div class='line' id='LC7767'>	}</div><div class='line' id='LC7768'>});</div><div class='line' id='LC7769'><br/></div><div class='line' id='LC7770'>function buildParams( prefix, obj, traditional, add ) {</div><div class='line' id='LC7771'>	if ( jQuery.isArray( obj ) ) {</div><div class='line' id='LC7772'>		// Serialize array item.</div><div class='line' id='LC7773'>		jQuery.each( obj, function( i, v ) {</div><div class='line' id='LC7774'>			if ( traditional || rbracket.test( prefix ) ) {</div><div class='line' id='LC7775'>				// Treat each array item as a scalar.</div><div class='line' id='LC7776'>				add( prefix, v );</div><div class='line' id='LC7777'><br/></div><div class='line' id='LC7778'>			} else {</div><div class='line' id='LC7779'>				// If array item is non-scalar (array or object), encode its</div><div class='line' id='LC7780'>				// numeric index to resolve deserialization ambiguity issues.</div><div class='line' id='LC7781'>				// Note that rack (as of 1.0.0) can&#39;t currently deserialize</div><div class='line' id='LC7782'>				// nested arrays properly, and attempting to do so may cause</div><div class='line' id='LC7783'>				// a server error. Possible fixes are to modify rack&#39;s</div><div class='line' id='LC7784'>				// deserialization algorithm or to provide an option or flag</div><div class='line' id='LC7785'>				// to force array serialization to be shallow.</div><div class='line' id='LC7786'>				buildParams( prefix + &quot;[&quot; + ( typeof v === &quot;object&quot; ? i : &quot;&quot; ) + &quot;]&quot;, v, traditional, add );</div><div class='line' id='LC7787'>			}</div><div class='line' id='LC7788'>		});</div><div class='line' id='LC7789'><br/></div><div class='line' id='LC7790'>	} else if ( !traditional &amp;&amp; jQuery.type( obj ) === &quot;object&quot; ) {</div><div class='line' id='LC7791'>		// Serialize object item.</div><div class='line' id='LC7792'>		for ( var name in obj ) {</div><div class='line' id='LC7793'>			buildParams( prefix + &quot;[&quot; + name + &quot;]&quot;, obj[ name ], traditional, add );</div><div class='line' id='LC7794'>		}</div><div class='line' id='LC7795'><br/></div><div class='line' id='LC7796'>	} else {</div><div class='line' id='LC7797'>		// Serialize scalar item.</div><div class='line' id='LC7798'>		add( prefix, obj );</div><div class='line' id='LC7799'>	}</div><div class='line' id='LC7800'>}</div><div class='line' id='LC7801'><br/></div><div class='line' id='LC7802'>// This is still on the jQuery object... for now</div><div class='line' id='LC7803'>// Want to move this to jQuery.ajax some day</div><div class='line' id='LC7804'>jQuery.extend({</div><div class='line' id='LC7805'><br/></div><div class='line' id='LC7806'>	// Counter for holding the number of active queries</div><div class='line' id='LC7807'>	active: 0,</div><div class='line' id='LC7808'><br/></div><div class='line' id='LC7809'>	// Last-Modified header cache for next request</div><div class='line' id='LC7810'>	lastModified: {},</div><div class='line' id='LC7811'>	etag: {}</div><div class='line' id='LC7812'><br/></div><div class='line' id='LC7813'>});</div><div class='line' id='LC7814'><br/></div><div class='line' id='LC7815'>/* Handles responses to an ajax request:</div><div class='line' id='LC7816'>&nbsp;* - sets all responseXXX fields accordingly</div><div class='line' id='LC7817'>&nbsp;* - finds the right dataType (mediates between content-type and expected dataType)</div><div class='line' id='LC7818'>&nbsp;* - returns the corresponding response</div><div class='line' id='LC7819'>&nbsp;*/</div><div class='line' id='LC7820'>function ajaxHandleResponses( s, jqXHR, responses ) {</div><div class='line' id='LC7821'><br/></div><div class='line' id='LC7822'>	var contents = s.contents,</div><div class='line' id='LC7823'>		dataTypes = s.dataTypes,</div><div class='line' id='LC7824'>		responseFields = s.responseFields,</div><div class='line' id='LC7825'>		ct,</div><div class='line' id='LC7826'>		type,</div><div class='line' id='LC7827'>		finalDataType,</div><div class='line' id='LC7828'>		firstDataType;</div><div class='line' id='LC7829'><br/></div><div class='line' id='LC7830'>	// Fill responseXXX fields</div><div class='line' id='LC7831'>	for ( type in responseFields ) {</div><div class='line' id='LC7832'>		if ( type in responses ) {</div><div class='line' id='LC7833'>			jqXHR[ responseFields[type] ] = responses[ type ];</div><div class='line' id='LC7834'>		}</div><div class='line' id='LC7835'>	}</div><div class='line' id='LC7836'><br/></div><div class='line' id='LC7837'>	// Remove auto dataType and get content-type in the process</div><div class='line' id='LC7838'>	while( dataTypes[ 0 ] === &quot;*&quot; ) {</div><div class='line' id='LC7839'>		dataTypes.shift();</div><div class='line' id='LC7840'>		if ( ct === undefined ) {</div><div class='line' id='LC7841'>			ct = s.mimeType || jqXHR.getResponseHeader( &quot;content-type&quot; );</div><div class='line' id='LC7842'>		}</div><div class='line' id='LC7843'>	}</div><div class='line' id='LC7844'><br/></div><div class='line' id='LC7845'>	// Check if we&#39;re dealing with a known content-type</div><div class='line' id='LC7846'>	if ( ct ) {</div><div class='line' id='LC7847'>		for ( type in contents ) {</div><div class='line' id='LC7848'>			if ( contents[ type ] &amp;&amp; contents[ type ].test( ct ) ) {</div><div class='line' id='LC7849'>				dataTypes.unshift( type );</div><div class='line' id='LC7850'>				break;</div><div class='line' id='LC7851'>			}</div><div class='line' id='LC7852'>		}</div><div class='line' id='LC7853'>	}</div><div class='line' id='LC7854'><br/></div><div class='line' id='LC7855'>	// Check to see if we have a response for the expected dataType</div><div class='line' id='LC7856'>	if ( dataTypes[ 0 ] in responses ) {</div><div class='line' id='LC7857'>		finalDataType = dataTypes[ 0 ];</div><div class='line' id='LC7858'>	} else {</div><div class='line' id='LC7859'>		// Try convertible dataTypes</div><div class='line' id='LC7860'>		for ( type in responses ) {</div><div class='line' id='LC7861'>			if ( !dataTypes[ 0 ] || s.converters[ type + &quot; &quot; + dataTypes[0] ] ) {</div><div class='line' id='LC7862'>				finalDataType = type;</div><div class='line' id='LC7863'>				break;</div><div class='line' id='LC7864'>			}</div><div class='line' id='LC7865'>			if ( !firstDataType ) {</div><div class='line' id='LC7866'>				firstDataType = type;</div><div class='line' id='LC7867'>			}</div><div class='line' id='LC7868'>		}</div><div class='line' id='LC7869'>		// Or just use first one</div><div class='line' id='LC7870'>		finalDataType = finalDataType || firstDataType;</div><div class='line' id='LC7871'>	}</div><div class='line' id='LC7872'><br/></div><div class='line' id='LC7873'>	// If we found a dataType</div><div class='line' id='LC7874'>	// We add the dataType to the list if needed</div><div class='line' id='LC7875'>	// and return the corresponding response</div><div class='line' id='LC7876'>	if ( finalDataType ) {</div><div class='line' id='LC7877'>		if ( finalDataType !== dataTypes[ 0 ] ) {</div><div class='line' id='LC7878'>			dataTypes.unshift( finalDataType );</div><div class='line' id='LC7879'>		}</div><div class='line' id='LC7880'>		return responses[ finalDataType ];</div><div class='line' id='LC7881'>	}</div><div class='line' id='LC7882'>}</div><div class='line' id='LC7883'><br/></div><div class='line' id='LC7884'>// Chain conversions given the request and the original response</div><div class='line' id='LC7885'>function ajaxConvert( s, response ) {</div><div class='line' id='LC7886'><br/></div><div class='line' id='LC7887'>	// Apply the dataFilter if provided</div><div class='line' id='LC7888'>	if ( s.dataFilter ) {</div><div class='line' id='LC7889'>		response = s.dataFilter( response, s.dataType );</div><div class='line' id='LC7890'>	}</div><div class='line' id='LC7891'><br/></div><div class='line' id='LC7892'>	var dataTypes = s.dataTypes,</div><div class='line' id='LC7893'>		converters = {},</div><div class='line' id='LC7894'>		i,</div><div class='line' id='LC7895'>		key,</div><div class='line' id='LC7896'>		length = dataTypes.length,</div><div class='line' id='LC7897'>		tmp,</div><div class='line' id='LC7898'>		// Current and previous dataTypes</div><div class='line' id='LC7899'>		current = dataTypes[ 0 ],</div><div class='line' id='LC7900'>		prev,</div><div class='line' id='LC7901'>		// Conversion expression</div><div class='line' id='LC7902'>		conversion,</div><div class='line' id='LC7903'>		// Conversion function</div><div class='line' id='LC7904'>		conv,</div><div class='line' id='LC7905'>		// Conversion functions (transitive conversion)</div><div class='line' id='LC7906'>		conv1,</div><div class='line' id='LC7907'>		conv2;</div><div class='line' id='LC7908'><br/></div><div class='line' id='LC7909'>	// For each dataType in the chain</div><div class='line' id='LC7910'>	for ( i = 1; i &lt; length; i++ ) {</div><div class='line' id='LC7911'><br/></div><div class='line' id='LC7912'>		// Create converters map</div><div class='line' id='LC7913'>		// with lowercased keys</div><div class='line' id='LC7914'>		if ( i === 1 ) {</div><div class='line' id='LC7915'>			for ( key in s.converters ) {</div><div class='line' id='LC7916'>				if ( typeof key === &quot;string&quot; ) {</div><div class='line' id='LC7917'>					converters[ key.toLowerCase() ] = s.converters[ key ];</div><div class='line' id='LC7918'>				}</div><div class='line' id='LC7919'>			}</div><div class='line' id='LC7920'>		}</div><div class='line' id='LC7921'><br/></div><div class='line' id='LC7922'>		// Get the dataTypes</div><div class='line' id='LC7923'>		prev = current;</div><div class='line' id='LC7924'>		current = dataTypes[ i ];</div><div class='line' id='LC7925'><br/></div><div class='line' id='LC7926'>		// If current is auto dataType, update it to prev</div><div class='line' id='LC7927'>		if ( current === &quot;*&quot; ) {</div><div class='line' id='LC7928'>			current = prev;</div><div class='line' id='LC7929'>		// If no auto and dataTypes are actually different</div><div class='line' id='LC7930'>		} else if ( prev !== &quot;*&quot; &amp;&amp; prev !== current ) {</div><div class='line' id='LC7931'><br/></div><div class='line' id='LC7932'>			// Get the converter</div><div class='line' id='LC7933'>			conversion = prev + &quot; &quot; + current;</div><div class='line' id='LC7934'>			conv = converters[ conversion ] || converters[ &quot;* &quot; + current ];</div><div class='line' id='LC7935'><br/></div><div class='line' id='LC7936'>			// If there is no direct converter, search transitively</div><div class='line' id='LC7937'>			if ( !conv ) {</div><div class='line' id='LC7938'>				conv2 = undefined;</div><div class='line' id='LC7939'>				for ( conv1 in converters ) {</div><div class='line' id='LC7940'>					tmp = conv1.split( &quot; &quot; );</div><div class='line' id='LC7941'>					if ( tmp[ 0 ] === prev || tmp[ 0 ] === &quot;*&quot; ) {</div><div class='line' id='LC7942'>						conv2 = converters[ tmp[1] + &quot; &quot; + current ];</div><div class='line' id='LC7943'>						if ( conv2 ) {</div><div class='line' id='LC7944'>							conv1 = converters[ conv1 ];</div><div class='line' id='LC7945'>							if ( conv1 === true ) {</div><div class='line' id='LC7946'>								conv = conv2;</div><div class='line' id='LC7947'>							} else if ( conv2 === true ) {</div><div class='line' id='LC7948'>								conv = conv1;</div><div class='line' id='LC7949'>							}</div><div class='line' id='LC7950'>							break;</div><div class='line' id='LC7951'>						}</div><div class='line' id='LC7952'>					}</div><div class='line' id='LC7953'>				}</div><div class='line' id='LC7954'>			}</div><div class='line' id='LC7955'>			// If we found no converter, dispatch an error</div><div class='line' id='LC7956'>			if ( !( conv || conv2 ) ) {</div><div class='line' id='LC7957'>				jQuery.error( &quot;No conversion from &quot; + conversion.replace(&quot; &quot;,&quot; to &quot;) );</div><div class='line' id='LC7958'>			}</div><div class='line' id='LC7959'>			// If found converter is not an equivalence</div><div class='line' id='LC7960'>			if ( conv !== true ) {</div><div class='line' id='LC7961'>				// Convert with 1 or 2 converters accordingly</div><div class='line' id='LC7962'>				response = conv ? conv( response ) : conv2( conv1(response) );</div><div class='line' id='LC7963'>			}</div><div class='line' id='LC7964'>		}</div><div class='line' id='LC7965'>	}</div><div class='line' id='LC7966'>	return response;</div><div class='line' id='LC7967'>}</div><div class='line' id='LC7968'><br/></div><div class='line' id='LC7969'><br/></div><div class='line' id='LC7970'><br/></div><div class='line' id='LC7971'><br/></div><div class='line' id='LC7972'>var jsc = jQuery.now(),</div><div class='line' id='LC7973'>	jsre = /(\=)\?(&amp;|$)|\?\?/i;</div><div class='line' id='LC7974'><br/></div><div class='line' id='LC7975'>// Default jsonp settings</div><div class='line' id='LC7976'>jQuery.ajaxSetup({</div><div class='line' id='LC7977'>	jsonp: &quot;callback&quot;,</div><div class='line' id='LC7978'>	jsonpCallback: function() {</div><div class='line' id='LC7979'>		return jQuery.expando + &quot;_&quot; + ( jsc++ );</div><div class='line' id='LC7980'>	}</div><div class='line' id='LC7981'>});</div><div class='line' id='LC7982'><br/></div><div class='line' id='LC7983'>// Detect, normalize options and install callbacks for jsonp requests</div><div class='line' id='LC7984'>jQuery.ajaxPrefilter( &quot;json jsonp&quot;, function( s, originalSettings, jqXHR ) {</div><div class='line' id='LC7985'><br/></div><div class='line' id='LC7986'>	var inspectData = ( typeof s.data === &quot;string&quot; ) &amp;&amp; /^application\/x\-www\-form\-urlencoded/.test( s.contentType );</div><div class='line' id='LC7987'><br/></div><div class='line' id='LC7988'>	if ( s.dataTypes[ 0 ] === &quot;jsonp&quot; ||</div><div class='line' id='LC7989'>		s.jsonp !== false &amp;&amp; ( jsre.test( s.url ) ||</div><div class='line' id='LC7990'>				inspectData &amp;&amp; jsre.test( s.data ) ) ) {</div><div class='line' id='LC7991'><br/></div><div class='line' id='LC7992'>		var responseContainer,</div><div class='line' id='LC7993'>			jsonpCallback = s.jsonpCallback =</div><div class='line' id='LC7994'>				jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,</div><div class='line' id='LC7995'>			previous = window[ jsonpCallback ],</div><div class='line' id='LC7996'>			url = s.url,</div><div class='line' id='LC7997'>			data = s.data,</div><div class='line' id='LC7998'>			replace = &quot;$1&quot; + jsonpCallback + &quot;$2&quot;;</div><div class='line' id='LC7999'><br/></div><div class='line' id='LC8000'>		if ( s.jsonp !== false ) {</div><div class='line' id='LC8001'>			url = url.replace( jsre, replace );</div><div class='line' id='LC8002'>			if ( s.url === url ) {</div><div class='line' id='LC8003'>				if ( inspectData ) {</div><div class='line' id='LC8004'>					data = data.replace( jsre, replace );</div><div class='line' id='LC8005'>				}</div><div class='line' id='LC8006'>				if ( s.data === data ) {</div><div class='line' id='LC8007'>					// Add callback manually</div><div class='line' id='LC8008'>					url += (/\?/.test( url ) ? &quot;&amp;&quot; : &quot;?&quot;) + s.jsonp + &quot;=&quot; + jsonpCallback;</div><div class='line' id='LC8009'>				}</div><div class='line' id='LC8010'>			}</div><div class='line' id='LC8011'>		}</div><div class='line' id='LC8012'><br/></div><div class='line' id='LC8013'>		s.url = url;</div><div class='line' id='LC8014'>		s.data = data;</div><div class='line' id='LC8015'><br/></div><div class='line' id='LC8016'>		// Install callback</div><div class='line' id='LC8017'>		window[ jsonpCallback ] = function( response ) {</div><div class='line' id='LC8018'>			responseContainer = [ response ];</div><div class='line' id='LC8019'>		};</div><div class='line' id='LC8020'><br/></div><div class='line' id='LC8021'>		// Clean-up function</div><div class='line' id='LC8022'>		jqXHR.always(function() {</div><div class='line' id='LC8023'>			// Set callback back to previous value</div><div class='line' id='LC8024'>			window[ jsonpCallback ] = previous;</div><div class='line' id='LC8025'>			// Call if it was a function and we have a response</div><div class='line' id='LC8026'>			if ( responseContainer &amp;&amp; jQuery.isFunction( previous ) ) {</div><div class='line' id='LC8027'>				window[ jsonpCallback ]( responseContainer[ 0 ] );</div><div class='line' id='LC8028'>			}</div><div class='line' id='LC8029'>		});</div><div class='line' id='LC8030'><br/></div><div class='line' id='LC8031'>		// Use data converter to retrieve json after script execution</div><div class='line' id='LC8032'>		s.converters[&quot;script json&quot;] = function() {</div><div class='line' id='LC8033'>			if ( !responseContainer ) {</div><div class='line' id='LC8034'>				jQuery.error( jsonpCallback + &quot; was not called&quot; );</div><div class='line' id='LC8035'>			}</div><div class='line' id='LC8036'>			return responseContainer[ 0 ];</div><div class='line' id='LC8037'>		};</div><div class='line' id='LC8038'><br/></div><div class='line' id='LC8039'>		// force json dataType</div><div class='line' id='LC8040'>		s.dataTypes[ 0 ] = &quot;json&quot;;</div><div class='line' id='LC8041'><br/></div><div class='line' id='LC8042'>		// Delegate to script</div><div class='line' id='LC8043'>		return &quot;script&quot;;</div><div class='line' id='LC8044'>	}</div><div class='line' id='LC8045'>});</div><div class='line' id='LC8046'><br/></div><div class='line' id='LC8047'><br/></div><div class='line' id='LC8048'><br/></div><div class='line' id='LC8049'><br/></div><div class='line' id='LC8050'>// Install script dataType</div><div class='line' id='LC8051'>jQuery.ajaxSetup({</div><div class='line' id='LC8052'>	accepts: {</div><div class='line' id='LC8053'>		script: &quot;text/javascript, application/javascript, application/ecmascript, application/x-ecmascript&quot;</div><div class='line' id='LC8054'>	},</div><div class='line' id='LC8055'>	contents: {</div><div class='line' id='LC8056'>		script: /javascript|ecmascript/</div><div class='line' id='LC8057'>	},</div><div class='line' id='LC8058'>	converters: {</div><div class='line' id='LC8059'>		&quot;text script&quot;: function( text ) {</div><div class='line' id='LC8060'>			jQuery.globalEval( text );</div><div class='line' id='LC8061'>			return text;</div><div class='line' id='LC8062'>		}</div><div class='line' id='LC8063'>	}</div><div class='line' id='LC8064'>});</div><div class='line' id='LC8065'><br/></div><div class='line' id='LC8066'>// Handle cache&#39;s special case and global</div><div class='line' id='LC8067'>jQuery.ajaxPrefilter( &quot;script&quot;, function( s ) {</div><div class='line' id='LC8068'>	if ( s.cache === undefined ) {</div><div class='line' id='LC8069'>		s.cache = false;</div><div class='line' id='LC8070'>	}</div><div class='line' id='LC8071'>	if ( s.crossDomain ) {</div><div class='line' id='LC8072'>		s.type = &quot;GET&quot;;</div><div class='line' id='LC8073'>		s.global = false;</div><div class='line' id='LC8074'>	}</div><div class='line' id='LC8075'>});</div><div class='line' id='LC8076'><br/></div><div class='line' id='LC8077'>// Bind script tag hack transport</div><div class='line' id='LC8078'>jQuery.ajaxTransport( &quot;script&quot;, function(s) {</div><div class='line' id='LC8079'><br/></div><div class='line' id='LC8080'>	// This transport only deals with cross domain requests</div><div class='line' id='LC8081'>	if ( s.crossDomain ) {</div><div class='line' id='LC8082'><br/></div><div class='line' id='LC8083'>		var script,</div><div class='line' id='LC8084'>			head = document.head || document.getElementsByTagName( &quot;head&quot; )[0] || document.documentElement;</div><div class='line' id='LC8085'><br/></div><div class='line' id='LC8086'>		return {</div><div class='line' id='LC8087'><br/></div><div class='line' id='LC8088'>			send: function( _, callback ) {</div><div class='line' id='LC8089'><br/></div><div class='line' id='LC8090'>				script = document.createElement( &quot;script&quot; );</div><div class='line' id='LC8091'><br/></div><div class='line' id='LC8092'>				script.async = &quot;async&quot;;</div><div class='line' id='LC8093'><br/></div><div class='line' id='LC8094'>				if ( s.scriptCharset ) {</div><div class='line' id='LC8095'>					script.charset = s.scriptCharset;</div><div class='line' id='LC8096'>				}</div><div class='line' id='LC8097'><br/></div><div class='line' id='LC8098'>				script.src = s.url;</div><div class='line' id='LC8099'><br/></div><div class='line' id='LC8100'>				// Attach handlers for all browsers</div><div class='line' id='LC8101'>				script.onload = script.onreadystatechange = function( _, isAbort ) {</div><div class='line' id='LC8102'><br/></div><div class='line' id='LC8103'>					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {</div><div class='line' id='LC8104'><br/></div><div class='line' id='LC8105'>						// Handle memory leak in IE</div><div class='line' id='LC8106'>						script.onload = script.onreadystatechange = null;</div><div class='line' id='LC8107'><br/></div><div class='line' id='LC8108'>						// Remove the script</div><div class='line' id='LC8109'>						if ( head &amp;&amp; script.parentNode ) {</div><div class='line' id='LC8110'>							head.removeChild( script );</div><div class='line' id='LC8111'>						}</div><div class='line' id='LC8112'><br/></div><div class='line' id='LC8113'>						// Dereference the script</div><div class='line' id='LC8114'>						script = undefined;</div><div class='line' id='LC8115'><br/></div><div class='line' id='LC8116'>						// Callback if not abort</div><div class='line' id='LC8117'>						if ( !isAbort ) {</div><div class='line' id='LC8118'>							callback( 200, &quot;success&quot; );</div><div class='line' id='LC8119'>						}</div><div class='line' id='LC8120'>					}</div><div class='line' id='LC8121'>				};</div><div class='line' id='LC8122'>				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.</div><div class='line' id='LC8123'>				// This arises when a base node is used (#2709 and #4378).</div><div class='line' id='LC8124'>				head.insertBefore( script, head.firstChild );</div><div class='line' id='LC8125'>			},</div><div class='line' id='LC8126'><br/></div><div class='line' id='LC8127'>			abort: function() {</div><div class='line' id='LC8128'>				if ( script ) {</div><div class='line' id='LC8129'>					script.onload( 0, 1 );</div><div class='line' id='LC8130'>				}</div><div class='line' id='LC8131'>			}</div><div class='line' id='LC8132'>		};</div><div class='line' id='LC8133'>	}</div><div class='line' id='LC8134'>});</div><div class='line' id='LC8135'><br/></div><div class='line' id='LC8136'><br/></div><div class='line' id='LC8137'><br/></div><div class='line' id='LC8138'><br/></div><div class='line' id='LC8139'>var // #5280: Internet Explorer will keep connections alive if we don&#39;t abort on unload</div><div class='line' id='LC8140'>	xhrOnUnloadAbort = window.ActiveXObject ? function() {</div><div class='line' id='LC8141'>		// Abort all pending requests</div><div class='line' id='LC8142'>		for ( var key in xhrCallbacks ) {</div><div class='line' id='LC8143'>			xhrCallbacks[ key ]( 0, 1 );</div><div class='line' id='LC8144'>		}</div><div class='line' id='LC8145'>	} : false,</div><div class='line' id='LC8146'>	xhrId = 0,</div><div class='line' id='LC8147'>	xhrCallbacks;</div><div class='line' id='LC8148'><br/></div><div class='line' id='LC8149'>// Functions to create xhrs</div><div class='line' id='LC8150'>function createStandardXHR() {</div><div class='line' id='LC8151'>	try {</div><div class='line' id='LC8152'>		return new window.XMLHttpRequest();</div><div class='line' id='LC8153'>	} catch( e ) {}</div><div class='line' id='LC8154'>}</div><div class='line' id='LC8155'><br/></div><div class='line' id='LC8156'>function createActiveXHR() {</div><div class='line' id='LC8157'>	try {</div><div class='line' id='LC8158'>		return new window.ActiveXObject( &quot;Microsoft.XMLHTTP&quot; );</div><div class='line' id='LC8159'>	} catch( e ) {}</div><div class='line' id='LC8160'>}</div><div class='line' id='LC8161'><br/></div><div class='line' id='LC8162'>// Create the request object</div><div class='line' id='LC8163'>// (This is still attached to ajaxSettings for backward compatibility)</div><div class='line' id='LC8164'>jQuery.ajaxSettings.xhr = window.ActiveXObject ?</div><div class='line' id='LC8165'>	/* Microsoft failed to properly</div><div class='line' id='LC8166'>	 * implement the XMLHttpRequest in IE7 (can&#39;t request local files),</div><div class='line' id='LC8167'>	 * so we use the ActiveXObject when it is available</div><div class='line' id='LC8168'>	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so</div><div class='line' id='LC8169'>	 * we need a fallback.</div><div class='line' id='LC8170'>	 */</div><div class='line' id='LC8171'>	function() {</div><div class='line' id='LC8172'>		return !this.isLocal &amp;&amp; createStandardXHR() || createActiveXHR();</div><div class='line' id='LC8173'>	} :</div><div class='line' id='LC8174'>	// For all other browsers, use the standard XMLHttpRequest object</div><div class='line' id='LC8175'>	createStandardXHR;</div><div class='line' id='LC8176'><br/></div><div class='line' id='LC8177'>// Determine support properties</div><div class='line' id='LC8178'>(function( xhr ) {</div><div class='line' id='LC8179'>	jQuery.extend( jQuery.support, {</div><div class='line' id='LC8180'>		ajax: !!xhr,</div><div class='line' id='LC8181'>		cors: !!xhr &amp;&amp; ( &quot;withCredentials&quot; in xhr )</div><div class='line' id='LC8182'>	});</div><div class='line' id='LC8183'>})( jQuery.ajaxSettings.xhr() );</div><div class='line' id='LC8184'><br/></div><div class='line' id='LC8185'>// Create transport if the browser can provide an xhr</div><div class='line' id='LC8186'>if ( jQuery.support.ajax ) {</div><div class='line' id='LC8187'><br/></div><div class='line' id='LC8188'>	jQuery.ajaxTransport(function( s ) {</div><div class='line' id='LC8189'>		// Cross domain only allowed if supported through XMLHttpRequest</div><div class='line' id='LC8190'>		if ( !s.crossDomain || jQuery.support.cors ) {</div><div class='line' id='LC8191'><br/></div><div class='line' id='LC8192'>			var callback;</div><div class='line' id='LC8193'><br/></div><div class='line' id='LC8194'>			return {</div><div class='line' id='LC8195'>				send: function( headers, complete ) {</div><div class='line' id='LC8196'><br/></div><div class='line' id='LC8197'>					// Get a new xhr</div><div class='line' id='LC8198'>					var xhr = s.xhr(),</div><div class='line' id='LC8199'>						handle,</div><div class='line' id='LC8200'>						i;</div><div class='line' id='LC8201'><br/></div><div class='line' id='LC8202'>					// Open the socket</div><div class='line' id='LC8203'>					// Passing null username, generates a login popup on Opera (#2865)</div><div class='line' id='LC8204'>					if ( s.username ) {</div><div class='line' id='LC8205'>						xhr.open( s.type, s.url, s.async, s.username, s.password );</div><div class='line' id='LC8206'>					} else {</div><div class='line' id='LC8207'>						xhr.open( s.type, s.url, s.async );</div><div class='line' id='LC8208'>					}</div><div class='line' id='LC8209'><br/></div><div class='line' id='LC8210'>					// Apply custom fields if provided</div><div class='line' id='LC8211'>					if ( s.xhrFields ) {</div><div class='line' id='LC8212'>						for ( i in s.xhrFields ) {</div><div class='line' id='LC8213'>							xhr[ i ] = s.xhrFields[ i ];</div><div class='line' id='LC8214'>						}</div><div class='line' id='LC8215'>					}</div><div class='line' id='LC8216'><br/></div><div class='line' id='LC8217'>					// Override mime type if needed</div><div class='line' id='LC8218'>					if ( s.mimeType &amp;&amp; xhr.overrideMimeType ) {</div><div class='line' id='LC8219'>						xhr.overrideMimeType( s.mimeType );</div><div class='line' id='LC8220'>					}</div><div class='line' id='LC8221'><br/></div><div class='line' id='LC8222'>					// X-Requested-With header</div><div class='line' id='LC8223'>					// For cross-domain requests, seeing as conditions for a preflight are</div><div class='line' id='LC8224'>					// akin to a jigsaw puzzle, we simply never set it to be sure.</div><div class='line' id='LC8225'>					// (it can always be set on a per-request basis or even using ajaxSetup)</div><div class='line' id='LC8226'>					// For same-domain requests, won&#39;t change header if already provided.</div><div class='line' id='LC8227'>					if ( !s.crossDomain &amp;&amp; !headers[&quot;X-Requested-With&quot;] ) {</div><div class='line' id='LC8228'>						headers[ &quot;X-Requested-With&quot; ] = &quot;XMLHttpRequest&quot;;</div><div class='line' id='LC8229'>					}</div><div class='line' id='LC8230'><br/></div><div class='line' id='LC8231'>					// Need an extra try/catch for cross domain requests in Firefox 3</div><div class='line' id='LC8232'>					try {</div><div class='line' id='LC8233'>						for ( i in headers ) {</div><div class='line' id='LC8234'>							xhr.setRequestHeader( i, headers[ i ] );</div><div class='line' id='LC8235'>						}</div><div class='line' id='LC8236'>					} catch( _ ) {}</div><div class='line' id='LC8237'><br/></div><div class='line' id='LC8238'>					// Do send the request</div><div class='line' id='LC8239'>					// This may raise an exception which is actually</div><div class='line' id='LC8240'>					// handled in jQuery.ajax (so no try/catch here)</div><div class='line' id='LC8241'>					xhr.send( ( s.hasContent &amp;&amp; s.data ) || null );</div><div class='line' id='LC8242'><br/></div><div class='line' id='LC8243'>					// Listener</div><div class='line' id='LC8244'>					callback = function( _, isAbort ) {</div><div class='line' id='LC8245'><br/></div><div class='line' id='LC8246'>						var status,</div><div class='line' id='LC8247'>							statusText,</div><div class='line' id='LC8248'>							responseHeaders,</div><div class='line' id='LC8249'>							responses,</div><div class='line' id='LC8250'>							xml;</div><div class='line' id='LC8251'><br/></div><div class='line' id='LC8252'>						// Firefox throws exceptions when accessing properties</div><div class='line' id='LC8253'>						// of an xhr when a network error occured</div><div class='line' id='LC8254'>						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)</div><div class='line' id='LC8255'>						try {</div><div class='line' id='LC8256'><br/></div><div class='line' id='LC8257'>							// Was never called and is aborted or complete</div><div class='line' id='LC8258'>							if ( callback &amp;&amp; ( isAbort || xhr.readyState === 4 ) ) {</div><div class='line' id='LC8259'><br/></div><div class='line' id='LC8260'>								// Only called once</div><div class='line' id='LC8261'>								callback = undefined;</div><div class='line' id='LC8262'><br/></div><div class='line' id='LC8263'>								// Do not keep as active anymore</div><div class='line' id='LC8264'>								if ( handle ) {</div><div class='line' id='LC8265'>									xhr.onreadystatechange = jQuery.noop;</div><div class='line' id='LC8266'>									if ( xhrOnUnloadAbort ) {</div><div class='line' id='LC8267'>										delete xhrCallbacks[ handle ];</div><div class='line' id='LC8268'>									}</div><div class='line' id='LC8269'>								}</div><div class='line' id='LC8270'><br/></div><div class='line' id='LC8271'>								// If it&#39;s an abort</div><div class='line' id='LC8272'>								if ( isAbort ) {</div><div class='line' id='LC8273'>									// Abort it manually if needed</div><div class='line' id='LC8274'>									if ( xhr.readyState !== 4 ) {</div><div class='line' id='LC8275'>										xhr.abort();</div><div class='line' id='LC8276'>									}</div><div class='line' id='LC8277'>								} else {</div><div class='line' id='LC8278'>									status = xhr.status;</div><div class='line' id='LC8279'>									responseHeaders = xhr.getAllResponseHeaders();</div><div class='line' id='LC8280'>									responses = {};</div><div class='line' id='LC8281'>									xml = xhr.responseXML;</div><div class='line' id='LC8282'><br/></div><div class='line' id='LC8283'>									// Construct response list</div><div class='line' id='LC8284'>									if ( xml &amp;&amp; xml.documentElement /* #4958 */ ) {</div><div class='line' id='LC8285'>										responses.xml = xml;</div><div class='line' id='LC8286'>									}</div><div class='line' id='LC8287'><br/></div><div class='line' id='LC8288'>									// When requesting binary data, IE6-9 will throw an exception</div><div class='line' id='LC8289'>									// on any attempt to access responseText (#11426)</div><div class='line' id='LC8290'>									try {</div><div class='line' id='LC8291'>										responses.text = xhr.responseText;</div><div class='line' id='LC8292'>									} catch( _ ) {</div><div class='line' id='LC8293'>									}</div><div class='line' id='LC8294'><br/></div><div class='line' id='LC8295'>									// Firefox throws an exception when accessing</div><div class='line' id='LC8296'>									// statusText for faulty cross-domain requests</div><div class='line' id='LC8297'>									try {</div><div class='line' id='LC8298'>										statusText = xhr.statusText;</div><div class='line' id='LC8299'>									} catch( e ) {</div><div class='line' id='LC8300'>										// We normalize with Webkit giving an empty statusText</div><div class='line' id='LC8301'>										statusText = &quot;&quot;;</div><div class='line' id='LC8302'>									}</div><div class='line' id='LC8303'><br/></div><div class='line' id='LC8304'>									// Filter status for non standard behaviors</div><div class='line' id='LC8305'><br/></div><div class='line' id='LC8306'>									// If the request is local and we have data: assume a success</div><div class='line' id='LC8307'>									// (success with no data won&#39;t get notified, that&#39;s the best we</div><div class='line' id='LC8308'>									// can do given current implementations)</div><div class='line' id='LC8309'>									if ( !status &amp;&amp; s.isLocal &amp;&amp; !s.crossDomain ) {</div><div class='line' id='LC8310'>										status = responses.text ? 200 : 404;</div><div class='line' id='LC8311'>									// IE - #1450: sometimes returns 1223 when it should be 204</div><div class='line' id='LC8312'>									} else if ( status === 1223 ) {</div><div class='line' id='LC8313'>										status = 204;</div><div class='line' id='LC8314'>									}</div><div class='line' id='LC8315'>								}</div><div class='line' id='LC8316'>							}</div><div class='line' id='LC8317'>						} catch( firefoxAccessException ) {</div><div class='line' id='LC8318'>							if ( !isAbort ) {</div><div class='line' id='LC8319'>								complete( -1, firefoxAccessException );</div><div class='line' id='LC8320'>							}</div><div class='line' id='LC8321'>						}</div><div class='line' id='LC8322'><br/></div><div class='line' id='LC8323'>						// Call complete if needed</div><div class='line' id='LC8324'>						if ( responses ) {</div><div class='line' id='LC8325'>							complete( status, statusText, responses, responseHeaders );</div><div class='line' id='LC8326'>						}</div><div class='line' id='LC8327'>					};</div><div class='line' id='LC8328'><br/></div><div class='line' id='LC8329'>					// if we&#39;re in sync mode or it&#39;s in cache</div><div class='line' id='LC8330'>					// and has been retrieved directly (IE6 &amp; IE7)</div><div class='line' id='LC8331'>					// we need to manually fire the callback</div><div class='line' id='LC8332'>					if ( !s.async || xhr.readyState === 4 ) {</div><div class='line' id='LC8333'>						callback();</div><div class='line' id='LC8334'>					} else {</div><div class='line' id='LC8335'>						handle = ++xhrId;</div><div class='line' id='LC8336'>						if ( xhrOnUnloadAbort ) {</div><div class='line' id='LC8337'>							// Create the active xhrs callbacks list if needed</div><div class='line' id='LC8338'>							// and attach the unload handler</div><div class='line' id='LC8339'>							if ( !xhrCallbacks ) {</div><div class='line' id='LC8340'>								xhrCallbacks = {};</div><div class='line' id='LC8341'>								jQuery( window ).unload( xhrOnUnloadAbort );</div><div class='line' id='LC8342'>							}</div><div class='line' id='LC8343'>							// Add to list of active xhrs callbacks</div><div class='line' id='LC8344'>							xhrCallbacks[ handle ] = callback;</div><div class='line' id='LC8345'>						}</div><div class='line' id='LC8346'>						xhr.onreadystatechange = callback;</div><div class='line' id='LC8347'>					}</div><div class='line' id='LC8348'>				},</div><div class='line' id='LC8349'><br/></div><div class='line' id='LC8350'>				abort: function() {</div><div class='line' id='LC8351'>					if ( callback ) {</div><div class='line' id='LC8352'>						callback(0,1);</div><div class='line' id='LC8353'>					}</div><div class='line' id='LC8354'>				}</div><div class='line' id='LC8355'>			};</div><div class='line' id='LC8356'>		}</div><div class='line' id='LC8357'>	});</div><div class='line' id='LC8358'>}</div><div class='line' id='LC8359'><br/></div><div class='line' id='LC8360'><br/></div><div class='line' id='LC8361'><br/></div><div class='line' id='LC8362'><br/></div><div class='line' id='LC8363'>var elemdisplay = {},</div><div class='line' id='LC8364'>	iframe, iframeDoc,</div><div class='line' id='LC8365'>	rfxtypes = /^(?:toggle|show|hide)$/,</div><div class='line' id='LC8366'>	rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,</div><div class='line' id='LC8367'>	timerId,</div><div class='line' id='LC8368'>	fxAttrs = [</div><div class='line' id='LC8369'>		// height animations</div><div class='line' id='LC8370'>		[ &quot;height&quot;, &quot;marginTop&quot;, &quot;marginBottom&quot;, &quot;paddingTop&quot;, &quot;paddingBottom&quot; ],</div><div class='line' id='LC8371'>		// width animations</div><div class='line' id='LC8372'>		[ &quot;width&quot;, &quot;marginLeft&quot;, &quot;marginRight&quot;, &quot;paddingLeft&quot;, &quot;paddingRight&quot; ],</div><div class='line' id='LC8373'>		// opacity animations</div><div class='line' id='LC8374'>		[ &quot;opacity&quot; ]</div><div class='line' id='LC8375'>	],</div><div class='line' id='LC8376'>	fxNow;</div><div class='line' id='LC8377'><br/></div><div class='line' id='LC8378'>jQuery.fn.extend({</div><div class='line' id='LC8379'>	show: function( speed, easing, callback ) {</div><div class='line' id='LC8380'>		var elem, display;</div><div class='line' id='LC8381'><br/></div><div class='line' id='LC8382'>		if ( speed || speed === 0 ) {</div><div class='line' id='LC8383'>			return this.animate( genFx(&quot;show&quot;, 3), speed, easing, callback );</div><div class='line' id='LC8384'><br/></div><div class='line' id='LC8385'>		} else {</div><div class='line' id='LC8386'>			for ( var i = 0, j = this.length; i &lt; j; i++ ) {</div><div class='line' id='LC8387'>				elem = this[ i ];</div><div class='line' id='LC8388'><br/></div><div class='line' id='LC8389'>				if ( elem.style ) {</div><div class='line' id='LC8390'>					display = elem.style.display;</div><div class='line' id='LC8391'><br/></div><div class='line' id='LC8392'>					// Reset the inline display of this element to learn if it is</div><div class='line' id='LC8393'>					// being hidden by cascaded rules or not</div><div class='line' id='LC8394'>					if ( !jQuery._data(elem, &quot;olddisplay&quot;) &amp;&amp; display === &quot;none&quot; ) {</div><div class='line' id='LC8395'>						display = elem.style.display = &quot;&quot;;</div><div class='line' id='LC8396'>					}</div><div class='line' id='LC8397'><br/></div><div class='line' id='LC8398'>					// Set elements which have been overridden with display: none</div><div class='line' id='LC8399'>					// in a stylesheet to whatever the default browser style is</div><div class='line' id='LC8400'>					// for such an element</div><div class='line' id='LC8401'>					if ( (display === &quot;&quot; &amp;&amp; jQuery.css(elem, &quot;display&quot;) === &quot;none&quot;) ||</div><div class='line' id='LC8402'>						!jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {</div><div class='line' id='LC8403'>						jQuery._data( elem, &quot;olddisplay&quot;, defaultDisplay(elem.nodeName) );</div><div class='line' id='LC8404'>					}</div><div class='line' id='LC8405'>				}</div><div class='line' id='LC8406'>			}</div><div class='line' id='LC8407'><br/></div><div class='line' id='LC8408'>			// Set the display of most of the elements in a second loop</div><div class='line' id='LC8409'>			// to avoid the constant reflow</div><div class='line' id='LC8410'>			for ( i = 0; i &lt; j; i++ ) {</div><div class='line' id='LC8411'>				elem = this[ i ];</div><div class='line' id='LC8412'><br/></div><div class='line' id='LC8413'>				if ( elem.style ) {</div><div class='line' id='LC8414'>					display = elem.style.display;</div><div class='line' id='LC8415'><br/></div><div class='line' id='LC8416'>					if ( display === &quot;&quot; || display === &quot;none&quot; ) {</div><div class='line' id='LC8417'>						elem.style.display = jQuery._data( elem, &quot;olddisplay&quot; ) || &quot;&quot;;</div><div class='line' id='LC8418'>					}</div><div class='line' id='LC8419'>				}</div><div class='line' id='LC8420'>			}</div><div class='line' id='LC8421'><br/></div><div class='line' id='LC8422'>			return this;</div><div class='line' id='LC8423'>		}</div><div class='line' id='LC8424'>	},</div><div class='line' id='LC8425'><br/></div><div class='line' id='LC8426'>	hide: function( speed, easing, callback ) {</div><div class='line' id='LC8427'>		if ( speed || speed === 0 ) {</div><div class='line' id='LC8428'>			return this.animate( genFx(&quot;hide&quot;, 3), speed, easing, callback);</div><div class='line' id='LC8429'><br/></div><div class='line' id='LC8430'>		} else {</div><div class='line' id='LC8431'>			var elem, display,</div><div class='line' id='LC8432'>				i = 0,</div><div class='line' id='LC8433'>				j = this.length;</div><div class='line' id='LC8434'><br/></div><div class='line' id='LC8435'>			for ( ; i &lt; j; i++ ) {</div><div class='line' id='LC8436'>				elem = this[i];</div><div class='line' id='LC8437'>				if ( elem.style ) {</div><div class='line' id='LC8438'>					display = jQuery.css( elem, &quot;display&quot; );</div><div class='line' id='LC8439'><br/></div><div class='line' id='LC8440'>					if ( display !== &quot;none&quot; &amp;&amp; !jQuery._data( elem, &quot;olddisplay&quot; ) ) {</div><div class='line' id='LC8441'>						jQuery._data( elem, &quot;olddisplay&quot;, display );</div><div class='line' id='LC8442'>					}</div><div class='line' id='LC8443'>				}</div><div class='line' id='LC8444'>			}</div><div class='line' id='LC8445'><br/></div><div class='line' id='LC8446'>			// Set the display of the elements in a second loop</div><div class='line' id='LC8447'>			// to avoid the constant reflow</div><div class='line' id='LC8448'>			for ( i = 0; i &lt; j; i++ ) {</div><div class='line' id='LC8449'>				if ( this[i].style ) {</div><div class='line' id='LC8450'>					this[i].style.display = &quot;none&quot;;</div><div class='line' id='LC8451'>				}</div><div class='line' id='LC8452'>			}</div><div class='line' id='LC8453'><br/></div><div class='line' id='LC8454'>			return this;</div><div class='line' id='LC8455'>		}</div><div class='line' id='LC8456'>	},</div><div class='line' id='LC8457'><br/></div><div class='line' id='LC8458'>	// Save the old toggle function</div><div class='line' id='LC8459'>	_toggle: jQuery.fn.toggle,</div><div class='line' id='LC8460'><br/></div><div class='line' id='LC8461'>	toggle: function( fn, fn2, callback ) {</div><div class='line' id='LC8462'>		var bool = typeof fn === &quot;boolean&quot;;</div><div class='line' id='LC8463'><br/></div><div class='line' id='LC8464'>		if ( jQuery.isFunction(fn) &amp;&amp; jQuery.isFunction(fn2) ) {</div><div class='line' id='LC8465'>			this._toggle.apply( this, arguments );</div><div class='line' id='LC8466'><br/></div><div class='line' id='LC8467'>		} else if ( fn == null || bool ) {</div><div class='line' id='LC8468'>			this.each(function() {</div><div class='line' id='LC8469'>				var state = bool ? fn : jQuery(this).is(&quot;:hidden&quot;);</div><div class='line' id='LC8470'>				jQuery(this)[ state ? &quot;show&quot; : &quot;hide&quot; ]();</div><div class='line' id='LC8471'>			});</div><div class='line' id='LC8472'><br/></div><div class='line' id='LC8473'>		} else {</div><div class='line' id='LC8474'>			this.animate(genFx(&quot;toggle&quot;, 3), fn, fn2, callback);</div><div class='line' id='LC8475'>		}</div><div class='line' id='LC8476'><br/></div><div class='line' id='LC8477'>		return this;</div><div class='line' id='LC8478'>	},</div><div class='line' id='LC8479'><br/></div><div class='line' id='LC8480'>	fadeTo: function( speed, to, easing, callback ) {</div><div class='line' id='LC8481'>		return this.filter(&quot;:hidden&quot;).css(&quot;opacity&quot;, 0).show().end()</div><div class='line' id='LC8482'>					.animate({opacity: to}, speed, easing, callback);</div><div class='line' id='LC8483'>	},</div><div class='line' id='LC8484'><br/></div><div class='line' id='LC8485'>	animate: function( prop, speed, easing, callback ) {</div><div class='line' id='LC8486'>		var optall = jQuery.speed( speed, easing, callback );</div><div class='line' id='LC8487'><br/></div><div class='line' id='LC8488'>		if ( jQuery.isEmptyObject( prop ) ) {</div><div class='line' id='LC8489'>			return this.each( optall.complete, [ false ] );</div><div class='line' id='LC8490'>		}</div><div class='line' id='LC8491'><br/></div><div class='line' id='LC8492'>		// Do not change referenced properties as per-property easing will be lost</div><div class='line' id='LC8493'>		prop = jQuery.extend( {}, prop );</div><div class='line' id='LC8494'><br/></div><div class='line' id='LC8495'>		function doAnimation() {</div><div class='line' id='LC8496'>			// XXX &#39;this&#39; does not always have a nodeName when running the</div><div class='line' id='LC8497'>			// test suite</div><div class='line' id='LC8498'><br/></div><div class='line' id='LC8499'>			if ( optall.queue === false ) {</div><div class='line' id='LC8500'>				jQuery._mark( this );</div><div class='line' id='LC8501'>			}</div><div class='line' id='LC8502'><br/></div><div class='line' id='LC8503'>			var opt = jQuery.extend( {}, optall ),</div><div class='line' id='LC8504'>				isElement = this.nodeType === 1,</div><div class='line' id='LC8505'>				hidden = isElement &amp;&amp; jQuery(this).is(&quot;:hidden&quot;),</div><div class='line' id='LC8506'>				name, val, p, e, hooks, replace,</div><div class='line' id='LC8507'>				parts, start, end, unit,</div><div class='line' id='LC8508'>				method;</div><div class='line' id='LC8509'><br/></div><div class='line' id='LC8510'>			// will store per property easing and be used to determine when an animation is complete</div><div class='line' id='LC8511'>			opt.animatedProperties = {};</div><div class='line' id='LC8512'><br/></div><div class='line' id='LC8513'>			// first pass over propertys to expand / normalize</div><div class='line' id='LC8514'>			for ( p in prop ) {</div><div class='line' id='LC8515'>				name = jQuery.camelCase( p );</div><div class='line' id='LC8516'>				if ( p !== name ) {</div><div class='line' id='LC8517'>					prop[ name ] = prop[ p ];</div><div class='line' id='LC8518'>					delete prop[ p ];</div><div class='line' id='LC8519'>				}</div><div class='line' id='LC8520'><br/></div><div class='line' id='LC8521'>				if ( ( hooks = jQuery.cssHooks[ name ] ) &amp;&amp; &quot;expand&quot; in hooks ) {</div><div class='line' id='LC8522'>					replace = hooks.expand( prop[ name ] );</div><div class='line' id='LC8523'>					delete prop[ name ];</div><div class='line' id='LC8524'><br/></div><div class='line' id='LC8525'>					// not quite $.extend, this wont overwrite keys already present.</div><div class='line' id='LC8526'>					// also - reusing &#39;p&#39; from above because we have the correct &quot;name&quot;</div><div class='line' id='LC8527'>					for ( p in replace ) {</div><div class='line' id='LC8528'>						if ( ! ( p in prop ) ) {</div><div class='line' id='LC8529'>							prop[ p ] = replace[ p ];</div><div class='line' id='LC8530'>						}</div><div class='line' id='LC8531'>					}</div><div class='line' id='LC8532'>				}</div><div class='line' id='LC8533'>			}</div><div class='line' id='LC8534'><br/></div><div class='line' id='LC8535'>			for ( name in prop ) {</div><div class='line' id='LC8536'>				val = prop[ name ];</div><div class='line' id='LC8537'>				// easing resolution: per property &gt; opt.specialEasing &gt; opt.easing &gt; &#39;swing&#39; (default)</div><div class='line' id='LC8538'>				if ( jQuery.isArray( val ) ) {</div><div class='line' id='LC8539'>					opt.animatedProperties[ name ] = val[ 1 ];</div><div class='line' id='LC8540'>					val = prop[ name ] = val[ 0 ];</div><div class='line' id='LC8541'>				} else {</div><div class='line' id='LC8542'>					opt.animatedProperties[ name ] = opt.specialEasing &amp;&amp; opt.specialEasing[ name ] || opt.easing || &#39;swing&#39;;</div><div class='line' id='LC8543'>				}</div><div class='line' id='LC8544'><br/></div><div class='line' id='LC8545'>				if ( val === &quot;hide&quot; &amp;&amp; hidden || val === &quot;show&quot; &amp;&amp; !hidden ) {</div><div class='line' id='LC8546'>					return opt.complete.call( this );</div><div class='line' id='LC8547'>				}</div><div class='line' id='LC8548'><br/></div><div class='line' id='LC8549'>				if ( isElement &amp;&amp; ( name === &quot;height&quot; || name === &quot;width&quot; ) ) {</div><div class='line' id='LC8550'>					// Make sure that nothing sneaks out</div><div class='line' id='LC8551'>					// Record all 3 overflow attributes because IE does not</div><div class='line' id='LC8552'>					// change the overflow attribute when overflowX and</div><div class='line' id='LC8553'>					// overflowY are set to the same value</div><div class='line' id='LC8554'>					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];</div><div class='line' id='LC8555'><br/></div><div class='line' id='LC8556'>					// Set display property to inline-block for height/width</div><div class='line' id='LC8557'>					// animations on inline elements that are having width/height animated</div><div class='line' id='LC8558'>					if ( jQuery.css( this, &quot;display&quot; ) === &quot;inline&quot; &amp;&amp;</div><div class='line' id='LC8559'>							jQuery.css( this, &quot;float&quot; ) === &quot;none&quot; ) {</div><div class='line' id='LC8560'><br/></div><div class='line' id='LC8561'>						// inline-level elements accept inline-block;</div><div class='line' id='LC8562'>						// block-level elements need to be inline with layout</div><div class='line' id='LC8563'>						if ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === &quot;inline&quot; ) {</div><div class='line' id='LC8564'>							this.style.display = &quot;inline-block&quot;;</div><div class='line' id='LC8565'><br/></div><div class='line' id='LC8566'>						} else {</div><div class='line' id='LC8567'>							this.style.zoom = 1;</div><div class='line' id='LC8568'>						}</div><div class='line' id='LC8569'>					}</div><div class='line' id='LC8570'>				}</div><div class='line' id='LC8571'>			}</div><div class='line' id='LC8572'><br/></div><div class='line' id='LC8573'>			if ( opt.overflow != null ) {</div><div class='line' id='LC8574'>				this.style.overflow = &quot;hidden&quot;;</div><div class='line' id='LC8575'>			}</div><div class='line' id='LC8576'><br/></div><div class='line' id='LC8577'>			for ( p in prop ) {</div><div class='line' id='LC8578'>				e = new jQuery.fx( this, opt, p );</div><div class='line' id='LC8579'>				val = prop[ p ];</div><div class='line' id='LC8580'><br/></div><div class='line' id='LC8581'>				if ( rfxtypes.test( val ) ) {</div><div class='line' id='LC8582'><br/></div><div class='line' id='LC8583'>					// Tracks whether to show or hide based on private</div><div class='line' id='LC8584'>					// data attached to the element</div><div class='line' id='LC8585'>					method = jQuery._data( this, &quot;toggle&quot; + p ) || ( val === &quot;toggle&quot; ? hidden ? &quot;show&quot; : &quot;hide&quot; : 0 );</div><div class='line' id='LC8586'>					if ( method ) {</div><div class='line' id='LC8587'>						jQuery._data( this, &quot;toggle&quot; + p, method === &quot;show&quot; ? &quot;hide&quot; : &quot;show&quot; );</div><div class='line' id='LC8588'>						e[ method ]();</div><div class='line' id='LC8589'>					} else {</div><div class='line' id='LC8590'>						e[ val ]();</div><div class='line' id='LC8591'>					}</div><div class='line' id='LC8592'><br/></div><div class='line' id='LC8593'>				} else {</div><div class='line' id='LC8594'>					parts = rfxnum.exec( val );</div><div class='line' id='LC8595'>					start = e.cur();</div><div class='line' id='LC8596'><br/></div><div class='line' id='LC8597'>					if ( parts ) {</div><div class='line' id='LC8598'>						end = parseFloat( parts[2] );</div><div class='line' id='LC8599'>						unit = parts[3] || ( jQuery.cssNumber[ p ] ? &quot;&quot; : &quot;px&quot; );</div><div class='line' id='LC8600'><br/></div><div class='line' id='LC8601'>						// We need to compute starting value</div><div class='line' id='LC8602'>						if ( unit !== &quot;px&quot; ) {</div><div class='line' id='LC8603'>							jQuery.style( this, p, (end || 1) + unit);</div><div class='line' id='LC8604'>							start = ( (end || 1) / e.cur() ) * start;</div><div class='line' id='LC8605'>							jQuery.style( this, p, start + unit);</div><div class='line' id='LC8606'>						}</div><div class='line' id='LC8607'><br/></div><div class='line' id='LC8608'>						// If a +=/-= token was provided, we&#39;re doing a relative animation</div><div class='line' id='LC8609'>						if ( parts[1] ) {</div><div class='line' id='LC8610'>							end = ( (parts[ 1 ] === &quot;-=&quot; ? -1 : 1) * end ) + start;</div><div class='line' id='LC8611'>						}</div><div class='line' id='LC8612'><br/></div><div class='line' id='LC8613'>						e.custom( start, end, unit );</div><div class='line' id='LC8614'><br/></div><div class='line' id='LC8615'>					} else {</div><div class='line' id='LC8616'>						e.custom( start, val, &quot;&quot; );</div><div class='line' id='LC8617'>					}</div><div class='line' id='LC8618'>				}</div><div class='line' id='LC8619'>			}</div><div class='line' id='LC8620'><br/></div><div class='line' id='LC8621'>			// For JS strict compliance</div><div class='line' id='LC8622'>			return true;</div><div class='line' id='LC8623'>		}</div><div class='line' id='LC8624'><br/></div><div class='line' id='LC8625'>		return optall.queue === false ?</div><div class='line' id='LC8626'>			this.each( doAnimation ) :</div><div class='line' id='LC8627'>			this.queue( optall.queue, doAnimation );</div><div class='line' id='LC8628'>	},</div><div class='line' id='LC8629'><br/></div><div class='line' id='LC8630'>	stop: function( type, clearQueue, gotoEnd ) {</div><div class='line' id='LC8631'>		if ( typeof type !== &quot;string&quot; ) {</div><div class='line' id='LC8632'>			gotoEnd = clearQueue;</div><div class='line' id='LC8633'>			clearQueue = type;</div><div class='line' id='LC8634'>			type = undefined;</div><div class='line' id='LC8635'>		}</div><div class='line' id='LC8636'>		if ( clearQueue &amp;&amp; type !== false ) {</div><div class='line' id='LC8637'>			this.queue( type || &quot;fx&quot;, [] );</div><div class='line' id='LC8638'>		}</div><div class='line' id='LC8639'><br/></div><div class='line' id='LC8640'>		return this.each(function() {</div><div class='line' id='LC8641'>			var index,</div><div class='line' id='LC8642'>				hadTimers = false,</div><div class='line' id='LC8643'>				timers = jQuery.timers,</div><div class='line' id='LC8644'>				data = jQuery._data( this );</div><div class='line' id='LC8645'><br/></div><div class='line' id='LC8646'>			// clear marker counters if we know they won&#39;t be</div><div class='line' id='LC8647'>			if ( !gotoEnd ) {</div><div class='line' id='LC8648'>				jQuery._unmark( true, this );</div><div class='line' id='LC8649'>			}</div><div class='line' id='LC8650'><br/></div><div class='line' id='LC8651'>			function stopQueue( elem, data, index ) {</div><div class='line' id='LC8652'>				var hooks = data[ index ];</div><div class='line' id='LC8653'>				jQuery.removeData( elem, index, true );</div><div class='line' id='LC8654'>				hooks.stop( gotoEnd );</div><div class='line' id='LC8655'>			}</div><div class='line' id='LC8656'><br/></div><div class='line' id='LC8657'>			if ( type == null ) {</div><div class='line' id='LC8658'>				for ( index in data ) {</div><div class='line' id='LC8659'>					if ( data[ index ] &amp;&amp; data[ index ].stop &amp;&amp; index.indexOf(&quot;.run&quot;) === index.length - 4 ) {</div><div class='line' id='LC8660'>						stopQueue( this, data, index );</div><div class='line' id='LC8661'>					}</div><div class='line' id='LC8662'>				}</div><div class='line' id='LC8663'>			} else if ( data[ index = type + &quot;.run&quot; ] &amp;&amp; data[ index ].stop ){</div><div class='line' id='LC8664'>				stopQueue( this, data, index );</div><div class='line' id='LC8665'>			}</div><div class='line' id='LC8666'><br/></div><div class='line' id='LC8667'>			for ( index = timers.length; index--; ) {</div><div class='line' id='LC8668'>				if ( timers[ index ].elem === this &amp;&amp; (type == null || timers[ index ].queue === type) ) {</div><div class='line' id='LC8669'>					if ( gotoEnd ) {</div><div class='line' id='LC8670'><br/></div><div class='line' id='LC8671'>						// force the next step to be the last</div><div class='line' id='LC8672'>						timers[ index ]( true );</div><div class='line' id='LC8673'>					} else {</div><div class='line' id='LC8674'>						timers[ index ].saveState();</div><div class='line' id='LC8675'>					}</div><div class='line' id='LC8676'>					hadTimers = true;</div><div class='line' id='LC8677'>					timers.splice( index, 1 );</div><div class='line' id='LC8678'>				}</div><div class='line' id='LC8679'>			}</div><div class='line' id='LC8680'><br/></div><div class='line' id='LC8681'>			// start the next in the queue if the last step wasn&#39;t forced</div><div class='line' id='LC8682'>			// timers currently will call their complete callbacks, which will dequeue</div><div class='line' id='LC8683'>			// but only if they were gotoEnd</div><div class='line' id='LC8684'>			if ( !( gotoEnd &amp;&amp; hadTimers ) ) {</div><div class='line' id='LC8685'>				jQuery.dequeue( this, type );</div><div class='line' id='LC8686'>			}</div><div class='line' id='LC8687'>		});</div><div class='line' id='LC8688'>	}</div><div class='line' id='LC8689'><br/></div><div class='line' id='LC8690'>});</div><div class='line' id='LC8691'><br/></div><div class='line' id='LC8692'>// Animations created synchronously will run synchronously</div><div class='line' id='LC8693'>function createFxNow() {</div><div class='line' id='LC8694'>	setTimeout( clearFxNow, 0 );</div><div class='line' id='LC8695'>	return ( fxNow = jQuery.now() );</div><div class='line' id='LC8696'>}</div><div class='line' id='LC8697'><br/></div><div class='line' id='LC8698'>function clearFxNow() {</div><div class='line' id='LC8699'>	fxNow = undefined;</div><div class='line' id='LC8700'>}</div><div class='line' id='LC8701'><br/></div><div class='line' id='LC8702'>// Generate parameters to create a standard animation</div><div class='line' id='LC8703'>function genFx( type, num ) {</div><div class='line' id='LC8704'>	var obj = {};</div><div class='line' id='LC8705'><br/></div><div class='line' id='LC8706'>	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {</div><div class='line' id='LC8707'>		obj[ this ] = type;</div><div class='line' id='LC8708'>	});</div><div class='line' id='LC8709'><br/></div><div class='line' id='LC8710'>	return obj;</div><div class='line' id='LC8711'>}</div><div class='line' id='LC8712'><br/></div><div class='line' id='LC8713'>// Generate shortcuts for custom animations</div><div class='line' id='LC8714'>jQuery.each({</div><div class='line' id='LC8715'>	slideDown: genFx( &quot;show&quot;, 1 ),</div><div class='line' id='LC8716'>	slideUp: genFx( &quot;hide&quot;, 1 ),</div><div class='line' id='LC8717'>	slideToggle: genFx( &quot;toggle&quot;, 1 ),</div><div class='line' id='LC8718'>	fadeIn: { opacity: &quot;show&quot; },</div><div class='line' id='LC8719'>	fadeOut: { opacity: &quot;hide&quot; },</div><div class='line' id='LC8720'>	fadeToggle: { opacity: &quot;toggle&quot; }</div><div class='line' id='LC8721'>}, function( name, props ) {</div><div class='line' id='LC8722'>	jQuery.fn[ name ] = function( speed, easing, callback ) {</div><div class='line' id='LC8723'>		return this.animate( props, speed, easing, callback );</div><div class='line' id='LC8724'>	};</div><div class='line' id='LC8725'>});</div><div class='line' id='LC8726'><br/></div><div class='line' id='LC8727'>jQuery.extend({</div><div class='line' id='LC8728'>	speed: function( speed, easing, fn ) {</div><div class='line' id='LC8729'>		var opt = speed &amp;&amp; typeof speed === &quot;object&quot; ? jQuery.extend( {}, speed ) : {</div><div class='line' id='LC8730'>			complete: fn || !fn &amp;&amp; easing ||</div><div class='line' id='LC8731'>				jQuery.isFunction( speed ) &amp;&amp; speed,</div><div class='line' id='LC8732'>			duration: speed,</div><div class='line' id='LC8733'>			easing: fn &amp;&amp; easing || easing &amp;&amp; !jQuery.isFunction( easing ) &amp;&amp; easing</div><div class='line' id='LC8734'>		};</div><div class='line' id='LC8735'><br/></div><div class='line' id='LC8736'>		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === &quot;number&quot; ? opt.duration :</div><div class='line' id='LC8737'>			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;</div><div class='line' id='LC8738'><br/></div><div class='line' id='LC8739'>		// normalize opt.queue - true/undefined/null -&gt; &quot;fx&quot;</div><div class='line' id='LC8740'>		if ( opt.queue == null || opt.queue === true ) {</div><div class='line' id='LC8741'>			opt.queue = &quot;fx&quot;;</div><div class='line' id='LC8742'>		}</div><div class='line' id='LC8743'><br/></div><div class='line' id='LC8744'>		// Queueing</div><div class='line' id='LC8745'>		opt.old = opt.complete;</div><div class='line' id='LC8746'><br/></div><div class='line' id='LC8747'>		opt.complete = function( noUnmark ) {</div><div class='line' id='LC8748'>			if ( jQuery.isFunction( opt.old ) ) {</div><div class='line' id='LC8749'>				opt.old.call( this );</div><div class='line' id='LC8750'>			}</div><div class='line' id='LC8751'><br/></div><div class='line' id='LC8752'>			if ( opt.queue ) {</div><div class='line' id='LC8753'>				jQuery.dequeue( this, opt.queue );</div><div class='line' id='LC8754'>			} else if ( noUnmark !== false ) {</div><div class='line' id='LC8755'>				jQuery._unmark( this );</div><div class='line' id='LC8756'>			}</div><div class='line' id='LC8757'>		};</div><div class='line' id='LC8758'><br/></div><div class='line' id='LC8759'>		return opt;</div><div class='line' id='LC8760'>	},</div><div class='line' id='LC8761'><br/></div><div class='line' id='LC8762'>	easing: {</div><div class='line' id='LC8763'>		linear: function( p ) {</div><div class='line' id='LC8764'>			return p;</div><div class='line' id='LC8765'>		},</div><div class='line' id='LC8766'>		swing: function( p ) {</div><div class='line' id='LC8767'>			return ( -Math.cos( p*Math.PI ) / 2 ) + 0.5;</div><div class='line' id='LC8768'>		}</div><div class='line' id='LC8769'>	},</div><div class='line' id='LC8770'><br/></div><div class='line' id='LC8771'>	timers: [],</div><div class='line' id='LC8772'><br/></div><div class='line' id='LC8773'>	fx: function( elem, options, prop ) {</div><div class='line' id='LC8774'>		this.options = options;</div><div class='line' id='LC8775'>		this.elem = elem;</div><div class='line' id='LC8776'>		this.prop = prop;</div><div class='line' id='LC8777'><br/></div><div class='line' id='LC8778'>		options.orig = options.orig || {};</div><div class='line' id='LC8779'>	}</div><div class='line' id='LC8780'><br/></div><div class='line' id='LC8781'>});</div><div class='line' id='LC8782'><br/></div><div class='line' id='LC8783'>jQuery.fx.prototype = {</div><div class='line' id='LC8784'>	// Simple function for setting a style value</div><div class='line' id='LC8785'>	update: function() {</div><div class='line' id='LC8786'>		if ( this.options.step ) {</div><div class='line' id='LC8787'>			this.options.step.call( this.elem, this.now, this );</div><div class='line' id='LC8788'>		}</div><div class='line' id='LC8789'><br/></div><div class='line' id='LC8790'>		( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );</div><div class='line' id='LC8791'>	},</div><div class='line' id='LC8792'><br/></div><div class='line' id='LC8793'>	// Get the current size</div><div class='line' id='LC8794'>	cur: function() {</div><div class='line' id='LC8795'>		if ( this.elem[ this.prop ] != null &amp;&amp; (!this.elem.style || this.elem.style[ this.prop ] == null) ) {</div><div class='line' id='LC8796'>			return this.elem[ this.prop ];</div><div class='line' id='LC8797'>		}</div><div class='line' id='LC8798'><br/></div><div class='line' id='LC8799'>		var parsed,</div><div class='line' id='LC8800'>			r = jQuery.css( this.elem, this.prop );</div><div class='line' id='LC8801'>		// Empty strings, null, undefined and &quot;auto&quot; are converted to 0,</div><div class='line' id='LC8802'>		// complex values such as &quot;rotate(1rad)&quot; are returned as is,</div><div class='line' id='LC8803'>		// simple values such as &quot;10px&quot; are parsed to Float.</div><div class='line' id='LC8804'>		return isNaN( parsed = parseFloat( r ) ) ? !r || r === &quot;auto&quot; ? 0 : r : parsed;</div><div class='line' id='LC8805'>	},</div><div class='line' id='LC8806'><br/></div><div class='line' id='LC8807'>	// Start an animation from one number to another</div><div class='line' id='LC8808'>	custom: function( from, to, unit ) {</div><div class='line' id='LC8809'>		var self = this,</div><div class='line' id='LC8810'>			fx = jQuery.fx;</div><div class='line' id='LC8811'><br/></div><div class='line' id='LC8812'>		this.startTime = fxNow || createFxNow();</div><div class='line' id='LC8813'>		this.end = to;</div><div class='line' id='LC8814'>		this.now = this.start = from;</div><div class='line' id='LC8815'>		this.pos = this.state = 0;</div><div class='line' id='LC8816'>		this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? &quot;&quot; : &quot;px&quot; );</div><div class='line' id='LC8817'><br/></div><div class='line' id='LC8818'>		function t( gotoEnd ) {</div><div class='line' id='LC8819'>			return self.step( gotoEnd );</div><div class='line' id='LC8820'>		}</div><div class='line' id='LC8821'><br/></div><div class='line' id='LC8822'>		t.queue = this.options.queue;</div><div class='line' id='LC8823'>		t.elem = this.elem;</div><div class='line' id='LC8824'>		t.saveState = function() {</div><div class='line' id='LC8825'>			if ( jQuery._data( self.elem, &quot;fxshow&quot; + self.prop ) === undefined ) {</div><div class='line' id='LC8826'>				if ( self.options.hide ) {</div><div class='line' id='LC8827'>					jQuery._data( self.elem, &quot;fxshow&quot; + self.prop, self.start );</div><div class='line' id='LC8828'>				} else if ( self.options.show ) {</div><div class='line' id='LC8829'>					jQuery._data( self.elem, &quot;fxshow&quot; + self.prop, self.end );</div><div class='line' id='LC8830'>				}</div><div class='line' id='LC8831'>			}</div><div class='line' id='LC8832'>		};</div><div class='line' id='LC8833'><br/></div><div class='line' id='LC8834'>		if ( t() &amp;&amp; jQuery.timers.push(t) &amp;&amp; !timerId ) {</div><div class='line' id='LC8835'>			timerId = setInterval( fx.tick, fx.interval );</div><div class='line' id='LC8836'>		}</div><div class='line' id='LC8837'>	},</div><div class='line' id='LC8838'><br/></div><div class='line' id='LC8839'>	// Simple &#39;show&#39; function</div><div class='line' id='LC8840'>	show: function() {</div><div class='line' id='LC8841'>		var dataShow = jQuery._data( this.elem, &quot;fxshow&quot; + this.prop );</div><div class='line' id='LC8842'><br/></div><div class='line' id='LC8843'>		// Remember where we started, so that we can go back to it later</div><div class='line' id='LC8844'>		this.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );</div><div class='line' id='LC8845'>		this.options.show = true;</div><div class='line' id='LC8846'><br/></div><div class='line' id='LC8847'>		// Begin the animation</div><div class='line' id='LC8848'>		// Make sure that we start at a small width/height to avoid any flash of content</div><div class='line' id='LC8849'>		if ( dataShow !== undefined ) {</div><div class='line' id='LC8850'>			// This show is picking up where a previous hide or show left off</div><div class='line' id='LC8851'>			this.custom( this.cur(), dataShow );</div><div class='line' id='LC8852'>		} else {</div><div class='line' id='LC8853'>			this.custom( this.prop === &quot;width&quot; || this.prop === &quot;height&quot; ? 1 : 0, this.cur() );</div><div class='line' id='LC8854'>		}</div><div class='line' id='LC8855'><br/></div><div class='line' id='LC8856'>		// Start by showing the element</div><div class='line' id='LC8857'>		jQuery( this.elem ).show();</div><div class='line' id='LC8858'>	},</div><div class='line' id='LC8859'><br/></div><div class='line' id='LC8860'>	// Simple &#39;hide&#39; function</div><div class='line' id='LC8861'>	hide: function() {</div><div class='line' id='LC8862'>		// Remember where we started, so that we can go back to it later</div><div class='line' id='LC8863'>		this.options.orig[ this.prop ] = jQuery._data( this.elem, &quot;fxshow&quot; + this.prop ) || jQuery.style( this.elem, this.prop );</div><div class='line' id='LC8864'>		this.options.hide = true;</div><div class='line' id='LC8865'><br/></div><div class='line' id='LC8866'>		// Begin the animation</div><div class='line' id='LC8867'>		this.custom( this.cur(), 0 );</div><div class='line' id='LC8868'>	},</div><div class='line' id='LC8869'><br/></div><div class='line' id='LC8870'>	// Each step of an animation</div><div class='line' id='LC8871'>	step: function( gotoEnd ) {</div><div class='line' id='LC8872'>		var p, n, complete,</div><div class='line' id='LC8873'>			t = fxNow || createFxNow(),</div><div class='line' id='LC8874'>			done = true,</div><div class='line' id='LC8875'>			elem = this.elem,</div><div class='line' id='LC8876'>			options = this.options;</div><div class='line' id='LC8877'><br/></div><div class='line' id='LC8878'>		if ( gotoEnd || t &gt;= options.duration + this.startTime ) {</div><div class='line' id='LC8879'>			this.now = this.end;</div><div class='line' id='LC8880'>			this.pos = this.state = 1;</div><div class='line' id='LC8881'>			this.update();</div><div class='line' id='LC8882'><br/></div><div class='line' id='LC8883'>			options.animatedProperties[ this.prop ] = true;</div><div class='line' id='LC8884'><br/></div><div class='line' id='LC8885'>			for ( p in options.animatedProperties ) {</div><div class='line' id='LC8886'>				if ( options.animatedProperties[ p ] !== true ) {</div><div class='line' id='LC8887'>					done = false;</div><div class='line' id='LC8888'>				}</div><div class='line' id='LC8889'>			}</div><div class='line' id='LC8890'><br/></div><div class='line' id='LC8891'>			if ( done ) {</div><div class='line' id='LC8892'>				// Reset the overflow</div><div class='line' id='LC8893'>				if ( options.overflow != null &amp;&amp; !jQuery.support.shrinkWrapBlocks ) {</div><div class='line' id='LC8894'><br/></div><div class='line' id='LC8895'>					jQuery.each( [ &quot;&quot;, &quot;X&quot;, &quot;Y&quot; ], function( index, value ) {</div><div class='line' id='LC8896'>						elem.style[ &quot;overflow&quot; + value ] = options.overflow[ index ];</div><div class='line' id='LC8897'>					});</div><div class='line' id='LC8898'>				}</div><div class='line' id='LC8899'><br/></div><div class='line' id='LC8900'>				// Hide the element if the &quot;hide&quot; operation was done</div><div class='line' id='LC8901'>				if ( options.hide ) {</div><div class='line' id='LC8902'>					jQuery( elem ).hide();</div><div class='line' id='LC8903'>				}</div><div class='line' id='LC8904'><br/></div><div class='line' id='LC8905'>				// Reset the properties, if the item has been hidden or shown</div><div class='line' id='LC8906'>				if ( options.hide || options.show ) {</div><div class='line' id='LC8907'>					for ( p in options.animatedProperties ) {</div><div class='line' id='LC8908'>						jQuery.style( elem, p, options.orig[ p ] );</div><div class='line' id='LC8909'>						jQuery.removeData( elem, &quot;fxshow&quot; + p, true );</div><div class='line' id='LC8910'>						// Toggle data is no longer needed</div><div class='line' id='LC8911'>						jQuery.removeData( elem, &quot;toggle&quot; + p, true );</div><div class='line' id='LC8912'>					}</div><div class='line' id='LC8913'>				}</div><div class='line' id='LC8914'><br/></div><div class='line' id='LC8915'>				// Execute the complete function</div><div class='line' id='LC8916'>				// in the event that the complete function throws an exception</div><div class='line' id='LC8917'>				// we must ensure it won&#39;t be called twice. #5684</div><div class='line' id='LC8918'><br/></div><div class='line' id='LC8919'>				complete = options.complete;</div><div class='line' id='LC8920'>				if ( complete ) {</div><div class='line' id='LC8921'><br/></div><div class='line' id='LC8922'>					options.complete = false;</div><div class='line' id='LC8923'>					complete.call( elem );</div><div class='line' id='LC8924'>				}</div><div class='line' id='LC8925'>			}</div><div class='line' id='LC8926'><br/></div><div class='line' id='LC8927'>			return false;</div><div class='line' id='LC8928'><br/></div><div class='line' id='LC8929'>		} else {</div><div class='line' id='LC8930'>			// classical easing cannot be used with an Infinity duration</div><div class='line' id='LC8931'>			if ( options.duration == Infinity ) {</div><div class='line' id='LC8932'>				this.now = t;</div><div class='line' id='LC8933'>			} else {</div><div class='line' id='LC8934'>				n = t - this.startTime;</div><div class='line' id='LC8935'>				this.state = n / options.duration;</div><div class='line' id='LC8936'><br/></div><div class='line' id='LC8937'>				// Perform the easing function, defaults to swing</div><div class='line' id='LC8938'>				this.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );</div><div class='line' id='LC8939'>				this.now = this.start + ( (this.end - this.start) * this.pos );</div><div class='line' id='LC8940'>			}</div><div class='line' id='LC8941'>			// Perform the next step of the animation</div><div class='line' id='LC8942'>			this.update();</div><div class='line' id='LC8943'>		}</div><div class='line' id='LC8944'><br/></div><div class='line' id='LC8945'>		return true;</div><div class='line' id='LC8946'>	}</div><div class='line' id='LC8947'>};</div><div class='line' id='LC8948'><br/></div><div class='line' id='LC8949'>jQuery.extend( jQuery.fx, {</div><div class='line' id='LC8950'>	tick: function() {</div><div class='line' id='LC8951'>		var timer,</div><div class='line' id='LC8952'>			timers = jQuery.timers,</div><div class='line' id='LC8953'>			i = 0;</div><div class='line' id='LC8954'><br/></div><div class='line' id='LC8955'>		for ( ; i &lt; timers.length; i++ ) {</div><div class='line' id='LC8956'>			timer = timers[ i ];</div><div class='line' id='LC8957'>			// Checks the timer has not already been removed</div><div class='line' id='LC8958'>			if ( !timer() &amp;&amp; timers[ i ] === timer ) {</div><div class='line' id='LC8959'>				timers.splice( i--, 1 );</div><div class='line' id='LC8960'>			}</div><div class='line' id='LC8961'>		}</div><div class='line' id='LC8962'><br/></div><div class='line' id='LC8963'>		if ( !timers.length ) {</div><div class='line' id='LC8964'>			jQuery.fx.stop();</div><div class='line' id='LC8965'>		}</div><div class='line' id='LC8966'>	},</div><div class='line' id='LC8967'><br/></div><div class='line' id='LC8968'>	interval: 13,</div><div class='line' id='LC8969'><br/></div><div class='line' id='LC8970'>	stop: function() {</div><div class='line' id='LC8971'>		clearInterval( timerId );</div><div class='line' id='LC8972'>		timerId = null;</div><div class='line' id='LC8973'>	},</div><div class='line' id='LC8974'><br/></div><div class='line' id='LC8975'>	speeds: {</div><div class='line' id='LC8976'>		slow: 600,</div><div class='line' id='LC8977'>		fast: 200,</div><div class='line' id='LC8978'>		// Default speed</div><div class='line' id='LC8979'>		_default: 400</div><div class='line' id='LC8980'>	},</div><div class='line' id='LC8981'><br/></div><div class='line' id='LC8982'>	step: {</div><div class='line' id='LC8983'>		opacity: function( fx ) {</div><div class='line' id='LC8984'>			jQuery.style( fx.elem, &quot;opacity&quot;, fx.now );</div><div class='line' id='LC8985'>		},</div><div class='line' id='LC8986'><br/></div><div class='line' id='LC8987'>		_default: function( fx ) {</div><div class='line' id='LC8988'>			if ( fx.elem.style &amp;&amp; fx.elem.style[ fx.prop ] != null ) {</div><div class='line' id='LC8989'>				fx.elem.style[ fx.prop ] = fx.now + fx.unit;</div><div class='line' id='LC8990'>			} else {</div><div class='line' id='LC8991'>				fx.elem[ fx.prop ] = fx.now;</div><div class='line' id='LC8992'>			}</div><div class='line' id='LC8993'>		}</div><div class='line' id='LC8994'>	}</div><div class='line' id='LC8995'>});</div><div class='line' id='LC8996'><br/></div><div class='line' id='LC8997'>// Ensure props that can&#39;t be negative don&#39;t go there on undershoot easing</div><div class='line' id='LC8998'>jQuery.each( fxAttrs.concat.apply( [], fxAttrs ), function( i, prop ) {</div><div class='line' id='LC8999'>	// exclude marginTop, marginLeft, marginBottom and marginRight from this list</div><div class='line' id='LC9000'>	if ( prop.indexOf( &quot;margin&quot; ) ) {</div><div class='line' id='LC9001'>		jQuery.fx.step[ prop ] = function( fx ) {</div><div class='line' id='LC9002'>			jQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );</div><div class='line' id='LC9003'>		};</div><div class='line' id='LC9004'>	}</div><div class='line' id='LC9005'>});</div><div class='line' id='LC9006'><br/></div><div class='line' id='LC9007'>if ( jQuery.expr &amp;&amp; jQuery.expr.filters ) {</div><div class='line' id='LC9008'>	jQuery.expr.filters.animated = function( elem ) {</div><div class='line' id='LC9009'>		return jQuery.grep(jQuery.timers, function( fn ) {</div><div class='line' id='LC9010'>			return elem === fn.elem;</div><div class='line' id='LC9011'>		}).length;</div><div class='line' id='LC9012'>	};</div><div class='line' id='LC9013'>}</div><div class='line' id='LC9014'><br/></div><div class='line' id='LC9015'>// Try to restore the default display value of an element</div><div class='line' id='LC9016'>function defaultDisplay( nodeName ) {</div><div class='line' id='LC9017'><br/></div><div class='line' id='LC9018'>	if ( !elemdisplay[ nodeName ] ) {</div><div class='line' id='LC9019'><br/></div><div class='line' id='LC9020'>		var body = document.body,</div><div class='line' id='LC9021'>			elem = jQuery( &quot;&lt;&quot; + nodeName + &quot;&gt;&quot; ).appendTo( body ),</div><div class='line' id='LC9022'>			display = elem.css( &quot;display&quot; );</div><div class='line' id='LC9023'>		elem.remove();</div><div class='line' id='LC9024'><br/></div><div class='line' id='LC9025'>		// If the simple way fails,</div><div class='line' id='LC9026'>		// get element&#39;s real default display by attaching it to a temp iframe</div><div class='line' id='LC9027'>		if ( display === &quot;none&quot; || display === &quot;&quot; ) {</div><div class='line' id='LC9028'>			// No iframe to use yet, so create it</div><div class='line' id='LC9029'>			if ( !iframe ) {</div><div class='line' id='LC9030'>				iframe = document.createElement( &quot;iframe&quot; );</div><div class='line' id='LC9031'>				iframe.frameBorder = iframe.width = iframe.height = 0;</div><div class='line' id='LC9032'>			}</div><div class='line' id='LC9033'><br/></div><div class='line' id='LC9034'>			body.appendChild( iframe );</div><div class='line' id='LC9035'><br/></div><div class='line' id='LC9036'>			// Create a cacheable copy of the iframe document on first call.</div><div class='line' id='LC9037'>			// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML</div><div class='line' id='LC9038'>			// document to it; WebKit &amp; Firefox won&#39;t allow reusing the iframe document.</div><div class='line' id='LC9039'>			if ( !iframeDoc || !iframe.createElement ) {</div><div class='line' id='LC9040'>				iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;</div><div class='line' id='LC9041'>				iframeDoc.write( ( jQuery.support.boxModel ? &quot;&lt;!doctype html&gt;&quot; : &quot;&quot; ) + &quot;&lt;html&gt;&lt;body&gt;&quot; );</div><div class='line' id='LC9042'>				iframeDoc.close();</div><div class='line' id='LC9043'>			}</div><div class='line' id='LC9044'><br/></div><div class='line' id='LC9045'>			elem = iframeDoc.createElement( nodeName );</div><div class='line' id='LC9046'><br/></div><div class='line' id='LC9047'>			iframeDoc.body.appendChild( elem );</div><div class='line' id='LC9048'><br/></div><div class='line' id='LC9049'>			display = jQuery.css( elem, &quot;display&quot; );</div><div class='line' id='LC9050'>			body.removeChild( iframe );</div><div class='line' id='LC9051'>		}</div><div class='line' id='LC9052'><br/></div><div class='line' id='LC9053'>		// Store the correct default display</div><div class='line' id='LC9054'>		elemdisplay[ nodeName ] = display;</div><div class='line' id='LC9055'>	}</div><div class='line' id='LC9056'><br/></div><div class='line' id='LC9057'>	return elemdisplay[ nodeName ];</div><div class='line' id='LC9058'>}</div><div class='line' id='LC9059'><br/></div><div class='line' id='LC9060'><br/></div><div class='line' id='LC9061'><br/></div><div class='line' id='LC9062'><br/></div><div class='line' id='LC9063'>var getOffset,</div><div class='line' id='LC9064'>	rtable = /^t(?:able|d|h)$/i,</div><div class='line' id='LC9065'>	rroot = /^(?:body|html)$/i;</div><div class='line' id='LC9066'><br/></div><div class='line' id='LC9067'>if ( &quot;getBoundingClientRect&quot; in document.documentElement ) {</div><div class='line' id='LC9068'>	getOffset = function( elem, doc, docElem, box ) {</div><div class='line' id='LC9069'>		try {</div><div class='line' id='LC9070'>			box = elem.getBoundingClientRect();</div><div class='line' id='LC9071'>		} catch(e) {}</div><div class='line' id='LC9072'><br/></div><div class='line' id='LC9073'>		// Make sure we&#39;re not dealing with a disconnected DOM node</div><div class='line' id='LC9074'>		if ( !box || !jQuery.contains( docElem, elem ) ) {</div><div class='line' id='LC9075'>			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };</div><div class='line' id='LC9076'>		}</div><div class='line' id='LC9077'><br/></div><div class='line' id='LC9078'>		var body = doc.body,</div><div class='line' id='LC9079'>			win = getWindow( doc ),</div><div class='line' id='LC9080'>			clientTop  = docElem.clientTop  || body.clientTop  || 0,</div><div class='line' id='LC9081'>			clientLeft = docElem.clientLeft || body.clientLeft || 0,</div><div class='line' id='LC9082'>			scrollTop  = win.pageYOffset || jQuery.support.boxModel &amp;&amp; docElem.scrollTop  || body.scrollTop,</div><div class='line' id='LC9083'>			scrollLeft = win.pageXOffset || jQuery.support.boxModel &amp;&amp; docElem.scrollLeft || body.scrollLeft,</div><div class='line' id='LC9084'>			top  = box.top  + scrollTop  - clientTop,</div><div class='line' id='LC9085'>			left = box.left + scrollLeft - clientLeft;</div><div class='line' id='LC9086'><br/></div><div class='line' id='LC9087'>		return { top: top, left: left };</div><div class='line' id='LC9088'>	};</div><div class='line' id='LC9089'><br/></div><div class='line' id='LC9090'>} else {</div><div class='line' id='LC9091'>	getOffset = function( elem, doc, docElem ) {</div><div class='line' id='LC9092'>		var computedStyle,</div><div class='line' id='LC9093'>			offsetParent = elem.offsetParent,</div><div class='line' id='LC9094'>			prevOffsetParent = elem,</div><div class='line' id='LC9095'>			body = doc.body,</div><div class='line' id='LC9096'>			defaultView = doc.defaultView,</div><div class='line' id='LC9097'>			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,</div><div class='line' id='LC9098'>			top = elem.offsetTop,</div><div class='line' id='LC9099'>			left = elem.offsetLeft;</div><div class='line' id='LC9100'><br/></div><div class='line' id='LC9101'>		while ( (elem = elem.parentNode) &amp;&amp; elem !== body &amp;&amp; elem !== docElem ) {</div><div class='line' id='LC9102'>			if ( jQuery.support.fixedPosition &amp;&amp; prevComputedStyle.position === &quot;fixed&quot; ) {</div><div class='line' id='LC9103'>				break;</div><div class='line' id='LC9104'>			}</div><div class='line' id='LC9105'><br/></div><div class='line' id='LC9106'>			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;</div><div class='line' id='LC9107'>			top  -= elem.scrollTop;</div><div class='line' id='LC9108'>			left -= elem.scrollLeft;</div><div class='line' id='LC9109'><br/></div><div class='line' id='LC9110'>			if ( elem === offsetParent ) {</div><div class='line' id='LC9111'>				top  += elem.offsetTop;</div><div class='line' id='LC9112'>				left += elem.offsetLeft;</div><div class='line' id='LC9113'><br/></div><div class='line' id='LC9114'>				if ( jQuery.support.doesNotAddBorder &amp;&amp; !(jQuery.support.doesAddBorderForTableAndCells &amp;&amp; rtable.test(elem.nodeName)) ) {</div><div class='line' id='LC9115'>					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;</div><div class='line' id='LC9116'>					left += parseFloat( computedStyle.borderLeftWidth ) || 0;</div><div class='line' id='LC9117'>				}</div><div class='line' id='LC9118'><br/></div><div class='line' id='LC9119'>				prevOffsetParent = offsetParent;</div><div class='line' id='LC9120'>				offsetParent = elem.offsetParent;</div><div class='line' id='LC9121'>			}</div><div class='line' id='LC9122'><br/></div><div class='line' id='LC9123'>			if ( jQuery.support.subtractsBorderForOverflowNotVisible &amp;&amp; computedStyle.overflow !== &quot;visible&quot; ) {</div><div class='line' id='LC9124'>				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;</div><div class='line' id='LC9125'>				left += parseFloat( computedStyle.borderLeftWidth ) || 0;</div><div class='line' id='LC9126'>			}</div><div class='line' id='LC9127'><br/></div><div class='line' id='LC9128'>			prevComputedStyle = computedStyle;</div><div class='line' id='LC9129'>		}</div><div class='line' id='LC9130'><br/></div><div class='line' id='LC9131'>		if ( prevComputedStyle.position === &quot;relative&quot; || prevComputedStyle.position === &quot;static&quot; ) {</div><div class='line' id='LC9132'>			top  += body.offsetTop;</div><div class='line' id='LC9133'>			left += body.offsetLeft;</div><div class='line' id='LC9134'>		}</div><div class='line' id='LC9135'><br/></div><div class='line' id='LC9136'>		if ( jQuery.support.fixedPosition &amp;&amp; prevComputedStyle.position === &quot;fixed&quot; ) {</div><div class='line' id='LC9137'>			top  += Math.max( docElem.scrollTop, body.scrollTop );</div><div class='line' id='LC9138'>			left += Math.max( docElem.scrollLeft, body.scrollLeft );</div><div class='line' id='LC9139'>		}</div><div class='line' id='LC9140'><br/></div><div class='line' id='LC9141'>		return { top: top, left: left };</div><div class='line' id='LC9142'>	};</div><div class='line' id='LC9143'>}</div><div class='line' id='LC9144'><br/></div><div class='line' id='LC9145'>jQuery.fn.offset = function( options ) {</div><div class='line' id='LC9146'>	if ( arguments.length ) {</div><div class='line' id='LC9147'>		return options === undefined ?</div><div class='line' id='LC9148'>			this :</div><div class='line' id='LC9149'>			this.each(function( i ) {</div><div class='line' id='LC9150'>				jQuery.offset.setOffset( this, options, i );</div><div class='line' id='LC9151'>			});</div><div class='line' id='LC9152'>	}</div><div class='line' id='LC9153'><br/></div><div class='line' id='LC9154'>	var elem = this[0],</div><div class='line' id='LC9155'>		doc = elem &amp;&amp; elem.ownerDocument;</div><div class='line' id='LC9156'><br/></div><div class='line' id='LC9157'>	if ( !doc ) {</div><div class='line' id='LC9158'>		return null;</div><div class='line' id='LC9159'>	}</div><div class='line' id='LC9160'><br/></div><div class='line' id='LC9161'>	if ( elem === doc.body ) {</div><div class='line' id='LC9162'>		return jQuery.offset.bodyOffset( elem );</div><div class='line' id='LC9163'>	}</div><div class='line' id='LC9164'><br/></div><div class='line' id='LC9165'>	return getOffset( elem, doc, doc.documentElement );</div><div class='line' id='LC9166'>};</div><div class='line' id='LC9167'><br/></div><div class='line' id='LC9168'>jQuery.offset = {</div><div class='line' id='LC9169'><br/></div><div class='line' id='LC9170'>	bodyOffset: function( body ) {</div><div class='line' id='LC9171'>		var top = body.offsetTop,</div><div class='line' id='LC9172'>			left = body.offsetLeft;</div><div class='line' id='LC9173'><br/></div><div class='line' id='LC9174'>		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {</div><div class='line' id='LC9175'>			top  += parseFloat( jQuery.css(body, &quot;marginTop&quot;) ) || 0;</div><div class='line' id='LC9176'>			left += parseFloat( jQuery.css(body, &quot;marginLeft&quot;) ) || 0;</div><div class='line' id='LC9177'>		}</div><div class='line' id='LC9178'><br/></div><div class='line' id='LC9179'>		return { top: top, left: left };</div><div class='line' id='LC9180'>	},</div><div class='line' id='LC9181'><br/></div><div class='line' id='LC9182'>	setOffset: function( elem, options, i ) {</div><div class='line' id='LC9183'>		var position = jQuery.css( elem, &quot;position&quot; );</div><div class='line' id='LC9184'><br/></div><div class='line' id='LC9185'>		// set position first, in-case top/left are set even on static elem</div><div class='line' id='LC9186'>		if ( position === &quot;static&quot; ) {</div><div class='line' id='LC9187'>			elem.style.position = &quot;relative&quot;;</div><div class='line' id='LC9188'>		}</div><div class='line' id='LC9189'><br/></div><div class='line' id='LC9190'>		var curElem = jQuery( elem ),</div><div class='line' id='LC9191'>			curOffset = curElem.offset(),</div><div class='line' id='LC9192'>			curCSSTop = jQuery.css( elem, &quot;top&quot; ),</div><div class='line' id='LC9193'>			curCSSLeft = jQuery.css( elem, &quot;left&quot; ),</div><div class='line' id='LC9194'>			calculatePosition = ( position === &quot;absolute&quot; || position === &quot;fixed&quot; ) &amp;&amp; jQuery.inArray(&quot;auto&quot;, [curCSSTop, curCSSLeft]) &gt; -1,</div><div class='line' id='LC9195'>			props = {}, curPosition = {}, curTop, curLeft;</div><div class='line' id='LC9196'><br/></div><div class='line' id='LC9197'>		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed</div><div class='line' id='LC9198'>		if ( calculatePosition ) {</div><div class='line' id='LC9199'>			curPosition = curElem.position();</div><div class='line' id='LC9200'>			curTop = curPosition.top;</div><div class='line' id='LC9201'>			curLeft = curPosition.left;</div><div class='line' id='LC9202'>		} else {</div><div class='line' id='LC9203'>			curTop = parseFloat( curCSSTop ) || 0;</div><div class='line' id='LC9204'>			curLeft = parseFloat( curCSSLeft ) || 0;</div><div class='line' id='LC9205'>		}</div><div class='line' id='LC9206'><br/></div><div class='line' id='LC9207'>		if ( jQuery.isFunction( options ) ) {</div><div class='line' id='LC9208'>			options = options.call( elem, i, curOffset );</div><div class='line' id='LC9209'>		}</div><div class='line' id='LC9210'><br/></div><div class='line' id='LC9211'>		if ( options.top != null ) {</div><div class='line' id='LC9212'>			props.top = ( options.top - curOffset.top ) + curTop;</div><div class='line' id='LC9213'>		}</div><div class='line' id='LC9214'>		if ( options.left != null ) {</div><div class='line' id='LC9215'>			props.left = ( options.left - curOffset.left ) + curLeft;</div><div class='line' id='LC9216'>		}</div><div class='line' id='LC9217'><br/></div><div class='line' id='LC9218'>		if ( &quot;using&quot; in options ) {</div><div class='line' id='LC9219'>			options.using.call( elem, props );</div><div class='line' id='LC9220'>		} else {</div><div class='line' id='LC9221'>			curElem.css( props );</div><div class='line' id='LC9222'>		}</div><div class='line' id='LC9223'>	}</div><div class='line' id='LC9224'>};</div><div class='line' id='LC9225'><br/></div><div class='line' id='LC9226'><br/></div><div class='line' id='LC9227'>jQuery.fn.extend({</div><div class='line' id='LC9228'><br/></div><div class='line' id='LC9229'>	position: function() {</div><div class='line' id='LC9230'>		if ( !this[0] ) {</div><div class='line' id='LC9231'>			return null;</div><div class='line' id='LC9232'>		}</div><div class='line' id='LC9233'><br/></div><div class='line' id='LC9234'>		var elem = this[0],</div><div class='line' id='LC9235'><br/></div><div class='line' id='LC9236'>		// Get *real* offsetParent</div><div class='line' id='LC9237'>		offsetParent = this.offsetParent(),</div><div class='line' id='LC9238'><br/></div><div class='line' id='LC9239'>		// Get correct offsets</div><div class='line' id='LC9240'>		offset       = this.offset(),</div><div class='line' id='LC9241'>		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();</div><div class='line' id='LC9242'><br/></div><div class='line' id='LC9243'>		// Subtract element margins</div><div class='line' id='LC9244'>		// note: when an element has margin: auto the offsetLeft and marginLeft</div><div class='line' id='LC9245'>		// are the same in Safari causing offset.left to incorrectly be 0</div><div class='line' id='LC9246'>		offset.top  -= parseFloat( jQuery.css(elem, &quot;marginTop&quot;) ) || 0;</div><div class='line' id='LC9247'>		offset.left -= parseFloat( jQuery.css(elem, &quot;marginLeft&quot;) ) || 0;</div><div class='line' id='LC9248'><br/></div><div class='line' id='LC9249'>		// Add offsetParent borders</div><div class='line' id='LC9250'>		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], &quot;borderTopWidth&quot;) ) || 0;</div><div class='line' id='LC9251'>		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], &quot;borderLeftWidth&quot;) ) || 0;</div><div class='line' id='LC9252'><br/></div><div class='line' id='LC9253'>		// Subtract the two offsets</div><div class='line' id='LC9254'>		return {</div><div class='line' id='LC9255'>			top:  offset.top  - parentOffset.top,</div><div class='line' id='LC9256'>			left: offset.left - parentOffset.left</div><div class='line' id='LC9257'>		};</div><div class='line' id='LC9258'>	},</div><div class='line' id='LC9259'><br/></div><div class='line' id='LC9260'>	offsetParent: function() {</div><div class='line' id='LC9261'>		return this.map(function() {</div><div class='line' id='LC9262'>			var offsetParent = this.offsetParent || document.body;</div><div class='line' id='LC9263'>			while ( offsetParent &amp;&amp; (!rroot.test(offsetParent.nodeName) &amp;&amp; jQuery.css(offsetParent, &quot;position&quot;) === &quot;static&quot;) ) {</div><div class='line' id='LC9264'>				offsetParent = offsetParent.offsetParent;</div><div class='line' id='LC9265'>			}</div><div class='line' id='LC9266'>			return offsetParent;</div><div class='line' id='LC9267'>		});</div><div class='line' id='LC9268'>	}</div><div class='line' id='LC9269'>});</div><div class='line' id='LC9270'><br/></div><div class='line' id='LC9271'><br/></div><div class='line' id='LC9272'>// Create scrollLeft and scrollTop methods</div><div class='line' id='LC9273'>jQuery.each( {scrollLeft: &quot;pageXOffset&quot;, scrollTop: &quot;pageYOffset&quot;}, function( method, prop ) {</div><div class='line' id='LC9274'>	var top = /Y/.test( prop );</div><div class='line' id='LC9275'><br/></div><div class='line' id='LC9276'>	jQuery.fn[ method ] = function( val ) {</div><div class='line' id='LC9277'>		return jQuery.access( this, function( elem, method, val ) {</div><div class='line' id='LC9278'>			var win = getWindow( elem );</div><div class='line' id='LC9279'><br/></div><div class='line' id='LC9280'>			if ( val === undefined ) {</div><div class='line' id='LC9281'>				return win ? (prop in win) ? win[ prop ] :</div><div class='line' id='LC9282'>					jQuery.support.boxModel &amp;&amp; win.document.documentElement[ method ] ||</div><div class='line' id='LC9283'>						win.document.body[ method ] :</div><div class='line' id='LC9284'>					elem[ method ];</div><div class='line' id='LC9285'>			}</div><div class='line' id='LC9286'><br/></div><div class='line' id='LC9287'>			if ( win ) {</div><div class='line' id='LC9288'>				win.scrollTo(</div><div class='line' id='LC9289'>					!top ? val : jQuery( win ).scrollLeft(),</div><div class='line' id='LC9290'>					 top ? val : jQuery( win ).scrollTop()</div><div class='line' id='LC9291'>				);</div><div class='line' id='LC9292'><br/></div><div class='line' id='LC9293'>			} else {</div><div class='line' id='LC9294'>				elem[ method ] = val;</div><div class='line' id='LC9295'>			}</div><div class='line' id='LC9296'>		}, method, val, arguments.length, null );</div><div class='line' id='LC9297'>	};</div><div class='line' id='LC9298'>});</div><div class='line' id='LC9299'><br/></div><div class='line' id='LC9300'>function getWindow( elem ) {</div><div class='line' id='LC9301'>	return jQuery.isWindow( elem ) ?</div><div class='line' id='LC9302'>		elem :</div><div class='line' id='LC9303'>		elem.nodeType === 9 ?</div><div class='line' id='LC9304'>			elem.defaultView || elem.parentWindow :</div><div class='line' id='LC9305'>			false;</div><div class='line' id='LC9306'>}</div><div class='line' id='LC9307'><br/></div><div class='line' id='LC9308'><br/></div><div class='line' id='LC9309'><br/></div><div class='line' id='LC9310'><br/></div><div class='line' id='LC9311'>// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods</div><div class='line' id='LC9312'>jQuery.each( { Height: &quot;height&quot;, Width: &quot;width&quot; }, function( name, type ) {</div><div class='line' id='LC9313'>	var clientProp = &quot;client&quot; + name,</div><div class='line' id='LC9314'>		scrollProp = &quot;scroll&quot; + name,</div><div class='line' id='LC9315'>		offsetProp = &quot;offset&quot; + name;</div><div class='line' id='LC9316'><br/></div><div class='line' id='LC9317'>	// innerHeight and innerWidth</div><div class='line' id='LC9318'>	jQuery.fn[ &quot;inner&quot; + name ] = function() {</div><div class='line' id='LC9319'>		var elem = this[0];</div><div class='line' id='LC9320'>		return elem ?</div><div class='line' id='LC9321'>			elem.style ?</div><div class='line' id='LC9322'>			parseFloat( jQuery.css( elem, type, &quot;padding&quot; ) ) :</div><div class='line' id='LC9323'>			this[ type ]() :</div><div class='line' id='LC9324'>			null;</div><div class='line' id='LC9325'>	};</div><div class='line' id='LC9326'><br/></div><div class='line' id='LC9327'>	// outerHeight and outerWidth</div><div class='line' id='LC9328'>	jQuery.fn[ &quot;outer&quot; + name ] = function( margin ) {</div><div class='line' id='LC9329'>		var elem = this[0];</div><div class='line' id='LC9330'>		return elem ?</div><div class='line' id='LC9331'>			elem.style ?</div><div class='line' id='LC9332'>			parseFloat( jQuery.css( elem, type, margin ? &quot;margin&quot; : &quot;border&quot; ) ) :</div><div class='line' id='LC9333'>			this[ type ]() :</div><div class='line' id='LC9334'>			null;</div><div class='line' id='LC9335'>	};</div><div class='line' id='LC9336'><br/></div><div class='line' id='LC9337'>	jQuery.fn[ type ] = function( value ) {</div><div class='line' id='LC9338'>		return jQuery.access( this, function( elem, type, value ) {</div><div class='line' id='LC9339'>			var doc, docElemProp, orig, ret;</div><div class='line' id='LC9340'><br/></div><div class='line' id='LC9341'>			if ( jQuery.isWindow( elem ) ) {</div><div class='line' id='LC9342'>				// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat</div><div class='line' id='LC9343'>				doc = elem.document;</div><div class='line' id='LC9344'>				docElemProp = doc.documentElement[ clientProp ];</div><div class='line' id='LC9345'>				return jQuery.support.boxModel &amp;&amp; docElemProp ||</div><div class='line' id='LC9346'>					doc.body &amp;&amp; doc.body[ clientProp ] || docElemProp;</div><div class='line' id='LC9347'>			}</div><div class='line' id='LC9348'><br/></div><div class='line' id='LC9349'>			// Get document width or height</div><div class='line' id='LC9350'>			if ( elem.nodeType === 9 ) {</div><div class='line' id='LC9351'>				// Either scroll[Width/Height] or offset[Width/Height], whichever is greater</div><div class='line' id='LC9352'>				doc = elem.documentElement;</div><div class='line' id='LC9353'><br/></div><div class='line' id='LC9354'>				// when a window &gt; document, IE6 reports a offset[Width/Height] &gt; client[Width/Height]</div><div class='line' id='LC9355'>				// so we can&#39;t use max, as it&#39;ll choose the incorrect offset[Width/Height]</div><div class='line' id='LC9356'>				// instead we use the correct client[Width/Height]</div><div class='line' id='LC9357'>				// support:IE6</div><div class='line' id='LC9358'>				if ( doc[ clientProp ] &gt;= doc[ scrollProp ] ) {</div><div class='line' id='LC9359'>					return doc[ clientProp ];</div><div class='line' id='LC9360'>				}</div><div class='line' id='LC9361'><br/></div><div class='line' id='LC9362'>				return Math.max(</div><div class='line' id='LC9363'>					elem.body[ scrollProp ], doc[ scrollProp ],</div><div class='line' id='LC9364'>					elem.body[ offsetProp ], doc[ offsetProp ]</div><div class='line' id='LC9365'>				);</div><div class='line' id='LC9366'>			}</div><div class='line' id='LC9367'><br/></div><div class='line' id='LC9368'>			// Get width or height on the element</div><div class='line' id='LC9369'>			if ( value === undefined ) {</div><div class='line' id='LC9370'>				orig = jQuery.css( elem, type );</div><div class='line' id='LC9371'>				ret = parseFloat( orig );</div><div class='line' id='LC9372'>				return jQuery.isNumeric( ret ) ? ret : orig;</div><div class='line' id='LC9373'>			}</div><div class='line' id='LC9374'><br/></div><div class='line' id='LC9375'>			// Set the width or height on the element</div><div class='line' id='LC9376'>			jQuery( elem ).css( type, value );</div><div class='line' id='LC9377'>		}, type, value, arguments.length, null );</div><div class='line' id='LC9378'>	};</div><div class='line' id='LC9379'>});</div><div class='line' id='LC9380'><br/></div><div class='line' id='LC9381'><br/></div><div class='line' id='LC9382'><br/></div><div class='line' id='LC9383'><br/></div><div class='line' id='LC9384'>// Expose jQuery to the global object</div><div class='line' id='LC9385'>window.jQuery = window.$ = jQuery;</div><div class='line' id='LC9386'><br/></div><div class='line' id='LC9387'>// Expose jQuery as an AMD module, but only for AMD loaders that</div><div class='line' id='LC9388'>// understand the issues with loading multiple versions of jQuery</div><div class='line' id='LC9389'>// in a page that all might call define(). The loader will indicate</div><div class='line' id='LC9390'>// they have special allowances for multiple jQuery versions by</div><div class='line' id='LC9391'>// specifying define.amd.jQuery = true. Register as a named module,</div><div class='line' id='LC9392'>// since jQuery can be concatenated with other files that may use define,</div><div class='line' id='LC9393'>// but not use a proper concatenation script that understands anonymous</div><div class='line' id='LC9394'>// AMD modules. A named AMD is safest and most robust way to register.</div><div class='line' id='LC9395'>// Lowercase jquery is used because AMD module names are derived from</div><div class='line' id='LC9396'>// file names, and jQuery is normally delivered in a lowercase file name.</div><div class='line' id='LC9397'>// Do this after creating the global so that if an AMD module wants to call</div><div class='line' id='LC9398'>// noConflict to hide this version of jQuery, it will work.</div><div class='line' id='LC9399'>if ( typeof define === &quot;function&quot; &amp;&amp; define.amd &amp;&amp; define.amd.jQuery ) {</div><div class='line' id='LC9400'>	define( &quot;jquery&quot;, [], function () { return jQuery; } );</div><div class='line' id='LC9401'>}</div><div class='line' id='LC9402'><br/></div><div class='line' id='LC9403'><br/></div><div class='line' id='LC9404'><br/></div><div class='line' id='LC9405'>})( window );</div><div class='line' id='LC9406'><br/></div><div class='line' id='LC9407'>/**</div><div class='line' id='LC9408'>&nbsp;* @license AngularJS v1.0.7</div><div class='line' id='LC9409'>&nbsp;* (c) 2010-2012 Google, Inc. http://angularjs.org</div><div class='line' id='LC9410'>&nbsp;* License: MIT</div><div class='line' id='LC9411'>&nbsp;*/</div><div class='line' id='LC9412'>(function(window, document){</div><div class='line' id='LC9413'>&nbsp;&nbsp;var _jQuery = window.jQuery.noConflict(true);</div><div class='line' id='LC9414'><br/></div><div class='line' id='LC9415'>////////////////////////////////////</div><div class='line' id='LC9416'><br/></div><div class='line' id='LC9417'>/**</div><div class='line' id='LC9418'>&nbsp;* @ngdoc function</div><div class='line' id='LC9419'>&nbsp;* @name angular.lowercase</div><div class='line' id='LC9420'>&nbsp;* @function</div><div class='line' id='LC9421'>&nbsp;*</div><div class='line' id='LC9422'>&nbsp;* @description Converts the specified string to lowercase.</div><div class='line' id='LC9423'>&nbsp;* @param {string} string String to be converted to lowercase.</div><div class='line' id='LC9424'>&nbsp;* @returns {string} Lowercased string.</div><div class='line' id='LC9425'>&nbsp;*/</div><div class='line' id='LC9426'>var lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};</div><div class='line' id='LC9427'><br/></div><div class='line' id='LC9428'><br/></div><div class='line' id='LC9429'>/**</div><div class='line' id='LC9430'>&nbsp;* @ngdoc function</div><div class='line' id='LC9431'>&nbsp;* @name angular.uppercase</div><div class='line' id='LC9432'>&nbsp;* @function</div><div class='line' id='LC9433'>&nbsp;*</div><div class='line' id='LC9434'>&nbsp;* @description Converts the specified string to uppercase.</div><div class='line' id='LC9435'>&nbsp;* @param {string} string String to be converted to uppercase.</div><div class='line' id='LC9436'>&nbsp;* @returns {string} Uppercased string.</div><div class='line' id='LC9437'>&nbsp;*/</div><div class='line' id='LC9438'>var uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};</div><div class='line' id='LC9439'><br/></div><div class='line' id='LC9440'><br/></div><div class='line' id='LC9441'>var manualLowercase = function(s) {</div><div class='line' id='LC9442'>&nbsp;&nbsp;return isString(s)</div><div class='line' id='LC9443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})</div><div class='line' id='LC9444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: s;</div><div class='line' id='LC9445'>};</div><div class='line' id='LC9446'>var manualUppercase = function(s) {</div><div class='line' id='LC9447'>&nbsp;&nbsp;return isString(s)</div><div class='line' id='LC9448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) &amp; ~32);})</div><div class='line' id='LC9449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: s;</div><div class='line' id='LC9450'>};</div><div class='line' id='LC9451'><br/></div><div class='line' id='LC9452'><br/></div><div class='line' id='LC9453'>// String#toLowerCase and String#toUpperCase don&#39;t produce correct results in browsers with Turkish</div><div class='line' id='LC9454'>// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods</div><div class='line' id='LC9455'>// with correct but slower alternatives.</div><div class='line' id='LC9456'>if (&#39;i&#39; !== &#39;I&#39;.toLowerCase()) {</div><div class='line' id='LC9457'>&nbsp;&nbsp;lowercase = manualLowercase;</div><div class='line' id='LC9458'>&nbsp;&nbsp;uppercase = manualUppercase;</div><div class='line' id='LC9459'>}</div><div class='line' id='LC9460'><br/></div><div class='line' id='LC9461'><br/></div><div class='line' id='LC9462'>var /** holds major version number for IE or NaN for real browsers */</div><div class='line' id='LC9463'>&nbsp;&nbsp;&nbsp;&nbsp;msie              = int((/msie (\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]),</div><div class='line' id='LC9464'>&nbsp;&nbsp;&nbsp;&nbsp;jqLite,           // delay binding since jQuery could be loaded after us.</div><div class='line' id='LC9465'>&nbsp;&nbsp;&nbsp;&nbsp;jQuery,           // delay binding</div><div class='line' id='LC9466'>&nbsp;&nbsp;&nbsp;&nbsp;slice             = [].slice,</div><div class='line' id='LC9467'>&nbsp;&nbsp;&nbsp;&nbsp;push              = [].push,</div><div class='line' id='LC9468'>&nbsp;&nbsp;&nbsp;&nbsp;toString          = Object.prototype.toString,</div><div class='line' id='LC9469'><br/></div><div class='line' id='LC9470'>&nbsp;&nbsp;&nbsp;&nbsp;/** @name angular */</div><div class='line' id='LC9471'>&nbsp;&nbsp;&nbsp;&nbsp;angular           = window.angular || (window.angular = {}),</div><div class='line' id='LC9472'>&nbsp;&nbsp;&nbsp;&nbsp;angularModule,</div><div class='line' id='LC9473'>&nbsp;&nbsp;&nbsp;&nbsp;nodeName_,</div><div class='line' id='LC9474'>&nbsp;&nbsp;&nbsp;&nbsp;uid               = [&#39;0&#39;, &#39;0&#39;, &#39;0&#39;];</div><div class='line' id='LC9475'><br/></div><div class='line' id='LC9476'><br/></div><div class='line' id='LC9477'>/**</div><div class='line' id='LC9478'>&nbsp;* @private</div><div class='line' id='LC9479'>&nbsp;* @param {*} obj</div><div class='line' id='LC9480'>&nbsp;* @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments, ...)</div><div class='line' id='LC9481'>&nbsp;*/</div><div class='line' id='LC9482'>function isArrayLike(obj) {</div><div class='line' id='LC9483'>&nbsp;&nbsp;if (!obj || (typeof obj.length !== &#39;number&#39;)) return false;</div><div class='line' id='LC9484'><br/></div><div class='line' id='LC9485'>&nbsp;&nbsp;// We have on object which has length property. Should we treat it as array?</div><div class='line' id='LC9486'>&nbsp;&nbsp;if (typeof obj.hasOwnProperty != &#39;function&#39; &amp;&amp;</div><div class='line' id='LC9487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeof obj.constructor != &#39;function&#39;) {</div><div class='line' id='LC9488'>&nbsp;&nbsp;&nbsp;&nbsp;// This is here for IE8: it is a bogus object treat it as array;</div><div class='line' id='LC9489'>&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9490'>&nbsp;&nbsp;} else  {</div><div class='line' id='LC9491'>&nbsp;&nbsp;&nbsp;&nbsp;return obj instanceof JQLite ||                      // JQLite</div><div class='line' id='LC9492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(jQuery &amp;&amp; obj instanceof jQuery) ||          // jQuery</div><div class='line' id='LC9493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toString.call(obj) !== &#39;[object Object]&#39; ||   // some browser native object</div><div class='line' id='LC9494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeof obj.callee === &#39;function&#39;;              // arguments (on IE8 looks like regular obj)</div><div class='line' id='LC9495'>&nbsp;&nbsp;}</div><div class='line' id='LC9496'>}</div><div class='line' id='LC9497'><br/></div><div class='line' id='LC9498'><br/></div><div class='line' id='LC9499'>/**</div><div class='line' id='LC9500'>&nbsp;* @ngdoc function</div><div class='line' id='LC9501'>&nbsp;* @name angular.forEach</div><div class='line' id='LC9502'>&nbsp;* @function</div><div class='line' id='LC9503'>&nbsp;*</div><div class='line' id='LC9504'>&nbsp;* @description</div><div class='line' id='LC9505'>&nbsp;* Invokes the `iterator` function once for each item in `obj` collection, which can be either an</div><div class='line' id='LC9506'>&nbsp;* object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`</div><div class='line' id='LC9507'>&nbsp;* is the value of an object property or an array element and `key` is the object property key or</div><div class='line' id='LC9508'>&nbsp;* array element index. Specifying a `context` for the function is optional.</div><div class='line' id='LC9509'>&nbsp;*</div><div class='line' id='LC9510'>&nbsp;* Note: this function was previously known as `angular.foreach`.</div><div class='line' id='LC9511'>&nbsp;*</div><div class='line' id='LC9512'>&nbsp;&nbsp;&nbsp;&lt;pre&gt;</div><div class='line' id='LC9513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var values = {name: &#39;misko&#39;, gender: &#39;male&#39;};</div><div class='line' id='LC9514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var log = [];</div><div class='line' id='LC9515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(values, function(value, key){</div><div class='line' id='LC9516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.push(key + &#39;: &#39; + value);</div><div class='line' id='LC9517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, log);</div><div class='line' id='LC9518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(log).toEqual([&#39;name: misko&#39;, &#39;gender:male&#39;]);</div><div class='line' id='LC9519'>&nbsp;&nbsp;&nbsp;&lt;/pre&gt;</div><div class='line' id='LC9520'>&nbsp;*</div><div class='line' id='LC9521'>&nbsp;* @param {Object|Array} obj Object to iterate over.</div><div class='line' id='LC9522'>&nbsp;* @param {Function} iterator Iterator function.</div><div class='line' id='LC9523'>&nbsp;* @param {Object=} context Object to become context (`this`) for the iterator function.</div><div class='line' id='LC9524'>&nbsp;* @returns {Object|Array} Reference to `obj`.</div><div class='line' id='LC9525'>&nbsp;*/</div><div class='line' id='LC9526'>function forEach(obj, iterator, context) {</div><div class='line' id='LC9527'>&nbsp;&nbsp;var key;</div><div class='line' id='LC9528'>&nbsp;&nbsp;if (obj) {</div><div class='line' id='LC9529'>&nbsp;&nbsp;&nbsp;&nbsp;if (isFunction(obj)){</div><div class='line' id='LC9530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in obj) {</div><div class='line' id='LC9531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key != &#39;prototype&#39; &amp;&amp; key != &#39;length&#39; &amp;&amp; key != &#39;name&#39; &amp;&amp; obj.hasOwnProperty(key)) {</div><div class='line' id='LC9532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator.call(context, obj[key], key);</div><div class='line' id='LC9533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9535'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (obj.forEach &amp;&amp; obj.forEach !== forEach) {</div><div class='line' id='LC9536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.forEach(iterator, context);</div><div class='line' id='LC9537'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (isArrayLike(obj)) {</div><div class='line' id='LC9538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key = 0; key &lt; obj.length; key++)</div><div class='line' id='LC9539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator.call(context, obj[key], key);</div><div class='line' id='LC9540'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in obj) {</div><div class='line' id='LC9542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (obj.hasOwnProperty(key)) {</div><div class='line' id='LC9543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator.call(context, obj[key], key);</div><div class='line' id='LC9544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9546'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9547'>&nbsp;&nbsp;}</div><div class='line' id='LC9548'>&nbsp;&nbsp;return obj;</div><div class='line' id='LC9549'>}</div><div class='line' id='LC9550'><br/></div><div class='line' id='LC9551'>function sortedKeys(obj) {</div><div class='line' id='LC9552'>&nbsp;&nbsp;var keys = [];</div><div class='line' id='LC9553'>&nbsp;&nbsp;for (var key in obj) {</div><div class='line' id='LC9554'>&nbsp;&nbsp;&nbsp;&nbsp;if (obj.hasOwnProperty(key)) {</div><div class='line' id='LC9555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(key);</div><div class='line' id='LC9556'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9557'>&nbsp;&nbsp;}</div><div class='line' id='LC9558'>&nbsp;&nbsp;return keys.sort();</div><div class='line' id='LC9559'>}</div><div class='line' id='LC9560'><br/></div><div class='line' id='LC9561'>function forEachSorted(obj, iterator, context) {</div><div class='line' id='LC9562'>&nbsp;&nbsp;var keys = sortedKeys(obj);</div><div class='line' id='LC9563'>&nbsp;&nbsp;for ( var i = 0; i &lt; keys.length; i++) {</div><div class='line' id='LC9564'>&nbsp;&nbsp;&nbsp;&nbsp;iterator.call(context, obj[keys[i]], keys[i]);</div><div class='line' id='LC9565'>&nbsp;&nbsp;}</div><div class='line' id='LC9566'>&nbsp;&nbsp;return keys;</div><div class='line' id='LC9567'>}</div><div class='line' id='LC9568'><br/></div><div class='line' id='LC9569'><br/></div><div class='line' id='LC9570'>/**</div><div class='line' id='LC9571'>&nbsp;* when using forEach the params are value, key, but it is often useful to have key, value.</div><div class='line' id='LC9572'>&nbsp;* @param {function(string, *)} iteratorFn</div><div class='line' id='LC9573'>&nbsp;* @returns {function(*, string)}</div><div class='line' id='LC9574'>&nbsp;*/</div><div class='line' id='LC9575'>function reverseParams(iteratorFn) {</div><div class='line' id='LC9576'>&nbsp;&nbsp;return function(value, key) { iteratorFn(key, value) };</div><div class='line' id='LC9577'>}</div><div class='line' id='LC9578'><br/></div><div class='line' id='LC9579'>/**</div><div class='line' id='LC9580'>&nbsp;* A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric</div><div class='line' id='LC9581'>&nbsp;* characters such as &#39;012ABC&#39;. The reason why we are not using simply a number counter is that</div><div class='line' id='LC9582'>&nbsp;* the number string gets longer over time, and it can also overflow, where as the nextId</div><div class='line' id='LC9583'>&nbsp;* will grow much slower, it is a string, and it will never overflow.</div><div class='line' id='LC9584'>&nbsp;*</div><div class='line' id='LC9585'>&nbsp;* @returns an unique alpha-numeric string</div><div class='line' id='LC9586'>&nbsp;*/</div><div class='line' id='LC9587'>function nextUid() {</div><div class='line' id='LC9588'>&nbsp;&nbsp;var index = uid.length;</div><div class='line' id='LC9589'>&nbsp;&nbsp;var digit;</div><div class='line' id='LC9590'><br/></div><div class='line' id='LC9591'>&nbsp;&nbsp;while(index) {</div><div class='line' id='LC9592'>&nbsp;&nbsp;&nbsp;&nbsp;index--;</div><div class='line' id='LC9593'>&nbsp;&nbsp;&nbsp;&nbsp;digit = uid[index].charCodeAt(0);</div><div class='line' id='LC9594'>&nbsp;&nbsp;&nbsp;&nbsp;if (digit == 57 /*&#39;9&#39;*/) {</div><div class='line' id='LC9595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uid[index] = &#39;A&#39;;</div><div class='line' id='LC9596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return uid.join(&#39;&#39;);</div><div class='line' id='LC9597'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9598'>&nbsp;&nbsp;&nbsp;&nbsp;if (digit == 90  /*&#39;Z&#39;*/) {</div><div class='line' id='LC9599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uid[index] = &#39;0&#39;;</div><div class='line' id='LC9600'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uid[index] = String.fromCharCode(digit + 1);</div><div class='line' id='LC9602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return uid.join(&#39;&#39;);</div><div class='line' id='LC9603'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9604'>&nbsp;&nbsp;}</div><div class='line' id='LC9605'>&nbsp;&nbsp;uid.unshift(&#39;0&#39;);</div><div class='line' id='LC9606'>&nbsp;&nbsp;return uid.join(&#39;&#39;);</div><div class='line' id='LC9607'>}</div><div class='line' id='LC9608'><br/></div><div class='line' id='LC9609'><br/></div><div class='line' id='LC9610'>/**</div><div class='line' id='LC9611'>&nbsp;* Set or clear the hashkey for an object.</div><div class='line' id='LC9612'>&nbsp;* @param obj object </div><div class='line' id='LC9613'>&nbsp;* @param h the hashkey (!truthy to delete the hashkey)</div><div class='line' id='LC9614'>&nbsp;*/</div><div class='line' id='LC9615'>function setHashKey(obj, h) {</div><div class='line' id='LC9616'>&nbsp;&nbsp;if (h) {</div><div class='line' id='LC9617'>&nbsp;&nbsp;&nbsp;&nbsp;obj.$$hashKey = h;</div><div class='line' id='LC9618'>&nbsp;&nbsp;}</div><div class='line' id='LC9619'>&nbsp;&nbsp;else {</div><div class='line' id='LC9620'>&nbsp;&nbsp;&nbsp;&nbsp;delete obj.$$hashKey;</div><div class='line' id='LC9621'>&nbsp;&nbsp;}</div><div class='line' id='LC9622'>}</div><div class='line' id='LC9623'><br/></div><div class='line' id='LC9624'>/**</div><div class='line' id='LC9625'>&nbsp;* @ngdoc function</div><div class='line' id='LC9626'>&nbsp;* @name angular.extend</div><div class='line' id='LC9627'>&nbsp;* @function</div><div class='line' id='LC9628'>&nbsp;*</div><div class='line' id='LC9629'>&nbsp;* @description</div><div class='line' id='LC9630'>&nbsp;* Extends the destination object `dst` by copying all of the properties from the `src` object(s)</div><div class='line' id='LC9631'>&nbsp;* to `dst`. You can specify multiple `src` objects.</div><div class='line' id='LC9632'>&nbsp;*</div><div class='line' id='LC9633'>&nbsp;* @param {Object} dst Destination object.</div><div class='line' id='LC9634'>&nbsp;* @param {...Object} src Source object(s).</div><div class='line' id='LC9635'>&nbsp;* @returns {Object} Reference to `dst`.</div><div class='line' id='LC9636'>&nbsp;*/</div><div class='line' id='LC9637'>function extend(dst) {</div><div class='line' id='LC9638'>&nbsp;&nbsp;var h = dst.$$hashKey;</div><div class='line' id='LC9639'>&nbsp;&nbsp;forEach(arguments, function(obj){</div><div class='line' id='LC9640'>&nbsp;&nbsp;&nbsp;&nbsp;if (obj !== dst) {</div><div class='line' id='LC9641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(obj, function(value, key){</div><div class='line' id='LC9642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst[key] = value;</div><div class='line' id='LC9643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9644'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9645'>&nbsp;&nbsp;});</div><div class='line' id='LC9646'><br/></div><div class='line' id='LC9647'>&nbsp;&nbsp;setHashKey(dst,h);</div><div class='line' id='LC9648'>&nbsp;&nbsp;return dst;</div><div class='line' id='LC9649'>}</div><div class='line' id='LC9650'><br/></div><div class='line' id='LC9651'>function int(str) {</div><div class='line' id='LC9652'>&nbsp;&nbsp;return parseInt(str, 10);</div><div class='line' id='LC9653'>}</div><div class='line' id='LC9654'><br/></div><div class='line' id='LC9655'><br/></div><div class='line' id='LC9656'>function inherit(parent, extra) {</div><div class='line' id='LC9657'>&nbsp;&nbsp;return extend(new (extend(function() {}, {prototype:parent}))(), extra);</div><div class='line' id='LC9658'>}</div><div class='line' id='LC9659'><br/></div><div class='line' id='LC9660'><br/></div><div class='line' id='LC9661'>/**</div><div class='line' id='LC9662'>&nbsp;* @ngdoc function</div><div class='line' id='LC9663'>&nbsp;* @name angular.noop</div><div class='line' id='LC9664'>&nbsp;* @function</div><div class='line' id='LC9665'>&nbsp;*</div><div class='line' id='LC9666'>&nbsp;* @description</div><div class='line' id='LC9667'>&nbsp;* A function that performs no operations. This function can be useful when writing code in the</div><div class='line' id='LC9668'>&nbsp;* functional style.</div><div class='line' id='LC9669'>&nbsp;&nbsp;&nbsp;&lt;pre&gt;</div><div class='line' id='LC9670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function foo(callback) {</div><div class='line' id='LC9671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = calculateResult();</div><div class='line' id='LC9672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(callback || angular.noop)(result);</div><div class='line' id='LC9673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9674'>&nbsp;&nbsp;&nbsp;&lt;/pre&gt;</div><div class='line' id='LC9675'>&nbsp;*/</div><div class='line' id='LC9676'>function noop() {}</div><div class='line' id='LC9677'>noop.$inject = [];</div><div class='line' id='LC9678'><br/></div><div class='line' id='LC9679'><br/></div><div class='line' id='LC9680'>/**</div><div class='line' id='LC9681'>&nbsp;* @ngdoc function</div><div class='line' id='LC9682'>&nbsp;* @name angular.identity</div><div class='line' id='LC9683'>&nbsp;* @function</div><div class='line' id='LC9684'>&nbsp;*</div><div class='line' id='LC9685'>&nbsp;* @description</div><div class='line' id='LC9686'>&nbsp;* A function that returns its first argument. This function is useful when writing code in the</div><div class='line' id='LC9687'>&nbsp;* functional style.</div><div class='line' id='LC9688'>&nbsp;*</div><div class='line' id='LC9689'>&nbsp;&nbsp;&nbsp;&lt;pre&gt;</div><div class='line' id='LC9690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function transformer(transformationFn, value) {</div><div class='line' id='LC9691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (transformationFn || identity)(value);</div><div class='line' id='LC9692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9693'>&nbsp;&nbsp;&nbsp;&lt;/pre&gt;</div><div class='line' id='LC9694'>&nbsp;*/</div><div class='line' id='LC9695'>function identity($) {return $;}</div><div class='line' id='LC9696'>identity.$inject = [];</div><div class='line' id='LC9697'><br/></div><div class='line' id='LC9698'><br/></div><div class='line' id='LC9699'>function valueFn(value) {return function() {return value;};}</div><div class='line' id='LC9700'><br/></div><div class='line' id='LC9701'>/**</div><div class='line' id='LC9702'>&nbsp;* @ngdoc function</div><div class='line' id='LC9703'>&nbsp;* @name angular.isUndefined</div><div class='line' id='LC9704'>&nbsp;* @function</div><div class='line' id='LC9705'>&nbsp;*</div><div class='line' id='LC9706'>&nbsp;* @description</div><div class='line' id='LC9707'>&nbsp;* Determines if a reference is undefined.</div><div class='line' id='LC9708'>&nbsp;*</div><div class='line' id='LC9709'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9710'>&nbsp;* @returns {boolean} True if `value` is undefined.</div><div class='line' id='LC9711'>&nbsp;*/</div><div class='line' id='LC9712'>function isUndefined(value){return typeof value == &#39;undefined&#39;;}</div><div class='line' id='LC9713'><br/></div><div class='line' id='LC9714'><br/></div><div class='line' id='LC9715'>/**</div><div class='line' id='LC9716'>&nbsp;* @ngdoc function</div><div class='line' id='LC9717'>&nbsp;* @name angular.isDefined</div><div class='line' id='LC9718'>&nbsp;* @function</div><div class='line' id='LC9719'>&nbsp;*</div><div class='line' id='LC9720'>&nbsp;* @description</div><div class='line' id='LC9721'>&nbsp;* Determines if a reference is defined.</div><div class='line' id='LC9722'>&nbsp;*</div><div class='line' id='LC9723'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9724'>&nbsp;* @returns {boolean} True if `value` is defined.</div><div class='line' id='LC9725'>&nbsp;*/</div><div class='line' id='LC9726'>function isDefined(value){return typeof value != &#39;undefined&#39;;}</div><div class='line' id='LC9727'><br/></div><div class='line' id='LC9728'><br/></div><div class='line' id='LC9729'>/**</div><div class='line' id='LC9730'>&nbsp;* @ngdoc function</div><div class='line' id='LC9731'>&nbsp;* @name angular.isObject</div><div class='line' id='LC9732'>&nbsp;* @function</div><div class='line' id='LC9733'>&nbsp;*</div><div class='line' id='LC9734'>&nbsp;* @description</div><div class='line' id='LC9735'>&nbsp;* Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not</div><div class='line' id='LC9736'>&nbsp;* considered to be objects.</div><div class='line' id='LC9737'>&nbsp;*</div><div class='line' id='LC9738'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9739'>&nbsp;* @returns {boolean} True if `value` is an `Object` but not `null`.</div><div class='line' id='LC9740'>&nbsp;*/</div><div class='line' id='LC9741'>function isObject(value){return value != null &amp;&amp; typeof value == &#39;object&#39;;}</div><div class='line' id='LC9742'><br/></div><div class='line' id='LC9743'><br/></div><div class='line' id='LC9744'>/**</div><div class='line' id='LC9745'>&nbsp;* @ngdoc function</div><div class='line' id='LC9746'>&nbsp;* @name angular.isString</div><div class='line' id='LC9747'>&nbsp;* @function</div><div class='line' id='LC9748'>&nbsp;*</div><div class='line' id='LC9749'>&nbsp;* @description</div><div class='line' id='LC9750'>&nbsp;* Determines if a reference is a `String`.</div><div class='line' id='LC9751'>&nbsp;*</div><div class='line' id='LC9752'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9753'>&nbsp;* @returns {boolean} True if `value` is a `String`.</div><div class='line' id='LC9754'>&nbsp;*/</div><div class='line' id='LC9755'>function isString(value){return typeof value == &#39;string&#39;;}</div><div class='line' id='LC9756'><br/></div><div class='line' id='LC9757'><br/></div><div class='line' id='LC9758'>/**</div><div class='line' id='LC9759'>&nbsp;* @ngdoc function</div><div class='line' id='LC9760'>&nbsp;* @name angular.isNumber</div><div class='line' id='LC9761'>&nbsp;* @function</div><div class='line' id='LC9762'>&nbsp;*</div><div class='line' id='LC9763'>&nbsp;* @description</div><div class='line' id='LC9764'>&nbsp;* Determines if a reference is a `Number`.</div><div class='line' id='LC9765'>&nbsp;*</div><div class='line' id='LC9766'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9767'>&nbsp;* @returns {boolean} True if `value` is a `Number`.</div><div class='line' id='LC9768'>&nbsp;*/</div><div class='line' id='LC9769'>function isNumber(value){return typeof value == &#39;number&#39;;}</div><div class='line' id='LC9770'><br/></div><div class='line' id='LC9771'><br/></div><div class='line' id='LC9772'>/**</div><div class='line' id='LC9773'>&nbsp;* @ngdoc function</div><div class='line' id='LC9774'>&nbsp;* @name angular.isDate</div><div class='line' id='LC9775'>&nbsp;* @function</div><div class='line' id='LC9776'>&nbsp;*</div><div class='line' id='LC9777'>&nbsp;* @description</div><div class='line' id='LC9778'>&nbsp;* Determines if a value is a date.</div><div class='line' id='LC9779'>&nbsp;*</div><div class='line' id='LC9780'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9781'>&nbsp;* @returns {boolean} True if `value` is a `Date`.</div><div class='line' id='LC9782'>&nbsp;*/</div><div class='line' id='LC9783'>function isDate(value){</div><div class='line' id='LC9784'>&nbsp;&nbsp;return toString.apply(value) == &#39;[object Date]&#39;;</div><div class='line' id='LC9785'>}</div><div class='line' id='LC9786'><br/></div><div class='line' id='LC9787'><br/></div><div class='line' id='LC9788'>/**</div><div class='line' id='LC9789'>&nbsp;* @ngdoc function</div><div class='line' id='LC9790'>&nbsp;* @name angular.isArray</div><div class='line' id='LC9791'>&nbsp;* @function</div><div class='line' id='LC9792'>&nbsp;*</div><div class='line' id='LC9793'>&nbsp;* @description</div><div class='line' id='LC9794'>&nbsp;* Determines if a reference is an `Array`.</div><div class='line' id='LC9795'>&nbsp;*</div><div class='line' id='LC9796'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9797'>&nbsp;* @returns {boolean} True if `value` is an `Array`.</div><div class='line' id='LC9798'>&nbsp;*/</div><div class='line' id='LC9799'>function isArray(value) {</div><div class='line' id='LC9800'>&nbsp;&nbsp;return toString.apply(value) == &#39;[object Array]&#39;;</div><div class='line' id='LC9801'>}</div><div class='line' id='LC9802'><br/></div><div class='line' id='LC9803'><br/></div><div class='line' id='LC9804'>/**</div><div class='line' id='LC9805'>&nbsp;* @ngdoc function</div><div class='line' id='LC9806'>&nbsp;* @name angular.isFunction</div><div class='line' id='LC9807'>&nbsp;* @function</div><div class='line' id='LC9808'>&nbsp;*</div><div class='line' id='LC9809'>&nbsp;* @description</div><div class='line' id='LC9810'>&nbsp;* Determines if a reference is a `Function`.</div><div class='line' id='LC9811'>&nbsp;*</div><div class='line' id='LC9812'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9813'>&nbsp;* @returns {boolean} True if `value` is a `Function`.</div><div class='line' id='LC9814'>&nbsp;*/</div><div class='line' id='LC9815'>function isFunction(value){return typeof value == &#39;function&#39;;}</div><div class='line' id='LC9816'><br/></div><div class='line' id='LC9817'><br/></div><div class='line' id='LC9818'>/**</div><div class='line' id='LC9819'>&nbsp;* Checks if `obj` is a window object.</div><div class='line' id='LC9820'>&nbsp;*</div><div class='line' id='LC9821'>&nbsp;* @private</div><div class='line' id='LC9822'>&nbsp;* @param {*} obj Object to check</div><div class='line' id='LC9823'>&nbsp;* @returns {boolean} True if `obj` is a window obj.</div><div class='line' id='LC9824'>&nbsp;*/</div><div class='line' id='LC9825'>function isWindow(obj) {</div><div class='line' id='LC9826'>&nbsp;&nbsp;return obj &amp;&amp; obj.document &amp;&amp; obj.location &amp;&amp; obj.alert &amp;&amp; obj.setInterval;</div><div class='line' id='LC9827'>}</div><div class='line' id='LC9828'><br/></div><div class='line' id='LC9829'><br/></div><div class='line' id='LC9830'>function isScope(obj) {</div><div class='line' id='LC9831'>&nbsp;&nbsp;return obj &amp;&amp; obj.$evalAsync &amp;&amp; obj.$watch;</div><div class='line' id='LC9832'>}</div><div class='line' id='LC9833'><br/></div><div class='line' id='LC9834'><br/></div><div class='line' id='LC9835'>function isFile(obj) {</div><div class='line' id='LC9836'>&nbsp;&nbsp;return toString.apply(obj) === &#39;[object File]&#39;;</div><div class='line' id='LC9837'>}</div><div class='line' id='LC9838'><br/></div><div class='line' id='LC9839'><br/></div><div class='line' id='LC9840'>function isBoolean(value) {</div><div class='line' id='LC9841'>&nbsp;&nbsp;return typeof value == &#39;boolean&#39;;</div><div class='line' id='LC9842'>}</div><div class='line' id='LC9843'><br/></div><div class='line' id='LC9844'><br/></div><div class='line' id='LC9845'>function trim(value) {</div><div class='line' id='LC9846'>&nbsp;&nbsp;return isString(value) ? value.replace(/^\s*/, &#39;&#39;).replace(/\s*$/, &#39;&#39;) : value;</div><div class='line' id='LC9847'>}</div><div class='line' id='LC9848'><br/></div><div class='line' id='LC9849'>/**</div><div class='line' id='LC9850'>&nbsp;* @ngdoc function</div><div class='line' id='LC9851'>&nbsp;* @name angular.isElement</div><div class='line' id='LC9852'>&nbsp;* @function</div><div class='line' id='LC9853'>&nbsp;*</div><div class='line' id='LC9854'>&nbsp;* @description</div><div class='line' id='LC9855'>&nbsp;* Determines if a reference is a DOM element (or wrapped jQuery element).</div><div class='line' id='LC9856'>&nbsp;*</div><div class='line' id='LC9857'>&nbsp;* @param {*} value Reference to check.</div><div class='line' id='LC9858'>&nbsp;* @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).</div><div class='line' id='LC9859'>&nbsp;*/</div><div class='line' id='LC9860'>function isElement(node) {</div><div class='line' id='LC9861'>&nbsp;&nbsp;return node &amp;&amp;</div><div class='line' id='LC9862'>&nbsp;&nbsp;&nbsp;&nbsp;(node.nodeName  // we are a direct element</div><div class='line' id='LC9863'>&nbsp;&nbsp;&nbsp;&nbsp;|| (node.bind &amp;&amp; node.find));  // we have a bind and find method part of jQuery API</div><div class='line' id='LC9864'>}</div><div class='line' id='LC9865'><br/></div><div class='line' id='LC9866'>/**</div><div class='line' id='LC9867'>&nbsp;* @param str &#39;key1,key2,...&#39;</div><div class='line' id='LC9868'>&nbsp;* @returns {object} in the form of {key1:true, key2:true, ...}</div><div class='line' id='LC9869'>&nbsp;*/</div><div class='line' id='LC9870'>function makeMap(str){</div><div class='line' id='LC9871'>&nbsp;&nbsp;var obj = {}, items = str.split(&quot;,&quot;), i;</div><div class='line' id='LC9872'>&nbsp;&nbsp;for ( i = 0; i &lt; items.length; i++ )</div><div class='line' id='LC9873'>&nbsp;&nbsp;&nbsp;&nbsp;obj[ items[i] ] = true;</div><div class='line' id='LC9874'>&nbsp;&nbsp;return obj;</div><div class='line' id='LC9875'>}</div><div class='line' id='LC9876'><br/></div><div class='line' id='LC9877'><br/></div><div class='line' id='LC9878'>if (msie &lt; 9) {</div><div class='line' id='LC9879'>&nbsp;&nbsp;nodeName_ = function(element) {</div><div class='line' id='LC9880'>&nbsp;&nbsp;&nbsp;&nbsp;element = element.nodeName ? element : element[0];</div><div class='line' id='LC9881'>&nbsp;&nbsp;&nbsp;&nbsp;return (element.scopeName &amp;&amp; element.scopeName != &#39;HTML&#39;)</div><div class='line' id='LC9882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? uppercase(element.scopeName + &#39;:&#39; + element.nodeName) : element.nodeName;</div><div class='line' id='LC9883'>&nbsp;&nbsp;};</div><div class='line' id='LC9884'>} else {</div><div class='line' id='LC9885'>&nbsp;&nbsp;nodeName_ = function(element) {</div><div class='line' id='LC9886'>&nbsp;&nbsp;&nbsp;&nbsp;return element.nodeName ? element.nodeName : element[0].nodeName;</div><div class='line' id='LC9887'>&nbsp;&nbsp;};</div><div class='line' id='LC9888'>}</div><div class='line' id='LC9889'><br/></div><div class='line' id='LC9890'><br/></div><div class='line' id='LC9891'>function map(obj, iterator, context) {</div><div class='line' id='LC9892'>&nbsp;&nbsp;var results = [];</div><div class='line' id='LC9893'>&nbsp;&nbsp;forEach(obj, function(value, index, list) {</div><div class='line' id='LC9894'>&nbsp;&nbsp;&nbsp;&nbsp;results.push(iterator.call(context, value, index, list));</div><div class='line' id='LC9895'>&nbsp;&nbsp;});</div><div class='line' id='LC9896'>&nbsp;&nbsp;return results;</div><div class='line' id='LC9897'>}</div><div class='line' id='LC9898'><br/></div><div class='line' id='LC9899'><br/></div><div class='line' id='LC9900'>/**</div><div class='line' id='LC9901'>&nbsp;* @description</div><div class='line' id='LC9902'>&nbsp;* Determines the number of elements in an array, the number of properties an object has, or</div><div class='line' id='LC9903'>&nbsp;* the length of a string.</div><div class='line' id='LC9904'>&nbsp;*</div><div class='line' id='LC9905'>&nbsp;* Note: This function is used to augment the Object type in Angular expressions. See</div><div class='line' id='LC9906'>&nbsp;* {@link angular.Object} for more information about Angular arrays.</div><div class='line' id='LC9907'>&nbsp;*</div><div class='line' id='LC9908'>&nbsp;* @param {Object|Array|string} obj Object, array, or string to inspect.</div><div class='line' id='LC9909'>&nbsp;* @param {boolean} [ownPropsOnly=false] Count only &quot;own&quot; properties in an object</div><div class='line' id='LC9910'>&nbsp;* @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.</div><div class='line' id='LC9911'>&nbsp;*/</div><div class='line' id='LC9912'>function size(obj, ownPropsOnly) {</div><div class='line' id='LC9913'>&nbsp;&nbsp;var size = 0, key;</div><div class='line' id='LC9914'><br/></div><div class='line' id='LC9915'>&nbsp;&nbsp;if (isArray(obj) || isString(obj)) {</div><div class='line' id='LC9916'>&nbsp;&nbsp;&nbsp;&nbsp;return obj.length;</div><div class='line' id='LC9917'>&nbsp;&nbsp;} else if (isObject(obj)){</div><div class='line' id='LC9918'>&nbsp;&nbsp;&nbsp;&nbsp;for (key in obj)</div><div class='line' id='LC9919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!ownPropsOnly || obj.hasOwnProperty(key))</div><div class='line' id='LC9920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size++;</div><div class='line' id='LC9921'>&nbsp;&nbsp;}</div><div class='line' id='LC9922'><br/></div><div class='line' id='LC9923'>&nbsp;&nbsp;return size;</div><div class='line' id='LC9924'>}</div><div class='line' id='LC9925'><br/></div><div class='line' id='LC9926'><br/></div><div class='line' id='LC9927'>function includes(array, obj) {</div><div class='line' id='LC9928'>&nbsp;&nbsp;return indexOf(array, obj) != -1;</div><div class='line' id='LC9929'>}</div><div class='line' id='LC9930'><br/></div><div class='line' id='LC9931'>function indexOf(array, obj) {</div><div class='line' id='LC9932'>&nbsp;&nbsp;if (array.indexOf) return array.indexOf(obj);</div><div class='line' id='LC9933'><br/></div><div class='line' id='LC9934'>&nbsp;&nbsp;for ( var i = 0; i &lt; array.length; i++) {</div><div class='line' id='LC9935'>&nbsp;&nbsp;&nbsp;&nbsp;if (obj === array[i]) return i;</div><div class='line' id='LC9936'>&nbsp;&nbsp;}</div><div class='line' id='LC9937'>&nbsp;&nbsp;return -1;</div><div class='line' id='LC9938'>}</div><div class='line' id='LC9939'><br/></div><div class='line' id='LC9940'>function arrayRemove(array, value) {</div><div class='line' id='LC9941'>&nbsp;&nbsp;var index = indexOf(array, value);</div><div class='line' id='LC9942'>&nbsp;&nbsp;if (index &gt;=0)</div><div class='line' id='LC9943'>&nbsp;&nbsp;&nbsp;&nbsp;array.splice(index, 1);</div><div class='line' id='LC9944'>&nbsp;&nbsp;return value;</div><div class='line' id='LC9945'>}</div><div class='line' id='LC9946'><br/></div><div class='line' id='LC9947'>function isLeafNode (node) {</div><div class='line' id='LC9948'>&nbsp;&nbsp;if (node) {</div><div class='line' id='LC9949'>&nbsp;&nbsp;&nbsp;&nbsp;switch (node.nodeName) {</div><div class='line' id='LC9950'>&nbsp;&nbsp;&nbsp;&nbsp;case &quot;OPTION&quot;:</div><div class='line' id='LC9951'>&nbsp;&nbsp;&nbsp;&nbsp;case &quot;PRE&quot;:</div><div class='line' id='LC9952'>&nbsp;&nbsp;&nbsp;&nbsp;case &quot;TITLE&quot;:</div><div class='line' id='LC9953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9954'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9955'>&nbsp;&nbsp;}</div><div class='line' id='LC9956'>&nbsp;&nbsp;return false;</div><div class='line' id='LC9957'>}</div><div class='line' id='LC9958'><br/></div><div class='line' id='LC9959'>/**</div><div class='line' id='LC9960'>&nbsp;* @ngdoc function</div><div class='line' id='LC9961'>&nbsp;* @name angular.copy</div><div class='line' id='LC9962'>&nbsp;* @function</div><div class='line' id='LC9963'>&nbsp;*</div><div class='line' id='LC9964'>&nbsp;* @description</div><div class='line' id='LC9965'>&nbsp;* Creates a deep copy of `source`, which should be an object or an array.</div><div class='line' id='LC9966'>&nbsp;*</div><div class='line' id='LC9967'>&nbsp;* * If no destination is supplied, a copy of the object or array is created.</div><div class='line' id='LC9968'>&nbsp;* * If a destination is provided, all of its elements (for array) or properties (for objects)</div><div class='line' id='LC9969'>&nbsp;*   are deleted and then all elements/properties from the source are copied to it.</div><div class='line' id='LC9970'>&nbsp;* * If  `source` is not an object or array, `source` is returned.</div><div class='line' id='LC9971'>&nbsp;*</div><div class='line' id='LC9972'>&nbsp;* Note: this function is used to augment the Object type in Angular expressions. See</div><div class='line' id='LC9973'>&nbsp;* {@link ng.$filter} for more information about Angular arrays.</div><div class='line' id='LC9974'>&nbsp;*</div><div class='line' id='LC9975'>&nbsp;* @param {*} source The source that will be used to make a copy.</div><div class='line' id='LC9976'>&nbsp;*                   Can be any type, including primitives, `null`, and `undefined`.</div><div class='line' id='LC9977'>&nbsp;* @param {(Object|Array)=} destination Destination into which the source is copied. If</div><div class='line' id='LC9978'>&nbsp;*     provided, must be of the same type as `source`.</div><div class='line' id='LC9979'>&nbsp;* @returns {*} The copy or updated `destination`, if `destination` was specified.</div><div class='line' id='LC9980'>&nbsp;*/</div><div class='line' id='LC9981'>function copy(source, destination){</div><div class='line' id='LC9982'>&nbsp;&nbsp;if (isWindow(source) || isScope(source)) throw Error(&quot;Can&#39;t copy Window or Scope&quot;);</div><div class='line' id='LC9983'>&nbsp;&nbsp;if (!destination) {</div><div class='line' id='LC9984'>&nbsp;&nbsp;&nbsp;&nbsp;destination = source;</div><div class='line' id='LC9985'>&nbsp;&nbsp;&nbsp;&nbsp;if (source) {</div><div class='line' id='LC9986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isArray(source)) {</div><div class='line' id='LC9987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination = copy(source, []);</div><div class='line' id='LC9988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isDate(source)) {</div><div class='line' id='LC9989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination = new Date(source.getTime());</div><div class='line' id='LC9990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isObject(source)) {</div><div class='line' id='LC9991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination = copy(source, {});</div><div class='line' id='LC9992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9993'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9994'>&nbsp;&nbsp;} else {</div><div class='line' id='LC9995'>&nbsp;&nbsp;&nbsp;&nbsp;if (source === destination) throw Error(&quot;Can&#39;t copy equivalent objects or arrays&quot;);</div><div class='line' id='LC9996'>&nbsp;&nbsp;&nbsp;&nbsp;if (isArray(source)) {</div><div class='line' id='LC9997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination.length = 0;</div><div class='line' id='LC9998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; source.length; i++) {</div><div class='line' id='LC9999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination.push(copy(source[i]));</div><div class='line' id='LC10000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10001'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var h = destination.$$hashKey;</div><div class='line' id='LC10003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(destination, function(value, key){</div><div class='line' id='LC10004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete destination[key];</div><div class='line' id='LC10005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var key in source) {</div><div class='line' id='LC10007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destination[key] = copy(source[key]);</div><div class='line' id='LC10008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setHashKey(destination,h);</div><div class='line' id='LC10010'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10011'>&nbsp;&nbsp;}</div><div class='line' id='LC10012'>&nbsp;&nbsp;return destination;</div><div class='line' id='LC10013'>}</div><div class='line' id='LC10014'><br/></div><div class='line' id='LC10015'>/**</div><div class='line' id='LC10016'>&nbsp;* Create a shallow copy of an object</div><div class='line' id='LC10017'>&nbsp;*/</div><div class='line' id='LC10018'>function shallowCopy(src, dst) {</div><div class='line' id='LC10019'>&nbsp;&nbsp;dst = dst || {};</div><div class='line' id='LC10020'><br/></div><div class='line' id='LC10021'>&nbsp;&nbsp;for(var key in src) {</div><div class='line' id='LC10022'>&nbsp;&nbsp;&nbsp;&nbsp;if (src.hasOwnProperty(key) &amp;&amp; key.substr(0, 2) !== &#39;$$&#39;) {</div><div class='line' id='LC10023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst[key] = src[key];</div><div class='line' id='LC10024'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10025'>&nbsp;&nbsp;}</div><div class='line' id='LC10026'><br/></div><div class='line' id='LC10027'>&nbsp;&nbsp;return dst;</div><div class='line' id='LC10028'>}</div><div class='line' id='LC10029'><br/></div><div class='line' id='LC10030'><br/></div><div class='line' id='LC10031'>/**</div><div class='line' id='LC10032'>&nbsp;* @ngdoc function</div><div class='line' id='LC10033'>&nbsp;* @name angular.equals</div><div class='line' id='LC10034'>&nbsp;* @function</div><div class='line' id='LC10035'>&nbsp;*</div><div class='line' id='LC10036'>&nbsp;* @description</div><div class='line' id='LC10037'>&nbsp;* Determines if two objects or two values are equivalent. Supports value types, arrays and</div><div class='line' id='LC10038'>&nbsp;* objects.</div><div class='line' id='LC10039'>&nbsp;*</div><div class='line' id='LC10040'>&nbsp;* Two objects or values are considered equivalent if at least one of the following is true:</div><div class='line' id='LC10041'>&nbsp;*</div><div class='line' id='LC10042'>&nbsp;* * Both objects or values pass `===` comparison.</div><div class='line' id='LC10043'>&nbsp;* * Both objects or values are of the same type and all of their properties pass `===` comparison.</div><div class='line' id='LC10044'>&nbsp;* * Both values are NaN. (In JavasScript, NaN == NaN =&gt; false. But we consider two NaN as equal)</div><div class='line' id='LC10045'>&nbsp;*</div><div class='line' id='LC10046'>&nbsp;* During a property comparision, properties of `function` type and properties with names</div><div class='line' id='LC10047'>&nbsp;* that begin with `$` are ignored.</div><div class='line' id='LC10048'>&nbsp;*</div><div class='line' id='LC10049'>&nbsp;* Scope and DOMWindow objects are being compared only by identify (`===`).</div><div class='line' id='LC10050'>&nbsp;*</div><div class='line' id='LC10051'>&nbsp;* @param {*} o1 Object or value to compare.</div><div class='line' id='LC10052'>&nbsp;* @param {*} o2 Object or value to compare.</div><div class='line' id='LC10053'>&nbsp;* @returns {boolean} True if arguments are equal.</div><div class='line' id='LC10054'>&nbsp;*/</div><div class='line' id='LC10055'>function equals(o1, o2) {</div><div class='line' id='LC10056'>&nbsp;&nbsp;if (o1 === o2) return true;</div><div class='line' id='LC10057'>&nbsp;&nbsp;if (o1 === null || o2 === null) return false;</div><div class='line' id='LC10058'>&nbsp;&nbsp;if (o1 !== o1 &amp;&amp; o2 !== o2) return true; // NaN === NaN</div><div class='line' id='LC10059'>&nbsp;&nbsp;var t1 = typeof o1, t2 = typeof o2, length, key, keySet;</div><div class='line' id='LC10060'>&nbsp;&nbsp;if (t1 == t2) {</div><div class='line' id='LC10061'>&nbsp;&nbsp;&nbsp;&nbsp;if (t1 == &#39;object&#39;) {</div><div class='line' id='LC10062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isArray(o1)) {</div><div class='line' id='LC10063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((length = o1.length) == o2.length) {</div><div class='line' id='LC10064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(key=0; key&lt;length; key++) {</div><div class='line' id='LC10065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!equals(o1[key], o2[key])) return false;</div><div class='line' id='LC10066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC10068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isDate(o1)) {</div><div class='line' id='LC10070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return isDate(o2) &amp;&amp; o1.getTime() == o2.getTime();</div><div class='line' id='LC10071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2)) return false;</div><div class='line' id='LC10073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keySet = {};</div><div class='line' id='LC10074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(key in o1) {</div><div class='line' id='LC10075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key.charAt(0) === &#39;$&#39; || isFunction(o1[key])) continue;</div><div class='line' id='LC10076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!equals(o1[key], o2[key])) return false;</div><div class='line' id='LC10077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keySet[key] = true;</div><div class='line' id='LC10078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(key in o2) {</div><div class='line' id='LC10080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!keySet[key] &amp;&amp;</div><div class='line' id='LC10081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key.charAt(0) !== &#39;$&#39; &amp;&amp;</div><div class='line' id='LC10082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o2[key] !== undefined &amp;&amp;</div><div class='line' id='LC10083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!isFunction(o2[key])) return false;</div><div class='line' id='LC10084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC10086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10087'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10088'>&nbsp;&nbsp;}</div><div class='line' id='LC10089'>&nbsp;&nbsp;return false;</div><div class='line' id='LC10090'>}</div><div class='line' id='LC10091'><br/></div><div class='line' id='LC10092'><br/></div><div class='line' id='LC10093'>function concat(array1, array2, index) {</div><div class='line' id='LC10094'>&nbsp;&nbsp;return array1.concat(slice.call(array2, index));</div><div class='line' id='LC10095'>}</div><div class='line' id='LC10096'><br/></div><div class='line' id='LC10097'>function sliceArgs(args, startIndex) {</div><div class='line' id='LC10098'>&nbsp;&nbsp;return slice.call(args, startIndex || 0);</div><div class='line' id='LC10099'>}</div><div class='line' id='LC10100'><br/></div><div class='line' id='LC10101'><br/></div><div class='line' id='LC10102'>/**</div><div class='line' id='LC10103'>&nbsp;* @ngdoc function</div><div class='line' id='LC10104'>&nbsp;* @name angular.bind</div><div class='line' id='LC10105'>&nbsp;* @function</div><div class='line' id='LC10106'>&nbsp;*</div><div class='line' id='LC10107'>&nbsp;* @description</div><div class='line' id='LC10108'>&nbsp;* Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for</div><div class='line' id='LC10109'>&nbsp;* `fn`). You can supply optional `args` that are prebound to the function. This feature is also</div><div class='line' id='LC10110'>&nbsp;* known as [function currying](http://en.wikipedia.org/wiki/Currying).</div><div class='line' id='LC10111'>&nbsp;*</div><div class='line' id='LC10112'>&nbsp;* @param {Object} self Context which `fn` should be evaluated in.</div><div class='line' id='LC10113'>&nbsp;* @param {function()} fn Function to be bound.</div><div class='line' id='LC10114'>&nbsp;* @param {...*} args Optional arguments to be prebound to the `fn` function call.</div><div class='line' id='LC10115'>&nbsp;* @returns {function()} Function that wraps the `fn` with all the specified bindings.</div><div class='line' id='LC10116'>&nbsp;*/</div><div class='line' id='LC10117'>function bind(self, fn) {</div><div class='line' id='LC10118'>&nbsp;&nbsp;var curryArgs = arguments.length &gt; 2 ? sliceArgs(arguments, 2) : [];</div><div class='line' id='LC10119'>&nbsp;&nbsp;if (isFunction(fn) &amp;&amp; !(fn instanceof RegExp)) {</div><div class='line' id='LC10120'>&nbsp;&nbsp;&nbsp;&nbsp;return curryArgs.length</div><div class='line' id='LC10121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? function() {</div><div class='line' id='LC10122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arguments.length</div><div class='line' id='LC10123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))</div><div class='line' id='LC10124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: fn.apply(self, curryArgs);</div><div class='line' id='LC10125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function() {</div><div class='line' id='LC10127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arguments.length</div><div class='line' id='LC10128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? fn.apply(self, arguments)</div><div class='line' id='LC10129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: fn.call(self);</div><div class='line' id='LC10130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10131'>&nbsp;&nbsp;} else {</div><div class='line' id='LC10132'>&nbsp;&nbsp;&nbsp;&nbsp;// in IE, native methods are not functions so they cannot be bound (note: they don&#39;t need to be)</div><div class='line' id='LC10133'>&nbsp;&nbsp;&nbsp;&nbsp;return fn;</div><div class='line' id='LC10134'>&nbsp;&nbsp;}</div><div class='line' id='LC10135'>}</div><div class='line' id='LC10136'><br/></div><div class='line' id='LC10137'><br/></div><div class='line' id='LC10138'>function toJsonReplacer(key, value) {</div><div class='line' id='LC10139'>&nbsp;&nbsp;var val = value;</div><div class='line' id='LC10140'><br/></div><div class='line' id='LC10141'>&nbsp;&nbsp;if (/^\$+/.test(key)) {</div><div class='line' id='LC10142'>&nbsp;&nbsp;&nbsp;&nbsp;val = undefined;</div><div class='line' id='LC10143'>&nbsp;&nbsp;} else if (isWindow(value)) {</div><div class='line' id='LC10144'>&nbsp;&nbsp;&nbsp;&nbsp;val = &#39;$WINDOW&#39;;</div><div class='line' id='LC10145'>&nbsp;&nbsp;} else if (value &amp;&amp;  document === value) {</div><div class='line' id='LC10146'>&nbsp;&nbsp;&nbsp;&nbsp;val = &#39;$DOCUMENT&#39;;</div><div class='line' id='LC10147'>&nbsp;&nbsp;} else if (isScope(value)) {</div><div class='line' id='LC10148'>&nbsp;&nbsp;&nbsp;&nbsp;val = &#39;$SCOPE&#39;;</div><div class='line' id='LC10149'>&nbsp;&nbsp;}</div><div class='line' id='LC10150'><br/></div><div class='line' id='LC10151'>&nbsp;&nbsp;return val;</div><div class='line' id='LC10152'>}</div><div class='line' id='LC10153'><br/></div><div class='line' id='LC10154'><br/></div><div class='line' id='LC10155'>/**</div><div class='line' id='LC10156'>&nbsp;* @ngdoc function</div><div class='line' id='LC10157'>&nbsp;* @name angular.toJson</div><div class='line' id='LC10158'>&nbsp;* @function</div><div class='line' id='LC10159'>&nbsp;*</div><div class='line' id='LC10160'>&nbsp;* @description</div><div class='line' id='LC10161'>&nbsp;* Serializes input into a JSON-formatted string.</div><div class='line' id='LC10162'>&nbsp;*</div><div class='line' id='LC10163'>&nbsp;* @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.</div><div class='line' id='LC10164'>&nbsp;* @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.</div><div class='line' id='LC10165'>&nbsp;* @returns {string} Jsonified string representing `obj`.</div><div class='line' id='LC10166'>&nbsp;*/</div><div class='line' id='LC10167'>function toJson(obj, pretty) {</div><div class='line' id='LC10168'>&nbsp;&nbsp;return JSON.stringify(obj, toJsonReplacer, pretty ? &#39;  &#39; : null);</div><div class='line' id='LC10169'>}</div><div class='line' id='LC10170'><br/></div><div class='line' id='LC10171'><br/></div><div class='line' id='LC10172'>/**</div><div class='line' id='LC10173'>&nbsp;* @ngdoc function</div><div class='line' id='LC10174'>&nbsp;* @name angular.fromJson</div><div class='line' id='LC10175'>&nbsp;* @function</div><div class='line' id='LC10176'>&nbsp;*</div><div class='line' id='LC10177'>&nbsp;* @description</div><div class='line' id='LC10178'>&nbsp;* Deserializes a JSON string.</div><div class='line' id='LC10179'>&nbsp;*</div><div class='line' id='LC10180'>&nbsp;* @param {string} json JSON string to deserialize.</div><div class='line' id='LC10181'>&nbsp;* @returns {Object|Array|Date|string|number} Deserialized thingy.</div><div class='line' id='LC10182'>&nbsp;*/</div><div class='line' id='LC10183'>function fromJson(json) {</div><div class='line' id='LC10184'>&nbsp;&nbsp;return isString(json)</div><div class='line' id='LC10185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? JSON.parse(json)</div><div class='line' id='LC10186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: json;</div><div class='line' id='LC10187'>}</div><div class='line' id='LC10188'><br/></div><div class='line' id='LC10189'><br/></div><div class='line' id='LC10190'>function toBoolean(value) {</div><div class='line' id='LC10191'>&nbsp;&nbsp;if (value &amp;&amp; value.length !== 0) {</div><div class='line' id='LC10192'>&nbsp;&nbsp;&nbsp;&nbsp;var v = lowercase(&quot;&quot; + value);</div><div class='line' id='LC10193'>&nbsp;&nbsp;&nbsp;&nbsp;value = !(v == &#39;f&#39; || v == &#39;0&#39; || v == &#39;false&#39; || v == &#39;no&#39; || v == &#39;n&#39; || v == &#39;[]&#39;);</div><div class='line' id='LC10194'>&nbsp;&nbsp;} else {</div><div class='line' id='LC10195'>&nbsp;&nbsp;&nbsp;&nbsp;value = false;</div><div class='line' id='LC10196'>&nbsp;&nbsp;}</div><div class='line' id='LC10197'>&nbsp;&nbsp;return value;</div><div class='line' id='LC10198'>}</div><div class='line' id='LC10199'><br/></div><div class='line' id='LC10200'>/**</div><div class='line' id='LC10201'>&nbsp;* @returns {string} Returns the string representation of the element.</div><div class='line' id='LC10202'>&nbsp;*/</div><div class='line' id='LC10203'>function startingTag(element) {</div><div class='line' id='LC10204'>&nbsp;&nbsp;element = jqLite(element).clone();</div><div class='line' id='LC10205'>&nbsp;&nbsp;try {</div><div class='line' id='LC10206'>&nbsp;&nbsp;&nbsp;&nbsp;// turns out IE does not let you set .html() on elements which</div><div class='line' id='LC10207'>&nbsp;&nbsp;&nbsp;&nbsp;// are not allowed to have children. So we just ignore it.</div><div class='line' id='LC10208'>&nbsp;&nbsp;&nbsp;&nbsp;element.html(&#39;&#39;);</div><div class='line' id='LC10209'>&nbsp;&nbsp;} catch(e) {}</div><div class='line' id='LC10210'>&nbsp;&nbsp;// As Per DOM Standards</div><div class='line' id='LC10211'>&nbsp;&nbsp;var TEXT_NODE = 3;</div><div class='line' id='LC10212'>&nbsp;&nbsp;var elemHtml = jqLite(&#39;&lt;div&gt;&#39;).append(element).html();</div><div class='line' id='LC10213'>&nbsp;&nbsp;try {</div><div class='line' id='LC10214'>&nbsp;&nbsp;&nbsp;&nbsp;return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :</div><div class='line' id='LC10215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elemHtml.</div><div class='line' id='LC10216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match(/^(&lt;[^&gt;]+&gt;)/)[1].</div><div class='line' id='LC10217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/^&lt;([\w\-]+)/, function(match, nodeName) { return &#39;&lt;&#39; + lowercase(nodeName); });</div><div class='line' id='LC10218'>&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC10219'>&nbsp;&nbsp;&nbsp;&nbsp;return lowercase(elemHtml);</div><div class='line' id='LC10220'>&nbsp;&nbsp;}</div><div class='line' id='LC10221'><br/></div><div class='line' id='LC10222'>}</div><div class='line' id='LC10223'><br/></div><div class='line' id='LC10224'><br/></div><div class='line' id='LC10225'>/////////////////////////////////////////////////</div><div class='line' id='LC10226'><br/></div><div class='line' id='LC10227'>/**</div><div class='line' id='LC10228'>&nbsp;* Parses an escaped url query string into key-value pairs.</div><div class='line' id='LC10229'>&nbsp;* @returns Object.&lt;(string|boolean)&gt;</div><div class='line' id='LC10230'>&nbsp;*/</div><div class='line' id='LC10231'>function parseKeyValue(/**string*/keyValue) {</div><div class='line' id='LC10232'>&nbsp;&nbsp;var obj = {}, key_value, key;</div><div class='line' id='LC10233'>&nbsp;&nbsp;forEach((keyValue || &quot;&quot;).split(&#39;&amp;&#39;), function(keyValue){</div><div class='line' id='LC10234'>&nbsp;&nbsp;&nbsp;&nbsp;if (keyValue) {</div><div class='line' id='LC10235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_value = keyValue.split(&#39;=&#39;);</div><div class='line' id='LC10236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = decodeURIComponent(key_value[0]);</div><div class='line' id='LC10237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = isDefined(key_value[1]) ? decodeURIComponent(key_value[1]) : true;</div><div class='line' id='LC10238'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10239'>&nbsp;&nbsp;});</div><div class='line' id='LC10240'>&nbsp;&nbsp;return obj;</div><div class='line' id='LC10241'>}</div><div class='line' id='LC10242'><br/></div><div class='line' id='LC10243'>function toKeyValue(obj) {</div><div class='line' id='LC10244'>&nbsp;&nbsp;var parts = [];</div><div class='line' id='LC10245'>&nbsp;&nbsp;forEach(obj, function(value, key) {</div><div class='line' id='LC10246'>&nbsp;&nbsp;&nbsp;&nbsp;parts.push(encodeUriQuery(key, true) + (value === true ? &#39;&#39; : &#39;=&#39; + encodeUriQuery(value, true)));</div><div class='line' id='LC10247'>&nbsp;&nbsp;});</div><div class='line' id='LC10248'>&nbsp;&nbsp;return parts.length ? parts.join(&#39;&amp;&#39;) : &#39;&#39;;</div><div class='line' id='LC10249'>}</div><div class='line' id='LC10250'><br/></div><div class='line' id='LC10251'><br/></div><div class='line' id='LC10252'>/**</div><div class='line' id='LC10253'>&nbsp;* We need our custom method because encodeURIComponent is too agressive and doesn&#39;t follow</div><div class='line' id='LC10254'>&nbsp;* http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path</div><div class='line' id='LC10255'>&nbsp;* segments:</div><div class='line' id='LC10256'>&nbsp;*    segment       = *pchar</div><div class='line' id='LC10257'>&nbsp;*    pchar         = unreserved / pct-encoded / sub-delims / &quot;:&quot; / &quot;@&quot;</div><div class='line' id='LC10258'>&nbsp;*    pct-encoded   = &quot;%&quot; HEXDIG HEXDIG</div><div class='line' id='LC10259'>&nbsp;*    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;</div><div class='line' id='LC10260'>&nbsp;*    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;&#39;&quot; / &quot;(&quot; / &quot;)&quot;</div><div class='line' id='LC10261'>&nbsp;*                     / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;</div><div class='line' id='LC10262'>&nbsp;*/</div><div class='line' id='LC10263'>function encodeUriSegment(val) {</div><div class='line' id='LC10264'>&nbsp;&nbsp;return encodeUriQuery(val, true).</div><div class='line' id='LC10265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%26/gi, &#39;&amp;&#39;).</div><div class='line' id='LC10266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%3D/gi, &#39;=&#39;).</div><div class='line' id='LC10267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%2B/gi, &#39;+&#39;);</div><div class='line' id='LC10268'>}</div><div class='line' id='LC10269'><br/></div><div class='line' id='LC10270'><br/></div><div class='line' id='LC10271'>/**</div><div class='line' id='LC10272'>&nbsp;* This method is intended for encoding *key* or *value* parts of query component. We need a custom</div><div class='line' id='LC10273'>&nbsp;* method becuase encodeURIComponent is too agressive and encodes stuff that doesn&#39;t have to be</div><div class='line' id='LC10274'>&nbsp;* encoded per http://tools.ietf.org/html/rfc3986:</div><div class='line' id='LC10275'>&nbsp;*    query       = *( pchar / &quot;/&quot; / &quot;?&quot; )</div><div class='line' id='LC10276'>&nbsp;*    pchar         = unreserved / pct-encoded / sub-delims / &quot;:&quot; / &quot;@&quot;</div><div class='line' id='LC10277'>&nbsp;*    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;</div><div class='line' id='LC10278'>&nbsp;*    pct-encoded   = &quot;%&quot; HEXDIG HEXDIG</div><div class='line' id='LC10279'>&nbsp;*    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;&#39;&quot; / &quot;(&quot; / &quot;)&quot;</div><div class='line' id='LC10280'>&nbsp;*                     / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;</div><div class='line' id='LC10281'>&nbsp;*/</div><div class='line' id='LC10282'>function encodeUriQuery(val, pctEncodeSpaces) {</div><div class='line' id='LC10283'>&nbsp;&nbsp;return encodeURIComponent(val).</div><div class='line' id='LC10284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%40/gi, &#39;@&#39;).</div><div class='line' id='LC10285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%3A/gi, &#39;:&#39;).</div><div class='line' id='LC10286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%24/g, &#39;$&#39;).</div><div class='line' id='LC10287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%2C/gi, &#39;,&#39;).</div><div class='line' id='LC10288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/%20/g, (pctEncodeSpaces ? &#39;%20&#39; : &#39;+&#39;));</div><div class='line' id='LC10289'>}</div><div class='line' id='LC10290'><br/></div><div class='line' id='LC10291'><br/></div><div class='line' id='LC10292'>/**</div><div class='line' id='LC10293'>&nbsp;* @ngdoc directive</div><div class='line' id='LC10294'>&nbsp;* @name ng.directive:ngApp</div><div class='line' id='LC10295'>&nbsp;*</div><div class='line' id='LC10296'>&nbsp;* @element ANY</div><div class='line' id='LC10297'>&nbsp;* @param {angular.Module} ngApp an optional application</div><div class='line' id='LC10298'>&nbsp;*   {@link angular.module module} name to load.</div><div class='line' id='LC10299'>&nbsp;*</div><div class='line' id='LC10300'>&nbsp;* @description</div><div class='line' id='LC10301'>&nbsp;*</div><div class='line' id='LC10302'>&nbsp;* Use this directive to auto-bootstrap an application. Only</div><div class='line' id='LC10303'>&nbsp;* one directive can be used per HTML document. The directive</div><div class='line' id='LC10304'>&nbsp;* designates the root of the application and is typically placed</div><div class='line' id='LC10305'>&nbsp;* at the root of the page.</div><div class='line' id='LC10306'>&nbsp;*</div><div class='line' id='LC10307'>&nbsp;* In the example below if the `ngApp` directive would not be placed</div><div class='line' id='LC10308'>&nbsp;* on the `html` element then the document would not be compiled</div><div class='line' id='LC10309'>&nbsp;* and the `{{ 1+2 }}` would not be resolved to `3`.</div><div class='line' id='LC10310'>&nbsp;*</div><div class='line' id='LC10311'>&nbsp;* `ngApp` is the easiest way to bootstrap an application.</div><div class='line' id='LC10312'>&nbsp;*</div><div class='line' id='LC10313'>&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC10314'>&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC10315'>&nbsp;&nbsp;&nbsp;&nbsp;I can add: 1 + 2 =  {{ 1+2 }}</div><div class='line' id='LC10316'>&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC10317'>&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC10318'>&nbsp;*</div><div class='line' id='LC10319'>&nbsp;*/</div><div class='line' id='LC10320'>function angularInit(element, bootstrap) {</div><div class='line' id='LC10321'>&nbsp;&nbsp;var elements = [element],</div><div class='line' id='LC10322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appElement,</div><div class='line' id='LC10323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module,</div><div class='line' id='LC10324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names = [&#39;ng:app&#39;, &#39;ng-app&#39;, &#39;x-ng-app&#39;, &#39;data-ng-app&#39;],</div><div class='line' id='LC10325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NG_APP_CLASS_REGEXP = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;</div><div class='line' id='LC10326'><br/></div><div class='line' id='LC10327'>&nbsp;&nbsp;function append(element) {</div><div class='line' id='LC10328'>&nbsp;&nbsp;&nbsp;&nbsp;element &amp;&amp; elements.push(element);</div><div class='line' id='LC10329'>&nbsp;&nbsp;}</div><div class='line' id='LC10330'><br/></div><div class='line' id='LC10331'>&nbsp;&nbsp;forEach(names, function(name) {</div><div class='line' id='LC10332'>&nbsp;&nbsp;&nbsp;&nbsp;names[name] = true;</div><div class='line' id='LC10333'>&nbsp;&nbsp;&nbsp;&nbsp;append(document.getElementById(name));</div><div class='line' id='LC10334'>&nbsp;&nbsp;&nbsp;&nbsp;name = name.replace(&#39;:&#39;, &#39;\\:&#39;);</div><div class='line' id='LC10335'>&nbsp;&nbsp;&nbsp;&nbsp;if (element.querySelectorAll) {</div><div class='line' id='LC10336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(element.querySelectorAll(&#39;.&#39; + name), append);</div><div class='line' id='LC10337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(element.querySelectorAll(&#39;.&#39; + name + &#39;\\:&#39;), append);</div><div class='line' id='LC10338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(element.querySelectorAll(&#39;[&#39; + name + &#39;]&#39;), append);</div><div class='line' id='LC10339'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10340'>&nbsp;&nbsp;});</div><div class='line' id='LC10341'><br/></div><div class='line' id='LC10342'>&nbsp;&nbsp;forEach(elements, function(element) {</div><div class='line' id='LC10343'>&nbsp;&nbsp;&nbsp;&nbsp;if (!appElement) {</div><div class='line' id='LC10344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var className = &#39; &#39; + element.className + &#39; &#39;;</div><div class='line' id='LC10345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = NG_APP_CLASS_REGEXP.exec(className);</div><div class='line' id='LC10346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC10347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appElement = element;</div><div class='line' id='LC10348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module = (match[2] || &#39;&#39;).replace(/\s+/g, &#39;,&#39;);</div><div class='line' id='LC10349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(element.attributes, function(attr) {</div><div class='line' id='LC10351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!appElement &amp;&amp; names[attr.name]) {</div><div class='line' id='LC10352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appElement = element;</div><div class='line' id='LC10353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module = attr.value;</div><div class='line' id='LC10354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10357'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10358'>&nbsp;&nbsp;});</div><div class='line' id='LC10359'>&nbsp;&nbsp;if (appElement) {</div><div class='line' id='LC10360'>&nbsp;&nbsp;&nbsp;&nbsp;bootstrap(appElement, module ? [module] : []);</div><div class='line' id='LC10361'>&nbsp;&nbsp;}</div><div class='line' id='LC10362'>}</div><div class='line' id='LC10363'><br/></div><div class='line' id='LC10364'>/**</div><div class='line' id='LC10365'>&nbsp;* @ngdoc function</div><div class='line' id='LC10366'>&nbsp;* @name angular.bootstrap</div><div class='line' id='LC10367'>&nbsp;* @description</div><div class='line' id='LC10368'>&nbsp;* Use this function to manually start up angular application.</div><div class='line' id='LC10369'>&nbsp;*</div><div class='line' id='LC10370'>&nbsp;* See: {@link guide/bootstrap Bootstrap}</div><div class='line' id='LC10371'>&nbsp;*</div><div class='line' id='LC10372'>&nbsp;* @param {Element} element DOM element which is the root of angular application.</div><div class='line' id='LC10373'>&nbsp;* @param {Array&lt;String|Function&gt;=} modules an array of module declarations. See: {@link angular.module modules}</div><div class='line' id='LC10374'>&nbsp;* @returns {AUTO.$injector} Returns the newly created injector for this app.</div><div class='line' id='LC10375'>&nbsp;*/</div><div class='line' id='LC10376'>function bootstrap(element, modules) {</div><div class='line' id='LC10377'>&nbsp;&nbsp;var resumeBootstrapInternal = function() {</div><div class='line' id='LC10378'>&nbsp;&nbsp;&nbsp;&nbsp;element = jqLite(element);</div><div class='line' id='LC10379'>&nbsp;&nbsp;&nbsp;&nbsp;modules = modules || [];</div><div class='line' id='LC10380'>&nbsp;&nbsp;&nbsp;&nbsp;modules.unshift([&#39;$provide&#39;, function($provide) {</div><div class='line' id='LC10381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$provide.value(&#39;$rootElement&#39;, element);</div><div class='line' id='LC10382'>&nbsp;&nbsp;&nbsp;&nbsp;}]);</div><div class='line' id='LC10383'>&nbsp;&nbsp;&nbsp;&nbsp;modules.unshift(&#39;ng&#39;);</div><div class='line' id='LC10384'>&nbsp;&nbsp;&nbsp;&nbsp;var injector = createInjector(modules);</div><div class='line' id='LC10385'>&nbsp;&nbsp;&nbsp;&nbsp;injector.invoke([&#39;$rootScope&#39;, &#39;$rootElement&#39;, &#39;$compile&#39;, &#39;$injector&#39;,</div><div class='line' id='LC10386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(scope, element, compile, injector) {</div><div class='line' id='LC10387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC10388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.data(&#39;$injector&#39;, injector);</div><div class='line' id='LC10389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compile(element)(scope);</div><div class='line' id='LC10390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]</div><div class='line' id='LC10392'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC10393'>&nbsp;&nbsp;&nbsp;&nbsp;return injector;</div><div class='line' id='LC10394'>&nbsp;&nbsp;};</div><div class='line' id='LC10395'><br/></div><div class='line' id='LC10396'>&nbsp;&nbsp;var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;</div><div class='line' id='LC10397'><br/></div><div class='line' id='LC10398'>&nbsp;&nbsp;if (window &amp;&amp; !NG_DEFER_BOOTSTRAP.test(window.name)) {</div><div class='line' id='LC10399'>&nbsp;&nbsp;&nbsp;&nbsp;return resumeBootstrapInternal();</div><div class='line' id='LC10400'>&nbsp;&nbsp;}</div><div class='line' id='LC10401'><br/></div><div class='line' id='LC10402'>&nbsp;&nbsp;window.name = window.name.replace(NG_DEFER_BOOTSTRAP, &#39;&#39;);</div><div class='line' id='LC10403'>&nbsp;&nbsp;angular.resumeBootstrap = function(extraModules) {</div><div class='line' id='LC10404'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(extraModules, function(module) {</div><div class='line' id='LC10405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modules.push(module);</div><div class='line' id='LC10406'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10407'>&nbsp;&nbsp;&nbsp;&nbsp;resumeBootstrapInternal();</div><div class='line' id='LC10408'>&nbsp;&nbsp;};</div><div class='line' id='LC10409'>}</div><div class='line' id='LC10410'><br/></div><div class='line' id='LC10411'>var SNAKE_CASE_REGEXP = /[A-Z]/g;</div><div class='line' id='LC10412'>function snake_case(name, separator){</div><div class='line' id='LC10413'>&nbsp;&nbsp;separator = separator || &#39;_&#39;;</div><div class='line' id='LC10414'>&nbsp;&nbsp;return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {</div><div class='line' id='LC10415'>&nbsp;&nbsp;&nbsp;&nbsp;return (pos ? separator : &#39;&#39;) + letter.toLowerCase();</div><div class='line' id='LC10416'>&nbsp;&nbsp;});</div><div class='line' id='LC10417'>}</div><div class='line' id='LC10418'><br/></div><div class='line' id='LC10419'>function bindJQuery() {</div><div class='line' id='LC10420'>&nbsp;&nbsp;// bind to jQuery if present;</div><div class='line' id='LC10421'>&nbsp;&nbsp;jQuery = window.jQuery;</div><div class='line' id='LC10422'>&nbsp;&nbsp;// reset to jQuery or default to us.</div><div class='line' id='LC10423'>&nbsp;&nbsp;if (jQuery) {</div><div class='line' id='LC10424'>&nbsp;&nbsp;&nbsp;&nbsp;jqLite = jQuery;</div><div class='line' id='LC10425'>&nbsp;&nbsp;&nbsp;&nbsp;extend(jQuery.fn, {</div><div class='line' id='LC10426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope: JQLitePrototype.scope,</div><div class='line' id='LC10427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: JQLitePrototype.controller,</div><div class='line' id='LC10428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;injector: JQLitePrototype.injector,</div><div class='line' id='LC10429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inheritedData: JQLitePrototype.inheritedData</div><div class='line' id='LC10430'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10431'>&nbsp;&nbsp;&nbsp;&nbsp;JQLitePatchJQueryRemove(&#39;remove&#39;, true);</div><div class='line' id='LC10432'>&nbsp;&nbsp;&nbsp;&nbsp;JQLitePatchJQueryRemove(&#39;empty&#39;);</div><div class='line' id='LC10433'>&nbsp;&nbsp;&nbsp;&nbsp;JQLitePatchJQueryRemove(&#39;html&#39;);</div><div class='line' id='LC10434'>&nbsp;&nbsp;} else {</div><div class='line' id='LC10435'>&nbsp;&nbsp;&nbsp;&nbsp;jqLite = JQLite;</div><div class='line' id='LC10436'>&nbsp;&nbsp;}</div><div class='line' id='LC10437'>&nbsp;&nbsp;angular.element = jqLite;</div><div class='line' id='LC10438'>}</div><div class='line' id='LC10439'><br/></div><div class='line' id='LC10440'>/**</div><div class='line' id='LC10441'>&nbsp;* throw error if the argument is falsy.</div><div class='line' id='LC10442'>&nbsp;*/</div><div class='line' id='LC10443'>function assertArg(arg, name, reason) {</div><div class='line' id='LC10444'>&nbsp;&nbsp;if (!arg) {</div><div class='line' id='LC10445'>&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;Argument &#39;&quot; + (name || &#39;?&#39;) + &quot;&#39; is &quot; + (reason || &quot;required&quot;));</div><div class='line' id='LC10446'>&nbsp;&nbsp;}</div><div class='line' id='LC10447'>&nbsp;&nbsp;return arg;</div><div class='line' id='LC10448'>}</div><div class='line' id='LC10449'><br/></div><div class='line' id='LC10450'>function assertArgFn(arg, name, acceptArrayAnnotation) {</div><div class='line' id='LC10451'>&nbsp;&nbsp;if (acceptArrayAnnotation &amp;&amp; isArray(arg)) {</div><div class='line' id='LC10452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = arg[arg.length - 1];</div><div class='line' id='LC10453'>&nbsp;&nbsp;}</div><div class='line' id='LC10454'><br/></div><div class='line' id='LC10455'>&nbsp;&nbsp;assertArg(isFunction(arg), name, &#39;not a function, got &#39; +</div><div class='line' id='LC10456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(arg &amp;&amp; typeof arg == &#39;object&#39; ? arg.constructor.name || &#39;Object&#39; : typeof arg));</div><div class='line' id='LC10457'>&nbsp;&nbsp;return arg;</div><div class='line' id='LC10458'>}</div><div class='line' id='LC10459'><br/></div><div class='line' id='LC10460'>/**</div><div class='line' id='LC10461'>&nbsp;* @ngdoc interface</div><div class='line' id='LC10462'>&nbsp;* @name angular.Module</div><div class='line' id='LC10463'>&nbsp;* @description</div><div class='line' id='LC10464'>&nbsp;*</div><div class='line' id='LC10465'>&nbsp;* Interface for configuring angular {@link angular.module modules}.</div><div class='line' id='LC10466'>&nbsp;*/</div><div class='line' id='LC10467'><br/></div><div class='line' id='LC10468'>function setupModuleLoader(window) {</div><div class='line' id='LC10469'><br/></div><div class='line' id='LC10470'>&nbsp;&nbsp;function ensure(obj, name, factory) {</div><div class='line' id='LC10471'>&nbsp;&nbsp;&nbsp;&nbsp;return obj[name] || (obj[name] = factory());</div><div class='line' id='LC10472'>&nbsp;&nbsp;}</div><div class='line' id='LC10473'><br/></div><div class='line' id='LC10474'>&nbsp;&nbsp;return ensure(ensure(window, &#39;angular&#39;, Object), &#39;module&#39;, function() {</div><div class='line' id='LC10475'>&nbsp;&nbsp;&nbsp;&nbsp;/** @type {Object.&lt;string, angular.Module&gt;} */</div><div class='line' id='LC10476'>&nbsp;&nbsp;&nbsp;&nbsp;var modules = {};</div><div class='line' id='LC10477'><br/></div><div class='line' id='LC10478'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC10480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.module</div><div class='line' id='LC10481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `angular.module` is a global place for creating and registering Angular modules. All</div><div class='line' id='LC10484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* modules (angular core or 3rd party) that should be available to an application must be</div><div class='line' id='LC10485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* registered using this mechanism.</div><div class='line' id='LC10486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Module</div><div class='line' id='LC10489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A module is a collocation of services, directives, filters, and configuration information. Module</div><div class='line' id='LC10491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* is used to configure the {@link AUTO.$injector $injector}.</div><div class='line' id='LC10492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC10494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* // Create a new module</div><div class='line' id='LC10495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* var myModule = angular.module(&#39;myModule&#39;, []);</div><div class='line' id='LC10496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* // register a new service</div><div class='line' id='LC10498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* myModule.value(&#39;appName&#39;, &#39;MyCoolApp&#39;);</div><div class='line' id='LC10499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* // configure existing services inside initialization blocks.</div><div class='line' id='LC10501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* myModule.config(function($locationProvider) {</div><div class='line' id='LC10502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   // Configure existing providers</div><div class='line' id='LC10503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $locationProvider.hashPrefix(&#39;!&#39;);</div><div class='line' id='LC10504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* });</div><div class='line' id='LC10505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC10506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Then you can create an injector and load your modules like this:</div><div class='line' id='LC10508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC10510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* var injector = angular.injector([&#39;ng&#39;, &#39;MyModule&#39;])</div><div class='line' id='LC10511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC10512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* However it&#39;s more likely that you&#39;ll just use</div><div class='line' id='LC10514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.directive:ngApp ngApp} or</div><div class='line' id='LC10515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link angular.bootstrap} to simplify this process for you.</div><div class='line' id='LC10516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC10517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {!string} name The name of the module to create or retrieve.</div><div class='line' id='LC10518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array.&lt;string&gt;=} requires If specified then new module is being created. If unspecified then the</div><div class='line' id='LC10519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        the module is being retrieved for further configuration.</div><div class='line' id='LC10520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} configFn Optional configuration function for the module. Same as</div><div class='line' id='LC10521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        {@link angular.Module#config Module#config()}.</div><div class='line' id='LC10522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {module} new module with the {@link angular.Module} api.</div><div class='line' id='LC10523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10524'>&nbsp;&nbsp;&nbsp;&nbsp;return function module(name, requires, configFn) {</div><div class='line' id='LC10525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (requires &amp;&amp; modules.hasOwnProperty(name)) {</div><div class='line' id='LC10526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modules[name] = null;</div><div class='line' id='LC10527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ensure(modules, name, function() {</div><div class='line' id='LC10529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!requires) {</div><div class='line' id='LC10530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;No module: &#39; + name);</div><div class='line' id='LC10531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10532'><br/></div><div class='line' id='LC10533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/** @type {!Array.&lt;Array.&lt;*&gt;&gt;} */</div><div class='line' id='LC10534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var invokeQueue = [];</div><div class='line' id='LC10535'><br/></div><div class='line' id='LC10536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/** @type {!Array.&lt;Function&gt;} */</div><div class='line' id='LC10537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var runBlocks = [];</div><div class='line' id='LC10538'><br/></div><div class='line' id='LC10539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var config = invokeLater(&#39;$injector&#39;, &#39;invoke&#39;);</div><div class='line' id='LC10540'><br/></div><div class='line' id='LC10541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/** @type {angular.Module} */</div><div class='line' id='LC10542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moduleInstance = {</div><div class='line' id='LC10543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Private state</div><div class='line' id='LC10544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_invokeQueue: invokeQueue,</div><div class='line' id='LC10545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_runBlocks: runBlocks,</div><div class='line' id='LC10546'><br/></div><div class='line' id='LC10547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC10549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#requires</div><div class='line' id='LC10550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @propertyOf angular.Module</div><div class='line' id='LC10551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {Array.&lt;string&gt;} List of module names which must be loaded before this module.</div><div class='line' id='LC10552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Holds the list of modules which the injector will load before the current module is loaded.</div><div class='line' id='LC10554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requires: requires,</div><div class='line' id='LC10556'><br/></div><div class='line' id='LC10557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC10559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#name</div><div class='line' id='LC10560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @propertyOf angular.Module</div><div class='line' id='LC10561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {string} Name of the module.</div><div class='line' id='LC10562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: name,</div><div class='line' id='LC10565'><br/></div><div class='line' id='LC10566'><br/></div><div class='line' id='LC10567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#provider</div><div class='line' id='LC10570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name service name</div><div class='line' id='LC10572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} providerType Construction function for creating new instance of the service.</div><div class='line' id='LC10573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link AUTO.$provide#provider $provide.provider()}.</div><div class='line' id='LC10575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provider: invokeLater(&#39;$provide&#39;, &#39;provider&#39;),</div><div class='line' id='LC10577'><br/></div><div class='line' id='LC10578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#factory</div><div class='line' id='LC10581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name service name</div><div class='line' id='LC10583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} providerFunction Function for creating new instance of the service.</div><div class='line' id='LC10584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link AUTO.$provide#factory $provide.factory()}.</div><div class='line' id='LC10586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory: invokeLater(&#39;$provide&#39;, &#39;factory&#39;),</div><div class='line' id='LC10588'><br/></div><div class='line' id='LC10589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#service</div><div class='line' id='LC10592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name service name</div><div class='line' id='LC10594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} constructor A constructor function that will be instantiated.</div><div class='line' id='LC10595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link AUTO.$provide#service $provide.service()}.</div><div class='line' id='LC10597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;service: invokeLater(&#39;$provide&#39;, &#39;service&#39;),</div><div class='line' id='LC10599'><br/></div><div class='line' id='LC10600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#value</div><div class='line' id='LC10603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name service name</div><div class='line' id='LC10605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {*} object Service instance object.</div><div class='line' id='LC10606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link AUTO.$provide#value $provide.value()}.</div><div class='line' id='LC10608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: invokeLater(&#39;$provide&#39;, &#39;value&#39;),</div><div class='line' id='LC10610'><br/></div><div class='line' id='LC10611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#constant</div><div class='line' id='LC10614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name constant name</div><div class='line' id='LC10616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {*} object Constant value.</div><div class='line' id='LC10617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Because the constant are fixed, they get applied before other provide methods.</div><div class='line' id='LC10619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link AUTO.$provide#constant $provide.constant()}.</div><div class='line' id='LC10620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant: invokeLater(&#39;$provide&#39;, &#39;constant&#39;, &#39;unshift&#39;),</div><div class='line' id='LC10622'><br/></div><div class='line' id='LC10623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#filter</div><div class='line' id='LC10626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name Filter name.</div><div class='line' id='LC10628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} filterFactory Factory function for creating new instance of filter.</div><div class='line' id='LC10629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link ng.$filterProvider#register $filterProvider.register()}.</div><div class='line' id='LC10631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter: invokeLater(&#39;$filterProvider&#39;, &#39;register&#39;),</div><div class='line' id='LC10633'><br/></div><div class='line' id='LC10634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#controller</div><div class='line' id='LC10637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name Controller name.</div><div class='line' id='LC10639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} constructor Controller constructor function.</div><div class='line' id='LC10640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link ng.$controllerProvider#register $controllerProvider.register()}.</div><div class='line' id='LC10642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: invokeLater(&#39;$controllerProvider&#39;, &#39;register&#39;),</div><div class='line' id='LC10644'><br/></div><div class='line' id='LC10645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#directive</div><div class='line' id='LC10648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name directive name</div><div class='line' id='LC10650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} directiveFactory Factory function for creating new instance of</div><div class='line' id='LC10651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* directives.</div><div class='line' id='LC10652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See {@link ng.$compileProvider#directive $compileProvider.directive()}.</div><div class='line' id='LC10654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive: invokeLater(&#39;$compileProvider&#39;, &#39;directive&#39;),</div><div class='line' id='LC10656'><br/></div><div class='line' id='LC10657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#config</div><div class='line' id='LC10660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} configFn Execute this function on module load. Useful for service</div><div class='line' id='LC10662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    configuration.</div><div class='line' id='LC10663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Use this method to register work which needs to be performed on module loading.</div><div class='line' id='LC10665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config: config,</div><div class='line' id='LC10667'><br/></div><div class='line' id='LC10668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC10670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name angular.Module#run</div><div class='line' id='LC10671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf angular.Module</div><div class='line' id='LC10672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} initializationFn Execute this function after injector creation.</div><div class='line' id='LC10673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    Useful for application initialization.</div><div class='line' id='LC10674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC10675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Use this method to register work which should be performed when the injector is done</div><div class='line' id='LC10676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* loading all modules.</div><div class='line' id='LC10677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run: function(block) {</div><div class='line' id='LC10679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runBlocks.push(block);</div><div class='line' id='LC10680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC10681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10683'><br/></div><div class='line' id='LC10684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (configFn) {</div><div class='line' id='LC10685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config(configFn);</div><div class='line' id='LC10686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10687'><br/></div><div class='line' id='LC10688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return  moduleInstance;</div><div class='line' id='LC10689'><br/></div><div class='line' id='LC10690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC10691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} provider</div><div class='line' id='LC10692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} method</div><div class='line' id='LC10693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {String=} insertMethod</div><div class='line' id='LC10694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {angular.Module}</div><div class='line' id='LC10695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function invokeLater(provider, method, insertMethod) {</div><div class='line' id='LC10697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC10698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invokeQueue[insertMethod || &#39;push&#39;]([provider, method, arguments]);</div><div class='line' id='LC10699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return moduleInstance;</div><div class='line' id='LC10700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10703'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10704'>&nbsp;&nbsp;});</div><div class='line' id='LC10705'><br/></div><div class='line' id='LC10706'>}</div><div class='line' id='LC10707'><br/></div><div class='line' id='LC10708'>/**</div><div class='line' id='LC10709'>&nbsp;* @ngdoc property</div><div class='line' id='LC10710'>&nbsp;* @name angular.version</div><div class='line' id='LC10711'>&nbsp;* @description</div><div class='line' id='LC10712'>&nbsp;* An object that contains information about the current AngularJS version. This object has the</div><div class='line' id='LC10713'>&nbsp;* following properties:</div><div class='line' id='LC10714'>&nbsp;*</div><div class='line' id='LC10715'>&nbsp;* - `full` – `{string}` – Full version string, such as &quot;0.9.18&quot;.</div><div class='line' id='LC10716'>&nbsp;* - `major` – `{number}` – Major version number, such as &quot;0&quot;.</div><div class='line' id='LC10717'>&nbsp;* - `minor` – `{number}` – Minor version number, such as &quot;9&quot;.</div><div class='line' id='LC10718'>&nbsp;* - `dot` – `{number}` – Dot version number, such as &quot;18&quot;.</div><div class='line' id='LC10719'>&nbsp;* - `codeName` – `{string}` – Code name of the release, such as &quot;jiggling-armfat&quot;.</div><div class='line' id='LC10720'>&nbsp;*/</div><div class='line' id='LC10721'>var version = {</div><div class='line' id='LC10722'>&nbsp;&nbsp;full: &#39;1.0.7&#39;,    // all of these placeholder strings will be replaced by grunt&#39;s</div><div class='line' id='LC10723'>&nbsp;&nbsp;major: 1,    // package task</div><div class='line' id='LC10724'>&nbsp;&nbsp;minor: 0,</div><div class='line' id='LC10725'>&nbsp;&nbsp;dot: 7,</div><div class='line' id='LC10726'>&nbsp;&nbsp;codeName: &#39;monochromatic-rainbow&#39;</div><div class='line' id='LC10727'>};</div><div class='line' id='LC10728'><br/></div><div class='line' id='LC10729'><br/></div><div class='line' id='LC10730'>function publishExternalAPI(angular){</div><div class='line' id='LC10731'>&nbsp;&nbsp;extend(angular, {</div><div class='line' id='LC10732'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;bootstrap&#39;: bootstrap,</div><div class='line' id='LC10733'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;copy&#39;: copy,</div><div class='line' id='LC10734'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;extend&#39;: extend,</div><div class='line' id='LC10735'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;equals&#39;: equals,</div><div class='line' id='LC10736'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;element&#39;: jqLite,</div><div class='line' id='LC10737'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;forEach&#39;: forEach,</div><div class='line' id='LC10738'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;injector&#39;: createInjector,</div><div class='line' id='LC10739'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;noop&#39;:noop,</div><div class='line' id='LC10740'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;bind&#39;:bind,</div><div class='line' id='LC10741'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;toJson&#39;: toJson,</div><div class='line' id='LC10742'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;fromJson&#39;: fromJson,</div><div class='line' id='LC10743'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;identity&#39;:identity,</div><div class='line' id='LC10744'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isUndefined&#39;: isUndefined,</div><div class='line' id='LC10745'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isDefined&#39;: isDefined,</div><div class='line' id='LC10746'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isString&#39;: isString,</div><div class='line' id='LC10747'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isFunction&#39;: isFunction,</div><div class='line' id='LC10748'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isObject&#39;: isObject,</div><div class='line' id='LC10749'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isNumber&#39;: isNumber,</div><div class='line' id='LC10750'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isElement&#39;: isElement,</div><div class='line' id='LC10751'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isArray&#39;: isArray,</div><div class='line' id='LC10752'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;version&#39;: version,</div><div class='line' id='LC10753'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;isDate&#39;: isDate,</div><div class='line' id='LC10754'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;lowercase&#39;: lowercase,</div><div class='line' id='LC10755'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;uppercase&#39;: uppercase,</div><div class='line' id='LC10756'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;callbacks&#39;: {counter: 0}</div><div class='line' id='LC10757'>&nbsp;&nbsp;});</div><div class='line' id='LC10758'><br/></div><div class='line' id='LC10759'>&nbsp;&nbsp;angularModule = setupModuleLoader(window);</div><div class='line' id='LC10760'>&nbsp;&nbsp;try {</div><div class='line' id='LC10761'>&nbsp;&nbsp;&nbsp;&nbsp;angularModule(&#39;ngLocale&#39;);</div><div class='line' id='LC10762'>&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC10763'>&nbsp;&nbsp;&nbsp;&nbsp;angularModule(&#39;ngLocale&#39;, []).provider(&#39;$locale&#39;, $LocaleProvider);</div><div class='line' id='LC10764'>&nbsp;&nbsp;}</div><div class='line' id='LC10765'><br/></div><div class='line' id='LC10766'>&nbsp;&nbsp;angularModule(&#39;ng&#39;, [&#39;ngLocale&#39;], [&#39;$provide&#39;,</div><div class='line' id='LC10767'>&nbsp;&nbsp;&nbsp;&nbsp;function ngModule($provide) {</div><div class='line' id='LC10768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$provide.provider(&#39;$compile&#39;, $CompileProvider).</div><div class='line' id='LC10769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive({</div><div class='line' id='LC10770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: htmlAnchorDirective,</div><div class='line' id='LC10771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input: inputDirective,</div><div class='line' id='LC10772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textarea: inputDirective,</div><div class='line' id='LC10773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form: formDirective,</div><div class='line' id='LC10774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script: scriptDirective,</div><div class='line' id='LC10775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select: selectDirective,</div><div class='line' id='LC10776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style: styleDirective,</div><div class='line' id='LC10777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option: optionDirective,</div><div class='line' id='LC10778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngBind: ngBindDirective,</div><div class='line' id='LC10779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngBindHtmlUnsafe: ngBindHtmlUnsafeDirective,</div><div class='line' id='LC10780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngBindTemplate: ngBindTemplateDirective,</div><div class='line' id='LC10781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngClass: ngClassDirective,</div><div class='line' id='LC10782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngClassEven: ngClassEvenDirective,</div><div class='line' id='LC10783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngClassOdd: ngClassOddDirective,</div><div class='line' id='LC10784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngCsp: ngCspDirective,</div><div class='line' id='LC10785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngCloak: ngCloakDirective,</div><div class='line' id='LC10786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngController: ngControllerDirective,</div><div class='line' id='LC10787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngForm: ngFormDirective,</div><div class='line' id='LC10788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngHide: ngHideDirective,</div><div class='line' id='LC10789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngInclude: ngIncludeDirective,</div><div class='line' id='LC10790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngInit: ngInitDirective,</div><div class='line' id='LC10791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngNonBindable: ngNonBindableDirective,</div><div class='line' id='LC10792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngPluralize: ngPluralizeDirective,</div><div class='line' id='LC10793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngRepeat: ngRepeatDirective,</div><div class='line' id='LC10794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngShow: ngShowDirective,</div><div class='line' id='LC10795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngSubmit: ngSubmitDirective,</div><div class='line' id='LC10796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngStyle: ngStyleDirective,</div><div class='line' id='LC10797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngSwitch: ngSwitchDirective,</div><div class='line' id='LC10798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngSwitchWhen: ngSwitchWhenDirective,</div><div class='line' id='LC10799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngSwitchDefault: ngSwitchDefaultDirective,</div><div class='line' id='LC10800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngOptions: ngOptionsDirective,</div><div class='line' id='LC10801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngView: ngViewDirective,</div><div class='line' id='LC10802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngTransclude: ngTranscludeDirective,</div><div class='line' id='LC10803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModel: ngModelDirective,</div><div class='line' id='LC10804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngList: ngListDirective,</div><div class='line' id='LC10805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngChange: ngChangeDirective,</div><div class='line' id='LC10806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;required: requiredDirective,</div><div class='line' id='LC10807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngRequired: requiredDirective,</div><div class='line' id='LC10808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngValue: ngValueDirective</div><div class='line' id='LC10809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).</div><div class='line' id='LC10810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive(ngAttributeAliasDirectives).</div><div class='line' id='LC10811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive(ngEventDirectives);</div><div class='line' id='LC10812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$provide.provider({</div><div class='line' id='LC10813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$anchorScroll: $AnchorScrollProvider,</div><div class='line' id='LC10814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser: $BrowserProvider,</div><div class='line' id='LC10815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$cacheFactory: $CacheFactoryProvider,</div><div class='line' id='LC10816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$controller: $ControllerProvider,</div><div class='line' id='LC10817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$document: $DocumentProvider,</div><div class='line' id='LC10818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler: $ExceptionHandlerProvider,</div><div class='line' id='LC10819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$filter: $FilterProvider,</div><div class='line' id='LC10820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$interpolate: $InterpolateProvider,</div><div class='line' id='LC10821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http: $HttpProvider,</div><div class='line' id='LC10822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$httpBackend: $HttpBackendProvider,</div><div class='line' id='LC10823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location: $LocationProvider,</div><div class='line' id='LC10824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log: $LogProvider,</div><div class='line' id='LC10825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$parse: $ParseProvider,</div><div class='line' id='LC10826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$route: $RouteProvider,</div><div class='line' id='LC10827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$routeParams: $RouteParamsProvider,</div><div class='line' id='LC10828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope: $RootScopeProvider,</div><div class='line' id='LC10829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$q: $QProvider,</div><div class='line' id='LC10830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$sniffer: $SnifferProvider,</div><div class='line' id='LC10831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$templateCache: $TemplateCacheProvider,</div><div class='line' id='LC10832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$timeout: $TimeoutProvider,</div><div class='line' id='LC10833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$window: $WindowProvider</div><div class='line' id='LC10834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10835'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10836'>&nbsp;&nbsp;]);</div><div class='line' id='LC10837'>}</div><div class='line' id='LC10838'><br/></div><div class='line' id='LC10839'>//////////////////////////////////</div><div class='line' id='LC10840'>//JQLite</div><div class='line' id='LC10841'>//////////////////////////////////</div><div class='line' id='LC10842'><br/></div><div class='line' id='LC10843'>/**</div><div class='line' id='LC10844'>&nbsp;* @ngdoc function</div><div class='line' id='LC10845'>&nbsp;* @name angular.element</div><div class='line' id='LC10846'>&nbsp;* @function</div><div class='line' id='LC10847'>&nbsp;*</div><div class='line' id='LC10848'>&nbsp;* @description</div><div class='line' id='LC10849'>&nbsp;* Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.</div><div class='line' id='LC10850'>&nbsp;* `angular.element` can be either an alias for [jQuery](http://api.jquery.com/jQuery/) function, if</div><div class='line' id='LC10851'>&nbsp;* jQuery is available, or a function that wraps the element or string in Angular&#39;s jQuery lite</div><div class='line' id='LC10852'>&nbsp;* implementation (commonly referred to as jqLite).</div><div class='line' id='LC10853'>&nbsp;*</div><div class='line' id='LC10854'>&nbsp;* Real jQuery always takes precedence over jqLite, provided it was loaded before `DOMContentLoaded`</div><div class='line' id='LC10855'>&nbsp;* event fired.</div><div class='line' id='LC10856'>&nbsp;*</div><div class='line' id='LC10857'>&nbsp;* jqLite is a tiny, API-compatible subset of jQuery that allows</div><div class='line' id='LC10858'>&nbsp;* Angular to manipulate the DOM. jqLite implements only the most commonly needed functionality</div><div class='line' id='LC10859'>&nbsp;* within a very small footprint, so only a subset of the jQuery API - methods, arguments and</div><div class='line' id='LC10860'>&nbsp;* invocation styles - are supported.</div><div class='line' id='LC10861'>&nbsp;*</div><div class='line' id='LC10862'>&nbsp;* Note: All element references in Angular are always wrapped with jQuery or jqLite; they are never</div><div class='line' id='LC10863'>&nbsp;* raw DOM references.</div><div class='line' id='LC10864'>&nbsp;*</div><div class='line' id='LC10865'>&nbsp;* ## Angular&#39;s jQuery lite provides the following methods:</div><div class='line' id='LC10866'>&nbsp;*</div><div class='line' id='LC10867'>&nbsp;* - [addClass()](http://api.jquery.com/addClass/)</div><div class='line' id='LC10868'>&nbsp;* - [after()](http://api.jquery.com/after/)</div><div class='line' id='LC10869'>&nbsp;* - [append()](http://api.jquery.com/append/)</div><div class='line' id='LC10870'>&nbsp;* - [attr()](http://api.jquery.com/attr/)</div><div class='line' id='LC10871'>&nbsp;* - [bind()](http://api.jquery.com/bind/) - Does not support namespaces</div><div class='line' id='LC10872'>&nbsp;* - [children()](http://api.jquery.com/children/) - Does not support selectors</div><div class='line' id='LC10873'>&nbsp;* - [clone()](http://api.jquery.com/clone/)</div><div class='line' id='LC10874'>&nbsp;* - [contents()](http://api.jquery.com/contents/)</div><div class='line' id='LC10875'>&nbsp;* - [css()](http://api.jquery.com/css/)</div><div class='line' id='LC10876'>&nbsp;* - [data()](http://api.jquery.com/data/)</div><div class='line' id='LC10877'>&nbsp;* - [eq()](http://api.jquery.com/eq/)</div><div class='line' id='LC10878'>&nbsp;* - [find()](http://api.jquery.com/find/) - Limited to lookups by tag name</div><div class='line' id='LC10879'>&nbsp;* - [hasClass()](http://api.jquery.com/hasClass/)</div><div class='line' id='LC10880'>&nbsp;* - [html()](http://api.jquery.com/html/)</div><div class='line' id='LC10881'>&nbsp;* - [next()](http://api.jquery.com/next/) - Does not support selectors</div><div class='line' id='LC10882'>&nbsp;* - [parent()](http://api.jquery.com/parent/) - Does not support selectors</div><div class='line' id='LC10883'>&nbsp;* - [prepend()](http://api.jquery.com/prepend/)</div><div class='line' id='LC10884'>&nbsp;* - [prop()](http://api.jquery.com/prop/)</div><div class='line' id='LC10885'>&nbsp;* - [ready()](http://api.jquery.com/ready/)</div><div class='line' id='LC10886'>&nbsp;* - [remove()](http://api.jquery.com/remove/)</div><div class='line' id='LC10887'>&nbsp;* - [removeAttr()](http://api.jquery.com/removeAttr/)</div><div class='line' id='LC10888'>&nbsp;* - [removeClass()](http://api.jquery.com/removeClass/)</div><div class='line' id='LC10889'>&nbsp;* - [removeData()](http://api.jquery.com/removeData/)</div><div class='line' id='LC10890'>&nbsp;* - [replaceWith()](http://api.jquery.com/replaceWith/)</div><div class='line' id='LC10891'>&nbsp;* - [text()](http://api.jquery.com/text/)</div><div class='line' id='LC10892'>&nbsp;* - [toggleClass()](http://api.jquery.com/toggleClass/)</div><div class='line' id='LC10893'>&nbsp;* - [triggerHandler()](http://api.jquery.com/triggerHandler/) - Doesn&#39;t pass native event objects to handlers.</div><div class='line' id='LC10894'>&nbsp;* - [unbind()](http://api.jquery.com/unbind/) - Does not support namespaces</div><div class='line' id='LC10895'>&nbsp;* - [val()](http://api.jquery.com/val/)</div><div class='line' id='LC10896'>&nbsp;* - [wrap()](http://api.jquery.com/wrap/)</div><div class='line' id='LC10897'>&nbsp;*</div><div class='line' id='LC10898'>&nbsp;* ## In addtion to the above, Angular provides additional methods to both jQuery and jQuery lite:</div><div class='line' id='LC10899'>&nbsp;*</div><div class='line' id='LC10900'>&nbsp;* - `controller(name)` - retrieves the controller of the current element or its parent. By default</div><div class='line' id='LC10901'>&nbsp;*   retrieves controller associated with the `ngController` directive. If `name` is provided as</div><div class='line' id='LC10902'>&nbsp;*   camelCase directive name, then the controller for this directive will be retrieved (e.g.</div><div class='line' id='LC10903'>&nbsp;*   `&#39;ngModel&#39;`).</div><div class='line' id='LC10904'>&nbsp;* - `injector()` - retrieves the injector of the current element or its parent.</div><div class='line' id='LC10905'>&nbsp;* - `scope()` - retrieves the {@link api/ng.$rootScope.Scope scope} of the current</div><div class='line' id='LC10906'>&nbsp;*   element or its parent.</div><div class='line' id='LC10907'>&nbsp;* - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top</div><div class='line' id='LC10908'>&nbsp;*   parent element is reached.</div><div class='line' id='LC10909'>&nbsp;*</div><div class='line' id='LC10910'>&nbsp;* @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.</div><div class='line' id='LC10911'>&nbsp;* @returns {Object} jQuery object.</div><div class='line' id='LC10912'>&nbsp;*/</div><div class='line' id='LC10913'><br/></div><div class='line' id='LC10914'>var jqCache = JQLite.cache = {},</div><div class='line' id='LC10915'>&nbsp;&nbsp;&nbsp;&nbsp;jqName = JQLite.expando = &#39;ng-&#39; + new Date().getTime(),</div><div class='line' id='LC10916'>&nbsp;&nbsp;&nbsp;&nbsp;jqId = 1,</div><div class='line' id='LC10917'>&nbsp;&nbsp;&nbsp;&nbsp;addEventListenerFn = (window.document.addEventListener</div><div class='line' id='LC10918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? function(element, type, fn) {element.addEventListener(type, fn, false);}</div><div class='line' id='LC10919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function(element, type, fn) {element.attachEvent(&#39;on&#39; + type, fn);}),</div><div class='line' id='LC10920'>&nbsp;&nbsp;&nbsp;&nbsp;removeEventListenerFn = (window.document.removeEventListener</div><div class='line' id='LC10921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? function(element, type, fn) {element.removeEventListener(type, fn, false); }</div><div class='line' id='LC10922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function(element, type, fn) {element.detachEvent(&#39;on&#39; + type, fn); });</div><div class='line' id='LC10923'><br/></div><div class='line' id='LC10924'>function jqNextId() { return ++jqId; }</div><div class='line' id='LC10925'><br/></div><div class='line' id='LC10926'><br/></div><div class='line' id='LC10927'>var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;</div><div class='line' id='LC10928'>var MOZ_HACK_REGEXP = /^moz([A-Z])/;</div><div class='line' id='LC10929'><br/></div><div class='line' id='LC10930'>/**</div><div class='line' id='LC10931'>&nbsp;* Converts snake_case to camelCase.</div><div class='line' id='LC10932'>&nbsp;* Also there is special case for Moz prefix starting with upper case letter.</div><div class='line' id='LC10933'>&nbsp;* @param name Name to normalize</div><div class='line' id='LC10934'>&nbsp;*/</div><div class='line' id='LC10935'>function camelCase(name) {</div><div class='line' id='LC10936'>&nbsp;&nbsp;return name.</div><div class='line' id='LC10937'>&nbsp;&nbsp;&nbsp;&nbsp;replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {</div><div class='line' id='LC10938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return offset ? letter.toUpperCase() : letter;</div><div class='line' id='LC10939'>&nbsp;&nbsp;&nbsp;&nbsp;}).</div><div class='line' id='LC10940'>&nbsp;&nbsp;&nbsp;&nbsp;replace(MOZ_HACK_REGEXP, &#39;Moz$1&#39;);</div><div class='line' id='LC10941'>}</div><div class='line' id='LC10942'><br/></div><div class='line' id='LC10943'>/////////////////////////////////////////////</div><div class='line' id='LC10944'>// jQuery mutation patch</div><div class='line' id='LC10945'>//</div><div class='line' id='LC10946'>//  In conjunction with bindJQuery intercepts all jQuery&#39;s DOM destruction apis and fires a</div><div class='line' id='LC10947'>// $destroy event on all DOM nodes being removed.</div><div class='line' id='LC10948'>//</div><div class='line' id='LC10949'>/////////////////////////////////////////////</div><div class='line' id='LC10950'><br/></div><div class='line' id='LC10951'>function JQLitePatchJQueryRemove(name, dispatchThis) {</div><div class='line' id='LC10952'>&nbsp;&nbsp;var originalJqFn = jQuery.fn[name];</div><div class='line' id='LC10953'>&nbsp;&nbsp;originalJqFn = originalJqFn.$original || originalJqFn;</div><div class='line' id='LC10954'>&nbsp;&nbsp;removePatch.$original = originalJqFn;</div><div class='line' id='LC10955'>&nbsp;&nbsp;jQuery.fn[name] = removePatch;</div><div class='line' id='LC10956'><br/></div><div class='line' id='LC10957'>&nbsp;&nbsp;function removePatch() {</div><div class='line' id='LC10958'>&nbsp;&nbsp;&nbsp;&nbsp;var list = [this],</div><div class='line' id='LC10959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fireEvent = dispatchThis,</div><div class='line' id='LC10960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set, setIndex, setLength,</div><div class='line' id='LC10961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element, childIndex, childLength, children,</div><div class='line' id='LC10962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fns, events;</div><div class='line' id='LC10963'><br/></div><div class='line' id='LC10964'>&nbsp;&nbsp;&nbsp;&nbsp;while(list.length) {</div><div class='line' id='LC10965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = list.shift();</div><div class='line' id='LC10966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(setIndex = 0, setLength = set.length; setIndex &lt; setLength; setIndex++) {</div><div class='line' id='LC10967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element = jqLite(set[setIndex]);</div><div class='line' id='LC10968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fireEvent) {</div><div class='line' id='LC10969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.triggerHandler(&#39;$destroy&#39;);</div><div class='line' id='LC10970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fireEvent = !fireEvent;</div><div class='line' id='LC10972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(childIndex = 0, childLength = (children = element.children()).length;</div><div class='line' id='LC10974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childIndex &lt; childLength;</div><div class='line' id='LC10975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childIndex++) {</div><div class='line' id='LC10976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.push(jQuery(children[childIndex]));</div><div class='line' id='LC10977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10979'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10980'>&nbsp;&nbsp;&nbsp;&nbsp;return originalJqFn.apply(this, arguments);</div><div class='line' id='LC10981'>&nbsp;&nbsp;}</div><div class='line' id='LC10982'>}</div><div class='line' id='LC10983'><br/></div><div class='line' id='LC10984'>/////////////////////////////////////////////</div><div class='line' id='LC10985'>function JQLite(element) {</div><div class='line' id='LC10986'>&nbsp;&nbsp;if (element instanceof JQLite) {</div><div class='line' id='LC10987'>&nbsp;&nbsp;&nbsp;&nbsp;return element;</div><div class='line' id='LC10988'>&nbsp;&nbsp;}</div><div class='line' id='LC10989'>&nbsp;&nbsp;if (!(this instanceof JQLite)) {</div><div class='line' id='LC10990'>&nbsp;&nbsp;&nbsp;&nbsp;if (isString(element) &amp;&amp; element.charAt(0) != &#39;&lt;&#39;) {</div><div class='line' id='LC10991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;selectors not implemented&#39;);</div><div class='line' id='LC10992'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10993'>&nbsp;&nbsp;&nbsp;&nbsp;return new JQLite(element);</div><div class='line' id='LC10994'>&nbsp;&nbsp;}</div><div class='line' id='LC10995'><br/></div><div class='line' id='LC10996'>&nbsp;&nbsp;if (isString(element)) {</div><div class='line' id='LC10997'>&nbsp;&nbsp;&nbsp;&nbsp;var div = document.createElement(&#39;div&#39;);</div><div class='line' id='LC10998'>&nbsp;&nbsp;&nbsp;&nbsp;// Read about the NoScope elements here:</div><div class='line' id='LC10999'>&nbsp;&nbsp;&nbsp;&nbsp;// http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx</div><div class='line' id='LC11000'>&nbsp;&nbsp;&nbsp;&nbsp;div.innerHTML = &#39;&lt;div&gt;&amp;#160;&lt;/div&gt;&#39; + element; // IE insanity to make NoScope elements work!</div><div class='line' id='LC11001'>&nbsp;&nbsp;&nbsp;&nbsp;div.removeChild(div.firstChild); // remove the superfluous div</div><div class='line' id='LC11002'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteAddNodes(this, div.childNodes);</div><div class='line' id='LC11003'>&nbsp;&nbsp;&nbsp;&nbsp;this.remove(); // detach the elements from the temporary DOM div.</div><div class='line' id='LC11004'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11005'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteAddNodes(this, element);</div><div class='line' id='LC11006'>&nbsp;&nbsp;}</div><div class='line' id='LC11007'>}</div><div class='line' id='LC11008'><br/></div><div class='line' id='LC11009'>function JQLiteClone(element) {</div><div class='line' id='LC11010'>&nbsp;&nbsp;return element.cloneNode(true);</div><div class='line' id='LC11011'>}</div><div class='line' id='LC11012'><br/></div><div class='line' id='LC11013'>function JQLiteDealoc(element){</div><div class='line' id='LC11014'>&nbsp;&nbsp;JQLiteRemoveData(element);</div><div class='line' id='LC11015'>&nbsp;&nbsp;for ( var i = 0, children = element.childNodes || []; i &lt; children.length; i++) {</div><div class='line' id='LC11016'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteDealoc(children[i]);</div><div class='line' id='LC11017'>&nbsp;&nbsp;}</div><div class='line' id='LC11018'>}</div><div class='line' id='LC11019'><br/></div><div class='line' id='LC11020'>function JQLiteUnbind(element, type, fn) {</div><div class='line' id='LC11021'>&nbsp;&nbsp;var events = JQLiteExpandoStore(element, &#39;events&#39;),</div><div class='line' id='LC11022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle = JQLiteExpandoStore(element, &#39;handle&#39;);</div><div class='line' id='LC11023'><br/></div><div class='line' id='LC11024'>&nbsp;&nbsp;if (!handle) return; //no listeners registered</div><div class='line' id='LC11025'><br/></div><div class='line' id='LC11026'>&nbsp;&nbsp;if (isUndefined(type)) {</div><div class='line' id='LC11027'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(events, function(eventHandler, type) {</div><div class='line' id='LC11028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeEventListenerFn(element, type, eventHandler);</div><div class='line' id='LC11029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete events[type];</div><div class='line' id='LC11030'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11031'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11032'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(fn)) {</div><div class='line' id='LC11033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeEventListenerFn(element, type, events[type]);</div><div class='line' id='LC11034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete events[type];</div><div class='line' id='LC11035'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayRemove(events[type], fn);</div><div class='line' id='LC11037'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11038'>&nbsp;&nbsp;}</div><div class='line' id='LC11039'>}</div><div class='line' id='LC11040'><br/></div><div class='line' id='LC11041'>function JQLiteRemoveData(element) {</div><div class='line' id='LC11042'>&nbsp;&nbsp;var expandoId = element[jqName],</div><div class='line' id='LC11043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expandoStore = jqCache[expandoId];</div><div class='line' id='LC11044'><br/></div><div class='line' id='LC11045'>&nbsp;&nbsp;if (expandoStore) {</div><div class='line' id='LC11046'>&nbsp;&nbsp;&nbsp;&nbsp;if (expandoStore.handle) {</div><div class='line' id='LC11047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expandoStore.events.$destroy &amp;&amp; expandoStore.handle({}, &#39;$destroy&#39;);</div><div class='line' id='LC11048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JQLiteUnbind(element);</div><div class='line' id='LC11049'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11050'>&nbsp;&nbsp;&nbsp;&nbsp;delete jqCache[expandoId];</div><div class='line' id='LC11051'>&nbsp;&nbsp;&nbsp;&nbsp;element[jqName] = undefined; // ie does not allow deletion of attributes on elements.</div><div class='line' id='LC11052'>&nbsp;&nbsp;}</div><div class='line' id='LC11053'>}</div><div class='line' id='LC11054'><br/></div><div class='line' id='LC11055'>function JQLiteExpandoStore(element, key, value) {</div><div class='line' id='LC11056'>&nbsp;&nbsp;var expandoId = element[jqName],</div><div class='line' id='LC11057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expandoStore = jqCache[expandoId || -1];</div><div class='line' id='LC11058'><br/></div><div class='line' id='LC11059'>&nbsp;&nbsp;if (isDefined(value)) {</div><div class='line' id='LC11060'>&nbsp;&nbsp;&nbsp;&nbsp;if (!expandoStore) {</div><div class='line' id='LC11061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element[jqName] = expandoId = jqNextId();</div><div class='line' id='LC11062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expandoStore = jqCache[expandoId] = {};</div><div class='line' id='LC11063'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11064'>&nbsp;&nbsp;&nbsp;&nbsp;expandoStore[key] = value;</div><div class='line' id='LC11065'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11066'>&nbsp;&nbsp;&nbsp;&nbsp;return expandoStore &amp;&amp; expandoStore[key];</div><div class='line' id='LC11067'>&nbsp;&nbsp;}</div><div class='line' id='LC11068'>}</div><div class='line' id='LC11069'><br/></div><div class='line' id='LC11070'>function JQLiteData(element, key, value) {</div><div class='line' id='LC11071'>&nbsp;&nbsp;var data = JQLiteExpandoStore(element, &#39;data&#39;),</div><div class='line' id='LC11072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSetter = isDefined(value),</div><div class='line' id='LC11073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyDefined = !isSetter &amp;&amp; isDefined(key),</div><div class='line' id='LC11074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSimpleGetter = keyDefined &amp;&amp; !isObject(key);</div><div class='line' id='LC11075'><br/></div><div class='line' id='LC11076'>&nbsp;&nbsp;if (!data &amp;&amp; !isSimpleGetter) {</div><div class='line' id='LC11077'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteExpandoStore(element, &#39;data&#39;, data = {});</div><div class='line' id='LC11078'>&nbsp;&nbsp;}</div><div class='line' id='LC11079'><br/></div><div class='line' id='LC11080'>&nbsp;&nbsp;if (isSetter) {</div><div class='line' id='LC11081'>&nbsp;&nbsp;&nbsp;&nbsp;data[key] = value;</div><div class='line' id='LC11082'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11083'>&nbsp;&nbsp;&nbsp;&nbsp;if (keyDefined) {</div><div class='line' id='LC11084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isSimpleGetter) {</div><div class='line' id='LC11085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// don&#39;t create data in this case.</div><div class='line' id='LC11086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data &amp;&amp; data[key];</div><div class='line' id='LC11087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extend(data, key);</div><div class='line' id='LC11089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11090'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data;</div><div class='line' id='LC11092'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11093'>&nbsp;&nbsp;}</div><div class='line' id='LC11094'>}</div><div class='line' id='LC11095'><br/></div><div class='line' id='LC11096'>function JQLiteHasClass(element, selector) {</div><div class='line' id='LC11097'>&nbsp;&nbsp;return ((&quot; &quot; + element.className + &quot; &quot;).replace(/[\n\t]/g, &quot; &quot;).</div><div class='line' id='LC11098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexOf( &quot; &quot; + selector + &quot; &quot; ) &gt; -1);</div><div class='line' id='LC11099'>}</div><div class='line' id='LC11100'><br/></div><div class='line' id='LC11101'>function JQLiteRemoveClass(element, cssClasses) {</div><div class='line' id='LC11102'>&nbsp;&nbsp;if (cssClasses) {</div><div class='line' id='LC11103'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(cssClasses.split(&#39; &#39;), function(cssClass) {</div><div class='line' id='LC11104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.className = trim(</div><div class='line' id='LC11105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&quot; &quot; + element.className + &quot; &quot;)</div><div class='line' id='LC11106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.replace(/[\n\t]/g, &quot; &quot;)</div><div class='line' id='LC11107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.replace(&quot; &quot; + trim(cssClass) + &quot; &quot;, &quot; &quot;)</div><div class='line' id='LC11108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC11109'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11110'>&nbsp;&nbsp;}</div><div class='line' id='LC11111'>}</div><div class='line' id='LC11112'><br/></div><div class='line' id='LC11113'>function JQLiteAddClass(element, cssClasses) {</div><div class='line' id='LC11114'>&nbsp;&nbsp;if (cssClasses) {</div><div class='line' id='LC11115'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(cssClasses.split(&#39; &#39;), function(cssClass) {</div><div class='line' id='LC11116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!JQLiteHasClass(element, cssClass)) {</div><div class='line' id='LC11117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.className = trim(element.className + &#39; &#39; + trim(cssClass));</div><div class='line' id='LC11118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11119'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11120'>&nbsp;&nbsp;}</div><div class='line' id='LC11121'>}</div><div class='line' id='LC11122'><br/></div><div class='line' id='LC11123'>function JQLiteAddNodes(root, elements) {</div><div class='line' id='LC11124'>&nbsp;&nbsp;if (elements) {</div><div class='line' id='LC11125'>&nbsp;&nbsp;&nbsp;&nbsp;elements = (!elements.nodeName &amp;&amp; isDefined(elements.length) &amp;&amp; !isWindow(elements))</div><div class='line' id='LC11126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? elements</div><div class='line' id='LC11127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: [ elements ];</div><div class='line' id='LC11128'>&nbsp;&nbsp;&nbsp;&nbsp;for(var i=0; i &lt; elements.length; i++) {</div><div class='line' id='LC11129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root.push(elements[i]);</div><div class='line' id='LC11130'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11131'>&nbsp;&nbsp;}</div><div class='line' id='LC11132'>}</div><div class='line' id='LC11133'><br/></div><div class='line' id='LC11134'>function JQLiteController(element, name) {</div><div class='line' id='LC11135'>&nbsp;&nbsp;return JQLiteInheritedData(element, &#39;$&#39; + (name || &#39;ngController&#39; ) + &#39;Controller&#39;);</div><div class='line' id='LC11136'>}</div><div class='line' id='LC11137'><br/></div><div class='line' id='LC11138'>function JQLiteInheritedData(element, name, value) {</div><div class='line' id='LC11139'>&nbsp;&nbsp;element = jqLite(element);</div><div class='line' id='LC11140'><br/></div><div class='line' id='LC11141'>&nbsp;&nbsp;// if element is the document object work with the html element instead</div><div class='line' id='LC11142'>&nbsp;&nbsp;// this makes $(document).scope() possible</div><div class='line' id='LC11143'>&nbsp;&nbsp;if(element[0].nodeType == 9) {</div><div class='line' id='LC11144'>&nbsp;&nbsp;&nbsp;&nbsp;element = element.find(&#39;html&#39;);</div><div class='line' id='LC11145'>&nbsp;&nbsp;}</div><div class='line' id='LC11146'><br/></div><div class='line' id='LC11147'>&nbsp;&nbsp;while (element.length) {</div><div class='line' id='LC11148'>&nbsp;&nbsp;&nbsp;&nbsp;if (value = element.data(name)) return value;</div><div class='line' id='LC11149'>&nbsp;&nbsp;&nbsp;&nbsp;element = element.parent();</div><div class='line' id='LC11150'>&nbsp;&nbsp;}</div><div class='line' id='LC11151'>}</div><div class='line' id='LC11152'><br/></div><div class='line' id='LC11153'>//////////////////////////////////////////</div><div class='line' id='LC11154'>// Functions which are declared directly.</div><div class='line' id='LC11155'>//////////////////////////////////////////</div><div class='line' id='LC11156'>var JQLitePrototype = JQLite.prototype = {</div><div class='line' id='LC11157'>&nbsp;&nbsp;ready: function(fn) {</div><div class='line' id='LC11158'>&nbsp;&nbsp;&nbsp;&nbsp;var fired = false;</div><div class='line' id='LC11159'><br/></div><div class='line' id='LC11160'>&nbsp;&nbsp;&nbsp;&nbsp;function trigger() {</div><div class='line' id='LC11161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fired) return;</div><div class='line' id='LC11162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fired = true;</div><div class='line' id='LC11163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn();</div><div class='line' id='LC11164'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11165'><br/></div><div class='line' id='LC11166'>&nbsp;&nbsp;&nbsp;&nbsp;this.bind(&#39;DOMContentLoaded&#39;, trigger); // works for modern browsers and IE9</div><div class='line' id='LC11167'>&nbsp;&nbsp;&nbsp;&nbsp;// we can not use jqLite since we are not done loading and jQuery could be loaded later.</div><div class='line' id='LC11168'>&nbsp;&nbsp;&nbsp;&nbsp;JQLite(window).bind(&#39;load&#39;, trigger); // fallback to window.onload for others</div><div class='line' id='LC11169'>&nbsp;&nbsp;},</div><div class='line' id='LC11170'>&nbsp;&nbsp;toString: function() {</div><div class='line' id='LC11171'>&nbsp;&nbsp;&nbsp;&nbsp;var value = [];</div><div class='line' id='LC11172'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(this, function(e){ value.push(&#39;&#39; + e);});</div><div class='line' id='LC11173'>&nbsp;&nbsp;&nbsp;&nbsp;return &#39;[&#39; + value.join(&#39;, &#39;) + &#39;]&#39;;</div><div class='line' id='LC11174'>&nbsp;&nbsp;},</div><div class='line' id='LC11175'><br/></div><div class='line' id='LC11176'>&nbsp;&nbsp;eq: function(index) {</div><div class='line' id='LC11177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (index &gt;= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);</div><div class='line' id='LC11178'>&nbsp;&nbsp;},</div><div class='line' id='LC11179'><br/></div><div class='line' id='LC11180'>&nbsp;&nbsp;length: 0,</div><div class='line' id='LC11181'>&nbsp;&nbsp;push: push,</div><div class='line' id='LC11182'>&nbsp;&nbsp;sort: [].sort,</div><div class='line' id='LC11183'>&nbsp;&nbsp;splice: [].splice</div><div class='line' id='LC11184'>};</div><div class='line' id='LC11185'><br/></div><div class='line' id='LC11186'>//////////////////////////////////////////</div><div class='line' id='LC11187'>// Functions iterating getter/setters.</div><div class='line' id='LC11188'>// these functions return self on setter and</div><div class='line' id='LC11189'>// value on get.</div><div class='line' id='LC11190'>//////////////////////////////////////////</div><div class='line' id='LC11191'>var BOOLEAN_ATTR = {};</div><div class='line' id='LC11192'>forEach(&#39;multiple,selected,checked,disabled,readOnly,required&#39;.split(&#39;,&#39;), function(value) {</div><div class='line' id='LC11193'>&nbsp;&nbsp;BOOLEAN_ATTR[lowercase(value)] = value;</div><div class='line' id='LC11194'>});</div><div class='line' id='LC11195'>var BOOLEAN_ELEMENTS = {};</div><div class='line' id='LC11196'>forEach(&#39;input,select,option,textarea,button,form&#39;.split(&#39;,&#39;), function(value) {</div><div class='line' id='LC11197'>&nbsp;&nbsp;BOOLEAN_ELEMENTS[uppercase(value)] = true;</div><div class='line' id='LC11198'>});</div><div class='line' id='LC11199'><br/></div><div class='line' id='LC11200'>function getBooleanAttrName(element, name) {</div><div class='line' id='LC11201'>&nbsp;&nbsp;// check dom last since we will most likely fail on name</div><div class='line' id='LC11202'>&nbsp;&nbsp;var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];</div><div class='line' id='LC11203'><br/></div><div class='line' id='LC11204'>&nbsp;&nbsp;// booleanAttr is here twice to minimize DOM access</div><div class='line' id='LC11205'>&nbsp;&nbsp;return booleanAttr &amp;&amp; BOOLEAN_ELEMENTS[element.nodeName] &amp;&amp; booleanAttr;</div><div class='line' id='LC11206'>}</div><div class='line' id='LC11207'><br/></div><div class='line' id='LC11208'>forEach({</div><div class='line' id='LC11209'>&nbsp;&nbsp;data: JQLiteData,</div><div class='line' id='LC11210'>&nbsp;&nbsp;inheritedData: JQLiteInheritedData,</div><div class='line' id='LC11211'><br/></div><div class='line' id='LC11212'>&nbsp;&nbsp;scope: function(element) {</div><div class='line' id='LC11213'>&nbsp;&nbsp;&nbsp;&nbsp;return JQLiteInheritedData(element, &#39;$scope&#39;);</div><div class='line' id='LC11214'>&nbsp;&nbsp;},</div><div class='line' id='LC11215'><br/></div><div class='line' id='LC11216'>&nbsp;&nbsp;controller: JQLiteController ,</div><div class='line' id='LC11217'><br/></div><div class='line' id='LC11218'>&nbsp;&nbsp;injector: function(element) {</div><div class='line' id='LC11219'>&nbsp;&nbsp;&nbsp;&nbsp;return JQLiteInheritedData(element, &#39;$injector&#39;);</div><div class='line' id='LC11220'>&nbsp;&nbsp;},</div><div class='line' id='LC11221'><br/></div><div class='line' id='LC11222'>&nbsp;&nbsp;removeAttr: function(element,name) {</div><div class='line' id='LC11223'>&nbsp;&nbsp;&nbsp;&nbsp;element.removeAttribute(name);</div><div class='line' id='LC11224'>&nbsp;&nbsp;},</div><div class='line' id='LC11225'><br/></div><div class='line' id='LC11226'>&nbsp;&nbsp;hasClass: JQLiteHasClass,</div><div class='line' id='LC11227'><br/></div><div class='line' id='LC11228'>&nbsp;&nbsp;css: function(element, name, value) {</div><div class='line' id='LC11229'>&nbsp;&nbsp;&nbsp;&nbsp;name = camelCase(name);</div><div class='line' id='LC11230'><br/></div><div class='line' id='LC11231'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(value)) {</div><div class='line' id='LC11232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.style[name] = value;</div><div class='line' id='LC11233'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var val;</div><div class='line' id='LC11235'><br/></div><div class='line' id='LC11236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (msie &lt;= 8) {</div><div class='line' id='LC11237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this is some IE specific weirdness that jQuery 1.6.4 does not sure why</div><div class='line' id='LC11238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = element.currentStyle &amp;&amp; element.currentStyle[name];</div><div class='line' id='LC11239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (val === &#39;&#39;) val = &#39;auto&#39;;</div><div class='line' id='LC11240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11241'><br/></div><div class='line' id='LC11242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = val || element.style[name];</div><div class='line' id='LC11243'><br/></div><div class='line' id='LC11244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (msie &lt;= 8) {</div><div class='line' id='LC11245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// jquery weirdness :-/</div><div class='line' id='LC11246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = (val === &#39;&#39;) ? undefined : val;</div><div class='line' id='LC11247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11248'><br/></div><div class='line' id='LC11249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return  val;</div><div class='line' id='LC11250'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11251'>&nbsp;&nbsp;},</div><div class='line' id='LC11252'><br/></div><div class='line' id='LC11253'>&nbsp;&nbsp;attr: function(element, name, value){</div><div class='line' id='LC11254'>&nbsp;&nbsp;&nbsp;&nbsp;var lowercasedName = lowercase(name);</div><div class='line' id='LC11255'>&nbsp;&nbsp;&nbsp;&nbsp;if (BOOLEAN_ATTR[lowercasedName]) {</div><div class='line' id='LC11256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(value)) {</div><div class='line' id='LC11257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!!value) {</div><div class='line' id='LC11258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element[name] = true;</div><div class='line' id='LC11259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.setAttribute(name, lowercasedName);</div><div class='line' id='LC11260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element[name] = false;</div><div class='line' id='LC11262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.removeAttribute(lowercasedName);</div><div class='line' id='LC11263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (element[name] ||</div><div class='line' id='LC11266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(element.attributes.getNamedItem(name)|| noop).specified)</div><div class='line' id='LC11267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? lowercasedName</div><div class='line' id='LC11268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: undefined;</div><div class='line' id='LC11269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11270'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (isDefined(value)) {</div><div class='line' id='LC11271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.setAttribute(name, value);</div><div class='line' id='LC11272'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (element.getAttribute) {</div><div class='line' id='LC11273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the extra argument &quot;2&quot; is to get the right thing for a.href in IE, see jQuery code</div><div class='line' id='LC11274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// some elements (e.g. Document) don&#39;t have get attribute, so return undefined</div><div class='line' id='LC11275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ret = element.getAttribute(name, 2);</div><div class='line' id='LC11276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// normalize non-existing attributes to undefined (as jQuery)</div><div class='line' id='LC11277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ret === null ? undefined : ret;</div><div class='line' id='LC11278'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11279'>&nbsp;&nbsp;},</div><div class='line' id='LC11280'><br/></div><div class='line' id='LC11281'>&nbsp;&nbsp;prop: function(element, name, value) {</div><div class='line' id='LC11282'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(value)) {</div><div class='line' id='LC11283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element[name] = value;</div><div class='line' id='LC11284'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element[name];</div><div class='line' id='LC11286'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11287'>&nbsp;&nbsp;},</div><div class='line' id='LC11288'><br/></div><div class='line' id='LC11289'>&nbsp;&nbsp;text: extend((msie &lt; 9)</div><div class='line' id='LC11290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? function(element, value) {</div><div class='line' id='LC11291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (element.nodeType == 1 /** Element */) {</div><div class='line' id='LC11292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value))</div><div class='line' id='LC11293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.innerText;</div><div class='line' id='LC11294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.innerText = value;</div><div class='line' id='LC11295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value))</div><div class='line' id='LC11297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.nodeValue;</div><div class='line' id='LC11298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.nodeValue = value;</div><div class='line' id='LC11299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function(element, value) {</div><div class='line' id='LC11302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value)) {</div><div class='line' id='LC11303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.textContent;</div><div class='line' id='LC11304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.textContent = value;</div><div class='line' id='LC11306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, {$dv:&#39;&#39;}),</div><div class='line' id='LC11307'><br/></div><div class='line' id='LC11308'>&nbsp;&nbsp;val: function(element, value) {</div><div class='line' id='LC11309'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value)) {</div><div class='line' id='LC11310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.value;</div><div class='line' id='LC11311'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11312'>&nbsp;&nbsp;&nbsp;&nbsp;element.value = value;</div><div class='line' id='LC11313'>&nbsp;&nbsp;},</div><div class='line' id='LC11314'><br/></div><div class='line' id='LC11315'>&nbsp;&nbsp;html: function(element, value) {</div><div class='line' id='LC11316'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value)) {</div><div class='line' id='LC11317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.innerHTML;</div><div class='line' id='LC11318'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11319'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, childNodes = element.childNodes; i &lt; childNodes.length; i++) {</div><div class='line' id='LC11320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JQLiteDealoc(childNodes[i]);</div><div class='line' id='LC11321'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11322'>&nbsp;&nbsp;&nbsp;&nbsp;element.innerHTML = value;</div><div class='line' id='LC11323'>&nbsp;&nbsp;}</div><div class='line' id='LC11324'>}, function(fn, name){</div><div class='line' id='LC11325'>&nbsp;&nbsp;/**</div><div class='line' id='LC11326'>&nbsp;&nbsp;&nbsp;* Properties: writes return selection, reads return first value</div><div class='line' id='LC11327'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11328'>&nbsp;&nbsp;JQLite.prototype[name] = function(arg1, arg2) {</div><div class='line' id='LC11329'>&nbsp;&nbsp;&nbsp;&nbsp;var i, key;</div><div class='line' id='LC11330'><br/></div><div class='line' id='LC11331'>&nbsp;&nbsp;&nbsp;&nbsp;// JQLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it</div><div class='line' id='LC11332'>&nbsp;&nbsp;&nbsp;&nbsp;// in a way that survives minification.</div><div class='line' id='LC11333'>&nbsp;&nbsp;&nbsp;&nbsp;if (((fn.length == 2 &amp;&amp; (fn !== JQLiteHasClass &amp;&amp; fn !== JQLiteController)) ? arg1 : arg2) === undefined) {</div><div class='line' id='LC11334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(arg1)) {</div><div class='line' id='LC11335'><br/></div><div class='line' id='LC11336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are a write, but the object properties are the key/values</div><div class='line' id='LC11337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i &lt; this.length; i++) {</div><div class='line' id='LC11338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fn === JQLiteData) {</div><div class='line' id='LC11339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// data() takes the whole object in jQuery</div><div class='line' id='LC11340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(this[i], arg1);</div><div class='line' id='LC11341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in arg1) {</div><div class='line' id='LC11343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(this[i], key, arg1[key]);</div><div class='line' id='LC11344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// return self for chaining</div><div class='line' id='LC11348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC11349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are a read, so read the first child.</div><div class='line' id='LC11351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.length)</div><div class='line' id='LC11352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn(this[0], arg1, arg2);</div><div class='line' id='LC11353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11354'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are a write, so apply to all children</div><div class='line' id='LC11356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i &lt; this.length; i++) {</div><div class='line' id='LC11357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(this[i], arg1, arg2);</div><div class='line' id='LC11358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// return self for chaining</div><div class='line' id='LC11360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC11361'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11362'>&nbsp;&nbsp;&nbsp;&nbsp;return fn.$dv;</div><div class='line' id='LC11363'>&nbsp;&nbsp;};</div><div class='line' id='LC11364'>});</div><div class='line' id='LC11365'><br/></div><div class='line' id='LC11366'>function createEventHandler(element, events) {</div><div class='line' id='LC11367'>&nbsp;&nbsp;var eventHandler = function (event, type) {</div><div class='line' id='LC11368'>&nbsp;&nbsp;&nbsp;&nbsp;if (!event.preventDefault) {</div><div class='line' id='LC11369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault = function() {</div><div class='line' id='LC11370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.returnValue = false; //ie</div><div class='line' id='LC11371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11372'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11373'><br/></div><div class='line' id='LC11374'>&nbsp;&nbsp;&nbsp;&nbsp;if (!event.stopPropagation) {</div><div class='line' id='LC11375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.stopPropagation = function() {</div><div class='line' id='LC11376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.cancelBubble = true; //ie</div><div class='line' id='LC11377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11378'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11379'><br/></div><div class='line' id='LC11380'>&nbsp;&nbsp;&nbsp;&nbsp;if (!event.target) {</div><div class='line' id='LC11381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.target = event.srcElement || document;</div><div class='line' id='LC11382'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11383'><br/></div><div class='line' id='LC11384'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(event.defaultPrevented)) {</div><div class='line' id='LC11385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prevent = event.preventDefault;</div><div class='line' id='LC11386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault = function() {</div><div class='line' id='LC11387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.defaultPrevented = true;</div><div class='line' id='LC11388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prevent.call(event);</div><div class='line' id='LC11389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.defaultPrevented = false;</div><div class='line' id='LC11391'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11392'><br/></div><div class='line' id='LC11393'>&nbsp;&nbsp;&nbsp;&nbsp;event.isDefaultPrevented = function() {</div><div class='line' id='LC11394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event.defaultPrevented;</div><div class='line' id='LC11395'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11396'><br/></div><div class='line' id='LC11397'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(events[type || event.type], function(fn) {</div><div class='line' id='LC11398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.call(element, event);</div><div class='line' id='LC11399'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11400'><br/></div><div class='line' id='LC11401'>&nbsp;&nbsp;&nbsp;&nbsp;// Remove monkey-patched methods (IE),</div><div class='line' id='LC11402'>&nbsp;&nbsp;&nbsp;&nbsp;// as they would cause memory leaks in IE8.</div><div class='line' id='LC11403'>&nbsp;&nbsp;&nbsp;&nbsp;if (msie &lt;= 8) {</div><div class='line' id='LC11404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE7/8 does not allow to delete property on native object</div><div class='line' id='LC11405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault = null;</div><div class='line' id='LC11406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.stopPropagation = null;</div><div class='line' id='LC11407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.isDefaultPrevented = null;</div><div class='line' id='LC11408'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// It shouldn&#39;t affect normal browsers (native methods are defined on prototype).</div><div class='line' id='LC11410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete event.preventDefault;</div><div class='line' id='LC11411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete event.stopPropagation;</div><div class='line' id='LC11412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete event.isDefaultPrevented;</div><div class='line' id='LC11413'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11414'>&nbsp;&nbsp;};</div><div class='line' id='LC11415'>&nbsp;&nbsp;eventHandler.elem = element;</div><div class='line' id='LC11416'>&nbsp;&nbsp;return eventHandler;</div><div class='line' id='LC11417'>}</div><div class='line' id='LC11418'><br/></div><div class='line' id='LC11419'>//////////////////////////////////////////</div><div class='line' id='LC11420'>// Functions iterating traversal.</div><div class='line' id='LC11421'>// These functions chain results into a single</div><div class='line' id='LC11422'>// selector.</div><div class='line' id='LC11423'>//////////////////////////////////////////</div><div class='line' id='LC11424'>forEach({</div><div class='line' id='LC11425'>&nbsp;&nbsp;removeData: JQLiteRemoveData,</div><div class='line' id='LC11426'><br/></div><div class='line' id='LC11427'>&nbsp;&nbsp;dealoc: JQLiteDealoc,</div><div class='line' id='LC11428'><br/></div><div class='line' id='LC11429'>&nbsp;&nbsp;bind: function bindFn(element, type, fn){</div><div class='line' id='LC11430'>&nbsp;&nbsp;&nbsp;&nbsp;var events = JQLiteExpandoStore(element, &#39;events&#39;),</div><div class='line' id='LC11431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle = JQLiteExpandoStore(element, &#39;handle&#39;);</div><div class='line' id='LC11432'><br/></div><div class='line' id='LC11433'>&nbsp;&nbsp;&nbsp;&nbsp;if (!events) JQLiteExpandoStore(element, &#39;events&#39;, events = {});</div><div class='line' id='LC11434'>&nbsp;&nbsp;&nbsp;&nbsp;if (!handle) JQLiteExpandoStore(element, &#39;handle&#39;, handle = createEventHandler(element, events));</div><div class='line' id='LC11435'><br/></div><div class='line' id='LC11436'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(type.split(&#39; &#39;), function(type){</div><div class='line' id='LC11437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventFns = events[type];</div><div class='line' id='LC11438'><br/></div><div class='line' id='LC11439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!eventFns) {</div><div class='line' id='LC11440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (type == &#39;mouseenter&#39; || type == &#39;mouseleave&#39;) {</div><div class='line' id='LC11441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var contains = document.body.contains || document.body.compareDocumentPosition ?</div><div class='line' id='LC11442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( a, b ) {</div><div class='line' id='LC11443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var adown = a.nodeType === 9 ? a.documentElement : a,</div><div class='line' id='LC11444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bup = b &amp;&amp; b.parentNode;</div><div class='line' id='LC11445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a === bup || !!( bup &amp;&amp; bup.nodeType === 1 &amp;&amp; (</div><div class='line' id='LC11446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adown.contains ?</div><div class='line' id='LC11447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adown.contains( bup ) :</div><div class='line' id='LC11448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.compareDocumentPosition &amp;&amp; a.compareDocumentPosition( bup ) &amp; 16</div><div class='line' id='LC11449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;));</div><div class='line' id='LC11450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} :</div><div class='line' id='LC11451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( a, b ) {</div><div class='line' id='LC11452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( b ) {</div><div class='line' id='LC11453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ( (b = b.parentNode) ) {</div><div class='line' id='LC11454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( b === a ) {</div><div class='line' id='LC11455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC11456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC11460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};	</div><div class='line' id='LC11461'><br/></div><div class='line' id='LC11462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;events[type] = [];</div><div class='line' id='LC11463'><br/></div><div class='line' id='LC11464'>		  // Refer to jQuery&#39;s implementation of mouseenter &amp; mouseleave</div><div class='line' id='LC11465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Read about mouseenter and mouseleave:</div><div class='line' id='LC11466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// http://www.quirksmode.org/js/events_mouse.html#link8</div><div class='line' id='LC11467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventmap = { mouseleave : &quot;mouseout&quot;, mouseenter : &quot;mouseover&quot;}          </div><div class='line' id='LC11468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindFn(element, eventmap[type], function(event) {</div><div class='line' id='LC11469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ret, target = this, related = event.relatedTarget;</div><div class='line' id='LC11470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// For mousenter/leave call the handler if related is outside the target.</div><div class='line' id='LC11471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// NB: No relatedTarget if the mouse left/entered the browser window</div><div class='line' id='LC11472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !related || (related !== target &amp;&amp; !contains(target, related)) ){</div><div class='line' id='LC11473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle(event, type);</div><div class='line' id='LC11474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}	</div><div class='line' id='LC11475'><br/></div><div class='line' id='LC11476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11477'><br/></div><div class='line' id='LC11478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addEventListenerFn(element, type, handle);</div><div class='line' id='LC11480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;events[type] = [];</div><div class='line' id='LC11481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventFns = events[type]</div><div class='line' id='LC11483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventFns.push(fn);</div><div class='line' id='LC11485'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11486'>&nbsp;&nbsp;},</div><div class='line' id='LC11487'><br/></div><div class='line' id='LC11488'>&nbsp;&nbsp;unbind: JQLiteUnbind,</div><div class='line' id='LC11489'><br/></div><div class='line' id='LC11490'>&nbsp;&nbsp;replaceWith: function(element, replaceNode) {</div><div class='line' id='LC11491'>&nbsp;&nbsp;&nbsp;&nbsp;var index, parent = element.parentNode;</div><div class='line' id='LC11492'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteDealoc(element);</div><div class='line' id='LC11493'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(new JQLite(replaceNode), function(node){</div><div class='line' id='LC11494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index) {</div><div class='line' id='LC11495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.insertBefore(node, index.nextSibling);</div><div class='line' id='LC11496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.replaceChild(node, element);</div><div class='line' id='LC11498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = node;</div><div class='line' id='LC11500'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11501'>&nbsp;&nbsp;},</div><div class='line' id='LC11502'><br/></div><div class='line' id='LC11503'>&nbsp;&nbsp;children: function(element) {</div><div class='line' id='LC11504'>&nbsp;&nbsp;&nbsp;&nbsp;var children = [];</div><div class='line' id='LC11505'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(element.childNodes, function(element){</div><div class='line' id='LC11506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (element.nodeType === 1)</div><div class='line' id='LC11507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;children.push(element);</div><div class='line' id='LC11508'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11509'>&nbsp;&nbsp;&nbsp;&nbsp;return children;</div><div class='line' id='LC11510'>&nbsp;&nbsp;},</div><div class='line' id='LC11511'><br/></div><div class='line' id='LC11512'>&nbsp;&nbsp;contents: function(element) {</div><div class='line' id='LC11513'>&nbsp;&nbsp;&nbsp;&nbsp;return element.childNodes || [];</div><div class='line' id='LC11514'>&nbsp;&nbsp;},</div><div class='line' id='LC11515'><br/></div><div class='line' id='LC11516'>&nbsp;&nbsp;append: function(element, node) {</div><div class='line' id='LC11517'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(new JQLite(node), function(child){</div><div class='line' id='LC11518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (element.nodeType === 1)</div><div class='line' id='LC11519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.appendChild(child);</div><div class='line' id='LC11520'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11521'>&nbsp;&nbsp;},</div><div class='line' id='LC11522'><br/></div><div class='line' id='LC11523'>&nbsp;&nbsp;prepend: function(element, node) {</div><div class='line' id='LC11524'>&nbsp;&nbsp;&nbsp;&nbsp;if (element.nodeType === 1) {</div><div class='line' id='LC11525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index = element.firstChild;</div><div class='line' id='LC11526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(new JQLite(node), function(child){</div><div class='line' id='LC11527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index) {</div><div class='line' id='LC11528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.insertBefore(child, index);</div><div class='line' id='LC11529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.appendChild(child);</div><div class='line' id='LC11531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = child;</div><div class='line' id='LC11532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11534'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11535'>&nbsp;&nbsp;},</div><div class='line' id='LC11536'><br/></div><div class='line' id='LC11537'>&nbsp;&nbsp;wrap: function(element, wrapNode) {</div><div class='line' id='LC11538'>&nbsp;&nbsp;&nbsp;&nbsp;wrapNode = jqLite(wrapNode)[0];</div><div class='line' id='LC11539'>&nbsp;&nbsp;&nbsp;&nbsp;var parent = element.parentNode;</div><div class='line' id='LC11540'>&nbsp;&nbsp;&nbsp;&nbsp;if (parent) {</div><div class='line' id='LC11541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.replaceChild(wrapNode, element);</div><div class='line' id='LC11542'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11543'>&nbsp;&nbsp;&nbsp;&nbsp;wrapNode.appendChild(element);</div><div class='line' id='LC11544'>&nbsp;&nbsp;},</div><div class='line' id='LC11545'><br/></div><div class='line' id='LC11546'>&nbsp;&nbsp;remove: function(element) {</div><div class='line' id='LC11547'>&nbsp;&nbsp;&nbsp;&nbsp;JQLiteDealoc(element);</div><div class='line' id='LC11548'>&nbsp;&nbsp;&nbsp;&nbsp;var parent = element.parentNode;</div><div class='line' id='LC11549'>&nbsp;&nbsp;&nbsp;&nbsp;if (parent) parent.removeChild(element);</div><div class='line' id='LC11550'>&nbsp;&nbsp;},</div><div class='line' id='LC11551'><br/></div><div class='line' id='LC11552'>&nbsp;&nbsp;after: function(element, newElement) {</div><div class='line' id='LC11553'>&nbsp;&nbsp;&nbsp;&nbsp;var index = element, parent = element.parentNode;</div><div class='line' id='LC11554'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(new JQLite(newElement), function(node){</div><div class='line' id='LC11555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.insertBefore(node, index.nextSibling);</div><div class='line' id='LC11556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = node;</div><div class='line' id='LC11557'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11558'>&nbsp;&nbsp;},</div><div class='line' id='LC11559'><br/></div><div class='line' id='LC11560'>&nbsp;&nbsp;addClass: JQLiteAddClass,</div><div class='line' id='LC11561'>&nbsp;&nbsp;removeClass: JQLiteRemoveClass,</div><div class='line' id='LC11562'><br/></div><div class='line' id='LC11563'>&nbsp;&nbsp;toggleClass: function(element, selector, condition) {</div><div class='line' id='LC11564'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(condition)) {</div><div class='line' id='LC11565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;condition = !JQLiteHasClass(element, selector);</div><div class='line' id='LC11566'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11567'>&nbsp;&nbsp;&nbsp;&nbsp;(condition ? JQLiteAddClass : JQLiteRemoveClass)(element, selector);</div><div class='line' id='LC11568'>&nbsp;&nbsp;},</div><div class='line' id='LC11569'><br/></div><div class='line' id='LC11570'>&nbsp;&nbsp;parent: function(element) {</div><div class='line' id='LC11571'>&nbsp;&nbsp;&nbsp;&nbsp;var parent = element.parentNode;</div><div class='line' id='LC11572'>&nbsp;&nbsp;&nbsp;&nbsp;return parent &amp;&amp; parent.nodeType !== 11 ? parent : null;</div><div class='line' id='LC11573'>&nbsp;&nbsp;},</div><div class='line' id='LC11574'><br/></div><div class='line' id='LC11575'>&nbsp;&nbsp;next: function(element) {</div><div class='line' id='LC11576'>&nbsp;&nbsp;&nbsp;&nbsp;if (element.nextElementSibling) {</div><div class='line' id='LC11577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return element.nextElementSibling;</div><div class='line' id='LC11578'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11579'><br/></div><div class='line' id='LC11580'>&nbsp;&nbsp;&nbsp;&nbsp;// IE8 doesn&#39;t have nextElementSibling</div><div class='line' id='LC11581'>&nbsp;&nbsp;&nbsp;&nbsp;var elm = element.nextSibling;</div><div class='line' id='LC11582'>&nbsp;&nbsp;&nbsp;&nbsp;while (elm != null &amp;&amp; elm.nodeType !== 1) {</div><div class='line' id='LC11583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elm = elm.nextSibling;</div><div class='line' id='LC11584'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11585'>&nbsp;&nbsp;&nbsp;&nbsp;return elm;</div><div class='line' id='LC11586'>&nbsp;&nbsp;},</div><div class='line' id='LC11587'><br/></div><div class='line' id='LC11588'>&nbsp;&nbsp;find: function(element, selector) {</div><div class='line' id='LC11589'>&nbsp;&nbsp;&nbsp;&nbsp;return element.getElementsByTagName(selector);</div><div class='line' id='LC11590'>&nbsp;&nbsp;},</div><div class='line' id='LC11591'><br/></div><div class='line' id='LC11592'>&nbsp;&nbsp;clone: JQLiteClone,</div><div class='line' id='LC11593'><br/></div><div class='line' id='LC11594'>&nbsp;&nbsp;triggerHandler: function(element, eventName) {</div><div class='line' id='LC11595'>&nbsp;&nbsp;&nbsp;&nbsp;var eventFns = (JQLiteExpandoStore(element, &#39;events&#39;) || {})[eventName];</div><div class='line' id='LC11596'><br/></div><div class='line' id='LC11597'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(eventFns, function(fn) {</div><div class='line' id='LC11598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.call(element, null);</div><div class='line' id='LC11599'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11600'>&nbsp;&nbsp;}</div><div class='line' id='LC11601'>}, function(fn, name){</div><div class='line' id='LC11602'>&nbsp;&nbsp;/**</div><div class='line' id='LC11603'>&nbsp;&nbsp;&nbsp;* chaining functions</div><div class='line' id='LC11604'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11605'>&nbsp;&nbsp;JQLite.prototype[name] = function(arg1, arg2) {</div><div class='line' id='LC11606'>&nbsp;&nbsp;&nbsp;&nbsp;var value;</div><div class='line' id='LC11607'>&nbsp;&nbsp;&nbsp;&nbsp;for(var i=0; i &lt; this.length; i++) {</div><div class='line' id='LC11608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == undefined) {</div><div class='line' id='LC11609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = fn(this[i], arg1, arg2);</div><div class='line' id='LC11610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value !== undefined) {</div><div class='line' id='LC11611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// any function which returns a value needs to be wrapped</div><div class='line' id='LC11612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = jqLite(value);</div><div class='line' id='LC11613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JQLiteAddNodes(value, fn(this[i], arg1, arg2));</div><div class='line' id='LC11616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11617'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11618'>&nbsp;&nbsp;&nbsp;&nbsp;return value == undefined ? this : value;</div><div class='line' id='LC11619'>&nbsp;&nbsp;};</div><div class='line' id='LC11620'>});</div><div class='line' id='LC11621'><br/></div><div class='line' id='LC11622'>/**</div><div class='line' id='LC11623'>&nbsp;* Computes a hash of an &#39;obj&#39;.</div><div class='line' id='LC11624'>&nbsp;* Hash of a:</div><div class='line' id='LC11625'>&nbsp;*  string is string</div><div class='line' id='LC11626'>&nbsp;*  number is number as string</div><div class='line' id='LC11627'>&nbsp;*  object is either result of calling $$hashKey function on the object or uniquely generated id,</div><div class='line' id='LC11628'>&nbsp;*         that is also assigned to the $$hashKey property of the object.</div><div class='line' id='LC11629'>&nbsp;*</div><div class='line' id='LC11630'>&nbsp;* @param obj</div><div class='line' id='LC11631'>&nbsp;* @returns {string} hash string such that the same input will have the same hash string.</div><div class='line' id='LC11632'>&nbsp;*         The resulting string key is in &#39;type:hashKey&#39; format.</div><div class='line' id='LC11633'>&nbsp;*/</div><div class='line' id='LC11634'>function hashKey(obj) {</div><div class='line' id='LC11635'>&nbsp;&nbsp;var objType = typeof obj,</div><div class='line' id='LC11636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key;</div><div class='line' id='LC11637'><br/></div><div class='line' id='LC11638'>&nbsp;&nbsp;if (objType == &#39;object&#39; &amp;&amp; obj !== null) {</div><div class='line' id='LC11639'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof (key = obj.$$hashKey) == &#39;function&#39;) {</div><div class='line' id='LC11640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// must invoke on object to keep the right this</div><div class='line' id='LC11641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = obj.$$hashKey();</div><div class='line' id='LC11642'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (key === undefined) {</div><div class='line' id='LC11643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = obj.$$hashKey = nextUid();</div><div class='line' id='LC11644'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11645'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11646'>&nbsp;&nbsp;&nbsp;&nbsp;key = obj;</div><div class='line' id='LC11647'>&nbsp;&nbsp;}</div><div class='line' id='LC11648'><br/></div><div class='line' id='LC11649'>&nbsp;&nbsp;return objType + &#39;:&#39; + key;</div><div class='line' id='LC11650'>}</div><div class='line' id='LC11651'><br/></div><div class='line' id='LC11652'>/**</div><div class='line' id='LC11653'>&nbsp;* HashMap which can use objects as keys</div><div class='line' id='LC11654'>&nbsp;*/</div><div class='line' id='LC11655'>function HashMap(array){</div><div class='line' id='LC11656'>&nbsp;&nbsp;forEach(array, this.put, this);</div><div class='line' id='LC11657'>}</div><div class='line' id='LC11658'>HashMap.prototype = {</div><div class='line' id='LC11659'>&nbsp;&nbsp;/**</div><div class='line' id='LC11660'>&nbsp;&nbsp;&nbsp;* Store key value pair</div><div class='line' id='LC11661'>&nbsp;&nbsp;&nbsp;* @param key key to store can be any type</div><div class='line' id='LC11662'>&nbsp;&nbsp;&nbsp;* @param value value to store can be any type</div><div class='line' id='LC11663'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11664'>&nbsp;&nbsp;put: function(key, value) {</div><div class='line' id='LC11665'>&nbsp;&nbsp;&nbsp;&nbsp;this[hashKey(key)] = value;</div><div class='line' id='LC11666'>&nbsp;&nbsp;},</div><div class='line' id='LC11667'><br/></div><div class='line' id='LC11668'>&nbsp;&nbsp;/**</div><div class='line' id='LC11669'>&nbsp;&nbsp;&nbsp;* @param key</div><div class='line' id='LC11670'>&nbsp;&nbsp;&nbsp;* @returns the value for the key</div><div class='line' id='LC11671'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11672'>&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC11673'>&nbsp;&nbsp;&nbsp;&nbsp;return this[hashKey(key)];</div><div class='line' id='LC11674'>&nbsp;&nbsp;},</div><div class='line' id='LC11675'><br/></div><div class='line' id='LC11676'>&nbsp;&nbsp;/**</div><div class='line' id='LC11677'>&nbsp;&nbsp;&nbsp;* Remove the key/value pair</div><div class='line' id='LC11678'>&nbsp;&nbsp;&nbsp;* @param key</div><div class='line' id='LC11679'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11680'>&nbsp;&nbsp;remove: function(key) {</div><div class='line' id='LC11681'>&nbsp;&nbsp;&nbsp;&nbsp;var value = this[key = hashKey(key)];</div><div class='line' id='LC11682'>&nbsp;&nbsp;&nbsp;&nbsp;delete this[key];</div><div class='line' id='LC11683'>&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC11684'>&nbsp;&nbsp;}</div><div class='line' id='LC11685'>};</div><div class='line' id='LC11686'><br/></div><div class='line' id='LC11687'>/**</div><div class='line' id='LC11688'>&nbsp;* A map where multiple values can be added to the same key such that they form a queue.</div><div class='line' id='LC11689'>&nbsp;* @returns {HashQueueMap}</div><div class='line' id='LC11690'>&nbsp;*/</div><div class='line' id='LC11691'>function HashQueueMap() {}</div><div class='line' id='LC11692'>HashQueueMap.prototype = {</div><div class='line' id='LC11693'>&nbsp;&nbsp;/**</div><div class='line' id='LC11694'>&nbsp;&nbsp;&nbsp;* Same as array push, but using an array as the value for the hash</div><div class='line' id='LC11695'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11696'>&nbsp;&nbsp;push: function(key, value) {</div><div class='line' id='LC11697'>&nbsp;&nbsp;&nbsp;&nbsp;var array = this[key = hashKey(key)];</div><div class='line' id='LC11698'>&nbsp;&nbsp;&nbsp;&nbsp;if (!array) {</div><div class='line' id='LC11699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[key] = [value];</div><div class='line' id='LC11700'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.push(value);</div><div class='line' id='LC11702'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11703'>&nbsp;&nbsp;},</div><div class='line' id='LC11704'><br/></div><div class='line' id='LC11705'>&nbsp;&nbsp;/**</div><div class='line' id='LC11706'>&nbsp;&nbsp;&nbsp;* Same as array shift, but using an array as the value for the hash</div><div class='line' id='LC11707'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11708'>&nbsp;&nbsp;shift: function(key) {</div><div class='line' id='LC11709'>&nbsp;&nbsp;&nbsp;&nbsp;var array = this[key = hashKey(key)];</div><div class='line' id='LC11710'>&nbsp;&nbsp;&nbsp;&nbsp;if (array) {</div><div class='line' id='LC11711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (array.length == 1) {</div><div class='line' id='LC11712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this[key];</div><div class='line' id='LC11713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array[0];</div><div class='line' id='LC11714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array.shift();</div><div class='line' id='LC11716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11717'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11718'>&nbsp;&nbsp;},</div><div class='line' id='LC11719'><br/></div><div class='line' id='LC11720'>&nbsp;&nbsp;/**</div><div class='line' id='LC11721'>&nbsp;&nbsp;&nbsp;* return the first item without deleting it</div><div class='line' id='LC11722'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC11723'>&nbsp;&nbsp;peek: function(key) {</div><div class='line' id='LC11724'>&nbsp;&nbsp;&nbsp;&nbsp;var array = this[hashKey(key)];</div><div class='line' id='LC11725'>&nbsp;&nbsp;&nbsp;&nbsp;if (array) {</div><div class='line' id='LC11726'>&nbsp;&nbsp;&nbsp;&nbsp;return array[0];</div><div class='line' id='LC11727'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11728'>&nbsp;&nbsp;}</div><div class='line' id='LC11729'>};</div><div class='line' id='LC11730'><br/></div><div class='line' id='LC11731'>/**</div><div class='line' id='LC11732'>&nbsp;* @ngdoc function</div><div class='line' id='LC11733'>&nbsp;* @name angular.injector</div><div class='line' id='LC11734'>&nbsp;* @function</div><div class='line' id='LC11735'>&nbsp;*</div><div class='line' id='LC11736'>&nbsp;* @description</div><div class='line' id='LC11737'>&nbsp;* Creates an injector function that can be used for retrieving services as well as for</div><div class='line' id='LC11738'>&nbsp;* dependency injection (see {@link guide/di dependency injection}).</div><div class='line' id='LC11739'>&nbsp;*</div><div class='line' id='LC11740'><br/></div><div class='line' id='LC11741'>&nbsp;* @param {Array.&lt;string|Function&gt;} modules A list of module functions or their aliases. See</div><div class='line' id='LC11742'>&nbsp;*        {@link angular.module}. The `ng` module must be explicitly added.</div><div class='line' id='LC11743'>&nbsp;* @returns {function()} Injector function. See {@link AUTO.$injector $injector}.</div><div class='line' id='LC11744'>&nbsp;*</div><div class='line' id='LC11745'>&nbsp;* @example</div><div class='line' id='LC11746'>&nbsp;* Typical usage</div><div class='line' id='LC11747'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11748'>&nbsp;*   // create an injector</div><div class='line' id='LC11749'>&nbsp;*   var $injector = angular.injector([&#39;ng&#39;]);</div><div class='line' id='LC11750'>&nbsp;*</div><div class='line' id='LC11751'>&nbsp;*   // use the injector to kick off your application</div><div class='line' id='LC11752'>&nbsp;*   // use the type inference to auto inject arguments, or use implicit injection</div><div class='line' id='LC11753'>&nbsp;*   $injector.invoke(function($rootScope, $compile, $document){</div><div class='line' id='LC11754'>&nbsp;*     $compile($document)($rootScope);</div><div class='line' id='LC11755'>&nbsp;*     $rootScope.$digest();</div><div class='line' id='LC11756'>&nbsp;*   });</div><div class='line' id='LC11757'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11758'>&nbsp;*/</div><div class='line' id='LC11759'><br/></div><div class='line' id='LC11760'><br/></div><div class='line' id='LC11761'>/**</div><div class='line' id='LC11762'>&nbsp;* @ngdoc overview</div><div class='line' id='LC11763'>&nbsp;* @name AUTO</div><div class='line' id='LC11764'>&nbsp;* @description</div><div class='line' id='LC11765'>&nbsp;*</div><div class='line' id='LC11766'>&nbsp;* Implicit module which gets automatically added to each {@link AUTO.$injector $injector}.</div><div class='line' id='LC11767'>&nbsp;*/</div><div class='line' id='LC11768'><br/></div><div class='line' id='LC11769'>var FN_ARGS = /^function\s*[^\(]*\(\s*([^\)]*)\)/m;</div><div class='line' id='LC11770'>var FN_ARG_SPLIT = /,/;</div><div class='line' id='LC11771'>var FN_ARG = /^\s*(_?)(\S+?)\1\s*$/;</div><div class='line' id='LC11772'>var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;</div><div class='line' id='LC11773'>function annotate(fn) {</div><div class='line' id='LC11774'>&nbsp;&nbsp;var $inject,</div><div class='line' id='LC11775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fnText,</div><div class='line' id='LC11776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argDecl,</div><div class='line' id='LC11777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last;</div><div class='line' id='LC11778'><br/></div><div class='line' id='LC11779'>&nbsp;&nbsp;if (typeof fn == &#39;function&#39;) {</div><div class='line' id='LC11780'>&nbsp;&nbsp;&nbsp;&nbsp;if (!($inject = fn.$inject)) {</div><div class='line' id='LC11781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$inject = [];</div><div class='line' id='LC11782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fnText = fn.toString().replace(STRIP_COMMENTS, &#39;&#39;);</div><div class='line' id='LC11783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argDecl = fnText.match(FN_ARGS);</div><div class='line' id='LC11784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){</div><div class='line' id='LC11785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg.replace(FN_ARG, function(all, underscore, name){</div><div class='line' id='LC11786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$inject.push(name);</div><div class='line' id='LC11787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.$inject = $inject;</div><div class='line' id='LC11790'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11791'>&nbsp;&nbsp;} else if (isArray(fn)) {</div><div class='line' id='LC11792'>&nbsp;&nbsp;&nbsp;&nbsp;last = fn.length - 1;</div><div class='line' id='LC11793'>&nbsp;&nbsp;&nbsp;&nbsp;assertArgFn(fn[last], &#39;fn&#39;);</div><div class='line' id='LC11794'>&nbsp;&nbsp;&nbsp;&nbsp;$inject = fn.slice(0, last);</div><div class='line' id='LC11795'>&nbsp;&nbsp;} else {</div><div class='line' id='LC11796'>&nbsp;&nbsp;&nbsp;&nbsp;assertArgFn(fn, &#39;fn&#39;, true);</div><div class='line' id='LC11797'>&nbsp;&nbsp;}</div><div class='line' id='LC11798'>&nbsp;&nbsp;return $inject;</div><div class='line' id='LC11799'>}</div><div class='line' id='LC11800'><br/></div><div class='line' id='LC11801'>///////////////////////////////////////</div><div class='line' id='LC11802'><br/></div><div class='line' id='LC11803'>/**</div><div class='line' id='LC11804'>&nbsp;* @ngdoc object</div><div class='line' id='LC11805'>&nbsp;* @name AUTO.$injector</div><div class='line' id='LC11806'>&nbsp;* @function</div><div class='line' id='LC11807'>&nbsp;*</div><div class='line' id='LC11808'>&nbsp;* @description</div><div class='line' id='LC11809'>&nbsp;*</div><div class='line' id='LC11810'>&nbsp;* `$injector` is used to retrieve object instances as defined by</div><div class='line' id='LC11811'>&nbsp;* {@link AUTO.$provide provider}, instantiate types, invoke methods,</div><div class='line' id='LC11812'>&nbsp;* and load modules.</div><div class='line' id='LC11813'>&nbsp;*</div><div class='line' id='LC11814'>&nbsp;* The following always holds true:</div><div class='line' id='LC11815'>&nbsp;*</div><div class='line' id='LC11816'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11817'>&nbsp;*   var $injector = angular.injector();</div><div class='line' id='LC11818'>&nbsp;*   expect($injector.get(&#39;$injector&#39;)).toBe($injector);</div><div class='line' id='LC11819'>&nbsp;*   expect($injector.invoke(function($injector){</div><div class='line' id='LC11820'>&nbsp;*     return $injector;</div><div class='line' id='LC11821'>&nbsp;*   }).toBe($injector);</div><div class='line' id='LC11822'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11823'>&nbsp;*</div><div class='line' id='LC11824'>&nbsp;* # Injection Function Annotation</div><div class='line' id='LC11825'>&nbsp;*</div><div class='line' id='LC11826'>&nbsp;* JavaScript does not have annotations, and annotations are needed for dependency injection. The</div><div class='line' id='LC11827'>&nbsp;* following are all valid ways of annotating function with injection arguments and are equivalent.</div><div class='line' id='LC11828'>&nbsp;*</div><div class='line' id='LC11829'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11830'>&nbsp;*   // inferred (only works if code not minified/obfuscated)</div><div class='line' id='LC11831'>&nbsp;*   $injector.invoke(function(serviceA){});</div><div class='line' id='LC11832'>&nbsp;*</div><div class='line' id='LC11833'>&nbsp;*   // annotated</div><div class='line' id='LC11834'>&nbsp;*   function explicit(serviceA) {};</div><div class='line' id='LC11835'>&nbsp;*   explicit.$inject = [&#39;serviceA&#39;];</div><div class='line' id='LC11836'>&nbsp;*   $injector.invoke(explicit);</div><div class='line' id='LC11837'>&nbsp;*</div><div class='line' id='LC11838'>&nbsp;*   // inline</div><div class='line' id='LC11839'>&nbsp;*   $injector.invoke([&#39;serviceA&#39;, function(serviceA){}]);</div><div class='line' id='LC11840'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11841'>&nbsp;*</div><div class='line' id='LC11842'>&nbsp;* ## Inference</div><div class='line' id='LC11843'>&nbsp;*</div><div class='line' id='LC11844'>&nbsp;* In JavaScript calling `toString()` on a function returns the function definition. The definition can then be</div><div class='line' id='LC11845'>&nbsp;* parsed and the function arguments can be extracted. *NOTE:* This does not work with minification, and obfuscation</div><div class='line' id='LC11846'>&nbsp;* tools since these tools change the argument names.</div><div class='line' id='LC11847'>&nbsp;*</div><div class='line' id='LC11848'>&nbsp;* ## `$inject` Annotation</div><div class='line' id='LC11849'>&nbsp;* By adding a `$inject` property onto a function the injection parameters can be specified.</div><div class='line' id='LC11850'>&nbsp;*</div><div class='line' id='LC11851'>&nbsp;* ## Inline</div><div class='line' id='LC11852'>&nbsp;* As an array of injection names, where the last item in the array is the function to call.</div><div class='line' id='LC11853'>&nbsp;*/</div><div class='line' id='LC11854'><br/></div><div class='line' id='LC11855'>/**</div><div class='line' id='LC11856'>&nbsp;* @ngdoc method</div><div class='line' id='LC11857'>&nbsp;* @name AUTO.$injector#get</div><div class='line' id='LC11858'>&nbsp;* @methodOf AUTO.$injector</div><div class='line' id='LC11859'>&nbsp;*</div><div class='line' id='LC11860'>&nbsp;* @description</div><div class='line' id='LC11861'>&nbsp;* Return an instance of the service.</div><div class='line' id='LC11862'>&nbsp;*</div><div class='line' id='LC11863'>&nbsp;* @param {string} name The name of the instance to retrieve.</div><div class='line' id='LC11864'>&nbsp;* @return {*} The instance.</div><div class='line' id='LC11865'>&nbsp;*/</div><div class='line' id='LC11866'><br/></div><div class='line' id='LC11867'>/**</div><div class='line' id='LC11868'>&nbsp;* @ngdoc method</div><div class='line' id='LC11869'>&nbsp;* @name AUTO.$injector#invoke</div><div class='line' id='LC11870'>&nbsp;* @methodOf AUTO.$injector</div><div class='line' id='LC11871'>&nbsp;*</div><div class='line' id='LC11872'>&nbsp;* @description</div><div class='line' id='LC11873'>&nbsp;* Invoke the method and supply the method arguments from the `$injector`.</div><div class='line' id='LC11874'>&nbsp;*</div><div class='line' id='LC11875'>&nbsp;* @param {!function} fn The function to invoke. The function arguments come form the function annotation.</div><div class='line' id='LC11876'>&nbsp;* @param {Object=} self The `this` for the invoked method.</div><div class='line' id='LC11877'>&nbsp;* @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before</div><div class='line' id='LC11878'>&nbsp;*   the `$injector` is consulted.</div><div class='line' id='LC11879'>&nbsp;* @returns {*} the value returned by the invoked `fn` function.</div><div class='line' id='LC11880'>&nbsp;*/</div><div class='line' id='LC11881'><br/></div><div class='line' id='LC11882'>/**</div><div class='line' id='LC11883'>&nbsp;* @ngdoc method</div><div class='line' id='LC11884'>&nbsp;* @name AUTO.$injector#instantiate</div><div class='line' id='LC11885'>&nbsp;* @methodOf AUTO.$injector</div><div class='line' id='LC11886'>&nbsp;* @description</div><div class='line' id='LC11887'>&nbsp;* Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies</div><div class='line' id='LC11888'>&nbsp;* all of the arguments to the constructor function as specified by the constructor annotation.</div><div class='line' id='LC11889'>&nbsp;*</div><div class='line' id='LC11890'>&nbsp;* @param {function} Type Annotated constructor function.</div><div class='line' id='LC11891'>&nbsp;* @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before</div><div class='line' id='LC11892'>&nbsp;*   the `$injector` is consulted.</div><div class='line' id='LC11893'>&nbsp;* @returns {Object} new instance of `Type`.</div><div class='line' id='LC11894'>&nbsp;*/</div><div class='line' id='LC11895'><br/></div><div class='line' id='LC11896'>/**</div><div class='line' id='LC11897'>&nbsp;* @ngdoc method</div><div class='line' id='LC11898'>&nbsp;* @name AUTO.$injector#annotate</div><div class='line' id='LC11899'>&nbsp;* @methodOf AUTO.$injector</div><div class='line' id='LC11900'>&nbsp;*</div><div class='line' id='LC11901'>&nbsp;* @description</div><div class='line' id='LC11902'>&nbsp;* Returns an array of service names which the function is requesting for injection. This API is used by the injector</div><div class='line' id='LC11903'>&nbsp;* to determine which services need to be injected into the function when the function is invoked. There are three</div><div class='line' id='LC11904'>&nbsp;* ways in which the function can be annotated with the needed dependencies.</div><div class='line' id='LC11905'>&nbsp;*</div><div class='line' id='LC11906'>&nbsp;* # Argument names</div><div class='line' id='LC11907'>&nbsp;*</div><div class='line' id='LC11908'>&nbsp;* The simplest form is to extract the dependencies from the arguments of the function. This is done by converting</div><div class='line' id='LC11909'>&nbsp;* the function into a string using `toString()` method and extracting the argument names.</div><div class='line' id='LC11910'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11911'>&nbsp;*   // Given</div><div class='line' id='LC11912'>&nbsp;*   function MyController($scope, $route) {</div><div class='line' id='LC11913'>&nbsp;*     // ...</div><div class='line' id='LC11914'>&nbsp;*   }</div><div class='line' id='LC11915'>&nbsp;*</div><div class='line' id='LC11916'>&nbsp;*   // Then</div><div class='line' id='LC11917'>&nbsp;*   expect(injector.annotate(MyController)).toEqual([&#39;$scope&#39;, &#39;$route&#39;]);</div><div class='line' id='LC11918'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11919'>&nbsp;*</div><div class='line' id='LC11920'>&nbsp;* This method does not work with code minfication / obfuscation. For this reason the following annotation strategies</div><div class='line' id='LC11921'>&nbsp;* are supported.</div><div class='line' id='LC11922'>&nbsp;*</div><div class='line' id='LC11923'>&nbsp;* # The `$inject` property</div><div class='line' id='LC11924'>&nbsp;*</div><div class='line' id='LC11925'>&nbsp;* If a function has an `$inject` property and its value is an array of strings, then the strings represent names of</div><div class='line' id='LC11926'>&nbsp;* services to be injected into the function.</div><div class='line' id='LC11927'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11928'>&nbsp;*   // Given</div><div class='line' id='LC11929'>&nbsp;*   var MyController = function(obfuscatedScope, obfuscatedRoute) {</div><div class='line' id='LC11930'>&nbsp;*     // ...</div><div class='line' id='LC11931'>&nbsp;*   }</div><div class='line' id='LC11932'>&nbsp;*   // Define function dependencies</div><div class='line' id='LC11933'>&nbsp;*   MyController.$inject = [&#39;$scope&#39;, &#39;$route&#39;];</div><div class='line' id='LC11934'>&nbsp;*</div><div class='line' id='LC11935'>&nbsp;*   // Then</div><div class='line' id='LC11936'>&nbsp;*   expect(injector.annotate(MyController)).toEqual([&#39;$scope&#39;, &#39;$route&#39;]);</div><div class='line' id='LC11937'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11938'>&nbsp;*</div><div class='line' id='LC11939'>&nbsp;* # The array notation</div><div class='line' id='LC11940'>&nbsp;*</div><div class='line' id='LC11941'>&nbsp;* It is often desirable to inline Injected functions and that&#39;s when setting the `$inject` property is very</div><div class='line' id='LC11942'>&nbsp;* inconvenient. In these situations using the array notation to specify the dependencies in a way that survives</div><div class='line' id='LC11943'>&nbsp;* minification is a better choice:</div><div class='line' id='LC11944'>&nbsp;*</div><div class='line' id='LC11945'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11946'>&nbsp;*   // We wish to write this (not minification / obfuscation safe)</div><div class='line' id='LC11947'>&nbsp;*   injector.invoke(function($compile, $rootScope) {</div><div class='line' id='LC11948'>&nbsp;*     // ...</div><div class='line' id='LC11949'>&nbsp;*   });</div><div class='line' id='LC11950'>&nbsp;*</div><div class='line' id='LC11951'>&nbsp;*   // We are forced to write break inlining</div><div class='line' id='LC11952'>&nbsp;*   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {</div><div class='line' id='LC11953'>&nbsp;*     // ...</div><div class='line' id='LC11954'>&nbsp;*   };</div><div class='line' id='LC11955'>&nbsp;*   tmpFn.$inject = [&#39;$compile&#39;, &#39;$rootScope&#39;];</div><div class='line' id='LC11956'>&nbsp;*   injector.invoke(tmpFn);</div><div class='line' id='LC11957'>&nbsp;*</div><div class='line' id='LC11958'>&nbsp;*   // To better support inline function the inline annotation is supported</div><div class='line' id='LC11959'>&nbsp;*   injector.invoke([&#39;$compile&#39;, &#39;$rootScope&#39;, function(obfCompile, obfRootScope) {</div><div class='line' id='LC11960'>&nbsp;*     // ...</div><div class='line' id='LC11961'>&nbsp;*   }]);</div><div class='line' id='LC11962'>&nbsp;*</div><div class='line' id='LC11963'>&nbsp;*   // Therefore</div><div class='line' id='LC11964'>&nbsp;*   expect(injector.annotate(</div><div class='line' id='LC11965'>&nbsp;*      [&#39;$compile&#39;, &#39;$rootScope&#39;, function(obfus_$compile, obfus_$rootScope) {}])</div><div class='line' id='LC11966'>&nbsp;*    ).toEqual([&#39;$compile&#39;, &#39;$rootScope&#39;]);</div><div class='line' id='LC11967'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC11968'>&nbsp;*</div><div class='line' id='LC11969'>&nbsp;* @param {function|Array.&lt;string|Function&gt;} fn Function for which dependent service names need to be retrieved as described</div><div class='line' id='LC11970'>&nbsp;*   above.</div><div class='line' id='LC11971'>&nbsp;*</div><div class='line' id='LC11972'>&nbsp;* @returns {Array.&lt;string&gt;} The names of the services which the function requires.</div><div class='line' id='LC11973'>&nbsp;*/</div><div class='line' id='LC11974'><br/></div><div class='line' id='LC11975'><br/></div><div class='line' id='LC11976'><br/></div><div class='line' id='LC11977'><br/></div><div class='line' id='LC11978'>/**</div><div class='line' id='LC11979'>&nbsp;* @ngdoc object</div><div class='line' id='LC11980'>&nbsp;* @name AUTO.$provide</div><div class='line' id='LC11981'>&nbsp;*</div><div class='line' id='LC11982'>&nbsp;* @description</div><div class='line' id='LC11983'>&nbsp;*</div><div class='line' id='LC11984'>&nbsp;* Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.</div><div class='line' id='LC11985'>&nbsp;* The providers share the same name as the instance they create with `Provider` suffixed to them.</div><div class='line' id='LC11986'>&nbsp;*</div><div class='line' id='LC11987'>&nbsp;* A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of</div><div class='line' id='LC11988'>&nbsp;* a service. The Provider can have additional methods which would allow for configuration of the provider.</div><div class='line' id='LC11989'>&nbsp;*</div><div class='line' id='LC11990'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC11991'>&nbsp;*   function GreetProvider() {</div><div class='line' id='LC11992'>&nbsp;*     var salutation = &#39;Hello&#39;;</div><div class='line' id='LC11993'>&nbsp;*</div><div class='line' id='LC11994'>&nbsp;*     this.salutation = function(text) {</div><div class='line' id='LC11995'>&nbsp;*       salutation = text;</div><div class='line' id='LC11996'>&nbsp;*     };</div><div class='line' id='LC11997'>&nbsp;*</div><div class='line' id='LC11998'>&nbsp;*     this.$get = function() {</div><div class='line' id='LC11999'>&nbsp;*       return function (name) {</div><div class='line' id='LC12000'>&nbsp;*         return salutation + &#39; &#39; + name + &#39;!&#39;;</div><div class='line' id='LC12001'>&nbsp;*       };</div><div class='line' id='LC12002'>&nbsp;*     };</div><div class='line' id='LC12003'>&nbsp;*   }</div><div class='line' id='LC12004'>&nbsp;*</div><div class='line' id='LC12005'>&nbsp;*   describe(&#39;Greeter&#39;, function(){</div><div class='line' id='LC12006'>&nbsp;*</div><div class='line' id='LC12007'>&nbsp;*     beforeEach(module(function($provide) {</div><div class='line' id='LC12008'>&nbsp;*       $provide.provider(&#39;greet&#39;, GreetProvider);</div><div class='line' id='LC12009'>&nbsp;*     }));</div><div class='line' id='LC12010'>&nbsp;*</div><div class='line' id='LC12011'>&nbsp;*     it(&#39;should greet&#39;, inject(function(greet) {</div><div class='line' id='LC12012'>&nbsp;*       expect(greet(&#39;angular&#39;)).toEqual(&#39;Hello angular!&#39;);</div><div class='line' id='LC12013'>&nbsp;*     }));</div><div class='line' id='LC12014'>&nbsp;*</div><div class='line' id='LC12015'>&nbsp;*     it(&#39;should allow configuration of salutation&#39;, function() {</div><div class='line' id='LC12016'>&nbsp;*       module(function(greetProvider) {</div><div class='line' id='LC12017'>&nbsp;*         greetProvider.salutation(&#39;Ahoj&#39;);</div><div class='line' id='LC12018'>&nbsp;*       });</div><div class='line' id='LC12019'>&nbsp;*       inject(function(greet) {</div><div class='line' id='LC12020'>&nbsp;*         expect(greet(&#39;angular&#39;)).toEqual(&#39;Ahoj angular!&#39;);</div><div class='line' id='LC12021'>&nbsp;*       });</div><div class='line' id='LC12022'>&nbsp;*     });</div><div class='line' id='LC12023'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC12024'>&nbsp;*/</div><div class='line' id='LC12025'><br/></div><div class='line' id='LC12026'>/**</div><div class='line' id='LC12027'>&nbsp;* @ngdoc method</div><div class='line' id='LC12028'>&nbsp;* @name AUTO.$provide#provider</div><div class='line' id='LC12029'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12030'>&nbsp;* @description</div><div class='line' id='LC12031'>&nbsp;*</div><div class='line' id='LC12032'>&nbsp;* Register a provider for a service. The providers can be retrieved and can have additional configuration methods.</div><div class='line' id='LC12033'>&nbsp;*</div><div class='line' id='LC12034'>&nbsp;* @param {string} name The name of the instance. NOTE: the provider will be available under `name + &#39;Provider&#39;` key.</div><div class='line' id='LC12035'>&nbsp;* @param {(Object|function())} provider If the provider is:</div><div class='line' id='LC12036'>&nbsp;*</div><div class='line' id='LC12037'>&nbsp;*   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using</div><div class='line' id='LC12038'>&nbsp;*               {@link AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.</div><div class='line' id='LC12039'>&nbsp;*   - `Constructor`: a new instance of the provider will be created using</div><div class='line' id='LC12040'>&nbsp;*               {@link AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.</div><div class='line' id='LC12041'>&nbsp;*</div><div class='line' id='LC12042'>&nbsp;* @returns {Object} registered provider instance</div><div class='line' id='LC12043'>&nbsp;*/</div><div class='line' id='LC12044'><br/></div><div class='line' id='LC12045'>/**</div><div class='line' id='LC12046'>&nbsp;* @ngdoc method</div><div class='line' id='LC12047'>&nbsp;* @name AUTO.$provide#factory</div><div class='line' id='LC12048'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12049'>&nbsp;* @description</div><div class='line' id='LC12050'>&nbsp;*</div><div class='line' id='LC12051'>&nbsp;* A short hand for configuring services if only `$get` method is required.</div><div class='line' id='LC12052'>&nbsp;*</div><div class='line' id='LC12053'>&nbsp;* @param {string} name The name of the instance.</div><div class='line' id='LC12054'>&nbsp;* @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for</div><div class='line' id='LC12055'>&nbsp;* `$provide.provider(name, {$get: $getFn})`.</div><div class='line' id='LC12056'>&nbsp;* @returns {Object} registered provider instance</div><div class='line' id='LC12057'>&nbsp;*/</div><div class='line' id='LC12058'><br/></div><div class='line' id='LC12059'><br/></div><div class='line' id='LC12060'>/**</div><div class='line' id='LC12061'>&nbsp;* @ngdoc method</div><div class='line' id='LC12062'>&nbsp;* @name AUTO.$provide#service</div><div class='line' id='LC12063'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12064'>&nbsp;* @description</div><div class='line' id='LC12065'>&nbsp;*</div><div class='line' id='LC12066'>&nbsp;* A short hand for registering service of given class.</div><div class='line' id='LC12067'>&nbsp;*</div><div class='line' id='LC12068'>&nbsp;* @param {string} name The name of the instance.</div><div class='line' id='LC12069'>&nbsp;* @param {Function} constructor A class (constructor function) that will be instantiated.</div><div class='line' id='LC12070'>&nbsp;* @returns {Object} registered provider instance</div><div class='line' id='LC12071'>&nbsp;*/</div><div class='line' id='LC12072'><br/></div><div class='line' id='LC12073'><br/></div><div class='line' id='LC12074'>/**</div><div class='line' id='LC12075'>&nbsp;* @ngdoc method</div><div class='line' id='LC12076'>&nbsp;* @name AUTO.$provide#value</div><div class='line' id='LC12077'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12078'>&nbsp;* @description</div><div class='line' id='LC12079'>&nbsp;*</div><div class='line' id='LC12080'>&nbsp;* A short hand for configuring services if the `$get` method is a constant.</div><div class='line' id='LC12081'>&nbsp;*</div><div class='line' id='LC12082'>&nbsp;* @param {string} name The name of the instance.</div><div class='line' id='LC12083'>&nbsp;* @param {*} value The value.</div><div class='line' id='LC12084'>&nbsp;* @returns {Object} registered provider instance</div><div class='line' id='LC12085'>&nbsp;*/</div><div class='line' id='LC12086'><br/></div><div class='line' id='LC12087'><br/></div><div class='line' id='LC12088'>/**</div><div class='line' id='LC12089'>&nbsp;* @ngdoc method</div><div class='line' id='LC12090'>&nbsp;* @name AUTO.$provide#constant</div><div class='line' id='LC12091'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12092'>&nbsp;* @description</div><div class='line' id='LC12093'>&nbsp;*</div><div class='line' id='LC12094'>&nbsp;* A constant value, but unlike {@link AUTO.$provide#value value} it can be injected</div><div class='line' id='LC12095'>&nbsp;* into configuration function (other modules) and it is not interceptable by</div><div class='line' id='LC12096'>&nbsp;* {@link AUTO.$provide#decorator decorator}.</div><div class='line' id='LC12097'>&nbsp;*</div><div class='line' id='LC12098'>&nbsp;* @param {string} name The name of the constant.</div><div class='line' id='LC12099'>&nbsp;* @param {*} value The constant value.</div><div class='line' id='LC12100'>&nbsp;* @returns {Object} registered instance</div><div class='line' id='LC12101'>&nbsp;*/</div><div class='line' id='LC12102'><br/></div><div class='line' id='LC12103'><br/></div><div class='line' id='LC12104'>/**</div><div class='line' id='LC12105'>&nbsp;* @ngdoc method</div><div class='line' id='LC12106'>&nbsp;* @name AUTO.$provide#decorator</div><div class='line' id='LC12107'>&nbsp;* @methodOf AUTO.$provide</div><div class='line' id='LC12108'>&nbsp;* @description</div><div class='line' id='LC12109'>&nbsp;*</div><div class='line' id='LC12110'>&nbsp;* Decoration of service, allows the decorator to intercept the service instance creation. The</div><div class='line' id='LC12111'>&nbsp;* returned instance may be the original instance, or a new instance which delegates to the</div><div class='line' id='LC12112'>&nbsp;* original instance.</div><div class='line' id='LC12113'>&nbsp;*</div><div class='line' id='LC12114'>&nbsp;* @param {string} name The name of the service to decorate.</div><div class='line' id='LC12115'>&nbsp;* @param {function()} decorator This function will be invoked when the service needs to be</div><div class='line' id='LC12116'>&nbsp;*    instantiated. The function is called using the {@link AUTO.$injector#invoke</div><div class='line' id='LC12117'>&nbsp;*    injector.invoke} method and is therefore fully injectable. Local injection arguments:</div><div class='line' id='LC12118'>&nbsp;*</div><div class='line' id='LC12119'>&nbsp;*    * `$delegate` - The original service instance, which can be monkey patched, configured,</div><div class='line' id='LC12120'>&nbsp;*      decorated or delegated to.</div><div class='line' id='LC12121'>&nbsp;*/</div><div class='line' id='LC12122'><br/></div><div class='line' id='LC12123'><br/></div><div class='line' id='LC12124'>function createInjector(modulesToLoad) {</div><div class='line' id='LC12125'>&nbsp;&nbsp;var INSTANTIATING = {},</div><div class='line' id='LC12126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;providerSuffix = &#39;Provider&#39;,</div><div class='line' id='LC12127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = [],</div><div class='line' id='LC12128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadedModules = new HashMap(),</div><div class='line' id='LC12129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;providerCache = {</div><div class='line' id='LC12130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$provide: {</div><div class='line' id='LC12131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provider: supportObject(provider),</div><div class='line' id='LC12132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory: supportObject(factory),</div><div class='line' id='LC12133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;service: supportObject(service),</div><div class='line' id='LC12134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: supportObject(value),</div><div class='line' id='LC12135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant: supportObject(constant),</div><div class='line' id='LC12136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decorator: decorator</div><div class='line' id='LC12137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;providerInjector = createInternalInjector(providerCache, function() {</div><div class='line' id='LC12140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Unknown provider: &quot; + path.join(&#39; &lt;- &#39;));</div><div class='line' id='LC12141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC12142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instanceCache = {},</div><div class='line' id='LC12143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instanceInjector = (instanceCache.$injector =</div><div class='line' id='LC12144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createInternalInjector(instanceCache, function(servicename) {</div><div class='line' id='LC12145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var provider = providerInjector.get(servicename + providerSuffix);</div><div class='line' id='LC12146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return instanceInjector.invoke(provider.$get, provider);</div><div class='line' id='LC12147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC12148'><br/></div><div class='line' id='LC12149'><br/></div><div class='line' id='LC12150'>&nbsp;&nbsp;forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });</div><div class='line' id='LC12151'><br/></div><div class='line' id='LC12152'>&nbsp;&nbsp;return instanceInjector;</div><div class='line' id='LC12153'><br/></div><div class='line' id='LC12154'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12155'>&nbsp;&nbsp;// $provider</div><div class='line' id='LC12156'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12157'><br/></div><div class='line' id='LC12158'>&nbsp;&nbsp;function supportObject(delegate) {</div><div class='line' id='LC12159'>&nbsp;&nbsp;&nbsp;&nbsp;return function(key, value) {</div><div class='line' id='LC12160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(key)) {</div><div class='line' id='LC12161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(key, reverseParams(delegate));</div><div class='line' id='LC12162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delegate(key, value);</div><div class='line' id='LC12164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12165'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12166'>&nbsp;&nbsp;}</div><div class='line' id='LC12167'><br/></div><div class='line' id='LC12168'>&nbsp;&nbsp;function provider(name, provider_) {</div><div class='line' id='LC12169'>&nbsp;&nbsp;&nbsp;&nbsp;if (isFunction(provider_) || isArray(provider_)) {</div><div class='line' id='LC12170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provider_ = providerInjector.instantiate(provider_);</div><div class='line' id='LC12171'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12172'>&nbsp;&nbsp;&nbsp;&nbsp;if (!provider_.$get) {</div><div class='line' id='LC12173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Provider &#39; + name + &#39; must define $get factory method.&#39;);</div><div class='line' id='LC12174'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12175'>&nbsp;&nbsp;&nbsp;&nbsp;return providerCache[name + providerSuffix] = provider_;</div><div class='line' id='LC12176'>&nbsp;&nbsp;}</div><div class='line' id='LC12177'><br/></div><div class='line' id='LC12178'>&nbsp;&nbsp;function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }</div><div class='line' id='LC12179'><br/></div><div class='line' id='LC12180'>&nbsp;&nbsp;function service(name, constructor) {</div><div class='line' id='LC12181'>&nbsp;&nbsp;&nbsp;&nbsp;return factory(name, [&#39;$injector&#39;, function($injector) {</div><div class='line' id='LC12182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $injector.instantiate(constructor);</div><div class='line' id='LC12183'>&nbsp;&nbsp;&nbsp;&nbsp;}]);</div><div class='line' id='LC12184'>&nbsp;&nbsp;}</div><div class='line' id='LC12185'><br/></div><div class='line' id='LC12186'>&nbsp;&nbsp;function value(name, value) { return factory(name, valueFn(value)); }</div><div class='line' id='LC12187'><br/></div><div class='line' id='LC12188'>&nbsp;&nbsp;function constant(name, value) {</div><div class='line' id='LC12189'>&nbsp;&nbsp;&nbsp;&nbsp;providerCache[name] = value;</div><div class='line' id='LC12190'>&nbsp;&nbsp;&nbsp;&nbsp;instanceCache[name] = value;</div><div class='line' id='LC12191'>&nbsp;&nbsp;}</div><div class='line' id='LC12192'><br/></div><div class='line' id='LC12193'>&nbsp;&nbsp;function decorator(serviceName, decorFn) {</div><div class='line' id='LC12194'>&nbsp;&nbsp;&nbsp;&nbsp;var origProvider = providerInjector.get(serviceName + providerSuffix),</div><div class='line' id='LC12195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;orig$get = origProvider.$get;</div><div class='line' id='LC12196'><br/></div><div class='line' id='LC12197'>&nbsp;&nbsp;&nbsp;&nbsp;origProvider.$get = function() {</div><div class='line' id='LC12198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var origInstance = instanceInjector.invoke(orig$get, origProvider);</div><div class='line' id='LC12199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});</div><div class='line' id='LC12200'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12201'>&nbsp;&nbsp;}</div><div class='line' id='LC12202'><br/></div><div class='line' id='LC12203'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12204'>&nbsp;&nbsp;// Module Loading</div><div class='line' id='LC12205'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12206'>&nbsp;&nbsp;function loadModules(modulesToLoad){</div><div class='line' id='LC12207'>&nbsp;&nbsp;&nbsp;&nbsp;var runBlocks = [];</div><div class='line' id='LC12208'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(modulesToLoad, function(module) {</div><div class='line' id='LC12209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (loadedModules.get(module)) return;</div><div class='line' id='LC12210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadedModules.put(module, true);</div><div class='line' id='LC12211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(module)) {</div><div class='line' id='LC12212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moduleFn = angularModule(module);</div><div class='line' id='LC12213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);</div><div class='line' id='LC12214'><br/></div><div class='line' id='LC12215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i &lt; ii; i++) {</div><div class='line' id='LC12217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var invokeArgs = invokeQueue[i],</div><div class='line' id='LC12218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provider = invokeArgs[0] == &#39;$injector&#39;</div><div class='line' id='LC12219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? providerInjector</div><div class='line' id='LC12220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: providerInjector.get(invokeArgs[0]);</div><div class='line' id='LC12221'><br/></div><div class='line' id='LC12222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provider[invokeArgs[1]].apply(provider, invokeArgs[2]);</div><div class='line' id='LC12223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC12225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.message) e.message += &#39; from &#39; + module;</div><div class='line' id='LC12226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;</div><div class='line' id='LC12227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isFunction(module)) {</div><div class='line' id='LC12229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runBlocks.push(providerInjector.invoke(module));</div><div class='line' id='LC12231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC12232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.message) e.message += &#39; from &#39; + module;</div><div class='line' id='LC12233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;</div><div class='line' id='LC12234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isArray(module)) {</div><div class='line' id='LC12236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runBlocks.push(providerInjector.invoke(module));</div><div class='line' id='LC12238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC12239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.message) e.message += &#39; from &#39; + String(module[module.length - 1]);</div><div class='line' id='LC12240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;</div><div class='line' id='LC12241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertArgFn(module, &#39;module&#39;);</div><div class='line' id='LC12244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12245'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12246'>&nbsp;&nbsp;&nbsp;&nbsp;return runBlocks;</div><div class='line' id='LC12247'>&nbsp;&nbsp;}</div><div class='line' id='LC12248'><br/></div><div class='line' id='LC12249'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12250'>&nbsp;&nbsp;// internal Injector</div><div class='line' id='LC12251'>&nbsp;&nbsp;////////////////////////////////////</div><div class='line' id='LC12252'><br/></div><div class='line' id='LC12253'>&nbsp;&nbsp;function createInternalInjector(cache, factory) {</div><div class='line' id='LC12254'><br/></div><div class='line' id='LC12255'>&nbsp;&nbsp;&nbsp;&nbsp;function getService(serviceName) {</div><div class='line' id='LC12256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof serviceName !== &#39;string&#39;) {</div><div class='line' id='LC12257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Service name expected&#39;);</div><div class='line' id='LC12258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cache.hasOwnProperty(serviceName)) {</div><div class='line' id='LC12260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cache[serviceName] === INSTANTIATING) {</div><div class='line' id='LC12261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Circular dependency: &#39; + path.join(&#39; &lt;- &#39;));</div><div class='line' id='LC12262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cache[serviceName];</div><div class='line' id='LC12264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path.unshift(serviceName);</div><div class='line' id='LC12267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[serviceName] = INSTANTIATING;</div><div class='line' id='LC12268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cache[serviceName] = factory(serviceName);</div><div class='line' id='LC12269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC12270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path.shift();</div><div class='line' id='LC12271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12273'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12274'><br/></div><div class='line' id='LC12275'>&nbsp;&nbsp;&nbsp;&nbsp;function invoke(fn, self, locals){</div><div class='line' id='LC12276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = [],</div><div class='line' id='LC12277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$inject = annotate(fn),</div><div class='line' id='LC12278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length, i,</div><div class='line' id='LC12279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key;</div><div class='line' id='LC12280'><br/></div><div class='line' id='LC12281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i = 0, length = $inject.length; i &lt; length; i++) {</div><div class='line' id='LC12282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = $inject[i];</div><div class='line' id='LC12283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(</div><div class='line' id='LC12284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals &amp;&amp; locals.hasOwnProperty(key)</div><div class='line' id='LC12285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? locals[key]</div><div class='line' id='LC12286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: getService(key)</div><div class='line' id='LC12287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC12288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!fn.$inject) {</div><div class='line' id='LC12290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this means that we must be an array.</div><div class='line' id='LC12291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn = fn[length];</div><div class='line' id='LC12292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12293'><br/></div><div class='line' id='LC12294'><br/></div><div class='line' id='LC12295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke</div><div class='line' id='LC12296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (self ? -1 : args.length) {</div><div class='line' id='LC12297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  0: return fn();</div><div class='line' id='LC12298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  1: return fn(args[0]);</div><div class='line' id='LC12299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  2: return fn(args[0], args[1]);</div><div class='line' id='LC12300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  3: return fn(args[0], args[1], args[2]);</div><div class='line' id='LC12301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  4: return fn(args[0], args[1], args[2], args[3]);</div><div class='line' id='LC12302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  5: return fn(args[0], args[1], args[2], args[3], args[4]);</div><div class='line' id='LC12303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  6: return fn(args[0], args[1], args[2], args[3], args[4], args[5]);</div><div class='line' id='LC12304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  7: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);</div><div class='line' id='LC12305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  8: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);</div><div class='line' id='LC12306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case  9: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);</div><div class='line' id='LC12307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 10: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);</div><div class='line' id='LC12308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: return fn.apply(self, args);</div><div class='line' id='LC12309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12310'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12311'><br/></div><div class='line' id='LC12312'>&nbsp;&nbsp;&nbsp;&nbsp;function instantiate(Type, locals) {</div><div class='line' id='LC12313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var Constructor = function() {},</div><div class='line' id='LC12314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance, returnedValue;</div><div class='line' id='LC12315'><br/></div><div class='line' id='LC12316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Check if Type is annotated and use just the given function at n-1 as parameter</div><div class='line' id='LC12317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// e.g. someModule.factory(&#39;greeter&#39;, [&#39;$window&#39;, function(renamed$window) {}]);</div><div class='line' id='LC12318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;</div><div class='line' id='LC12319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance = new Constructor();</div><div class='line' id='LC12320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnedValue = invoke(Type, instance, locals);</div><div class='line' id='LC12321'><br/></div><div class='line' id='LC12322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return isObject(returnedValue) ? returnedValue : instance;</div><div class='line' id='LC12323'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12324'><br/></div><div class='line' id='LC12325'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC12326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invoke: invoke,</div><div class='line' id='LC12327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instantiate: instantiate,</div><div class='line' id='LC12328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: getService,</div><div class='line' id='LC12329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;annotate: annotate</div><div class='line' id='LC12330'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12331'>&nbsp;&nbsp;}</div><div class='line' id='LC12332'>}</div><div class='line' id='LC12333'><br/></div><div class='line' id='LC12334'>/**</div><div class='line' id='LC12335'>&nbsp;* @ngdoc function</div><div class='line' id='LC12336'>&nbsp;* @name ng.$anchorScroll</div><div class='line' id='LC12337'>&nbsp;* @requires $window</div><div class='line' id='LC12338'>&nbsp;* @requires $location</div><div class='line' id='LC12339'>&nbsp;* @requires $rootScope</div><div class='line' id='LC12340'>&nbsp;*</div><div class='line' id='LC12341'>&nbsp;* @description</div><div class='line' id='LC12342'>&nbsp;* When called, it checks current value of `$location.hash()` and scroll to related element,</div><div class='line' id='LC12343'>&nbsp;* according to rules specified in</div><div class='line' id='LC12344'>&nbsp;* {@link http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document Html5 spec}.</div><div class='line' id='LC12345'>&nbsp;*</div><div class='line' id='LC12346'>&nbsp;* It also watches the `$location.hash()` and scroll whenever it changes to match any anchor.</div><div class='line' id='LC12347'>&nbsp;* This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.</div><div class='line' id='LC12348'>&nbsp;*/</div><div class='line' id='LC12349'>function $AnchorScrollProvider() {</div><div class='line' id='LC12350'><br/></div><div class='line' id='LC12351'>&nbsp;&nbsp;var autoScrollingEnabled = true;</div><div class='line' id='LC12352'><br/></div><div class='line' id='LC12353'>&nbsp;&nbsp;this.disableAutoScrolling = function() {</div><div class='line' id='LC12354'>&nbsp;&nbsp;&nbsp;&nbsp;autoScrollingEnabled = false;</div><div class='line' id='LC12355'>&nbsp;&nbsp;};</div><div class='line' id='LC12356'><br/></div><div class='line' id='LC12357'>&nbsp;&nbsp;this.$get = [&#39;$window&#39;, &#39;$location&#39;, &#39;$rootScope&#39;, function($window, $location, $rootScope) {</div><div class='line' id='LC12358'>&nbsp;&nbsp;&nbsp;&nbsp;var document = $window.document;</div><div class='line' id='LC12359'><br/></div><div class='line' id='LC12360'>&nbsp;&nbsp;&nbsp;&nbsp;// helper function to get first anchor from a NodeList</div><div class='line' id='LC12361'>&nbsp;&nbsp;&nbsp;&nbsp;// can&#39;t use filter.filter, as it accepts only instances of Array</div><div class='line' id='LC12362'>&nbsp;&nbsp;&nbsp;&nbsp;// and IE can&#39;t convert NodeList to an array using [].slice</div><div class='line' id='LC12363'>&nbsp;&nbsp;&nbsp;&nbsp;// TODO(vojta): use filter if we change it to accept lists as well</div><div class='line' id='LC12364'>&nbsp;&nbsp;&nbsp;&nbsp;function getFirstAnchor(list) {</div><div class='line' id='LC12365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = null;</div><div class='line' id='LC12366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(list, function(element) {</div><div class='line' id='LC12367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result &amp;&amp; lowercase(element.nodeName) === &#39;a&#39;) result = element;</div><div class='line' id='LC12368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC12370'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12371'><br/></div><div class='line' id='LC12372'>&nbsp;&nbsp;&nbsp;&nbsp;function scroll() {</div><div class='line' id='LC12373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hash = $location.hash(), elm;</div><div class='line' id='LC12374'><br/></div><div class='line' id='LC12375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// empty hash, scroll to the top of the page</div><div class='line' id='LC12376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!hash) $window.scrollTo(0, 0);</div><div class='line' id='LC12377'><br/></div><div class='line' id='LC12378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// element with given id</div><div class='line' id='LC12379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if ((elm = document.getElementById(hash))) elm.scrollIntoView();</div><div class='line' id='LC12380'><br/></div><div class='line' id='LC12381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// first anchor with given name :-D</div><div class='line' id='LC12382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();</div><div class='line' id='LC12383'><br/></div><div class='line' id='LC12384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no element and hash == &#39;top&#39;, scroll to the top of the page</div><div class='line' id='LC12385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (hash === &#39;top&#39;) $window.scrollTo(0, 0);</div><div class='line' id='LC12386'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12387'><br/></div><div class='line' id='LC12388'>&nbsp;&nbsp;&nbsp;&nbsp;// does not scroll when user clicks on anchor link that is currently on</div><div class='line' id='LC12389'>&nbsp;&nbsp;&nbsp;&nbsp;// (no url change, no $location.hash() change), browser native does scroll</div><div class='line' id='LC12390'>&nbsp;&nbsp;&nbsp;&nbsp;if (autoScrollingEnabled) {</div><div class='line' id='LC12391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$watch(function autoScrollWatch() {return $location.hash();},</div><div class='line' id='LC12392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function autoScrollWatchAction() {</div><div class='line' id='LC12393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(scroll);</div><div class='line' id='LC12394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12395'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12396'><br/></div><div class='line' id='LC12397'>&nbsp;&nbsp;&nbsp;&nbsp;return scroll;</div><div class='line' id='LC12398'>&nbsp;&nbsp;}];</div><div class='line' id='LC12399'>}</div><div class='line' id='LC12400'><br/></div><div class='line' id='LC12401'>/**</div><div class='line' id='LC12402'>&nbsp;* ! This is a private undocumented service !</div><div class='line' id='LC12403'>&nbsp;*</div><div class='line' id='LC12404'>&nbsp;* @name ng.$browser</div><div class='line' id='LC12405'>&nbsp;* @requires $log</div><div class='line' id='LC12406'>&nbsp;* @description</div><div class='line' id='LC12407'>&nbsp;* This object has two goals:</div><div class='line' id='LC12408'>&nbsp;*</div><div class='line' id='LC12409'>&nbsp;* - hide all the global state in the browser caused by the window object</div><div class='line' id='LC12410'>&nbsp;* - abstract away all the browser specific features and inconsistencies</div><div class='line' id='LC12411'>&nbsp;*</div><div class='line' id='LC12412'>&nbsp;* For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`</div><div class='line' id='LC12413'>&nbsp;* service, which can be used for convenient testing of the application without the interaction with</div><div class='line' id='LC12414'>&nbsp;* the real browser apis.</div><div class='line' id='LC12415'>&nbsp;*/</div><div class='line' id='LC12416'>/**</div><div class='line' id='LC12417'>&nbsp;* @param {object} window The global window object.</div><div class='line' id='LC12418'>&nbsp;* @param {object} document jQuery wrapped document.</div><div class='line' id='LC12419'>&nbsp;* @param {function()} XHR XMLHttpRequest constructor.</div><div class='line' id='LC12420'>&nbsp;* @param {object} $log console.log or an object with the same interface.</div><div class='line' id='LC12421'>&nbsp;* @param {object} $sniffer $sniffer service</div><div class='line' id='LC12422'>&nbsp;*/</div><div class='line' id='LC12423'>function Browser(window, document, $log, $sniffer) {</div><div class='line' id='LC12424'>&nbsp;&nbsp;var self = this,</div><div class='line' id='LC12425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rawDocument = document[0],</div><div class='line' id='LC12426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location = window.location,</div><div class='line' id='LC12427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;history = window.history,</div><div class='line' id='LC12428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout = window.setTimeout,</div><div class='line' id='LC12429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearTimeout = window.clearTimeout,</div><div class='line' id='LC12430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pendingDeferIds = {};</div><div class='line' id='LC12431'><br/></div><div class='line' id='LC12432'>&nbsp;&nbsp;self.isMock = false;</div><div class='line' id='LC12433'><br/></div><div class='line' id='LC12434'>&nbsp;&nbsp;var outstandingRequestCount = 0;</div><div class='line' id='LC12435'>&nbsp;&nbsp;var outstandingRequestCallbacks = [];</div><div class='line' id='LC12436'><br/></div><div class='line' id='LC12437'>&nbsp;&nbsp;// TODO(vojta): remove this temporary api</div><div class='line' id='LC12438'>&nbsp;&nbsp;self.$$completeOutstandingRequest = completeOutstandingRequest;</div><div class='line' id='LC12439'>&nbsp;&nbsp;self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };</div><div class='line' id='LC12440'><br/></div><div class='line' id='LC12441'>&nbsp;&nbsp;/**</div><div class='line' id='LC12442'>&nbsp;&nbsp;&nbsp;* Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`</div><div class='line' id='LC12443'>&nbsp;&nbsp;&nbsp;* counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.</div><div class='line' id='LC12444'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12445'>&nbsp;&nbsp;function completeOutstandingRequest(fn) {</div><div class='line' id='LC12446'>&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.apply(null, sliceArgs(arguments, 1));</div><div class='line' id='LC12448'>&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC12449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outstandingRequestCount--;</div><div class='line' id='LC12450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (outstandingRequestCount === 0) {</div><div class='line' id='LC12451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(outstandingRequestCallbacks.length) {</div><div class='line' id='LC12452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC12453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outstandingRequestCallbacks.pop()();</div><div class='line' id='LC12454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC12455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log.error(e);</div><div class='line' id='LC12456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12459'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12460'>&nbsp;&nbsp;}</div><div class='line' id='LC12461'><br/></div><div class='line' id='LC12462'>&nbsp;&nbsp;/**</div><div class='line' id='LC12463'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC12464'>&nbsp;&nbsp;&nbsp;* Note: this method is used only by scenario runner</div><div class='line' id='LC12465'>&nbsp;&nbsp;&nbsp;* TODO(vojta): prefix this method with $$ ?</div><div class='line' id='LC12466'>&nbsp;&nbsp;&nbsp;* @param {function()} callback Function that will be called when no outstanding request</div><div class='line' id='LC12467'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12468'>&nbsp;&nbsp;self.notifyWhenNoOutstandingRequests = function(callback) {</div><div class='line' id='LC12469'>&nbsp;&nbsp;&nbsp;&nbsp;// force browser to execute all pollFns - this is needed so that cookies and other pollers fire</div><div class='line' id='LC12470'>&nbsp;&nbsp;&nbsp;&nbsp;// at some deterministic time in respect to the test runner&#39;s actions. Leaving things up to the</div><div class='line' id='LC12471'>&nbsp;&nbsp;&nbsp;&nbsp;// regular poller would result in flaky tests.</div><div class='line' id='LC12472'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(pollFns, function(pollFn){ pollFn(); });</div><div class='line' id='LC12473'><br/></div><div class='line' id='LC12474'>&nbsp;&nbsp;&nbsp;&nbsp;if (outstandingRequestCount === 0) {</div><div class='line' id='LC12475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback();</div><div class='line' id='LC12476'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outstandingRequestCallbacks.push(callback);</div><div class='line' id='LC12478'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12479'>&nbsp;&nbsp;};</div><div class='line' id='LC12480'><br/></div><div class='line' id='LC12481'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12482'>&nbsp;&nbsp;// Poll Watcher API</div><div class='line' id='LC12483'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12484'>&nbsp;&nbsp;var pollFns = [],</div><div class='line' id='LC12485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pollTimeout;</div><div class='line' id='LC12486'><br/></div><div class='line' id='LC12487'>&nbsp;&nbsp;/**</div><div class='line' id='LC12488'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#addPollFn</div><div class='line' id='LC12489'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser</div><div class='line' id='LC12490'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12491'>&nbsp;&nbsp;&nbsp;* @param {function()} fn Poll function to add</div><div class='line' id='LC12492'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12493'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12494'>&nbsp;&nbsp;&nbsp;* Adds a function to the list of functions that poller periodically executes,</div><div class='line' id='LC12495'>&nbsp;&nbsp;&nbsp;* and starts polling if not started yet.</div><div class='line' id='LC12496'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12497'>&nbsp;&nbsp;&nbsp;* @returns {function()} the added function</div><div class='line' id='LC12498'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12499'>&nbsp;&nbsp;self.addPollFn = function(fn) {</div><div class='line' id='LC12500'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(pollTimeout)) startPoller(100, setTimeout);</div><div class='line' id='LC12501'>&nbsp;&nbsp;&nbsp;&nbsp;pollFns.push(fn);</div><div class='line' id='LC12502'>&nbsp;&nbsp;&nbsp;&nbsp;return fn;</div><div class='line' id='LC12503'>&nbsp;&nbsp;};</div><div class='line' id='LC12504'><br/></div><div class='line' id='LC12505'>&nbsp;&nbsp;/**</div><div class='line' id='LC12506'>&nbsp;&nbsp;&nbsp;* @param {number} interval How often should browser call poll functions (ms)</div><div class='line' id='LC12507'>&nbsp;&nbsp;&nbsp;* @param {function()} setTimeout Reference to a real or fake `setTimeout` function.</div><div class='line' id='LC12508'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12509'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12510'>&nbsp;&nbsp;&nbsp;* Configures the poller to run in the specified intervals, using the specified</div><div class='line' id='LC12511'>&nbsp;&nbsp;&nbsp;* setTimeout fn and kicks it off.</div><div class='line' id='LC12512'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12513'>&nbsp;&nbsp;function startPoller(interval, setTimeout) {</div><div class='line' id='LC12514'>&nbsp;&nbsp;&nbsp;&nbsp;(function check() {</div><div class='line' id='LC12515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(pollFns, function(pollFn){ pollFn(); });</div><div class='line' id='LC12516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pollTimeout = setTimeout(check, interval);</div><div class='line' id='LC12517'>&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC12518'>&nbsp;&nbsp;}</div><div class='line' id='LC12519'><br/></div><div class='line' id='LC12520'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12521'>&nbsp;&nbsp;// URL API</div><div class='line' id='LC12522'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12523'><br/></div><div class='line' id='LC12524'>&nbsp;&nbsp;var lastBrowserUrl = location.href,</div><div class='line' id='LC12525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baseElement = document.find(&#39;base&#39;);</div><div class='line' id='LC12526'><br/></div><div class='line' id='LC12527'>&nbsp;&nbsp;/**</div><div class='line' id='LC12528'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#url</div><div class='line' id='LC12529'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser</div><div class='line' id='LC12530'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12531'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12532'>&nbsp;&nbsp;&nbsp;* GETTER:</div><div class='line' id='LC12533'>&nbsp;&nbsp;&nbsp;* Without any argument, this method just returns current value of location.href.</div><div class='line' id='LC12534'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12535'>&nbsp;&nbsp;&nbsp;* SETTER:</div><div class='line' id='LC12536'>&nbsp;&nbsp;&nbsp;* With at least one argument, this method sets url to new value.</div><div class='line' id='LC12537'>&nbsp;&nbsp;&nbsp;* If html5 history api supported, pushState/replaceState is used, otherwise</div><div class='line' id='LC12538'>&nbsp;&nbsp;&nbsp;* location.href/location.replace is used.</div><div class='line' id='LC12539'>&nbsp;&nbsp;&nbsp;* Returns its own instance to allow chaining</div><div class='line' id='LC12540'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12541'>&nbsp;&nbsp;&nbsp;* NOTE: this api is intended for use only by the $location service. Please use the</div><div class='line' id='LC12542'>&nbsp;&nbsp;&nbsp;* {@link ng.$location $location service} to change url.</div><div class='line' id='LC12543'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12544'>&nbsp;&nbsp;&nbsp;* @param {string} url New url (when used as setter)</div><div class='line' id='LC12545'>&nbsp;&nbsp;&nbsp;* @param {boolean=} replace Should new url replace current history record ?</div><div class='line' id='LC12546'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12547'>&nbsp;&nbsp;self.url = function(url, replace) {</div><div class='line' id='LC12548'>&nbsp;&nbsp;&nbsp;&nbsp;// setter</div><div class='line' id='LC12549'>&nbsp;&nbsp;&nbsp;&nbsp;if (url) {</div><div class='line' id='LC12550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastBrowserUrl == url) return;</div><div class='line' id='LC12551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastBrowserUrl = url;</div><div class='line' id='LC12552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($sniffer.history) {</div><div class='line' id='LC12553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (replace) history.replaceState(null, &#39;&#39;, url);</div><div class='line' id='LC12554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else {</div><div class='line' id='LC12555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;history.pushState(null, &#39;&#39;, url);</div><div class='line' id='LC12556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462</div><div class='line' id='LC12557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baseElement.attr(&#39;href&#39;, baseElement.attr(&#39;href&#39;));</div><div class='line' id='LC12558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (replace) location.replace(url);</div><div class='line' id='LC12561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else location.href = url;</div><div class='line' id='LC12562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self;</div><div class='line' id='LC12564'>&nbsp;&nbsp;&nbsp;&nbsp;// getter</div><div class='line' id='LC12565'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172</div><div class='line' id='LC12567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return location.href.replace(/%27/g,&quot;&#39;&quot;);</div><div class='line' id='LC12568'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12569'>&nbsp;&nbsp;};</div><div class='line' id='LC12570'><br/></div><div class='line' id='LC12571'>&nbsp;&nbsp;var urlChangeListeners = [],</div><div class='line' id='LC12572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlChangeInit = false;</div><div class='line' id='LC12573'><br/></div><div class='line' id='LC12574'>&nbsp;&nbsp;function fireUrlChange() {</div><div class='line' id='LC12575'>&nbsp;&nbsp;&nbsp;&nbsp;if (lastBrowserUrl == self.url()) return;</div><div class='line' id='LC12576'><br/></div><div class='line' id='LC12577'>&nbsp;&nbsp;&nbsp;&nbsp;lastBrowserUrl = self.url();</div><div class='line' id='LC12578'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(urlChangeListeners, function(listener) {</div><div class='line' id='LC12579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listener(self.url());</div><div class='line' id='LC12580'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12581'>&nbsp;&nbsp;}</div><div class='line' id='LC12582'><br/></div><div class='line' id='LC12583'>&nbsp;&nbsp;/**</div><div class='line' id='LC12584'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#onUrlChange</div><div class='line' id='LC12585'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser</div><div class='line' id='LC12586'>&nbsp;&nbsp;&nbsp;* @TODO(vojta): refactor to use node&#39;s syntax for events</div><div class='line' id='LC12587'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12588'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12589'>&nbsp;&nbsp;&nbsp;* Register callback function that will be called, when url changes.</div><div class='line' id='LC12590'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12591'>&nbsp;&nbsp;&nbsp;* It&#39;s only called when the url is changed by outside of angular:</div><div class='line' id='LC12592'>&nbsp;&nbsp;&nbsp;* - user types different url into address bar</div><div class='line' id='LC12593'>&nbsp;&nbsp;&nbsp;* - user clicks on history (forward/back) button</div><div class='line' id='LC12594'>&nbsp;&nbsp;&nbsp;* - user clicks on a link</div><div class='line' id='LC12595'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12596'>&nbsp;&nbsp;&nbsp;* It&#39;s not called when url is changed by $browser.url() method</div><div class='line' id='LC12597'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12598'>&nbsp;&nbsp;&nbsp;* The listener gets called with new url as parameter.</div><div class='line' id='LC12599'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12600'>&nbsp;&nbsp;&nbsp;* NOTE: this api is intended for use only by the $location service. Please use the</div><div class='line' id='LC12601'>&nbsp;&nbsp;&nbsp;* {@link ng.$location $location service} to monitor url changes in angular apps.</div><div class='line' id='LC12602'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12603'>&nbsp;&nbsp;&nbsp;* @param {function(string)} listener Listener function to be called when url changes.</div><div class='line' id='LC12604'>&nbsp;&nbsp;&nbsp;* @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.</div><div class='line' id='LC12605'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12606'>&nbsp;&nbsp;self.onUrlChange = function(callback) {</div><div class='line' id='LC12607'>&nbsp;&nbsp;&nbsp;&nbsp;if (!urlChangeInit) {</div><div class='line' id='LC12608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)</div><div class='line' id='LC12609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// don&#39;t fire popstate when user change the address bar and don&#39;t fire hashchange when url</div><div class='line' id='LC12610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// changed by push/replaceState</div><div class='line' id='LC12611'><br/></div><div class='line' id='LC12612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// html5 history api - popstate event</div><div class='line' id='LC12613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($sniffer.history) jqLite(window).bind(&#39;popstate&#39;, fireUrlChange);</div><div class='line' id='LC12614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// hashchange event</div><div class='line' id='LC12615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($sniffer.hashchange) jqLite(window).bind(&#39;hashchange&#39;, fireUrlChange);</div><div class='line' id='LC12616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// polling</div><div class='line' id='LC12617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else self.addPollFn(fireUrlChange);</div><div class='line' id='LC12618'><br/></div><div class='line' id='LC12619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlChangeInit = true;</div><div class='line' id='LC12620'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12621'><br/></div><div class='line' id='LC12622'>&nbsp;&nbsp;&nbsp;&nbsp;urlChangeListeners.push(callback);</div><div class='line' id='LC12623'>&nbsp;&nbsp;&nbsp;&nbsp;return callback;</div><div class='line' id='LC12624'>&nbsp;&nbsp;};</div><div class='line' id='LC12625'><br/></div><div class='line' id='LC12626'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12627'>&nbsp;&nbsp;// Misc API</div><div class='line' id='LC12628'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12629'><br/></div><div class='line' id='LC12630'>&nbsp;&nbsp;/**</div><div class='line' id='LC12631'>&nbsp;&nbsp;&nbsp;* Returns current &lt;base href&gt;</div><div class='line' id='LC12632'>&nbsp;&nbsp;&nbsp;* (always relative - without domain)</div><div class='line' id='LC12633'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12634'>&nbsp;&nbsp;&nbsp;* @returns {string=}</div><div class='line' id='LC12635'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12636'>&nbsp;&nbsp;self.baseHref = function() {</div><div class='line' id='LC12637'>&nbsp;&nbsp;&nbsp;&nbsp;var href = baseElement.attr(&#39;href&#39;);</div><div class='line' id='LC12638'>&nbsp;&nbsp;&nbsp;&nbsp;return href ? href.replace(/^https?\:\/\/[^\/]*/, &#39;&#39;) : &#39;&#39;;</div><div class='line' id='LC12639'>&nbsp;&nbsp;};</div><div class='line' id='LC12640'><br/></div><div class='line' id='LC12641'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12642'>&nbsp;&nbsp;// Cookies API</div><div class='line' id='LC12643'>&nbsp;&nbsp;//////////////////////////////////////////////////////////////</div><div class='line' id='LC12644'>&nbsp;&nbsp;var lastCookies = {};</div><div class='line' id='LC12645'>&nbsp;&nbsp;var lastCookieString = &#39;&#39;;</div><div class='line' id='LC12646'>&nbsp;&nbsp;var cookiePath = self.baseHref();</div><div class='line' id='LC12647'><br/></div><div class='line' id='LC12648'>&nbsp;&nbsp;/**</div><div class='line' id='LC12649'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#cookies</div><div class='line' id='LC12650'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser</div><div class='line' id='LC12651'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12652'>&nbsp;&nbsp;&nbsp;* @param {string=} name Cookie name</div><div class='line' id='LC12653'>&nbsp;&nbsp;&nbsp;* @param {string=} value Cokkie value</div><div class='line' id='LC12654'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12655'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12656'>&nbsp;&nbsp;&nbsp;* The cookies method provides a &#39;private&#39; low level access to browser cookies.</div><div class='line' id='LC12657'>&nbsp;&nbsp;&nbsp;* It is not meant to be used directly, use the $cookie service instead.</div><div class='line' id='LC12658'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12659'>&nbsp;&nbsp;&nbsp;* The return values vary depending on the arguments that the method was called with as follows:</div><div class='line' id='LC12660'>&nbsp;&nbsp;&nbsp;* &lt;ul&gt;</div><div class='line' id='LC12661'>&nbsp;&nbsp;&nbsp;*   &lt;li&gt;cookies() -&gt; hash of all cookies, this is NOT a copy of the internal state, so do not modify it&lt;/li&gt;</div><div class='line' id='LC12662'>&nbsp;&nbsp;&nbsp;*   &lt;li&gt;cookies(name, value) -&gt; set name to value, if value is undefined delete the cookie&lt;/li&gt;</div><div class='line' id='LC12663'>&nbsp;&nbsp;&nbsp;*   &lt;li&gt;cookies(name) -&gt; the same as (name, undefined) == DELETES (no one calls it right now that way)&lt;/li&gt;</div><div class='line' id='LC12664'>&nbsp;&nbsp;&nbsp;* &lt;/ul&gt;</div><div class='line' id='LC12665'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12666'>&nbsp;&nbsp;&nbsp;* @returns {Object} Hash of all cookies (if called without any parameter)</div><div class='line' id='LC12667'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12668'>&nbsp;&nbsp;self.cookies = function(name, value) {</div><div class='line' id='LC12669'>&nbsp;&nbsp;&nbsp;&nbsp;var cookieLength, cookieArray, cookie, i, index;</div><div class='line' id='LC12670'><br/></div><div class='line' id='LC12671'>&nbsp;&nbsp;&nbsp;&nbsp;if (name) {</div><div class='line' id='LC12672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value === undefined) {</div><div class='line' id='LC12673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rawDocument.cookie = escape(name) + &quot;=;path=&quot; + cookiePath + &quot;;expires=Thu, 01 Jan 1970 00:00:00 GMT&quot;;</div><div class='line' id='LC12674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(value)) {</div><div class='line' id='LC12676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cookieLength = (rawDocument.cookie = escape(name) + &#39;=&#39; + escape(value) + &#39;;path=&#39; + cookiePath).length + 1;</div><div class='line' id='LC12677'><br/></div><div class='line' id='LC12678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:</div><div class='line' id='LC12679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - 300 cookies</div><div class='line' id='LC12680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - 20 cookies per unique domain</div><div class='line' id='LC12681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - 4096 bytes per cookie</div><div class='line' id='LC12682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cookieLength &gt; 4096) {</div><div class='line' id='LC12683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log.warn(&quot;Cookie &#39;&quot;+ name +&quot;&#39; possibly not set or overflowed because it was too large (&quot;+</div><div class='line' id='LC12684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cookieLength + &quot; &gt; 4096 bytes)!&quot;);</div><div class='line' id='LC12685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12688'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rawDocument.cookie !== lastCookieString) {</div><div class='line' id='LC12690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastCookieString = rawDocument.cookie;</div><div class='line' id='LC12691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cookieArray = lastCookieString.split(&quot;; &quot;);</div><div class='line' id='LC12692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastCookies = {};</div><div class='line' id='LC12693'><br/></div><div class='line' id='LC12694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; cookieArray.length; i++) {</div><div class='line' id='LC12695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cookie = cookieArray[i];</div><div class='line' id='LC12696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = cookie.indexOf(&#39;=&#39;);</div><div class='line' id='LC12697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index &gt; 0) { //ignore nameless cookies</div><div class='line' id='LC12698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name = unescape(cookie.substring(0, index));</div><div class='line' id='LC12699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the first value that is seen for a cookie is the most</div><div class='line' id='LC12700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// specific one.  values for the same cookie name that</div><div class='line' id='LC12701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// follow are for less specific paths.</div><div class='line' id='LC12702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastCookies[name] === undefined) {</div><div class='line' id='LC12703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastCookies[name] = unescape(cookie.substring(index + 1));</div><div class='line' id='LC12704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return lastCookies;</div><div class='line' id='LC12709'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12710'>&nbsp;&nbsp;};</div><div class='line' id='LC12711'><br/></div><div class='line' id='LC12712'><br/></div><div class='line' id='LC12713'>&nbsp;&nbsp;/**</div><div class='line' id='LC12714'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#defer</div><div class='line' id='LC12715'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser</div><div class='line' id='LC12716'>&nbsp;&nbsp;&nbsp;* @param {function()} fn A function, who&#39;s execution should be defered.</div><div class='line' id='LC12717'>&nbsp;&nbsp;&nbsp;* @param {number=} [delay=0] of milliseconds to defer the function execution.</div><div class='line' id='LC12718'>&nbsp;&nbsp;&nbsp;* @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.</div><div class='line' id='LC12719'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12720'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12721'>&nbsp;&nbsp;&nbsp;* Executes a fn asynchroniously via `setTimeout(fn, delay)`.</div><div class='line' id='LC12722'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12723'>&nbsp;&nbsp;&nbsp;* Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using</div><div class='line' id='LC12724'>&nbsp;&nbsp;&nbsp;* `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed</div><div class='line' id='LC12725'>&nbsp;&nbsp;&nbsp;* via `$browser.defer.flush()`.</div><div class='line' id='LC12726'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12727'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12728'>&nbsp;&nbsp;self.defer = function(fn, delay) {</div><div class='line' id='LC12729'>&nbsp;&nbsp;&nbsp;&nbsp;var timeoutId;</div><div class='line' id='LC12730'>&nbsp;&nbsp;&nbsp;&nbsp;outstandingRequestCount++;</div><div class='line' id='LC12731'>&nbsp;&nbsp;&nbsp;&nbsp;timeoutId = setTimeout(function() {</div><div class='line' id='LC12732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete pendingDeferIds[timeoutId];</div><div class='line' id='LC12733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeOutstandingRequest(fn);</div><div class='line' id='LC12734'>&nbsp;&nbsp;&nbsp;&nbsp;}, delay || 0);</div><div class='line' id='LC12735'>&nbsp;&nbsp;&nbsp;&nbsp;pendingDeferIds[timeoutId] = true;</div><div class='line' id='LC12736'>&nbsp;&nbsp;&nbsp;&nbsp;return timeoutId;</div><div class='line' id='LC12737'>&nbsp;&nbsp;};</div><div class='line' id='LC12738'><br/></div><div class='line' id='LC12739'><br/></div><div class='line' id='LC12740'>&nbsp;&nbsp;/**</div><div class='line' id='LC12741'>&nbsp;&nbsp;&nbsp;* @name ng.$browser#defer.cancel</div><div class='line' id='LC12742'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$browser.defer</div><div class='line' id='LC12743'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12744'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC12745'>&nbsp;&nbsp;&nbsp;* Cancels a defered task identified with `deferId`.</div><div class='line' id='LC12746'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC12747'>&nbsp;&nbsp;&nbsp;* @param {*} deferId Token returned by the `$browser.defer` function.</div><div class='line' id='LC12748'>&nbsp;&nbsp;&nbsp;* @returns {boolean} Returns `true` if the task hasn&#39;t executed yet and was successfuly canceled.</div><div class='line' id='LC12749'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12750'>&nbsp;&nbsp;self.defer.cancel = function(deferId) {</div><div class='line' id='LC12751'>&nbsp;&nbsp;&nbsp;&nbsp;if (pendingDeferIds[deferId]) {</div><div class='line' id='LC12752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete pendingDeferIds[deferId];</div><div class='line' id='LC12753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearTimeout(deferId);</div><div class='line' id='LC12754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeOutstandingRequest(noop);</div><div class='line' id='LC12755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC12756'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12757'>&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC12758'>&nbsp;&nbsp;};</div><div class='line' id='LC12759'><br/></div><div class='line' id='LC12760'>}</div><div class='line' id='LC12761'><br/></div><div class='line' id='LC12762'>function $BrowserProvider(){</div><div class='line' id='LC12763'>&nbsp;&nbsp;this.$get = [&#39;$window&#39;, &#39;$log&#39;, &#39;$sniffer&#39;, &#39;$document&#39;,</div><div class='line' id='LC12764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( $window,   $log,   $sniffer,   $document){</div><div class='line' id='LC12765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Browser($window, $document, $log, $sniffer);</div><div class='line' id='LC12766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}];</div><div class='line' id='LC12767'>}</div><div class='line' id='LC12768'><br/></div><div class='line' id='LC12769'>/**</div><div class='line' id='LC12770'>&nbsp;* @ngdoc object</div><div class='line' id='LC12771'>&nbsp;* @name ng.$cacheFactory</div><div class='line' id='LC12772'>&nbsp;*</div><div class='line' id='LC12773'>&nbsp;* @description</div><div class='line' id='LC12774'>&nbsp;* Factory that constructs cache objects.</div><div class='line' id='LC12775'>&nbsp;*</div><div class='line' id='LC12776'>&nbsp;*</div><div class='line' id='LC12777'>&nbsp;* @param {string} cacheId Name or id of the newly created cache.</div><div class='line' id='LC12778'>&nbsp;* @param {object=} options Options object that specifies the cache behavior. Properties:</div><div class='line' id='LC12779'>&nbsp;*</div><div class='line' id='LC12780'>&nbsp;*   - `{number=}` `capacity` — turns the cache into LRU cache.</div><div class='line' id='LC12781'>&nbsp;*</div><div class='line' id='LC12782'>&nbsp;* @returns {object} Newly created cache object with the following set of methods:</div><div class='line' id='LC12783'>&nbsp;*</div><div class='line' id='LC12784'>&nbsp;* - `{object}` `info()` — Returns id, size, and options of cache.</div><div class='line' id='LC12785'>&nbsp;* - `{void}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache.</div><div class='line' id='LC12786'>&nbsp;* - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.</div><div class='line' id='LC12787'>&nbsp;* - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.</div><div class='line' id='LC12788'>&nbsp;* - `{void}` `removeAll()` — Removes all cached values.</div><div class='line' id='LC12789'>&nbsp;* - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.</div><div class='line' id='LC12790'>&nbsp;*</div><div class='line' id='LC12791'>&nbsp;*/</div><div class='line' id='LC12792'>function $CacheFactoryProvider() {</div><div class='line' id='LC12793'><br/></div><div class='line' id='LC12794'>&nbsp;&nbsp;this.$get = function() {</div><div class='line' id='LC12795'>&nbsp;&nbsp;&nbsp;&nbsp;var caches = {};</div><div class='line' id='LC12796'><br/></div><div class='line' id='LC12797'>&nbsp;&nbsp;&nbsp;&nbsp;function cacheFactory(cacheId, options) {</div><div class='line' id='LC12798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cacheId in caches) {</div><div class='line' id='LC12799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;cacheId &#39; + cacheId + &#39; taken&#39;);</div><div class='line' id='LC12800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12801'><br/></div><div class='line' id='LC12802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var size = 0,</div><div class='line' id='LC12803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stats = extend({}, options, {id: cacheId}),</div><div class='line' id='LC12804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = {},</div><div class='line' id='LC12805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;capacity = (options &amp;&amp; options.capacity) || Number.MAX_VALUE,</div><div class='line' id='LC12806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lruHash = {},</div><div class='line' id='LC12807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;freshEnd = null,</div><div class='line' id='LC12808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;staleEnd = null;</div><div class='line' id='LC12809'><br/></div><div class='line' id='LC12810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return caches[cacheId] = {</div><div class='line' id='LC12811'><br/></div><div class='line' id='LC12812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put: function(key, value) {</div><div class='line' id='LC12813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lruEntry = lruHash[key] || (lruHash[key] = {key: key});</div><div class='line' id='LC12814'><br/></div><div class='line' id='LC12815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;refresh(lruEntry);</div><div class='line' id='LC12816'><br/></div><div class='line' id='LC12817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value)) return;</div><div class='line' id='LC12818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(key in data)) size++;</div><div class='line' id='LC12819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[key] = value;</div><div class='line' id='LC12820'><br/></div><div class='line' id='LC12821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (size &gt; capacity) {</div><div class='line' id='LC12822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove(staleEnd.key);</div><div class='line' id='LC12823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12825'><br/></div><div class='line' id='LC12826'><br/></div><div class='line' id='LC12827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC12828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lruEntry = lruHash[key];</div><div class='line' id='LC12829'><br/></div><div class='line' id='LC12830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!lruEntry) return;</div><div class='line' id='LC12831'><br/></div><div class='line' id='LC12832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;refresh(lruEntry);</div><div class='line' id='LC12833'><br/></div><div class='line' id='LC12834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data[key];</div><div class='line' id='LC12835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12836'><br/></div><div class='line' id='LC12837'><br/></div><div class='line' id='LC12838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove: function(key) {</div><div class='line' id='LC12839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lruEntry = lruHash[key];</div><div class='line' id='LC12840'><br/></div><div class='line' id='LC12841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!lruEntry) return;</div><div class='line' id='LC12842'><br/></div><div class='line' id='LC12843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lruEntry == freshEnd) freshEnd = lruEntry.p;</div><div class='line' id='LC12844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lruEntry == staleEnd) staleEnd = lruEntry.n;</div><div class='line' id='LC12845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link(lruEntry.n,lruEntry.p);</div><div class='line' id='LC12846'><br/></div><div class='line' id='LC12847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete lruHash[key];</div><div class='line' id='LC12848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete data[key];</div><div class='line' id='LC12849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size--;</div><div class='line' id='LC12850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12851'><br/></div><div class='line' id='LC12852'><br/></div><div class='line' id='LC12853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAll: function() {</div><div class='line' id='LC12854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = {};</div><div class='line' id='LC12855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size = 0;</div><div class='line' id='LC12856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lruHash = {};</div><div class='line' id='LC12857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;freshEnd = staleEnd = null;</div><div class='line' id='LC12858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12859'><br/></div><div class='line' id='LC12860'><br/></div><div class='line' id='LC12861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroy: function() {</div><div class='line' id='LC12862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = null;</div><div class='line' id='LC12863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stats = null;</div><div class='line' id='LC12864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lruHash = null;</div><div class='line' id='LC12865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete caches[cacheId];</div><div class='line' id='LC12866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12867'><br/></div><div class='line' id='LC12868'><br/></div><div class='line' id='LC12869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info: function() {</div><div class='line' id='LC12870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return extend({}, stats, {size: size});</div><div class='line' id='LC12871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12873'><br/></div><div class='line' id='LC12874'><br/></div><div class='line' id='LC12875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC12876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* makes the `entry` the freshEnd of the LRU linked list</div><div class='line' id='LC12877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function refresh(entry) {</div><div class='line' id='LC12879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (entry != freshEnd) {</div><div class='line' id='LC12880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!staleEnd) {</div><div class='line' id='LC12881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;staleEnd = entry;</div><div class='line' id='LC12882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (staleEnd == entry) {</div><div class='line' id='LC12883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;staleEnd = entry.n;</div><div class='line' id='LC12884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12885'><br/></div><div class='line' id='LC12886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link(entry.n, entry.p);</div><div class='line' id='LC12887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link(entry, freshEnd);</div><div class='line' id='LC12888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;freshEnd = entry;</div><div class='line' id='LC12889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;freshEnd.n = null;</div><div class='line' id='LC12890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12892'><br/></div><div class='line' id='LC12893'><br/></div><div class='line' id='LC12894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC12895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* bidirectionally links two entries of the LRU linked list</div><div class='line' id='LC12896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC12897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function link(nextEntry, prevEntry) {</div><div class='line' id='LC12898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nextEntry != prevEntry) {</div><div class='line' id='LC12899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, &#39;prev&#39; didn&#39;t minify</div><div class='line' id='LC12900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (prevEntry) prevEntry.n = nextEntry; //n stands for next, &#39;next&#39; didn&#39;t minify</div><div class='line' id='LC12901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12903'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12904'><br/></div><div class='line' id='LC12905'><br/></div><div class='line' id='LC12906'>&nbsp;&nbsp;&nbsp;&nbsp;cacheFactory.info = function() {</div><div class='line' id='LC12907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var info = {};</div><div class='line' id='LC12908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(caches, function(cache, cacheId) {</div><div class='line' id='LC12909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info[cacheId] = cache.info();</div><div class='line' id='LC12910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return info;</div><div class='line' id='LC12912'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12913'><br/></div><div class='line' id='LC12914'><br/></div><div class='line' id='LC12915'>&nbsp;&nbsp;&nbsp;&nbsp;cacheFactory.get = function(cacheId) {</div><div class='line' id='LC12916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return caches[cacheId];</div><div class='line' id='LC12917'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12918'><br/></div><div class='line' id='LC12919'><br/></div><div class='line' id='LC12920'>&nbsp;&nbsp;&nbsp;&nbsp;return cacheFactory;</div><div class='line' id='LC12921'>&nbsp;&nbsp;};</div><div class='line' id='LC12922'>}</div><div class='line' id='LC12923'><br/></div><div class='line' id='LC12924'>/**</div><div class='line' id='LC12925'>&nbsp;* @ngdoc object</div><div class='line' id='LC12926'>&nbsp;* @name ng.$templateCache</div><div class='line' id='LC12927'>&nbsp;*</div><div class='line' id='LC12928'>&nbsp;* @description</div><div class='line' id='LC12929'>&nbsp;* Cache used for storing html templates.</div><div class='line' id='LC12930'>&nbsp;*</div><div class='line' id='LC12931'>&nbsp;* See {@link ng.$cacheFactory $cacheFactory}.</div><div class='line' id='LC12932'>&nbsp;*</div><div class='line' id='LC12933'>&nbsp;*/</div><div class='line' id='LC12934'>function $TemplateCacheProvider() {</div><div class='line' id='LC12935'>&nbsp;&nbsp;this.$get = [&#39;$cacheFactory&#39;, function($cacheFactory) {</div><div class='line' id='LC12936'>&nbsp;&nbsp;&nbsp;&nbsp;return $cacheFactory(&#39;templates&#39;);</div><div class='line' id='LC12937'>&nbsp;&nbsp;}];</div><div class='line' id='LC12938'>}</div><div class='line' id='LC12939'><br/></div><div class='line' id='LC12940'>/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!</div><div class='line' id='LC12941'>&nbsp;*</div><div class='line' id='LC12942'>&nbsp;* DOM-related variables:</div><div class='line' id='LC12943'>&nbsp;*</div><div class='line' id='LC12944'>&nbsp;* - &quot;node&quot; - DOM Node</div><div class='line' id='LC12945'>&nbsp;* - &quot;element&quot; - DOM Element or Node</div><div class='line' id='LC12946'>&nbsp;* - &quot;$node&quot; or &quot;$element&quot; - jqLite-wrapped node or element</div><div class='line' id='LC12947'>&nbsp;*</div><div class='line' id='LC12948'>&nbsp;*</div><div class='line' id='LC12949'>&nbsp;* Compiler related stuff:</div><div class='line' id='LC12950'>&nbsp;*</div><div class='line' id='LC12951'>&nbsp;* - &quot;linkFn&quot; - linking fn of a single directive</div><div class='line' id='LC12952'>&nbsp;* - &quot;nodeLinkFn&quot; - function that aggregates all linking fns for a particular node</div><div class='line' id='LC12953'>&nbsp;* - &quot;childLinkFn&quot; -  function that aggregates all linking fns for child nodes of a particular node</div><div class='line' id='LC12954'>&nbsp;* - &quot;compositeLinkFn&quot; - function that aggregates all linking fns for a compilation root (nodeList)</div><div class='line' id='LC12955'>&nbsp;*/</div><div class='line' id='LC12956'><br/></div><div class='line' id='LC12957'><br/></div><div class='line' id='LC12958'>var NON_ASSIGNABLE_MODEL_EXPRESSION = &#39;Non-assignable model expression: &#39;;</div><div class='line' id='LC12959'><br/></div><div class='line' id='LC12960'><br/></div><div class='line' id='LC12961'>/**</div><div class='line' id='LC12962'>&nbsp;* @ngdoc function</div><div class='line' id='LC12963'>&nbsp;* @name ng.$compile</div><div class='line' id='LC12964'>&nbsp;* @function</div><div class='line' id='LC12965'>&nbsp;*</div><div class='line' id='LC12966'>&nbsp;* @description</div><div class='line' id='LC12967'>&nbsp;* Compiles a piece of HTML string or DOM into a template and produces a template function, which</div><div class='line' id='LC12968'>&nbsp;* can then be used to link {@link ng.$rootScope.Scope scope} and the template together.</div><div class='line' id='LC12969'>&nbsp;*</div><div class='line' id='LC12970'>&nbsp;* The compilation is a process of walking the DOM tree and trying to match DOM elements to</div><div class='line' id='LC12971'>&nbsp;* {@link ng.$compileProvider#directive directives}. For each match it</div><div class='line' id='LC12972'>&nbsp;* executes corresponding template function and collects the</div><div class='line' id='LC12973'>&nbsp;* instance functions into a single template function which is then returned.</div><div class='line' id='LC12974'>&nbsp;*</div><div class='line' id='LC12975'>&nbsp;* The template function can then be used once to produce the view or as it is the case with</div><div class='line' id='LC12976'>&nbsp;* {@link ng.directive:ngRepeat repeater} many-times, in which</div><div class='line' id='LC12977'>&nbsp;* case each call results in a view that is a DOM clone of the original template.</div><div class='line' id='LC12978'>&nbsp;*</div><div class='line' id='LC12979'>&nbsp;&lt;doc:example module=&quot;compile&quot;&gt;</div><div class='line' id='LC12980'>&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC12981'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC12982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// declare a new module, and inject the $compileProvider</div><div class='line' id='LC12983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.module(&#39;compile&#39;, [], function($compileProvider) {</div><div class='line' id='LC12984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// configure new &#39;compile&#39; directive by passing a directive</div><div class='line' id='LC12985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// factory function. The factory function injects the &#39;$compile&#39;</div><div class='line' id='LC12986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileProvider.directive(&#39;compile&#39;, function($compile) {</div><div class='line' id='LC12987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// directive factory creates a link function</div><div class='line' id='LC12988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element, attrs) {</div><div class='line' id='LC12989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(</div><div class='line' id='LC12990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(scope) {</div><div class='line' id='LC12991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// watch the &#39;compile&#39; expression for changes</div><div class='line' id='LC12992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return scope.$eval(attrs.compile);</div><div class='line' id='LC12993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(value) {</div><div class='line' id='LC12995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// when the &#39;compile&#39; expression changes</div><div class='line' id='LC12996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// assign it into the current DOM</div><div class='line' id='LC12997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(value);</div><div class='line' id='LC12998'><br/></div><div class='line' id='LC12999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compile the new DOM and link it to the current</div><div class='line' id='LC13000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// scope.</div><div class='line' id='LC13001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// NOTE: we only compile .childNodes so that</div><div class='line' id='LC13002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we don&#39;t get into infinite loop compiling ourselves</div><div class='line' id='LC13003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compile(element.contents())(scope);</div><div class='line' id='LC13004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC13006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC13008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13009'><br/></div><div class='line' id='LC13010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC13011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &#39;Angular&#39;;</div><div class='line' id='LC13012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.html = &#39;Hello {{name}}&#39;;</div><div class='line' id='LC13013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13014'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC13015'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC13016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input ng-model=&quot;name&quot;&gt; &lt;br&gt;</div><div class='line' id='LC13017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;textarea ng-model=&quot;html&quot;&gt;&lt;/textarea&gt; &lt;br&gt;</div><div class='line' id='LC13018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div compile=&quot;html&quot;&gt;&lt;/div&gt;</div><div class='line' id='LC13019'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC13020'>&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC13021'>&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC13022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should auto compile&#39;, function() {</div><div class='line' id='LC13023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;div[compile]&#39;).text()).toBe(&#39;Hello Angular&#39;);</div><div class='line' id='LC13024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;html&#39;).enter(&#39;{{name}}!&#39;);</div><div class='line' id='LC13025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;div[compile]&#39;).text()).toBe(&#39;Angular!&#39;);</div><div class='line' id='LC13026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13027'>&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC13028'>&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC13029'><br/></div><div class='line' id='LC13030'>&nbsp;*</div><div class='line' id='LC13031'>&nbsp;*</div><div class='line' id='LC13032'>&nbsp;* @param {string|DOMElement} element Element or HTML string to compile into a template function.</div><div class='line' id='LC13033'>&nbsp;* @param {function(angular.Scope[, cloneAttachFn]} transclude function available to directives.</div><div class='line' id='LC13034'>&nbsp;* @param {number} maxPriority only apply directives lower then given priority (Only effects the</div><div class='line' id='LC13035'>&nbsp;*                 root element(s), not their children)</div><div class='line' id='LC13036'>&nbsp;* @returns {function(scope[, cloneAttachFn])} a link function which is used to bind template</div><div class='line' id='LC13037'>&nbsp;* (a DOM element/tree) to a scope. Where:</div><div class='line' id='LC13038'>&nbsp;*</div><div class='line' id='LC13039'>&nbsp;*  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.</div><div class='line' id='LC13040'>&nbsp;*  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the</div><div class='line' id='LC13041'>&nbsp;*               `template` and call the `cloneAttachFn` function allowing the caller to attach the</div><div class='line' id='LC13042'>&nbsp;*               cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is</div><div class='line' id='LC13043'>&nbsp;*               called as: &lt;br&gt; `cloneAttachFn(clonedElement, scope)` where:</div><div class='line' id='LC13044'>&nbsp;*</div><div class='line' id='LC13045'>&nbsp;*      * `clonedElement` - is a clone of the original `element` passed into the compiler.</div><div class='line' id='LC13046'>&nbsp;*      * `scope` - is the current scope with which the linking function is working with.</div><div class='line' id='LC13047'>&nbsp;*</div><div class='line' id='LC13048'>&nbsp;* Calling the linking function returns the element of the template. It is either the original element</div><div class='line' id='LC13049'>&nbsp;* passed in, or the clone of the element if the `cloneAttachFn` is provided.</div><div class='line' id='LC13050'>&nbsp;*</div><div class='line' id='LC13051'>&nbsp;* After linking the view is not updated until after a call to $digest which typically is done by</div><div class='line' id='LC13052'>&nbsp;* Angular automatically.</div><div class='line' id='LC13053'>&nbsp;*</div><div class='line' id='LC13054'>&nbsp;* If you need access to the bound view, there are two ways to do it:</div><div class='line' id='LC13055'>&nbsp;*</div><div class='line' id='LC13056'>&nbsp;* - If you are not asking the linking function to clone the template, create the DOM element(s)</div><div class='line' id='LC13057'>&nbsp;*   before you send them to the compiler and keep this reference around.</div><div class='line' id='LC13058'>&nbsp;*   &lt;pre&gt;</div><div class='line' id='LC13059'>&nbsp;*     var element = $compile(&#39;&lt;p&gt;{{total}}&lt;/p&gt;&#39;)(scope);</div><div class='line' id='LC13060'>&nbsp;*   &lt;/pre&gt;</div><div class='line' id='LC13061'>&nbsp;*</div><div class='line' id='LC13062'>&nbsp;* - if on the other hand, you need the element to be cloned, the view reference from the original</div><div class='line' id='LC13063'>&nbsp;*   example would not point to the clone, but rather to the original template that was cloned. In</div><div class='line' id='LC13064'>&nbsp;*   this case, you can access the clone via the cloneAttachFn:</div><div class='line' id='LC13065'>&nbsp;*   &lt;pre&gt;</div><div class='line' id='LC13066'>&nbsp;*     var templateHTML = angular.element(&#39;&lt;p&gt;{{total}}&lt;/p&gt;&#39;),</div><div class='line' id='LC13067'>&nbsp;*         scope = ....;</div><div class='line' id='LC13068'>&nbsp;*</div><div class='line' id='LC13069'>&nbsp;*     var clonedElement = $compile(templateHTML)(scope, function(clonedElement, scope) {</div><div class='line' id='LC13070'>&nbsp;*       //attach the clone to DOM document at the right place</div><div class='line' id='LC13071'>&nbsp;*     });</div><div class='line' id='LC13072'>&nbsp;*</div><div class='line' id='LC13073'>&nbsp;*     //now we have reference to the cloned DOM via `clone`</div><div class='line' id='LC13074'>&nbsp;*   &lt;/pre&gt;</div><div class='line' id='LC13075'>&nbsp;*</div><div class='line' id='LC13076'>&nbsp;*</div><div class='line' id='LC13077'>&nbsp;* For information on how the compiler works, see the</div><div class='line' id='LC13078'>&nbsp;* {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.</div><div class='line' id='LC13079'>&nbsp;*/</div><div class='line' id='LC13080'><br/></div><div class='line' id='LC13081'><br/></div><div class='line' id='LC13082'>/**</div><div class='line' id='LC13083'>&nbsp;* @ngdoc service</div><div class='line' id='LC13084'>&nbsp;* @name ng.$compileProvider</div><div class='line' id='LC13085'>&nbsp;* @function</div><div class='line' id='LC13086'>&nbsp;*</div><div class='line' id='LC13087'>&nbsp;* @description</div><div class='line' id='LC13088'>&nbsp;*/</div><div class='line' id='LC13089'>$CompileProvider.$inject = [&#39;$provide&#39;];</div><div class='line' id='LC13090'>function $CompileProvider($provide) {</div><div class='line' id='LC13091'>&nbsp;&nbsp;var hasDirectives = {},</div><div class='line' id='LC13092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suffix = &#39;Directive&#39;,</div><div class='line' id='LC13093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COMMENT_DIRECTIVE_REGEXP = /^\s*directive\:\s*([\d\w\-_]+)\s+(.*)$/,</div><div class='line' id='LC13094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLASS_DIRECTIVE_REGEXP = /(([\d\w\-_]+)(?:\:([^;]+))?;?)/,</div><div class='line' id='LC13095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MULTI_ROOT_TEMPLATE_ERROR = &#39;Template must have exactly one root element. was: &#39;,</div><div class='line' id='LC13096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlSanitizationWhitelist = /^\s*(https?|ftp|mailto|file):/;</div><div class='line' id='LC13097'><br/></div><div class='line' id='LC13098'><br/></div><div class='line' id='LC13099'>&nbsp;&nbsp;/**</div><div class='line' id='LC13100'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC13101'>&nbsp;&nbsp;&nbsp;* @name ng.$compileProvider#directive</div><div class='line' id='LC13102'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$compileProvider</div><div class='line' id='LC13103'>&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC13104'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13105'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC13106'>&nbsp;&nbsp;&nbsp;* Register a new directives with the compiler.</div><div class='line' id='LC13107'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13108'>&nbsp;&nbsp;&nbsp;* @param {string} name Name of the directive in camel-case. (ie &lt;code&gt;ngBind&lt;/code&gt; which will match as</div><div class='line' id='LC13109'>&nbsp;&nbsp;&nbsp;*                &lt;code&gt;ng-bind&lt;/code&gt;).</div><div class='line' id='LC13110'>&nbsp;&nbsp;&nbsp;* @param {function} directiveFactory An injectable directive factroy function. See {@link guide/directive} for more</div><div class='line' id='LC13111'>&nbsp;&nbsp;&nbsp;*                info.</div><div class='line' id='LC13112'>&nbsp;&nbsp;&nbsp;* @returns {ng.$compileProvider} Self for chaining.</div><div class='line' id='LC13113'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13114'>&nbsp;&nbsp;&nbsp;this.directive = function registerDirective(name, directiveFactory) {</div><div class='line' id='LC13115'>&nbsp;&nbsp;&nbsp;&nbsp;if (isString(name)) {</div><div class='line' id='LC13116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertArg(directiveFactory, &#39;directive&#39;);</div><div class='line' id='LC13117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!hasDirectives.hasOwnProperty(name)) {</div><div class='line' id='LC13118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasDirectives[name] = [];</div><div class='line' id='LC13119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$provide.factory(name + Suffix, [&#39;$injector&#39;, &#39;$exceptionHandler&#39;,</div><div class='line' id='LC13120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function($injector, $exceptionHandler) {</div><div class='line' id='LC13121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var directives = [];</div><div class='line' id='LC13122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(hasDirectives[name], function(directiveFactory) {</div><div class='line' id='LC13123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var directive = $injector.invoke(directiveFactory);</div><div class='line' id='LC13125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isFunction(directive)) {</div><div class='line' id='LC13126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive = { compile: valueFn(directive) };</div><div class='line' id='LC13127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!directive.compile &amp;&amp; directive.link) {</div><div class='line' id='LC13128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.compile = valueFn(directive.link);</div><div class='line' id='LC13129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.priority = directive.priority || 0;</div><div class='line' id='LC13131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.name = directive.name || name;</div><div class='line' id='LC13132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.require = directive.require || (directive.controller &amp;&amp; directive.name);</div><div class='line' id='LC13133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.restrict = directive.restrict || &#39;A&#39;;</div><div class='line' id='LC13134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.push(directive);</div><div class='line' id='LC13135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC13137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return directives;</div><div class='line' id='LC13140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]);</div><div class='line' id='LC13141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasDirectives[name].push(directiveFactory);</div><div class='line' id='LC13143'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(name, reverseParams(registerDirective));</div><div class='line' id='LC13145'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13146'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC13147'>&nbsp;&nbsp;};</div><div class='line' id='LC13148'><br/></div><div class='line' id='LC13149'><br/></div><div class='line' id='LC13150'>&nbsp;&nbsp;/**</div><div class='line' id='LC13151'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC13152'>&nbsp;&nbsp;&nbsp;* @name ng.$compileProvider#urlSanitizationWhitelist</div><div class='line' id='LC13153'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$compileProvider</div><div class='line' id='LC13154'>&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC13155'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13156'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC13157'>&nbsp;&nbsp;&nbsp;* Retrieves or overrides the default regular expression that is used for whitelisting of safe</div><div class='line' id='LC13158'>&nbsp;&nbsp;&nbsp;* urls during a[href] sanitization.</div><div class='line' id='LC13159'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13160'>&nbsp;&nbsp;&nbsp;* The sanitization is a security measure aimed at prevent XSS attacks via html links.</div><div class='line' id='LC13161'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13162'>&nbsp;&nbsp;&nbsp;* Any url about to be assigned to a[href] via data-binding is first normalized and turned into an</div><div class='line' id='LC13163'>&nbsp;&nbsp;&nbsp;* absolute url. Afterwards the url is matched against the `urlSanitizationWhitelist` regular</div><div class='line' id='LC13164'>&nbsp;&nbsp;&nbsp;* expression. If a match is found the original url is written into the dom. Otherwise the</div><div class='line' id='LC13165'>&nbsp;&nbsp;&nbsp;* absolute url is prefixed with `&#39;unsafe:&#39;` string and only then it is written into the DOM.</div><div class='line' id='LC13166'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13167'>&nbsp;&nbsp;&nbsp;* @param {RegExp=} regexp New regexp to whitelist urls with.</div><div class='line' id='LC13168'>&nbsp;&nbsp;&nbsp;* @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for</div><div class='line' id='LC13169'>&nbsp;&nbsp;&nbsp;*    chaining otherwise.</div><div class='line' id='LC13170'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13171'>&nbsp;&nbsp;this.urlSanitizationWhitelist = function(regexp) {</div><div class='line' id='LC13172'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(regexp)) {</div><div class='line' id='LC13173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlSanitizationWhitelist = regexp;</div><div class='line' id='LC13174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC13175'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13176'>&nbsp;&nbsp;&nbsp;&nbsp;return urlSanitizationWhitelist;</div><div class='line' id='LC13177'>&nbsp;&nbsp;};</div><div class='line' id='LC13178'><br/></div><div class='line' id='LC13179'><br/></div><div class='line' id='LC13180'>&nbsp;&nbsp;this.$get = [</div><div class='line' id='LC13181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;$injector&#39;, &#39;$interpolate&#39;, &#39;$exceptionHandler&#39;, &#39;$http&#39;, &#39;$templateCache&#39;, &#39;$parse&#39;,</div><div class='line' id='LC13182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;$controller&#39;, &#39;$rootScope&#39;, &#39;$document&#39;,</div><div class='line' id='LC13183'>&nbsp;&nbsp;&nbsp;&nbsp;function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,</div><div class='line' id='LC13184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$controller,   $rootScope,   $document) {</div><div class='line' id='LC13185'><br/></div><div class='line' id='LC13186'>&nbsp;&nbsp;&nbsp;&nbsp;var Attributes = function(element, attr) {</div><div class='line' id='LC13187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$element = element;</div><div class='line' id='LC13188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$attr = attr || {};</div><div class='line' id='LC13189'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13190'><br/></div><div class='line' id='LC13191'>&nbsp;&nbsp;&nbsp;&nbsp;Attributes.prototype = {</div><div class='line' id='LC13192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$normalize: directiveNormalize,</div><div class='line' id='LC13193'><br/></div><div class='line' id='LC13194'><br/></div><div class='line' id='LC13195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Set a normalized attribute on the element in a way such that all directives</div><div class='line' id='LC13197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* can share the attribute. This function properly handles boolean attributes.</div><div class='line' id='LC13198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} key Normalized key. (ie ngAttribute)</div><div class='line' id='LC13199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string|boolean} value The value to set. If `null` attribute will be deleted.</div><div class='line' id='LC13200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.</div><div class='line' id='LC13201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     Defaults to true.</div><div class='line' id='LC13202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string=} attrName Optional none normalized name. Defaults to key.</div><div class='line' id='LC13203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$set: function(key, value, writeAttr, attrName) {</div><div class='line' id='LC13205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var booleanKey = getBooleanAttrName(this.$$element[0], key),</div><div class='line' id='LC13206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$$observers = this.$$observers,</div><div class='line' id='LC13207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normalizedVal;</div><div class='line' id='LC13208'><br/></div><div class='line' id='LC13209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (booleanKey) {</div><div class='line' id='LC13210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$element.prop(key, value);</div><div class='line' id='LC13211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrName = booleanKey;</div><div class='line' id='LC13212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13213'><br/></div><div class='line' id='LC13214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[key] = value;</div><div class='line' id='LC13215'><br/></div><div class='line' id='LC13216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// translate normalized key to actual key</div><div class='line' id='LC13217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (attrName) {</div><div class='line' id='LC13218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$attr[key] = attrName;</div><div class='line' id='LC13219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrName = this.$attr[key];</div><div class='line' id='LC13221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!attrName) {</div><div class='line' id='LC13222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$attr[key] = attrName = snake_case(key, &#39;-&#39;);</div><div class='line' id='LC13223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13225'><br/></div><div class='line' id='LC13226'><br/></div><div class='line' id='LC13227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// sanitize a[href] values</div><div class='line' id='LC13228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodeName_(this.$$element[0]) === &#39;A&#39; &amp;&amp; key === &#39;href&#39;) {</div><div class='line' id='LC13229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlSanitizationNode.setAttribute(&#39;href&#39;, value);</div><div class='line' id='LC13230'><br/></div><div class='line' id='LC13231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// href property always returns normalized absolute url, so we can match against that</div><div class='line' id='LC13232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normalizedVal = urlSanitizationNode.href;</div><div class='line' id='LC13233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!normalizedVal.match(urlSanitizationWhitelist)) {</div><div class='line' id='LC13234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[key] = value = &#39;unsafe:&#39; + normalizedVal;</div><div class='line' id='LC13235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13237'><br/></div><div class='line' id='LC13238'><br/></div><div class='line' id='LC13239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (writeAttr !== false) {</div><div class='line' id='LC13240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value === null || value === undefined) {</div><div class='line' id='LC13241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$element.removeAttr(attrName);</div><div class='line' id='LC13242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$element.attr(attrName, value);</div><div class='line' id='LC13244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13246'><br/></div><div class='line' id='LC13247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// fire observers</div><div class='line' id='LC13248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$$observers &amp;&amp; forEach($$observers[key], function(fn) {</div><div class='line' id='LC13249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(value);</div><div class='line' id='LC13251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC13253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13256'><br/></div><div class='line' id='LC13257'><br/></div><div class='line' id='LC13258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Observe an interpolated attribute.</div><div class='line' id='LC13260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The observer will never be called, if given attribute is not interpolated.</div><div class='line' id='LC13261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} key Normalized key. (ie ngAttribute) .</div><div class='line' id='LC13263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {function(*)} fn Function that will be called whenever the attribute value changes.</div><div class='line' id='LC13264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {function(*)} the `fn` Function passed in.</div><div class='line' id='LC13265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$observe: function(key, fn) {</div><div class='line' id='LC13267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var attrs = this,</div><div class='line' id='LC13268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$$observers = (attrs.$$observers || (attrs.$$observers = {})),</div><div class='line' id='LC13269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners = ($$observers[key] || ($$observers[key] = []));</div><div class='line' id='LC13270'><br/></div><div class='line' id='LC13271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners.push(fn);</div><div class='line' id='LC13272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(function() {</div><div class='line' id='LC13273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!listeners.$$inter) {</div><div class='line' id='LC13274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no one registered attribute interpolation function, so lets call it manually</div><div class='line' id='LC13275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(attrs[key]);</div><div class='line' id='LC13276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn;</div><div class='line' id='LC13279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13280'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13281'><br/></div><div class='line' id='LC13282'>&nbsp;&nbsp;&nbsp;&nbsp;var urlSanitizationNode = $document[0].createElement(&#39;a&#39;),</div><div class='line' id='LC13283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startSymbol = $interpolate.startSymbol(),</div><div class='line' id='LC13284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;endSymbol = $interpolate.endSymbol(),</div><div class='line' id='LC13285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;denormalizeTemplate = (startSymbol == &#39;{{&#39; || endSymbol  == &#39;}}&#39;)</div><div class='line' id='LC13286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? identity</div><div class='line' id='LC13287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function denormalizeTemplate(template) {</div><div class='line' id='LC13288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol);</div><div class='line' id='LC13289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13290'><br/></div><div class='line' id='LC13291'><br/></div><div class='line' id='LC13292'>&nbsp;&nbsp;&nbsp;&nbsp;return compile;</div><div class='line' id='LC13293'><br/></div><div class='line' id='LC13294'>&nbsp;&nbsp;&nbsp;&nbsp;//================================</div><div class='line' id='LC13295'><br/></div><div class='line' id='LC13296'>&nbsp;&nbsp;&nbsp;&nbsp;function compile($compileNodes, transcludeFn, maxPriority) {</div><div class='line' id='LC13297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!($compileNodes instanceof jqLite)) {</div><div class='line' id='LC13298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// jquery always rewraps, whereas we need to preserve the original selector so that we can modify it.</div><div class='line' id='LC13299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNodes = jqLite($compileNodes);</div><div class='line' id='LC13300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We can not compile top level text elements since text nodes can be merged and we will</div><div class='line' id='LC13302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// not be able to attach scope data to them, so we will wrap them in &lt;span&gt;</div><div class='line' id='LC13303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach($compileNodes, function(node, index){</div><div class='line' id='LC13304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.nodeType == 3 /* text node */ &amp;&amp; node.nodeValue.match(/\S+/) /* non-empty */ ) {</div><div class='line' id='LC13305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNodes[index] = jqLite(node).wrap(&#39;&lt;span&gt;&lt;/span&gt;&#39;).parent()[0];</div><div class='line' id='LC13306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority);</div><div class='line' id='LC13309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function publicLinkFn(scope, cloneConnectFn){</div><div class='line' id='LC13310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertArg(scope, &#39;scope&#39;);</div><div class='line' id='LC13311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart</div><div class='line' id='LC13312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// and sometimes changes the structure of the DOM.</div><div class='line' id='LC13313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $linkNode = cloneConnectFn</div><div class='line' id='LC13314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!</div><div class='line' id='LC13315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: $compileNodes;</div><div class='line' id='LC13316'><br/></div><div class='line' id='LC13317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Attach scope only to non-text nodes.</div><div class='line' id='LC13318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var i = 0, ii = $linkNode.length; i&lt;ii; i++) {</div><div class='line' id='LC13319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node = $linkNode[i];</div><div class='line' id='LC13320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.nodeType == 1 /* element */ || node.nodeType == 9 /* document */) {</div><div class='line' id='LC13321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$linkNode.eq(i).data(&#39;$scope&#39;, scope);</div><div class='line' id='LC13322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;safeAddClass($linkNode, &#39;ng-scope&#39;);</div><div class='line' id='LC13325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cloneConnectFn) cloneConnectFn($linkNode, scope);</div><div class='line' id='LC13326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode);</div><div class='line' id='LC13327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $linkNode;</div><div class='line' id='LC13328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13329'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13330'><br/></div><div class='line' id='LC13331'>&nbsp;&nbsp;&nbsp;&nbsp;function wrongMode(localName, mode) {</div><div class='line' id='LC13332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Unsupported &#39;&quot; + mode + &quot;&#39; for &#39;&quot; + localName + &quot;&#39;.&quot;);</div><div class='line' id='LC13333'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13334'><br/></div><div class='line' id='LC13335'>&nbsp;&nbsp;&nbsp;&nbsp;function safeAddClass($element, className) {</div><div class='line' id='LC13336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.addClass(className);</div><div class='line' id='LC13338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC13339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ignore, since it means that we are trying to set class on</div><div class='line' id='LC13340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// SVG element, where class name is read-only.</div><div class='line' id='LC13341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13342'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13343'><br/></div><div class='line' id='LC13344'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Compile function matches each node in nodeList against the directives. Once all directives</div><div class='line' id='LC13346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* for a particular node are collected their compile functions are executed. The compile</div><div class='line' id='LC13347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* functions return values - the linking functions - are combined into a composite linking</div><div class='line' id='LC13348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* function, which is the a linking function for the node.</div><div class='line' id='LC13349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {NodeList} nodeList an array of nodes or NodeList to compile</div><div class='line' id='LC13351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the</div><div class='line' id='LC13352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        scope argument is auto-generated to the new child of the transcluded parent scope.</div><div class='line' id='LC13353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then the</div><div class='line' id='LC13354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        rootElement must be set the jqLite collection of the compile root. This is</div><div class='line' id='LC13355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        needed so that the jqLite collection items can be replaced with widgets.</div><div class='line' id='LC13356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {number=} max directive priority</div><div class='line' id='LC13357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {?function} A composite linking function of all of the matched directives or null.</div><div class='line' id='LC13358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13359'>&nbsp;&nbsp;&nbsp;&nbsp;function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority) {</div><div class='line' id='LC13360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var linkFns = [],</div><div class='line' id='LC13361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn, childLinkFn, directives, attrs, linkFnFound;</div><div class='line' id='LC13362'><br/></div><div class='line' id='LC13363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var i = 0; i &lt; nodeList.length; i++) {</div><div class='line' id='LC13364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs = new Attributes();</div><div class='line' id='LC13365'><br/></div><div class='line' id='LC13366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we must always refer to nodeList[i] since the nodes can be replaced underneath us.</div><div class='line' id='LC13367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives = collectDirectives(nodeList[i], [], attrs, maxPriority);</div><div class='line' id='LC13368'><br/></div><div class='line' id='LC13369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn = (directives.length)</div><div class='line' id='LC13370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement)</div><div class='line' id='LC13371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: null;</div><div class='line' id='LC13372'><br/></div><div class='line' id='LC13373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childLinkFn = (nodeLinkFn &amp;&amp; nodeLinkFn.terminal || !nodeList[i].childNodes || !nodeList[i].childNodes.length)</div><div class='line' id='LC13374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? null</div><div class='line' id='LC13375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: compileNodes(nodeList[i].childNodes,</div><div class='line' id='LC13376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn ? nodeLinkFn.transclude : transcludeFn);</div><div class='line' id='LC13377'><br/></div><div class='line' id='LC13378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFns.push(nodeLinkFn);</div><div class='line' id='LC13379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFns.push(childLinkFn);</div><div class='line' id='LC13380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFnFound = (linkFnFound || nodeLinkFn || childLinkFn);</div><div class='line' id='LC13381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13382'><br/></div><div class='line' id='LC13383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// return a linking function if we have found anything, null otherwise</div><div class='line' id='LC13384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return linkFnFound ? compositeLinkFn : null;</div><div class='line' id='LC13385'><br/></div><div class='line' id='LC13386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function compositeLinkFn(scope, nodeList, $rootElement, boundTranscludeFn) {</div><div class='line' id='LC13387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nodeLinkFn, childLinkFn, node, childScope, childTranscludeFn, i, ii, n;</div><div class='line' id='LC13388'><br/></div><div class='line' id='LC13389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// copy nodeList so that linking doesn&#39;t break due to live list updates.</div><div class='line' id='LC13390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var stableNodeList = [];</div><div class='line' id='LC13391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0, ii = nodeList.length; i &lt; ii; i++) {</div><div class='line' id='LC13392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stableNodeList.push(nodeList[i]);</div><div class='line' id='LC13393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13394'><br/></div><div class='line' id='LC13395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i = 0, n = 0, ii = linkFns.length; i &lt; ii; n++) {</div><div class='line' id='LC13396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = stableNodeList[n];</div><div class='line' id='LC13397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn = linkFns[i++];</div><div class='line' id='LC13398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childLinkFn = linkFns[i++];</div><div class='line' id='LC13399'><br/></div><div class='line' id='LC13400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodeLinkFn) {</div><div class='line' id='LC13401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodeLinkFn.scope) {</div><div class='line' id='LC13402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = scope.$new(isObject(nodeLinkFn.scope));</div><div class='line' id='LC13403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jqLite(node).data(&#39;$scope&#39;, childScope);</div><div class='line' id='LC13404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = scope;</div><div class='line' id='LC13406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childTranscludeFn = nodeLinkFn.transclude;</div><div class='line' id='LC13408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (childTranscludeFn || (!boundTranscludeFn &amp;&amp; transcludeFn)) {</div><div class='line' id='LC13409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn(childLinkFn, childScope, node, $rootElement,</div><div class='line' id='LC13410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(function(transcludeFn) {</div><div class='line' id='LC13411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(cloneFn) {</div><div class='line' id='LC13412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var transcludeScope = scope.$new();</div><div class='line' id='LC13413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transcludeScope.$$transcluded = true;</div><div class='line' id='LC13414'><br/></div><div class='line' id='LC13415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return transcludeFn(transcludeScope, cloneFn).</div><div class='line' id='LC13416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bind(&#39;$destroy&#39;, bind(transcludeScope, transcludeScope.$destroy));</div><div class='line' id='LC13417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})(childTranscludeFn || transcludeFn)</div><div class='line' id='LC13419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC13420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn(childLinkFn, childScope, node, undefined, boundTranscludeFn);</div><div class='line' id='LC13422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (childLinkFn) {</div><div class='line' id='LC13424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childLinkFn(scope, node.childNodes, undefined, boundTranscludeFn);</div><div class='line' id='LC13425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13428'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13429'><br/></div><div class='line' id='LC13430'><br/></div><div class='line' id='LC13431'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Looks for directives on the given node and adds them to the directive collection which is</div><div class='line' id='LC13433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* sorted.</div><div class='line' id='LC13434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param node Node to search.</div><div class='line' id='LC13436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param directives An array to which the directives are added to. This array is sorted before</div><div class='line' id='LC13437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        the function returns.</div><div class='line' id='LC13438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param attrs The shared attrs object which is used to populate the normalized attributes.</div><div class='line' id='LC13439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {number=} maxPriority Max directive priority.</div><div class='line' id='LC13440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13441'>&nbsp;&nbsp;&nbsp;&nbsp;function collectDirectives(node, directives, attrs, maxPriority) {</div><div class='line' id='LC13442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nodeType = node.nodeType,</div><div class='line' id='LC13443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrsMap = attrs.$attr,</div><div class='line' id='LC13444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match,</div><div class='line' id='LC13445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className;</div><div class='line' id='LC13446'><br/></div><div class='line' id='LC13447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(nodeType) {</div><div class='line' id='LC13448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1: /* Element */</div><div class='line' id='LC13449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// use the node name: &lt;directive&gt;</div><div class='line' id='LC13450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addDirective(directives,</div><div class='line' id='LC13451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directiveNormalize(nodeName_(node).toLowerCase()), &#39;E&#39;, maxPriority);</div><div class='line' id='LC13452'><br/></div><div class='line' id='LC13453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// iterate over the attributes</div><div class='line' id='LC13454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var attr, name, nName, value, nAttrs = node.attributes,</div><div class='line' id='LC13455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 0, jj = nAttrs &amp;&amp; nAttrs.length; j &lt; jj; j++) {</div><div class='line' id='LC13456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr = nAttrs[j];</div><div class='line' id='LC13457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (attr.specified) {</div><div class='line' id='LC13458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = attr.name;</div><div class='line' id='LC13459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nName = directiveNormalize(name.toLowerCase());</div><div class='line' id='LC13460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrsMap[nName] = name;</div><div class='line' id='LC13461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs[nName] = value = trim((msie &amp;&amp; name == &#39;href&#39;)</div><div class='line' id='LC13462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? decodeURIComponent(node.getAttribute(name, 2))</div><div class='line' id='LC13463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: attr.value);</div><div class='line' id='LC13464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (getBooleanAttrName(node, nName)) {</div><div class='line' id='LC13465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs[nName] = true; // presence means true</div><div class='line' id='LC13466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addAttrInterpolateDirective(node, directives, value, nName);</div><div class='line' id='LC13468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addDirective(directives, nName, &#39;A&#39;, maxPriority);</div><div class='line' id='LC13469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13471'><br/></div><div class='line' id='LC13472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// use class as directive</div><div class='line' id='LC13473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className = node.className;</div><div class='line' id='LC13474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(className) &amp;&amp; className !== &#39;&#39;) {</div><div class='line' id='LC13475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {</div><div class='line' id='LC13476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nName = directiveNormalize(match[2]);</div><div class='line' id='LC13477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addDirective(directives, nName, &#39;C&#39;, maxPriority)) {</div><div class='line' id='LC13478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs[nName] = trim(match[3]);</div><div class='line' id='LC13479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className = className.substr(match.index + match[0].length);</div><div class='line' id='LC13481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3: /* Text Node */</div><div class='line' id='LC13485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addTextInterpolateDirective(directives, node.nodeValue);</div><div class='line' id='LC13486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 8: /* Comment */</div><div class='line' id='LC13488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);</div><div class='line' id='LC13490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC13491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nName = directiveNormalize(match[1]);</div><div class='line' id='LC13492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addDirective(directives, nName, &#39;M&#39;, maxPriority)) {</div><div class='line' id='LC13493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs[nName] = trim(match[2]);</div><div class='line' id='LC13494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// turns out that under some circumstances IE9 throws errors when one attempts to read comment&#39;s node value.</div><div class='line' id='LC13498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Just ignore it and continue. (Can&#39;t seem to reproduce in test case.)</div><div class='line' id='LC13499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13502'><br/></div><div class='line' id='LC13503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.sort(byPriority);</div><div class='line' id='LC13504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return directives;</div><div class='line' id='LC13505'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13506'><br/></div><div class='line' id='LC13507'><br/></div><div class='line' id='LC13508'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Once the directives have been collected, their compile functions are executed. This method</div><div class='line' id='LC13510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* is responsible for inlining directive templates as well as terminating the application</div><div class='line' id='LC13511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of the directives if the terminal directive has been reached.</div><div class='line' id='LC13512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} directives Array of collected directives to execute their compile function.</div><div class='line' id='LC13514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        this needs to be pre-sorted by priority order.</div><div class='line' id='LC13515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Node} compileNode The raw DOM node to apply the compile functions to</div><div class='line' id='LC13516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} templateAttrs The shared attribute function</div><div class='line' id='LC13517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the</div><div class='line' id='LC13518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        scope argument is auto-generated to the new child of the transcluded parent scope.</div><div class='line' id='LC13519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {JQLite} jqCollection If we are working on the root of the compile tree then this</div><div class='line' id='LC13520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*        argument has the root jqLite array so that we can replace nodes on it.</div><div class='line' id='LC13521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns linkFn</div><div class='line' id='LC13522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13523'>&nbsp;&nbsp;&nbsp;&nbsp;function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection) {</div><div class='line' id='LC13524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var terminalPriority = -Number.MAX_VALUE,</div><div class='line' id='LC13525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preLinkFns = [],</div><div class='line' id='LC13526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postLinkFns = [],</div><div class='line' id='LC13527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newScopeDirective = null,</div><div class='line' id='LC13528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newIsolateScopeDirective = null,</div><div class='line' id='LC13529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateDirective = null,</div><div class='line' id='LC13530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode = templateAttrs.$$element = jqLite(compileNode),</div><div class='line' id='LC13531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive,</div><div class='line' id='LC13532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directiveName,</div><div class='line' id='LC13533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template,</div><div class='line' id='LC13534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transcludeDirective,</div><div class='line' id='LC13535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childTranscludeFn = transcludeFn,</div><div class='line' id='LC13536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controllerDirectives,</div><div class='line' id='LC13537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn,</div><div class='line' id='LC13538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directiveValue;</div><div class='line' id='LC13539'><br/></div><div class='line' id='LC13540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// executes all directives on the current element</div><div class='line' id='LC13541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var i = 0, ii = directives.length; i &lt; ii; i++) {</div><div class='line' id='LC13542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive = directives[i];</div><div class='line' id='LC13543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template = undefined;</div><div class='line' id='LC13544'><br/></div><div class='line' id='LC13545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (terminalPriority &gt; directive.priority) {</div><div class='line' id='LC13546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; // prevent further processing of directives</div><div class='line' id='LC13547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13548'><br/></div><div class='line' id='LC13549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directiveValue = directive.scope) {</div><div class='line' id='LC13550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertNoDuplicate(&#39;isolated scope&#39;, newIsolateScopeDirective, directive, $compileNode);</div><div class='line' id='LC13551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(directiveValue)) {</div><div class='line' id='LC13552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;safeAddClass($compileNode, &#39;ng-isolate-scope&#39;);</div><div class='line' id='LC13553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newIsolateScopeDirective = directive;</div><div class='line' id='LC13554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;safeAddClass($compileNode, &#39;ng-scope&#39;);</div><div class='line' id='LC13556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newScopeDirective = newScopeDirective || directive;</div><div class='line' id='LC13557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13558'><br/></div><div class='line' id='LC13559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directiveName = directive.name;</div><div class='line' id='LC13560'><br/></div><div class='line' id='LC13561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directiveValue = directive.controller) {</div><div class='line' id='LC13562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controllerDirectives = controllerDirectives || {};</div><div class='line' id='LC13563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertNoDuplicate(&quot;&#39;&quot; + directiveName + &quot;&#39; controller&quot;,</div><div class='line' id='LC13564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controllerDirectives[directiveName], directive, $compileNode);</div><div class='line' id='LC13565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controllerDirectives[directiveName] = directive;</div><div class='line' id='LC13566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13567'><br/></div><div class='line' id='LC13568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directiveValue = directive.transclude) {</div><div class='line' id='LC13569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertNoDuplicate(&#39;transclusion&#39;, transcludeDirective, directive, $compileNode);</div><div class='line' id='LC13570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transcludeDirective = directive;</div><div class='line' id='LC13571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;terminalPriority = directive.priority;</div><div class='line' id='LC13572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directiveValue == &#39;element&#39;) {</div><div class='line' id='LC13573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template = jqLite(compileNode);</div><div class='line' id='LC13574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode = templateAttrs.$$element =</div><div class='line' id='LC13575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jqLite(document.createComment(&#39; &#39; + directiveName + &#39;: &#39; + templateAttrs[directiveName] + &#39; &#39;));</div><div class='line' id='LC13576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compileNode = $compileNode[0];</div><div class='line' id='LC13577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceWith(jqCollection, jqLite($template[0]), compileNode);</div><div class='line' id='LC13578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childTranscludeFn = compile($template, transcludeFn, terminalPriority);</div><div class='line' id='LC13579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template = jqLite(JQLiteClone(compileNode)).contents();</div><div class='line' id='LC13581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode.html(&#39;&#39;); // clear contents</div><div class='line' id='LC13582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childTranscludeFn = compile($template, transcludeFn);</div><div class='line' id='LC13583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13585'><br/></div><div class='line' id='LC13586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((directiveValue = directive.template)) {</div><div class='line' id='LC13587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertNoDuplicate(&#39;template&#39;, templateDirective, directive, $compileNode);</div><div class='line' id='LC13588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateDirective = directive;</div><div class='line' id='LC13589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directiveValue = denormalizeTemplate(directiveValue);</div><div class='line' id='LC13590'><br/></div><div class='line' id='LC13591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directive.replace) {</div><div class='line' id='LC13592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template = jqLite(&#39;&lt;div&gt;&#39; +</div><div class='line' id='LC13593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trim(directiveValue) +</div><div class='line' id='LC13594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39;).contents();</div><div class='line' id='LC13595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compileNode = $template[0];</div><div class='line' id='LC13596'><br/></div><div class='line' id='LC13597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($template.length != 1 || compileNode.nodeType !== 1) {</div><div class='line' id='LC13598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(MULTI_ROOT_TEMPLATE_ERROR + directiveValue);</div><div class='line' id='LC13599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13600'><br/></div><div class='line' id='LC13601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceWith(jqCollection, $compileNode, compileNode);</div><div class='line' id='LC13602'><br/></div><div class='line' id='LC13603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var newTemplateAttrs = {$attr: {}};</div><div class='line' id='LC13604'><br/></div><div class='line' id='LC13605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// combine directives from the original node and from the template:</div><div class='line' id='LC13606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - take the array of directives for this element</div><div class='line' id='LC13607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - split it into two parts, those that were already applied and those that weren&#39;t</div><div class='line' id='LC13608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - collect directives from the template, add them to the second group and sort them</div><div class='line' id='LC13609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// - append the second group with new directives to the first group</div><div class='line' id='LC13610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives = directives.concat(</div><div class='line' id='LC13611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collectDirectives(</div><div class='line' id='LC13612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compileNode,</div><div class='line' id='LC13613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.splice(i + 1, directives.length - (i + 1)),</div><div class='line' id='LC13614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newTemplateAttrs</div><div class='line' id='LC13615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class='line' id='LC13616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC13617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mergeTemplateAttributes(templateAttrs, newTemplateAttrs);</div><div class='line' id='LC13618'><br/></div><div class='line' id='LC13619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii = directives.length;</div><div class='line' id='LC13620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode.html(directiveValue);</div><div class='line' id='LC13622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13624'><br/></div><div class='line' id='LC13625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directive.templateUrl) {</div><div class='line' id='LC13626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertNoDuplicate(&#39;template&#39;, templateDirective, directive, $compileNode);</div><div class='line' id='LC13627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateDirective = directive;</div><div class='line' id='LC13628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i),</div><div class='line' id='LC13629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn, $compileNode, templateAttrs, jqCollection, directive.replace,</div><div class='line' id='LC13630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childTranscludeFn);</div><div class='line' id='LC13631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii = directives.length;</div><div class='line' id='LC13632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (directive.compile) {</div><div class='line' id='LC13633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);</div><div class='line' id='LC13635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isFunction(linkFn)) {</div><div class='line' id='LC13636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addLinkFns(null, linkFn);</div><div class='line' id='LC13637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (linkFn) {</div><div class='line' id='LC13638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addLinkFns(linkFn.pre, linkFn.post);</div><div class='line' id='LC13639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e, startingTag($compileNode));</div><div class='line' id='LC13642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13644'><br/></div><div class='line' id='LC13645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (directive.terminal) {</div><div class='line' id='LC13646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn.terminal = true;</div><div class='line' id='LC13647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;terminalPriority = Math.max(terminalPriority, directive.priority);</div><div class='line' id='LC13648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13649'><br/></div><div class='line' id='LC13650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13651'><br/></div><div class='line' id='LC13652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn.scope = newScopeDirective &amp;&amp; newScopeDirective.scope;</div><div class='line' id='LC13653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeLinkFn.transclude = transcludeDirective &amp;&amp; childTranscludeFn;</div><div class='line' id='LC13654'><br/></div><div class='line' id='LC13655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// might be normal or delayed nodeLinkFn depending on if templateUrl is present</div><div class='line' id='LC13656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nodeLinkFn;</div><div class='line' id='LC13657'><br/></div><div class='line' id='LC13658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;////////////////////</div><div class='line' id='LC13659'><br/></div><div class='line' id='LC13660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function addLinkFns(pre, post) {</div><div class='line' id='LC13661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pre) {</div><div class='line' id='LC13662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre.require = directive.require;</div><div class='line' id='LC13663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preLinkFns.push(pre);</div><div class='line' id='LC13664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (post) {</div><div class='line' id='LC13666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post.require = directive.require;</div><div class='line' id='LC13667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postLinkFns.push(post);</div><div class='line' id='LC13668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13670'><br/></div><div class='line' id='LC13671'><br/></div><div class='line' id='LC13672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function getControllers(require, $element) {</div><div class='line' id='LC13673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value, retrievalMethod = &#39;data&#39;, optional = false;</div><div class='line' id='LC13674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(require)) {</div><div class='line' id='LC13675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while((value = require.charAt(0)) == &#39;^&#39; || value == &#39;?&#39;) {</div><div class='line' id='LC13676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require = require.substr(1);</div><div class='line' id='LC13677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == &#39;^&#39;) {</div><div class='line' id='LC13678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retrievalMethod = &#39;inheritedData&#39;;</div><div class='line' id='LC13679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optional = optional || value == &#39;?&#39;;</div><div class='line' id='LC13681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = $element[retrievalMethod](&#39;$&#39; + require + &#39;Controller&#39;);</div><div class='line' id='LC13683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!value &amp;&amp; !optional) {</div><div class='line' id='LC13684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;No controller: &quot; + require);</div><div class='line' id='LC13685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC13687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isArray(require)) {</div><div class='line' id='LC13688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = [];</div><div class='line' id='LC13689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(require, function(require) {</div><div class='line' id='LC13690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.push(getControllers(require, $element));</div><div class='line' id='LC13691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC13694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13695'><br/></div><div class='line' id='LC13696'><br/></div><div class='line' id='LC13697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {</div><div class='line' id='LC13698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var attrs, $element, i, ii, linkFn, controller;</div><div class='line' id='LC13699'><br/></div><div class='line' id='LC13700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (compileNode === linkNode) {</div><div class='line' id='LC13701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs = templateAttrs;</div><div class='line' id='LC13702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs = shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));</div><div class='line' id='LC13704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element = attrs.$$element;</div><div class='line' id='LC13706'><br/></div><div class='line' id='LC13707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newIsolateScopeDirective) {</div><div class='line' id='LC13708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var LOCAL_REGEXP = /^\s*([@=&amp;])\s*(\w*)\s*$/;</div><div class='line' id='LC13709'><br/></div><div class='line' id='LC13710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parentScope = scope.$parent || scope;</div><div class='line' id='LC13711'><br/></div><div class='line' id='LC13712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(newIsolateScopeDirective.scope, function(definiton, scopeName) {</div><div class='line' id='LC13713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = definiton.match(LOCAL_REGEXP) || [],</div><div class='line' id='LC13714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrName = match[2]|| scopeName,</div><div class='line' id='LC13715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mode = match[1], // @, =, or &amp;</div><div class='line' id='LC13716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastValue,</div><div class='line' id='LC13717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentGet, parentSet;</div><div class='line' id='LC13718'><br/></div><div class='line' id='LC13719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$$isolateBindings[scopeName] = mode + attrName;</div><div class='line' id='LC13720'><br/></div><div class='line' id='LC13721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (mode) {</div><div class='line' id='LC13722'><br/></div><div class='line' id='LC13723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;@&#39;: {</div><div class='line' id='LC13724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs.$observe(attrName, function(value) {</div><div class='line' id='LC13725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope[scopeName] = value;</div><div class='line' id='LC13726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs.$$observers[attrName].$$scope = parentScope;</div><div class='line' id='LC13728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13730'><br/></div><div class='line' id='LC13731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;=&#39;: {</div><div class='line' id='LC13732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentGet = $parse(attrs[attrName]);</div><div class='line' id='LC13733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentSet = parentGet.assign || function() {</div><div class='line' id='LC13734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// reset the change, or we will throw this exception on every $digest</div><div class='line' id='LC13735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastValue = scope[scopeName] = parentGet(parentScope);</div><div class='line' id='LC13736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + attrs[attrName] +</div><div class='line' id='LC13737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; (directive: &#39; + newIsolateScopeDirective.name + &#39;)&#39;);</div><div class='line' id='LC13738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastValue = scope[scopeName] = parentGet(parentScope);</div><div class='line' id='LC13740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(function parentValueWatch() {</div><div class='line' id='LC13741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parentValue = parentGet(parentScope);</div><div class='line' id='LC13742'><br/></div><div class='line' id='LC13743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentValue !== scope[scopeName]) {</div><div class='line' id='LC13744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are out of sync and need to copy</div><div class='line' id='LC13745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentValue !== lastValue) {</div><div class='line' id='LC13746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// parent changed and it has precedence</div><div class='line' id='LC13747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastValue = scope[scopeName] = parentValue;</div><div class='line' id='LC13748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if the parent can be assigned then do so</div><div class='line' id='LC13750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentSet(parentScope, parentValue = lastValue = scope[scopeName]);</div><div class='line' id='LC13751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parentValue;</div><div class='line' id='LC13754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13757'><br/></div><div class='line' id='LC13758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;&amp;&#39;: {</div><div class='line' id='LC13759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentGet = $parse(attrs[attrName]);</div><div class='line' id='LC13760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope[scopeName] = function(locals) {</div><div class='line' id='LC13761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parentGet(parentScope, locals);</div><div class='line' id='LC13762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC13764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13765'><br/></div><div class='line' id='LC13766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: {</div><div class='line' id='LC13767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Invalid isolate scope definition for directive &#39; +</div><div class='line' id='LC13768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newIsolateScopeDirective.name + &#39;: &#39; + definiton);</div><div class='line' id='LC13769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13773'><br/></div><div class='line' id='LC13774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (controllerDirectives) {</div><div class='line' id='LC13775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(controllerDirectives, function(directive) {</div><div class='line' id='LC13776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var locals = {</div><div class='line' id='LC13777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope: scope,</div><div class='line' id='LC13778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element: $element,</div><div class='line' id='LC13779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$attrs: attrs,</div><div class='line' id='LC13780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$transclude: boundTranscludeFn</div><div class='line' id='LC13781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13782'><br/></div><div class='line' id='LC13783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller = directive.controller;</div><div class='line' id='LC13784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (controller == &#39;@&#39;) {</div><div class='line' id='LC13785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller = attrs[directive.name];</div><div class='line' id='LC13786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13787'><br/></div><div class='line' id='LC13788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.data(</div><div class='line' id='LC13789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;$&#39; + directive.name + &#39;Controller&#39;,</div><div class='line' id='LC13790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$controller(controller, locals));</div><div class='line' id='LC13791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13793'><br/></div><div class='line' id='LC13794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// PRELINKING</div><div class='line' id='LC13795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i = 0, ii = preLinkFns.length; i &lt; ii; i++) {</div><div class='line' id='LC13796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn = preLinkFns[i];</div><div class='line' id='LC13798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn(scope, $element, attrs,</div><div class='line' id='LC13799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn.require &amp;&amp; getControllers(linkFn.require, $element));</div><div class='line' id='LC13800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e, startingTag($element));</div><div class='line' id='LC13802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13804'><br/></div><div class='line' id='LC13805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// RECURSION</div><div class='line' id='LC13806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childLinkFn &amp;&amp; childLinkFn(scope, linkNode.childNodes, undefined, boundTranscludeFn);</div><div class='line' id='LC13807'><br/></div><div class='line' id='LC13808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// POSTLINKING</div><div class='line' id='LC13809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i = 0, ii = postLinkFns.length; i &lt; ii; i++) {</div><div class='line' id='LC13810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn = postLinkFns[i];</div><div class='line' id='LC13812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn(scope, $element, attrs,</div><div class='line' id='LC13813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkFn.require &amp;&amp; getControllers(linkFn.require, $element));</div><div class='line' id='LC13814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e, startingTag($element));</div><div class='line' id='LC13816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13819'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13820'><br/></div><div class='line' id='LC13821'><br/></div><div class='line' id='LC13822'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* looks up the directive and decorates it with exception handling and proper parameters. We</div><div class='line' id='LC13824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* call this the boundDirective.</div><div class='line' id='LC13825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name name of the directive to look up.</div><div class='line' id='LC13827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} location The directive must be found in specific format.</div><div class='line' id='LC13828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   String containing any of theses characters:</div><div class='line' id='LC13829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   * `E`: element name</div><div class='line' id='LC13831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   * `A&#39;: attribute</div><div class='line' id='LC13832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   * `C`: class</div><div class='line' id='LC13833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   * `M`: comment</div><div class='line' id='LC13834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns true if directive was added.</div><div class='line' id='LC13835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13836'>&nbsp;&nbsp;&nbsp;&nbsp;function addDirective(tDirectives, name, location, maxPriority) {</div><div class='line' id='LC13837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = false;</div><div class='line' id='LC13838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hasDirectives.hasOwnProperty(name)) {</div><div class='line' id='LC13839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var directive, directives = $injector.get(name + Suffix),</div><div class='line' id='LC13840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0, ii = directives.length; i&lt;ii; i++) {</div><div class='line' id='LC13841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive = directives[i];</div><div class='line' id='LC13843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( (maxPriority === undefined || maxPriority &gt; directive.priority) &amp;&amp;</div><div class='line' id='LC13844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.restrict.indexOf(location) != -1) {</div><div class='line' id='LC13845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tDirectives.push(directive);</div><div class='line' id='LC13846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = true;</div><div class='line' id='LC13847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) { $exceptionHandler(e); }</div><div class='line' id='LC13849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return match;</div><div class='line' id='LC13852'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13853'><br/></div><div class='line' id='LC13854'><br/></div><div class='line' id='LC13855'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* When the element is replaced with HTML template then the new attributes</div><div class='line' id='LC13857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* on the template need to be merged with the existing attributes in the DOM.</div><div class='line' id='LC13858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The desired effect is to have both of the attributes present.</div><div class='line' id='LC13859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC13860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {object} dst destination attributes (original DOM)</div><div class='line' id='LC13861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {object} src source attributes (from the directive template)</div><div class='line' id='LC13862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13863'>&nbsp;&nbsp;&nbsp;&nbsp;function mergeTemplateAttributes(dst, src) {</div><div class='line' id='LC13864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var srcAttr = src.$attr,</div><div class='line' id='LC13865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dstAttr = dst.$attr,</div><div class='line' id='LC13866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element = dst.$$element;</div><div class='line' id='LC13867'><br/></div><div class='line' id='LC13868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// reapply the old attributes to the new element</div><div class='line' id='LC13869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(dst, function(value, key) {</div><div class='line' id='LC13870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key.charAt(0) != &#39;$&#39;) {</div><div class='line' id='LC13871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (src[key]) {</div><div class='line' id='LC13872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value += (key === &#39;style&#39; ? &#39;;&#39; : &#39; &#39;) + src[key];</div><div class='line' id='LC13873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst.$set(key, value, true, srcAttr[key]);</div><div class='line' id='LC13875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13877'><br/></div><div class='line' id='LC13878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// copy the new attributes on the old attrs object</div><div class='line' id='LC13879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(src, function(value, key) {</div><div class='line' id='LC13880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key == &#39;class&#39;) {</div><div class='line' id='LC13881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;safeAddClass($element, value);</div><div class='line' id='LC13882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst[&#39;class&#39;] = (dst[&#39;class&#39;] ? dst[&#39;class&#39;] + &#39; &#39; : &#39;&#39;) + value;</div><div class='line' id='LC13883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (key == &#39;style&#39;) {</div><div class='line' id='LC13884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.attr(&#39;style&#39;, $element.attr(&#39;style&#39;) + &#39;;&#39; + value);</div><div class='line' id='LC13885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (key.charAt(0) != &#39;$&#39; &amp;&amp; !dst.hasOwnProperty(key)) {</div><div class='line' id='LC13886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst[key] = value;</div><div class='line' id='LC13887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dstAttr[key] = srcAttr[key];</div><div class='line' id='LC13888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13890'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13891'><br/></div><div class='line' id='LC13892'><br/></div><div class='line' id='LC13893'>&nbsp;&nbsp;&nbsp;&nbsp;function compileTemplateUrl(directives, beforeTemplateNodeLinkFn, $compileNode, tAttrs,</div><div class='line' id='LC13894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootElement, replace, childTranscludeFn) {</div><div class='line' id='LC13895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var linkQueue = [],</div><div class='line' id='LC13896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateNodeLinkFn,</div><div class='line' id='LC13897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateChildLinkFn,</div><div class='line' id='LC13898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeTemplateCompileNode = $compileNode[0],</div><div class='line' id='LC13899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origAsyncDirective = directives.shift(),</div><div class='line' id='LC13900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The fact that we have to copy and patch the directive seems wrong!</div><div class='line' id='LC13901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;derivedSyncDirective = extend({}, origAsyncDirective, {</div><div class='line' id='LC13902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: null, templateUrl: null, transclude: null, scope: null</div><div class='line' id='LC13903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13904'><br/></div><div class='line' id='LC13905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode.html(&#39;&#39;);</div><div class='line' id='LC13906'><br/></div><div class='line' id='LC13907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http.get(origAsyncDirective.templateUrl, {cache: $templateCache}).</div><div class='line' id='LC13908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success(function(content) {</div><div class='line' id='LC13909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var compileNode, tempTemplateAttrs, $template;</div><div class='line' id='LC13910'><br/></div><div class='line' id='LC13911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content = denormalizeTemplate(content);</div><div class='line' id='LC13912'><br/></div><div class='line' id='LC13913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (replace) {</div><div class='line' id='LC13914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$template = jqLite(&#39;&lt;div&gt;&#39; + trim(content) + &#39;&lt;/div&gt;&#39;).contents();</div><div class='line' id='LC13915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compileNode = $template[0];</div><div class='line' id='LC13916'><br/></div><div class='line' id='LC13917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($template.length != 1 || compileNode.nodeType !== 1) {</div><div class='line' id='LC13918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(MULTI_ROOT_TEMPLATE_ERROR + content);</div><div class='line' id='LC13919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13920'><br/></div><div class='line' id='LC13921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempTemplateAttrs = {$attr: {}};</div><div class='line' id='LC13922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceWith($rootElement, $compileNode, compileNode);</div><div class='line' id='LC13923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collectDirectives(compileNode, directives, tempTemplateAttrs);</div><div class='line' id='LC13924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mergeTemplateAttributes(tAttrs, tempTemplateAttrs);</div><div class='line' id='LC13925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compileNode = beforeTemplateCompileNode;</div><div class='line' id='LC13927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compileNode.html(content);</div><div class='line' id='LC13928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13929'><br/></div><div class='line' id='LC13930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.unshift(derivedSyncDirective);</div><div class='line' id='LC13931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn);</div><div class='line' id='LC13932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);</div><div class='line' id='LC13933'><br/></div><div class='line' id='LC13934'><br/></div><div class='line' id='LC13935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(linkQueue.length) {</div><div class='line' id='LC13936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var controller = linkQueue.pop(),</div><div class='line' id='LC13937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkRootElement = linkQueue.pop(),</div><div class='line' id='LC13938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeTemplateLinkNode = linkQueue.pop(),</div><div class='line' id='LC13939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = linkQueue.pop(),</div><div class='line' id='LC13940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkNode = compileNode;</div><div class='line' id='LC13941'><br/></div><div class='line' id='LC13942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {</div><div class='line' id='LC13943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// it was cloned therefore we have to clone as well.</div><div class='line' id='LC13944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkNode = JQLiteClone(compileNode);</div><div class='line' id='LC13945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);</div><div class='line' id='LC13946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13947'><br/></div><div class='line' id='LC13948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateNodeLinkFn(function() {</div><div class='line' id='LC13949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, controller);</div><div class='line' id='LC13950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, scope, linkNode, $rootElement, controller);</div><div class='line' id='LC13951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkQueue = null;</div><div class='line' id='LC13953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).</div><div class='line' id='LC13954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(function(response, code, headers, config) {</div><div class='line' id='LC13955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Failed to load template: &#39; + config.url);</div><div class='line' id='LC13956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13957'><br/></div><div class='line' id='LC13958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, controller) {</div><div class='line' id='LC13959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (linkQueue) {</div><div class='line' id='LC13960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkQueue.push(scope);</div><div class='line' id='LC13961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkQueue.push(node);</div><div class='line' id='LC13962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkQueue.push(rootElement);</div><div class='line' id='LC13963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linkQueue.push(controller);</div><div class='line' id='LC13964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterTemplateNodeLinkFn(function() {</div><div class='line' id='LC13966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, controller);</div><div class='line' id='LC13967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, scope, node, rootElement, controller);</div><div class='line' id='LC13968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13970'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13971'><br/></div><div class='line' id='LC13972'><br/></div><div class='line' id='LC13973'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC13974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Sorting function for bound directives.</div><div class='line' id='LC13975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC13976'>&nbsp;&nbsp;&nbsp;&nbsp;function byPriority(a, b) {</div><div class='line' id='LC13977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return b.priority - a.priority;</div><div class='line' id='LC13978'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13979'><br/></div><div class='line' id='LC13980'><br/></div><div class='line' id='LC13981'>&nbsp;&nbsp;&nbsp;&nbsp;function assertNoDuplicate(what, previousDirective, directive, element) {</div><div class='line' id='LC13982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (previousDirective) {</div><div class='line' id='LC13983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Multiple directives [&#39; + previousDirective.name + &#39;, &#39; +</div><div class='line' id='LC13984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive.name + &#39;] asking for &#39; + what + &#39; on: &#39; +  startingTag(element));</div><div class='line' id='LC13985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13986'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13987'><br/></div><div class='line' id='LC13988'><br/></div><div class='line' id='LC13989'>&nbsp;&nbsp;&nbsp;&nbsp;function addTextInterpolateDirective(directives, text) {</div><div class='line' id='LC13990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var interpolateFn = $interpolate(text, true);</div><div class='line' id='LC13991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (interpolateFn) {</div><div class='line' id='LC13992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.push({</div><div class='line' id='LC13993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;priority: 0,</div><div class='line' id='LC13994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compile: valueFn(function textInterpolateLinkFn(scope, node) {</div><div class='line' id='LC13995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent = node.parent(),</div><div class='line' id='LC13996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings = parent.data(&#39;$binding&#39;) || [];</div><div class='line' id='LC13997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings.push(interpolateFn);</div><div class='line' id='LC13998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;safeAddClass(parent.data(&#39;$binding&#39;, bindings), &#39;ng-binding&#39;);</div><div class='line' id='LC13999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {</div><div class='line' id='LC14000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node[0].nodeValue = value;</div><div class='line' id='LC14001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC14003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14005'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14006'><br/></div><div class='line' id='LC14007'><br/></div><div class='line' id='LC14008'>&nbsp;&nbsp;&nbsp;&nbsp;function addAttrInterpolateDirective(node, directives, value, name) {</div><div class='line' id='LC14009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var interpolateFn = $interpolate(value, true);</div><div class='line' id='LC14010'><br/></div><div class='line' id='LC14011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no interpolation found -&gt; ignore</div><div class='line' id='LC14012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!interpolateFn) return;</div><div class='line' id='LC14013'><br/></div><div class='line' id='LC14014'><br/></div><div class='line' id='LC14015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directives.push({</div><div class='line' id='LC14016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;priority: 100,</div><div class='line' id='LC14017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compile: valueFn(function attrInterpolateLinkFn(scope, element, attr) {</div><div class='line' id='LC14018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $$observers = (attr.$$observers || (attr.$$observers = {}));</div><div class='line' id='LC14019'><br/></div><div class='line' id='LC14020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name === &#39;class&#39;) {</div><div class='line' id='LC14021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we need to interpolate classes again, in the case the element was replaced</div><div class='line' id='LC14022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// and therefore the two class attrs got merged - we want to interpolate the result</div><div class='line' id='LC14023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpolateFn = $interpolate(attr[name], true);</div><div class='line' id='LC14024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14025'><br/></div><div class='line' id='LC14026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr[name] = undefined;</div><div class='line' id='LC14027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;($$observers[name] || ($$observers[name] = [])).$$inter = true;</div><div class='line' id='LC14028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(attr.$$observers &amp;&amp; attr.$$observers[name].$$scope || scope).</div><div class='line' id='LC14029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$watch(interpolateFn, function interpolateFnWatchAction(value) {</div><div class='line' id='LC14030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(name, value);</div><div class='line' id='LC14031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC14033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14034'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14035'><br/></div><div class='line' id='LC14036'><br/></div><div class='line' id='LC14037'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC14038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* This is a special jqLite.replaceWith, which can replace items which</div><div class='line' id='LC14039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* have no parents, provided that the containing jqLite collection is provided.</div><div class='line' id='LC14040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes</div><div class='line' id='LC14042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    in the root of the tree.</div><div class='line' id='LC14043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {JqLite} $element The jqLite element which we are going to replace. We keep the shell,</div><div class='line' id='LC14044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    but replace its DOM node reference.</div><div class='line' id='LC14045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Node} newNode The new DOM node.</div><div class='line' id='LC14046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14047'>&nbsp;&nbsp;&nbsp;&nbsp;function replaceWith($rootElement, $element, newNode) {</div><div class='line' id='LC14048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oldNode = $element[0],</div><div class='line' id='LC14049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = oldNode.parentNode,</div><div class='line' id='LC14050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i, ii;</div><div class='line' id='LC14051'><br/></div><div class='line' id='LC14052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootElement) {</div><div class='line' id='LC14053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i = 0, ii = $rootElement.length; i &lt; ii; i++) {</div><div class='line' id='LC14054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootElement[i] == oldNode) {</div><div class='line' id='LC14055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootElement[i] = newNode;</div><div class='line' id='LC14056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC14057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14060'><br/></div><div class='line' id='LC14061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parent) {</div><div class='line' id='LC14062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.replaceChild(newNode, oldNode);</div><div class='line' id='LC14063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14064'><br/></div><div class='line' id='LC14065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newNode[jqLite.expando] = oldNode[jqLite.expando];</div><div class='line' id='LC14066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element[0] = newNode;</div><div class='line' id='LC14067'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14068'>&nbsp;&nbsp;}];</div><div class='line' id='LC14069'>}</div><div class='line' id='LC14070'><br/></div><div class='line' id='LC14071'>var PREFIX_REGEXP = /^(x[\:\-_]|data[\:\-_])/i;</div><div class='line' id='LC14072'>/**</div><div class='line' id='LC14073'>&nbsp;* Converts all accepted directives format into proper directive name.</div><div class='line' id='LC14074'>&nbsp;* All of these will become &#39;myDirective&#39;:</div><div class='line' id='LC14075'>&nbsp;*   my:DiRective</div><div class='line' id='LC14076'>&nbsp;*   my-directive</div><div class='line' id='LC14077'>&nbsp;*   x-my-directive</div><div class='line' id='LC14078'>&nbsp;*   data-my:directive</div><div class='line' id='LC14079'>&nbsp;*</div><div class='line' id='LC14080'>&nbsp;* Also there is special case for Moz prefix starting with upper case letter.</div><div class='line' id='LC14081'>&nbsp;* @param name Name to normalize</div><div class='line' id='LC14082'>&nbsp;*/</div><div class='line' id='LC14083'>function directiveNormalize(name) {</div><div class='line' id='LC14084'>&nbsp;&nbsp;return camelCase(name.replace(PREFIX_REGEXP, &#39;&#39;));</div><div class='line' id='LC14085'>}</div><div class='line' id='LC14086'><br/></div><div class='line' id='LC14087'>/**</div><div class='line' id='LC14088'>&nbsp;* @ngdoc object</div><div class='line' id='LC14089'>&nbsp;* @name ng.$compile.directive.Attributes</div><div class='line' id='LC14090'>&nbsp;* @description</div><div class='line' id='LC14091'>&nbsp;*</div><div class='line' id='LC14092'>&nbsp;* A shared object between directive compile / linking functions which contains normalized DOM element</div><div class='line' id='LC14093'>&nbsp;* attributes. The the values reflect current binding state `{{ }}`. The normalization is needed</div><div class='line' id='LC14094'>&nbsp;* since all of these are treated as equivalent in Angular:</div><div class='line' id='LC14095'>&nbsp;*</div><div class='line' id='LC14096'>&nbsp;*          &lt;span ng:bind=&quot;a&quot; ng-bind=&quot;a&quot; data-ng-bind=&quot;a&quot; x-ng-bind=&quot;a&quot;&gt;</div><div class='line' id='LC14097'>&nbsp;*/</div><div class='line' id='LC14098'><br/></div><div class='line' id='LC14099'>/**</div><div class='line' id='LC14100'>&nbsp;* @ngdoc property</div><div class='line' id='LC14101'>&nbsp;* @name ng.$compile.directive.Attributes#$attr</div><div class='line' id='LC14102'>&nbsp;* @propertyOf ng.$compile.directive.Attributes</div><div class='line' id='LC14103'>&nbsp;* @returns {object} A map of DOM element attribute names to the normalized name. This is</div><div class='line' id='LC14104'>&nbsp;*          needed to do reverse lookup from normalized name back to actual name.</div><div class='line' id='LC14105'>&nbsp;*/</div><div class='line' id='LC14106'><br/></div><div class='line' id='LC14107'><br/></div><div class='line' id='LC14108'>/**</div><div class='line' id='LC14109'>&nbsp;* @ngdoc function</div><div class='line' id='LC14110'>&nbsp;* @name ng.$compile.directive.Attributes#$set</div><div class='line' id='LC14111'>&nbsp;* @methodOf ng.$compile.directive.Attributes</div><div class='line' id='LC14112'>&nbsp;* @function</div><div class='line' id='LC14113'>&nbsp;*</div><div class='line' id='LC14114'>&nbsp;* @description</div><div class='line' id='LC14115'>&nbsp;* Set DOM element attribute value.</div><div class='line' id='LC14116'>&nbsp;*</div><div class='line' id='LC14117'>&nbsp;*</div><div class='line' id='LC14118'>&nbsp;* @param {string} name Normalized element attribute name of the property to modify. The name is</div><div class='line' id='LC14119'>&nbsp;*          revers translated using the {@link ng.$compile.directive.Attributes#$attr $attr}</div><div class='line' id='LC14120'>&nbsp;*          property to the original name.</div><div class='line' id='LC14121'>&nbsp;* @param {string} value Value to set the attribute to.</div><div class='line' id='LC14122'>&nbsp;*/</div><div class='line' id='LC14123'><br/></div><div class='line' id='LC14124'><br/></div><div class='line' id='LC14125'><br/></div><div class='line' id='LC14126'>/**</div><div class='line' id='LC14127'>&nbsp;* Closure compiler type information</div><div class='line' id='LC14128'>&nbsp;*/</div><div class='line' id='LC14129'><br/></div><div class='line' id='LC14130'>function nodesetLinkingFn(</div><div class='line' id='LC14131'>&nbsp;&nbsp;/* angular.Scope */ scope,</div><div class='line' id='LC14132'>&nbsp;&nbsp;/* NodeList */ nodeList,</div><div class='line' id='LC14133'>&nbsp;&nbsp;/* Element */ rootElement,</div><div class='line' id='LC14134'>&nbsp;&nbsp;/* function(Function) */ boundTranscludeFn</div><div class='line' id='LC14135'>){}</div><div class='line' id='LC14136'><br/></div><div class='line' id='LC14137'>function directiveLinkingFn(</div><div class='line' id='LC14138'>&nbsp;&nbsp;/* nodesetLinkingFn */ nodesetLinkingFn,</div><div class='line' id='LC14139'>&nbsp;&nbsp;/* angular.Scope */ scope,</div><div class='line' id='LC14140'>&nbsp;&nbsp;/* Node */ node,</div><div class='line' id='LC14141'>&nbsp;&nbsp;/* Element */ rootElement,</div><div class='line' id='LC14142'>&nbsp;&nbsp;/* function(Function) */ boundTranscludeFn</div><div class='line' id='LC14143'>){}</div><div class='line' id='LC14144'><br/></div><div class='line' id='LC14145'>/**</div><div class='line' id='LC14146'>&nbsp;* @ngdoc object</div><div class='line' id='LC14147'>&nbsp;* @name ng.$controllerProvider</div><div class='line' id='LC14148'>&nbsp;* @description</div><div class='line' id='LC14149'>&nbsp;* The {@link ng.$controller $controller service} is used by Angular to create new</div><div class='line' id='LC14150'>&nbsp;* controllers.</div><div class='line' id='LC14151'>&nbsp;*</div><div class='line' id='LC14152'>&nbsp;* This provider allows controller registration via the</div><div class='line' id='LC14153'>&nbsp;* {@link ng.$controllerProvider#register register} method.</div><div class='line' id='LC14154'>&nbsp;*/</div><div class='line' id='LC14155'>function $ControllerProvider() {</div><div class='line' id='LC14156'>&nbsp;&nbsp;var controllers = {};</div><div class='line' id='LC14157'><br/></div><div class='line' id='LC14158'><br/></div><div class='line' id='LC14159'>&nbsp;&nbsp;/**</div><div class='line' id='LC14160'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC14161'>&nbsp;&nbsp;&nbsp;* @name ng.$controllerProvider#register</div><div class='line' id='LC14162'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$controllerProvider</div><div class='line' id='LC14163'>&nbsp;&nbsp;&nbsp;* @param {string} name Controller name</div><div class='line' id='LC14164'>&nbsp;&nbsp;&nbsp;* @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI</div><div class='line' id='LC14165'>&nbsp;&nbsp;&nbsp;*    annotations in the array notation).</div><div class='line' id='LC14166'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14167'>&nbsp;&nbsp;this.register = function(name, constructor) {</div><div class='line' id='LC14168'>&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(name)) {</div><div class='line' id='LC14169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extend(controllers, name)</div><div class='line' id='LC14170'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controllers[name] = constructor;</div><div class='line' id='LC14172'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14173'>&nbsp;&nbsp;};</div><div class='line' id='LC14174'><br/></div><div class='line' id='LC14175'><br/></div><div class='line' id='LC14176'>&nbsp;&nbsp;this.$get = [&#39;$injector&#39;, &#39;$window&#39;, function($injector, $window) {</div><div class='line' id='LC14177'><br/></div><div class='line' id='LC14178'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC14179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC14180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$controller</div><div class='line' id='LC14181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $injector</div><div class='line' id='LC14182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function|string} constructor If called with a function then it&#39;s considered to be the</div><div class='line' id='LC14184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    controller constructor function. Otherwise it&#39;s considered to be a string which is used</div><div class='line' id='LC14185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    to retrieve the controller constructor using the following steps:</div><div class='line' id='LC14186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    * check if a controller with given name is registered via `$controllerProvider`</div><div class='line' id='LC14188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    * check if evaluating the string on the current scope returns a constructor</div><div class='line' id='LC14189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    * check `window[constructor]` on the global `window` object</div><div class='line' id='LC14190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} locals Injection locals for Controller.</div><div class='line' id='LC14192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Instance of given controller.</div><div class='line' id='LC14193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$controller` service is responsible for instantiating controllers.</div><div class='line' id='LC14196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* It&#39;s just a simple call to {@link AUTO.$injector $injector}, but extracted into</div><div class='line' id='LC14198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* a service, so that one can override this service with {@link https://gist.github.com/1649788</div><div class='line' id='LC14199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* BC version}.</div><div class='line' id='LC14200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14201'>&nbsp;&nbsp;&nbsp;&nbsp;return function(constructor, locals) {</div><div class='line' id='LC14202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isString(constructor)) {</div><div class='line' id='LC14203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name = constructor;</div><div class='line' id='LC14204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constructor = controllers.hasOwnProperty(name)</div><div class='line' id='LC14205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? controllers[name]</div><div class='line' id='LC14206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: getter(locals.$scope, name, true) || getter($window, name, true);</div><div class='line' id='LC14207'><br/></div><div class='line' id='LC14208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertArgFn(constructor, name, true);</div><div class='line' id='LC14209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14210'><br/></div><div class='line' id='LC14211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $injector.instantiate(constructor, locals);</div><div class='line' id='LC14212'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14213'>&nbsp;&nbsp;}];</div><div class='line' id='LC14214'>}</div><div class='line' id='LC14215'><br/></div><div class='line' id='LC14216'>/**</div><div class='line' id='LC14217'>&nbsp;* @ngdoc object</div><div class='line' id='LC14218'>&nbsp;* @name ng.$document</div><div class='line' id='LC14219'>&nbsp;* @requires $window</div><div class='line' id='LC14220'>&nbsp;*</div><div class='line' id='LC14221'>&nbsp;* @description</div><div class='line' id='LC14222'>&nbsp;* A {@link angular.element jQuery (lite)}-wrapped reference to the browser&#39;s `window.document`</div><div class='line' id='LC14223'>&nbsp;* element.</div><div class='line' id='LC14224'>&nbsp;*/</div><div class='line' id='LC14225'>function $DocumentProvider(){</div><div class='line' id='LC14226'>&nbsp;&nbsp;this.$get = [&#39;$window&#39;, function(window){</div><div class='line' id='LC14227'>&nbsp;&nbsp;&nbsp;&nbsp;return jqLite(window.document);</div><div class='line' id='LC14228'>&nbsp;&nbsp;}];</div><div class='line' id='LC14229'>}</div><div class='line' id='LC14230'><br/></div><div class='line' id='LC14231'>/**</div><div class='line' id='LC14232'>&nbsp;* @ngdoc function</div><div class='line' id='LC14233'>&nbsp;* @name ng.$exceptionHandler</div><div class='line' id='LC14234'>&nbsp;* @requires $log</div><div class='line' id='LC14235'>&nbsp;*</div><div class='line' id='LC14236'>&nbsp;* @description</div><div class='line' id='LC14237'>&nbsp;* Any uncaught exception in angular expressions is delegated to this service.</div><div class='line' id='LC14238'>&nbsp;* The default implementation simply delegates to `$log.error` which logs it into</div><div class='line' id='LC14239'>&nbsp;* the browser console.</div><div class='line' id='LC14240'>&nbsp;*</div><div class='line' id='LC14241'>&nbsp;* In unit tests, if `angular-mocks.js` is loaded, this service is overridden by</div><div class='line' id='LC14242'>&nbsp;* {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.</div><div class='line' id='LC14243'>&nbsp;*</div><div class='line' id='LC14244'>&nbsp;* @param {Error} exception Exception associated with the error.</div><div class='line' id='LC14245'>&nbsp;* @param {string=} cause optional information about the context in which</div><div class='line' id='LC14246'>&nbsp;*       the error was thrown.</div><div class='line' id='LC14247'>&nbsp;*</div><div class='line' id='LC14248'>&nbsp;*/</div><div class='line' id='LC14249'>function $ExceptionHandlerProvider() {</div><div class='line' id='LC14250'>&nbsp;&nbsp;this.$get = [&#39;$log&#39;, function($log) {</div><div class='line' id='LC14251'>&nbsp;&nbsp;&nbsp;&nbsp;return function(exception, cause) {</div><div class='line' id='LC14252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log.error.apply($log, arguments);</div><div class='line' id='LC14253'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14254'>&nbsp;&nbsp;}];</div><div class='line' id='LC14255'>}</div><div class='line' id='LC14256'><br/></div><div class='line' id='LC14257'>/**</div><div class='line' id='LC14258'>&nbsp;* @ngdoc object</div><div class='line' id='LC14259'>&nbsp;* @name ng.$interpolateProvider</div><div class='line' id='LC14260'>&nbsp;* @function</div><div class='line' id='LC14261'>&nbsp;*</div><div class='line' id='LC14262'>&nbsp;* @description</div><div class='line' id='LC14263'>&nbsp;*</div><div class='line' id='LC14264'>&nbsp;* Used for configuring the interpolation markup. Defaults to `{{` and `}}`.</div><div class='line' id='LC14265'>&nbsp;*/</div><div class='line' id='LC14266'>function $InterpolateProvider() {</div><div class='line' id='LC14267'>&nbsp;&nbsp;var startSymbol = &#39;{{&#39;;</div><div class='line' id='LC14268'>&nbsp;&nbsp;var endSymbol = &#39;}}&#39;;</div><div class='line' id='LC14269'><br/></div><div class='line' id='LC14270'>&nbsp;&nbsp;/**</div><div class='line' id='LC14271'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14272'>&nbsp;&nbsp;&nbsp;* @name ng.$interpolateProvider#startSymbol</div><div class='line' id='LC14273'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$interpolateProvider</div><div class='line' id='LC14274'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14275'>&nbsp;&nbsp;&nbsp;* Symbol to denote start of expression in the interpolated string. Defaults to `{{`.</div><div class='line' id='LC14276'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14277'>&nbsp;&nbsp;&nbsp;* @param {string=} value new value to set the starting symbol to.</div><div class='line' id='LC14278'>&nbsp;&nbsp;&nbsp;* @returns {string|self} Returns the symbol when used as getter and self if used as setter.</div><div class='line' id='LC14279'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14280'>&nbsp;&nbsp;this.startSymbol = function(value){</div><div class='line' id='LC14281'>&nbsp;&nbsp;&nbsp;&nbsp;if (value) {</div><div class='line' id='LC14282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startSymbol = value;</div><div class='line' id='LC14283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14284'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return startSymbol;</div><div class='line' id='LC14286'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14287'>&nbsp;&nbsp;};</div><div class='line' id='LC14288'><br/></div><div class='line' id='LC14289'>&nbsp;&nbsp;/**</div><div class='line' id='LC14290'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14291'>&nbsp;&nbsp;&nbsp;* @name ng.$interpolateProvider#endSymbol</div><div class='line' id='LC14292'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$interpolateProvider</div><div class='line' id='LC14293'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14294'>&nbsp;&nbsp;&nbsp;* Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.</div><div class='line' id='LC14295'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14296'>&nbsp;&nbsp;&nbsp;* @param {string=} value new value to set the ending symbol to.</div><div class='line' id='LC14297'>&nbsp;&nbsp;&nbsp;* @returns {string|self} Returns the symbol when used as getter and self if used as setter.</div><div class='line' id='LC14298'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14299'>&nbsp;&nbsp;this.endSymbol = function(value){</div><div class='line' id='LC14300'>&nbsp;&nbsp;&nbsp;&nbsp;if (value) {</div><div class='line' id='LC14301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;endSymbol = value;</div><div class='line' id='LC14302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14303'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return endSymbol;</div><div class='line' id='LC14305'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14306'>&nbsp;&nbsp;};</div><div class='line' id='LC14307'><br/></div><div class='line' id='LC14308'><br/></div><div class='line' id='LC14309'>&nbsp;&nbsp;this.$get = [&#39;$parse&#39;, function($parse) {</div><div class='line' id='LC14310'>&nbsp;&nbsp;&nbsp;&nbsp;var startSymbolLength = startSymbol.length,</div><div class='line' id='LC14311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;endSymbolLength = endSymbol.length;</div><div class='line' id='LC14312'><br/></div><div class='line' id='LC14313'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC14314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC14315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$interpolate</div><div class='line' id='LC14316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC14317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $parse</div><div class='line' id='LC14319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Compiles a string with markup into an interpolation function. This service is used by the</div><div class='line' id='LC14323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* HTML {@link ng.$compile $compile} service for data binding. See</div><div class='line' id='LC14324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$interpolateProvider $interpolateProvider} for configuring the</div><div class='line' id='LC14325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* interpolation markup.</div><div class='line' id='LC14326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;</div><div class='line' id='LC14329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $interpolate = ...; // injected</div><div class='line' id='LC14330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var exp = $interpolate(&#39;Hello {{name}}!&#39;);</div><div class='line' id='LC14331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(exp({name:&#39;Angular&#39;}).toEqual(&#39;Hello Angular!&#39;);</div><div class='line' id='LC14332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/pre&gt;</div><div class='line' id='LC14333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} text The text with markup to interpolate.</div><div class='line' id='LC14336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {boolean=} mustHaveExpression if set to true then the interpolation string must have</div><div class='line' id='LC14337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    embedded expression in order to return an interpolation function. Strings with no</div><div class='line' id='LC14338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    embedded expression will return null for the interpolation function.</div><div class='line' id='LC14339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {function(context)} an interpolation function which is used to compute the interpolated</div><div class='line' id='LC14340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    string. The function has these parameters:</div><div class='line' id='LC14341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    * `context`: an object against which any expressions embedded in the strings are evaluated</div><div class='line' id='LC14343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      against.</div><div class='line' id='LC14344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14346'>&nbsp;&nbsp;&nbsp;&nbsp;function $interpolate(text, mustHaveExpression) {</div><div class='line' id='LC14347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var startIndex,</div><div class='line' id='LC14348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;endIndex,</div><div class='line' id='LC14349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = 0,</div><div class='line' id='LC14350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts = [],</div><div class='line' id='LC14351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = text.length,</div><div class='line' id='LC14352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasInterpolation = false,</div><div class='line' id='LC14353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn,</div><div class='line' id='LC14354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exp,</div><div class='line' id='LC14355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concat = [];</div><div class='line' id='LC14356'><br/></div><div class='line' id='LC14357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(index &lt; length) {</div><div class='line' id='LC14358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &amp;&amp;</div><div class='line' id='LC14359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {</div><div class='line' id='LC14360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(index != startIndex) &amp;&amp; parts.push(text.substring(index, startIndex));</div><div class='line' id='LC14361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));</div><div class='line' id='LC14362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.exp = exp;</div><div class='line' id='LC14363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = endIndex + endSymbolLength;</div><div class='line' id='LC14364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasInterpolation = true;</div><div class='line' id='LC14365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we did not find anything, so we have to add the remainder to the parts array</div><div class='line' id='LC14367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(index != length) &amp;&amp; parts.push(text.substring(index));</div><div class='line' id='LC14368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = length;</div><div class='line' id='LC14369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14371'><br/></div><div class='line' id='LC14372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(length = parts.length)) {</div><div class='line' id='LC14373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we added, nothing, must have been an empty string.</div><div class='line' id='LC14374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts.push(&#39;&#39;);</div><div class='line' id='LC14375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = 1;</div><div class='line' id='LC14376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14377'><br/></div><div class='line' id='LC14378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mustHaveExpression  || hasInterpolation) {</div><div class='line' id='LC14379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concat.length = length;</div><div class='line' id='LC14380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn = function(context) {</div><div class='line' id='LC14381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var i = 0, ii = length, part; i&lt;ii; i++) {</div><div class='line' id='LC14382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof (part = parts[i]) == &#39;function&#39;) {</div><div class='line' id='LC14383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part = part(context);</div><div class='line' id='LC14384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (part == null || part == undefined) {</div><div class='line' id='LC14385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part = &#39;&#39;;</div><div class='line' id='LC14386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof part != &#39;string&#39;) {</div><div class='line' id='LC14387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;part = toJson(part);</div><div class='line' id='LC14388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concat[i] = part;</div><div class='line' id='LC14391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return concat.join(&#39;&#39;);</div><div class='line' id='LC14393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.exp = text;</div><div class='line' id='LC14395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.parts = parts;</div><div class='line' id='LC14396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn;</div><div class='line' id='LC14397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14398'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14399'><br/></div><div class='line' id='LC14400'><br/></div><div class='line' id='LC14401'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC14402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$interpolate#startSymbol</div><div class='line' id='LC14404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$interpolate</div><div class='line' id='LC14405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.</div><div class='line' id='LC14407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Use {@link ng.$interpolateProvider#startSymbol $interpolateProvider#startSymbol} to change</div><div class='line' id='LC14409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the symbol.</div><div class='line' id='LC14410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {string} start symbol.</div><div class='line' id='LC14412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14413'>&nbsp;&nbsp;&nbsp;&nbsp;$interpolate.startSymbol = function() {</div><div class='line' id='LC14414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return startSymbol;</div><div class='line' id='LC14415'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14416'><br/></div><div class='line' id='LC14417'><br/></div><div class='line' id='LC14418'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC14419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$interpolate#endSymbol</div><div class='line' id='LC14421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$interpolate</div><div class='line' id='LC14422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.</div><div class='line' id='LC14424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Use {@link ng.$interpolateProvider#endSymbol $interpolateProvider#endSymbol} to change</div><div class='line' id='LC14426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the symbol.</div><div class='line' id='LC14427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {string} start symbol.</div><div class='line' id='LC14429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14430'>&nbsp;&nbsp;&nbsp;&nbsp;$interpolate.endSymbol = function() {</div><div class='line' id='LC14431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return endSymbol;</div><div class='line' id='LC14432'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14433'><br/></div><div class='line' id='LC14434'>&nbsp;&nbsp;&nbsp;&nbsp;return $interpolate;</div><div class='line' id='LC14435'>&nbsp;&nbsp;}];</div><div class='line' id='LC14436'>}</div><div class='line' id='LC14437'><br/></div><div class='line' id='LC14438'>var URL_MATCH = /^([^:]+):\/\/(\w+:{0,1}\w*@)?(\{?[\w\.-]*\}?)(:([0-9]+))?(\/[^\?#]*)?(\?([^#]*))?(#(.*))?$/,</div><div class='line' id='LC14439'>&nbsp;&nbsp;&nbsp;&nbsp;PATH_MATCH = /^([^\?#]*)?(\?([^#]*))?(#(.*))?$/,</div><div class='line' id='LC14440'>&nbsp;&nbsp;&nbsp;&nbsp;HASH_MATCH = PATH_MATCH,</div><div class='line' id='LC14441'>&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_PORTS = {&#39;http&#39;: 80, &#39;https&#39;: 443, &#39;ftp&#39;: 21};</div><div class='line' id='LC14442'><br/></div><div class='line' id='LC14443'><br/></div><div class='line' id='LC14444'>/**</div><div class='line' id='LC14445'>&nbsp;* Encode path using encodeUriSegment, ignoring forward slashes</div><div class='line' id='LC14446'>&nbsp;*</div><div class='line' id='LC14447'>&nbsp;* @param {string} path Path to encode</div><div class='line' id='LC14448'>&nbsp;* @returns {string}</div><div class='line' id='LC14449'>&nbsp;*/</div><div class='line' id='LC14450'>function encodePath(path) {</div><div class='line' id='LC14451'>&nbsp;&nbsp;var segments = path.split(&#39;/&#39;),</div><div class='line' id='LC14452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = segments.length;</div><div class='line' id='LC14453'><br/></div><div class='line' id='LC14454'>&nbsp;&nbsp;while (i--) {</div><div class='line' id='LC14455'>&nbsp;&nbsp;&nbsp;&nbsp;segments[i] = encodeUriSegment(segments[i]);</div><div class='line' id='LC14456'>&nbsp;&nbsp;}</div><div class='line' id='LC14457'><br/></div><div class='line' id='LC14458'>&nbsp;&nbsp;return segments.join(&#39;/&#39;);</div><div class='line' id='LC14459'>}</div><div class='line' id='LC14460'><br/></div><div class='line' id='LC14461'>function stripHash(url) {</div><div class='line' id='LC14462'>&nbsp;&nbsp;return url.split(&#39;#&#39;)[0];</div><div class='line' id='LC14463'>}</div><div class='line' id='LC14464'><br/></div><div class='line' id='LC14465'><br/></div><div class='line' id='LC14466'>function matchUrl(url, obj) {</div><div class='line' id='LC14467'>&nbsp;&nbsp;var match = URL_MATCH.exec(url);</div><div class='line' id='LC14468'><br/></div><div class='line' id='LC14469'>&nbsp;&nbsp;match = {</div><div class='line' id='LC14470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protocol: match[1],</div><div class='line' id='LC14471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host: match[3],</div><div class='line' id='LC14472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port: int(match[5]) || DEFAULT_PORTS[match[1]] || null,</div><div class='line' id='LC14473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: match[6] || &#39;/&#39;,</div><div class='line' id='LC14474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;search: match[8],</div><div class='line' id='LC14475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash: match[10]</div><div class='line' id='LC14476'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14477'><br/></div><div class='line' id='LC14478'>&nbsp;&nbsp;if (obj) {</div><div class='line' id='LC14479'>&nbsp;&nbsp;&nbsp;&nbsp;obj.$$protocol = match.protocol;</div><div class='line' id='LC14480'>&nbsp;&nbsp;&nbsp;&nbsp;obj.$$host = match.host;</div><div class='line' id='LC14481'>&nbsp;&nbsp;&nbsp;&nbsp;obj.$$port = match.port;</div><div class='line' id='LC14482'>&nbsp;&nbsp;}</div><div class='line' id='LC14483'><br/></div><div class='line' id='LC14484'>&nbsp;&nbsp;return match;</div><div class='line' id='LC14485'>}</div><div class='line' id='LC14486'><br/></div><div class='line' id='LC14487'><br/></div><div class='line' id='LC14488'>function composeProtocolHostPort(protocol, host, port) {</div><div class='line' id='LC14489'>&nbsp;&nbsp;return protocol + &#39;://&#39; + host + (port == DEFAULT_PORTS[protocol] ? &#39;&#39; : &#39;:&#39; + port);</div><div class='line' id='LC14490'>}</div><div class='line' id='LC14491'><br/></div><div class='line' id='LC14492'><br/></div><div class='line' id='LC14493'>function pathPrefixFromBase(basePath) {</div><div class='line' id='LC14494'>&nbsp;&nbsp;return basePath.substr(0, basePath.lastIndexOf(&#39;/&#39;));</div><div class='line' id='LC14495'>}</div><div class='line' id='LC14496'><br/></div><div class='line' id='LC14497'><br/></div><div class='line' id='LC14498'>function convertToHtml5Url(url, basePath, hashPrefix) {</div><div class='line' id='LC14499'>&nbsp;&nbsp;var match = matchUrl(url);</div><div class='line' id='LC14500'><br/></div><div class='line' id='LC14501'>&nbsp;&nbsp;// already html5 url</div><div class='line' id='LC14502'>&nbsp;&nbsp;if (decodeURIComponent(match.path) != basePath || isUndefined(match.hash) ||</div><div class='line' id='LC14503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match.hash.indexOf(hashPrefix) !== 0) {</div><div class='line' id='LC14504'>&nbsp;&nbsp;&nbsp;&nbsp;return url;</div><div class='line' id='LC14505'>&nbsp;&nbsp;// convert hashbang url -&gt; html5 url</div><div class='line' id='LC14506'>&nbsp;&nbsp;} else {</div><div class='line' id='LC14507'>&nbsp;&nbsp;&nbsp;&nbsp;return composeProtocolHostPort(match.protocol, match.host, match.port) +</div><div class='line' id='LC14508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefixFromBase(basePath) + match.hash.substr(hashPrefix.length);</div><div class='line' id='LC14509'>&nbsp;&nbsp;}</div><div class='line' id='LC14510'>}</div><div class='line' id='LC14511'><br/></div><div class='line' id='LC14512'><br/></div><div class='line' id='LC14513'>function convertToHashbangUrl(url, basePath, hashPrefix) {</div><div class='line' id='LC14514'>&nbsp;&nbsp;var match = matchUrl(url);</div><div class='line' id='LC14515'><br/></div><div class='line' id='LC14516'>&nbsp;&nbsp;// already hashbang url</div><div class='line' id='LC14517'>&nbsp;&nbsp;if (decodeURIComponent(match.path) == basePath &amp;&amp; !isUndefined(match.hash) &amp;&amp;</div><div class='line' id='LC14518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match.hash.indexOf(hashPrefix) === 0) {</div><div class='line' id='LC14519'>&nbsp;&nbsp;&nbsp;&nbsp;return url;</div><div class='line' id='LC14520'>&nbsp;&nbsp;// convert html5 url -&gt; hashbang url</div><div class='line' id='LC14521'>&nbsp;&nbsp;} else {</div><div class='line' id='LC14522'>&nbsp;&nbsp;&nbsp;&nbsp;var search = match.search &amp;&amp; &#39;?&#39; + match.search || &#39;&#39;,</div><div class='line' id='LC14523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = match.hash &amp;&amp; &#39;#&#39; + match.hash || &#39;&#39;,</div><div class='line' id='LC14524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix = pathPrefixFromBase(basePath),</div><div class='line' id='LC14525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = match.path.substr(pathPrefix.length);</div><div class='line' id='LC14526'><br/></div><div class='line' id='LC14527'>&nbsp;&nbsp;&nbsp;&nbsp;if (match.path.indexOf(pathPrefix) !== 0) {</div><div class='line' id='LC14528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Invalid url &quot;&#39; + url + &#39;&quot;, missing path prefix &quot;&#39; + pathPrefix + &#39;&quot; !&#39;);</div><div class='line' id='LC14529'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14530'><br/></div><div class='line' id='LC14531'>&nbsp;&nbsp;&nbsp;&nbsp;return composeProtocolHostPort(match.protocol, match.host, match.port) + basePath +</div><div class='line' id='LC14532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;#&#39; + hashPrefix + path + search + hash;</div><div class='line' id='LC14533'>&nbsp;&nbsp;}</div><div class='line' id='LC14534'>}</div><div class='line' id='LC14535'><br/></div><div class='line' id='LC14536'><br/></div><div class='line' id='LC14537'>/**</div><div class='line' id='LC14538'>&nbsp;* LocationUrl represents an url</div><div class='line' id='LC14539'>&nbsp;* This object is exposed as $location service when HTML5 mode is enabled and supported</div><div class='line' id='LC14540'>&nbsp;*</div><div class='line' id='LC14541'>&nbsp;* @constructor</div><div class='line' id='LC14542'>&nbsp;* @param {string} url HTML5 url</div><div class='line' id='LC14543'>&nbsp;* @param {string} pathPrefix</div><div class='line' id='LC14544'>&nbsp;*/</div><div class='line' id='LC14545'>function LocationUrl(url, pathPrefix, appBaseUrl) {</div><div class='line' id='LC14546'>&nbsp;&nbsp;pathPrefix = pathPrefix || &#39;&#39;;</div><div class='line' id='LC14547'><br/></div><div class='line' id='LC14548'>&nbsp;&nbsp;/**</div><div class='line' id='LC14549'>&nbsp;&nbsp;&nbsp;* Parse given html5 (regular) url string into properties</div><div class='line' id='LC14550'>&nbsp;&nbsp;&nbsp;* @param {string} newAbsoluteUrl HTML5 url</div><div class='line' id='LC14551'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC14552'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14553'>&nbsp;&nbsp;this.$$parse = function(newAbsoluteUrl) {</div><div class='line' id='LC14554'>&nbsp;&nbsp;&nbsp;&nbsp;var match = matchUrl(newAbsoluteUrl, this);</div><div class='line' id='LC14555'><br/></div><div class='line' id='LC14556'>&nbsp;&nbsp;&nbsp;&nbsp;if (match.path.indexOf(pathPrefix) !== 0) {</div><div class='line' id='LC14557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Invalid url &quot;&#39; + newAbsoluteUrl + &#39;&quot;, missing path prefix &quot;&#39; + pathPrefix + &#39;&quot; !&#39;);</div><div class='line' id='LC14558'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14559'><br/></div><div class='line' id='LC14560'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$path = decodeURIComponent(match.path.substr(pathPrefix.length));</div><div class='line' id='LC14561'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$search = parseKeyValue(match.search);</div><div class='line' id='LC14562'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$hash = match.hash &amp;&amp; decodeURIComponent(match.hash) || &#39;&#39;;</div><div class='line' id='LC14563'><br/></div><div class='line' id='LC14564'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$compose();</div><div class='line' id='LC14565'>&nbsp;&nbsp;};</div><div class='line' id='LC14566'><br/></div><div class='line' id='LC14567'>&nbsp;&nbsp;/**</div><div class='line' id='LC14568'>&nbsp;&nbsp;&nbsp;* Compose url and update `absUrl` property</div><div class='line' id='LC14569'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC14570'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14571'>&nbsp;&nbsp;this.$$compose = function() {</div><div class='line' id='LC14572'>&nbsp;&nbsp;&nbsp;&nbsp;var search = toKeyValue(this.$$search),</div><div class='line' id='LC14573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = this.$$hash ? &#39;#&#39; + encodeUriSegment(this.$$hash) : &#39;&#39;;</div><div class='line' id='LC14574'><br/></div><div class='line' id='LC14575'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$url = encodePath(this.$$path) + (search ? &#39;?&#39; + search : &#39;&#39;) + hash;</div><div class='line' id='LC14576'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +</div><div class='line' id='LC14577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix + this.$$url;</div><div class='line' id='LC14578'>&nbsp;&nbsp;};</div><div class='line' id='LC14579'><br/></div><div class='line' id='LC14580'><br/></div><div class='line' id='LC14581'>&nbsp;&nbsp;this.$$rewriteAppUrl = function(absoluteLinkUrl) {</div><div class='line' id='LC14582'>&nbsp;&nbsp;&nbsp;&nbsp;if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {</div><div class='line' id='LC14583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return absoluteLinkUrl;</div><div class='line' id='LC14584'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14585'>&nbsp;&nbsp;}</div><div class='line' id='LC14586'><br/></div><div class='line' id='LC14587'><br/></div><div class='line' id='LC14588'>&nbsp;&nbsp;this.$$parse(url);</div><div class='line' id='LC14589'>}</div><div class='line' id='LC14590'><br/></div><div class='line' id='LC14591'><br/></div><div class='line' id='LC14592'>/**</div><div class='line' id='LC14593'>&nbsp;* LocationHashbangUrl represents url</div><div class='line' id='LC14594'>&nbsp;* This object is exposed as $location service when html5 history api is disabled or not supported</div><div class='line' id='LC14595'>&nbsp;*</div><div class='line' id='LC14596'>&nbsp;* @constructor</div><div class='line' id='LC14597'>&nbsp;* @param {string} url Legacy url</div><div class='line' id='LC14598'>&nbsp;* @param {string} hashPrefix Prefix for hash part (containing path and search)</div><div class='line' id='LC14599'>&nbsp;*/</div><div class='line' id='LC14600'>function LocationHashbangUrl(url, hashPrefix, appBaseUrl) {</div><div class='line' id='LC14601'>&nbsp;&nbsp;var basePath;</div><div class='line' id='LC14602'><br/></div><div class='line' id='LC14603'>&nbsp;&nbsp;/**</div><div class='line' id='LC14604'>&nbsp;&nbsp;&nbsp;* Parse given hashbang url into properties</div><div class='line' id='LC14605'>&nbsp;&nbsp;&nbsp;* @param {string} url Hashbang url</div><div class='line' id='LC14606'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC14607'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14608'>&nbsp;&nbsp;this.$$parse = function(url) {</div><div class='line' id='LC14609'>&nbsp;&nbsp;&nbsp;&nbsp;var match = matchUrl(url, this);</div><div class='line' id='LC14610'><br/></div><div class='line' id='LC14611'><br/></div><div class='line' id='LC14612'>&nbsp;&nbsp;&nbsp;&nbsp;if (match.hash &amp;&amp; match.hash.indexOf(hashPrefix) !== 0) {</div><div class='line' id='LC14613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;Invalid url &quot;&#39; + url + &#39;&quot;, missing hash prefix &quot;&#39; + hashPrefix + &#39;&quot; !&#39;);</div><div class='line' id='LC14614'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14615'><br/></div><div class='line' id='LC14616'>&nbsp;&nbsp;&nbsp;&nbsp;basePath = match.path + (match.search ? &#39;?&#39; + match.search : &#39;&#39;);</div><div class='line' id='LC14617'>&nbsp;&nbsp;&nbsp;&nbsp;match = HASH_MATCH.exec((match.hash || &#39;&#39;).substr(hashPrefix.length));</div><div class='line' id='LC14618'>&nbsp;&nbsp;&nbsp;&nbsp;if (match[1]) {</div><div class='line' id='LC14619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$path = (match[1].charAt(0) == &#39;/&#39; ? &#39;&#39; : &#39;/&#39;) + decodeURIComponent(match[1]);</div><div class='line' id='LC14620'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$path = &#39;&#39;;</div><div class='line' id='LC14622'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14623'><br/></div><div class='line' id='LC14624'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$search = parseKeyValue(match[3]);</div><div class='line' id='LC14625'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$hash = match[5] &amp;&amp; decodeURIComponent(match[5]) || &#39;&#39;;</div><div class='line' id='LC14626'><br/></div><div class='line' id='LC14627'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$compose();</div><div class='line' id='LC14628'>&nbsp;&nbsp;};</div><div class='line' id='LC14629'><br/></div><div class='line' id='LC14630'>&nbsp;&nbsp;/**</div><div class='line' id='LC14631'>&nbsp;&nbsp;&nbsp;* Compose hashbang url and update `absUrl` property</div><div class='line' id='LC14632'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC14633'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14634'>&nbsp;&nbsp;this.$$compose = function() {</div><div class='line' id='LC14635'>&nbsp;&nbsp;&nbsp;&nbsp;var search = toKeyValue(this.$$search),</div><div class='line' id='LC14636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = this.$$hash ? &#39;#&#39; + encodeUriSegment(this.$$hash) : &#39;&#39;;</div><div class='line' id='LC14637'><br/></div><div class='line' id='LC14638'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$url = encodePath(this.$$path) + (search ? &#39;?&#39; + search : &#39;&#39;) + hash;</div><div class='line' id='LC14639'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +</div><div class='line' id='LC14640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;basePath + (this.$$url ? &#39;#&#39; + hashPrefix + this.$$url : &#39;&#39;);</div><div class='line' id='LC14641'>&nbsp;&nbsp;};</div><div class='line' id='LC14642'><br/></div><div class='line' id='LC14643'>&nbsp;&nbsp;this.$$rewriteAppUrl = function(absoluteLinkUrl) {</div><div class='line' id='LC14644'>&nbsp;&nbsp;&nbsp;&nbsp;if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {</div><div class='line' id='LC14645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return absoluteLinkUrl;</div><div class='line' id='LC14646'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14647'>&nbsp;&nbsp;}</div><div class='line' id='LC14648'><br/></div><div class='line' id='LC14649'><br/></div><div class='line' id='LC14650'>&nbsp;&nbsp;this.$$parse(url);</div><div class='line' id='LC14651'>}</div><div class='line' id='LC14652'><br/></div><div class='line' id='LC14653'><br/></div><div class='line' id='LC14654'>LocationUrl.prototype = {</div><div class='line' id='LC14655'><br/></div><div class='line' id='LC14656'>&nbsp;&nbsp;/**</div><div class='line' id='LC14657'>&nbsp;&nbsp;&nbsp;* Has any change been replacing ?</div><div class='line' id='LC14658'>&nbsp;&nbsp;&nbsp;* @private</div><div class='line' id='LC14659'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14660'>&nbsp;&nbsp;$$replace: false,</div><div class='line' id='LC14661'><br/></div><div class='line' id='LC14662'>&nbsp;&nbsp;/**</div><div class='line' id='LC14663'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14664'>&nbsp;&nbsp;&nbsp;* @name ng.$location#absUrl</div><div class='line' id='LC14665'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14666'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14667'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14668'>&nbsp;&nbsp;&nbsp;* This method is getter only.</div><div class='line' id='LC14669'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14670'>&nbsp;&nbsp;&nbsp;* Return full url representation with all segments encoded according to rules specified in</div><div class='line' id='LC14671'>&nbsp;&nbsp;&nbsp;* {@link http://www.ietf.org/rfc/rfc3986.txt RFC 3986}.</div><div class='line' id='LC14672'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14673'>&nbsp;&nbsp;&nbsp;* @return {string} full url</div><div class='line' id='LC14674'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14675'>&nbsp;&nbsp;absUrl: locationGetter(&#39;$$absUrl&#39;),</div><div class='line' id='LC14676'><br/></div><div class='line' id='LC14677'>&nbsp;&nbsp;/**</div><div class='line' id='LC14678'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14679'>&nbsp;&nbsp;&nbsp;* @name ng.$location#url</div><div class='line' id='LC14680'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14681'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14682'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14683'>&nbsp;&nbsp;&nbsp;* This method is getter / setter.</div><div class='line' id='LC14684'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14685'>&nbsp;&nbsp;&nbsp;* Return url (e.g. `/path?a=b#hash`) when called without any parameter.</div><div class='line' id='LC14686'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14687'>&nbsp;&nbsp;&nbsp;* Change path, search and hash, when called with parameter and return `$location`.</div><div class='line' id='LC14688'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14689'>&nbsp;&nbsp;&nbsp;* @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)</div><div class='line' id='LC14690'>&nbsp;&nbsp;&nbsp;* @return {string} url</div><div class='line' id='LC14691'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14692'>&nbsp;&nbsp;url: function(url, replace) {</div><div class='line' id='LC14693'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(url))</div><div class='line' id='LC14694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.$$url;</div><div class='line' id='LC14695'><br/></div><div class='line' id='LC14696'>&nbsp;&nbsp;&nbsp;&nbsp;var match = PATH_MATCH.exec(url);</div><div class='line' id='LC14697'>&nbsp;&nbsp;&nbsp;&nbsp;if (match[1]) this.path(decodeURIComponent(match[1]));</div><div class='line' id='LC14698'>&nbsp;&nbsp;&nbsp;&nbsp;if (match[2] || match[1]) this.search(match[3] || &#39;&#39;);</div><div class='line' id='LC14699'>&nbsp;&nbsp;&nbsp;&nbsp;this.hash(match[5] || &#39;&#39;, replace);</div><div class='line' id='LC14700'><br/></div><div class='line' id='LC14701'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14702'>&nbsp;&nbsp;},</div><div class='line' id='LC14703'><br/></div><div class='line' id='LC14704'>&nbsp;&nbsp;/**</div><div class='line' id='LC14705'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14706'>&nbsp;&nbsp;&nbsp;* @name ng.$location#protocol</div><div class='line' id='LC14707'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14708'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14709'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14710'>&nbsp;&nbsp;&nbsp;* This method is getter only.</div><div class='line' id='LC14711'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14712'>&nbsp;&nbsp;&nbsp;* Return protocol of current url.</div><div class='line' id='LC14713'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14714'>&nbsp;&nbsp;&nbsp;* @return {string} protocol of current url</div><div class='line' id='LC14715'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14716'>&nbsp;&nbsp;protocol: locationGetter(&#39;$$protocol&#39;),</div><div class='line' id='LC14717'><br/></div><div class='line' id='LC14718'>&nbsp;&nbsp;/**</div><div class='line' id='LC14719'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14720'>&nbsp;&nbsp;&nbsp;* @name ng.$location#host</div><div class='line' id='LC14721'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14722'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14723'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14724'>&nbsp;&nbsp;&nbsp;* This method is getter only.</div><div class='line' id='LC14725'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14726'>&nbsp;&nbsp;&nbsp;* Return host of current url.</div><div class='line' id='LC14727'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14728'>&nbsp;&nbsp;&nbsp;* @return {string} host of current url.</div><div class='line' id='LC14729'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14730'>&nbsp;&nbsp;host: locationGetter(&#39;$$host&#39;),</div><div class='line' id='LC14731'><br/></div><div class='line' id='LC14732'>&nbsp;&nbsp;/**</div><div class='line' id='LC14733'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14734'>&nbsp;&nbsp;&nbsp;* @name ng.$location#port</div><div class='line' id='LC14735'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14736'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14737'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14738'>&nbsp;&nbsp;&nbsp;* This method is getter only.</div><div class='line' id='LC14739'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14740'>&nbsp;&nbsp;&nbsp;* Return port of current url.</div><div class='line' id='LC14741'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14742'>&nbsp;&nbsp;&nbsp;* @return {Number} port</div><div class='line' id='LC14743'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14744'>&nbsp;&nbsp;port: locationGetter(&#39;$$port&#39;),</div><div class='line' id='LC14745'><br/></div><div class='line' id='LC14746'>&nbsp;&nbsp;/**</div><div class='line' id='LC14747'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14748'>&nbsp;&nbsp;&nbsp;* @name ng.$location#path</div><div class='line' id='LC14749'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14750'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14751'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14752'>&nbsp;&nbsp;&nbsp;* This method is getter / setter.</div><div class='line' id='LC14753'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14754'>&nbsp;&nbsp;&nbsp;* Return path of current url when called without any parameter.</div><div class='line' id='LC14755'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14756'>&nbsp;&nbsp;&nbsp;* Change path when called with parameter and return `$location`.</div><div class='line' id='LC14757'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14758'>&nbsp;&nbsp;&nbsp;* Note: Path should always begin with forward slash (/), this method will add the forward slash</div><div class='line' id='LC14759'>&nbsp;&nbsp;&nbsp;* if it is missing.</div><div class='line' id='LC14760'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14761'>&nbsp;&nbsp;&nbsp;* @param {string=} path New path</div><div class='line' id='LC14762'>&nbsp;&nbsp;&nbsp;* @return {string} path</div><div class='line' id='LC14763'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14764'>&nbsp;&nbsp;path: locationGetterSetter(&#39;$$path&#39;, function(path) {</div><div class='line' id='LC14765'>&nbsp;&nbsp;&nbsp;&nbsp;return path.charAt(0) == &#39;/&#39; ? path : &#39;/&#39; + path;</div><div class='line' id='LC14766'>&nbsp;&nbsp;}),</div><div class='line' id='LC14767'><br/></div><div class='line' id='LC14768'>&nbsp;&nbsp;/**</div><div class='line' id='LC14769'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14770'>&nbsp;&nbsp;&nbsp;* @name ng.$location#search</div><div class='line' id='LC14771'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14772'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14773'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14774'>&nbsp;&nbsp;&nbsp;* This method is getter / setter.</div><div class='line' id='LC14775'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14776'>&nbsp;&nbsp;&nbsp;* Return search part (as object) of current url when called without any parameter.</div><div class='line' id='LC14777'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14778'>&nbsp;&nbsp;&nbsp;* Change search part when called with parameter and return `$location`.</div><div class='line' id='LC14779'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14780'>&nbsp;&nbsp;&nbsp;* @param {string|object&lt;string,string&gt;=} search New search params - string or hash object</div><div class='line' id='LC14781'>&nbsp;&nbsp;&nbsp;* @param {string=} paramValue If `search` is a string, then `paramValue` will override only a</div><div class='line' id='LC14782'>&nbsp;&nbsp;&nbsp;*    single search parameter. If the value is `null`, the parameter will be deleted.</div><div class='line' id='LC14783'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14784'>&nbsp;&nbsp;&nbsp;* @return {string} search</div><div class='line' id='LC14785'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14786'>&nbsp;&nbsp;search: function(search, paramValue) {</div><div class='line' id='LC14787'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(search))</div><div class='line' id='LC14788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.$$search;</div><div class='line' id='LC14789'><br/></div><div class='line' id='LC14790'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(paramValue)) {</div><div class='line' id='LC14791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (paramValue === null) {</div><div class='line' id='LC14792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.$$search[search];</div><div class='line' id='LC14793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$search[search] = paramValue;</div><div class='line' id='LC14795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14796'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$search = isString(search) ? parseKeyValue(search) : search;</div><div class='line' id='LC14798'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14799'><br/></div><div class='line' id='LC14800'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$compose();</div><div class='line' id='LC14801'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14802'>&nbsp;&nbsp;},</div><div class='line' id='LC14803'><br/></div><div class='line' id='LC14804'>&nbsp;&nbsp;/**</div><div class='line' id='LC14805'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14806'>&nbsp;&nbsp;&nbsp;* @name ng.$location#hash</div><div class='line' id='LC14807'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14808'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14809'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14810'>&nbsp;&nbsp;&nbsp;* This method is getter / setter.</div><div class='line' id='LC14811'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14812'>&nbsp;&nbsp;&nbsp;* Return hash fragment when called without any parameter.</div><div class='line' id='LC14813'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14814'>&nbsp;&nbsp;&nbsp;* Change hash fragment when called with parameter and return `$location`.</div><div class='line' id='LC14815'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14816'>&nbsp;&nbsp;&nbsp;* @param {string=} hash New hash fragment</div><div class='line' id='LC14817'>&nbsp;&nbsp;&nbsp;* @return {string} hash</div><div class='line' id='LC14818'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14819'>&nbsp;&nbsp;hash: locationGetterSetter(&#39;$$hash&#39;, identity),</div><div class='line' id='LC14820'><br/></div><div class='line' id='LC14821'>&nbsp;&nbsp;/**</div><div class='line' id='LC14822'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC14823'>&nbsp;&nbsp;&nbsp;* @name ng.$location#replace</div><div class='line' id='LC14824'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$location</div><div class='line' id='LC14825'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC14826'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14827'>&nbsp;&nbsp;&nbsp;* If called, all changes to $location during current `$digest` will be replacing current history</div><div class='line' id='LC14828'>&nbsp;&nbsp;&nbsp;* record, instead of adding new one.</div><div class='line' id='LC14829'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14830'>&nbsp;&nbsp;replace: function() {</div><div class='line' id='LC14831'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$replace = true;</div><div class='line' id='LC14832'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14833'>&nbsp;&nbsp;}</div><div class='line' id='LC14834'>};</div><div class='line' id='LC14835'><br/></div><div class='line' id='LC14836'>LocationHashbangUrl.prototype = inherit(LocationUrl.prototype);</div><div class='line' id='LC14837'><br/></div><div class='line' id='LC14838'>function LocationHashbangInHtml5Url(url, hashPrefix, appBaseUrl, baseExtra) {</div><div class='line' id='LC14839'>&nbsp;&nbsp;LocationHashbangUrl.apply(this, arguments);</div><div class='line' id='LC14840'><br/></div><div class='line' id='LC14841'><br/></div><div class='line' id='LC14842'>&nbsp;&nbsp;this.$$rewriteAppUrl = function(absoluteLinkUrl) {</div><div class='line' id='LC14843'>&nbsp;&nbsp;&nbsp;&nbsp;if (absoluteLinkUrl.indexOf(appBaseUrl) == 0) {</div><div class='line' id='LC14844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return appBaseUrl + baseExtra + &#39;#&#39; + hashPrefix  + absoluteLinkUrl.substr(appBaseUrl.length);</div><div class='line' id='LC14845'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14846'>&nbsp;&nbsp;}</div><div class='line' id='LC14847'>}</div><div class='line' id='LC14848'><br/></div><div class='line' id='LC14849'>LocationHashbangInHtml5Url.prototype = inherit(LocationHashbangUrl.prototype);</div><div class='line' id='LC14850'><br/></div><div class='line' id='LC14851'>function locationGetter(property) {</div><div class='line' id='LC14852'>&nbsp;&nbsp;return function() {</div><div class='line' id='LC14853'>&nbsp;&nbsp;&nbsp;&nbsp;return this[property];</div><div class='line' id='LC14854'>&nbsp;&nbsp;};</div><div class='line' id='LC14855'>}</div><div class='line' id='LC14856'><br/></div><div class='line' id='LC14857'><br/></div><div class='line' id='LC14858'>function locationGetterSetter(property, preprocess) {</div><div class='line' id='LC14859'>&nbsp;&nbsp;return function(value) {</div><div class='line' id='LC14860'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(value))</div><div class='line' id='LC14861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[property];</div><div class='line' id='LC14862'><br/></div><div class='line' id='LC14863'>&nbsp;&nbsp;&nbsp;&nbsp;this[property] = preprocess(value);</div><div class='line' id='LC14864'>&nbsp;&nbsp;&nbsp;&nbsp;this.$$compose();</div><div class='line' id='LC14865'><br/></div><div class='line' id='LC14866'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14867'>&nbsp;&nbsp;};</div><div class='line' id='LC14868'>}</div><div class='line' id='LC14869'><br/></div><div class='line' id='LC14870'><br/></div><div class='line' id='LC14871'>/**</div><div class='line' id='LC14872'>&nbsp;* @ngdoc object</div><div class='line' id='LC14873'>&nbsp;* @name ng.$location</div><div class='line' id='LC14874'>&nbsp;*</div><div class='line' id='LC14875'>&nbsp;* @requires $browser</div><div class='line' id='LC14876'>&nbsp;* @requires $sniffer</div><div class='line' id='LC14877'>&nbsp;* @requires $rootElement</div><div class='line' id='LC14878'>&nbsp;*</div><div class='line' id='LC14879'>&nbsp;* @description</div><div class='line' id='LC14880'>&nbsp;* The $location service parses the URL in the browser address bar (based on the</div><div class='line' id='LC14881'>&nbsp;* {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL</div><div class='line' id='LC14882'>&nbsp;* available to your application. Changes to the URL in the address bar are reflected into</div><div class='line' id='LC14883'>&nbsp;* $location service and changes to $location are reflected into the browser address bar.</div><div class='line' id='LC14884'>&nbsp;*</div><div class='line' id='LC14885'>&nbsp;* **The $location service:**</div><div class='line' id='LC14886'>&nbsp;*</div><div class='line' id='LC14887'>&nbsp;* - Exposes the current URL in the browser address bar, so you can</div><div class='line' id='LC14888'>&nbsp;*   - Watch and observe the URL.</div><div class='line' id='LC14889'>&nbsp;*   - Change the URL.</div><div class='line' id='LC14890'>&nbsp;* - Synchronizes the URL with the browser when the user</div><div class='line' id='LC14891'>&nbsp;*   - Changes the address bar.</div><div class='line' id='LC14892'>&nbsp;*   - Clicks the back or forward button (or clicks a History link).</div><div class='line' id='LC14893'>&nbsp;*   - Clicks on a link.</div><div class='line' id='LC14894'>&nbsp;* - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).</div><div class='line' id='LC14895'>&nbsp;*</div><div class='line' id='LC14896'>&nbsp;* For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular</div><div class='line' id='LC14897'>&nbsp;* Services: Using $location}</div><div class='line' id='LC14898'>&nbsp;*/</div><div class='line' id='LC14899'><br/></div><div class='line' id='LC14900'>/**</div><div class='line' id='LC14901'>&nbsp;* @ngdoc object</div><div class='line' id='LC14902'>&nbsp;* @name ng.$locationProvider</div><div class='line' id='LC14903'>&nbsp;* @description</div><div class='line' id='LC14904'>&nbsp;* Use the `$locationProvider` to configure how the application deep linking paths are stored.</div><div class='line' id='LC14905'>&nbsp;*/</div><div class='line' id='LC14906'>function $LocationProvider(){</div><div class='line' id='LC14907'>&nbsp;&nbsp;var hashPrefix = &#39;&#39;,</div><div class='line' id='LC14908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html5Mode = false;</div><div class='line' id='LC14909'><br/></div><div class='line' id='LC14910'>&nbsp;&nbsp;/**</div><div class='line' id='LC14911'>&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC14912'>&nbsp;&nbsp;&nbsp;* @name ng.$locationProvider#hashPrefix</div><div class='line' id='LC14913'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$locationProvider</div><div class='line' id='LC14914'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14915'>&nbsp;&nbsp;&nbsp;* @param {string=} prefix Prefix for hash part (containing path and search)</div><div class='line' id='LC14916'>&nbsp;&nbsp;&nbsp;* @returns {*} current value if used as getter or itself (chaining) if used as setter</div><div class='line' id='LC14917'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14918'>&nbsp;&nbsp;this.hashPrefix = function(prefix) {</div><div class='line' id='LC14919'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(prefix)) {</div><div class='line' id='LC14920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashPrefix = prefix;</div><div class='line' id='LC14921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14922'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return hashPrefix;</div><div class='line' id='LC14924'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14925'>&nbsp;&nbsp;};</div><div class='line' id='LC14926'><br/></div><div class='line' id='LC14927'>&nbsp;&nbsp;/**</div><div class='line' id='LC14928'>&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC14929'>&nbsp;&nbsp;&nbsp;* @name ng.$locationProvider#html5Mode</div><div class='line' id='LC14930'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$locationProvider</div><div class='line' id='LC14931'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC14932'>&nbsp;&nbsp;&nbsp;* @param {string=} mode Use HTML5 strategy if available.</div><div class='line' id='LC14933'>&nbsp;&nbsp;&nbsp;* @returns {*} current value if used as getter or itself (chaining) if used as setter</div><div class='line' id='LC14934'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC14935'>&nbsp;&nbsp;this.html5Mode = function(mode) {</div><div class='line' id='LC14936'>&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(mode)) {</div><div class='line' id='LC14937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html5Mode = mode;</div><div class='line' id='LC14938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14939'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return html5Mode;</div><div class='line' id='LC14941'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14942'>&nbsp;&nbsp;};</div><div class='line' id='LC14943'><br/></div><div class='line' id='LC14944'>&nbsp;&nbsp;this.$get = [&#39;$rootScope&#39;, &#39;$browser&#39;, &#39;$sniffer&#39;, &#39;$rootElement&#39;,</div><div class='line' id='LC14945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( $rootScope,   $browser,   $sniffer,   $rootElement) {</div><div class='line' id='LC14946'>&nbsp;&nbsp;&nbsp;&nbsp;var $location,</div><div class='line' id='LC14947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;basePath,</div><div class='line' id='LC14948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix,</div><div class='line' id='LC14949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initUrl = $browser.url(),</div><div class='line' id='LC14950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initUrlParts = matchUrl(initUrl),</div><div class='line' id='LC14951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appBaseUrl;</div><div class='line' id='LC14952'><br/></div><div class='line' id='LC14953'>&nbsp;&nbsp;&nbsp;&nbsp;if (html5Mode) {</div><div class='line' id='LC14954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;basePath = $browser.baseHref() || &#39;/&#39;;</div><div class='line' id='LC14955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix = pathPrefixFromBase(basePath);</div><div class='line' id='LC14956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appBaseUrl =</div><div class='line' id='LC14957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +</div><div class='line' id='LC14958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix + &#39;/&#39;;</div><div class='line' id='LC14959'><br/></div><div class='line' id='LC14960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($sniffer.history) {</div><div class='line' id='LC14961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location = new LocationUrl(</div><div class='line' id='LC14962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convertToHtml5Url(initUrl, basePath, hashPrefix),</div><div class='line' id='LC14963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix, appBaseUrl);</div><div class='line' id='LC14964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location = new LocationHashbangInHtml5Url(</div><div class='line' id='LC14966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convertToHashbangUrl(initUrl, basePath, hashPrefix),</div><div class='line' id='LC14967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashPrefix, appBaseUrl, basePath.substr(pathPrefix.length + 1));</div><div class='line' id='LC14968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14969'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appBaseUrl =</div><div class='line' id='LC14971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +</div><div class='line' id='LC14972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(initUrlParts.path || &#39;&#39;) +</div><div class='line' id='LC14973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(initUrlParts.search ? (&#39;?&#39; + initUrlParts.search) : &#39;&#39;) +</div><div class='line' id='LC14974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;#&#39; + hashPrefix + &#39;/&#39;;</div><div class='line' id='LC14975'><br/></div><div class='line' id='LC14976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location = new LocationHashbangUrl(initUrl, hashPrefix, appBaseUrl);</div><div class='line' id='LC14977'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14978'><br/></div><div class='line' id='LC14979'>&nbsp;&nbsp;&nbsp;&nbsp;$rootElement.bind(&#39;click&#39;, function(event) {</div><div class='line' id='LC14980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)</div><div class='line' id='LC14981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// currently we open nice url link and redirect then</div><div class='line' id='LC14982'><br/></div><div class='line' id='LC14983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (event.ctrlKey || event.metaKey || event.which == 2) return;</div><div class='line' id='LC14984'><br/></div><div class='line' id='LC14985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var elm = jqLite(event.target);</div><div class='line' id='LC14986'><br/></div><div class='line' id='LC14987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// traverse the DOM up to find first A tag</div><div class='line' id='LC14988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (lowercase(elm[0].nodeName) !== &#39;a&#39;) {</div><div class='line' id='LC14989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ignore rewriting if no A tag (reached root element, or no parent - removed from document)</div><div class='line' id='LC14990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;</div><div class='line' id='LC14991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14992'><br/></div><div class='line' id='LC14993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var absHref = elm.prop(&#39;href&#39;),</div><div class='line' id='LC14994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrittenUrl = $location.$$rewriteAppUrl(absHref);</div><div class='line' id='LC14995'><br/></div><div class='line' id='LC14996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (absHref &amp;&amp; !elm.attr(&#39;target&#39;) &amp;&amp; rewrittenUrl) {</div><div class='line' id='LC14997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// update location manually</div><div class='line' id='LC14998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.$$parse(rewrittenUrl);</div><div class='line' id='LC14999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$apply();</div><div class='line' id='LC15000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</div><div class='line' id='LC15001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// hack to work around FF6 bug 684208 when scenario runner clicks on links</div><div class='line' id='LC15002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.angular[&#39;ff-684208-preventDefault&#39;] = true;</div><div class='line' id='LC15003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15004'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15005'><br/></div><div class='line' id='LC15006'><br/></div><div class='line' id='LC15007'>&nbsp;&nbsp;&nbsp;&nbsp;// rewrite hashbang url &lt;&gt; html5 url</div><div class='line' id='LC15008'>&nbsp;&nbsp;&nbsp;&nbsp;if ($location.absUrl() != initUrl) {</div><div class='line' id='LC15009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser.url($location.absUrl(), true);</div><div class='line' id='LC15010'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15011'><br/></div><div class='line' id='LC15012'>&nbsp;&nbsp;&nbsp;&nbsp;// update $location when $browser url changes</div><div class='line' id='LC15013'>&nbsp;&nbsp;&nbsp;&nbsp;$browser.onUrlChange(function(newUrl) {</div><div class='line' id='LC15014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($location.absUrl() != newUrl) {</div><div class='line' id='LC15015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootScope.$broadcast(&#39;$locationChangeStart&#39;, newUrl, $location.absUrl()).defaultPrevented) {</div><div class='line' id='LC15016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser.url($location.absUrl());</div><div class='line' id='LC15017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC15018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(function() {</div><div class='line' id='LC15020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oldUrl = $location.absUrl();</div><div class='line' id='LC15021'><br/></div><div class='line' id='LC15022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.$$parse(newUrl);</div><div class='line' id='LC15023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterLocationChange(oldUrl);</div><div class='line' id='LC15024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$rootScope.$$phase) $rootScope.$digest();</div><div class='line' id='LC15026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15027'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15028'><br/></div><div class='line' id='LC15029'>&nbsp;&nbsp;&nbsp;&nbsp;// update browser</div><div class='line' id='LC15030'>&nbsp;&nbsp;&nbsp;&nbsp;var changeCounter = 0;</div><div class='line' id='LC15031'>&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$watch(function $locationWatch() {</div><div class='line' id='LC15032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oldUrl = $browser.url();</div><div class='line' id='LC15033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var currentReplace = $location.$$replace;</div><div class='line' id='LC15034'><br/></div><div class='line' id='LC15035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!changeCounter || oldUrl != $location.absUrl()) {</div><div class='line' id='LC15036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;changeCounter++;</div><div class='line' id='LC15037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(function() {</div><div class='line' id='LC15038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootScope.$broadcast(&#39;$locationChangeStart&#39;, $location.absUrl(), oldUrl).</div><div class='line' id='LC15039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultPrevented) {</div><div class='line' id='LC15040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.$$parse(oldUrl);</div><div class='line' id='LC15041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser.url($location.absUrl(), currentReplace);</div><div class='line' id='LC15043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;afterLocationChange(oldUrl);</div><div class='line' id='LC15044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.$$replace = false;</div><div class='line' id='LC15048'><br/></div><div class='line' id='LC15049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return changeCounter;</div><div class='line' id='LC15050'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15051'><br/></div><div class='line' id='LC15052'>&nbsp;&nbsp;&nbsp;&nbsp;return $location;</div><div class='line' id='LC15053'><br/></div><div class='line' id='LC15054'>&nbsp;&nbsp;&nbsp;&nbsp;function afterLocationChange(oldUrl) {</div><div class='line' id='LC15055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$broadcast(&#39;$locationChangeSuccess&#39;, $location.absUrl(), oldUrl);</div><div class='line' id='LC15056'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15057'>}];</div><div class='line' id='LC15058'>}</div><div class='line' id='LC15059'><br/></div><div class='line' id='LC15060'>/**</div><div class='line' id='LC15061'>&nbsp;* @ngdoc object</div><div class='line' id='LC15062'>&nbsp;* @name ng.$log</div><div class='line' id='LC15063'>&nbsp;* @requires $window</div><div class='line' id='LC15064'>&nbsp;*</div><div class='line' id='LC15065'>&nbsp;* @description</div><div class='line' id='LC15066'>&nbsp;* Simple service for logging. Default implementation writes the message</div><div class='line' id='LC15067'>&nbsp;* into the browser&#39;s console (if present).</div><div class='line' id='LC15068'>&nbsp;*</div><div class='line' id='LC15069'>&nbsp;* The main purpose of this service is to simplify debugging and troubleshooting.</div><div class='line' id='LC15070'>&nbsp;*</div><div class='line' id='LC15071'>&nbsp;* @example</div><div class='line' id='LC15072'>&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC15073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC15074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function LogCtrl($scope, $log) {</div><div class='line' id='LC15075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$log = $log;</div><div class='line' id='LC15076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.message = &#39;Hello World!&#39;;</div><div class='line' id='LC15077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC15079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC15080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;LogCtrl&quot;&gt;</div><div class='line' id='LC15081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Reload this page with open console, enter text and hit the log button...&lt;/p&gt;</div><div class='line' id='LC15082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message:</div><div class='line' id='LC15083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</div><div class='line' id='LC15084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;$log.log(message)&quot;&gt;log&lt;/button&gt;</div><div class='line' id='LC15085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;$log.warn(message)&quot;&gt;warn&lt;/button&gt;</div><div class='line' id='LC15086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;$log.info(message)&quot;&gt;info&lt;/button&gt;</div><div class='line' id='LC15087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;$log.error(message)&quot;&gt;error&lt;/button&gt;</div><div class='line' id='LC15088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC15089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC15090'>&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC15091'>&nbsp;*/</div><div class='line' id='LC15092'><br/></div><div class='line' id='LC15093'>function $LogProvider(){</div><div class='line' id='LC15094'>&nbsp;&nbsp;this.$get = [&#39;$window&#39;, function($window){</div><div class='line' id='LC15095'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC15096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC15098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$log#log</div><div class='line' id='LC15099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$log</div><div class='line' id='LC15100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC15102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Write a log message</div><div class='line' id='LC15103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log: consoleLog(&#39;log&#39;),</div><div class='line' id='LC15105'><br/></div><div class='line' id='LC15106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC15108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$log#warn</div><div class='line' id='LC15109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$log</div><div class='line' id='LC15110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC15112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Write a warning message</div><div class='line' id='LC15113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warn: consoleLog(&#39;warn&#39;),</div><div class='line' id='LC15115'><br/></div><div class='line' id='LC15116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC15118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$log#info</div><div class='line' id='LC15119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$log</div><div class='line' id='LC15120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC15122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Write an information message</div><div class='line' id='LC15123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info: consoleLog(&#39;info&#39;),</div><div class='line' id='LC15125'><br/></div><div class='line' id='LC15126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC15128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$log#error</div><div class='line' id='LC15129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$log</div><div class='line' id='LC15130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC15132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Write an error message</div><div class='line' id='LC15133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: consoleLog(&#39;error&#39;)</div><div class='line' id='LC15135'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15136'><br/></div><div class='line' id='LC15137'>&nbsp;&nbsp;&nbsp;&nbsp;function formatError(arg) {</div><div class='line' id='LC15138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arg instanceof Error) {</div><div class='line' id='LC15139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arg.stack) {</div><div class='line' id='LC15140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = (arg.message &amp;&amp; arg.stack.indexOf(arg.message) === -1)</div><div class='line' id='LC15141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &#39;Error: &#39; + arg.message + &#39;\n&#39; + arg.stack</div><div class='line' id='LC15142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: arg.stack;</div><div class='line' id='LC15143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (arg.sourceURL) {</div><div class='line' id='LC15144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = arg.message + &#39;\n&#39; + arg.sourceURL + &#39;:&#39; + arg.line;</div><div class='line' id='LC15145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arg;</div><div class='line' id='LC15148'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15149'><br/></div><div class='line' id='LC15150'>&nbsp;&nbsp;&nbsp;&nbsp;function consoleLog(type) {</div><div class='line' id='LC15151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var console = $window.console || {},</div><div class='line' id='LC15152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logFn = console[type] || console.log || noop;</div><div class='line' id='LC15153'><br/></div><div class='line' id='LC15154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (logFn.apply) {</div><div class='line' id='LC15155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC15156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = [];</div><div class='line' id='LC15157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(arguments, function(arg) {</div><div class='line' id='LC15158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(formatError(arg));</div><div class='line' id='LC15159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return logFn.apply(console, args);</div><div class='line' id='LC15161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15163'><br/></div><div class='line' id='LC15164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are IE which either doesn&#39;t have window.console =&gt; this is noop and we do nothing,</div><div class='line' id='LC15165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// or we are IE where console.log doesn&#39;t have apply so we log at least first 2 args</div><div class='line' id='LC15166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(arg1, arg2) {</div><div class='line' id='LC15167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logFn(arg1, arg2);</div><div class='line' id='LC15168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15169'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15170'>&nbsp;&nbsp;}];</div><div class='line' id='LC15171'>}</div><div class='line' id='LC15172'><br/></div><div class='line' id='LC15173'>var OPERATORS = {</div><div class='line' id='LC15174'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;null&#39;:function(){return null;},</div><div class='line' id='LC15175'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;true&#39;:function(){return true;},</div><div class='line' id='LC15176'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;false&#39;:function(){return false;},</div><div class='line' id='LC15177'>&nbsp;&nbsp;&nbsp;&nbsp;undefined:noop,</div><div class='line' id='LC15178'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;+&#39;:function(self, locals, a,b){</div><div class='line' id='LC15179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a=a(self, locals); b=b(self, locals);</div><div class='line' id='LC15180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(a)) {</div><div class='line' id='LC15181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(b)) {</div><div class='line' id='LC15182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a + b;</div><div class='line' id='LC15183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a;</div><div class='line' id='LC15185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return isDefined(b)?b:undefined;},</div><div class='line' id='LC15187'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;-&#39;:function(self, locals, a,b){a=a(self, locals); b=b(self, locals); return (isDefined(a)?a:0)-(isDefined(b)?b:0);},</div><div class='line' id='LC15188'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;*&#39;:function(self, locals, a,b){return a(self, locals)*b(self, locals);},</div><div class='line' id='LC15189'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;/&#39;:function(self, locals, a,b){return a(self, locals)/b(self, locals);},</div><div class='line' id='LC15190'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;%&#39;:function(self, locals, a,b){return a(self, locals)%b(self, locals);},</div><div class='line' id='LC15191'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;^&#39;:function(self, locals, a,b){return a(self, locals)^b(self, locals);},</div><div class='line' id='LC15192'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;=&#39;:noop,</div><div class='line' id='LC15193'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;==&#39;:function(self, locals, a,b){return a(self, locals)==b(self, locals);},</div><div class='line' id='LC15194'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;!=&#39;:function(self, locals, a,b){return a(self, locals)!=b(self, locals);},</div><div class='line' id='LC15195'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;&#39;:function(self, locals, a,b){return a(self, locals)&lt;b(self, locals);},</div><div class='line' id='LC15196'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&gt;&#39;:function(self, locals, a,b){return a(self, locals)&gt;b(self, locals);},</div><div class='line' id='LC15197'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;=&#39;:function(self, locals, a,b){return a(self, locals)&lt;=b(self, locals);},</div><div class='line' id='LC15198'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&gt;=&#39;:function(self, locals, a,b){return a(self, locals)&gt;=b(self, locals);},</div><div class='line' id='LC15199'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&amp;&amp;&#39;:function(self, locals, a,b){return a(self, locals)&amp;&amp;b(self, locals);},</div><div class='line' id='LC15200'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;||&#39;:function(self, locals, a,b){return a(self, locals)||b(self, locals);},</div><div class='line' id='LC15201'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&amp;&#39;:function(self, locals, a,b){return a(self, locals)&amp;b(self, locals);},</div><div class='line' id='LC15202'>//    &#39;|&#39;:function(self, locals, a,b){return a|b;},</div><div class='line' id='LC15203'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;|&#39;:function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},</div><div class='line' id='LC15204'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;!&#39;:function(self, locals, a){return !a(self, locals);}</div><div class='line' id='LC15205'>};</div><div class='line' id='LC15206'>var ESCAPE = {&quot;n&quot;:&quot;\n&quot;, &quot;f&quot;:&quot;\f&quot;, &quot;r&quot;:&quot;\r&quot;, &quot;t&quot;:&quot;\t&quot;, &quot;v&quot;:&quot;\v&quot;, &quot;&#39;&quot;:&quot;&#39;&quot;, &#39;&quot;&#39;:&#39;&quot;&#39;};</div><div class='line' id='LC15207'><br/></div><div class='line' id='LC15208'>function lex(text, csp){</div><div class='line' id='LC15209'>&nbsp;&nbsp;var tokens = [],</div><div class='line' id='LC15210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token,</div><div class='line' id='LC15211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = 0,</div><div class='line' id='LC15212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = [],</div><div class='line' id='LC15213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch,</div><div class='line' id='LC15214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastCh = &#39;:&#39;; // can start regexp</div><div class='line' id='LC15215'><br/></div><div class='line' id='LC15216'>&nbsp;&nbsp;while (index &lt; text.length) {</div><div class='line' id='LC15217'>&nbsp;&nbsp;&nbsp;&nbsp;ch = text.charAt(index);</div><div class='line' id='LC15218'>&nbsp;&nbsp;&nbsp;&nbsp;if (is(&#39;&quot;\&#39;&#39;)) {</div><div class='line' id='LC15219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readString(ch);</div><div class='line' id='LC15220'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (isNumber(ch) || is(&#39;.&#39;) &amp;&amp; isNumber(peek())) {</div><div class='line' id='LC15221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readNumber();</div><div class='line' id='LC15222'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (isIdent(ch)) {</div><div class='line' id='LC15223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readIdent();</div><div class='line' id='LC15224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// identifiers can only be if the preceding char was a { or ,</div><div class='line' id='LC15225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (was(&#39;{,&#39;) &amp;&amp; json[0]==&#39;{&#39; &amp;&amp;</div><div class='line' id='LC15226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(token=tokens[tokens.length-1])) {</div><div class='line' id='LC15227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token.json = token.text.indexOf(&#39;.&#39;) == -1;</div><div class='line' id='LC15228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15229'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (is(&#39;(){}[].,;:&#39;)) {</div><div class='line' id='LC15230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({</div><div class='line' id='LC15231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index:index,</div><div class='line' id='LC15232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:ch,</div><div class='line' id='LC15233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json:(was(&#39;:[,&#39;) &amp;&amp; is(&#39;{[&#39;)) || is(&#39;}]:,&#39;)</div><div class='line' id='LC15234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is(&#39;{[&#39;)) json.unshift(ch);</div><div class='line' id='LC15236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is(&#39;}]&#39;)) json.shift();</div><div class='line' id='LC15237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15238'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (isWhitespace(ch)) {</div><div class='line' id='LC15239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC15241'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ch2 = ch + peek(),</div><div class='line' id='LC15243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn = OPERATORS[ch],</div><div class='line' id='LC15244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn2 = OPERATORS[ch2];</div><div class='line' id='LC15245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fn2) {</div><div class='line' id='LC15246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({index:index, text:ch2, fn:fn2});</div><div class='line' id='LC15247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index += 2;</div><div class='line' id='LC15248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (fn) {</div><div class='line' id='LC15249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({index:index, text:ch, fn:fn, json: was(&#39;[,:&#39;) &amp;&amp; is(&#39;+-&#39;)});</div><div class='line' id='LC15250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index += 1;</div><div class='line' id='LC15251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;Unexpected next character &quot;, index, index+1);</div><div class='line' id='LC15253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15254'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15255'>&nbsp;&nbsp;&nbsp;&nbsp;lastCh = ch;</div><div class='line' id='LC15256'>&nbsp;&nbsp;}</div><div class='line' id='LC15257'>&nbsp;&nbsp;return tokens;</div><div class='line' id='LC15258'><br/></div><div class='line' id='LC15259'>&nbsp;&nbsp;function is(chars) {</div><div class='line' id='LC15260'>&nbsp;&nbsp;&nbsp;&nbsp;return chars.indexOf(ch) != -1;</div><div class='line' id='LC15261'>&nbsp;&nbsp;}</div><div class='line' id='LC15262'><br/></div><div class='line' id='LC15263'>&nbsp;&nbsp;function was(chars) {</div><div class='line' id='LC15264'>&nbsp;&nbsp;&nbsp;&nbsp;return chars.indexOf(lastCh) != -1;</div><div class='line' id='LC15265'>&nbsp;&nbsp;}</div><div class='line' id='LC15266'><br/></div><div class='line' id='LC15267'>&nbsp;&nbsp;function peek() {</div><div class='line' id='LC15268'>&nbsp;&nbsp;&nbsp;&nbsp;return index + 1 &lt; text.length ? text.charAt(index + 1) : false;</div><div class='line' id='LC15269'>&nbsp;&nbsp;}</div><div class='line' id='LC15270'>&nbsp;&nbsp;function isNumber(ch) {</div><div class='line' id='LC15271'>&nbsp;&nbsp;&nbsp;&nbsp;return &#39;0&#39; &lt;= ch &amp;&amp; ch &lt;= &#39;9&#39;;</div><div class='line' id='LC15272'>&nbsp;&nbsp;}</div><div class='line' id='LC15273'>&nbsp;&nbsp;function isWhitespace(ch) {</div><div class='line' id='LC15274'>&nbsp;&nbsp;&nbsp;&nbsp;return ch == &#39; &#39; || ch == &#39;\r&#39; || ch == &#39;\t&#39; ||</div><div class='line' id='LC15275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch == &#39;\n&#39; || ch == &#39;\v&#39; || ch == &#39;\u00A0&#39;; // IE treats non-breaking space as \u00A0</div><div class='line' id='LC15276'>&nbsp;&nbsp;}</div><div class='line' id='LC15277'>&nbsp;&nbsp;function isIdent(ch) {</div><div class='line' id='LC15278'>&nbsp;&nbsp;&nbsp;&nbsp;return &#39;a&#39; &lt;= ch &amp;&amp; ch &lt;= &#39;z&#39; ||</div><div class='line' id='LC15279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;A&#39; &lt;= ch &amp;&amp; ch &lt;= &#39;Z&#39; ||</div><div class='line' id='LC15280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;_&#39; == ch || ch == &#39;$&#39;;</div><div class='line' id='LC15281'>&nbsp;&nbsp;}</div><div class='line' id='LC15282'>&nbsp;&nbsp;function isExpOperator(ch) {</div><div class='line' id='LC15283'>&nbsp;&nbsp;&nbsp;&nbsp;return ch == &#39;-&#39; || ch == &#39;+&#39; || isNumber(ch);</div><div class='line' id='LC15284'>&nbsp;&nbsp;}</div><div class='line' id='LC15285'><br/></div><div class='line' id='LC15286'>&nbsp;&nbsp;function throwError(error, start, end) {</div><div class='line' id='LC15287'>&nbsp;&nbsp;&nbsp;&nbsp;end = end || index;</div><div class='line' id='LC15288'>&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Lexer Error: &quot; + error + &quot; at column&quot; +</div><div class='line' id='LC15289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(isDefined(start)</div><div class='line' id='LC15290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &quot;s &quot; + start +  &quot;-&quot; + index + &quot; [&quot; + text.substring(start, end) + &quot;]&quot;</div><div class='line' id='LC15291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &quot; &quot; + end) +</div><div class='line' id='LC15292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot; in expression [&quot; + text + &quot;].&quot;);</div><div class='line' id='LC15293'>&nbsp;&nbsp;}</div><div class='line' id='LC15294'><br/></div><div class='line' id='LC15295'>&nbsp;&nbsp;function readNumber() {</div><div class='line' id='LC15296'>&nbsp;&nbsp;&nbsp;&nbsp;var number = &quot;&quot;;</div><div class='line' id='LC15297'>&nbsp;&nbsp;&nbsp;&nbsp;var start = index;</div><div class='line' id='LC15298'>&nbsp;&nbsp;&nbsp;&nbsp;while (index &lt; text.length) {</div><div class='line' id='LC15299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ch = lowercase(text.charAt(index));</div><div class='line' id='LC15300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;.&#39; || isNumber(ch)) {</div><div class='line' id='LC15301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number += ch;</div><div class='line' id='LC15302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var peekCh = peek();</div><div class='line' id='LC15304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;e&#39; &amp;&amp; isExpOperator(peekCh)) {</div><div class='line' id='LC15305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number += ch;</div><div class='line' id='LC15306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isExpOperator(ch) &amp;&amp;</div><div class='line' id='LC15307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;peekCh &amp;&amp; isNumber(peekCh) &amp;&amp;</div><div class='line' id='LC15308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number.charAt(number.length - 1) == &#39;e&#39;) {</div><div class='line' id='LC15309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number += ch;</div><div class='line' id='LC15310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isExpOperator(ch) &amp;&amp;</div><div class='line' id='LC15311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(!peekCh || !isNumber(peekCh)) &amp;&amp;</div><div class='line' id='LC15312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number.charAt(number.length - 1) == &#39;e&#39;) {</div><div class='line' id='LC15313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&#39;Invalid exponent&#39;);</div><div class='line' id='LC15314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC15316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15319'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15320'>&nbsp;&nbsp;&nbsp;&nbsp;number = 1 * number;</div><div class='line' id='LC15321'>&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({index:start, text:number, json:true,</div><div class='line' id='LC15322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn:function() {return number;}});</div><div class='line' id='LC15323'>&nbsp;&nbsp;}</div><div class='line' id='LC15324'>&nbsp;&nbsp;function readIdent() {</div><div class='line' id='LC15325'>&nbsp;&nbsp;&nbsp;&nbsp;var ident = &quot;&quot;,</div><div class='line' id='LC15326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start = index,</div><div class='line' id='LC15327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastDot, peekIndex, methodName, ch;</div><div class='line' id='LC15328'><br/></div><div class='line' id='LC15329'>&nbsp;&nbsp;&nbsp;&nbsp;while (index &lt; text.length) {</div><div class='line' id='LC15330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch = text.charAt(index);</div><div class='line' id='LC15331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;.&#39; || isIdent(ch) || isNumber(ch)) {</div><div class='line' id='LC15332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;.&#39;) lastDot = index;</div><div class='line' id='LC15333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ident += ch;</div><div class='line' id='LC15334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC15336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15338'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15339'><br/></div><div class='line' id='LC15340'>&nbsp;&nbsp;&nbsp;&nbsp;//check if this is not a method invocation and if it is back out to last dot</div><div class='line' id='LC15341'>&nbsp;&nbsp;&nbsp;&nbsp;if (lastDot) {</div><div class='line' id='LC15342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;peekIndex = index;</div><div class='line' id='LC15343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(peekIndex &lt; text.length) {</div><div class='line' id='LC15344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch = text.charAt(peekIndex);</div><div class='line' id='LC15345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;(&#39;) {</div><div class='line' id='LC15346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;methodName = ident.substr(lastDot - start + 1);</div><div class='line' id='LC15347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ident = ident.substr(0, lastDot - start);</div><div class='line' id='LC15348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = peekIndex;</div><div class='line' id='LC15349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC15350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isWhitespace(ch)) {</div><div class='line' id='LC15352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;peekIndex++;</div><div class='line' id='LC15353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC15355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15357'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15358'><br/></div><div class='line' id='LC15359'><br/></div><div class='line' id='LC15360'>&nbsp;&nbsp;&nbsp;&nbsp;var token = {</div><div class='line' id='LC15361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index:start,</div><div class='line' id='LC15362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:ident</div><div class='line' id='LC15363'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15364'><br/></div><div class='line' id='LC15365'>&nbsp;&nbsp;&nbsp;&nbsp;if (OPERATORS.hasOwnProperty(ident)) {</div><div class='line' id='LC15366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token.fn = token.json = OPERATORS[ident];</div><div class='line' id='LC15367'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var getter = getterFn(ident, csp);</div><div class='line' id='LC15369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token.fn = extend(function(self, locals) {</div><div class='line' id='LC15370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (getter(self, locals));</div><div class='line' id='LC15371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, {</div><div class='line' id='LC15372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign: function(self, value) {</div><div class='line' id='LC15373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setter(self, ident, value);</div><div class='line' id='LC15374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15376'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15377'><br/></div><div class='line' id='LC15378'>&nbsp;&nbsp;&nbsp;&nbsp;tokens.push(token);</div><div class='line' id='LC15379'><br/></div><div class='line' id='LC15380'>&nbsp;&nbsp;&nbsp;&nbsp;if (methodName) {</div><div class='line' id='LC15381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({</div><div class='line' id='LC15382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index:lastDot,</div><div class='line' id='LC15383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text: &#39;.&#39;,</div><div class='line' id='LC15384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json: false</div><div class='line' id='LC15385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({</div><div class='line' id='LC15387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index: lastDot + 1,</div><div class='line' id='LC15388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text: methodName,</div><div class='line' id='LC15389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json: false</div><div class='line' id='LC15390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15391'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15392'>&nbsp;&nbsp;}</div><div class='line' id='LC15393'><br/></div><div class='line' id='LC15394'>&nbsp;&nbsp;function readString(quote) {</div><div class='line' id='LC15395'>&nbsp;&nbsp;&nbsp;&nbsp;var start = index;</div><div class='line' id='LC15396'>&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15397'>&nbsp;&nbsp;&nbsp;&nbsp;var string = &quot;&quot;;</div><div class='line' id='LC15398'>&nbsp;&nbsp;&nbsp;&nbsp;var rawString = quote;</div><div class='line' id='LC15399'>&nbsp;&nbsp;&nbsp;&nbsp;var escape = false;</div><div class='line' id='LC15400'>&nbsp;&nbsp;&nbsp;&nbsp;while (index &lt; text.length) {</div><div class='line' id='LC15401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ch = text.charAt(index);</div><div class='line' id='LC15402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rawString += ch;</div><div class='line' id='LC15403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (escape) {</div><div class='line' id='LC15404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ch == &#39;u&#39;) {</div><div class='line' id='LC15405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hex = text.substring(index + 1, index + 5);</div><div class='line' id='LC15406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!hex.match(/[\da-f]{4}/i))</div><div class='line' id='LC15407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError( &quot;Invalid unicode escape [\\u&quot; + hex + &quot;]&quot;);</div><div class='line' id='LC15408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index += 4;</div><div class='line' id='LC15409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string += String.fromCharCode(parseInt(hex, 16));</div><div class='line' id='LC15410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rep = ESCAPE[ch];</div><div class='line' id='LC15412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rep) {</div><div class='line' id='LC15413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string += rep;</div><div class='line' id='LC15414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string += ch;</div><div class='line' id='LC15416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape = false;</div><div class='line' id='LC15419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (ch == &#39;\\&#39;) {</div><div class='line' id='LC15420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape = true;</div><div class='line' id='LC15421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (ch == quote) {</div><div class='line' id='LC15422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.push({</div><div class='line' id='LC15424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index:start,</div><div class='line' id='LC15425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:rawString,</div><div class='line' id='LC15426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string:string,</div><div class='line' id='LC15427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json:true,</div><div class='line' id='LC15428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn:function() { return string; }</div><div class='line' id='LC15429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC15431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string += ch;</div><div class='line' id='LC15433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;</div><div class='line' id='LC15435'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15436'>&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;Unterminated quote&quot;, start);</div><div class='line' id='LC15437'>&nbsp;&nbsp;}</div><div class='line' id='LC15438'>}</div><div class='line' id='LC15439'><br/></div><div class='line' id='LC15440'>/////////////////////////////////////////</div><div class='line' id='LC15441'><br/></div><div class='line' id='LC15442'>function parser(text, json, $filter, csp){</div><div class='line' id='LC15443'>&nbsp;&nbsp;var ZERO = valueFn(0),</div><div class='line' id='LC15444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value,</div><div class='line' id='LC15445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens = lex(text, csp),</div><div class='line' id='LC15446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assignment = _assignment,</div><div class='line' id='LC15447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functionCall = _functionCall,</div><div class='line' id='LC15448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldAccess = _fieldAccess,</div><div class='line' id='LC15449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectIndex = _objectIndex,</div><div class='line' id='LC15450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filterChain = _filterChain;</div><div class='line' id='LC15451'><br/></div><div class='line' id='LC15452'>&nbsp;&nbsp;if(json){</div><div class='line' id='LC15453'>&nbsp;&nbsp;&nbsp;&nbsp;// The extra level of aliasing is here, just in case the lexer misses something, so that</div><div class='line' id='LC15454'>&nbsp;&nbsp;&nbsp;&nbsp;// we prevent any accidental execution in JSON.</div><div class='line' id='LC15455'>&nbsp;&nbsp;&nbsp;&nbsp;assignment = logicalOR;</div><div class='line' id='LC15456'>&nbsp;&nbsp;&nbsp;&nbsp;functionCall =</div><div class='line' id='LC15457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldAccess =</div><div class='line' id='LC15458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objectIndex =</div><div class='line' id='LC15459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filterChain =</div><div class='line' id='LC15460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() { throwError(&quot;is not valid json&quot;, {text:text, index:0}); };</div><div class='line' id='LC15461'>&nbsp;&nbsp;&nbsp;&nbsp;value = primary();</div><div class='line' id='LC15462'>&nbsp;&nbsp;} else {</div><div class='line' id='LC15463'>&nbsp;&nbsp;&nbsp;&nbsp;value = statements();</div><div class='line' id='LC15464'>&nbsp;&nbsp;}</div><div class='line' id='LC15465'>&nbsp;&nbsp;if (tokens.length !== 0) {</div><div class='line' id='LC15466'>&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;is an unexpected token&quot;, tokens[0]);</div><div class='line' id='LC15467'>&nbsp;&nbsp;}</div><div class='line' id='LC15468'>&nbsp;&nbsp;return value;</div><div class='line' id='LC15469'><br/></div><div class='line' id='LC15470'>&nbsp;&nbsp;///////////////////////////////////</div><div class='line' id='LC15471'>&nbsp;&nbsp;function throwError(msg, token) {</div><div class='line' id='LC15472'>&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Syntax Error: Token &#39;&quot; + token.text +</div><div class='line' id='LC15473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&#39; &quot; + msg + &quot; at column &quot; +</div><div class='line' id='LC15474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(token.index + 1) + &quot; of the expression [&quot; +</div><div class='line' id='LC15475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text + &quot;] starting at [&quot; + text.substring(token.index) + &quot;].&quot;);</div><div class='line' id='LC15476'>&nbsp;&nbsp;}</div><div class='line' id='LC15477'><br/></div><div class='line' id='LC15478'>&nbsp;&nbsp;function peekToken() {</div><div class='line' id='LC15479'>&nbsp;&nbsp;&nbsp;&nbsp;if (tokens.length === 0)</div><div class='line' id='LC15480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Unexpected end of expression: &quot; + text);</div><div class='line' id='LC15481'>&nbsp;&nbsp;&nbsp;&nbsp;return tokens[0];</div><div class='line' id='LC15482'>&nbsp;&nbsp;}</div><div class='line' id='LC15483'><br/></div><div class='line' id='LC15484'>&nbsp;&nbsp;function peek(e1, e2, e3, e4) {</div><div class='line' id='LC15485'>&nbsp;&nbsp;&nbsp;&nbsp;if (tokens.length &gt; 0) {</div><div class='line' id='LC15486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var token = tokens[0];</div><div class='line' id='LC15487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var t = token.text;</div><div class='line' id='LC15488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t==e1 || t==e2 || t==e3 || t==e4 ||</div><div class='line' id='LC15489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(!e1 &amp;&amp; !e2 &amp;&amp; !e3 &amp;&amp; !e4)) {</div><div class='line' id='LC15490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return token;</div><div class='line' id='LC15491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15492'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15493'>&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15494'>&nbsp;&nbsp;}</div><div class='line' id='LC15495'><br/></div><div class='line' id='LC15496'>&nbsp;&nbsp;function expect(e1, e2, e3, e4){</div><div class='line' id='LC15497'>&nbsp;&nbsp;&nbsp;&nbsp;var token = peek(e1, e2, e3, e4);</div><div class='line' id='LC15498'>&nbsp;&nbsp;&nbsp;&nbsp;if (token) {</div><div class='line' id='LC15499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (json &amp;&amp; !token.json) {</div><div class='line' id='LC15500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;is not valid json&quot;, token);</div><div class='line' id='LC15501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokens.shift();</div><div class='line' id='LC15503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return token;</div><div class='line' id='LC15504'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15505'>&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15506'>&nbsp;&nbsp;}</div><div class='line' id='LC15507'><br/></div><div class='line' id='LC15508'>&nbsp;&nbsp;function consume(e1){</div><div class='line' id='LC15509'>&nbsp;&nbsp;&nbsp;&nbsp;if (!expect(e1)) {</div><div class='line' id='LC15510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;is unexpected, expecting [&quot; + e1 + &quot;]&quot;, peek());</div><div class='line' id='LC15511'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15512'>&nbsp;&nbsp;}</div><div class='line' id='LC15513'><br/></div><div class='line' id='LC15514'>&nbsp;&nbsp;function unaryFn(fn, right) {</div><div class='line' id='LC15515'>&nbsp;&nbsp;&nbsp;&nbsp;return function(self, locals) {</div><div class='line' id='LC15516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn(self, locals, right);</div><div class='line' id='LC15517'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15518'>&nbsp;&nbsp;}</div><div class='line' id='LC15519'><br/></div><div class='line' id='LC15520'>&nbsp;&nbsp;function binaryFn(left, fn, right) {</div><div class='line' id='LC15521'>&nbsp;&nbsp;&nbsp;&nbsp;return function(self, locals) {</div><div class='line' id='LC15522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn(self, locals, left, right);</div><div class='line' id='LC15523'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15524'>&nbsp;&nbsp;}</div><div class='line' id='LC15525'><br/></div><div class='line' id='LC15526'>&nbsp;&nbsp;function statements() {</div><div class='line' id='LC15527'>&nbsp;&nbsp;&nbsp;&nbsp;var statements = [];</div><div class='line' id='LC15528'>&nbsp;&nbsp;&nbsp;&nbsp;while(true) {</div><div class='line' id='LC15529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tokens.length &gt; 0 &amp;&amp; !peek(&#39;}&#39;, &#39;)&#39;, &#39;;&#39;, &#39;]&#39;))</div><div class='line' id='LC15530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;statements.push(filterChain());</div><div class='line' id='LC15531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!expect(&#39;;&#39;)) {</div><div class='line' id='LC15532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// optimize for the common case where there is only one statement.</div><div class='line' id='LC15533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(size): maybe we should not support multiple statements?</div><div class='line' id='LC15534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return statements.length == 1</div><div class='line' id='LC15535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? statements[0]</div><div class='line' id='LC15536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function(self, locals){</div><div class='line' id='LC15537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value;</div><div class='line' id='LC15538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; statements.length; i++) {</div><div class='line' id='LC15539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var statement = statements[i];</div><div class='line' id='LC15540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (statement)</div><div class='line' id='LC15541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = statement(self, locals);</div><div class='line' id='LC15542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC15544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15546'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15547'>&nbsp;&nbsp;}</div><div class='line' id='LC15548'><br/></div><div class='line' id='LC15549'>&nbsp;&nbsp;function _filterChain() {</div><div class='line' id='LC15550'>&nbsp;&nbsp;&nbsp;&nbsp;var left = expression();</div><div class='line' id='LC15551'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15552'>&nbsp;&nbsp;&nbsp;&nbsp;while(true) {</div><div class='line' id='LC15553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;|&#39;))) {</div><div class='line' id='LC15554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, filter());</div><div class='line' id='LC15555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15558'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15559'>&nbsp;&nbsp;}</div><div class='line' id='LC15560'><br/></div><div class='line' id='LC15561'>&nbsp;&nbsp;function filter() {</div><div class='line' id='LC15562'>&nbsp;&nbsp;&nbsp;&nbsp;var token = expect();</div><div class='line' id='LC15563'>&nbsp;&nbsp;&nbsp;&nbsp;var fn = $filter(token.text);</div><div class='line' id='LC15564'>&nbsp;&nbsp;&nbsp;&nbsp;var argsFn = [];</div><div class='line' id='LC15565'>&nbsp;&nbsp;&nbsp;&nbsp;while(true) {</div><div class='line' id='LC15566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;:&#39;))) {</div><div class='line' id='LC15567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argsFn.push(expression());</div><div class='line' id='LC15568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fnInvoke = function(self, locals, input){</div><div class='line' id='LC15570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = [input];</div><div class='line' id='LC15571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; argsFn.length; i++) {</div><div class='line' id='LC15572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(argsFn[i](self, locals));</div><div class='line' id='LC15573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(self, args);</div><div class='line' id='LC15575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC15577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fnInvoke;</div><div class='line' id='LC15578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15580'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15581'>&nbsp;&nbsp;}</div><div class='line' id='LC15582'><br/></div><div class='line' id='LC15583'>&nbsp;&nbsp;function expression() {</div><div class='line' id='LC15584'>&nbsp;&nbsp;&nbsp;&nbsp;return assignment();</div><div class='line' id='LC15585'>&nbsp;&nbsp;}</div><div class='line' id='LC15586'><br/></div><div class='line' id='LC15587'>&nbsp;&nbsp;function _assignment() {</div><div class='line' id='LC15588'>&nbsp;&nbsp;&nbsp;&nbsp;var left = logicalOR();</div><div class='line' id='LC15589'>&nbsp;&nbsp;&nbsp;&nbsp;var right;</div><div class='line' id='LC15590'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15591'>&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;=&#39;))) {</div><div class='line' id='LC15592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!left.assign) {</div><div class='line' id='LC15593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;implies assignment but [&quot; +</div><div class='line' id='LC15594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text.substring(0, token.index) + &quot;] can not be assigned to&quot;, token);</div><div class='line' id='LC15595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = logicalOR();</div><div class='line' id='LC15597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, locals){</div><div class='line' id='LC15598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return left.assign(scope, right(scope, locals), locals);</div><div class='line' id='LC15599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15600'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15602'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15603'>&nbsp;&nbsp;}</div><div class='line' id='LC15604'><br/></div><div class='line' id='LC15605'>&nbsp;&nbsp;function logicalOR() {</div><div class='line' id='LC15606'>&nbsp;&nbsp;&nbsp;&nbsp;var left = logicalAND();</div><div class='line' id='LC15607'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15608'>&nbsp;&nbsp;&nbsp;&nbsp;while(true) {</div><div class='line' id='LC15609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;||&#39;))) {</div><div class='line' id='LC15610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, logicalAND());</div><div class='line' id='LC15611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15614'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15615'>&nbsp;&nbsp;}</div><div class='line' id='LC15616'><br/></div><div class='line' id='LC15617'>&nbsp;&nbsp;function logicalAND() {</div><div class='line' id='LC15618'>&nbsp;&nbsp;&nbsp;&nbsp;var left = equality();</div><div class='line' id='LC15619'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15620'>&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;&amp;&amp;&#39;))) {</div><div class='line' id='LC15621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, logicalAND());</div><div class='line' id='LC15622'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15623'>&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15624'>&nbsp;&nbsp;}</div><div class='line' id='LC15625'><br/></div><div class='line' id='LC15626'>&nbsp;&nbsp;function equality() {</div><div class='line' id='LC15627'>&nbsp;&nbsp;&nbsp;&nbsp;var left = relational();</div><div class='line' id='LC15628'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15629'>&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;==&#39;,&#39;!=&#39;))) {</div><div class='line' id='LC15630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, equality());</div><div class='line' id='LC15631'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15632'>&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15633'>&nbsp;&nbsp;}</div><div class='line' id='LC15634'><br/></div><div class='line' id='LC15635'>&nbsp;&nbsp;function relational() {</div><div class='line' id='LC15636'>&nbsp;&nbsp;&nbsp;&nbsp;var left = additive();</div><div class='line' id='LC15637'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15638'>&nbsp;&nbsp;&nbsp;&nbsp;if ((token = expect(&#39;&lt;&#39;, &#39;&gt;&#39;, &#39;&lt;=&#39;, &#39;&gt;=&#39;))) {</div><div class='line' id='LC15639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, relational());</div><div class='line' id='LC15640'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15641'>&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15642'>&nbsp;&nbsp;}</div><div class='line' id='LC15643'><br/></div><div class='line' id='LC15644'>&nbsp;&nbsp;function additive() {</div><div class='line' id='LC15645'>&nbsp;&nbsp;&nbsp;&nbsp;var left = multiplicative();</div><div class='line' id='LC15646'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15647'>&nbsp;&nbsp;&nbsp;&nbsp;while ((token = expect(&#39;+&#39;,&#39;-&#39;))) {</div><div class='line' id='LC15648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, multiplicative());</div><div class='line' id='LC15649'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15650'>&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15651'>&nbsp;&nbsp;}</div><div class='line' id='LC15652'><br/></div><div class='line' id='LC15653'>&nbsp;&nbsp;function multiplicative() {</div><div class='line' id='LC15654'>&nbsp;&nbsp;&nbsp;&nbsp;var left = unary();</div><div class='line' id='LC15655'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15656'>&nbsp;&nbsp;&nbsp;&nbsp;while ((token = expect(&#39;*&#39;,&#39;/&#39;,&#39;%&#39;))) {</div><div class='line' id='LC15657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = binaryFn(left, token.fn, unary());</div><div class='line' id='LC15658'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15659'>&nbsp;&nbsp;&nbsp;&nbsp;return left;</div><div class='line' id='LC15660'>&nbsp;&nbsp;}</div><div class='line' id='LC15661'><br/></div><div class='line' id='LC15662'>&nbsp;&nbsp;function unary() {</div><div class='line' id='LC15663'>&nbsp;&nbsp;&nbsp;&nbsp;var token;</div><div class='line' id='LC15664'>&nbsp;&nbsp;&nbsp;&nbsp;if (expect(&#39;+&#39;)) {</div><div class='line' id='LC15665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return primary();</div><div class='line' id='LC15666'>&nbsp;&nbsp;&nbsp;&nbsp;} else if ((token = expect(&#39;-&#39;))) {</div><div class='line' id='LC15667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return binaryFn(ZERO, token.fn, unary());</div><div class='line' id='LC15668'>&nbsp;&nbsp;&nbsp;&nbsp;} else if ((token = expect(&#39;!&#39;))) {</div><div class='line' id='LC15669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return unaryFn(token.fn, unary());</div><div class='line' id='LC15670'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return primary();</div><div class='line' id='LC15672'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15673'>&nbsp;&nbsp;}</div><div class='line' id='LC15674'><br/></div><div class='line' id='LC15675'><br/></div><div class='line' id='LC15676'>&nbsp;&nbsp;function primary() {</div><div class='line' id='LC15677'>&nbsp;&nbsp;&nbsp;&nbsp;var primary;</div><div class='line' id='LC15678'>&nbsp;&nbsp;&nbsp;&nbsp;if (expect(&#39;(&#39;)) {</div><div class='line' id='LC15679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = filterChain();</div><div class='line' id='LC15680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;consume(&#39;)&#39;);</div><div class='line' id='LC15681'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (expect(&#39;[&#39;)) {</div><div class='line' id='LC15682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = arrayDeclaration();</div><div class='line' id='LC15683'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (expect(&#39;{&#39;)) {</div><div class='line' id='LC15684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = object();</div><div class='line' id='LC15685'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var token = expect();</div><div class='line' id='LC15687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = token.fn;</div><div class='line' id='LC15688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!primary) {</div><div class='line' id='LC15689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;not a primary expression&quot;, token);</div><div class='line' id='LC15690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15691'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15692'><br/></div><div class='line' id='LC15693'>&nbsp;&nbsp;&nbsp;&nbsp;var next, context;</div><div class='line' id='LC15694'>&nbsp;&nbsp;&nbsp;&nbsp;while ((next = expect(&#39;(&#39;, &#39;[&#39;, &#39;.&#39;))) {</div><div class='line' id='LC15695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next.text === &#39;(&#39;) {</div><div class='line' id='LC15696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = functionCall(primary, context);</div><div class='line' id='LC15697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = null;</div><div class='line' id='LC15698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (next.text === &#39;[&#39;) {</div><div class='line' id='LC15699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = primary;</div><div class='line' id='LC15700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = objectIndex(primary);</div><div class='line' id='LC15701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (next.text === &#39;.&#39;) {</div><div class='line' id='LC15702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = primary;</div><div class='line' id='LC15703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primary = fieldAccess(primary);</div><div class='line' id='LC15704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throwError(&quot;IMPOSSIBLE&quot;);</div><div class='line' id='LC15706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15707'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15708'>&nbsp;&nbsp;&nbsp;&nbsp;return primary;</div><div class='line' id='LC15709'>&nbsp;&nbsp;}</div><div class='line' id='LC15710'><br/></div><div class='line' id='LC15711'>&nbsp;&nbsp;function _fieldAccess(object) {</div><div class='line' id='LC15712'>&nbsp;&nbsp;&nbsp;&nbsp;var field = expect().text;</div><div class='line' id='LC15713'>&nbsp;&nbsp;&nbsp;&nbsp;var getter = getterFn(field, csp);</div><div class='line' id='LC15714'>&nbsp;&nbsp;&nbsp;&nbsp;return extend(</div><div class='line' id='LC15715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(scope, locals, self) {</div><div class='line' id='LC15716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return getter(self || object(scope, locals), locals);</div><div class='line' id='LC15717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC15718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC15719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign:function(scope, value, locals) {</div><div class='line' id='LC15720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setter(object(scope, locals), field, value);</div><div class='line' id='LC15721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15723'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC15724'>&nbsp;&nbsp;}</div><div class='line' id='LC15725'><br/></div><div class='line' id='LC15726'>&nbsp;&nbsp;function _objectIndex(obj) {</div><div class='line' id='LC15727'>&nbsp;&nbsp;&nbsp;&nbsp;var indexFn = expression();</div><div class='line' id='LC15728'>&nbsp;&nbsp;&nbsp;&nbsp;consume(&#39;]&#39;);</div><div class='line' id='LC15729'>&nbsp;&nbsp;&nbsp;&nbsp;return extend(</div><div class='line' id='LC15730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(self, locals){</div><div class='line' id='LC15731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var o = obj(self, locals),</div><div class='line' id='LC15732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = indexFn(self, locals),</div><div class='line' id='LC15733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v, p;</div><div class='line' id='LC15734'><br/></div><div class='line' id='LC15735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!o) return undefined;</div><div class='line' id='LC15736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = o[i];</div><div class='line' id='LC15737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v &amp;&amp; v.then) {</div><div class='line' id='LC15738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = v;</div><div class='line' id='LC15739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&#39;$$v&#39; in v)) {</div><div class='line' id='LC15740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.$$v = undefined;</div><div class='line' id='LC15741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p.then(function(val) { p.$$v = val; });</div><div class='line' id='LC15742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = v.$$v;</div><div class='line' id='LC15744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</div><div class='line' id='LC15746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, {</div><div class='line' id='LC15747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign:function(self, value, locals){</div><div class='line' id='LC15748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj(self, locals)[indexFn(self, locals)] = value;</div><div class='line' id='LC15749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15751'>&nbsp;&nbsp;}</div><div class='line' id='LC15752'><br/></div><div class='line' id='LC15753'>&nbsp;&nbsp;function _functionCall(fn, contextGetter) {</div><div class='line' id='LC15754'>&nbsp;&nbsp;&nbsp;&nbsp;var argsFn = [];</div><div class='line' id='LC15755'>&nbsp;&nbsp;&nbsp;&nbsp;if (peekToken().text != &#39;)&#39;) {</div><div class='line' id='LC15756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC15757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argsFn.push(expression());</div><div class='line' id='LC15758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (expect(&#39;,&#39;));</div><div class='line' id='LC15759'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15760'>&nbsp;&nbsp;&nbsp;&nbsp;consume(&#39;)&#39;);</div><div class='line' id='LC15761'>&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, locals){</div><div class='line' id='LC15762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = [],</div><div class='line' id='LC15763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = contextGetter ? contextGetter(scope, locals) : scope;</div><div class='line' id='LC15764'><br/></div><div class='line' id='LC15765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; argsFn.length; i++) {</div><div class='line' id='LC15766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(argsFn[i](scope, locals));</div><div class='line' id='LC15767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fnPtr = fn(scope, locals, context) || noop;</div><div class='line' id='LC15769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE stupidity!</div><div class='line' id='LC15770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fnPtr.apply</div><div class='line' id='LC15771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? fnPtr.apply(context, args)</div><div class='line' id='LC15772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: fnPtr(args[0], args[1], args[2], args[3], args[4]);</div><div class='line' id='LC15773'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15774'>&nbsp;&nbsp;}</div><div class='line' id='LC15775'><br/></div><div class='line' id='LC15776'>&nbsp;&nbsp;// This is used with json array declaration</div><div class='line' id='LC15777'>&nbsp;&nbsp;function arrayDeclaration () {</div><div class='line' id='LC15778'>&nbsp;&nbsp;&nbsp;&nbsp;var elementFns = [];</div><div class='line' id='LC15779'>&nbsp;&nbsp;&nbsp;&nbsp;if (peekToken().text != &#39;]&#39;) {</div><div class='line' id='LC15780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC15781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elementFns.push(expression());</div><div class='line' id='LC15782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (expect(&#39;,&#39;));</div><div class='line' id='LC15783'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15784'>&nbsp;&nbsp;&nbsp;&nbsp;consume(&#39;]&#39;);</div><div class='line' id='LC15785'>&nbsp;&nbsp;&nbsp;&nbsp;return function(self, locals){</div><div class='line' id='LC15786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var array = [];</div><div class='line' id='LC15787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; elementFns.length; i++) {</div><div class='line' id='LC15788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.push(elementFns[i](self, locals));</div><div class='line' id='LC15789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array;</div><div class='line' id='LC15791'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15792'>&nbsp;&nbsp;}</div><div class='line' id='LC15793'><br/></div><div class='line' id='LC15794'>&nbsp;&nbsp;function object () {</div><div class='line' id='LC15795'>&nbsp;&nbsp;&nbsp;&nbsp;var keyValues = [];</div><div class='line' id='LC15796'>&nbsp;&nbsp;&nbsp;&nbsp;if (peekToken().text != &#39;}&#39;) {</div><div class='line' id='LC15797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC15798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var token = expect(),</div><div class='line' id='LC15799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = token.string || token.text;</div><div class='line' id='LC15800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;consume(&quot;:&quot;);</div><div class='line' id='LC15801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value = expression();</div><div class='line' id='LC15802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyValues.push({key:key, value:value});</div><div class='line' id='LC15803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (expect(&#39;,&#39;));</div><div class='line' id='LC15804'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15805'>&nbsp;&nbsp;&nbsp;&nbsp;consume(&#39;}&#39;);</div><div class='line' id='LC15806'>&nbsp;&nbsp;&nbsp;&nbsp;return function(self, locals){</div><div class='line' id='LC15807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var object = {};</div><div class='line' id='LC15808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; keyValues.length; i++) {</div><div class='line' id='LC15809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keyValue = keyValues[i];</div><div class='line' id='LC15810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[keyValue.key] = keyValue.value(self, locals);</div><div class='line' id='LC15811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC15813'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15814'>&nbsp;&nbsp;}</div><div class='line' id='LC15815'>}</div><div class='line' id='LC15816'><br/></div><div class='line' id='LC15817'>//////////////////////////////////////////////////</div><div class='line' id='LC15818'>// Parser helper functions</div><div class='line' id='LC15819'>//////////////////////////////////////////////////</div><div class='line' id='LC15820'><br/></div><div class='line' id='LC15821'>function setter(obj, path, setValue) {</div><div class='line' id='LC15822'>&nbsp;&nbsp;var element = path.split(&#39;.&#39;);</div><div class='line' id='LC15823'>&nbsp;&nbsp;for (var i = 0; element.length &gt; 1; i++) {</div><div class='line' id='LC15824'>&nbsp;&nbsp;&nbsp;&nbsp;var key = element.shift();</div><div class='line' id='LC15825'>&nbsp;&nbsp;&nbsp;&nbsp;var propertyObj = obj[key];</div><div class='line' id='LC15826'>&nbsp;&nbsp;&nbsp;&nbsp;if (!propertyObj) {</div><div class='line' id='LC15827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyObj = {};</div><div class='line' id='LC15828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = propertyObj;</div><div class='line' id='LC15829'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15830'>&nbsp;&nbsp;&nbsp;&nbsp;obj = propertyObj;</div><div class='line' id='LC15831'>&nbsp;&nbsp;}</div><div class='line' id='LC15832'>&nbsp;&nbsp;obj[element.shift()] = setValue;</div><div class='line' id='LC15833'>&nbsp;&nbsp;return setValue;</div><div class='line' id='LC15834'>}</div><div class='line' id='LC15835'><br/></div><div class='line' id='LC15836'>/**</div><div class='line' id='LC15837'>&nbsp;* Return the value accesible from the object by path. Any undefined traversals are ignored</div><div class='line' id='LC15838'>&nbsp;* @param {Object} obj starting object</div><div class='line' id='LC15839'>&nbsp;* @param {string} path path to traverse</div><div class='line' id='LC15840'>&nbsp;* @param {boolean=true} bindFnToScope</div><div class='line' id='LC15841'>&nbsp;* @returns value as accesbile by path</div><div class='line' id='LC15842'>&nbsp;*/</div><div class='line' id='LC15843'>//TODO(misko): this function needs to be removed</div><div class='line' id='LC15844'>function getter(obj, path, bindFnToScope) {</div><div class='line' id='LC15845'>&nbsp;&nbsp;if (!path) return obj;</div><div class='line' id='LC15846'>&nbsp;&nbsp;var keys = path.split(&#39;.&#39;);</div><div class='line' id='LC15847'>&nbsp;&nbsp;var key;</div><div class='line' id='LC15848'>&nbsp;&nbsp;var lastInstance = obj;</div><div class='line' id='LC15849'>&nbsp;&nbsp;var len = keys.length;</div><div class='line' id='LC15850'><br/></div><div class='line' id='LC15851'>&nbsp;&nbsp;for (var i = 0; i &lt; len; i++) {</div><div class='line' id='LC15852'>&nbsp;&nbsp;&nbsp;&nbsp;key = keys[i];</div><div class='line' id='LC15853'>&nbsp;&nbsp;&nbsp;&nbsp;if (obj) {</div><div class='line' id='LC15854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = (lastInstance = obj)[key];</div><div class='line' id='LC15855'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15856'>&nbsp;&nbsp;}</div><div class='line' id='LC15857'>&nbsp;&nbsp;if (!bindFnToScope &amp;&amp; isFunction(obj)) {</div><div class='line' id='LC15858'>&nbsp;&nbsp;&nbsp;&nbsp;return bind(lastInstance, obj);</div><div class='line' id='LC15859'>&nbsp;&nbsp;}</div><div class='line' id='LC15860'>&nbsp;&nbsp;return obj;</div><div class='line' id='LC15861'>}</div><div class='line' id='LC15862'><br/></div><div class='line' id='LC15863'>var getterFnCache = {};</div><div class='line' id='LC15864'><br/></div><div class='line' id='LC15865'>/**</div><div class='line' id='LC15866'>&nbsp;* Implementation of the &quot;Black Hole&quot; variant from:</div><div class='line' id='LC15867'>&nbsp;* - http://jsperf.com/angularjs-parse-getter/4</div><div class='line' id='LC15868'>&nbsp;* - http://jsperf.com/path-evaluation-simplified/7</div><div class='line' id='LC15869'>&nbsp;*/</div><div class='line' id='LC15870'>function cspSafeGetterFn(key0, key1, key2, key3, key4) {</div><div class='line' id='LC15871'>&nbsp;&nbsp;return function(scope, locals) {</div><div class='line' id='LC15872'>&nbsp;&nbsp;&nbsp;&nbsp;var pathVal = (locals &amp;&amp; locals.hasOwnProperty(key0)) ? locals : scope,</div><div class='line' id='LC15873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise;</div><div class='line' id='LC15874'><br/></div><div class='line' id='LC15875'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal === null || pathVal === undefined) return pathVal;</div><div class='line' id='LC15876'><br/></div><div class='line' id='LC15877'>&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal[key0];</div><div class='line' id='LC15878'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal &amp;&amp; pathVal.then) {</div><div class='line' id='LC15879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&quot;$$v&quot; in pathVal)) {</div><div class='line' id='LC15880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = pathVal;</div><div class='line' id='LC15881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$v = undefined;</div><div class='line' id='LC15882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(val) { promise.$$v = val; });</div><div class='line' id='LC15883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal.$$v;</div><div class='line' id='LC15885'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15886'>&nbsp;&nbsp;&nbsp;&nbsp;if (!key1 || pathVal === null || pathVal === undefined) return pathVal;</div><div class='line' id='LC15887'><br/></div><div class='line' id='LC15888'>&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal[key1];</div><div class='line' id='LC15889'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal &amp;&amp; pathVal.then) {</div><div class='line' id='LC15890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&quot;$$v&quot; in pathVal)) {</div><div class='line' id='LC15891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = pathVal;</div><div class='line' id='LC15892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$v = undefined;</div><div class='line' id='LC15893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(val) { promise.$$v = val; });</div><div class='line' id='LC15894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal.$$v;</div><div class='line' id='LC15896'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15897'>&nbsp;&nbsp;&nbsp;&nbsp;if (!key2 || pathVal === null || pathVal === undefined) return pathVal;</div><div class='line' id='LC15898'><br/></div><div class='line' id='LC15899'>&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal[key2];</div><div class='line' id='LC15900'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal &amp;&amp; pathVal.then) {</div><div class='line' id='LC15901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&quot;$$v&quot; in pathVal)) {</div><div class='line' id='LC15902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = pathVal;</div><div class='line' id='LC15903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$v = undefined;</div><div class='line' id='LC15904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(val) { promise.$$v = val; });</div><div class='line' id='LC15905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal.$$v;</div><div class='line' id='LC15907'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15908'>&nbsp;&nbsp;&nbsp;&nbsp;if (!key3 || pathVal === null || pathVal === undefined) return pathVal;</div><div class='line' id='LC15909'><br/></div><div class='line' id='LC15910'>&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal[key3];</div><div class='line' id='LC15911'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal &amp;&amp; pathVal.then) {</div><div class='line' id='LC15912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&quot;$$v&quot; in pathVal)) {</div><div class='line' id='LC15913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = pathVal;</div><div class='line' id='LC15914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$v = undefined;</div><div class='line' id='LC15915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(val) { promise.$$v = val; });</div><div class='line' id='LC15916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal.$$v;</div><div class='line' id='LC15918'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15919'>&nbsp;&nbsp;&nbsp;&nbsp;if (!key4 || pathVal === null || pathVal === undefined) return pathVal;</div><div class='line' id='LC15920'><br/></div><div class='line' id='LC15921'>&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal[key4];</div><div class='line' id='LC15922'>&nbsp;&nbsp;&nbsp;&nbsp;if (pathVal &amp;&amp; pathVal.then) {</div><div class='line' id='LC15923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&quot;$$v&quot; in pathVal)) {</div><div class='line' id='LC15924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = pathVal;</div><div class='line' id='LC15925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$v = undefined;</div><div class='line' id='LC15926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(val) { promise.$$v = val; });</div><div class='line' id='LC15927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathVal = pathVal.$$v;</div><div class='line' id='LC15929'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15930'>&nbsp;&nbsp;&nbsp;&nbsp;return pathVal;</div><div class='line' id='LC15931'>&nbsp;&nbsp;};</div><div class='line' id='LC15932'>}</div><div class='line' id='LC15933'><br/></div><div class='line' id='LC15934'>function getterFn(path, csp) {</div><div class='line' id='LC15935'>&nbsp;&nbsp;if (getterFnCache.hasOwnProperty(path)) {</div><div class='line' id='LC15936'>&nbsp;&nbsp;&nbsp;&nbsp;return getterFnCache[path];</div><div class='line' id='LC15937'>&nbsp;&nbsp;}</div><div class='line' id='LC15938'><br/></div><div class='line' id='LC15939'>&nbsp;&nbsp;var pathKeys = path.split(&#39;.&#39;),</div><div class='line' id='LC15940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathKeysLength = pathKeys.length,</div><div class='line' id='LC15941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn;</div><div class='line' id='LC15942'><br/></div><div class='line' id='LC15943'>&nbsp;&nbsp;if (csp) {</div><div class='line' id='LC15944'>&nbsp;&nbsp;&nbsp;&nbsp;fn = (pathKeysLength &lt; 6)</div><div class='line' id='LC15945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4])</div><div class='line' id='LC15946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: function(scope, locals) {</div><div class='line' id='LC15947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i = 0, val;</div><div class='line' id='LC15948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC15949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = cspSafeGetterFn(</div><div class='line' id='LC15950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++]</div><div class='line' id='LC15951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)(scope, locals);</div><div class='line' id='LC15952'><br/></div><div class='line' id='LC15953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals = undefined; // clear after first iteration</div><div class='line' id='LC15954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = val;</div><div class='line' id='LC15955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (i &lt; pathKeysLength);</div><div class='line' id='LC15956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return val;</div><div class='line' id='LC15957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15958'>&nbsp;&nbsp;} else {</div><div class='line' id='LC15959'>&nbsp;&nbsp;&nbsp;&nbsp;var code = &#39;var l, fn, p;\n&#39;;</div><div class='line' id='LC15960'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(pathKeys, function(key, index) {</div><div class='line' id='LC15961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code += &#39;if(s === null || s === undefined) return s;\n&#39; +</div><div class='line' id='LC15962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;l=s;\n&#39; +</div><div class='line' id='LC15963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;s=&#39;+ (index</div><div class='line' id='LC15964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we simply dereference &#39;s&#39; on any .dot notation</div><div class='line' id='LC15965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &#39;s&#39;</div><div class='line' id='LC15966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// but if we are first then we check locals first, and if so read it first</div><div class='line' id='LC15967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &#39;((k&amp;&amp;k.hasOwnProperty(&quot;&#39; + key + &#39;&quot;))?k:s)&#39;) + &#39;[&quot;&#39; + key + &#39;&quot;]&#39; + &#39;;\n&#39; +</div><div class='line' id='LC15968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;if (s &amp;&amp; s.then) {\n&#39; +</div><div class='line' id='LC15969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; if (!(&quot;$$v&quot; in s)) {\n&#39; +</div><div class='line' id='LC15970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; p=s;\n&#39; +</div><div class='line' id='LC15971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; p.$$v = undefined;\n&#39; +</div><div class='line' id='LC15972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; p.then(function(v) {p.$$v=v;});\n&#39; +</div><div class='line' id='LC15973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;}\n&#39; +</div><div class='line' id='LC15974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; s=s.$$v\n&#39; +</div><div class='line' id='LC15975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;}\n&#39;;</div><div class='line' id='LC15976'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15977'>&nbsp;&nbsp;&nbsp;&nbsp;code += &#39;return s;&#39;;</div><div class='line' id='LC15978'>&nbsp;&nbsp;&nbsp;&nbsp;fn = Function(&#39;s&#39;, &#39;k&#39;, code); // s=scope, k=locals</div><div class='line' id='LC15979'>&nbsp;&nbsp;&nbsp;&nbsp;fn.toString = function() { return code; };</div><div class='line' id='LC15980'>&nbsp;&nbsp;}</div><div class='line' id='LC15981'><br/></div><div class='line' id='LC15982'>&nbsp;&nbsp;return getterFnCache[path] = fn;</div><div class='line' id='LC15983'>}</div><div class='line' id='LC15984'><br/></div><div class='line' id='LC15985'>///////////////////////////////////</div><div class='line' id='LC15986'><br/></div><div class='line' id='LC15987'>/**</div><div class='line' id='LC15988'>&nbsp;* @ngdoc function</div><div class='line' id='LC15989'>&nbsp;* @name ng.$parse</div><div class='line' id='LC15990'>&nbsp;* @function</div><div class='line' id='LC15991'>&nbsp;*</div><div class='line' id='LC15992'>&nbsp;* @description</div><div class='line' id='LC15993'>&nbsp;*</div><div class='line' id='LC15994'>&nbsp;* Converts Angular {@link guide/expression expression} into a function.</div><div class='line' id='LC15995'>&nbsp;*</div><div class='line' id='LC15996'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC15997'>&nbsp;*   var getter = $parse(&#39;user.name&#39;);</div><div class='line' id='LC15998'>&nbsp;*   var setter = getter.assign;</div><div class='line' id='LC15999'>&nbsp;*   var context = {user:{name:&#39;angular&#39;}};</div><div class='line' id='LC16000'>&nbsp;*   var locals = {user:{name:&#39;local&#39;}};</div><div class='line' id='LC16001'>&nbsp;*</div><div class='line' id='LC16002'>&nbsp;*   expect(getter(context)).toEqual(&#39;angular&#39;);</div><div class='line' id='LC16003'>&nbsp;*   setter(context, &#39;newValue&#39;);</div><div class='line' id='LC16004'>&nbsp;*   expect(context.user.name).toEqual(&#39;newValue&#39;);</div><div class='line' id='LC16005'>&nbsp;*   expect(getter(context, locals)).toEqual(&#39;local&#39;);</div><div class='line' id='LC16006'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC16007'>&nbsp;*</div><div class='line' id='LC16008'>&nbsp;*</div><div class='line' id='LC16009'>&nbsp;* @param {string} expression String expression to compile.</div><div class='line' id='LC16010'>&nbsp;* @returns {function(context, locals)} a function which represents the compiled expression:</div><div class='line' id='LC16011'>&nbsp;*</div><div class='line' id='LC16012'>&nbsp;*    * `context` – `{object}` – an object against which any expressions embedded in the strings</div><div class='line' id='LC16013'>&nbsp;*      are evaluated against (tipically a scope object).</div><div class='line' id='LC16014'>&nbsp;*    * `locals` – `{object=}` – local variables context object, useful for overriding values in</div><div class='line' id='LC16015'>&nbsp;*      `context`.</div><div class='line' id='LC16016'>&nbsp;*</div><div class='line' id='LC16017'>&nbsp;*    The return function also has an `assign` property, if the expression is assignable, which</div><div class='line' id='LC16018'>&nbsp;*    allows one to set values to expressions.</div><div class='line' id='LC16019'>&nbsp;*</div><div class='line' id='LC16020'>&nbsp;*/</div><div class='line' id='LC16021'>function $ParseProvider() {</div><div class='line' id='LC16022'>&nbsp;&nbsp;var cache = {};</div><div class='line' id='LC16023'>&nbsp;&nbsp;this.$get = [&#39;$filter&#39;, &#39;$sniffer&#39;, function($filter, $sniffer) {</div><div class='line' id='LC16024'>&nbsp;&nbsp;&nbsp;&nbsp;return function(exp) {</div><div class='line' id='LC16025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(typeof exp) {</div><div class='line' id='LC16026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;string&#39;:</div><div class='line' id='LC16027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cache.hasOwnProperty(exp)</div><div class='line' id='LC16028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? cache[exp]</div><div class='line' id='LC16029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: cache[exp] =  parser(exp, false, $filter, $sniffer.csp);</div><div class='line' id='LC16030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;function&#39;:</div><div class='line' id='LC16031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return exp;</div><div class='line' id='LC16032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC16033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return noop;</div><div class='line' id='LC16034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16035'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16036'>&nbsp;&nbsp;}];</div><div class='line' id='LC16037'>}</div><div class='line' id='LC16038'><br/></div><div class='line' id='LC16039'>/**</div><div class='line' id='LC16040'>&nbsp;* @ngdoc service</div><div class='line' id='LC16041'>&nbsp;* @name ng.$q</div><div class='line' id='LC16042'>&nbsp;* @requires $rootScope</div><div class='line' id='LC16043'>&nbsp;*</div><div class='line' id='LC16044'>&nbsp;* @description</div><div class='line' id='LC16045'>&nbsp;* A promise/deferred implementation inspired by [Kris Kowal&#39;s Q](https://github.com/kriskowal/q).</div><div class='line' id='LC16046'>&nbsp;*</div><div class='line' id='LC16047'>&nbsp;* [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an</div><div class='line' id='LC16048'>&nbsp;* interface for interacting with an object that represents the result of an action that is</div><div class='line' id='LC16049'>&nbsp;* performed asynchronously, and may or may not be finished at any given point in time.</div><div class='line' id='LC16050'>&nbsp;*</div><div class='line' id='LC16051'>&nbsp;* From the perspective of dealing with error handling, deferred and promise APIs are to</div><div class='line' id='LC16052'>&nbsp;* asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.</div><div class='line' id='LC16053'>&nbsp;*</div><div class='line' id='LC16054'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC16055'>&nbsp;*   // for the purpose of this example let&#39;s assume that variables `$q` and `scope` are</div><div class='line' id='LC16056'>&nbsp;*   // available in the current lexical scope (they could have been injected or passed in).</div><div class='line' id='LC16057'>&nbsp;*</div><div class='line' id='LC16058'>&nbsp;*   function asyncGreet(name) {</div><div class='line' id='LC16059'>&nbsp;*     var deferred = $q.defer();</div><div class='line' id='LC16060'>&nbsp;*</div><div class='line' id='LC16061'>&nbsp;*     setTimeout(function() {</div><div class='line' id='LC16062'>&nbsp;*       // since this fn executes async in a future turn of the event loop, we need to wrap</div><div class='line' id='LC16063'>&nbsp;*       // our code into an $apply call so that the model changes are properly observed.</div><div class='line' id='LC16064'>&nbsp;*       scope.$apply(function() {</div><div class='line' id='LC16065'>&nbsp;*         if (okToGreet(name)) {</div><div class='line' id='LC16066'>&nbsp;*           deferred.resolve(&#39;Hello, &#39; + name + &#39;!&#39;);</div><div class='line' id='LC16067'>&nbsp;*         } else {</div><div class='line' id='LC16068'>&nbsp;*           deferred.reject(&#39;Greeting &#39; + name + &#39; is not allowed.&#39;);</div><div class='line' id='LC16069'>&nbsp;*         }</div><div class='line' id='LC16070'>&nbsp;*       });</div><div class='line' id='LC16071'>&nbsp;*     }, 1000);</div><div class='line' id='LC16072'>&nbsp;*</div><div class='line' id='LC16073'>&nbsp;*     return deferred.promise;</div><div class='line' id='LC16074'>&nbsp;*   }</div><div class='line' id='LC16075'>&nbsp;*</div><div class='line' id='LC16076'>&nbsp;*   var promise = asyncGreet(&#39;Robin Hood&#39;);</div><div class='line' id='LC16077'>&nbsp;*   promise.then(function(greeting) {</div><div class='line' id='LC16078'>&nbsp;*     alert(&#39;Success: &#39; + greeting);</div><div class='line' id='LC16079'>&nbsp;*   }, function(reason) {</div><div class='line' id='LC16080'>&nbsp;*     alert(&#39;Failed: &#39; + reason);</div><div class='line' id='LC16081'>&nbsp;*   });</div><div class='line' id='LC16082'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC16083'>&nbsp;*</div><div class='line' id='LC16084'>&nbsp;* At first it might not be obvious why this extra complexity is worth the trouble. The payoff</div><div class='line' id='LC16085'>&nbsp;* comes in the way of</div><div class='line' id='LC16086'>&nbsp;* [guarantees that promise and deferred APIs make](https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md).</div><div class='line' id='LC16087'>&nbsp;*</div><div class='line' id='LC16088'>&nbsp;* Additionally the promise api allows for composition that is very hard to do with the</div><div class='line' id='LC16089'>&nbsp;* traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.</div><div class='line' id='LC16090'>&nbsp;* For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the</div><div class='line' id='LC16091'>&nbsp;* section on serial or parallel joining of promises.</div><div class='line' id='LC16092'>&nbsp;*</div><div class='line' id='LC16093'>&nbsp;*</div><div class='line' id='LC16094'>&nbsp;* # The Deferred API</div><div class='line' id='LC16095'>&nbsp;*</div><div class='line' id='LC16096'>&nbsp;* A new instance of deferred is constructed by calling `$q.defer()`.</div><div class='line' id='LC16097'>&nbsp;*</div><div class='line' id='LC16098'>&nbsp;* The purpose of the deferred object is to expose the associated Promise instance as well as APIs</div><div class='line' id='LC16099'>&nbsp;* that can be used for signaling the successful or unsuccessful completion of the task.</div><div class='line' id='LC16100'>&nbsp;*</div><div class='line' id='LC16101'>&nbsp;* **Methods**</div><div class='line' id='LC16102'>&nbsp;*</div><div class='line' id='LC16103'>&nbsp;* - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection</div><div class='line' id='LC16104'>&nbsp;*   constructed via `$q.reject`, the promise will be rejected instead.</div><div class='line' id='LC16105'>&nbsp;* - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to</div><div class='line' id='LC16106'>&nbsp;*   resolving it with a rejection constructed via `$q.reject`.</div><div class='line' id='LC16107'>&nbsp;*</div><div class='line' id='LC16108'>&nbsp;* **Properties**</div><div class='line' id='LC16109'>&nbsp;*</div><div class='line' id='LC16110'>&nbsp;* - promise – `{Promise}` – promise object associated with this deferred.</div><div class='line' id='LC16111'>&nbsp;*</div><div class='line' id='LC16112'>&nbsp;*</div><div class='line' id='LC16113'>&nbsp;* # The Promise API</div><div class='line' id='LC16114'>&nbsp;*</div><div class='line' id='LC16115'>&nbsp;* A new promise instance is created when a deferred instance is created and can be retrieved by</div><div class='line' id='LC16116'>&nbsp;* calling `deferred.promise`.</div><div class='line' id='LC16117'>&nbsp;*</div><div class='line' id='LC16118'>&nbsp;* The purpose of the promise object is to allow for interested parties to get access to the result</div><div class='line' id='LC16119'>&nbsp;* of the deferred task when it completes.</div><div class='line' id='LC16120'>&nbsp;*</div><div class='line' id='LC16121'>&nbsp;* **Methods**</div><div class='line' id='LC16122'>&nbsp;*</div><div class='line' id='LC16123'>&nbsp;* - `then(successCallback, errorCallback)` – regardless of when the promise was or will be resolved</div><div class='line' id='LC16124'>&nbsp;*   or rejected calls one of the success or error callbacks asynchronously as soon as the result</div><div class='line' id='LC16125'>&nbsp;*   is available. The callbacks are called with a single argument the result or rejection reason.</div><div class='line' id='LC16126'>&nbsp;*</div><div class='line' id='LC16127'>&nbsp;*   This method *returns a new promise* which is resolved or rejected via the return value of the</div><div class='line' id='LC16128'>&nbsp;*   `successCallback` or `errorCallback`.</div><div class='line' id='LC16129'>&nbsp;*</div><div class='line' id='LC16130'>&nbsp;*</div><div class='line' id='LC16131'>&nbsp;* # Chaining promises</div><div class='line' id='LC16132'>&nbsp;*</div><div class='line' id='LC16133'>&nbsp;* Because calling `then` api of a promise returns a new derived promise, it is easily possible</div><div class='line' id='LC16134'>&nbsp;* to create a chain of promises:</div><div class='line' id='LC16135'>&nbsp;*</div><div class='line' id='LC16136'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC16137'>&nbsp;*   promiseB = promiseA.then(function(result) {</div><div class='line' id='LC16138'>&nbsp;*     return result + 1;</div><div class='line' id='LC16139'>&nbsp;*   });</div><div class='line' id='LC16140'>&nbsp;*</div><div class='line' id='LC16141'>&nbsp;*   // promiseB will be resolved immediately after promiseA is resolved and its value will be</div><div class='line' id='LC16142'>&nbsp;*   // the result of promiseA incremented by 1</div><div class='line' id='LC16143'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC16144'>&nbsp;*</div><div class='line' id='LC16145'>&nbsp;* It is possible to create chains of any length and since a promise can be resolved with another</div><div class='line' id='LC16146'>&nbsp;* promise (which will defer its resolution further), it is possible to pause/defer resolution of</div><div class='line' id='LC16147'>&nbsp;* the promises at any point in the chain. This makes it possible to implement powerful apis like</div><div class='line' id='LC16148'>&nbsp;* $http&#39;s response interceptors.</div><div class='line' id='LC16149'>&nbsp;*</div><div class='line' id='LC16150'>&nbsp;*</div><div class='line' id='LC16151'>&nbsp;* # Differences between Kris Kowal&#39;s Q and $q</div><div class='line' id='LC16152'>&nbsp;*</div><div class='line' id='LC16153'>&nbsp;*  There are three main differences:</div><div class='line' id='LC16154'>&nbsp;*</div><div class='line' id='LC16155'>&nbsp;* - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation</div><div class='line' id='LC16156'>&nbsp;*   mechanism in angular, which means faster propagation of resolution or rejection into your</div><div class='line' id='LC16157'>&nbsp;*   models and avoiding unnecessary browser repaints, which would result in flickering UI.</div><div class='line' id='LC16158'>&nbsp;* - $q promises are recognized by the templating engine in angular, which means that in templates</div><div class='line' id='LC16159'>&nbsp;*   you can treat promises attached to a scope as if they were the resulting values.</div><div class='line' id='LC16160'>&nbsp;* - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains</div><div class='line' id='LC16161'>&nbsp;*   all the important functionality needed for common async tasks.</div><div class='line' id='LC16162'>&nbsp;* </div><div class='line' id='LC16163'>&nbsp;*  # Testing</div><div class='line' id='LC16164'>&nbsp;* </div><div class='line' id='LC16165'>&nbsp;*  &lt;pre&gt;</div><div class='line' id='LC16166'>&nbsp;*    it(&#39;should simulate promise&#39;, inject(function($q, $rootScope) {</div><div class='line' id='LC16167'>&nbsp;*      var deferred = $q.defer();</div><div class='line' id='LC16168'>&nbsp;*      var promise = deferred.promise;</div><div class='line' id='LC16169'>&nbsp;*      var resolvedValue;</div><div class='line' id='LC16170'>&nbsp;* </div><div class='line' id='LC16171'>&nbsp;*      promise.then(function(value) { resolvedValue = value; });</div><div class='line' id='LC16172'>&nbsp;*      expect(resolvedValue).toBeUndefined();</div><div class='line' id='LC16173'>&nbsp;* </div><div class='line' id='LC16174'>&nbsp;*      // Simulate resolving of promise</div><div class='line' id='LC16175'>&nbsp;*      deferred.resolve(123);</div><div class='line' id='LC16176'>&nbsp;*      // Note that the &#39;then&#39; function does not get called synchronously.</div><div class='line' id='LC16177'>&nbsp;*      // This is because we want the promise API to always be async, whether or not</div><div class='line' id='LC16178'>&nbsp;*      // it got called synchronously or asynchronously.</div><div class='line' id='LC16179'>&nbsp;*      expect(resolvedValue).toBeUndefined();</div><div class='line' id='LC16180'>&nbsp;* </div><div class='line' id='LC16181'>&nbsp;*      // Propagate promise resolution to &#39;then&#39; functions using $apply().</div><div class='line' id='LC16182'>&nbsp;*      $rootScope.$apply();</div><div class='line' id='LC16183'>&nbsp;*      expect(resolvedValue).toEqual(123);</div><div class='line' id='LC16184'>&nbsp;*    });</div><div class='line' id='LC16185'>&nbsp;*  &lt;/pre&gt;</div><div class='line' id='LC16186'>&nbsp;*/</div><div class='line' id='LC16187'>function $QProvider() {</div><div class='line' id='LC16188'><br/></div><div class='line' id='LC16189'>&nbsp;&nbsp;this.$get = [&#39;$rootScope&#39;, &#39;$exceptionHandler&#39;, function($rootScope, $exceptionHandler) {</div><div class='line' id='LC16190'>&nbsp;&nbsp;&nbsp;&nbsp;return qFactory(function(callback) {</div><div class='line' id='LC16191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(callback);</div><div class='line' id='LC16192'>&nbsp;&nbsp;&nbsp;&nbsp;}, $exceptionHandler);</div><div class='line' id='LC16193'>&nbsp;&nbsp;}];</div><div class='line' id='LC16194'>}</div><div class='line' id='LC16195'><br/></div><div class='line' id='LC16196'><br/></div><div class='line' id='LC16197'>/**</div><div class='line' id='LC16198'>&nbsp;* Constructs a promise manager.</div><div class='line' id='LC16199'>&nbsp;*</div><div class='line' id='LC16200'>&nbsp;* @param {function(function)} nextTick Function for executing functions in the next turn.</div><div class='line' id='LC16201'>&nbsp;* @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for</div><div class='line' id='LC16202'>&nbsp;*     debugging purposes.</div><div class='line' id='LC16203'>&nbsp;* @returns {object} Promise manager.</div><div class='line' id='LC16204'>&nbsp;*/</div><div class='line' id='LC16205'>function qFactory(nextTick, exceptionHandler) {</div><div class='line' id='LC16206'><br/></div><div class='line' id='LC16207'>&nbsp;&nbsp;/**</div><div class='line' id='LC16208'>&nbsp;&nbsp;&nbsp;* @ngdoc</div><div class='line' id='LC16209'>&nbsp;&nbsp;&nbsp;* @name ng.$q#defer</div><div class='line' id='LC16210'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$q</div><div class='line' id='LC16211'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16212'>&nbsp;&nbsp;&nbsp;* Creates a `Deferred` object which represents a task which will finish in the future.</div><div class='line' id='LC16213'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16214'>&nbsp;&nbsp;&nbsp;* @returns {Deferred} Returns a new instance of deferred.</div><div class='line' id='LC16215'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16216'>&nbsp;&nbsp;var defer = function() {</div><div class='line' id='LC16217'>&nbsp;&nbsp;&nbsp;&nbsp;var pending = [],</div><div class='line' id='LC16218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value, deferred;</div><div class='line' id='LC16219'><br/></div><div class='line' id='LC16220'>&nbsp;&nbsp;&nbsp;&nbsp;deferred = {</div><div class='line' id='LC16221'><br/></div><div class='line' id='LC16222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve: function(val) {</div><div class='line' id='LC16223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pending) {</div><div class='line' id='LC16224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var callbacks = pending;</div><div class='line' id='LC16225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pending = undefined;</div><div class='line' id='LC16226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = ref(val);</div><div class='line' id='LC16227'><br/></div><div class='line' id='LC16228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callbacks.length) {</div><div class='line' id='LC16229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextTick(function() {</div><div class='line' id='LC16230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var callback;</div><div class='line' id='LC16231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, ii = callbacks.length; i &lt; ii; i++) {</div><div class='line' id='LC16232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = callbacks[i];</div><div class='line' id='LC16233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.then(callback[0], callback[1]);</div><div class='line' id='LC16234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC16239'><br/></div><div class='line' id='LC16240'><br/></div><div class='line' id='LC16241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject: function(reason) {</div><div class='line' id='LC16242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.resolve(reject(reason));</div><div class='line' id='LC16243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC16244'><br/></div><div class='line' id='LC16245'><br/></div><div class='line' id='LC16246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise: {</div><div class='line' id='LC16247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then: function(callback, errback) {</div><div class='line' id='LC16248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = defer();</div><div class='line' id='LC16249'><br/></div><div class='line' id='LC16250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wrappedCallback = function(value) {</div><div class='line' id='LC16251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC16252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve((callback || defaultCallback)(value));</div><div class='line' id='LC16253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC16254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exceptionHandler(e);</div><div class='line' id='LC16255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.reject(e);</div><div class='line' id='LC16256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16258'><br/></div><div class='line' id='LC16259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wrappedErrback = function(reason) {</div><div class='line' id='LC16260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC16261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve((errback || defaultErrback)(reason));</div><div class='line' id='LC16262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC16263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exceptionHandler(e);</div><div class='line' id='LC16264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.reject(e);</div><div class='line' id='LC16265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16267'><br/></div><div class='line' id='LC16268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pending) {</div><div class='line' id='LC16269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pending.push([wrappedCallback, wrappedErrback]);</div><div class='line' id='LC16270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC16271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.then(wrappedCallback, wrappedErrback);</div><div class='line' id='LC16272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16273'><br/></div><div class='line' id='LC16274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.promise;</div><div class='line' id='LC16275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16277'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16278'><br/></div><div class='line' id='LC16279'>&nbsp;&nbsp;&nbsp;&nbsp;return deferred;</div><div class='line' id='LC16280'>&nbsp;&nbsp;};</div><div class='line' id='LC16281'><br/></div><div class='line' id='LC16282'><br/></div><div class='line' id='LC16283'>&nbsp;&nbsp;var ref = function(value) {</div><div class='line' id='LC16284'>&nbsp;&nbsp;&nbsp;&nbsp;if (value &amp;&amp; value.then) return value;</div><div class='line' id='LC16285'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC16286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then: function(callback) {</div><div class='line' id='LC16287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = defer();</div><div class='line' id='LC16288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextTick(function() {</div><div class='line' id='LC16289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve(callback(value));</div><div class='line' id='LC16290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.promise;</div><div class='line' id='LC16292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16293'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16294'>&nbsp;&nbsp;};</div><div class='line' id='LC16295'><br/></div><div class='line' id='LC16296'><br/></div><div class='line' id='LC16297'>&nbsp;&nbsp;/**</div><div class='line' id='LC16298'>&nbsp;&nbsp;&nbsp;* @ngdoc</div><div class='line' id='LC16299'>&nbsp;&nbsp;&nbsp;* @name ng.$q#reject</div><div class='line' id='LC16300'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$q</div><div class='line' id='LC16301'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16302'>&nbsp;&nbsp;&nbsp;* Creates a promise that is resolved as rejected with the specified `reason`. This api should be</div><div class='line' id='LC16303'>&nbsp;&nbsp;&nbsp;* used to forward rejection in a chain of promises. If you are dealing with the last promise in</div><div class='line' id='LC16304'>&nbsp;&nbsp;&nbsp;* a promise chain, you don&#39;t need to worry about it.</div><div class='line' id='LC16305'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16306'>&nbsp;&nbsp;&nbsp;* When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of</div><div class='line' id='LC16307'>&nbsp;&nbsp;&nbsp;* `reject` as the `throw` keyword in JavaScript. This also means that if you &quot;catch&quot; an error via</div><div class='line' id='LC16308'>&nbsp;&nbsp;&nbsp;* a promise error callback and you want to forward the error to the promise derived from the</div><div class='line' id='LC16309'>&nbsp;&nbsp;&nbsp;* current promise, you have to &quot;rethrow&quot; the error by returning a rejection constructed via</div><div class='line' id='LC16310'>&nbsp;&nbsp;&nbsp;* `reject`.</div><div class='line' id='LC16311'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16312'>&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC16313'>&nbsp;&nbsp;&nbsp;*   promiseB = promiseA.then(function(result) {</div><div class='line' id='LC16314'>&nbsp;&nbsp;&nbsp;*     // success: do something and resolve promiseB</div><div class='line' id='LC16315'>&nbsp;&nbsp;&nbsp;*     //          with the old or a new result</div><div class='line' id='LC16316'>&nbsp;&nbsp;&nbsp;*     return result;</div><div class='line' id='LC16317'>&nbsp;&nbsp;&nbsp;*   }, function(reason) {</div><div class='line' id='LC16318'>&nbsp;&nbsp;&nbsp;*     // error: handle the error if possible and</div><div class='line' id='LC16319'>&nbsp;&nbsp;&nbsp;*     //        resolve promiseB with newPromiseOrValue,</div><div class='line' id='LC16320'>&nbsp;&nbsp;&nbsp;*     //        otherwise forward the rejection to promiseB</div><div class='line' id='LC16321'>&nbsp;&nbsp;&nbsp;*     if (canHandle(reason)) {</div><div class='line' id='LC16322'>&nbsp;&nbsp;&nbsp;*      // handle the error and recover</div><div class='line' id='LC16323'>&nbsp;&nbsp;&nbsp;*      return newPromiseOrValue;</div><div class='line' id='LC16324'>&nbsp;&nbsp;&nbsp;*     }</div><div class='line' id='LC16325'>&nbsp;&nbsp;&nbsp;*     return $q.reject(reason);</div><div class='line' id='LC16326'>&nbsp;&nbsp;&nbsp;*   });</div><div class='line' id='LC16327'>&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC16328'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16329'>&nbsp;&nbsp;&nbsp;* @param {*} reason Constant, message, exception or an object representing the rejection reason.</div><div class='line' id='LC16330'>&nbsp;&nbsp;&nbsp;* @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.</div><div class='line' id='LC16331'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16332'>&nbsp;&nbsp;var reject = function(reason) {</div><div class='line' id='LC16333'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC16334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then: function(callback, errback) {</div><div class='line' id='LC16335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = defer();</div><div class='line' id='LC16336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextTick(function() {</div><div class='line' id='LC16337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve((errback || defaultErrback)(reason));</div><div class='line' id='LC16338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.promise;</div><div class='line' id='LC16340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16341'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16342'>&nbsp;&nbsp;};</div><div class='line' id='LC16343'><br/></div><div class='line' id='LC16344'><br/></div><div class='line' id='LC16345'>&nbsp;&nbsp;/**</div><div class='line' id='LC16346'>&nbsp;&nbsp;&nbsp;* @ngdoc</div><div class='line' id='LC16347'>&nbsp;&nbsp;&nbsp;* @name ng.$q#when</div><div class='line' id='LC16348'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$q</div><div class='line' id='LC16349'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16350'>&nbsp;&nbsp;&nbsp;* Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.</div><div class='line' id='LC16351'>&nbsp;&nbsp;&nbsp;* This is useful when you are dealing with an object that might or might not be a promise, or if</div><div class='line' id='LC16352'>&nbsp;&nbsp;&nbsp;* the promise comes from a source that can&#39;t be trusted.</div><div class='line' id='LC16353'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16354'>&nbsp;&nbsp;&nbsp;* @param {*} value Value or a promise</div><div class='line' id='LC16355'>&nbsp;&nbsp;&nbsp;* @returns {Promise} Returns a promise of the passed value or promise</div><div class='line' id='LC16356'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16357'>&nbsp;&nbsp;var when = function(value, callback, errback) {</div><div class='line' id='LC16358'>&nbsp;&nbsp;&nbsp;&nbsp;var result = defer(),</div><div class='line' id='LC16359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done;</div><div class='line' id='LC16360'><br/></div><div class='line' id='LC16361'>&nbsp;&nbsp;&nbsp;&nbsp;var wrappedCallback = function(value) {</div><div class='line' id='LC16362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC16363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (callback || defaultCallback)(value);</div><div class='line' id='LC16364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC16365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exceptionHandler(e);</div><div class='line' id='LC16366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return reject(e);</div><div class='line' id='LC16367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16368'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16369'><br/></div><div class='line' id='LC16370'>&nbsp;&nbsp;&nbsp;&nbsp;var wrappedErrback = function(reason) {</div><div class='line' id='LC16371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC16372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (errback || defaultErrback)(reason);</div><div class='line' id='LC16373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC16374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exceptionHandler(e);</div><div class='line' id='LC16375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return reject(e);</div><div class='line' id='LC16376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16377'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16378'><br/></div><div class='line' id='LC16379'>&nbsp;&nbsp;&nbsp;&nbsp;nextTick(function() {</div><div class='line' id='LC16380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref(value).then(function(value) {</div><div class='line' id='LC16381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (done) return;</div><div class='line' id='LC16382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done = true;</div><div class='line' id='LC16383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve(ref(value).then(wrappedCallback, wrappedErrback));</div><div class='line' id='LC16384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function(reason) {</div><div class='line' id='LC16385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (done) return;</div><div class='line' id='LC16386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done = true;</div><div class='line' id='LC16387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.resolve(wrappedErrback(reason));</div><div class='line' id='LC16388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16389'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16390'><br/></div><div class='line' id='LC16391'>&nbsp;&nbsp;&nbsp;&nbsp;return result.promise;</div><div class='line' id='LC16392'>&nbsp;&nbsp;};</div><div class='line' id='LC16393'><br/></div><div class='line' id='LC16394'><br/></div><div class='line' id='LC16395'>&nbsp;&nbsp;function defaultCallback(value) {</div><div class='line' id='LC16396'>&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC16397'>&nbsp;&nbsp;}</div><div class='line' id='LC16398'><br/></div><div class='line' id='LC16399'><br/></div><div class='line' id='LC16400'>&nbsp;&nbsp;function defaultErrback(reason) {</div><div class='line' id='LC16401'>&nbsp;&nbsp;&nbsp;&nbsp;return reject(reason);</div><div class='line' id='LC16402'>&nbsp;&nbsp;}</div><div class='line' id='LC16403'><br/></div><div class='line' id='LC16404'><br/></div><div class='line' id='LC16405'>&nbsp;&nbsp;/**</div><div class='line' id='LC16406'>&nbsp;&nbsp;&nbsp;* @ngdoc</div><div class='line' id='LC16407'>&nbsp;&nbsp;&nbsp;* @name ng.$q#all</div><div class='line' id='LC16408'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$q</div><div class='line' id='LC16409'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16410'>&nbsp;&nbsp;&nbsp;* Combines multiple promises into a single promise that is resolved when all of the input</div><div class='line' id='LC16411'>&nbsp;&nbsp;&nbsp;* promises are resolved.</div><div class='line' id='LC16412'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16413'>&nbsp;&nbsp;&nbsp;* @param {Array.&lt;Promise&gt;} promises An array of promises.</div><div class='line' id='LC16414'>&nbsp;&nbsp;&nbsp;* @returns {Promise} Returns a single promise that will be resolved with an array of values,</div><div class='line' id='LC16415'>&nbsp;&nbsp;&nbsp;*   each value corresponding to the promise at the same index in the `promises` array. If any of</div><div class='line' id='LC16416'>&nbsp;&nbsp;&nbsp;*   the promises is resolved with a rejection, this resulting promise will be resolved with the</div><div class='line' id='LC16417'>&nbsp;&nbsp;&nbsp;*   same rejection.</div><div class='line' id='LC16418'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16419'>&nbsp;&nbsp;function all(promises) {</div><div class='line' id='LC16420'>&nbsp;&nbsp;&nbsp;&nbsp;var deferred = defer(),</div><div class='line' id='LC16421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter = promises.length,</div><div class='line' id='LC16422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC16423'><br/></div><div class='line' id='LC16424'>&nbsp;&nbsp;&nbsp;&nbsp;if (counter) {</div><div class='line' id='LC16425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(promises, function(promise, index) {</div><div class='line' id='LC16426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref(promise).then(function(value) {</div><div class='line' id='LC16427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index in results) return;</div><div class='line' id='LC16428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results[index] = value;</div><div class='line' id='LC16429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(--counter)) deferred.resolve(results);</div><div class='line' id='LC16430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function(reason) {</div><div class='line' id='LC16431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index in results) return;</div><div class='line' id='LC16432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.reject(reason);</div><div class='line' id='LC16433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16435'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC16436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.resolve(results);</div><div class='line' id='LC16437'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16438'><br/></div><div class='line' id='LC16439'>&nbsp;&nbsp;&nbsp;&nbsp;return deferred.promise;</div><div class='line' id='LC16440'>&nbsp;&nbsp;}</div><div class='line' id='LC16441'><br/></div><div class='line' id='LC16442'>&nbsp;&nbsp;return {</div><div class='line' id='LC16443'>&nbsp;&nbsp;&nbsp;&nbsp;defer: defer,</div><div class='line' id='LC16444'>&nbsp;&nbsp;&nbsp;&nbsp;reject: reject,</div><div class='line' id='LC16445'>&nbsp;&nbsp;&nbsp;&nbsp;when: when,</div><div class='line' id='LC16446'>&nbsp;&nbsp;&nbsp;&nbsp;all: all</div><div class='line' id='LC16447'>&nbsp;&nbsp;};</div><div class='line' id='LC16448'>}</div><div class='line' id='LC16449'><br/></div><div class='line' id='LC16450'>/**</div><div class='line' id='LC16451'>&nbsp;* @ngdoc object</div><div class='line' id='LC16452'>&nbsp;* @name ng.$routeProvider</div><div class='line' id='LC16453'>&nbsp;* @function</div><div class='line' id='LC16454'>&nbsp;*</div><div class='line' id='LC16455'>&nbsp;* @description</div><div class='line' id='LC16456'>&nbsp;*</div><div class='line' id='LC16457'>&nbsp;* Used for configuring routes. See {@link ng.$route $route} for an example.</div><div class='line' id='LC16458'>&nbsp;*/</div><div class='line' id='LC16459'>function $RouteProvider(){</div><div class='line' id='LC16460'>&nbsp;&nbsp;var routes = {};</div><div class='line' id='LC16461'><br/></div><div class='line' id='LC16462'>&nbsp;&nbsp;/**</div><div class='line' id='LC16463'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC16464'>&nbsp;&nbsp;&nbsp;* @name ng.$routeProvider#when</div><div class='line' id='LC16465'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$routeProvider</div><div class='line' id='LC16466'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16467'>&nbsp;&nbsp;&nbsp;* @param {string} path Route path (matched against `$location.path`). If `$location.path`</div><div class='line' id='LC16468'>&nbsp;&nbsp;&nbsp;*    contains redundant trailing slash or is missing one, the route will still match and the</div><div class='line' id='LC16469'>&nbsp;&nbsp;&nbsp;*    `$location.path` will be updated to add or drop the trailing slash to exactly match the</div><div class='line' id='LC16470'>&nbsp;&nbsp;&nbsp;*    route definition.</div><div class='line' id='LC16471'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16472'>&nbsp;&nbsp;&nbsp;*    `path` can contain named groups starting with a colon (`:name`). All characters up to the</div><div class='line' id='LC16473'>&nbsp;&nbsp;&nbsp;*    next slash are matched and stored in `$routeParams` under the given `name` when the route</div><div class='line' id='LC16474'>&nbsp;&nbsp;&nbsp;*    matches.</div><div class='line' id='LC16475'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16476'>&nbsp;&nbsp;&nbsp;* @param {Object} route Mapping information to be assigned to `$route.current` on route</div><div class='line' id='LC16477'>&nbsp;&nbsp;&nbsp;*    match.</div><div class='line' id='LC16478'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16479'>&nbsp;&nbsp;&nbsp;*    Object properties:</div><div class='line' id='LC16480'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16481'>&nbsp;&nbsp;&nbsp;*    - `controller` – `{(string|function()=}` – Controller fn that should be associated with newly</div><div class='line' id='LC16482'>&nbsp;&nbsp;&nbsp;*      created scope or the name of a {@link angular.Module#controller registered controller}</div><div class='line' id='LC16483'>&nbsp;&nbsp;&nbsp;*      if passed as a string.</div><div class='line' id='LC16484'>&nbsp;&nbsp;&nbsp;*    - `template` – `{string=}` –  html template as a string that should be used by</div><div class='line' id='LC16485'>&nbsp;&nbsp;&nbsp;*      {@link ng.directive:ngView ngView} or</div><div class='line' id='LC16486'>&nbsp;&nbsp;&nbsp;*      {@link ng.directive:ngInclude ngInclude} directives.</div><div class='line' id='LC16487'>&nbsp;&nbsp;&nbsp;*      this property takes precedence over `templateUrl`.</div><div class='line' id='LC16488'>&nbsp;&nbsp;&nbsp;*    - `templateUrl` – `{string=}` – path to an html template that should be used by</div><div class='line' id='LC16489'>&nbsp;&nbsp;&nbsp;*      {@link ng.directive:ngView ngView}.</div><div class='line' id='LC16490'>&nbsp;&nbsp;&nbsp;*    - `resolve` - `{Object.&lt;string, function&gt;=}` - An optional map of dependencies which should</div><div class='line' id='LC16491'>&nbsp;&nbsp;&nbsp;*      be injected into the controller. If any of these dependencies are promises, they will be</div><div class='line' id='LC16492'>&nbsp;&nbsp;&nbsp;*      resolved and converted to a value before the controller is instantiated and the</div><div class='line' id='LC16493'>&nbsp;&nbsp;&nbsp;*      `$routeChangeSuccess` event is fired. The map object is:</div><div class='line' id='LC16494'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16495'>&nbsp;&nbsp;&nbsp;*      - `key` – `{string}`: a name of a dependency to be injected into the controller.</div><div class='line' id='LC16496'>&nbsp;&nbsp;&nbsp;*      - `factory` - `{string|function}`: If `string` then it is an alias for a service.</div><div class='line' id='LC16497'>&nbsp;&nbsp;&nbsp;*        Otherwise if function, then it is {@link api/AUTO.$injector#invoke injected}</div><div class='line' id='LC16498'>&nbsp;&nbsp;&nbsp;*        and the return value is treated as the dependency. If the result is a promise, it is resolved</div><div class='line' id='LC16499'>&nbsp;&nbsp;&nbsp;*        before its value is injected into the controller.</div><div class='line' id='LC16500'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16501'>&nbsp;&nbsp;&nbsp;*    - `redirectTo` – {(string|function())=} – value to update</div><div class='line' id='LC16502'>&nbsp;&nbsp;&nbsp;*      {@link ng.$location $location} path with and trigger route redirection.</div><div class='line' id='LC16503'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16504'>&nbsp;&nbsp;&nbsp;*      If `redirectTo` is a function, it will be called with the following parameters:</div><div class='line' id='LC16505'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16506'>&nbsp;&nbsp;&nbsp;*      - `{Object.&lt;string&gt;}` - route parameters extracted from the current</div><div class='line' id='LC16507'>&nbsp;&nbsp;&nbsp;*        `$location.path()` by applying the current route templateUrl.</div><div class='line' id='LC16508'>&nbsp;&nbsp;&nbsp;*      - `{string}` - current `$location.path()`</div><div class='line' id='LC16509'>&nbsp;&nbsp;&nbsp;*      - `{Object}` - current `$location.search()`</div><div class='line' id='LC16510'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16511'>&nbsp;&nbsp;&nbsp;*      The custom `redirectTo` function is expected to return a string which will be used</div><div class='line' id='LC16512'>&nbsp;&nbsp;&nbsp;*      to update `$location.path()` and `$location.search()`.</div><div class='line' id='LC16513'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16514'>&nbsp;&nbsp;&nbsp;*    - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()</div><div class='line' id='LC16515'>&nbsp;&nbsp;&nbsp;*    changes.</div><div class='line' id='LC16516'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16517'>&nbsp;&nbsp;&nbsp;*      If the option is set to `false` and url in the browser changes, then</div><div class='line' id='LC16518'>&nbsp;&nbsp;&nbsp;*      `$routeUpdate` event is broadcasted on the root scope.</div><div class='line' id='LC16519'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16520'>&nbsp;&nbsp;&nbsp;* @returns {Object} self</div><div class='line' id='LC16521'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16522'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16523'>&nbsp;&nbsp;&nbsp;* Adds a new route definition to the `$route` service.</div><div class='line' id='LC16524'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16525'>&nbsp;&nbsp;this.when = function(path, route) {</div><div class='line' id='LC16526'>&nbsp;&nbsp;&nbsp;&nbsp;routes[path] = extend({reloadOnSearch: true}, route);</div><div class='line' id='LC16527'><br/></div><div class='line' id='LC16528'>&nbsp;&nbsp;&nbsp;&nbsp;// create redirection for trailing slashes</div><div class='line' id='LC16529'>&nbsp;&nbsp;&nbsp;&nbsp;if (path) {</div><div class='line' id='LC16530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var redirectPath = (path[path.length-1] == &#39;/&#39;)</div><div class='line' id='LC16531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? path.substr(0, path.length-1)</div><div class='line' id='LC16532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: path +&#39;/&#39;;</div><div class='line' id='LC16533'><br/></div><div class='line' id='LC16534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routes[redirectPath] = {redirectTo: path};</div><div class='line' id='LC16535'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16536'><br/></div><div class='line' id='LC16537'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16538'>&nbsp;&nbsp;};</div><div class='line' id='LC16539'><br/></div><div class='line' id='LC16540'>&nbsp;&nbsp;/**</div><div class='line' id='LC16541'>&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC16542'>&nbsp;&nbsp;&nbsp;* @name ng.$routeProvider#otherwise</div><div class='line' id='LC16543'>&nbsp;&nbsp;&nbsp;* @methodOf ng.$routeProvider</div><div class='line' id='LC16544'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16545'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16546'>&nbsp;&nbsp;&nbsp;* Sets route definition that will be used on route change when no other route definition</div><div class='line' id='LC16547'>&nbsp;&nbsp;&nbsp;* is matched.</div><div class='line' id='LC16548'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16549'>&nbsp;&nbsp;&nbsp;* @param {Object} params Mapping information to be assigned to `$route.current`.</div><div class='line' id='LC16550'>&nbsp;&nbsp;&nbsp;* @returns {Object} self</div><div class='line' id='LC16551'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16552'>&nbsp;&nbsp;this.otherwise = function(params) {</div><div class='line' id='LC16553'>&nbsp;&nbsp;&nbsp;&nbsp;this.when(null, params);</div><div class='line' id='LC16554'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16555'>&nbsp;&nbsp;};</div><div class='line' id='LC16556'><br/></div><div class='line' id='LC16557'><br/></div><div class='line' id='LC16558'>&nbsp;&nbsp;this.$get = [&#39;$rootScope&#39;, &#39;$location&#39;, &#39;$routeParams&#39;, &#39;$q&#39;, &#39;$injector&#39;, &#39;$http&#39;, &#39;$templateCache&#39;,</div><div class='line' id='LC16559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( $rootScope,   $location,   $routeParams,   $q,   $injector,   $http,   $templateCache) {</div><div class='line' id='LC16560'><br/></div><div class='line' id='LC16561'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc object</div><div class='line' id='LC16563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route</div><div class='line' id='LC16564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $location</div><div class='line' id='LC16565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $routeParams</div><div class='line' id='LC16566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @property {Object} current Reference to the current route definition.</div><div class='line' id='LC16568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The route definition contains:</div><div class='line' id='LC16569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `controller`: The controller constructor as define in route definition.</div><div class='line' id='LC16571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for</div><div class='line' id='LC16572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     controller instantiation. The `locals` contain</div><div class='line' id='LC16573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     the resolved values of the `resolve` map. Additionally the `locals` also contain:</div><div class='line' id='LC16574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     - `$scope` - The current route scope.</div><div class='line' id='LC16576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     - `$template` - The current route template HTML.</div><div class='line' id='LC16577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @property {Array.&lt;Object&gt;} routes Array of all configured routes.</div><div class='line' id='LC16579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Is used for deep-linking URLs to controllers and views (HTML partials).</div><div class='line' id='LC16582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* It watches `$location.url()` and tries to map the path to an existing route definition.</div><div class='line' id='LC16583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* You can define routes through {@link ng.$routeProvider $routeProvider}&#39;s API.</div><div class='line' id='LC16585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `$route` service is typically used in conjunction with {@link ng.directive:ngView ngView}</div><div class='line' id='LC16587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* directive and the {@link ng.$routeParams $routeParams} service.</div><div class='line' id='LC16588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC16590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This example shows how changing the URL hash causes the `$route` to match a route against the</div><div class='line' id='LC16591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL, and the `ngView` pulls in the partial.</div><div class='line' id='LC16592'><br/></div><div class='line' id='LC16593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note that this example is using {@link ng.directive:script inlined templates}</div><div class='line' id='LC16594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to get it working on jsfiddle as well.</div><div class='line' id='LC16595'><br/></div><div class='line' id='LC16596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;example module=&quot;ngView&quot;&gt;</div><div class='line' id='LC16597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC16598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;MainCntl&quot;&gt;</div><div class='line' id='LC16599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Choose:</div><div class='line' id='LC16600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Moby&quot;&gt;Moby&lt;/a&gt; |</div><div class='line' id='LC16601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Moby/ch/1&quot;&gt;Moby: Ch1&lt;/a&gt; |</div><div class='line' id='LC16602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Gatsby&quot;&gt;Gatsby&lt;/a&gt; |</div><div class='line' id='LC16603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Gatsby/ch/4?key=value&quot;&gt;Gatsby: Ch4&lt;/a&gt; |</div><div class='line' id='LC16604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Scarlet&quot;&gt;Scarlet Letter&lt;/a&gt;&lt;br/&gt;</div><div class='line' id='LC16605'><br/></div><div class='line' id='LC16606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-view&gt;&lt;/div&gt;</div><div class='line' id='LC16607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr /&gt;</div><div class='line' id='LC16608'><br/></div><div class='line' id='LC16609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$location.path() = {{$location.path()}}&lt;/pre&gt;</div><div class='line' id='LC16610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.templateUrl = {{$route.current.templateUrl}}&lt;/pre&gt;</div><div class='line' id='LC16611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.params = {{$route.current.params}}&lt;/pre&gt;</div><div class='line' id='LC16612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.scope.name = {{$route.current.scope.name}}&lt;/pre&gt;</div><div class='line' id='LC16613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$routeParams = {{$routeParams}}&lt;/pre&gt;</div><div class='line' id='LC16614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC16615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC16616'><br/></div><div class='line' id='LC16617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;book.html&quot;&gt;</div><div class='line' id='LC16618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: {{name}}&lt;br /&gt;</div><div class='line' id='LC16619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book Id: {{params.bookId}}&lt;br /&gt;</div><div class='line' id='LC16620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC16621'><br/></div><div class='line' id='LC16622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;chapter.html&quot;&gt;</div><div class='line' id='LC16623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: {{name}}&lt;br /&gt;</div><div class='line' id='LC16624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book Id: {{params.bookId}}&lt;br /&gt;</div><div class='line' id='LC16625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chapter Id: {{params.chapterId}}</div><div class='line' id='LC16626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC16627'><br/></div><div class='line' id='LC16628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC16629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.module(&#39;ngView&#39;, [], function($routeProvider, $locationProvider) {</div><div class='line' id='LC16630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$routeProvider.when(&#39;/Book/:bookId&#39;, {</div><div class='line' id='LC16631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateUrl: &#39;book.html&#39;,</div><div class='line' id='LC16632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: BookCntl,</div><div class='line' id='LC16633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve: {</div><div class='line' id='LC16634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// I will cause a 1 second delay</div><div class='line' id='LC16635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay: function($q, $timeout) {</div><div class='line' id='LC16636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var delay = $q.defer();</div><div class='line' id='LC16637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$timeout(delay.resolve, 1000);</div><div class='line' id='LC16638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delay.promise;</div><div class='line' id='LC16639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$routeProvider.when(&#39;/Book/:bookId/ch/:chapterId&#39;, {</div><div class='line' id='LC16643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateUrl: &#39;chapter.html&#39;,</div><div class='line' id='LC16644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: ChapterCntl</div><div class='line' id='LC16645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16646'><br/></div><div class='line' id='LC16647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// configure html5 to get links working on jsfiddle</div><div class='line' id='LC16648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$locationProvider.html5Mode(true);</div><div class='line' id='LC16649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16650'><br/></div><div class='line' id='LC16651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function MainCntl($scope, $route, $routeParams, $location) {</div><div class='line' id='LC16652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$route = $route;</div><div class='line' id='LC16653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$location = $location;</div><div class='line' id='LC16654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$routeParams = $routeParams;</div><div class='line' id='LC16655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16656'><br/></div><div class='line' id='LC16657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function BookCntl($scope, $routeParams) {</div><div class='line' id='LC16658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &quot;BookCntl&quot;;</div><div class='line' id='LC16659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.params = $routeParams;</div><div class='line' id='LC16660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16661'><br/></div><div class='line' id='LC16662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ChapterCntl($scope, $routeParams) {</div><div class='line' id='LC16663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &quot;ChapterCntl&quot;;</div><div class='line' id='LC16664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.params = $routeParams;</div><div class='line' id='LC16665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC16667'><br/></div><div class='line' id='LC16668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC16669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should load and compile correct template&#39;, function() {</div><div class='line' id='LC16670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;a:contains(&quot;Moby: Ch1&quot;)&#39;).click();</div><div class='line' id='LC16671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var content = element(&#39;.doc-example-live [ng-view]&#39;).text();</div><div class='line' id='LC16672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/controller\: ChapterCntl/);</div><div class='line' id='LC16673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Book Id\: Moby/);</div><div class='line' id='LC16674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Chapter Id\: 1/);</div><div class='line' id='LC16675'><br/></div><div class='line' id='LC16676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;a:contains(&quot;Scarlet&quot;)&#39;).click();</div><div class='line' id='LC16677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(2); // promises are not part of scenario waiting</div><div class='line' id='LC16678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content = element(&#39;.doc-example-live [ng-view]&#39;).text();</div><div class='line' id='LC16679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/controller\: BookCntl/);</div><div class='line' id='LC16680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Book Id\: Scarlet/);</div><div class='line' id='LC16681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC16683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC16684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16685'><br/></div><div class='line' id='LC16686'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc event</div><div class='line' id='LC16688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route#$routeChangeStart</div><div class='line' id='LC16689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventOf ng.$route</div><div class='line' id='LC16690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventType broadcast on root scope</div><div class='line' id='LC16691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Broadcasted before a route change. At this  point the route services starts</div><div class='line' id='LC16693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* resolving all of the dependencies needed for the route change to occurs.</div><div class='line' id='LC16694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Typically this involves fetching the view template as well as any dependencies</div><div class='line' id='LC16695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* defined in `resolve` route property. Once  all of the dependencies are resolved</div><div class='line' id='LC16696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$routeChangeSuccess` is fired.</div><div class='line' id='LC16697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} next Future route information.</div><div class='line' id='LC16699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} current Current route information.</div><div class='line' id='LC16700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16701'><br/></div><div class='line' id='LC16702'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc event</div><div class='line' id='LC16704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route#$routeChangeSuccess</div><div class='line' id='LC16705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventOf ng.$route</div><div class='line' id='LC16706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventType broadcast on root scope</div><div class='line' id='LC16707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Broadcasted after a route dependencies are resolved.</div><div class='line' id='LC16709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.directive:ngView ngView} listens for the directive</div><div class='line' id='LC16710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to instantiate the controller and render the view.</div><div class='line' id='LC16711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} angularEvent Synthetic event object.</div><div class='line' id='LC16713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} current Current route information.</div><div class='line' id='LC16714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route|Undefined} previous Previous route information, or undefined if current is first route entered.</div><div class='line' id='LC16715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16716'><br/></div><div class='line' id='LC16717'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc event</div><div class='line' id='LC16719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route#$routeChangeError</div><div class='line' id='LC16720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventOf ng.$route</div><div class='line' id='LC16721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventType broadcast on root scope</div><div class='line' id='LC16722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Broadcasted if any of the resolve promises are rejected.</div><div class='line' id='LC16724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} current Current route information.</div><div class='line' id='LC16726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} previous Previous route information.</div><div class='line' id='LC16727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Route} rejection Rejection of the promise. Usually the error of the failed promise.</div><div class='line' id='LC16728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16729'><br/></div><div class='line' id='LC16730'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc event</div><div class='line' id='LC16732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route#$routeUpdate</div><div class='line' id='LC16733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventOf ng.$route</div><div class='line' id='LC16734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventType broadcast on root scope</div><div class='line' id='LC16735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `reloadOnSearch` property has been set to false, and we are reusing the same</div><div class='line' id='LC16738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* instance of the Controller.</div><div class='line' id='LC16739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16740'><br/></div><div class='line' id='LC16741'>&nbsp;&nbsp;&nbsp;&nbsp;var forceReload = false,</div><div class='line' id='LC16742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$route = {</div><div class='line' id='LC16743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routes: routes,</div><div class='line' id='LC16744'><br/></div><div class='line' id='LC16745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC16747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$route#reload</div><div class='line' id='LC16748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$route</div><div class='line' id='LC16749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC16751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Causes `$route` service to reload the current route even if</div><div class='line' id='LC16752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$location $location} hasn&#39;t changed.</div><div class='line' id='LC16753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* As a result of that, {@link ng.directive:ngView ngView}</div><div class='line' id='LC16755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* creates new scope, reinstantiates the controller.</div><div class='line' id='LC16756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reload: function() {</div><div class='line' id='LC16758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forceReload = true;</div><div class='line' id='LC16759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$evalAsync(updateRoute);</div><div class='line' id='LC16760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16762'><br/></div><div class='line' id='LC16763'>&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$on(&#39;$locationChangeSuccess&#39;, updateRoute);</div><div class='line' id='LC16764'><br/></div><div class='line' id='LC16765'>&nbsp;&nbsp;&nbsp;&nbsp;return $route;</div><div class='line' id='LC16766'><br/></div><div class='line' id='LC16767'>&nbsp;&nbsp;&nbsp;&nbsp;/////////////////////////////////////////////////////</div><div class='line' id='LC16768'><br/></div><div class='line' id='LC16769'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param on {string} current url</div><div class='line' id='LC16771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param when {string} route when template to match the url against</div><div class='line' id='LC16772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return {?Object}</div><div class='line' id='LC16773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16774'>&nbsp;&nbsp;&nbsp;&nbsp;function switchRouteMatcher(on, when) {</div><div class='line' id='LC16775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(i): this code is convoluted and inefficient, we should construct the route matching</div><div class='line' id='LC16776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   regex only once and then reuse it</div><div class='line' id='LC16777'><br/></div><div class='line' id='LC16778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Escape regexp special characters.</div><div class='line' id='LC16779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when = &#39;^&#39; + when.replace(/[-\/\\^$*+?.()|[\]{}]/g, &quot;\\$&amp;&quot;) + &#39;$&#39;;</div><div class='line' id='LC16780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regex = &#39;&#39;,</div><div class='line' id='LC16781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = [],</div><div class='line' id='LC16782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst = {};</div><div class='line' id='LC16783'><br/></div><div class='line' id='LC16784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var re = /:(\w+)/g,</div><div class='line' id='LC16785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paramMatch,</div><div class='line' id='LC16786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastMatchedIndex = 0;</div><div class='line' id='LC16787'><br/></div><div class='line' id='LC16788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ((paramMatch = re.exec(when)) !== null) {</div><div class='line' id='LC16789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Find each :param in `when` and replace it with a capturing group.</div><div class='line' id='LC16790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Append all other sections of when unchanged.</div><div class='line' id='LC16791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regex += when.slice(lastMatchedIndex, paramMatch.index);</div><div class='line' id='LC16792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regex += &#39;([^\\/]*)&#39;;</div><div class='line' id='LC16793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.push(paramMatch[1]);</div><div class='line' id='LC16794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastMatchedIndex = re.lastIndex;</div><div class='line' id='LC16795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Append trailing path part.</div><div class='line' id='LC16797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regex += when.substr(lastMatchedIndex);</div><div class='line' id='LC16798'><br/></div><div class='line' id='LC16799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = on.match(new RegExp(regex));</div><div class='line' id='LC16800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC16801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(params, function(name, index) {</div><div class='line' id='LC16802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst[name] = match[index + 1];</div><div class='line' id='LC16803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return match ? dst : null;</div><div class='line' id='LC16806'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16807'><br/></div><div class='line' id='LC16808'>&nbsp;&nbsp;&nbsp;&nbsp;function updateRoute() {</div><div class='line' id='LC16809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var next = parseRoute(),</div><div class='line' id='LC16810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last = $route.current;</div><div class='line' id='LC16811'><br/></div><div class='line' id='LC16812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next &amp;&amp; last &amp;&amp; next.$$route === last.$$route</div><div class='line' id='LC16813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; equals(next.pathParams, last.pathParams) &amp;&amp; !next.reloadOnSearch &amp;&amp; !forceReload) {</div><div class='line' id='LC16814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last.params = next.params;</div><div class='line' id='LC16815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;copy(last.params, $routeParams);</div><div class='line' id='LC16816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$broadcast(&#39;$routeUpdate&#39;, last);</div><div class='line' id='LC16817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (next || last) {</div><div class='line' id='LC16818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forceReload = false;</div><div class='line' id='LC16819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$broadcast(&#39;$routeChangeStart&#39;, next, last);</div><div class='line' id='LC16820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$route.current = next;</div><div class='line' id='LC16821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next) {</div><div class='line' id='LC16822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next.redirectTo) {</div><div class='line' id='LC16823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(next.redirectTo)) {</div><div class='line' id='LC16824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.path(interpolate(next.redirectTo, next.params)).search(next.params)</div><div class='line' id='LC16825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.replace();</div><div class='line' id='LC16826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC16827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$location.url(next.redirectTo(next.pathParams, $location.path(), $location.search()))</div><div class='line' id='LC16828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.replace();</div><div class='line' id='LC16829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16832'><br/></div><div class='line' id='LC16833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$q.when(next).</div><div class='line' id='LC16834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then(function() {</div><div class='line' id='LC16835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next) {</div><div class='line' id='LC16836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keys = [],</div><div class='line' id='LC16837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values = [],</div><div class='line' id='LC16838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template;</div><div class='line' id='LC16839'><br/></div><div class='line' id='LC16840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(next.resolve || {}, function(value, key) {</div><div class='line' id='LC16841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(key);</div><div class='line' id='LC16842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values.push(isString(value) ? $injector.get(value) : $injector.invoke(value));</div><div class='line' id='LC16843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(template = next.template)) {</div><div class='line' id='LC16845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isDefined(template = next.templateUrl)) {</div><div class='line' id='LC16846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template = $http.get(template, {cache: $templateCache}).</div><div class='line' id='LC16847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then(function(response) { return response.data; });</div><div class='line' id='LC16848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(template)) {</div><div class='line' id='LC16850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(&#39;$template&#39;);</div><div class='line' id='LC16851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values.push(template);</div><div class='line' id='LC16852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $q.all(values).then(function(values) {</div><div class='line' id='LC16854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var locals = {};</div><div class='line' id='LC16855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(values, function(value, index) {</div><div class='line' id='LC16856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals[keys[index]] = value;</div><div class='line' id='LC16857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return locals;</div><div class='line' id='LC16859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).</div><div class='line' id='LC16862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// after route change</div><div class='line' id='LC16863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then(function(locals) {</div><div class='line' id='LC16864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next == $route.current) {</div><div class='line' id='LC16865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next) {</div><div class='line' id='LC16866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next.locals = locals;</div><div class='line' id='LC16867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;copy(next.params, $routeParams);</div><div class='line' id='LC16868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$broadcast(&#39;$routeChangeSuccess&#39;, next, last);</div><div class='line' id='LC16870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function(error) {</div><div class='line' id='LC16872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (next == $route.current) {</div><div class='line' id='LC16873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$broadcast(&#39;$routeChangeError&#39;, next, last, error);</div><div class='line' id='LC16874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16877'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16878'><br/></div><div class='line' id='LC16879'><br/></div><div class='line' id='LC16880'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns the current active route, by matching it against the URL</div><div class='line' id='LC16882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16883'>&nbsp;&nbsp;&nbsp;&nbsp;function parseRoute() {</div><div class='line' id='LC16884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Match a route</div><div class='line' id='LC16885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params, match;</div><div class='line' id='LC16886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(routes, function(route, path) {</div><div class='line' id='LC16887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!match &amp;&amp; (params = switchRouteMatcher($location.path(), path))) {</div><div class='line' id='LC16888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = inherit(route, {</div><div class='line' id='LC16889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params: extend({}, $location.search(), params),</div><div class='line' id='LC16890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathParams: params});</div><div class='line' id='LC16891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match.$$route = route;</div><div class='line' id='LC16892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// No route matched; fallback to &quot;otherwise&quot; route</div><div class='line' id='LC16895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return match || routes[null] &amp;&amp; inherit(routes[null], {params: {}, pathParams:{}});</div><div class='line' id='LC16896'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16897'><br/></div><div class='line' id='LC16898'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns interpolation of the redirect path with the parametrs</div><div class='line' id='LC16900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16901'>&nbsp;&nbsp;&nbsp;&nbsp;function interpolate(string, params) {</div><div class='line' id='LC16902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = [];</div><div class='line' id='LC16903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach((string||&#39;&#39;).split(&#39;:&#39;), function(segment, i) {</div><div class='line' id='LC16904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i == 0) {</div><div class='line' id='LC16905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(segment);</div><div class='line' id='LC16906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC16907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var segmentMatch = segment.match(/(\w+)(.*)/);</div><div class='line' id='LC16908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key = segmentMatch[1];</div><div class='line' id='LC16909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(params[key]);</div><div class='line' id='LC16910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(segmentMatch[2] || &#39;&#39;);</div><div class='line' id='LC16911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete params[key];</div><div class='line' id='LC16912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.join(&#39;&#39;);</div><div class='line' id='LC16915'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16916'>&nbsp;&nbsp;}];</div><div class='line' id='LC16917'>}</div><div class='line' id='LC16918'><br/></div><div class='line' id='LC16919'>/**</div><div class='line' id='LC16920'>&nbsp;* @ngdoc object</div><div class='line' id='LC16921'>&nbsp;* @name ng.$routeParams</div><div class='line' id='LC16922'>&nbsp;* @requires $route</div><div class='line' id='LC16923'>&nbsp;*</div><div class='line' id='LC16924'>&nbsp;* @description</div><div class='line' id='LC16925'>&nbsp;* Current set of route parameters. The route parameters are a combination of the</div><div class='line' id='LC16926'>&nbsp;* {@link ng.$location $location} `search()`, and `path()`. The `path` parameters</div><div class='line' id='LC16927'>&nbsp;* are extracted when the {@link ng.$route $route} path is matched.</div><div class='line' id='LC16928'>&nbsp;*</div><div class='line' id='LC16929'>&nbsp;* In case of parameter name collision, `path` params take precedence over `search` params.</div><div class='line' id='LC16930'>&nbsp;*</div><div class='line' id='LC16931'>&nbsp;* The service guarantees that the identity of the `$routeParams` object will remain unchanged</div><div class='line' id='LC16932'>&nbsp;* (but its properties will likely change) even when a route change occurs.</div><div class='line' id='LC16933'>&nbsp;*</div><div class='line' id='LC16934'>&nbsp;* @example</div><div class='line' id='LC16935'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC16936'>&nbsp;*  // Given:</div><div class='line' id='LC16937'>&nbsp;*  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby</div><div class='line' id='LC16938'>&nbsp;*  // Route: /Chapter/:chapterId/Section/:sectionId</div><div class='line' id='LC16939'>&nbsp;*  //</div><div class='line' id='LC16940'>&nbsp;*  // Then</div><div class='line' id='LC16941'>&nbsp;*  $routeParams ==&gt; {chapterId:1, sectionId:2, search:&#39;moby&#39;}</div><div class='line' id='LC16942'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC16943'>&nbsp;*/</div><div class='line' id='LC16944'>function $RouteParamsProvider() {</div><div class='line' id='LC16945'>&nbsp;&nbsp;this.$get = valueFn({});</div><div class='line' id='LC16946'>}</div><div class='line' id='LC16947'><br/></div><div class='line' id='LC16948'>/**</div><div class='line' id='LC16949'>&nbsp;* DESIGN NOTES</div><div class='line' id='LC16950'>&nbsp;*</div><div class='line' id='LC16951'>&nbsp;* The design decisions behind the scope are heavily favored for speed and memory consumption.</div><div class='line' id='LC16952'>&nbsp;*</div><div class='line' id='LC16953'>&nbsp;* The typical use of scope is to watch the expressions, which most of the time return the same</div><div class='line' id='LC16954'>&nbsp;* value as last time so we optimize the operation.</div><div class='line' id='LC16955'>&nbsp;*</div><div class='line' id='LC16956'>&nbsp;* Closures construction is expensive in terms of speed as well as memory:</div><div class='line' id='LC16957'>&nbsp;*   - No closures, instead use prototypical inheritance for API</div><div class='line' id='LC16958'>&nbsp;*   - Internal state needs to be stored on scope directly, which means that private state is</div><div class='line' id='LC16959'>&nbsp;*     exposed as $$____ properties</div><div class='line' id='LC16960'>&nbsp;*</div><div class='line' id='LC16961'>&nbsp;* Loop operations are optimized by using while(count--) { ... }</div><div class='line' id='LC16962'>&nbsp;*   - this means that in order to keep the same order of execution as addition we have to add</div><div class='line' id='LC16963'>&nbsp;*     items to the array at the beginning (shift) instead of at the end (push)</div><div class='line' id='LC16964'>&nbsp;*</div><div class='line' id='LC16965'>&nbsp;* Child scopes are created and removed often</div><div class='line' id='LC16966'>&nbsp;*   - Using an array would be slow since inserts in middle are expensive so we use linked list</div><div class='line' id='LC16967'>&nbsp;*</div><div class='line' id='LC16968'>&nbsp;* There are few watches then a lot of observers. This is why you don&#39;t want the observer to be</div><div class='line' id='LC16969'>&nbsp;* implemented in the same way as watch. Watch requires return of initialization function which</div><div class='line' id='LC16970'>&nbsp;* are expensive to construct.</div><div class='line' id='LC16971'>&nbsp;*/</div><div class='line' id='LC16972'><br/></div><div class='line' id='LC16973'><br/></div><div class='line' id='LC16974'>/**</div><div class='line' id='LC16975'>&nbsp;* @ngdoc object</div><div class='line' id='LC16976'>&nbsp;* @name ng.$rootScopeProvider</div><div class='line' id='LC16977'>&nbsp;* @description</div><div class='line' id='LC16978'>&nbsp;*</div><div class='line' id='LC16979'>&nbsp;* Provider for the $rootScope service.</div><div class='line' id='LC16980'>&nbsp;*/</div><div class='line' id='LC16981'><br/></div><div class='line' id='LC16982'>/**</div><div class='line' id='LC16983'>&nbsp;* @ngdoc function</div><div class='line' id='LC16984'>&nbsp;* @name ng.$rootScopeProvider#digestTtl</div><div class='line' id='LC16985'>&nbsp;* @methodOf ng.$rootScopeProvider</div><div class='line' id='LC16986'>&nbsp;* @description</div><div class='line' id='LC16987'>&nbsp;*</div><div class='line' id='LC16988'>&nbsp;* Sets the number of digest iterations the scope should attempt to execute before giving up and</div><div class='line' id='LC16989'>&nbsp;* assuming that the model is unstable.</div><div class='line' id='LC16990'>&nbsp;*</div><div class='line' id='LC16991'>&nbsp;* The current default is 10 iterations.</div><div class='line' id='LC16992'>&nbsp;*</div><div class='line' id='LC16993'>&nbsp;* @param {number} limit The number of digest iterations.</div><div class='line' id='LC16994'>&nbsp;*/</div><div class='line' id='LC16995'><br/></div><div class='line' id='LC16996'><br/></div><div class='line' id='LC16997'>/**</div><div class='line' id='LC16998'>&nbsp;* @ngdoc object</div><div class='line' id='LC16999'>&nbsp;* @name ng.$rootScope</div><div class='line' id='LC17000'>&nbsp;* @description</div><div class='line' id='LC17001'>&nbsp;*</div><div class='line' id='LC17002'>&nbsp;* Every application has a single root {@link ng.$rootScope.Scope scope}.</div><div class='line' id='LC17003'>&nbsp;* All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide</div><div class='line' id='LC17004'>&nbsp;* event processing life-cycle. See {@link guide/scope developer guide on scopes}.</div><div class='line' id='LC17005'>&nbsp;*/</div><div class='line' id='LC17006'>function $RootScopeProvider(){</div><div class='line' id='LC17007'>&nbsp;&nbsp;var TTL = 10;</div><div class='line' id='LC17008'><br/></div><div class='line' id='LC17009'>&nbsp;&nbsp;this.digestTtl = function(value) {</div><div class='line' id='LC17010'>&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length) {</div><div class='line' id='LC17011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TTL = value;</div><div class='line' id='LC17012'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17013'>&nbsp;&nbsp;&nbsp;&nbsp;return TTL;</div><div class='line' id='LC17014'>&nbsp;&nbsp;};</div><div class='line' id='LC17015'><br/></div><div class='line' id='LC17016'>&nbsp;&nbsp;this.$get = [&#39;$injector&#39;, &#39;$exceptionHandler&#39;, &#39;$parse&#39;,</div><div class='line' id='LC17017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function( $injector,   $exceptionHandler,   $parse) {</div><div class='line' id='LC17018'><br/></div><div class='line' id='LC17019'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope</div><div class='line' id='LC17022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the</div><div class='line' id='LC17025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link AUTO.$injector $injector}. Child scopes are created using the</div><div class='line' id='LC17026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when</div><div class='line' id='LC17027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* compiled HTML template is executed.)</div><div class='line' id='LC17028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Here is a simple scope snippet to show how you can interact with the scope.</div><div class='line' id='LC17030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.injector([&#39;ng&#39;]).invoke(function($rootScope) {</div><div class='line' id='LC17032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = $rootScope.$new();</div><div class='line' id='LC17033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.salutation = &#39;Hello&#39;;</div><div class='line' id='LC17034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;World&#39;;</div><div class='line' id='LC17035'><br/></div><div class='line' id='LC17036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.greeting).toEqual(undefined);</div><div class='line' id='LC17037'><br/></div><div class='line' id='LC17038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(&#39;name&#39;, function() {</div><div class='line' id='LC17039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.greeting = scope.salutation + &#39; &#39; + scope.name + &#39;!&#39;;</div><div class='line' id='LC17040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); // initialize the watch</div><div class='line' id='LC17041'><br/></div><div class='line' id='LC17042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.greeting).toEqual(undefined);</div><div class='line' id='LC17043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;Misko&#39;;</div><div class='line' id='LC17044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// still old value, since watches have not been called yet</div><div class='line' id='LC17045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.greeting).toEqual(undefined);</div><div class='line' id='LC17046'><br/></div><div class='line' id='LC17047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$digest(); // fire all  the watches</div><div class='line' id='LC17048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.greeting).toEqual(&#39;Hello Misko!&#39;);</div><div class='line' id='LC17049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Inheritance</div><div class='line' id='LC17053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A scope can inherit from a parent scope, as in this example:</div><div class='line' id='LC17054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent = $rootScope;</div><div class='line' id='LC17056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child = parent.$new();</div><div class='line' id='LC17057'><br/></div><div class='line' id='LC17058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.salutation = &quot;Hello&quot;;</div><div class='line' id='LC17059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.name = &quot;World&quot;;</div><div class='line' id='LC17060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(child.salutation).toEqual(&#39;Hello&#39;);</div><div class='line' id='LC17061'><br/></div><div class='line' id='LC17062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.salutation = &quot;Welcome&quot;;</div><div class='line' id='LC17063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(child.salutation).toEqual(&#39;Welcome&#39;);</div><div class='line' id='LC17064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(parent.salutation).toEqual(&#39;Hello&#39;);</div><div class='line' id='LC17065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object.&lt;string, function()&gt;=} providers Map of service factory which need to be provided</div><div class='line' id='LC17069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     for the current scope. Defaults to {@link ng}.</div><div class='line' id='LC17070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object.&lt;string, *&gt;=} instanceCache Provides pre-instantiated services which should</div><div class='line' id='LC17071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     append/override services provided by `providers`. This is handy when unit-testing and having</div><div class='line' id='LC17072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     the need to override a default service.</div><div class='line' id='LC17073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {Object} Newly created scope.</div><div class='line' id='LC17074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17076'>&nbsp;&nbsp;&nbsp;&nbsp;function Scope() {</div><div class='line' id='LC17077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$id = nextUid();</div><div class='line' id='LC17078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$phase = this.$parent = this.$$watchers =</div><div class='line' id='LC17079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$nextSibling = this.$$prevSibling =</div><div class='line' id='LC17080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$childHead = this.$$childTail = null;</div><div class='line' id='LC17081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[&#39;this&#39;] = this.$root =  this;</div><div class='line' id='LC17082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$destroyed = false;</div><div class='line' id='LC17083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$asyncQueue = [];</div><div class='line' id='LC17084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$listeners = {};</div><div class='line' id='LC17085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$isolateBindings = {};</div><div class='line' id='LC17086'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17087'><br/></div><div class='line' id='LC17088'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC17090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$id</div><div class='line' id='LC17091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @propertyOf ng.$rootScope.Scope</div><div class='line' id='LC17092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {number} Unique scope ID (monotonically increasing alphanumeric sequence) useful for</div><div class='line' id='LC17093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   debugging.</div><div class='line' id='LC17094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17095'><br/></div><div class='line' id='LC17096'><br/></div><div class='line' id='LC17097'>&nbsp;&nbsp;&nbsp;&nbsp;Scope.prototype = {</div><div class='line' id='LC17098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$new</div><div class='line' id='LC17101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Creates a new child {@link ng.$rootScope.Scope scope}.</div><div class='line' id='LC17106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} and</div><div class='line' id='LC17108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$digest $digest()} events. The scope can be removed from the scope</div><div class='line' id='LC17109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.</div><div class='line' id='LC17110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is desired for</div><div class='line' id='LC17112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the scope and its child scopes to be permanently detached from the parent and thus stop</div><div class='line' id='LC17113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* participating in model change detection and listener notification by invoking.</div><div class='line' id='LC17114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {boolean} isolate if true then the scope does not prototypically inherit from the</div><div class='line' id='LC17116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         parent scope. The scope is isolated, as it can not see parent scope properties.</div><div class='line' id='LC17117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         When creating widgets it is useful for the widget to not accidentally read parent</div><div class='line' id='LC17118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         state.</div><div class='line' id='LC17119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {Object} The newly created child scope.</div><div class='line' id='LC17121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$new: function(isolate) {</div><div class='line' id='LC17124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var Child,</div><div class='line' id='LC17125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child;</div><div class='line' id='LC17126'><br/></div><div class='line' id='LC17127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isFunction(isolate)) {</div><div class='line' id='LC17128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO: remove at some point</div><div class='line' id='LC17129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&#39;API-CHANGE: Use $controller to instantiate controllers.&#39;);</div><div class='line' id='LC17130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isolate) {</div><div class='line' id='LC17132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = new Scope();</div><div class='line' id='LC17133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$root = this.$root;</div><div class='line' id='LC17134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC17135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Child = function() {}; // should be anonymous; This is so that when the minifier munges</div><div class='line' id='LC17136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the name it does not become random set of chars. These will then show up as class</div><div class='line' id='LC17137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// name in the debugger.</div><div class='line' id='LC17138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Child.prototype = this;</div><div class='line' id='LC17139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = new Child();</div><div class='line' id='LC17140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$id = nextUid();</div><div class='line' id='LC17141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child[&#39;this&#39;] = child;</div><div class='line' id='LC17143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$$listeners = {};</div><div class='line' id='LC17144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$parent = this;</div><div class='line' id='LC17145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$$asyncQueue = [];</div><div class='line' id='LC17146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$$watchers = child.$$nextSibling = child.$$childHead = child.$$childTail = null;</div><div class='line' id='LC17147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.$$prevSibling = this.$$childTail;</div><div class='line' id='LC17148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.$$childHead) {</div><div class='line' id='LC17149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$childTail.$$nextSibling = child;</div><div class='line' id='LC17150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$childTail = child;</div><div class='line' id='LC17151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC17152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$childHead = this.$$childTail = child;</div><div class='line' id='LC17153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC17155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17156'><br/></div><div class='line' id='LC17157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$watch</div><div class='line' id='LC17160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Registers a `listener` callback to be executed whenever the `watchExpression` changes.</div><div class='line' id='LC17165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest $digest()} and</div><div class='line' id='LC17167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   should return the value which will be watched. (Since {@link ng.$rootScope.Scope#$digest $digest()}</div><div class='line' id='LC17168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   reruns when it detects changes the `watchExpression` can execute multiple times per</div><div class='line' id='LC17169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)</div><div class='line' id='LC17170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - The `listener` is called only when the value from the current `watchExpression` and the</div><div class='line' id='LC17171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   previous call to `watchExpression` are not equal (with the exception of the initial run,</div><div class='line' id='LC17172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   see below). The inequality is determined according to</div><div class='line' id='LC17173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   {@link angular.equals} function. To save the value of the object for later comparison, the</div><div class='line' id='LC17174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   {@link angular.copy} function is used. It also means that watching complex options will</div><div class='line' id='LC17175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   have adverse memory and performance implications.</div><div class='line' id='LC17176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - The watch `listener` may change the model, which may trigger other `listener`s to fire. This</div><div class='line' id='LC17177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   is achieved by rerunning the watchers until no changes are detected. The rerun iteration</div><div class='line' id='LC17178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   limit is 10 to prevent an infinite loop deadlock.</div><div class='line' id='LC17179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,</div><div class='line' id='LC17182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* you can register a `watchExpression` function with no `listener`. (Since `watchExpression`</div><div class='line' id='LC17183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a change is</div><div class='line' id='LC17184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* detected, be prepared for multiple calls to your listener.)</div><div class='line' id='LC17185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* After a watcher is registered with the scope, the `listener` fn is called asynchronously</div><div class='line' id='LC17187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the</div><div class='line' id='LC17188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* watcher. In rare cases, this is undesirable because the listener is called when the result</div><div class='line' id='LC17189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of `watchExpression` didn&#39;t change. To detect this scenario within the `listener` fn, you</div><div class='line' id='LC17190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the</div><div class='line' id='LC17191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* listener was called due to initialization.</div><div class='line' id='LC17192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Example</div><div class='line' id='LC17195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// let&#39;s assume that scope was dependency injected as the $rootScope</div><div class='line' id='LC17197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = $rootScope;</div><div class='line' id='LC17198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;misko&#39;;</div><div class='line' id='LC17199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.counter = 0;</div><div class='line' id='LC17200'><br/></div><div class='line' id='LC17201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(&#39;name&#39;, function(newValue, oldValue) { scope.counter = scope.counter + 1; });</div><div class='line' id='LC17203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17204'><br/></div><div class='line' id='LC17205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$digest();</div><div class='line' id='LC17206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no variable change</div><div class='line' id='LC17207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17208'><br/></div><div class='line' id='LC17209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;adam&#39;;</div><div class='line' id='LC17210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$digest();</div><div class='line' id='LC17211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(1);</div><div class='line' id='LC17212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {(function()|string)} watchExpression Expression that is evaluated on each</div><div class='line' id='LC17217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers a</div><div class='line' id='LC17218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    call to the `listener`.</div><div class='line' id='LC17219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `string`: Evaluated as {@link guide/expression expression}</div><div class='line' id='LC17221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `function(scope)`: called with current `scope` as a parameter.</div><div class='line' id='LC17222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {(function()|string)=} listener Callback called whenever the return value of</div><div class='line' id='LC17223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   the `watchExpression` changes.</div><div class='line' id='LC17224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `string`: Evaluated as {@link guide/expression expression}</div><div class='line' id='LC17226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `function(newValue, oldValue, scope)`: called with current and previous values as parameters.</div><div class='line' id='LC17227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {boolean=} objectEquality Compare object for equality rather than for reference.</div><div class='line' id='LC17229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {function()} Returns a deregistration function for this listener.</div><div class='line' id='LC17230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$watch: function(watchExp, listener, objectEquality) {</div><div class='line' id='LC17232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = this,</div><div class='line' id='LC17233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get = compileToFn(watchExp, &#39;watch&#39;),</div><div class='line' id='LC17234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = scope.$$watchers,</div><div class='line' id='LC17235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watcher = {</div><div class='line' id='LC17236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn: listener,</div><div class='line' id='LC17237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last: initWatchVal,</div><div class='line' id='LC17238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: get,</div><div class='line' id='LC17239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exp: watchExp,</div><div class='line' id='LC17240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eq: !!objectEquality</div><div class='line' id='LC17241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17242'><br/></div><div class='line' id='LC17243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// in the case user pass string, we need to compile it, do we really need this ?</div><div class='line' id='LC17244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isFunction(listener)) {</div><div class='line' id='LC17245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var listenFn = compileToFn(listener || noop, &#39;listener&#39;);</div><div class='line' id='LC17246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};</div><div class='line' id='LC17247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17248'><br/></div><div class='line' id='LC17249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!array) {</div><div class='line' id='LC17250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = scope.$$watchers = [];</div><div class='line' id='LC17251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we use unshift since we use a while loop in $digest for speed.</div><div class='line' id='LC17253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the while loop reads in reverse order.</div><div class='line' id='LC17254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.unshift(watcher);</div><div class='line' id='LC17255'><br/></div><div class='line' id='LC17256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC17257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayRemove(array, watcher);</div><div class='line' id='LC17258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17260'><br/></div><div class='line' id='LC17261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$digest</div><div class='line' id='LC17264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and its children.</div><div class='line' id='LC17269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Because a {@link ng.$rootScope.Scope#$watch watcher}&#39;s listener can change the model, the</div><div class='line' id='LC17270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers} until no more listeners are</div><div class='line' id='LC17271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* firing. This means that it is possible to get into an infinite loop. This function will throw</div><div class='line' id='LC17272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `&#39;Maximum iteration limit exceeded.&#39;` if the number of iterations exceeds 10.</div><div class='line' id='LC17273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Usually you don&#39;t call `$digest()` directly in</div><div class='line' id='LC17275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.directive:ngController controllers} or in</div><div class='line' id='LC17276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$compileProvider#directive directives}.</div><div class='line' id='LC17277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Instead a call to {@link ng.$rootScope.Scope#$apply $apply()} (typically from within a</div><div class='line' id='LC17278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$compileProvider#directive directives}) will force a `$digest()`.</div><div class='line' id='LC17279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If you want to be notified whenever `$digest()` is called,</div><div class='line' id='LC17281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* you can register a `watchExpression` function  with {@link ng.$rootScope.Scope#$watch $watch()}</div><div class='line' id='LC17282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* with no `listener`.</div><div class='line' id='LC17283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* You may have a need to call `$digest()` from within unit-tests, to simulate the scope</div><div class='line' id='LC17285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* life-cycle.</div><div class='line' id='LC17286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Example</div><div class='line' id='LC17288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = ...;</div><div class='line' id='LC17290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;misko&#39;;</div><div class='line' id='LC17291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.counter = 0;</div><div class='line' id='LC17292'><br/></div><div class='line' id='LC17293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(&#39;name&#39;, function(newValue, oldValue) {</div><div class='line' id='LC17295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.counter = scope.counter + 1;</div><div class='line' id='LC17296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17298'><br/></div><div class='line' id='LC17299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$digest();</div><div class='line' id='LC17300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no variable change</div><div class='line' id='LC17301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(0);</div><div class='line' id='LC17302'><br/></div><div class='line' id='LC17303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.name = &#39;adam&#39;;</div><div class='line' id='LC17304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$digest();</div><div class='line' id='LC17305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.counter).toEqual(1);</div><div class='line' id='LC17306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$digest: function() {</div><div class='line' id='LC17310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var watch, value, last,</div><div class='line' id='LC17311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watchers,</div><div class='line' id='LC17312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;asyncQueue,</div><div class='line' id='LC17313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length,</div><div class='line' id='LC17314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirty, ttl = TTL,</div><div class='line' id='LC17315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next, current, target = this,</div><div class='line' id='LC17316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watchLog = [],</div><div class='line' id='LC17317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logIdx, logMsg;</div><div class='line' id='LC17318'><br/></div><div class='line' id='LC17319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beginPhase(&#39;$digest&#39;);</div><div class='line' id='LC17320'><br/></div><div class='line' id='LC17321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC17322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirty = false;</div><div class='line' id='LC17323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = target;</div><div class='line' id='LC17324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC17325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;asyncQueue = current.$$asyncQueue;</div><div class='line' id='LC17326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(asyncQueue.length) {</div><div class='line' id='LC17327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current.$eval(asyncQueue.shift());</div><div class='line' id='LC17329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((watchers = current.$$watchers)) {</div><div class='line' id='LC17334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// process our watches</div><div class='line' id='LC17335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = watchers.length;</div><div class='line' id='LC17336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (length--) {</div><div class='line' id='LC17337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watch = watchers[length];</div><div class='line' id='LC17339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Most common watches are on primitives, in which case we can short</div><div class='line' id='LC17340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// circuit it with === operator, only when === fails do we use .equals</div><div class='line' id='LC17341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((value = watch.get(current)) !== (last = watch.last) &amp;&amp;</div><div class='line' id='LC17342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!(watch.eq</div><div class='line' id='LC17343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? equals(value, last)</div><div class='line' id='LC17344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: (typeof value == &#39;number&#39; &amp;&amp; typeof last == &#39;number&#39;</div><div class='line' id='LC17345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; isNaN(value) &amp;&amp; isNaN(last)))) {</div><div class='line' id='LC17346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dirty = true;</div><div class='line' id='LC17347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watch.last = watch.eq ? copy(value) : value;</div><div class='line' id='LC17348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watch.fn(value, ((last === initWatchVal) ? value : last), current);</div><div class='line' id='LC17349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ttl &lt; 5) {</div><div class='line' id='LC17350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logIdx = 4 - ttl;</div><div class='line' id='LC17351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!watchLog[logIdx]) watchLog[logIdx] = [];</div><div class='line' id='LC17352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logMsg = (isFunction(watch.exp))</div><div class='line' id='LC17353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &#39;fn: &#39; + (watch.exp.name || watch.exp.toString())</div><div class='line' id='LC17354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: watch.exp;</div><div class='line' id='LC17355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logMsg += &#39;; newVal: &#39; + toJson(value) + &#39;; oldVal: &#39; + toJson(last);</div><div class='line' id='LC17356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;watchLog[logIdx].push(logMsg);</div><div class='line' id='LC17357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17364'><br/></div><div class='line' id='LC17365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Insanity Warning: scope depth-first traversal</div><div class='line' id='LC17366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// yes, this code is a bit crazy, but it works and we have tests to prove it!</div><div class='line' id='LC17367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this piece should be kept in sync with the traversal in $broadcast</div><div class='line' id='LC17368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(next = (current.$$childHead || (current !== target &amp;&amp; current.$$nextSibling)))) {</div><div class='line' id='LC17369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(current !== target &amp;&amp; !(next = current.$$nextSibling)) {</div><div class='line' id='LC17370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = current.$parent;</div><div class='line' id='LC17371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while ((current = next));</div><div class='line' id='LC17374'><br/></div><div class='line' id='LC17375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dirty &amp;&amp; !(ttl--)) {</div><div class='line' id='LC17376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearPhase();</div><div class='line' id='LC17377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(TTL + &#39; $digest() iterations reached. Aborting!\n&#39; +</div><div class='line' id='LC17378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Watchers fired in the last 5 iterations: &#39; + toJson(watchLog));</div><div class='line' id='LC17379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (dirty || asyncQueue.length);</div><div class='line' id='LC17381'><br/></div><div class='line' id='LC17382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearPhase();</div><div class='line' id='LC17383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17384'><br/></div><div class='line' id='LC17385'><br/></div><div class='line' id='LC17386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc event</div><div class='line' id='LC17388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$destroy</div><div class='line' id='LC17389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventOf ng.$rootScope.Scope</div><div class='line' id='LC17390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @eventType broadcast on scope being destroyed</div><div class='line' id='LC17391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Broadcasted when a scope and its children are being destroyed.</div><div class='line' id='LC17394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17395'><br/></div><div class='line' id='LC17396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$destroy</div><div class='line' id='LC17399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Removes the current scope (and all of its children) from the parent scope. Removal implies</div><div class='line' id='LC17404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer</div><div class='line' id='LC17405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* propagate to the current scope and its children. Removal also implies that the current</div><div class='line' id='LC17406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* scope is eligible for garbage collection.</div><div class='line' id='LC17407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `$destroy()` is usually used by directives such as</div><div class='line' id='LC17409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.directive:ngRepeat ngRepeat} for managing the</div><div class='line' id='LC17410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* unrolling of the loop.</div><div class='line' id='LC17411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Just before a scope is destroyed a `$destroy` event is broadcasted on this scope.</div><div class='line' id='LC17413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Application code can register a `$destroy` event handler that will give it chance to</div><div class='line' id='LC17414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* perform any necessary cleanup.</div><div class='line' id='LC17415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$destroy: function() {</div><div class='line' id='LC17417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we can&#39;t destroy the root scope or a scope that has been already destroyed</div><div class='line' id='LC17418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootScope == this || this.$$destroyed) return;</div><div class='line' id='LC17419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent = this.$parent;</div><div class='line' id='LC17420'><br/></div><div class='line' id='LC17421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$broadcast(&#39;$destroy&#39;);</div><div class='line' id='LC17422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$destroyed = true;</div><div class='line' id='LC17423'><br/></div><div class='line' id='LC17424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;</div><div class='line' id='LC17425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;</div><div class='line' id='LC17426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;</div><div class='line' id='LC17427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;</div><div class='line' id='LC17428'><br/></div><div class='line' id='LC17429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// This is bogus code that works around Chrome&#39;s GC leak</div><div class='line' id='LC17430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// see: https://github.com/angular/angular.js/issues/1313#issuecomment-10378451</div><div class='line' id='LC17431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =</div><div class='line' id='LC17432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$childTail = null;</div><div class='line' id='LC17433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17434'><br/></div><div class='line' id='LC17435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$eval</div><div class='line' id='LC17438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Executes the `expression` on the current scope returning the result. Any exceptions in the</div><div class='line' id='LC17443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* expression are propagated (uncaught). This is useful when evaluating Angular expressions.</div><div class='line' id='LC17444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Example</div><div class='line' id='LC17446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = ng.$rootScope.Scope();</div><div class='line' id='LC17448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.a = 1;</div><div class='line' id='LC17449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.b = 2;</div><div class='line' id='LC17450'><br/></div><div class='line' id='LC17451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.$eval(&#39;a+b&#39;)).toEqual(3);</div><div class='line' id='LC17452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);</div><div class='line' id='LC17453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {(string|function())=} expression An angular expression to be executed.</div><div class='line' id='LC17456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `string`: execute using the rules as defined in  {@link guide/expression expression}.</div><div class='line' id='LC17458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `function(scope)`: execute the function with the current `scope` parameter.</div><div class='line' id='LC17459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {*} The result of evaluating the expression.</div><div class='line' id='LC17461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$eval: function(expr, locals) {</div><div class='line' id='LC17463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $parse(expr)(this, locals);</div><div class='line' id='LC17464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17465'><br/></div><div class='line' id='LC17466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$evalAsync</div><div class='line' id='LC17469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Executes the expression on the current scope at a later point in time.</div><div class='line' id='LC17474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only that:</div><div class='line' id='LC17476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - it will execute in the current script execution context (before any DOM rendering).</div><div class='line' id='LC17478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after</div><div class='line' id='LC17479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     `expression` execution.</div><div class='line' id='LC17480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Any exceptions from the execution of the expression are forwarded to the</div><div class='line' id='LC17482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$exceptionHandler $exceptionHandler} service.</div><div class='line' id='LC17483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {(string|function())=} expression An angular expression to be executed.</div><div class='line' id='LC17485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `string`: execute using the rules as defined in  {@link guide/expression expression}.</div><div class='line' id='LC17487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `function(scope)`: execute the function with the current `scope` parameter.</div><div class='line' id='LC17488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$evalAsync: function(expr) {</div><div class='line' id='LC17491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$asyncQueue.push(expr);</div><div class='line' id='LC17492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17493'><br/></div><div class='line' id='LC17494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$apply</div><div class='line' id='LC17497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$apply()` is used to execute an expression in angular from outside of the angular framework.</div><div class='line' id='LC17502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (For example from browser DOM events, setTimeout, XHR or third party libraries).</div><div class='line' id='LC17503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Because we are calling into the angular framework we need to perform proper scope life-cycle</div><div class='line' id='LC17504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of {@link ng.$exceptionHandler exception handling},</div><div class='line' id='LC17505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$digest executing watches}.</div><div class='line' id='LC17506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* ## Life cycle</div><div class='line' id='LC17508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Pseudo-Code of `$apply()`</div><div class='line' id='LC17510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC17511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function $apply(expr) {</div><div class='line' id='LC17512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $eval(expr);</div><div class='line' id='LC17514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC17517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$root.$digest();</div><div class='line' id='LC17518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC17521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Scope&#39;s `$apply()` method transitions through the following stages:</div><div class='line' id='LC17524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 1. The {@link guide/expression expression} is executed using the</div><div class='line' id='LC17526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    {@link ng.$rootScope.Scope#$eval $eval()} method.</div><div class='line' id='LC17527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 2. Any exceptions from the execution of the expression are forwarded to the</div><div class='line' id='LC17528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    {@link ng.$exceptionHandler $exceptionHandler} service.</div><div class='line' id='LC17529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the expression</div><div class='line' id='LC17530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.</div><div class='line' id='LC17531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {(string|function())=} exp An angular expression to be executed.</div><div class='line' id='LC17534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `string`: execute using the rules as defined in {@link guide/expression expression}.</div><div class='line' id='LC17536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - `function(scope)`: execute the function with current `scope` parameter.</div><div class='line' id='LC17537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {*} The result of evaluating the expression.</div><div class='line' id='LC17539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$apply: function(expr) {</div><div class='line' id='LC17541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beginPhase(&#39;$apply&#39;);</div><div class='line' id='LC17543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.$eval(expr);</div><div class='line' id='LC17544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC17547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearPhase();</div><div class='line' id='LC17548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$digest();</div><div class='line' id='LC17550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;</div><div class='line' id='LC17553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17556'><br/></div><div class='line' id='LC17557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$on</div><div class='line' id='LC17560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for discussion of</div><div class='line' id='LC17565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* event life cycle.</div><div class='line' id='LC17566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The event listener function format is: `function(event, args...)`. The `event` object</div><div class='line' id='LC17568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* passed into the listener has the following attributes:</div><div class='line' id='LC17569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or `$broadcast`-ed.</div><div class='line' id='LC17571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `currentScope` - `{Scope}`: the current scope which is handling the event.</div><div class='line' id='LC17572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `name` - `{string}`: Name of the event.</div><div class='line' id='LC17573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel further event</div><div class='line' id='LC17574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     propagation (available only for events that were `$emit`-ed).</div><div class='line' id='LC17575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag to true.</div><div class='line' id='LC17576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.</div><div class='line' id='LC17577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name Event name to listen on.</div><div class='line' id='LC17579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {function(event, args...)} listener Function to call when the event is emitted.</div><div class='line' id='LC17580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {function()} Returns a deregistration function for this listener.</div><div class='line' id='LC17581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$on: function(name, listener) {</div><div class='line' id='LC17583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var namedListeners = this.$$listeners[name];</div><div class='line' id='LC17584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!namedListeners) {</div><div class='line' id='LC17585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$$listeners[name] = namedListeners = [];</div><div class='line' id='LC17586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners.push(listener);</div><div class='line' id='LC17588'><br/></div><div class='line' id='LC17589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC17590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners[indexOf(namedListeners, listener)] = null;</div><div class='line' id='LC17591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17593'><br/></div><div class='line' id='LC17594'><br/></div><div class='line' id='LC17595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$emit</div><div class='line' id='LC17598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Dispatches an event `name` upwards through the scope hierarchy notifying the</div><div class='line' id='LC17603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* registered {@link ng.$rootScope.Scope#$on} listeners.</div><div class='line' id='LC17604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The event life cycle starts at the scope on which `$emit` was called. All</div><div class='line' id='LC17606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.</div><div class='line' id='LC17607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Afterwards, the event traverses upwards toward the root scope and calls all registered</div><div class='line' id='LC17608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* listeners along the way. The event will stop propagating if one of the listeners cancels it.</div><div class='line' id='LC17609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed</div><div class='line' id='LC17611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* onto the {@link ng.$exceptionHandler $exceptionHandler} service.</div><div class='line' id='LC17612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name Event name to emit.</div><div class='line' id='LC17614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {...*} args Optional set of arguments which will be passed onto the event listeners.</div><div class='line' id='LC17615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}</div><div class='line' id='LC17616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$emit: function(name, args) {</div><div class='line' id='LC17618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var empty = [],</div><div class='line' id='LC17619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners,</div><div class='line' id='LC17620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = this,</div><div class='line' id='LC17621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopPropagation = false,</div><div class='line' id='LC17622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event = {</div><div class='line' id='LC17623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: name,</div><div class='line' id='LC17624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetScope: scope,</div><div class='line' id='LC17625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopPropagation: function() {stopPropagation = true;},</div><div class='line' id='LC17626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preventDefault: function() {</div><div class='line' id='LC17627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.defaultPrevented = true;</div><div class='line' id='LC17628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultPrevented: false</div><div class='line' id='LC17630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerArgs = concat([event], arguments, 1),</div><div class='line' id='LC17632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i, length;</div><div class='line' id='LC17633'><br/></div><div class='line' id='LC17634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC17635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners = scope.$$listeners[name] || empty;</div><div class='line' id='LC17636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.currentScope = scope;</div><div class='line' id='LC17637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=0, length=namedListeners.length; i&lt;length; i++) {</div><div class='line' id='LC17638'><br/></div><div class='line' id='LC17639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if listeners were deregistered, defragment the array</div><div class='line' id='LC17640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!namedListeners[i]) {</div><div class='line' id='LC17641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners.splice(i, 1);</div><div class='line' id='LC17642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i--;</div><div class='line' id='LC17643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length--;</div><div class='line' id='LC17644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC17645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedListeners[i].apply(null, listenerArgs);</div><div class='line' id='LC17648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (stopPropagation) return event;</div><div class='line' id='LC17649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC17650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//traverse upwards</div><div class='line' id='LC17654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = scope.$parent;</div><div class='line' id='LC17655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (scope);</div><div class='line' id='LC17656'><br/></div><div class='line' id='LC17657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event;</div><div class='line' id='LC17658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17659'><br/></div><div class='line' id='LC17660'><br/></div><div class='line' id='LC17661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$rootScope.Scope#$broadcast</div><div class='line' id='LC17664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$rootScope.Scope</div><div class='line' id='LC17665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @function</div><div class='line' id='LC17666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Dispatches an event `name` downwards to all child scopes (and their children) notifying the</div><div class='line' id='LC17669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* registered {@link ng.$rootScope.Scope#$on} listeners.</div><div class='line' id='LC17670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The event life cycle starts at the scope on which `$broadcast` was called. All</div><div class='line' id='LC17672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.</div><div class='line' id='LC17673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Afterwards, the event propagates to all direct and indirect scopes of the current scope and</div><div class='line' id='LC17674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* calls all registered listeners along the way. The event cannot be canceled.</div><div class='line' id='LC17675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Any exception emmited from the {@link ng.$rootScope.Scope#$on listeners} will be passed</div><div class='line' id='LC17677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* onto the {@link ng.$exceptionHandler $exceptionHandler} service.</div><div class='line' id='LC17678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} name Event name to broadcast.</div><div class='line' id='LC17680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {...*} args Optional set of arguments which will be passed onto the event listeners.</div><div class='line' id='LC17681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}</div><div class='line' id='LC17682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$broadcast: function(name, args) {</div><div class='line' id='LC17684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var target = this,</div><div class='line' id='LC17685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = target,</div><div class='line' id='LC17686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next = target,</div><div class='line' id='LC17687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event = {</div><div class='line' id='LC17688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: name,</div><div class='line' id='LC17689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetScope: target,</div><div class='line' id='LC17690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preventDefault: function() {</div><div class='line' id='LC17691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.defaultPrevented = true;</div><div class='line' id='LC17692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultPrevented: false</div><div class='line' id='LC17694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerArgs = concat([event], arguments, 1),</div><div class='line' id='LC17696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners, i, length;</div><div class='line' id='LC17697'><br/></div><div class='line' id='LC17698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//down while you can, then up and next sibling or up and next sibling until back at root</div><div class='line' id='LC17699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC17700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = next;</div><div class='line' id='LC17701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.currentScope = current;</div><div class='line' id='LC17702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners = current.$$listeners[name] || [];</div><div class='line' id='LC17703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=0, length = listeners.length; i&lt;length; i++) {</div><div class='line' id='LC17704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if listeners were deregistered, defragment the array</div><div class='line' id='LC17705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!listeners[i]) {</div><div class='line' id='LC17706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners.splice(i, 1);</div><div class='line' id='LC17707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i--;</div><div class='line' id='LC17708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length--;</div><div class='line' id='LC17709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC17710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17711'><br/></div><div class='line' id='LC17712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC17713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners[i].apply(null, listenerArgs);</div><div class='line' id='LC17714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC17715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC17716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17718'><br/></div><div class='line' id='LC17719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Insanity Warning: scope depth-first traversal</div><div class='line' id='LC17720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// yes, this code is a bit crazy, but it works and we have tests to prove it!</div><div class='line' id='LC17721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this piece should be kept in sync with the traversal in $digest</div><div class='line' id='LC17722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(next = (current.$$childHead || (current !== target &amp;&amp; current.$$nextSibling)))) {</div><div class='line' id='LC17723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(current !== target &amp;&amp; !(next = current.$$nextSibling)) {</div><div class='line' id='LC17724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = current.$parent;</div><div class='line' id='LC17725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while ((current = next));</div><div class='line' id='LC17728'><br/></div><div class='line' id='LC17729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event;</div><div class='line' id='LC17730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17731'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17732'><br/></div><div class='line' id='LC17733'>&nbsp;&nbsp;&nbsp;&nbsp;var $rootScope = new Scope();</div><div class='line' id='LC17734'><br/></div><div class='line' id='LC17735'>&nbsp;&nbsp;&nbsp;&nbsp;return $rootScope;</div><div class='line' id='LC17736'><br/></div><div class='line' id='LC17737'><br/></div><div class='line' id='LC17738'>&nbsp;&nbsp;&nbsp;&nbsp;function beginPhase(phase) {</div><div class='line' id='LC17739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($rootScope.$$phase) {</div><div class='line' id='LC17740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error($rootScope.$$phase + &#39; already in progress&#39;);</div><div class='line' id='LC17741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17742'><br/></div><div class='line' id='LC17743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$$phase = phase;</div><div class='line' id='LC17744'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17745'><br/></div><div class='line' id='LC17746'>&nbsp;&nbsp;&nbsp;&nbsp;function clearPhase() {</div><div class='line' id='LC17747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$$phase = null;</div><div class='line' id='LC17748'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17749'><br/></div><div class='line' id='LC17750'>&nbsp;&nbsp;&nbsp;&nbsp;function compileToFn(exp, name) {</div><div class='line' id='LC17751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fn = $parse(exp);</div><div class='line' id='LC17752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assertArgFn(fn, name);</div><div class='line' id='LC17753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn;</div><div class='line' id='LC17754'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17755'><br/></div><div class='line' id='LC17756'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* function used as an initial value for watchers.</div><div class='line' id='LC17758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* because it&#39;s unique we can easily tell it apart from other values</div><div class='line' id='LC17759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17760'>&nbsp;&nbsp;&nbsp;&nbsp;function initWatchVal() {}</div><div class='line' id='LC17761'>&nbsp;&nbsp;}];</div><div class='line' id='LC17762'>}</div><div class='line' id='LC17763'><br/></div><div class='line' id='LC17764'>/**</div><div class='line' id='LC17765'>&nbsp;* !!! This is an undocumented &quot;private&quot; service !!!</div><div class='line' id='LC17766'>&nbsp;*</div><div class='line' id='LC17767'>&nbsp;* @name ng.$sniffer</div><div class='line' id='LC17768'>&nbsp;* @requires $window</div><div class='line' id='LC17769'>&nbsp;*</div><div class='line' id='LC17770'>&nbsp;* @property {boolean} history Does the browser support html5 history api ?</div><div class='line' id='LC17771'>&nbsp;* @property {boolean} hashchange Does the browser support hashchange event ?</div><div class='line' id='LC17772'>&nbsp;*</div><div class='line' id='LC17773'>&nbsp;* @description</div><div class='line' id='LC17774'>&nbsp;* This is very simple implementation of testing browser&#39;s features.</div><div class='line' id='LC17775'>&nbsp;*/</div><div class='line' id='LC17776'>function $SnifferProvider() {</div><div class='line' id='LC17777'>&nbsp;&nbsp;this.$get = [&#39;$window&#39;, function($window) {</div><div class='line' id='LC17778'>&nbsp;&nbsp;&nbsp;&nbsp;var eventSupport = {},</div><div class='line' id='LC17779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;android = int((/android (\d+)/.exec(lowercase($window.navigator.userAgent)) || [])[1]);</div><div class='line' id='LC17780'><br/></div><div class='line' id='LC17781'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC17782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Android has history.pushState, but it does not update location correctly</div><div class='line' id='LC17783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// so let&#39;s not use the history API at all.</div><div class='line' id='LC17784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// http://code.google.com/p/android/issues/detail?id=17471</div><div class='line' id='LC17785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// https://github.com/angular/angular.js/issues/904</div><div class='line' id='LC17786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;history: !!($window.history &amp;&amp; $window.history.pushState &amp;&amp; !(android &lt; 4)),</div><div class='line' id='LC17787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashchange: &#39;onhashchange&#39; in $window &amp;&amp;</div><div class='line' id='LC17788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE8 compatible mode lies</div><div class='line' id='LC17789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(!$window.document.documentMode || $window.document.documentMode &gt; 7),</div><div class='line' id='LC17790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasEvent: function(event) {</div><div class='line' id='LC17791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE9 implements &#39;input&#39; event it&#39;s so fubared that we rather pretend that it doesn&#39;t have</div><div class='line' id='LC17792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// it. In particular the event is not fired when backspace or delete key are pressed or</div><div class='line' id='LC17793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// when cut operation is performed.</div><div class='line' id='LC17794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (event == &#39;input&#39; &amp;&amp; msie == 9) return false;</div><div class='line' id='LC17795'><br/></div><div class='line' id='LC17796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(eventSupport[event])) {</div><div class='line' id='LC17797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var divElm = $window.document.createElement(&#39;div&#39;);</div><div class='line' id='LC17798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventSupport[event] = &#39;on&#39; + event in divElm;</div><div class='line' id='LC17799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17800'><br/></div><div class='line' id='LC17801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return eventSupport[event];</div><div class='line' id='LC17802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(i): currently there is no way to feature detect CSP without triggering alerts</div><div class='line' id='LC17804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;csp: false</div><div class='line' id='LC17805'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17806'>&nbsp;&nbsp;}];</div><div class='line' id='LC17807'>}</div><div class='line' id='LC17808'><br/></div><div class='line' id='LC17809'>/**</div><div class='line' id='LC17810'>&nbsp;* @ngdoc object</div><div class='line' id='LC17811'>&nbsp;* @name ng.$window</div><div class='line' id='LC17812'>&nbsp;*</div><div class='line' id='LC17813'>&nbsp;* @description</div><div class='line' id='LC17814'>&nbsp;* A reference to the browser&#39;s `window` object. While `window`</div><div class='line' id='LC17815'>&nbsp;* is globally available in JavaScript, it causes testability problems, because</div><div class='line' id='LC17816'>&nbsp;* it is a global variable. In angular we always refer to it through the</div><div class='line' id='LC17817'>&nbsp;* `$window` service, so it may be overriden, removed or mocked for testing.</div><div class='line' id='LC17818'>&nbsp;*</div><div class='line' id='LC17819'>&nbsp;* All expressions are evaluated with respect to current scope so they don&#39;t</div><div class='line' id='LC17820'>&nbsp;* suffer from window globality.</div><div class='line' id='LC17821'>&nbsp;*</div><div class='line' id='LC17822'>&nbsp;* @example</div><div class='line' id='LC17823'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC17824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC17825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC17826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope, $window) {</div><div class='line' id='LC17827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$window = $window;</div><div class='line' id='LC17828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.greeting = &#39;Hello, World!&#39;;</div><div class='line' id='LC17829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC17831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC17832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-model=&quot;greeting&quot; /&gt;</div><div class='line' id='LC17833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;$window.alert(greeting)&quot;&gt;ALERT&lt;/button&gt;</div><div class='line' id='LC17834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC17835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC17836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC17837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should display the greeting in the input box&#39;, function() {</div><div class='line' id='LC17838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;greeting&#39;).enter(&#39;Hello, E2E Tests&#39;);</div><div class='line' id='LC17839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If we click the button it will block the test runner</div><div class='line' id='LC17840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// element(&#39;:button&#39;).click();</div><div class='line' id='LC17841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC17843'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC17844'>&nbsp;*/</div><div class='line' id='LC17845'>function $WindowProvider(){</div><div class='line' id='LC17846'>&nbsp;&nbsp;this.$get = valueFn(window);</div><div class='line' id='LC17847'>}</div><div class='line' id='LC17848'><br/></div><div class='line' id='LC17849'>/**</div><div class='line' id='LC17850'>&nbsp;* Parse headers into key value object</div><div class='line' id='LC17851'>&nbsp;*</div><div class='line' id='LC17852'>&nbsp;* @param {string} headers Raw headers as a string</div><div class='line' id='LC17853'>&nbsp;* @returns {Object} Parsed headers as key value object</div><div class='line' id='LC17854'>&nbsp;*/</div><div class='line' id='LC17855'>function parseHeaders(headers) {</div><div class='line' id='LC17856'>&nbsp;&nbsp;var parsed = {}, key, val, i;</div><div class='line' id='LC17857'><br/></div><div class='line' id='LC17858'>&nbsp;&nbsp;if (!headers) return parsed;</div><div class='line' id='LC17859'><br/></div><div class='line' id='LC17860'>&nbsp;&nbsp;forEach(headers.split(&#39;\n&#39;), function(line) {</div><div class='line' id='LC17861'>&nbsp;&nbsp;&nbsp;&nbsp;i = line.indexOf(&#39;:&#39;);</div><div class='line' id='LC17862'>&nbsp;&nbsp;&nbsp;&nbsp;key = lowercase(trim(line.substr(0, i)));</div><div class='line' id='LC17863'>&nbsp;&nbsp;&nbsp;&nbsp;val = trim(line.substr(i + 1));</div><div class='line' id='LC17864'><br/></div><div class='line' id='LC17865'>&nbsp;&nbsp;&nbsp;&nbsp;if (key) {</div><div class='line' id='LC17866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parsed[key]) {</div><div class='line' id='LC17867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parsed[key] += &#39;, &#39; + val;</div><div class='line' id='LC17868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC17869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parsed[key] = val;</div><div class='line' id='LC17870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17871'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17872'>&nbsp;&nbsp;});</div><div class='line' id='LC17873'><br/></div><div class='line' id='LC17874'>&nbsp;&nbsp;return parsed;</div><div class='line' id='LC17875'>}</div><div class='line' id='LC17876'><br/></div><div class='line' id='LC17877'><br/></div><div class='line' id='LC17878'>/**</div><div class='line' id='LC17879'>&nbsp;* Returns a function that provides access to parsed headers.</div><div class='line' id='LC17880'>&nbsp;*</div><div class='line' id='LC17881'>&nbsp;* Headers are lazy parsed when first requested.</div><div class='line' id='LC17882'>&nbsp;* @see parseHeaders</div><div class='line' id='LC17883'>&nbsp;*</div><div class='line' id='LC17884'>&nbsp;* @param {(string|Object)} headers Headers to provide access to.</div><div class='line' id='LC17885'>&nbsp;* @returns {function(string=)} Returns a getter function which if called with:</div><div class='line' id='LC17886'>&nbsp;*</div><div class='line' id='LC17887'>&nbsp;*   - if called with single an argument returns a single header value or null</div><div class='line' id='LC17888'>&nbsp;*   - if called with no arguments returns an object containing all headers.</div><div class='line' id='LC17889'>&nbsp;*/</div><div class='line' id='LC17890'>function headersGetter(headers) {</div><div class='line' id='LC17891'>&nbsp;&nbsp;var headersObj = isObject(headers) ? headers : undefined;</div><div class='line' id='LC17892'><br/></div><div class='line' id='LC17893'>&nbsp;&nbsp;return function(name) {</div><div class='line' id='LC17894'>&nbsp;&nbsp;&nbsp;&nbsp;if (!headersObj) headersObj =  parseHeaders(headers);</div><div class='line' id='LC17895'><br/></div><div class='line' id='LC17896'>&nbsp;&nbsp;&nbsp;&nbsp;if (name) {</div><div class='line' id='LC17897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return headersObj[lowercase(name)] || null;</div><div class='line' id='LC17898'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17899'><br/></div><div class='line' id='LC17900'>&nbsp;&nbsp;&nbsp;&nbsp;return headersObj;</div><div class='line' id='LC17901'>&nbsp;&nbsp;};</div><div class='line' id='LC17902'>}</div><div class='line' id='LC17903'><br/></div><div class='line' id='LC17904'><br/></div><div class='line' id='LC17905'>/**</div><div class='line' id='LC17906'>&nbsp;* Chain all given functions</div><div class='line' id='LC17907'>&nbsp;*</div><div class='line' id='LC17908'>&nbsp;* This function is used for both request and response transforming</div><div class='line' id='LC17909'>&nbsp;*</div><div class='line' id='LC17910'>&nbsp;* @param {*} data Data to transform.</div><div class='line' id='LC17911'>&nbsp;* @param {function(string=)} headers Http headers getter fn.</div><div class='line' id='LC17912'>&nbsp;* @param {(function|Array.&lt;function&gt;)} fns Function or an array of functions.</div><div class='line' id='LC17913'>&nbsp;* @returns {*} Transformed data.</div><div class='line' id='LC17914'>&nbsp;*/</div><div class='line' id='LC17915'>function transformData(data, headers, fns) {</div><div class='line' id='LC17916'>&nbsp;&nbsp;if (isFunction(fns))</div><div class='line' id='LC17917'>&nbsp;&nbsp;&nbsp;&nbsp;return fns(data, headers);</div><div class='line' id='LC17918'><br/></div><div class='line' id='LC17919'>&nbsp;&nbsp;forEach(fns, function(fn) {</div><div class='line' id='LC17920'>&nbsp;&nbsp;&nbsp;&nbsp;data = fn(data, headers);</div><div class='line' id='LC17921'>&nbsp;&nbsp;});</div><div class='line' id='LC17922'><br/></div><div class='line' id='LC17923'>&nbsp;&nbsp;return data;</div><div class='line' id='LC17924'>}</div><div class='line' id='LC17925'><br/></div><div class='line' id='LC17926'><br/></div><div class='line' id='LC17927'>function isSuccess(status) {</div><div class='line' id='LC17928'>&nbsp;&nbsp;return 200 &lt;= status &amp;&amp; status &lt; 300;</div><div class='line' id='LC17929'>}</div><div class='line' id='LC17930'><br/></div><div class='line' id='LC17931'><br/></div><div class='line' id='LC17932'>function $HttpProvider() {</div><div class='line' id='LC17933'>&nbsp;&nbsp;var JSON_START = /^\s*(\[|\{[^\{])/,</div><div class='line' id='LC17934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON_END = /[\}\]]\s*$/,</div><div class='line' id='LC17935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PROTECTION_PREFIX = /^\)\]\}&#39;,?\n/;</div><div class='line' id='LC17936'><br/></div><div class='line' id='LC17937'>&nbsp;&nbsp;var $config = this.defaults = {</div><div class='line' id='LC17938'>&nbsp;&nbsp;&nbsp;&nbsp;// transform incoming response data</div><div class='line' id='LC17939'>&nbsp;&nbsp;&nbsp;&nbsp;transformResponse: [function(data) {</div><div class='line' id='LC17940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(data)) {</div><div class='line' id='LC17941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// strip json vulnerability protection prefix</div><div class='line' id='LC17942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = data.replace(PROTECTION_PREFIX, &#39;&#39;);</div><div class='line' id='LC17943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (JSON_START.test(data) &amp;&amp; JSON_END.test(data))</div><div class='line' id='LC17944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = fromJson(data, true);</div><div class='line' id='LC17945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data;</div><div class='line' id='LC17947'>&nbsp;&nbsp;&nbsp;&nbsp;}],</div><div class='line' id='LC17948'><br/></div><div class='line' id='LC17949'>&nbsp;&nbsp;&nbsp;&nbsp;// transform outgoing request data</div><div class='line' id='LC17950'>&nbsp;&nbsp;&nbsp;&nbsp;transformRequest: [function(d) {</div><div class='line' id='LC17951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return isObject(d) &amp;&amp; !isFile(d) ? toJson(d) : d;</div><div class='line' id='LC17952'>&nbsp;&nbsp;&nbsp;&nbsp;}],</div><div class='line' id='LC17953'><br/></div><div class='line' id='LC17954'>&nbsp;&nbsp;&nbsp;&nbsp;// default headers</div><div class='line' id='LC17955'>&nbsp;&nbsp;&nbsp;&nbsp;headers: {</div><div class='line' id='LC17956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;common: {</div><div class='line' id='LC17957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Accept&#39;: &#39;application/json, text/plain, */*&#39;,</div><div class='line' id='LC17958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;</div><div class='line' id='LC17959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post: {&#39;Content-Type&#39;: &#39;application/json;charset=utf-8&#39;},</div><div class='line' id='LC17961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put:  {&#39;Content-Type&#39;: &#39;application/json;charset=utf-8&#39;}</div><div class='line' id='LC17962'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17963'>&nbsp;&nbsp;};</div><div class='line' id='LC17964'><br/></div><div class='line' id='LC17965'>&nbsp;&nbsp;var providerResponseInterceptors = this.responseInterceptors = [];</div><div class='line' id='LC17966'><br/></div><div class='line' id='LC17967'>&nbsp;&nbsp;this.$get = [&#39;$httpBackend&#39;, &#39;$browser&#39;, &#39;$cacheFactory&#39;, &#39;$rootScope&#39;, &#39;$q&#39;, &#39;$injector&#39;,</div><div class='line' id='LC17968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {</div><div class='line' id='LC17969'><br/></div><div class='line' id='LC17970'>&nbsp;&nbsp;&nbsp;&nbsp;var defaultCache = $cacheFactory(&#39;$http&#39;),</div><div class='line' id='LC17971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseInterceptors = [];</div><div class='line' id='LC17972'><br/></div><div class='line' id='LC17973'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(providerResponseInterceptors, function(interceptor) {</div><div class='line' id='LC17974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseInterceptors.push(</div><div class='line' id='LC17975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isString(interceptor)</div><div class='line' id='LC17976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? $injector.get(interceptor)</div><div class='line' id='LC17977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: $injector.invoke(interceptor)</div><div class='line' id='LC17978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC17979'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17980'><br/></div><div class='line' id='LC17981'><br/></div><div class='line' id='LC17982'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC17984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http</div><div class='line' id='LC17985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $httpBackend</div><div class='line' id='LC17986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $browser</div><div class='line' id='LC17987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $cacheFactory</div><div class='line' id='LC17988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $rootScope</div><div class='line' id='LC17989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $q</div><div class='line' id='LC17990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $injector</div><div class='line' id='LC17991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC17993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `$http` service is a core Angular service that facilitates communication with the remote</div><div class='line' id='LC17994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* HTTP servers via the browser&#39;s {@link https://developer.mozilla.org/en/xmlhttprequest</div><div class='line' id='LC17995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.</div><div class='line' id='LC17996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For unit testing applications that use `$http` service, see</div><div class='line' id='LC17998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ngMock.$httpBackend $httpBackend mock}.</div><div class='line' id='LC17999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For a higher level of abstraction, please check out the {@link ngResource.$resource</div><div class='line' id='LC18001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* $resource} service.</div><div class='line' id='LC18002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by</div><div class='line' id='LC18004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the $q service. While for simple usage patterns this doesn&#39;t matter much, for advanced usage</div><div class='line' id='LC18005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* it is important to familiarize yourself with these APIs and the guarantees they provide.</div><div class='line' id='LC18006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # General usage</div><div class='line' id='LC18009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The `$http` service is a function which takes a single argument — a configuration object —</div><div class='line' id='LC18010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* that is used to generate an HTTP request and returns  a {@link ng.$q promise}</div><div class='line' id='LC18011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* with two $http specific methods: `success` and `error`.</div><div class='line' id='LC18012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $http({method: &#39;GET&#39;, url: &#39;/someUrl&#39;}).</div><div class='line' id='LC18015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     success(function(data, status, headers, config) {</div><div class='line' id='LC18016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       // this callback will be called asynchronously</div><div class='line' id='LC18017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       // when the response is available</div><div class='line' id='LC18018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     }).</div><div class='line' id='LC18019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     error(function(data, status, headers, config) {</div><div class='line' id='LC18020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       // called asynchronously if an error occurs</div><div class='line' id='LC18021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       // or server returns response with an error status.</div><div class='line' id='LC18022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     });</div><div class='line' id='LC18023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Since the returned value of calling the $http function is a `promise`, you can also use</div><div class='line' id='LC18026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the `then` method to register callbacks, and these callbacks will receive a single argument –</div><div class='line' id='LC18027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* an object representing the response. See the API signature and type info below for more</div><div class='line' id='LC18028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* details.</div><div class='line' id='LC18029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A response status code between 200 and 299 is considered a success status and</div><div class='line' id='LC18031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* will result in the success callback being called. Note that if the response is a redirect,</div><div class='line' id='LC18032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* XMLHttpRequest will transparently follow it, meaning that the error callback will not be</div><div class='line' id='LC18033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* called for such responses.</div><div class='line' id='LC18034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Shortcut methods</div><div class='line' id='LC18036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Since all invocations of the $http service require passing in an HTTP method and URL, and</div><div class='line' id='LC18038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* POST/PUT requests require request data to be provided as well, shortcut methods</div><div class='line' id='LC18039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* were created:</div><div class='line' id='LC18040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $http.get(&#39;/someUrl&#39;).success(successCallback);</div><div class='line' id='LC18043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $http.post(&#39;/someUrl&#39;, data).success(successCallback);</div><div class='line' id='LC18044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Complete list of shortcut methods:</div><div class='line' id='LC18047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#get $http.get}</div><div class='line' id='LC18049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#head $http.head}</div><div class='line' id='LC18050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#post $http.post}</div><div class='line' id='LC18051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#put $http.put}</div><div class='line' id='LC18052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#delete $http.delete}</div><div class='line' id='LC18053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link ng.$http#jsonp $http.jsonp}</div><div class='line' id='LC18054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Setting HTTP Headers</div><div class='line' id='LC18057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The $http service will automatically add certain HTTP headers to all requests. These defaults</div><div class='line' id='LC18059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* can be fully configured by accessing the `$httpProvider.defaults.headers` configuration</div><div class='line' id='LC18060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* object, which currently contains this default configuration:</div><div class='line' id='LC18061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - `$httpProvider.defaults.headers.common` (headers that are common for all requests):</div><div class='line' id='LC18063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `Accept: application/json, text/plain, * / *`</div><div class='line' id='LC18064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `X-Requested-With: XMLHttpRequest`</div><div class='line' id='LC18065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)</div><div class='line' id='LC18066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `Content-Type: application/json`</div><div class='line' id='LC18067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)</div><div class='line' id='LC18068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - `Content-Type: application/json`</div><div class='line' id='LC18069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* To add or overwrite these defaults, simply add or remove a property from these configuration</div><div class='line' id='LC18071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* objects. To add headers for an HTTP method other than POST or PUT, simply add a new object</div><div class='line' id='LC18072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* with the lowercased HTTP method name as the key, e.g.</div><div class='line' id='LC18073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$httpProvider.defaults.headers.get[&#39;My-Header&#39;]=&#39;value&#39;`.</div><div class='line' id='LC18074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Additionally, the defaults can be set at runtime via the `$http.defaults` object in the same</div><div class='line' id='LC18076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* fashion.</div><div class='line' id='LC18077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Transforming Requests and Responses</div><div class='line' id='LC18080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Both requests and responses can be transformed using transform functions. By default, Angular</div><div class='line' id='LC18082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* applies these transformations:</div><div class='line' id='LC18083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Request transformations:</div><div class='line' id='LC18085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - If the `data` property of the request configuration object contains an object, serialize it into</div><div class='line' id='LC18087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   JSON format.</div><div class='line' id='LC18088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Response transformations:</div><div class='line' id='LC18090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  - If XSRF prefix is detected, strip it (see Security Considerations section below).</div><div class='line' id='LC18092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  - If JSON response is detected, deserialize it using a JSON parser.</div><div class='line' id='LC18093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* To globally augment or override the default transforms, modify the `$httpProvider.defaults.transformRequest` and</div><div class='line' id='LC18095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `$httpProvider.defaults.transformResponse` properties. These properties are by default an</div><div class='line' id='LC18096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* array of transform functions, which allows you to `push` or `unshift` a new transformation function into the</div><div class='line' id='LC18097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* transformation chain. You can also decide to completely override any default transformations by assigning your</div><div class='line' id='LC18098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* transformation functions to these properties directly without the array wrapper.</div><div class='line' id='LC18099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Similarly, to locally override the request/response transforms, augment the `transformRequest` and/or</div><div class='line' id='LC18101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* `transformResponse` properties of the configuration object passed into `$http`.</div><div class='line' id='LC18102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Caching</div><div class='line' id='LC18105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* To enable caching, set the configuration property `cache` to `true`. When the cache is</div><div class='line' id='LC18107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* enabled, `$http` stores the response from the server in local cache. Next time the</div><div class='line' id='LC18108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* response is served from the cache without sending a request to the server.</div><div class='line' id='LC18109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Note that even if the response is served from cache, delivery of the data is asynchronous in</div><div class='line' id='LC18111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the same way that real requests are.</div><div class='line' id='LC18112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If there are multiple GET requests for the same URL that should be cached using the same</div><div class='line' id='LC18114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cache, but the cache is not populated yet, only one request to the server will be made and</div><div class='line' id='LC18115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the remaining requests will be fulfilled using the response from the first request.</div><div class='line' id='LC18116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Response interceptors</div><div class='line' id='LC18119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Before you start creating interceptors, be sure to understand the</div><div class='line' id='LC18121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$q $q and deferred/promise APIs}.</div><div class='line' id='LC18122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For purposes of global error handling, authentication or any kind of synchronous or</div><div class='line' id='LC18124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* asynchronous preprocessing of received responses, it is desirable to be able to intercept</div><div class='line' id='LC18125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* responses for http requests before they are handed over to the application code that</div><div class='line' id='LC18126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* initiated these requests. The response interceptors leverage the {@link ng.$q</div><div class='line' id='LC18127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.</div><div class='line' id='LC18128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The interceptors are service factories that are registered with the $httpProvider by</div><div class='line' id='LC18130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* adding them to the `$httpProvider.responseInterceptors` array. The factory is called and</div><div class='line' id='LC18131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* injected with dependencies (if specified) and returns the interceptor  — a function that</div><div class='line' id='LC18132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* takes a {@link ng.$q promise} and returns the original or a new promise.</div><div class='line' id='LC18133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   // register the interceptor as a service</div><div class='line' id='LC18136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $provide.factory(&#39;myHttpInterceptor&#39;, function($q, dependency1, dependency2) {</div><div class='line' id='LC18137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     return function(promise) {</div><div class='line' id='LC18138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       return promise.then(function(response) {</div><div class='line' id='LC18139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         // do something on success</div><div class='line' id='LC18140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       }, function(response) {</div><div class='line' id='LC18141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         // do something on error</div><div class='line' id='LC18142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         if (canRecover(response)) {</div><div class='line' id='LC18143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*           return responseOrNewPromise</div><div class='line' id='LC18144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         }</div><div class='line' id='LC18145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*         return $q.reject(response);</div><div class='line' id='LC18146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       });</div><div class='line' id='LC18147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     }</div><div class='line' id='LC18148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   });</div><div class='line' id='LC18149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $httpProvider.responseInterceptors.push(&#39;myHttpInterceptor&#39;);</div><div class='line' id='LC18151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   // register the interceptor via an anonymous factory</div><div class='line' id='LC18154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {</div><div class='line' id='LC18155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     return function(promise) {</div><div class='line' id='LC18156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*       // same as above</div><div class='line' id='LC18157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     }</div><div class='line' id='LC18158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   });</div><div class='line' id='LC18159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* # Security Considerations</div><div class='line' id='LC18163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* When designing web applications, consider security threats from:</div><div class='line' id='LC18165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx</div><div class='line' id='LC18167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   JSON vulnerability}</div><div class='line' id='LC18168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF}</div><div class='line' id='LC18169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Both server and the client must cooperate in order to eliminate these threats. Angular comes</div><div class='line' id='LC18171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* pre-configured with strategies that address these issues, but for this to work backend server</div><div class='line' id='LC18172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cooperation is required.</div><div class='line' id='LC18173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* ## JSON Vulnerability Protection</div><div class='line' id='LC18175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx</div><div class='line' id='LC18177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* JSON vulnerability} allows third party website to turn your JSON resource URL into</div><div class='line' id='LC18178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link http://en.wikipedia.org/wiki/JSONP JSONP} request under some conditions. To</div><div class='line' id='LC18179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* counter this your server can prefix all JSON requests with following string `&quot;)]}&#39;,\n&quot;`.</div><div class='line' id='LC18180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Angular will automatically strip the prefix before processing it as JSON.</div><div class='line' id='LC18181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* For example if your server needs to return:</div><div class='line' id='LC18183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* [&#39;one&#39;,&#39;two&#39;]</div><div class='line' id='LC18185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* which is vulnerable to attack, your server can return:</div><div class='line' id='LC18188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* )]}&#39;,</div><div class='line' id='LC18190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* [&#39;one&#39;,&#39;two&#39;]</div><div class='line' id='LC18191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Angular will strip the prefix, before processing the JSON.</div><div class='line' id='LC18194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* ## Cross Site Request Forgery (XSRF) Protection</div><div class='line' id='LC18197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF} is a technique by which</div><div class='line' id='LC18199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* an unauthorized site can gain your user&#39;s private data. Angular provides a mechanism</div><div class='line' id='LC18200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie</div><div class='line' id='LC18201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* called `XSRF-TOKEN` and sets it as the HTTP header `X-XSRF-TOKEN`. Since only JavaScript that</div><div class='line' id='LC18202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* runs on your domain could read the cookie, your server can be assured that the XHR came from</div><div class='line' id='LC18203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* JavaScript running on your domain.</div><div class='line' id='LC18204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* To take advantage of this, your server needs to set a token in a JavaScript readable session</div><div class='line' id='LC18206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the</div><div class='line' id='LC18207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure</div><div class='line' id='LC18208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* that only JavaScript running on your domain could have sent the request. The token must be</div><div class='line' id='LC18209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* unique for each user and must be verifiable by the server (to prevent the JavaScript from making</div><div class='line' id='LC18210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* up its own tokens). We recommend that the token is a digest of your site&#39;s authentication</div><div class='line' id='LC18211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cookie with a {@link https://en.wikipedia.org/wiki/Salt_(cryptography) salt} for added security.</div><div class='line' id='LC18212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {object} config Object describing the request to be made and how it should be</div><div class='line' id='LC18215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    processed. The object has following properties:</div><div class='line' id='LC18216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **method** – `{string}` – HTTP method (e.g. &#39;GET&#39;, &#39;POST&#39;, etc)</div><div class='line' id='LC18218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.</div><div class='line' id='LC18219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **params** – `{Object.&lt;string|Object&gt;}` – Map of strings or objects which will be turned to</div><div class='line' id='LC18220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      `?key1=value1&amp;key2=value2` after the url. If the value is not a string, it will be JSONified.</div><div class='line' id='LC18221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **data** – `{string|Object}` – Data to be sent as the request message data.</div><div class='line' id='LC18222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **headers** – `{Object}` – Map of strings representing HTTP headers to send to the server.</div><div class='line' id='LC18223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **transformRequest** – `{function(data, headersGetter)|Array.&lt;function(data, headersGetter)&gt;}` –</div><div class='line' id='LC18224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      transform function or an array of such functions. The transform function takes the http</div><div class='line' id='LC18225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      request body and headers and returns its transformed (typically serialized) version.</div><div class='line' id='LC18226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **transformResponse** – `{function(data, headersGetter)|Array.&lt;function(data, headersGetter)&gt;}` –</div><div class='line' id='LC18227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      transform function or an array of such functions. The transform function takes the http</div><div class='line' id='LC18228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      response body and headers and returns its transformed (typically deserialized) version.</div><div class='line' id='LC18229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the</div><div class='line' id='LC18230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      GET request, otherwise if a cache instance built with</div><div class='line' id='LC18231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for</div><div class='line' id='LC18232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      caching.</div><div class='line' id='LC18233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **timeout** – `{number}` – timeout in milliseconds.</div><div class='line' id='LC18234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the</div><div class='line' id='LC18235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5</div><div class='line' id='LC18236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*      requests with credentials} for more information.</div><div class='line' id='LC18237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Returns a {@link ng.$q promise} object with the</div><div class='line' id='LC18239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   standard `then` method and two http specific methods: `success` and `error`. The `then`</div><div class='line' id='LC18240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   method takes two arguments a success and an error callback which will be called with a</div><div class='line' id='LC18241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   response object. The `success` and `error` methods take a single argument - a function that</div><div class='line' id='LC18242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   will be called when the request succeeds or fails respectively. The arguments passed into</div><div class='line' id='LC18243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   these functions are destructured representation of the response object passed into the</div><div class='line' id='LC18244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   `then` method. The response object has these properties:</div><div class='line' id='LC18245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - **data** – `{string|Object}` – The response body transformed with the transform functions.</div><div class='line' id='LC18247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - **status** – `{number}` – HTTP status code of the response.</div><div class='line' id='LC18248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - **headers** – `{function([headerName])}` – Header getter function.</div><div class='line' id='LC18249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   - **config** – `{Object}` – The configuration object that was used to generate the request.</div><div class='line' id='LC18250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @property {Array.&lt;Object&gt;} pendingRequests Array of config objects for currently pending</div><div class='line' id='LC18252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   requests. This is primarily meant to be used for debugging purposes.</div><div class='line' id='LC18253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC18256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC18257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC18258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;FetchCtrl&quot;&gt;</div><div class='line' id='LC18259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;method&quot;&gt;</div><div class='line' id='LC18260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;GET&lt;/option&gt;</div><div class='line' id='LC18261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;JSONP&lt;/option&gt;</div><div class='line' id='LC18262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC18263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-model=&quot;url&quot; size=&quot;80&quot;/&gt;</div><div class='line' id='LC18264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;fetch()&quot;&gt;fetch&lt;/button&gt;&lt;br&gt;</div><div class='line' id='LC18265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;updateModel(&#39;GET&#39;, &#39;http-hello.html&#39;)&quot;&gt;Sample GET&lt;/button&gt;</div><div class='line' id='LC18266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;updateModel(&#39;JSONP&#39;, &#39;http://angularjs.org/greet.php?callback=JSON_CALLBACK&amp;name=Super%20Hero&#39;)&quot;&gt;Sample JSONP&lt;/button&gt;</div><div class='line' id='LC18267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;updateModel(&#39;JSONP&#39;, &#39;http://angularjs.org/doesntexist&amp;callback=JSON_CALLBACK&#39;)&quot;&gt;Invalid JSONP&lt;/button&gt;</div><div class='line' id='LC18268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;http status code: {{status}}&lt;/pre&gt;</div><div class='line' id='LC18269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;http response data: {{data}}&lt;/pre&gt;</div><div class='line' id='LC18270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC18271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC18272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC18273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function FetchCtrl($scope, $http, $templateCache) {</div><div class='line' id='LC18274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.method = &#39;GET&#39;;</div><div class='line' id='LC18275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.url = &#39;http-hello.html&#39;;</div><div class='line' id='LC18276'><br/></div><div class='line' id='LC18277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.fetch = function() {</div><div class='line' id='LC18278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.code = null;</div><div class='line' id='LC18279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.response = null;</div><div class='line' id='LC18280'><br/></div><div class='line' id='LC18281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http({method: $scope.method, url: $scope.url, cache: $templateCache}).</div><div class='line' id='LC18282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success(function(data, status) {</div><div class='line' id='LC18283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.status = status;</div><div class='line' id='LC18284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.data = data;</div><div class='line' id='LC18285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).</div><div class='line' id='LC18286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(function(data, status) {</div><div class='line' id='LC18287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.data = data || &quot;Request failed&quot;;</div><div class='line' id='LC18288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.status = status;</div><div class='line' id='LC18289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18291'><br/></div><div class='line' id='LC18292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.updateModel = function(method, url) {</div><div class='line' id='LC18293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.method = method;</div><div class='line' id='LC18294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.url = url;</div><div class='line' id='LC18295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC18298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;http-hello.html&quot;&gt;</div><div class='line' id='LC18299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello, $http!</div><div class='line' id='LC18300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC18301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC18302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should make an xhr GET request&#39;, function() {</div><div class='line' id='LC18303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;Sample GET&quot;)&#39;).click();</div><div class='line' id='LC18304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</div><div class='line' id='LC18305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;status&#39;)).toBe(&#39;200&#39;);</div><div class='line' id='LC18306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;data&#39;)).toMatch(/Hello, \$http!/);</div><div class='line' id='LC18307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18308'><br/></div><div class='line' id='LC18309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should make a JSONP request to angularjs.org&#39;, function() {</div><div class='line' id='LC18310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;Sample JSONP&quot;)&#39;).click();</div><div class='line' id='LC18311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</div><div class='line' id='LC18312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;status&#39;)).toBe(&#39;200&#39;);</div><div class='line' id='LC18313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;data&#39;)).toMatch(/Super Hero!/);</div><div class='line' id='LC18314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18315'><br/></div><div class='line' id='LC18316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should make JSONP request to invalid URL and invoke the error handler&#39;,</div><div class='line' id='LC18317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() {</div><div class='line' id='LC18318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;Invalid JSONP&quot;)&#39;).click();</div><div class='line' id='LC18319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</div><div class='line' id='LC18320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;status&#39;)).toBe(&#39;0&#39;);</div><div class='line' id='LC18321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;data&#39;)).toBe(&#39;Request failed&#39;);</div><div class='line' id='LC18322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC18324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC18325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18326'>&nbsp;&nbsp;&nbsp;&nbsp;function $http(config) {</div><div class='line' id='LC18327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method = uppercase(config.method);</div><div class='line' id='LC18328'><br/></div><div class='line' id='LC18329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reqTransformFn = config.transformRequest || $config.transformRequest,</div><div class='line' id='LC18330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;respTransformFn = config.transformResponse || $config.transformResponse,</div><div class='line' id='LC18331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defHeaders = $config.headers,</div><div class='line' id='LC18332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reqHeaders = extend({&#39;X-XSRF-TOKEN&#39;: $browser.cookies()[&#39;XSRF-TOKEN&#39;]},</div><div class='line' id='LC18333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defHeaders.common, defHeaders[lowercase(config.method)], config.headers),</div><div class='line' id='LC18334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reqData = transformData(config.data, headersGetter(reqHeaders), reqTransformFn),</div><div class='line' id='LC18335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise;</div><div class='line' id='LC18336'><br/></div><div class='line' id='LC18337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// strip content-type if data is undefined</div><div class='line' id='LC18338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(config.data)) {</div><div class='line' id='LC18339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete reqHeaders[&#39;Content-Type&#39;];</div><div class='line' id='LC18340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18341'><br/></div><div class='line' id='LC18342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// send request</div><div class='line' id='LC18343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = sendReq(config, reqData, reqHeaders);</div><div class='line' id='LC18344'><br/></div><div class='line' id='LC18345'><br/></div><div class='line' id='LC18346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// transform future response</div><div class='line' id='LC18347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = promise.then(transformResponse, transformResponse);</div><div class='line' id='LC18348'><br/></div><div class='line' id='LC18349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// apply interceptors</div><div class='line' id='LC18350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(responseInterceptors, function(interceptor) {</div><div class='line' id='LC18351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = interceptor(promise);</div><div class='line' id='LC18352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18353'><br/></div><div class='line' id='LC18354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.success = function(fn) {</div><div class='line' id='LC18355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(function(response) {</div><div class='line' id='LC18356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(response.data, response.status, response.headers, config);</div><div class='line' id='LC18357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return promise;</div><div class='line' id='LC18359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18360'><br/></div><div class='line' id='LC18361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.error = function(fn) {</div><div class='line' id='LC18362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(null, function(response) {</div><div class='line' id='LC18363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(response.data, response.status, response.headers, config);</div><div class='line' id='LC18364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return promise;</div><div class='line' id='LC18366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18367'><br/></div><div class='line' id='LC18368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return promise;</div><div class='line' id='LC18369'><br/></div><div class='line' id='LC18370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function transformResponse(response) {</div><div class='line' id='LC18371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// make a copy since the response must be cacheable</div><div class='line' id='LC18372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var resp = extend({}, response, {</div><div class='line' id='LC18373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: transformData(response.data, response.headers, respTransformFn)</div><div class='line' id='LC18374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (isSuccess(response.status))</div><div class='line' id='LC18376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? resp</div><div class='line' id='LC18377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: $q.reject(resp);</div><div class='line' id='LC18378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18379'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18380'><br/></div><div class='line' id='LC18381'>&nbsp;&nbsp;&nbsp;&nbsp;$http.pendingRequests = [];</div><div class='line' id='LC18382'><br/></div><div class='line' id='LC18383'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#get</div><div class='line' id='LC18386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `GET` request.</div><div class='line' id='LC18390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request</div><div class='line' id='LC18392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18395'><br/></div><div class='line' id='LC18396'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#delete</div><div class='line' id='LC18399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `DELETE` request.</div><div class='line' id='LC18403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request</div><div class='line' id='LC18405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18408'><br/></div><div class='line' id='LC18409'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#head</div><div class='line' id='LC18412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `HEAD` request.</div><div class='line' id='LC18416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request</div><div class='line' id='LC18418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18421'><br/></div><div class='line' id='LC18422'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#jsonp</div><div class='line' id='LC18425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `JSONP` request.</div><div class='line' id='LC18429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request.</div><div class='line' id='LC18431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                     Should contain `JSON_CALLBACK` string.</div><div class='line' id='LC18432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18435'>&nbsp;&nbsp;&nbsp;&nbsp;createShortMethods(&#39;get&#39;, &#39;delete&#39;, &#39;head&#39;, &#39;jsonp&#39;);</div><div class='line' id='LC18436'><br/></div><div class='line' id='LC18437'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#post</div><div class='line' id='LC18440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `POST` request.</div><div class='line' id='LC18444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request</div><div class='line' id='LC18446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {*} data Request content</div><div class='line' id='LC18447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18450'><br/></div><div class='line' id='LC18451'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc method</div><div class='line' id='LC18453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#put</div><div class='line' id='LC18454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$http</div><div class='line' id='LC18455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Shortcut method to perform `PUT` request.</div><div class='line' id='LC18458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {string} url Relative or absolute URL specifying the destination of the request</div><div class='line' id='LC18460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {*} data Request content</div><div class='line' id='LC18461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object=} config Optional configuration object</div><div class='line' id='LC18462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {HttpPromise} Future object</div><div class='line' id='LC18463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18464'>&nbsp;&nbsp;&nbsp;&nbsp;createShortMethodsWithData(&#39;post&#39;, &#39;put&#39;);</div><div class='line' id='LC18465'><br/></div><div class='line' id='LC18466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc property</div><div class='line' id='LC18468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$http#defaults</div><div class='line' id='LC18469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @propertyOf ng.$http</div><div class='line' id='LC18470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of</div><div class='line' id='LC18473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* default headers as well as request and response transformations.</div><div class='line' id='LC18474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See &quot;Setting HTTP Headers&quot; and &quot;Transforming Requests and Responses&quot; sections above.</div><div class='line' id='LC18476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18477'>&nbsp;&nbsp;&nbsp;&nbsp;$http.defaults = $config;</div><div class='line' id='LC18478'><br/></div><div class='line' id='LC18479'><br/></div><div class='line' id='LC18480'>&nbsp;&nbsp;&nbsp;&nbsp;return $http;</div><div class='line' id='LC18481'><br/></div><div class='line' id='LC18482'><br/></div><div class='line' id='LC18483'>&nbsp;&nbsp;&nbsp;&nbsp;function createShortMethods(names) {</div><div class='line' id='LC18484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(arguments, function(name) {</div><div class='line' id='LC18485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http[name] = function(url, config) {</div><div class='line' id='LC18486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $http(extend(config || {}, {</div><div class='line' id='LC18487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: name,</div><div class='line' id='LC18488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: url</div><div class='line' id='LC18489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC18490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18492'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18493'><br/></div><div class='line' id='LC18494'><br/></div><div class='line' id='LC18495'>&nbsp;&nbsp;&nbsp;&nbsp;function createShortMethodsWithData(name) {</div><div class='line' id='LC18496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(arguments, function(name) {</div><div class='line' id='LC18497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http[name] = function(url, data, config) {</div><div class='line' id='LC18498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $http(extend(config || {}, {</div><div class='line' id='LC18499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method: name,</div><div class='line' id='LC18500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: url,</div><div class='line' id='LC18501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: data</div><div class='line' id='LC18502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC18503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18505'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18506'><br/></div><div class='line' id='LC18507'><br/></div><div class='line' id='LC18508'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Makes the request.</div><div class='line' id='LC18510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* !!! ACCESSES CLOSURE VARS:</div><div class='line' id='LC18512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* $httpBackend, $config, $log, $rootScope, defaultCache, $http.pendingRequests</div><div class='line' id='LC18513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18514'>&nbsp;&nbsp;&nbsp;&nbsp;function sendReq(config, reqData, reqHeaders) {</div><div class='line' id='LC18515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var deferred = $q.defer(),</div><div class='line' id='LC18516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = deferred.promise,</div><div class='line' id='LC18517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache,</div><div class='line' id='LC18518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cachedResp,</div><div class='line' id='LC18519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = buildUrl(config.url, config.params);</div><div class='line' id='LC18520'><br/></div><div class='line' id='LC18521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http.pendingRequests.push(config);</div><div class='line' id='LC18522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(removePendingReq, removePendingReq);</div><div class='line' id='LC18523'><br/></div><div class='line' id='LC18524'><br/></div><div class='line' id='LC18525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (config.cache &amp;&amp; config.method == &#39;GET&#39;) {</div><div class='line' id='LC18526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache = isObject(config.cache) ? config.cache : defaultCache;</div><div class='line' id='LC18527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18528'><br/></div><div class='line' id='LC18529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cache) {</div><div class='line' id='LC18530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cachedResp = cache.get(url);</div><div class='line' id='LC18531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cachedResp) {</div><div class='line' id='LC18532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cachedResp.then) {</div><div class='line' id='LC18533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// cached request has already been sent, but there is no response yet</div><div class='line' id='LC18534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cachedResp.then(removePendingReq, removePendingReq);</div><div class='line' id='LC18535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cachedResp;</div><div class='line' id='LC18536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// serving from cache</div><div class='line' id='LC18538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isArray(cachedResp)) {</div><div class='line' id='LC18539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvePromise(cachedResp[1], cachedResp[0], copy(cachedResp[2]));</div><div class='line' id='LC18540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvePromise(cachedResp, 200, {});</div><div class='line' id='LC18542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// put the promise for the non-transformed response into cache as a placeholder</div><div class='line' id='LC18546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.put(url, promise);</div><div class='line' id='LC18547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18549'><br/></div><div class='line' id='LC18550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if we won&#39;t have the response in cache, send the request to the backend</div><div class='line' id='LC18551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!cachedResp) {</div><div class='line' id='LC18552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,</div><div class='line' id='LC18553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.withCredentials);</div><div class='line' id='LC18554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18555'><br/></div><div class='line' id='LC18556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return promise;</div><div class='line' id='LC18557'><br/></div><div class='line' id='LC18558'><br/></div><div class='line' id='LC18559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Callback registered to $httpBackend():</div><div class='line' id='LC18561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  - caches the response if desired</div><div class='line' id='LC18562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  - resolves the raw $http promise</div><div class='line' id='LC18563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*  - calls $apply</div><div class='line' id='LC18564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function done(status, response, headersString) {</div><div class='line' id='LC18566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cache) {</div><div class='line' id='LC18567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isSuccess(status)) {</div><div class='line' id='LC18568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.put(url, [status, response, parseHeaders(headersString)]);</div><div class='line' id='LC18569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove promise from the cache</div><div class='line' id='LC18571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache.remove(url);</div><div class='line' id='LC18572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18574'><br/></div><div class='line' id='LC18575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvePromise(response, status, headersString);</div><div class='line' id='LC18576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rootScope.$apply();</div><div class='line' id='LC18577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18578'><br/></div><div class='line' id='LC18579'><br/></div><div class='line' id='LC18580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Resolves the raw $http promise.</div><div class='line' id='LC18582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function resolvePromise(response, status, headers) {</div><div class='line' id='LC18584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// normalize internal statuses to 0</div><div class='line' id='LC18585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = Math.max(status, 0);</div><div class='line' id='LC18586'><br/></div><div class='line' id='LC18587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(isSuccess(status) ? deferred.resolve : deferred.reject)({</div><div class='line' id='LC18588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: response,</div><div class='line' id='LC18589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status: status,</div><div class='line' id='LC18590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: headersGetter(headers),</div><div class='line' id='LC18591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config: config</div><div class='line' id='LC18592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18594'><br/></div><div class='line' id='LC18595'><br/></div><div class='line' id='LC18596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function removePendingReq() {</div><div class='line' id='LC18597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var idx = indexOf($http.pendingRequests, config);</div><div class='line' id='LC18598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (idx !== -1) $http.pendingRequests.splice(idx, 1);</div><div class='line' id='LC18599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18600'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18601'><br/></div><div class='line' id='LC18602'><br/></div><div class='line' id='LC18603'>&nbsp;&nbsp;&nbsp;&nbsp;function buildUrl(url, params) {</div><div class='line' id='LC18604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!params) return url;</div><div class='line' id='LC18605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parts = [];</div><div class='line' id='LC18606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEachSorted(params, function(value, key) {</div><div class='line' id='LC18607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null || value == undefined) return;</div><div class='line' id='LC18608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(value)) {</div><div class='line' id='LC18609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = toJson(value);</div><div class='line' id='LC18610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts.push(encodeURIComponent(key) + &#39;=&#39; + encodeURIComponent(value));</div><div class='line' id='LC18612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return url + ((url.indexOf(&#39;?&#39;) == -1) ? &#39;?&#39; : &#39;&amp;&#39;) + parts.join(&#39;&amp;&#39;);</div><div class='line' id='LC18614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18615'><br/></div><div class='line' id='LC18616'><br/></div><div class='line' id='LC18617'>&nbsp;&nbsp;}];</div><div class='line' id='LC18618'>}</div><div class='line' id='LC18619'><br/></div><div class='line' id='LC18620'>var XHR = window.XMLHttpRequest || function() {</div><div class='line' id='LC18621'>&nbsp;&nbsp;try { return new ActiveXObject(&quot;Msxml2.XMLHTTP.6.0&quot;); } catch (e1) {}</div><div class='line' id='LC18622'>&nbsp;&nbsp;try { return new ActiveXObject(&quot;Msxml2.XMLHTTP.3.0&quot;); } catch (e2) {}</div><div class='line' id='LC18623'>&nbsp;&nbsp;try { return new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;); } catch (e3) {}</div><div class='line' id='LC18624'>&nbsp;&nbsp;throw new Error(&quot;This browser does not support XMLHttpRequest.&quot;);</div><div class='line' id='LC18625'>};</div><div class='line' id='LC18626'><br/></div><div class='line' id='LC18627'><br/></div><div class='line' id='LC18628'>/**</div><div class='line' id='LC18629'>&nbsp;* @ngdoc object</div><div class='line' id='LC18630'>&nbsp;* @name ng.$httpBackend</div><div class='line' id='LC18631'>&nbsp;* @requires $browser</div><div class='line' id='LC18632'>&nbsp;* @requires $window</div><div class='line' id='LC18633'>&nbsp;* @requires $document</div><div class='line' id='LC18634'>&nbsp;*</div><div class='line' id='LC18635'>&nbsp;* @description</div><div class='line' id='LC18636'>&nbsp;* HTTP backend used by the {@link ng.$http service} that delegates to</div><div class='line' id='LC18637'>&nbsp;* XMLHttpRequest object or JSONP and deals with browser incompatibilities.</div><div class='line' id='LC18638'>&nbsp;*</div><div class='line' id='LC18639'>&nbsp;* You should never need to use this service directly, instead use the higher-level abstractions:</div><div class='line' id='LC18640'>&nbsp;* {@link ng.$http $http} or {@link ngResource.$resource $resource}.</div><div class='line' id='LC18641'>&nbsp;*</div><div class='line' id='LC18642'>&nbsp;* During testing this implementation is swapped with {@link ngMock.$httpBackend mock</div><div class='line' id='LC18643'>&nbsp;* $httpBackend} which can be trained with responses.</div><div class='line' id='LC18644'>&nbsp;*/</div><div class='line' id='LC18645'>function $HttpBackendProvider() {</div><div class='line' id='LC18646'>&nbsp;&nbsp;this.$get = [&#39;$browser&#39;, &#39;$window&#39;, &#39;$document&#39;, function($browser, $window, $document) {</div><div class='line' id='LC18647'>&nbsp;&nbsp;&nbsp;&nbsp;return createHttpBackend($browser, XHR, $browser.defer, $window.angular.callbacks,</div><div class='line' id='LC18648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$document[0], $window.location.protocol.replace(&#39;:&#39;, &#39;&#39;));</div><div class='line' id='LC18649'>&nbsp;&nbsp;}];</div><div class='line' id='LC18650'>}</div><div class='line' id='LC18651'><br/></div><div class='line' id='LC18652'>function createHttpBackend($browser, XHR, $browserDefer, callbacks, rawDocument, locationProtocol) {</div><div class='line' id='LC18653'>&nbsp;&nbsp;// TODO(vojta): fix the signature</div><div class='line' id='LC18654'>&nbsp;&nbsp;return function(method, url, post, callback, headers, timeout, withCredentials) {</div><div class='line' id='LC18655'>&nbsp;&nbsp;&nbsp;&nbsp;$browser.$$incOutstandingRequestCount();</div><div class='line' id='LC18656'>&nbsp;&nbsp;&nbsp;&nbsp;url = url || $browser.url();</div><div class='line' id='LC18657'><br/></div><div class='line' id='LC18658'>&nbsp;&nbsp;&nbsp;&nbsp;if (lowercase(method) == &#39;jsonp&#39;) {</div><div class='line' id='LC18659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var callbackId = &#39;_&#39; + (callbacks.counter++).toString(36);</div><div class='line' id='LC18660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callbacks[callbackId] = function(data) {</div><div class='line' id='LC18661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callbacks[callbackId].data = data;</div><div class='line' id='LC18662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18663'><br/></div><div class='line' id='LC18664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonpReq(url.replace(&#39;JSON_CALLBACK&#39;, &#39;angular.callbacks.&#39; + callbackId),</div><div class='line' id='LC18665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function() {</div><div class='line' id='LC18666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callbacks[callbackId].data) {</div><div class='line' id='LC18667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeRequest(callback, 200, callbacks[callbackId].data);</div><div class='line' id='LC18668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeRequest(callback, -2);</div><div class='line' id='LC18670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete callbacks[callbackId];</div><div class='line' id='LC18672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18673'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var xhr = new XHR();</div><div class='line' id='LC18675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.open(method, url, true);</div><div class='line' id='LC18676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(headers, function(value, key) {</div><div class='line' id='LC18677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value) xhr.setRequestHeader(key, value);</div><div class='line' id='LC18678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18679'><br/></div><div class='line' id='LC18680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var status;</div><div class='line' id='LC18681'><br/></div><div class='line' id='LC18682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// In IE6 and 7, this might be called synchronously when xhr.send below is called and the</div><div class='line' id='LC18683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// response is in the cache. the promise api will ensure that to the app code the api is</div><div class='line' id='LC18684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// always async</div><div class='line' id='LC18685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.onreadystatechange = function() {</div><div class='line' id='LC18686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (xhr.readyState == 4) {</div><div class='line' id='LC18687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var responseHeaders = xhr.getAllResponseHeaders();</div><div class='line' id='LC18688'><br/></div><div class='line' id='LC18689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(vojta): remove once Firefox 21 gets released.</div><div class='line' id='LC18690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// begin: workaround to overcome Firefox CORS http response headers bug</div><div class='line' id='LC18691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// https://bugzilla.mozilla.org/show_bug.cgi?id=608735</div><div class='line' id='LC18692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Firefox already patched in nightly. Should land in Firefox 21.</div><div class='line' id='LC18693'><br/></div><div class='line' id='LC18694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// CORS &quot;simple response headers&quot; http://www.w3.org/TR/cors/</div><div class='line' id='LC18695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value,</div><div class='line' id='LC18696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;simpleHeaders = [&quot;Cache-Control&quot;, &quot;Content-Language&quot;, &quot;Content-Type&quot;,</div><div class='line' id='LC18697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Expires&quot;, &quot;Last-Modified&quot;, &quot;Pragma&quot;];</div><div class='line' id='LC18698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!responseHeaders) {</div><div class='line' id='LC18699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseHeaders = &quot;&quot;;</div><div class='line' id='LC18700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(simpleHeaders, function (header) {</div><div class='line' id='LC18701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value = xhr.getResponseHeader(header);</div><div class='line' id='LC18702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value) {</div><div class='line' id='LC18703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseHeaders += header + &quot;: &quot; + value + &quot;\n&quot;;</div><div class='line' id='LC18704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// end of the workaround.</div><div class='line' id='LC18708'><br/></div><div class='line' id='LC18709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeRequest(callback, status || xhr.status, xhr.responseText,</div><div class='line' id='LC18710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseHeaders);</div><div class='line' id='LC18711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18713'><br/></div><div class='line' id='LC18714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (withCredentials) {</div><div class='line' id='LC18715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.withCredentials = true;</div><div class='line' id='LC18716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18717'><br/></div><div class='line' id='LC18718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.send(post || &#39;&#39;);</div><div class='line' id='LC18719'><br/></div><div class='line' id='LC18720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (timeout &gt; 0) {</div><div class='line' id='LC18721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browserDefer(function() {</div><div class='line' id='LC18722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = -1;</div><div class='line' id='LC18723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.abort();</div><div class='line' id='LC18724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, timeout);</div><div class='line' id='LC18725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18726'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18727'><br/></div><div class='line' id='LC18728'><br/></div><div class='line' id='LC18729'>&nbsp;&nbsp;&nbsp;&nbsp;function completeRequest(callback, status, response, headersString) {</div><div class='line' id='LC18730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// URL_MATCH is defined in src/service/location.js</div><div class='line' id='LC18731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var protocol = (url.match(URL_MATCH) || [&#39;&#39;, locationProtocol])[1];</div><div class='line' id='LC18732'><br/></div><div class='line' id='LC18733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// fix status code for file protocol (it&#39;s always 0)</div><div class='line' id='LC18734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = (protocol == &#39;file&#39;) ? (response ? 200 : 404) : status;</div><div class='line' id='LC18735'><br/></div><div class='line' id='LC18736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// normalize IE bug (http://bugs.jquery.com/ticket/1450)</div><div class='line' id='LC18737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = status == 1223 ? 204 : status;</div><div class='line' id='LC18738'><br/></div><div class='line' id='LC18739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(status, response, headersString);</div><div class='line' id='LC18740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser.$$completeOutstandingRequest(noop);</div><div class='line' id='LC18741'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18742'>&nbsp;&nbsp;};</div><div class='line' id='LC18743'><br/></div><div class='line' id='LC18744'>&nbsp;&nbsp;function jsonpReq(url, done) {</div><div class='line' id='LC18745'>&nbsp;&nbsp;&nbsp;&nbsp;// we can&#39;t use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:</div><div class='line' id='LC18746'>&nbsp;&nbsp;&nbsp;&nbsp;// - fetches local scripts via XHR and evals them</div><div class='line' id='LC18747'>&nbsp;&nbsp;&nbsp;&nbsp;// - adds and immediately removes script elements from the document</div><div class='line' id='LC18748'>&nbsp;&nbsp;&nbsp;&nbsp;var script = rawDocument.createElement(&#39;script&#39;),</div><div class='line' id='LC18749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doneWrapper = function() {</div><div class='line' id='LC18750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rawDocument.body.removeChild(script);</div><div class='line' id='LC18751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (done) done();</div><div class='line' id='LC18752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18753'><br/></div><div class='line' id='LC18754'>&nbsp;&nbsp;&nbsp;&nbsp;script.type = &#39;text/javascript&#39;;</div><div class='line' id='LC18755'>&nbsp;&nbsp;&nbsp;&nbsp;script.src = url;</div><div class='line' id='LC18756'><br/></div><div class='line' id='LC18757'>&nbsp;&nbsp;&nbsp;&nbsp;if (msie) {</div><div class='line' id='LC18758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script.onreadystatechange = function() {</div><div class='line' id='LC18759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (/loaded|complete/.test(script.readyState)) doneWrapper();</div><div class='line' id='LC18760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18761'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script.onload = script.onerror = doneWrapper;</div><div class='line' id='LC18763'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18764'><br/></div><div class='line' id='LC18765'>&nbsp;&nbsp;&nbsp;&nbsp;rawDocument.body.appendChild(script);</div><div class='line' id='LC18766'>&nbsp;&nbsp;}</div><div class='line' id='LC18767'>}</div><div class='line' id='LC18768'><br/></div><div class='line' id='LC18769'>/**</div><div class='line' id='LC18770'>&nbsp;* @ngdoc object</div><div class='line' id='LC18771'>&nbsp;* @name ng.$locale</div><div class='line' id='LC18772'>&nbsp;*</div><div class='line' id='LC18773'>&nbsp;* @description</div><div class='line' id='LC18774'>&nbsp;* $locale service provides localization rules for various Angular components. As of right now the</div><div class='line' id='LC18775'>&nbsp;* only public api is:</div><div class='line' id='LC18776'>&nbsp;*</div><div class='line' id='LC18777'>&nbsp;* * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)</div><div class='line' id='LC18778'>&nbsp;*/</div><div class='line' id='LC18779'>function $LocaleProvider(){</div><div class='line' id='LC18780'>&nbsp;&nbsp;this.$get = function() {</div><div class='line' id='LC18781'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC18782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: &#39;en-us&#39;,</div><div class='line' id='LC18783'><br/></div><div class='line' id='LC18784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NUMBER_FORMATS: {</div><div class='line' id='LC18785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DECIMAL_SEP: &#39;.&#39;,</div><div class='line' id='LC18786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GROUP_SEP: &#39;,&#39;,</div><div class='line' id='LC18787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PATTERNS: [</div><div class='line' id='LC18788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ // Decimal Pattern</div><div class='line' id='LC18789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minInt: 1,</div><div class='line' id='LC18790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minFrac: 0,</div><div class='line' id='LC18791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxFrac: 3,</div><div class='line' id='LC18792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posPre: &#39;&#39;,</div><div class='line' id='LC18793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posSuf: &#39;&#39;,</div><div class='line' id='LC18794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;negPre: &#39;-&#39;,</div><div class='line' id='LC18795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;negSuf: &#39;&#39;,</div><div class='line' id='LC18796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gSize: 3,</div><div class='line' id='LC18797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lgSize: 3</div><div class='line' id='LC18798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},{ //Currency Pattern</div><div class='line' id='LC18799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minInt: 1,</div><div class='line' id='LC18800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minFrac: 2,</div><div class='line' id='LC18801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxFrac: 2,</div><div class='line' id='LC18802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posPre: &#39;\u00A4&#39;,</div><div class='line' id='LC18803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;posSuf: &#39;&#39;,</div><div class='line' id='LC18804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;negPre: &#39;(\u00A4&#39;,</div><div class='line' id='LC18805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;negSuf: &#39;)&#39;,</div><div class='line' id='LC18806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gSize: 3,</div><div class='line' id='LC18807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lgSize: 3</div><div class='line' id='LC18808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],</div><div class='line' id='LC18810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CURRENCY_SYM: &#39;$&#39;</div><div class='line' id='LC18811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC18812'><br/></div><div class='line' id='LC18813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATETIME_FORMATS: {</div><div class='line' id='LC18814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MONTH: &#39;January,February,March,April,May,June,July,August,September,October,November,December&#39;</div><div class='line' id='LC18815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.split(&#39;,&#39;),</div><div class='line' id='LC18816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SHORTMONTH:  &#39;Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec&#39;.split(&#39;,&#39;),</div><div class='line' id='LC18817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DAY: &#39;Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday&#39;.split(&#39;,&#39;),</div><div class='line' id='LC18818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SHORTDAY: &#39;Sun,Mon,Tue,Wed,Thu,Fri,Sat&#39;.split(&#39;,&#39;),</div><div class='line' id='LC18819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AMPMS: [&#39;AM&#39;,&#39;PM&#39;],</div><div class='line' id='LC18820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;medium: &#39;MMM d, y h:mm:ss a&#39;,</div><div class='line' id='LC18821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;short: &#39;M/d/yy h:mm a&#39;,</div><div class='line' id='LC18822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullDate: &#39;EEEE, MMMM d, y&#39;,</div><div class='line' id='LC18823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;longDate: &#39;MMMM d, y&#39;,</div><div class='line' id='LC18824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mediumDate: &#39;MMM d, y&#39;,</div><div class='line' id='LC18825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shortDate: &#39;M/d/yy&#39;,</div><div class='line' id='LC18826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mediumTime: &#39;h:mm:ss a&#39;,</div><div class='line' id='LC18827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shortTime: &#39;h:mm a&#39;</div><div class='line' id='LC18828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC18829'><br/></div><div class='line' id='LC18830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pluralCat: function(num) {</div><div class='line' id='LC18831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (num === 1) {</div><div class='line' id='LC18832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;one&#39;;</div><div class='line' id='LC18833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;other&#39;;</div><div class='line' id='LC18835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18836'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18837'>&nbsp;&nbsp;};</div><div class='line' id='LC18838'>}</div><div class='line' id='LC18839'><br/></div><div class='line' id='LC18840'>function $TimeoutProvider() {</div><div class='line' id='LC18841'>&nbsp;&nbsp;this.$get = [&#39;$rootScope&#39;, &#39;$browser&#39;, &#39;$q&#39;, &#39;$exceptionHandler&#39;,</div><div class='line' id='LC18842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function($rootScope,   $browser,   $q,   $exceptionHandler) {</div><div class='line' id='LC18843'>&nbsp;&nbsp;&nbsp;&nbsp;var deferreds = {};</div><div class='line' id='LC18844'><br/></div><div class='line' id='LC18845'><br/></div><div class='line' id='LC18846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC18848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$timeout</div><div class='line' id='LC18849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @requires $browser</div><div class='line' id='LC18850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Angular&#39;s wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch</div><div class='line' id='LC18853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* block and delegates any exceptions to</div><div class='line' id='LC18854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* {@link ng.$exceptionHandler $exceptionHandler} service.</div><div class='line' id='LC18855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The return value of registering a timeout function is a promise, which will be resolved when</div><div class='line' id='LC18857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the timeout is reached and the timeout function is executed.</div><div class='line' id='LC18858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* To cancel a timeout request, call `$timeout.cancel(promise)`.</div><div class='line' id='LC18860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to</div><div class='line' id='LC18862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* synchronously flush the queue of deferred functions.</div><div class='line' id='LC18863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {function()} fn A function, whose execution should be delayed.</div><div class='line' id='LC18865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {number=} [delay=0] Delay in milliseconds.</div><div class='line' id='LC18866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise</div><div class='line' id='LC18867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.</div><div class='line' id='LC18868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {Promise} Promise that will be resolved when the timeout is reached. The value this</div><div class='line' id='LC18869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   promise will be resolved with is the return value of the `fn` function.</div><div class='line' id='LC18870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18871'>&nbsp;&nbsp;&nbsp;&nbsp;function timeout(fn, delay, invokeApply) {</div><div class='line' id='LC18872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var deferred = $q.defer(),</div><div class='line' id='LC18873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise = deferred.promise,</div><div class='line' id='LC18874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;skipApply = (isDefined(invokeApply) &amp;&amp; !invokeApply),</div><div class='line' id='LC18875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeoutId, cleanup;</div><div class='line' id='LC18876'><br/></div><div class='line' id='LC18877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeoutId = $browser.defer(function() {</div><div class='line' id='LC18878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC18879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.resolve(fn());</div><div class='line' id='LC18880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC18881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.reject(e);</div><div class='line' id='LC18882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC18883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18884'><br/></div><div class='line' id='LC18885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!skipApply) $rootScope.$apply();</div><div class='line' id='LC18886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, delay);</div><div class='line' id='LC18887'><br/></div><div class='line' id='LC18888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cleanup = function() {</div><div class='line' id='LC18889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete deferreds[promise.$$timeoutId];</div><div class='line' id='LC18890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18891'><br/></div><div class='line' id='LC18892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.$$timeoutId = timeoutId;</div><div class='line' id='LC18893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferreds[timeoutId] = deferred;</div><div class='line' id='LC18894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;promise.then(cleanup, cleanup);</div><div class='line' id='LC18895'><br/></div><div class='line' id='LC18896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return promise;</div><div class='line' id='LC18897'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18898'><br/></div><div class='line' id='LC18899'><br/></div><div class='line' id='LC18900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC18902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @name ng.$timeout#cancel</div><div class='line' id='LC18903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @methodOf ng.$timeout</div><div class='line' id='LC18904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC18906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Cancels a task associated with the `promise`. As a result of this, the promise will be</div><div class='line' id='LC18907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* resolved with a rejection.</div><div class='line' id='LC18908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param {Promise=} promise Promise returned by the `$timeout` function.</div><div class='line' id='LC18910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @returns {boolean} Returns `true` if the task hasn&#39;t executed yet and was successfully</div><div class='line' id='LC18911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   canceled.</div><div class='line' id='LC18912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18913'>&nbsp;&nbsp;&nbsp;&nbsp;timeout.cancel = function(promise) {</div><div class='line' id='LC18914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (promise &amp;&amp; promise.$$timeoutId in deferreds) {</div><div class='line' id='LC18915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferreds[promise.$$timeoutId].reject(&#39;canceled&#39;);</div><div class='line' id='LC18916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $browser.defer.cancel(promise.$$timeoutId);</div><div class='line' id='LC18917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC18919'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18920'><br/></div><div class='line' id='LC18921'>&nbsp;&nbsp;&nbsp;&nbsp;return timeout;</div><div class='line' id='LC18922'>&nbsp;&nbsp;}];</div><div class='line' id='LC18923'>}</div><div class='line' id='LC18924'><br/></div><div class='line' id='LC18925'>/**</div><div class='line' id='LC18926'>&nbsp;* @ngdoc object</div><div class='line' id='LC18927'>&nbsp;* @name ng.$filterProvider</div><div class='line' id='LC18928'>&nbsp;* @description</div><div class='line' id='LC18929'>&nbsp;*</div><div class='line' id='LC18930'>&nbsp;* Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To</div><div class='line' id='LC18931'>&nbsp;* achieve this a filter definition consists of a factory function which is annotated with dependencies and is</div><div class='line' id='LC18932'>&nbsp;* responsible for creating a filter function.</div><div class='line' id='LC18933'>&nbsp;*</div><div class='line' id='LC18934'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18935'>&nbsp;*   // Filter registration</div><div class='line' id='LC18936'>&nbsp;*   function MyModule($provide, $filterProvider) {</div><div class='line' id='LC18937'>&nbsp;*     // create a service to demonstrate injection (not always needed)</div><div class='line' id='LC18938'>&nbsp;*     $provide.value(&#39;greet&#39;, function(name){</div><div class='line' id='LC18939'>&nbsp;*       return &#39;Hello &#39; + name + &#39;!&#39;;</div><div class='line' id='LC18940'>&nbsp;*     });</div><div class='line' id='LC18941'>&nbsp;*</div><div class='line' id='LC18942'>&nbsp;*     // register a filter factory which uses the</div><div class='line' id='LC18943'>&nbsp;*     // greet service to demonstrate DI.</div><div class='line' id='LC18944'>&nbsp;*     $filterProvider.register(&#39;greet&#39;, function(greet){</div><div class='line' id='LC18945'>&nbsp;*       // return the filter function which uses the greet service</div><div class='line' id='LC18946'>&nbsp;*       // to generate salutation</div><div class='line' id='LC18947'>&nbsp;*       return function(text) {</div><div class='line' id='LC18948'>&nbsp;*         // filters need to be forgiving so check input validity</div><div class='line' id='LC18949'>&nbsp;*         return text &amp;&amp; greet(text) || text;</div><div class='line' id='LC18950'>&nbsp;*       };</div><div class='line' id='LC18951'>&nbsp;*     });</div><div class='line' id='LC18952'>&nbsp;*   }</div><div class='line' id='LC18953'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18954'>&nbsp;*</div><div class='line' id='LC18955'>&nbsp;* The filter function is registered with the `$injector` under the filter name suffixe with `Filter`.</div><div class='line' id='LC18956'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC18957'>&nbsp;*   it(&#39;should be the same instance&#39;, inject(</div><div class='line' id='LC18958'>&nbsp;*     function($filterProvider) {</div><div class='line' id='LC18959'>&nbsp;*       $filterProvider.register(&#39;reverse&#39;, function(){</div><div class='line' id='LC18960'>&nbsp;*         return ...;</div><div class='line' id='LC18961'>&nbsp;*       });</div><div class='line' id='LC18962'>&nbsp;*     },</div><div class='line' id='LC18963'>&nbsp;*     function($filter, reverseFilter) {</div><div class='line' id='LC18964'>&nbsp;*       expect($filter(&#39;reverse&#39;)).toBe(reverseFilter);</div><div class='line' id='LC18965'>&nbsp;*     });</div><div class='line' id='LC18966'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC18967'>&nbsp;*</div><div class='line' id='LC18968'>&nbsp;*</div><div class='line' id='LC18969'>&nbsp;* For more information about how angular filters work, and how to create your own filters, see</div><div class='line' id='LC18970'>&nbsp;* {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer</div><div class='line' id='LC18971'>&nbsp;* Guide.</div><div class='line' id='LC18972'>&nbsp;*/</div><div class='line' id='LC18973'>/**</div><div class='line' id='LC18974'>&nbsp;* @ngdoc method</div><div class='line' id='LC18975'>&nbsp;* @name ng.$filterProvider#register</div><div class='line' id='LC18976'>&nbsp;* @methodOf ng.$filterProvider</div><div class='line' id='LC18977'>&nbsp;* @description</div><div class='line' id='LC18978'>&nbsp;* Register filter factory function.</div><div class='line' id='LC18979'>&nbsp;*</div><div class='line' id='LC18980'>&nbsp;* @param {String} name Name of the filter.</div><div class='line' id='LC18981'>&nbsp;* @param {function} fn The filter factory function which is injectable.</div><div class='line' id='LC18982'>&nbsp;*/</div><div class='line' id='LC18983'><br/></div><div class='line' id='LC18984'><br/></div><div class='line' id='LC18985'>/**</div><div class='line' id='LC18986'>&nbsp;* @ngdoc function</div><div class='line' id='LC18987'>&nbsp;* @name ng.$filter</div><div class='line' id='LC18988'>&nbsp;* @function</div><div class='line' id='LC18989'>&nbsp;* @description</div><div class='line' id='LC18990'>&nbsp;* Filters are used for formatting data displayed to the user.</div><div class='line' id='LC18991'>&nbsp;*</div><div class='line' id='LC18992'>&nbsp;* The general syntax in templates is as follows:</div><div class='line' id='LC18993'>&nbsp;*</div><div class='line' id='LC18994'>&nbsp;*         {{ expression [| filter_name[:parameter_value] ... ] }}</div><div class='line' id='LC18995'>&nbsp;*</div><div class='line' id='LC18996'>&nbsp;* @param {String} name Name of the filter function to retrieve</div><div class='line' id='LC18997'>&nbsp;* @return {Function} the filter function</div><div class='line' id='LC18998'>&nbsp;*/</div><div class='line' id='LC18999'>$FilterProvider.$inject = [&#39;$provide&#39;];</div><div class='line' id='LC19000'>function $FilterProvider($provide) {</div><div class='line' id='LC19001'>&nbsp;&nbsp;var suffix = &#39;Filter&#39;;</div><div class='line' id='LC19002'><br/></div><div class='line' id='LC19003'>&nbsp;&nbsp;function register(name, factory) {</div><div class='line' id='LC19004'>&nbsp;&nbsp;&nbsp;&nbsp;return $provide.factory(name + suffix, factory);</div><div class='line' id='LC19005'>&nbsp;&nbsp;}</div><div class='line' id='LC19006'>&nbsp;&nbsp;this.register = register;</div><div class='line' id='LC19007'><br/></div><div class='line' id='LC19008'>&nbsp;&nbsp;this.$get = [&#39;$injector&#39;, function($injector) {</div><div class='line' id='LC19009'>&nbsp;&nbsp;&nbsp;&nbsp;return function(name) {</div><div class='line' id='LC19010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $injector.get(name + suffix);</div><div class='line' id='LC19011'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19012'>&nbsp;&nbsp;}];</div><div class='line' id='LC19013'><br/></div><div class='line' id='LC19014'>&nbsp;&nbsp;////////////////////////////////////////</div><div class='line' id='LC19015'><br/></div><div class='line' id='LC19016'>&nbsp;&nbsp;register(&#39;currency&#39;, currencyFilter);</div><div class='line' id='LC19017'>&nbsp;&nbsp;register(&#39;date&#39;, dateFilter);</div><div class='line' id='LC19018'>&nbsp;&nbsp;register(&#39;filter&#39;, filterFilter);</div><div class='line' id='LC19019'>&nbsp;&nbsp;register(&#39;json&#39;, jsonFilter);</div><div class='line' id='LC19020'>&nbsp;&nbsp;register(&#39;limitTo&#39;, limitToFilter);</div><div class='line' id='LC19021'>&nbsp;&nbsp;register(&#39;lowercase&#39;, lowercaseFilter);</div><div class='line' id='LC19022'>&nbsp;&nbsp;register(&#39;number&#39;, numberFilter);</div><div class='line' id='LC19023'>&nbsp;&nbsp;register(&#39;orderBy&#39;, orderByFilter);</div><div class='line' id='LC19024'>&nbsp;&nbsp;register(&#39;uppercase&#39;, uppercaseFilter);</div><div class='line' id='LC19025'>}</div><div class='line' id='LC19026'><br/></div><div class='line' id='LC19027'>/**</div><div class='line' id='LC19028'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19029'>&nbsp;* @name ng.filter:filter</div><div class='line' id='LC19030'>&nbsp;* @function</div><div class='line' id='LC19031'>&nbsp;*</div><div class='line' id='LC19032'>&nbsp;* @description</div><div class='line' id='LC19033'>&nbsp;* Selects a subset of items from `array` and returns it as a new array.</div><div class='line' id='LC19034'>&nbsp;*</div><div class='line' id='LC19035'>&nbsp;* Note: This function is used to augment the `Array` type in Angular expressions. See</div><div class='line' id='LC19036'>&nbsp;* {@link ng.$filter} for more information about Angular arrays.</div><div class='line' id='LC19037'>&nbsp;*</div><div class='line' id='LC19038'>&nbsp;* @param {Array} array The source array.</div><div class='line' id='LC19039'>&nbsp;* @param {string|Object|function()} expression The predicate to be used for selecting items from</div><div class='line' id='LC19040'>&nbsp;*   `array`.</div><div class='line' id='LC19041'>&nbsp;*</div><div class='line' id='LC19042'>&nbsp;*   Can be one of:</div><div class='line' id='LC19043'>&nbsp;*</div><div class='line' id='LC19044'>&nbsp;*   - `string`: Predicate that results in a substring match using the value of `expression`</div><div class='line' id='LC19045'>&nbsp;*     string. All strings or objects with string properties in `array` that contain this string</div><div class='line' id='LC19046'>&nbsp;*     will be returned. The predicate can be negated by prefixing the string with `!`.</div><div class='line' id='LC19047'>&nbsp;*</div><div class='line' id='LC19048'>&nbsp;*   - `Object`: A pattern object can be used to filter specific properties on objects contained</div><div class='line' id='LC19049'>&nbsp;*     by `array`. For example `{name:&quot;M&quot;, phone:&quot;1&quot;}` predicate will return an array of items</div><div class='line' id='LC19050'>&nbsp;*     which have property `name` containing &quot;M&quot; and property `phone` containing &quot;1&quot;. A special</div><div class='line' id='LC19051'>&nbsp;*     property name `$` can be used (as in `{$:&quot;text&quot;}`) to accept a match against any</div><div class='line' id='LC19052'>&nbsp;*     property of the object. That&#39;s equivalent to the simple substring match with a `string`</div><div class='line' id='LC19053'>&nbsp;*     as described above.</div><div class='line' id='LC19054'>&nbsp;*</div><div class='line' id='LC19055'>&nbsp;*   - `function`: A predicate function can be used to write arbitrary filters. The function is</div><div class='line' id='LC19056'>&nbsp;*     called for each element of `array`. The final result is an array of those elements that</div><div class='line' id='LC19057'>&nbsp;*     the predicate returned true for.</div><div class='line' id='LC19058'>&nbsp;*</div><div class='line' id='LC19059'>&nbsp;* @example</div><div class='line' id='LC19060'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-init=&quot;friends = [{name:&#39;John&#39;, phone:&#39;555-1276&#39;},</div><div class='line' id='LC19063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Mary&#39;, phone:&#39;800-BIG-MARY&#39;},</div><div class='line' id='LC19064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Mike&#39;, phone:&#39;555-4321&#39;},</div><div class='line' id='LC19065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Adam&#39;, phone:&#39;555-5678&#39;},</div><div class='line' id='LC19066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Julie&#39;, phone:&#39;555-8765&#39;}]&quot;&gt;&lt;/div&gt;</div><div class='line' id='LC19067'><br/></div><div class='line' id='LC19068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Search: &lt;input ng-model=&quot;searchText&quot;&gt;</div><div class='line' id='LC19069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table id=&quot;searchTextResults&quot;&gt;</div><div class='line' id='LC19070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Phone&lt;/th&gt;&lt;/tr&gt;</div><div class='line' id='LC19071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr ng-repeat=&quot;friend in friends | filter:searchText&quot;&gt;</div><div class='line' id='LC19072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.name}}&lt;/td&gt;</div><div class='line' id='LC19073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.phone}}&lt;/td&gt;</div><div class='line' id='LC19074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;</div><div class='line' id='LC19075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/table&gt;</div><div class='line' id='LC19076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr&gt;</div><div class='line' id='LC19077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any: &lt;input ng-model=&quot;search.$&quot;&gt; &lt;br&gt;</div><div class='line' id='LC19078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name only &lt;input ng-model=&quot;search.name&quot;&gt;&lt;br&gt;</div><div class='line' id='LC19079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone only &lt;input ng-model=&quot;search.phone&quot;&gt;&lt;br&gt;</div><div class='line' id='LC19080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table id=&quot;searchObjResults&quot;&gt;</div><div class='line' id='LC19081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Phone&lt;/th&gt;&lt;/tr&gt;</div><div class='line' id='LC19082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr ng-repeat=&quot;friend in friends | filter:search&quot;&gt;</div><div class='line' id='LC19083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.name}}&lt;/td&gt;</div><div class='line' id='LC19084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.phone}}&lt;/td&gt;</div><div class='line' id='LC19085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;</div><div class='line' id='LC19086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/table&gt;</div><div class='line' id='LC19087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should search across all fields when filtering with a string&#39;, function() {</div><div class='line' id='LC19090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;searchText&#39;).enter(&#39;m&#39;);</div><div class='line' id='LC19091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;#searchTextResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;Mary&#39;, &#39;Mike&#39;, &#39;Adam&#39;]);</div><div class='line' id='LC19093'><br/></div><div class='line' id='LC19094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;searchText&#39;).enter(&#39;76&#39;);</div><div class='line' id='LC19095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;#searchTextResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;John&#39;, &#39;Julie&#39;]);</div><div class='line' id='LC19097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19098'><br/></div><div class='line' id='LC19099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should search in specific fields when filtering with a predicate object&#39;, function() {</div><div class='line' id='LC19100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;search.$&#39;).enter(&#39;i&#39;);</div><div class='line' id='LC19101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;#searchObjResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;Mary&#39;, &#39;Mike&#39;, &#39;Julie&#39;]);</div><div class='line' id='LC19103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19105'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19106'>&nbsp;*/</div><div class='line' id='LC19107'>function filterFilter() {</div><div class='line' id='LC19108'>&nbsp;&nbsp;return function(array, expression) {</div><div class='line' id='LC19109'>&nbsp;&nbsp;&nbsp;&nbsp;if (!isArray(array)) return array;</div><div class='line' id='LC19110'>&nbsp;&nbsp;&nbsp;&nbsp;var predicates = [];</div><div class='line' id='LC19111'>&nbsp;&nbsp;&nbsp;&nbsp;predicates.check = function(value) {</div><div class='line' id='LC19112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var j = 0; j &lt; predicates.length; j++) {</div><div class='line' id='LC19113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!predicates[j](value)) {</div><div class='line' id='LC19114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC19115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC19118'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19119'>&nbsp;&nbsp;&nbsp;&nbsp;var search = function(obj, text){</div><div class='line' id='LC19120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (text.charAt(0) === &#39;!&#39;) {</div><div class='line' id='LC19121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !search(obj, text.substr(1));</div><div class='line' id='LC19122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (typeof obj) {</div><div class='line' id='LC19124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;boolean&quot;:</div><div class='line' id='LC19125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;number&quot;:</div><div class='line' id='LC19126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;string&quot;:</div><div class='line' id='LC19127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (&#39;&#39; + obj).toLowerCase().indexOf(text) &gt; -1;</div><div class='line' id='LC19128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;object&quot;:</div><div class='line' id='LC19129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var objKey in obj) {</div><div class='line' id='LC19130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (objKey.charAt(0) !== &#39;$&#39; &amp;&amp; search(obj[objKey], text)) {</div><div class='line' id='LC19131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC19132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC19135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;array&quot;:</div><div class='line' id='LC19136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; obj.length; i++) {</div><div class='line' id='LC19137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (search(obj[i], text)) {</div><div class='line' id='LC19138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC19139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC19142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC19143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC19144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19145'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19146'>&nbsp;&nbsp;&nbsp;&nbsp;switch (typeof expression) {</div><div class='line' id='LC19147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;boolean&quot;:</div><div class='line' id='LC19148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;number&quot;:</div><div class='line' id='LC19149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;string&quot;:</div><div class='line' id='LC19150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expression = {$:expression};</div><div class='line' id='LC19151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &quot;object&quot;:</div><div class='line' id='LC19152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in expression) {</div><div class='line' id='LC19153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key == &#39;$&#39;) {</div><div class='line' id='LC19154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(function() {</div><div class='line' id='LC19155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var text = (&#39;&#39;+expression[key]).toLowerCase();</div><div class='line' id='LC19156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!text) return;</div><div class='line' id='LC19157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicates.push(function(value) {</div><div class='line' id='LC19158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return search(value, text);</div><div class='line' id='LC19159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC19161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(function() {</div><div class='line' id='LC19163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path = key;</div><div class='line' id='LC19164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var text = (&#39;&#39;+expression[key]).toLowerCase();</div><div class='line' id='LC19165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!text) return;</div><div class='line' id='LC19166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicates.push(function(value) {</div><div class='line' id='LC19167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return search(getter(value, path), text);</div><div class='line' id='LC19168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC19170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC19173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;function&#39;:</div><div class='line' id='LC19174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicates.push(expression);</div><div class='line' id='LC19175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC19176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC19177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array;</div><div class='line' id='LC19178'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19179'>&nbsp;&nbsp;&nbsp;&nbsp;var filtered = [];</div><div class='line' id='LC19180'>&nbsp;&nbsp;&nbsp;&nbsp;for ( var j = 0; j &lt; array.length; j++) {</div><div class='line' id='LC19181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value = array[j];</div><div class='line' id='LC19182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (predicates.check(value)) {</div><div class='line' id='LC19183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filtered.push(value);</div><div class='line' id='LC19184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19185'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19186'>&nbsp;&nbsp;&nbsp;&nbsp;return filtered;</div><div class='line' id='LC19187'>&nbsp;&nbsp;}</div><div class='line' id='LC19188'>}</div><div class='line' id='LC19189'><br/></div><div class='line' id='LC19190'>/**</div><div class='line' id='LC19191'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19192'>&nbsp;* @name ng.filter:currency</div><div class='line' id='LC19193'>&nbsp;* @function</div><div class='line' id='LC19194'>&nbsp;*</div><div class='line' id='LC19195'>&nbsp;* @description</div><div class='line' id='LC19196'>&nbsp;* Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default</div><div class='line' id='LC19197'>&nbsp;* symbol for current locale is used.</div><div class='line' id='LC19198'>&nbsp;*</div><div class='line' id='LC19199'>&nbsp;* @param {number} amount Input to filter.</div><div class='line' id='LC19200'>&nbsp;* @param {string=} symbol Currency symbol or identifier to be displayed.</div><div class='line' id='LC19201'>&nbsp;* @returns {string} Formatted number.</div><div class='line' id='LC19202'>&nbsp;*</div><div class='line' id='LC19203'>&nbsp;*</div><div class='line' id='LC19204'>&nbsp;* @example</div><div class='line' id='LC19205'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC19208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC19209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.amount = 1234.56;</div><div class='line' id='LC19210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC19212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC19213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;number&quot; ng-model=&quot;amount&quot;&gt; &lt;br&gt;</div><div class='line' id='LC19214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default currency symbol ($): {{amount | currency}}&lt;br&gt;</div><div class='line' id='LC19215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;custom currency identifier (USD$): {{amount | currency:&quot;USD$&quot;}}</div><div class='line' id='LC19216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC19217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should init with 1234.56&#39;, function() {</div><div class='line' id='LC19220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;amount | currency&#39;)).toBe(&#39;$1,234.56&#39;);</div><div class='line' id='LC19221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;amount | currency:&quot;USD$&quot;&#39;)).toBe(&#39;USD$1,234.56&#39;);</div><div class='line' id='LC19222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should update&#39;, function() {</div><div class='line' id='LC19224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;amount&#39;).enter(&#39;-1234&#39;);</div><div class='line' id='LC19225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;amount | currency&#39;)).toBe(&#39;($1,234.00)&#39;);</div><div class='line' id='LC19226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;amount | currency:&quot;USD$&quot;&#39;)).toBe(&#39;(USD$1,234.00)&#39;);</div><div class='line' id='LC19227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19229'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19230'>&nbsp;*/</div><div class='line' id='LC19231'>currencyFilter.$inject = [&#39;$locale&#39;];</div><div class='line' id='LC19232'>function currencyFilter($locale) {</div><div class='line' id='LC19233'>&nbsp;&nbsp;var formats = $locale.NUMBER_FORMATS;</div><div class='line' id='LC19234'>&nbsp;&nbsp;return function(amount, currencySymbol){</div><div class='line' id='LC19235'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;</div><div class='line' id='LC19236'>&nbsp;&nbsp;&nbsp;&nbsp;return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).</div><div class='line' id='LC19237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replace(/\u00A4/g, currencySymbol);</div><div class='line' id='LC19238'>&nbsp;&nbsp;};</div><div class='line' id='LC19239'>}</div><div class='line' id='LC19240'><br/></div><div class='line' id='LC19241'>/**</div><div class='line' id='LC19242'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19243'>&nbsp;* @name ng.filter:number</div><div class='line' id='LC19244'>&nbsp;* @function</div><div class='line' id='LC19245'>&nbsp;*</div><div class='line' id='LC19246'>&nbsp;* @description</div><div class='line' id='LC19247'>&nbsp;* Formats a number as text.</div><div class='line' id='LC19248'>&nbsp;*</div><div class='line' id='LC19249'>&nbsp;* If the input is not a number an empty string is returned.</div><div class='line' id='LC19250'>&nbsp;*</div><div class='line' id='LC19251'>&nbsp;* @param {number|string} number Number to format.</div><div class='line' id='LC19252'>&nbsp;* @param {(number|string)=} [fractionSize=2] Number of decimal places to round the number to.</div><div class='line' id='LC19253'>&nbsp;* @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.</div><div class='line' id='LC19254'>&nbsp;*</div><div class='line' id='LC19255'>&nbsp;* @example</div><div class='line' id='LC19256'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC19259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC19260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.val = 1234.56789;</div><div class='line' id='LC19261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC19263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC19264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enter number: &lt;input ng-model=&#39;val&#39;&gt;&lt;br&gt;</div><div class='line' id='LC19265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Default formatting: {{val | number}}&lt;br&gt;</div><div class='line' id='LC19266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No fractions: {{val | number:0}}&lt;br&gt;</div><div class='line' id='LC19267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Negative number: {{-val | number:4}}</div><div class='line' id='LC19268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC19269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should format numbers&#39;, function() {</div><div class='line' id='LC19272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;val | number&#39;)).toBe(&#39;1,234.568&#39;);</div><div class='line' id='LC19273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;val | number:0&#39;)).toBe(&#39;1,235&#39;);</div><div class='line' id='LC19274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;-val | number:4&#39;)).toBe(&#39;-1,234.5679&#39;);</div><div class='line' id='LC19275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19276'><br/></div><div class='line' id='LC19277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should update&#39;, function() {</div><div class='line' id='LC19278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;val&#39;).enter(&#39;3374.333&#39;);</div><div class='line' id='LC19279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;val | number&#39;)).toBe(&#39;3,374.333&#39;);</div><div class='line' id='LC19280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;val | number:0&#39;)).toBe(&#39;3,374&#39;);</div><div class='line' id='LC19281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;-val | number:4&#39;)).toBe(&#39;-3,374.3330&#39;);</div><div class='line' id='LC19282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19284'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19285'>&nbsp;*/</div><div class='line' id='LC19286'><br/></div><div class='line' id='LC19287'><br/></div><div class='line' id='LC19288'>numberFilter.$inject = [&#39;$locale&#39;];</div><div class='line' id='LC19289'>function numberFilter($locale) {</div><div class='line' id='LC19290'>&nbsp;&nbsp;var formats = $locale.NUMBER_FORMATS;</div><div class='line' id='LC19291'>&nbsp;&nbsp;return function(number, fractionSize) {</div><div class='line' id='LC19292'>&nbsp;&nbsp;&nbsp;&nbsp;return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,</div><div class='line' id='LC19293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fractionSize);</div><div class='line' id='LC19294'>&nbsp;&nbsp;};</div><div class='line' id='LC19295'>}</div><div class='line' id='LC19296'><br/></div><div class='line' id='LC19297'>var DECIMAL_SEP = &#39;.&#39;;</div><div class='line' id='LC19298'>function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {</div><div class='line' id='LC19299'>&nbsp;&nbsp;if (isNaN(number) || !isFinite(number)) return &#39;&#39;;</div><div class='line' id='LC19300'><br/></div><div class='line' id='LC19301'>&nbsp;&nbsp;var isNegative = number &lt; 0;</div><div class='line' id='LC19302'>&nbsp;&nbsp;number = Math.abs(number);</div><div class='line' id='LC19303'>&nbsp;&nbsp;var numStr = number + &#39;&#39;,</div><div class='line' id='LC19304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText = &#39;&#39;,</div><div class='line' id='LC19305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts = [];</div><div class='line' id='LC19306'><br/></div><div class='line' id='LC19307'>&nbsp;&nbsp;var hasExponent = false;</div><div class='line' id='LC19308'>&nbsp;&nbsp;if (numStr.indexOf(&#39;e&#39;) !== -1) {</div><div class='line' id='LC19309'>&nbsp;&nbsp;&nbsp;&nbsp;var match = numStr.match(/([\d\.]+)e(-?)(\d+)/);</div><div class='line' id='LC19310'>&nbsp;&nbsp;&nbsp;&nbsp;if (match &amp;&amp; match[2] == &#39;-&#39; &amp;&amp; match[3] &gt; fractionSize + 1) {</div><div class='line' id='LC19311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;numStr = &#39;0&#39;;</div><div class='line' id='LC19312'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText = numStr;</div><div class='line' id='LC19314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasExponent = true;</div><div class='line' id='LC19315'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19316'>&nbsp;&nbsp;}</div><div class='line' id='LC19317'><br/></div><div class='line' id='LC19318'>&nbsp;&nbsp;if (!hasExponent) {</div><div class='line' id='LC19319'>&nbsp;&nbsp;&nbsp;&nbsp;var fractionLen = (numStr.split(DECIMAL_SEP)[1] || &#39;&#39;).length;</div><div class='line' id='LC19320'><br/></div><div class='line' id='LC19321'>&nbsp;&nbsp;&nbsp;&nbsp;// determine fractionSize if it is not specified</div><div class='line' id='LC19322'>&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(fractionSize)) {</div><div class='line' id='LC19323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);</div><div class='line' id='LC19324'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19325'><br/></div><div class='line' id='LC19326'>&nbsp;&nbsp;&nbsp;&nbsp;var pow = Math.pow(10, fractionSize);</div><div class='line' id='LC19327'>&nbsp;&nbsp;&nbsp;&nbsp;number = Math.round(number * pow) / pow;</div><div class='line' id='LC19328'>&nbsp;&nbsp;&nbsp;&nbsp;var fraction = (&#39;&#39; + number).split(DECIMAL_SEP);</div><div class='line' id='LC19329'>&nbsp;&nbsp;&nbsp;&nbsp;var whole = fraction[0];</div><div class='line' id='LC19330'>&nbsp;&nbsp;&nbsp;&nbsp;fraction = fraction[1] || &#39;&#39;;</div><div class='line' id='LC19331'><br/></div><div class='line' id='LC19332'>&nbsp;&nbsp;&nbsp;&nbsp;var pos = 0,</div><div class='line' id='LC19333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lgroup = pattern.lgSize,</div><div class='line' id='LC19334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group = pattern.gSize;</div><div class='line' id='LC19335'><br/></div><div class='line' id='LC19336'>&nbsp;&nbsp;&nbsp;&nbsp;if (whole.length &gt;= (lgroup + group)) {</div><div class='line' id='LC19337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos = whole.length - lgroup;</div><div class='line' id='LC19338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; pos; i++) {</div><div class='line' id='LC19339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((pos - i)%group === 0 &amp;&amp; i !== 0) {</div><div class='line' id='LC19340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText += groupSep;</div><div class='line' id='LC19341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText += whole.charAt(i);</div><div class='line' id='LC19343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19344'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19345'><br/></div><div class='line' id='LC19346'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = pos; i &lt; whole.length; i++) {</div><div class='line' id='LC19347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((whole.length - i)%lgroup === 0 &amp;&amp; i !== 0) {</div><div class='line' id='LC19348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText += groupSep;</div><div class='line' id='LC19349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formatedText += whole.charAt(i);</div><div class='line' id='LC19351'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19352'><br/></div><div class='line' id='LC19353'>&nbsp;&nbsp;&nbsp;&nbsp;// format fraction part.</div><div class='line' id='LC19354'>&nbsp;&nbsp;&nbsp;&nbsp;while(fraction.length &lt; fractionSize) {</div><div class='line' id='LC19355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fraction += &#39;0&#39;;</div><div class='line' id='LC19356'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19357'><br/></div><div class='line' id='LC19358'>&nbsp;&nbsp;&nbsp;&nbsp;if (fractionSize &amp;&amp; fractionSize !== &quot;0&quot;) formatedText += decimalSep + fraction.substr(0, fractionSize);</div><div class='line' id='LC19359'>&nbsp;&nbsp;}</div><div class='line' id='LC19360'><br/></div><div class='line' id='LC19361'>&nbsp;&nbsp;parts.push(isNegative ? pattern.negPre : pattern.posPre);</div><div class='line' id='LC19362'>&nbsp;&nbsp;parts.push(formatedText);</div><div class='line' id='LC19363'>&nbsp;&nbsp;parts.push(isNegative ? pattern.negSuf : pattern.posSuf);</div><div class='line' id='LC19364'>&nbsp;&nbsp;return parts.join(&#39;&#39;);</div><div class='line' id='LC19365'>}</div><div class='line' id='LC19366'><br/></div><div class='line' id='LC19367'>function padNumber(num, digits, trim) {</div><div class='line' id='LC19368'>&nbsp;&nbsp;var neg = &#39;&#39;;</div><div class='line' id='LC19369'>&nbsp;&nbsp;if (num &lt; 0) {</div><div class='line' id='LC19370'>&nbsp;&nbsp;&nbsp;&nbsp;neg =  &#39;-&#39;;</div><div class='line' id='LC19371'>&nbsp;&nbsp;&nbsp;&nbsp;num = -num;</div><div class='line' id='LC19372'>&nbsp;&nbsp;}</div><div class='line' id='LC19373'>&nbsp;&nbsp;num = &#39;&#39; + num;</div><div class='line' id='LC19374'>&nbsp;&nbsp;while(num.length &lt; digits) num = &#39;0&#39; + num;</div><div class='line' id='LC19375'>&nbsp;&nbsp;if (trim)</div><div class='line' id='LC19376'>&nbsp;&nbsp;&nbsp;&nbsp;num = num.substr(num.length - digits);</div><div class='line' id='LC19377'>&nbsp;&nbsp;return neg + num;</div><div class='line' id='LC19378'>}</div><div class='line' id='LC19379'><br/></div><div class='line' id='LC19380'><br/></div><div class='line' id='LC19381'>function dateGetter(name, size, offset, trim) {</div><div class='line' id='LC19382'>&nbsp;&nbsp;offset = offset || 0;</div><div class='line' id='LC19383'>&nbsp;&nbsp;return function(date) {</div><div class='line' id='LC19384'>&nbsp;&nbsp;&nbsp;&nbsp;var value = date[&#39;get&#39; + name]();</div><div class='line' id='LC19385'>&nbsp;&nbsp;&nbsp;&nbsp;if (offset &gt; 0 || value &gt; -offset)</div><div class='line' id='LC19386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value += offset;</div><div class='line' id='LC19387'>&nbsp;&nbsp;&nbsp;&nbsp;if (value === 0 &amp;&amp; offset == -12 ) value = 12;</div><div class='line' id='LC19388'>&nbsp;&nbsp;&nbsp;&nbsp;return padNumber(value, size, trim);</div><div class='line' id='LC19389'>&nbsp;&nbsp;};</div><div class='line' id='LC19390'>}</div><div class='line' id='LC19391'><br/></div><div class='line' id='LC19392'>function dateStrGetter(name, shortForm) {</div><div class='line' id='LC19393'>&nbsp;&nbsp;return function(date, formats) {</div><div class='line' id='LC19394'>&nbsp;&nbsp;&nbsp;&nbsp;var value = date[&#39;get&#39; + name]();</div><div class='line' id='LC19395'>&nbsp;&nbsp;&nbsp;&nbsp;var get = uppercase(shortForm ? (&#39;SHORT&#39; + name) : name);</div><div class='line' id='LC19396'><br/></div><div class='line' id='LC19397'>&nbsp;&nbsp;&nbsp;&nbsp;return formats[get][value];</div><div class='line' id='LC19398'>&nbsp;&nbsp;};</div><div class='line' id='LC19399'>}</div><div class='line' id='LC19400'><br/></div><div class='line' id='LC19401'>function timeZoneGetter(date) {</div><div class='line' id='LC19402'>&nbsp;&nbsp;var zone = -1 * date.getTimezoneOffset();</div><div class='line' id='LC19403'>&nbsp;&nbsp;var paddedZone = (zone &gt;= 0) ? &quot;+&quot; : &quot;&quot;;</div><div class='line' id='LC19404'><br/></div><div class='line' id='LC19405'>&nbsp;&nbsp;paddedZone += padNumber(Math[zone &gt; 0 ? &#39;floor&#39; : &#39;ceil&#39;](zone / 60), 2) +</div><div class='line' id='LC19406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;padNumber(Math.abs(zone % 60), 2);</div><div class='line' id='LC19407'><br/></div><div class='line' id='LC19408'>&nbsp;&nbsp;return paddedZone;</div><div class='line' id='LC19409'>}</div><div class='line' id='LC19410'><br/></div><div class='line' id='LC19411'>function ampmGetter(date, formats) {</div><div class='line' id='LC19412'>&nbsp;&nbsp;return date.getHours() &lt; 12 ? formats.AMPMS[0] : formats.AMPMS[1];</div><div class='line' id='LC19413'>}</div><div class='line' id='LC19414'><br/></div><div class='line' id='LC19415'>var DATE_FORMATS = {</div><div class='line' id='LC19416'>&nbsp;&nbsp;yyyy: dateGetter(&#39;FullYear&#39;, 4),</div><div class='line' id='LC19417'>&nbsp;&nbsp;&nbsp;&nbsp;yy: dateGetter(&#39;FullYear&#39;, 2, 0, true),</div><div class='line' id='LC19418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y: dateGetter(&#39;FullYear&#39;, 1),</div><div class='line' id='LC19419'>&nbsp;&nbsp;MMMM: dateStrGetter(&#39;Month&#39;),</div><div class='line' id='LC19420'>&nbsp;&nbsp;&nbsp;MMM: dateStrGetter(&#39;Month&#39;, true),</div><div class='line' id='LC19421'>&nbsp;&nbsp;&nbsp;&nbsp;MM: dateGetter(&#39;Month&#39;, 2, 1),</div><div class='line' id='LC19422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M: dateGetter(&#39;Month&#39;, 1, 1),</div><div class='line' id='LC19423'>&nbsp;&nbsp;&nbsp;&nbsp;dd: dateGetter(&#39;Date&#39;, 2),</div><div class='line' id='LC19424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d: dateGetter(&#39;Date&#39;, 1),</div><div class='line' id='LC19425'>&nbsp;&nbsp;&nbsp;&nbsp;HH: dateGetter(&#39;Hours&#39;, 2),</div><div class='line' id='LC19426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;H: dateGetter(&#39;Hours&#39;, 1),</div><div class='line' id='LC19427'>&nbsp;&nbsp;&nbsp;&nbsp;hh: dateGetter(&#39;Hours&#39;, 2, -12),</div><div class='line' id='LC19428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h: dateGetter(&#39;Hours&#39;, 1, -12),</div><div class='line' id='LC19429'>&nbsp;&nbsp;&nbsp;&nbsp;mm: dateGetter(&#39;Minutes&#39;, 2),</div><div class='line' id='LC19430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m: dateGetter(&#39;Minutes&#39;, 1),</div><div class='line' id='LC19431'>&nbsp;&nbsp;&nbsp;&nbsp;ss: dateGetter(&#39;Seconds&#39;, 2),</div><div class='line' id='LC19432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s: dateGetter(&#39;Seconds&#39;, 1),</div><div class='line' id='LC19433'>&nbsp;&nbsp;EEEE: dateStrGetter(&#39;Day&#39;),</div><div class='line' id='LC19434'>&nbsp;&nbsp;&nbsp;EEE: dateStrGetter(&#39;Day&#39;, true),</div><div class='line' id='LC19435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: ampmGetter,</div><div class='line' id='LC19436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Z: timeZoneGetter</div><div class='line' id='LC19437'>};</div><div class='line' id='LC19438'><br/></div><div class='line' id='LC19439'>var DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE&#39;]+)|(?:&#39;(?:[^&#39;]|&#39;&#39;)*&#39;)|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,</div><div class='line' id='LC19440'>&nbsp;&nbsp;&nbsp;&nbsp;NUMBER_STRING = /^\d+$/;</div><div class='line' id='LC19441'><br/></div><div class='line' id='LC19442'>/**</div><div class='line' id='LC19443'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19444'>&nbsp;* @name ng.filter:date</div><div class='line' id='LC19445'>&nbsp;* @function</div><div class='line' id='LC19446'>&nbsp;*</div><div class='line' id='LC19447'>&nbsp;* @description</div><div class='line' id='LC19448'>&nbsp;*   Formats `date` to a string based on the requested `format`.</div><div class='line' id='LC19449'>&nbsp;*</div><div class='line' id='LC19450'>&nbsp;*   `format` string can be composed of the following elements:</div><div class='line' id='LC19451'>&nbsp;*</div><div class='line' id='LC19452'>&nbsp;*   * `&#39;yyyy&#39;`: 4 digit representation of year (e.g. AD 1 =&gt; 0001, AD 2010 =&gt; 2010)</div><div class='line' id='LC19453'>&nbsp;*   * `&#39;yy&#39;`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 =&gt; 01, AD 2010 =&gt; 10)</div><div class='line' id='LC19454'>&nbsp;*   * `&#39;y&#39;`: 1 digit representation of year, e.g. (AD 1 =&gt; 1, AD 199 =&gt; 199)</div><div class='line' id='LC19455'>&nbsp;*   * `&#39;MMMM&#39;`: Month in year (January-December)</div><div class='line' id='LC19456'>&nbsp;*   * `&#39;MMM&#39;`: Month in year (Jan-Dec)</div><div class='line' id='LC19457'>&nbsp;*   * `&#39;MM&#39;`: Month in year, padded (01-12)</div><div class='line' id='LC19458'>&nbsp;*   * `&#39;M&#39;`: Month in year (1-12)</div><div class='line' id='LC19459'>&nbsp;*   * `&#39;dd&#39;`: Day in month, padded (01-31)</div><div class='line' id='LC19460'>&nbsp;*   * `&#39;d&#39;`: Day in month (1-31)</div><div class='line' id='LC19461'>&nbsp;*   * `&#39;EEEE&#39;`: Day in Week,(Sunday-Saturday)</div><div class='line' id='LC19462'>&nbsp;*   * `&#39;EEE&#39;`: Day in Week, (Sun-Sat)</div><div class='line' id='LC19463'>&nbsp;*   * `&#39;HH&#39;`: Hour in day, padded (00-23)</div><div class='line' id='LC19464'>&nbsp;*   * `&#39;H&#39;`: Hour in day (0-23)</div><div class='line' id='LC19465'>&nbsp;*   * `&#39;hh&#39;`: Hour in am/pm, padded (01-12)</div><div class='line' id='LC19466'>&nbsp;*   * `&#39;h&#39;`: Hour in am/pm, (1-12)</div><div class='line' id='LC19467'>&nbsp;*   * `&#39;mm&#39;`: Minute in hour, padded (00-59)</div><div class='line' id='LC19468'>&nbsp;*   * `&#39;m&#39;`: Minute in hour (0-59)</div><div class='line' id='LC19469'>&nbsp;*   * `&#39;ss&#39;`: Second in minute, padded (00-59)</div><div class='line' id='LC19470'>&nbsp;*   * `&#39;s&#39;`: Second in minute (0-59)</div><div class='line' id='LC19471'>&nbsp;*   * `&#39;a&#39;`: am/pm marker</div><div class='line' id='LC19472'>&nbsp;*   * `&#39;Z&#39;`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)</div><div class='line' id='LC19473'>&nbsp;*</div><div class='line' id='LC19474'>&nbsp;*   `format` string can also be one of the following predefined</div><div class='line' id='LC19475'>&nbsp;*   {@link guide/i18n localizable formats}:</div><div class='line' id='LC19476'>&nbsp;*</div><div class='line' id='LC19477'>&nbsp;*   * `&#39;medium&#39;`: equivalent to `&#39;MMM d, y h:mm:ss a&#39;` for en_US locale</div><div class='line' id='LC19478'>&nbsp;*     (e.g. Sep 3, 2010 12:05:08 pm)</div><div class='line' id='LC19479'>&nbsp;*   * `&#39;short&#39;`: equivalent to `&#39;M/d/yy h:mm a&#39;` for en_US  locale (e.g. 9/3/10 12:05 pm)</div><div class='line' id='LC19480'>&nbsp;*   * `&#39;fullDate&#39;`: equivalent to `&#39;EEEE, MMMM d,y&#39;` for en_US  locale</div><div class='line' id='LC19481'>&nbsp;*     (e.g. Friday, September 3, 2010)</div><div class='line' id='LC19482'>&nbsp;*   * `&#39;longDate&#39;`: equivalent to `&#39;MMMM d, y&#39;` for en_US  locale (e.g. September 3, 2010</div><div class='line' id='LC19483'>&nbsp;*   * `&#39;mediumDate&#39;`: equivalent to `&#39;MMM d, y&#39;` for en_US  locale (e.g. Sep 3, 2010)</div><div class='line' id='LC19484'>&nbsp;*   * `&#39;shortDate&#39;`: equivalent to `&#39;M/d/yy&#39;` for en_US locale (e.g. 9/3/10)</div><div class='line' id='LC19485'>&nbsp;*   * `&#39;mediumTime&#39;`: equivalent to `&#39;h:mm:ss a&#39;` for en_US locale (e.g. 12:05:08 pm)</div><div class='line' id='LC19486'>&nbsp;*   * `&#39;shortTime&#39;`: equivalent to `&#39;h:mm a&#39;` for en_US locale (e.g. 12:05 pm)</div><div class='line' id='LC19487'>&nbsp;*</div><div class='line' id='LC19488'>&nbsp;*   `format` string can contain literal values. These need to be quoted with single quotes (e.g.</div><div class='line' id='LC19489'>&nbsp;*   `&quot;h &#39;in the morning&#39;&quot;`). In order to output single quote, use two single quotes in a sequence</div><div class='line' id='LC19490'>&nbsp;*   (e.g. `&quot;h o&#39;&#39;clock&quot;`).</div><div class='line' id='LC19491'>&nbsp;*</div><div class='line' id='LC19492'>&nbsp;* @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or</div><div class='line' id='LC19493'>&nbsp;*    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.SSSZ and its</div><div class='line' id='LC19494'>&nbsp;*    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is</div><div class='line' id='LC19495'>&nbsp;*    specified in the string input, the time is considered to be in the local timezone.</div><div class='line' id='LC19496'>&nbsp;* @param {string=} format Formatting rules (see Description). If not specified,</div><div class='line' id='LC19497'>&nbsp;*    `mediumDate` is used.</div><div class='line' id='LC19498'>&nbsp;* @returns {string} Formatted string or the input if input is not recognized as date/millis.</div><div class='line' id='LC19499'>&nbsp;*</div><div class='line' id='LC19500'>&nbsp;* @example</div><div class='line' id='LC19501'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;medium&#39;}}&lt;/span&gt;:</div><div class='line' id='LC19504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{1288323623006 | date:&#39;medium&#39;}}&lt;br&gt;</div><div class='line' id='LC19505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;}}&lt;/span&gt;:</div><div class='line' id='LC19506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;}}&lt;br&gt;</div><div class='line' id='LC19507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;MM/dd/yyyy @ h:mma&#39;}}&lt;/span&gt;:</div><div class='line' id='LC19508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{&#39;1288323623006&#39; | date:&#39;MM/dd/yyyy @ h:mma&#39;}}&lt;br&gt;</div><div class='line' id='LC19509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should format date&#39;, function() {</div><div class='line' id='LC19512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&quot;1288323623006 | date:&#39;medium&#39;&quot;)).</div><div class='line' id='LC19513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);</div><div class='line' id='LC19514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&quot;1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;&quot;)).</div><div class='line' id='LC19515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/2010\-10\-2\d \d{2}:\d{2}:\d{2} (\-|\+)?\d{4}/);</div><div class='line' id='LC19516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&quot;&#39;1288323623006&#39; | date:&#39;MM/dd/yyyy @ h:mma&#39;&quot;)).</div><div class='line' id='LC19517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);</div><div class='line' id='LC19518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19520'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19521'>&nbsp;*/</div><div class='line' id='LC19522'>dateFilter.$inject = [&#39;$locale&#39;];</div><div class='line' id='LC19523'>function dateFilter($locale) {</div><div class='line' id='LC19524'><br/></div><div class='line' id='LC19525'><br/></div><div class='line' id='LC19526'>&nbsp;&nbsp;var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;</div><div class='line' id='LC19527'>&nbsp;&nbsp;function jsonStringToDate(string){</div><div class='line' id='LC19528'>&nbsp;&nbsp;&nbsp;&nbsp;var match;</div><div class='line' id='LC19529'>&nbsp;&nbsp;&nbsp;&nbsp;if (match = string.match(R_ISO8601_STR)) {</div><div class='line' id='LC19530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var date = new Date(0),</div><div class='line' id='LC19531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tzHour = 0,</div><div class='line' id='LC19532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tzMin  = 0;</div><div class='line' id='LC19533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match[9]) {</div><div class='line' id='LC19534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tzHour = int(match[9] + match[10]);</div><div class='line' id='LC19535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tzMin = int(match[9] + match[11]);</div><div class='line' id='LC19536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date.setUTCFullYear(int(match[1]), int(match[2]) - 1, int(match[3]));</div><div class='line' id='LC19538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date.setUTCHours(int(match[4]||0) - tzHour, int(match[5]||0) - tzMin, int(match[6]||0), int(match[7]||0));</div><div class='line' id='LC19539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return date;</div><div class='line' id='LC19540'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19541'>&nbsp;&nbsp;&nbsp;&nbsp;return string;</div><div class='line' id='LC19542'>&nbsp;&nbsp;}</div><div class='line' id='LC19543'><br/></div><div class='line' id='LC19544'><br/></div><div class='line' id='LC19545'>&nbsp;&nbsp;return function(date, format) {</div><div class='line' id='LC19546'>&nbsp;&nbsp;&nbsp;&nbsp;var text = &#39;&#39;,</div><div class='line' id='LC19547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts = [],</div><div class='line' id='LC19548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn, match;</div><div class='line' id='LC19549'><br/></div><div class='line' id='LC19550'>&nbsp;&nbsp;&nbsp;&nbsp;format = format || &#39;mediumDate&#39;;</div><div class='line' id='LC19551'>&nbsp;&nbsp;&nbsp;&nbsp;format = $locale.DATETIME_FORMATS[format] || format;</div><div class='line' id='LC19552'>&nbsp;&nbsp;&nbsp;&nbsp;if (isString(date)) {</div><div class='line' id='LC19553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (NUMBER_STRING.test(date)) {</div><div class='line' id='LC19554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date = int(date);</div><div class='line' id='LC19555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date = jsonStringToDate(date);</div><div class='line' id='LC19557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19558'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19559'><br/></div><div class='line' id='LC19560'>&nbsp;&nbsp;&nbsp;&nbsp;if (isNumber(date)) {</div><div class='line' id='LC19561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date = new Date(date);</div><div class='line' id='LC19562'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19563'><br/></div><div class='line' id='LC19564'>&nbsp;&nbsp;&nbsp;&nbsp;if (!isDate(date)) {</div><div class='line' id='LC19565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return date;</div><div class='line' id='LC19566'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19567'><br/></div><div class='line' id='LC19568'>&nbsp;&nbsp;&nbsp;&nbsp;while(format) {</div><div class='line' id='LC19569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = DATE_FORMATS_SPLIT.exec(format);</div><div class='line' id='LC19570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC19571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts = concat(parts, match, 1);</div><div class='line' id='LC19572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format = parts.pop();</div><div class='line' id='LC19573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts.push(format);</div><div class='line' id='LC19575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format = null;</div><div class='line' id='LC19576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19577'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19578'><br/></div><div class='line' id='LC19579'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(parts, function(value){</div><div class='line' id='LC19580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn = DATE_FORMATS[value];</div><div class='line' id='LC19581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text += fn ? fn(date, $locale.DATETIME_FORMATS)</div><div class='line' id='LC19582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: value.replace(/(^&#39;|&#39;$)/g, &#39;&#39;).replace(/&#39;&#39;/g, &quot;&#39;&quot;);</div><div class='line' id='LC19583'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19584'><br/></div><div class='line' id='LC19585'>&nbsp;&nbsp;&nbsp;&nbsp;return text;</div><div class='line' id='LC19586'>&nbsp;&nbsp;};</div><div class='line' id='LC19587'>}</div><div class='line' id='LC19588'><br/></div><div class='line' id='LC19589'><br/></div><div class='line' id='LC19590'>/**</div><div class='line' id='LC19591'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19592'>&nbsp;* @name ng.filter:json</div><div class='line' id='LC19593'>&nbsp;* @function</div><div class='line' id='LC19594'>&nbsp;*</div><div class='line' id='LC19595'>&nbsp;* @description</div><div class='line' id='LC19596'>&nbsp;*   Allows you to convert a JavaScript object into JSON string.</div><div class='line' id='LC19597'>&nbsp;*</div><div class='line' id='LC19598'>&nbsp;*   This filter is mostly useful for debugging. When using the double curly {{value}} notation</div><div class='line' id='LC19599'>&nbsp;*   the binding is automatically converted to JSON.</div><div class='line' id='LC19600'>&nbsp;*</div><div class='line' id='LC19601'>&nbsp;* @param {*} object Any JavaScript object (including arrays and primitive types) to filter.</div><div class='line' id='LC19602'>&nbsp;* @returns {string} JSON string.</div><div class='line' id='LC19603'>&nbsp;*</div><div class='line' id='LC19604'>&nbsp;*</div><div class='line' id='LC19605'>&nbsp;* @example:</div><div class='line' id='LC19606'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;{{ {&#39;name&#39;:&#39;value&#39;} | json }}&lt;/pre&gt;</div><div class='line' id='LC19609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should jsonify filtered objects&#39;, function() {</div><div class='line' id='LC19612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&quot;{&#39;name&#39;:&#39;value&#39;}&quot;)).toMatch(/\{\n  &quot;name&quot;: ?&quot;value&quot;\n}/);</div><div class='line' id='LC19613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19615'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19616'>&nbsp;*</div><div class='line' id='LC19617'>&nbsp;*/</div><div class='line' id='LC19618'>function jsonFilter() {</div><div class='line' id='LC19619'>&nbsp;&nbsp;return function(object) {</div><div class='line' id='LC19620'>&nbsp;&nbsp;&nbsp;&nbsp;return toJson(object, true);</div><div class='line' id='LC19621'>&nbsp;&nbsp;};</div><div class='line' id='LC19622'>}</div><div class='line' id='LC19623'><br/></div><div class='line' id='LC19624'><br/></div><div class='line' id='LC19625'>/**</div><div class='line' id='LC19626'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19627'>&nbsp;* @name ng.filter:lowercase</div><div class='line' id='LC19628'>&nbsp;* @function</div><div class='line' id='LC19629'>&nbsp;* @description</div><div class='line' id='LC19630'>&nbsp;* Converts string to lowercase.</div><div class='line' id='LC19631'>&nbsp;* @see angular.lowercase</div><div class='line' id='LC19632'>&nbsp;*/</div><div class='line' id='LC19633'>var lowercaseFilter = valueFn(lowercase);</div><div class='line' id='LC19634'><br/></div><div class='line' id='LC19635'><br/></div><div class='line' id='LC19636'>/**</div><div class='line' id='LC19637'>&nbsp;* @ngdoc filter</div><div class='line' id='LC19638'>&nbsp;* @name ng.filter:uppercase</div><div class='line' id='LC19639'>&nbsp;* @function</div><div class='line' id='LC19640'>&nbsp;* @description</div><div class='line' id='LC19641'>&nbsp;* Converts string to uppercase.</div><div class='line' id='LC19642'>&nbsp;* @see angular.uppercase</div><div class='line' id='LC19643'>&nbsp;*/</div><div class='line' id='LC19644'>var uppercaseFilter = valueFn(uppercase);</div><div class='line' id='LC19645'><br/></div><div class='line' id='LC19646'>/**</div><div class='line' id='LC19647'>&nbsp;* @ngdoc function</div><div class='line' id='LC19648'>&nbsp;* @name ng.filter:limitTo</div><div class='line' id='LC19649'>&nbsp;* @function</div><div class='line' id='LC19650'>&nbsp;*</div><div class='line' id='LC19651'>&nbsp;* @description</div><div class='line' id='LC19652'>&nbsp;* Creates a new array containing only a specified number of elements in an array. The elements</div><div class='line' id='LC19653'>&nbsp;* are taken from either the beginning or the end of the source array, as specified by the</div><div class='line' id='LC19654'>&nbsp;* value and sign (positive or negative) of `limit`.</div><div class='line' id='LC19655'>&nbsp;*</div><div class='line' id='LC19656'>&nbsp;* Note: This function is used to augment the `Array` type in Angular expressions. See</div><div class='line' id='LC19657'>&nbsp;* {@link ng.$filter} for more information about Angular arrays.</div><div class='line' id='LC19658'>&nbsp;*</div><div class='line' id='LC19659'>&nbsp;* @param {Array} array Source array to be limited.</div><div class='line' id='LC19660'>&nbsp;* @param {string|Number} limit The length of the returned array. If the `limit` number is</div><div class='line' id='LC19661'>&nbsp;*     positive, `limit` number of items from the beginning of the source array are copied.</div><div class='line' id='LC19662'>&nbsp;*     If the number is negative, `limit` number  of items from the end of the source array are</div><div class='line' id='LC19663'>&nbsp;*     copied. The `limit` will be trimmed if it exceeds `array.length`</div><div class='line' id='LC19664'>&nbsp;* @returns {Array} A new sub-array of length `limit` or less if input array had less than `limit`</div><div class='line' id='LC19665'>&nbsp;*     elements.</div><div class='line' id='LC19666'>&nbsp;*</div><div class='line' id='LC19667'>&nbsp;* @example</div><div class='line' id='LC19668'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC19671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC19672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.numbers = [1,2,3,4,5,6,7,8,9];</div><div class='line' id='LC19673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.limit = 3;</div><div class='line' id='LC19674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC19676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC19677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limit {{numbers}} to: &lt;input type=&quot;integer&quot; ng-model=&quot;limit&quot;&gt;</div><div class='line' id='LC19678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;Output: {{ numbers | limitTo:limit }}&lt;/p&gt;</div><div class='line' id='LC19679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC19680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should limit the numer array to first three items&#39;, function() {</div><div class='line' id='LC19683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live input[ng-model=limit]&#39;).val()).toBe(&#39;3&#39;);</div><div class='line' id='LC19684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[1,2,3]&#39;);</div><div class='line' id='LC19685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19686'><br/></div><div class='line' id='LC19687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should update the output when -3 is entered&#39;, function() {</div><div class='line' id='LC19688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;limit&#39;).enter(-3);</div><div class='line' id='LC19689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[7,8,9]&#39;);</div><div class='line' id='LC19690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19691'><br/></div><div class='line' id='LC19692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should not exceed the maximum size of input array&#39;, function() {</div><div class='line' id='LC19693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;limit&#39;).enter(100);</div><div class='line' id='LC19694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[1,2,3,4,5,6,7,8,9]&#39;);</div><div class='line' id='LC19695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19697'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19698'>&nbsp;*/</div><div class='line' id='LC19699'>function limitToFilter(){</div><div class='line' id='LC19700'>&nbsp;&nbsp;return function(array, limit) {</div><div class='line' id='LC19701'>&nbsp;&nbsp;&nbsp;&nbsp;if (!(array instanceof Array)) return array;</div><div class='line' id='LC19702'>&nbsp;&nbsp;&nbsp;&nbsp;limit = int(limit);</div><div class='line' id='LC19703'>&nbsp;&nbsp;&nbsp;&nbsp;var out = [],</div><div class='line' id='LC19704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i, n;</div><div class='line' id='LC19705'><br/></div><div class='line' id='LC19706'>&nbsp;&nbsp;&nbsp;&nbsp;// check that array is iterable</div><div class='line' id='LC19707'>&nbsp;&nbsp;&nbsp;&nbsp;if (!array || !(array instanceof Array))</div><div class='line' id='LC19708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return out;</div><div class='line' id='LC19709'><br/></div><div class='line' id='LC19710'>&nbsp;&nbsp;&nbsp;&nbsp;// if abs(limit) exceeds maximum length, trim it</div><div class='line' id='LC19711'>&nbsp;&nbsp;&nbsp;&nbsp;if (limit &gt; array.length)</div><div class='line' id='LC19712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit = array.length;</div><div class='line' id='LC19713'>&nbsp;&nbsp;&nbsp;&nbsp;else if (limit &lt; -array.length)</div><div class='line' id='LC19714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit = -array.length;</div><div class='line' id='LC19715'><br/></div><div class='line' id='LC19716'>&nbsp;&nbsp;&nbsp;&nbsp;if (limit &gt; 0) {</div><div class='line' id='LC19717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;</div><div class='line' id='LC19718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = limit;</div><div class='line' id='LC19719'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = array.length + limit;</div><div class='line' id='LC19721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = array.length;</div><div class='line' id='LC19722'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19723'><br/></div><div class='line' id='LC19724'>&nbsp;&nbsp;&nbsp;&nbsp;for (; i&lt;n; i++) {</div><div class='line' id='LC19725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.push(array[i]);</div><div class='line' id='LC19726'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19727'><br/></div><div class='line' id='LC19728'>&nbsp;&nbsp;&nbsp;&nbsp;return out;</div><div class='line' id='LC19729'>&nbsp;&nbsp;}</div><div class='line' id='LC19730'>}</div><div class='line' id='LC19731'><br/></div><div class='line' id='LC19732'>/**</div><div class='line' id='LC19733'>&nbsp;* @ngdoc function</div><div class='line' id='LC19734'>&nbsp;* @name ng.filter:orderBy</div><div class='line' id='LC19735'>&nbsp;* @function</div><div class='line' id='LC19736'>&nbsp;*</div><div class='line' id='LC19737'>&nbsp;* @description</div><div class='line' id='LC19738'>&nbsp;* Orders a specified `array` by the `expression` predicate.</div><div class='line' id='LC19739'>&nbsp;*</div><div class='line' id='LC19740'>&nbsp;* Note: this function is used to augment the `Array` type in Angular expressions. See</div><div class='line' id='LC19741'>&nbsp;* {@link ng.$filter} for more informaton about Angular arrays.</div><div class='line' id='LC19742'>&nbsp;*</div><div class='line' id='LC19743'>&nbsp;* @param {Array} array The array to sort.</div><div class='line' id='LC19744'>&nbsp;* @param {function(*)|string|Array.&lt;(function(*)|string)&gt;} expression A predicate to be</div><div class='line' id='LC19745'>&nbsp;*    used by the comparator to determine the order of elements.</div><div class='line' id='LC19746'>&nbsp;*</div><div class='line' id='LC19747'>&nbsp;*    Can be one of:</div><div class='line' id='LC19748'>&nbsp;*</div><div class='line' id='LC19749'>&nbsp;*    - `function`: Getter function. The result of this function will be sorted using the</div><div class='line' id='LC19750'>&nbsp;*      `&lt;`, `=`, `&gt;` operator.</div><div class='line' id='LC19751'>&nbsp;*    - `string`: An Angular expression which evaluates to an object to order by, such as &#39;name&#39;</div><div class='line' id='LC19752'>&nbsp;*      to sort by a property called &#39;name&#39;. Optionally prefixed with `+` or `-` to control</div><div class='line' id='LC19753'>&nbsp;*      ascending or descending sort order (for example, +name or -name).</div><div class='line' id='LC19754'>&nbsp;*    - `Array`: An array of function or string predicates. The first predicate in the array</div><div class='line' id='LC19755'>&nbsp;*      is used for sorting, but when two items are equivalent, the next predicate is used.</div><div class='line' id='LC19756'>&nbsp;*</div><div class='line' id='LC19757'>&nbsp;* @param {boolean=} reverse Reverse the order the array.</div><div class='line' id='LC19758'>&nbsp;* @returns {Array} Sorted copy of the source array.</div><div class='line' id='LC19759'>&nbsp;*</div><div class='line' id='LC19760'>&nbsp;* @example</div><div class='line' id='LC19761'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC19764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC19765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.friends =</div><div class='line' id='LC19766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{name:&#39;John&#39;, phone:&#39;555-1212&#39;, age:10},</div><div class='line' id='LC19767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Mary&#39;, phone:&#39;555-9876&#39;, age:19},</div><div class='line' id='LC19768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Mike&#39;, phone:&#39;555-4321&#39;, age:21},</div><div class='line' id='LC19769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Adam&#39;, phone:&#39;555-5678&#39;, age:35},</div><div class='line' id='LC19770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;Julie&#39;, phone:&#39;555-8765&#39;, age:29}]</div><div class='line' id='LC19771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.predicate = &#39;-age&#39;;</div><div class='line' id='LC19772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC19774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC19775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;Sorting predicate = {{predicate}}; reverse = {{reverse}}&lt;/pre&gt;</div><div class='line' id='LC19776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;</div><div class='line' id='LC19777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ &lt;a href=&quot;&quot; ng-click=&quot;predicate=&#39;&#39;&quot;&gt;unsorted&lt;/a&gt; ]</div><div class='line' id='LC19778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table class=&quot;friend&quot;&gt;</div><div class='line' id='LC19779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;</div><div class='line' id='LC19780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;name&#39;; reverse=false&quot;&gt;Name&lt;/a&gt;</div><div class='line' id='LC19781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&lt;a href ng-click=&quot;predicate = &#39;-name&#39;; reverse=false&quot;&gt;^&lt;/a&gt;)&lt;/th&gt;</div><div class='line' id='LC19782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;phone&#39;; reverse=!reverse&quot;&gt;Phone Number&lt;/a&gt;&lt;/th&gt;</div><div class='line' id='LC19783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;age&#39;; reverse=!reverse&quot;&gt;Age&lt;/a&gt;&lt;/th&gt;</div><div class='line' id='LC19784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;</div><div class='line' id='LC19785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr ng-repeat=&quot;friend in friends | orderBy:predicate:reverse&quot;&gt;</div><div class='line' id='LC19786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.name}}&lt;/td&gt;</div><div class='line' id='LC19787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.phone}}&lt;/td&gt;</div><div class='line' id='LC19788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;{{friend.age}}&lt;/td&gt;</div><div class='line' id='LC19789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;</div><div class='line' id='LC19790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/table&gt;</div><div class='line' id='LC19791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC19792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be reverse ordered by aged&#39;, function() {</div><div class='line' id='LC19795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;predicate&#39;)).toBe(&#39;-age&#39;);</div><div class='line' id='LC19796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.age&#39;)).</div><div class='line' id='LC19797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;35&#39;, &#39;29&#39;, &#39;21&#39;, &#39;19&#39;, &#39;10&#39;]);</div><div class='line' id='LC19798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;Adam&#39;, &#39;Julie&#39;, &#39;Mike&#39;, &#39;Mary&#39;, &#39;John&#39;]);</div><div class='line' id='LC19800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19801'><br/></div><div class='line' id='LC19802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should reorder the table when user selects different predicate&#39;, function() {</div><div class='line' id='LC19803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live a:contains(&quot;Name&quot;)&#39;).click();</div><div class='line' id='LC19804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;Adam&#39;, &#39;John&#39;, &#39;Julie&#39;, &#39;Mary&#39;, &#39;Mike&#39;]);</div><div class='line' id='LC19806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.age&#39;)).</div><div class='line' id='LC19807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;35&#39;, &#39;10&#39;, &#39;29&#39;, &#39;19&#39;, &#39;21&#39;]);</div><div class='line' id='LC19808'><br/></div><div class='line' id='LC19809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live a:contains(&quot;Phone&quot;)&#39;).click();</div><div class='line' id='LC19810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.phone&#39;)).</div><div class='line' id='LC19811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;555-9876&#39;, &#39;555-8765&#39;, &#39;555-5678&#39;, &#39;555-4321&#39;, &#39;555-1212&#39;]);</div><div class='line' id='LC19812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</div><div class='line' id='LC19813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toEqual([&#39;Mary&#39;, &#39;Julie&#39;, &#39;Adam&#39;, &#39;Mike&#39;, &#39;John&#39;]);</div><div class='line' id='LC19814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19816'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19817'>&nbsp;*/</div><div class='line' id='LC19818'>orderByFilter.$inject = [&#39;$parse&#39;];</div><div class='line' id='LC19819'>function orderByFilter($parse){</div><div class='line' id='LC19820'>&nbsp;&nbsp;return function(array, sortPredicate, reverseOrder) {</div><div class='line' id='LC19821'>&nbsp;&nbsp;&nbsp;&nbsp;if (!isArray(array)) return array;</div><div class='line' id='LC19822'>&nbsp;&nbsp;&nbsp;&nbsp;if (!sortPredicate) return array;</div><div class='line' id='LC19823'>&nbsp;&nbsp;&nbsp;&nbsp;sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];</div><div class='line' id='LC19824'>&nbsp;&nbsp;&nbsp;&nbsp;sortPredicate = map(sortPredicate, function(predicate){</div><div class='line' id='LC19825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var descending = false, get = predicate || identity;</div><div class='line' id='LC19826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isString(predicate)) {</div><div class='line' id='LC19827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((predicate.charAt(0) == &#39;+&#39; || predicate.charAt(0) == &#39;-&#39;)) {</div><div class='line' id='LC19828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;descending = predicate.charAt(0) == &#39;-&#39;;</div><div class='line' id='LC19829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicate = predicate.substring(1);</div><div class='line' id='LC19830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get = $parse(predicate);</div><div class='line' id='LC19832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return reverseComparator(function(a,b){</div><div class='line' id='LC19834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return compare(get(a),get(b));</div><div class='line' id='LC19835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, descending);</div><div class='line' id='LC19836'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19837'>&nbsp;&nbsp;&nbsp;&nbsp;var arrayCopy = [];</div><div class='line' id='LC19838'>&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; array.length; i++) { arrayCopy.push(array[i]); }</div><div class='line' id='LC19839'>&nbsp;&nbsp;&nbsp;&nbsp;return arrayCopy.sort(reverseComparator(comparator, reverseOrder));</div><div class='line' id='LC19840'><br/></div><div class='line' id='LC19841'>&nbsp;&nbsp;&nbsp;&nbsp;function comparator(o1, o2){</div><div class='line' id='LC19842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ( var i = 0; i &lt; sortPredicate.length; i++) {</div><div class='line' id='LC19843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var comp = sortPredicate[i](o1, o2);</div><div class='line' id='LC19844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comp !== 0) return comp;</div><div class='line' id='LC19845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC19847'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19848'>&nbsp;&nbsp;&nbsp;&nbsp;function reverseComparator(comp, descending) {</div><div class='line' id='LC19849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return toBoolean(descending)</div><div class='line' id='LC19850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? function(a,b){return comp(b,a);}</div><div class='line' id='LC19851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: comp;</div><div class='line' id='LC19852'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19853'>&nbsp;&nbsp;&nbsp;&nbsp;function compare(v1, v2){</div><div class='line' id='LC19854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var t1 = typeof v1;</div><div class='line' id='LC19855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var t2 = typeof v2;</div><div class='line' id='LC19856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t1 == t2) {</div><div class='line' id='LC19857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t1 == &quot;string&quot;) v1 = v1.toLowerCase();</div><div class='line' id='LC19858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t1 == &quot;string&quot;) v2 = v2.toLowerCase();</div><div class='line' id='LC19859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v1 === v2) return 0;</div><div class='line' id='LC19860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v1 &lt; v2 ? -1 : 1;</div><div class='line' id='LC19861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t1 &lt; t2 ? -1 : 1;</div><div class='line' id='LC19863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19864'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19865'>&nbsp;&nbsp;}</div><div class='line' id='LC19866'>}</div><div class='line' id='LC19867'><br/></div><div class='line' id='LC19868'>function ngDirective(directive) {</div><div class='line' id='LC19869'>&nbsp;&nbsp;if (isFunction(directive)) {</div><div class='line' id='LC19870'>&nbsp;&nbsp;&nbsp;&nbsp;directive = {</div><div class='line' id='LC19871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link: directive</div><div class='line' id='LC19872'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19873'>&nbsp;&nbsp;}</div><div class='line' id='LC19874'>&nbsp;&nbsp;directive.restrict = directive.restrict || &#39;AC&#39;;</div><div class='line' id='LC19875'>&nbsp;&nbsp;return valueFn(directive);</div><div class='line' id='LC19876'>}</div><div class='line' id='LC19877'><br/></div><div class='line' id='LC19878'>/**</div><div class='line' id='LC19879'>&nbsp;* @ngdoc directive</div><div class='line' id='LC19880'>&nbsp;* @name ng.directive:a</div><div class='line' id='LC19881'>&nbsp;* @restrict E</div><div class='line' id='LC19882'>&nbsp;*</div><div class='line' id='LC19883'>&nbsp;* @description</div><div class='line' id='LC19884'>&nbsp;* Modifies the default behavior of html A tag, so that the default action is prevented when href</div><div class='line' id='LC19885'>&nbsp;* attribute is empty.</div><div class='line' id='LC19886'>&nbsp;*</div><div class='line' id='LC19887'>&nbsp;* The reasoning for this change is to allow easy creation of action links with `ngClick` directive</div><div class='line' id='LC19888'>&nbsp;* without changing the location or causing page reloads, e.g.:</div><div class='line' id='LC19889'>&nbsp;* `&lt;a href=&quot;&quot; ng-click=&quot;model.$save()&quot;&gt;Save&lt;/a&gt;`</div><div class='line' id='LC19890'>&nbsp;*/</div><div class='line' id='LC19891'>var htmlAnchorDirective = valueFn({</div><div class='line' id='LC19892'>&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC19893'>&nbsp;&nbsp;compile: function(element, attr) {</div><div class='line' id='LC19894'><br/></div><div class='line' id='LC19895'>&nbsp;&nbsp;&nbsp;&nbsp;if (msie &lt;= 8) {</div><div class='line' id='LC19896'><br/></div><div class='line' id='LC19897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// turn &lt;a href ng-click=&quot;..&quot;&gt;link&lt;/a&gt; into a stylable link in IE</div><div class='line' id='LC19898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// but only if it doesn&#39;t have name attribute, in which case it&#39;s an anchor</div><div class='line' id='LC19899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!attr.href &amp;&amp; !attr.name) {</div><div class='line' id='LC19900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;href&#39;, &#39;&#39;);</div><div class='line' id='LC19901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19902'><br/></div><div class='line' id='LC19903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// add a comment node to anchors to workaround IE bug that causes element content to be reset</div><div class='line' id='LC19904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// to new attribute content if attribute is updated with value containing @ and element also</div><div class='line' id='LC19905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// contains value with @</div><div class='line' id='LC19906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// see issue #1949</div><div class='line' id='LC19907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.append(document.createComment(&#39;IE fix&#39;));</div><div class='line' id='LC19908'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19909'><br/></div><div class='line' id='LC19910'>&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element) {</div><div class='line' id='LC19911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;click&#39;, function(event){</div><div class='line' id='LC19912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if we have no href url, then don&#39;t navigate anywhere.</div><div class='line' id='LC19913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!element.attr(&#39;href&#39;)) {</div><div class='line' id='LC19914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</div><div class='line' id='LC19915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19917'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19918'>&nbsp;&nbsp;}</div><div class='line' id='LC19919'>});</div><div class='line' id='LC19920'><br/></div><div class='line' id='LC19921'>/**</div><div class='line' id='LC19922'>&nbsp;* @ngdoc directive</div><div class='line' id='LC19923'>&nbsp;* @name ng.directive:ngHref</div><div class='line' id='LC19924'>&nbsp;* @restrict A</div><div class='line' id='LC19925'>&nbsp;*</div><div class='line' id='LC19926'>&nbsp;* @description</div><div class='line' id='LC19927'>&nbsp;* Using Angular markup like {{hash}} in an href attribute makes</div><div class='line' id='LC19928'>&nbsp;* the page open to a wrong URL, if the user clicks that link before</div><div class='line' id='LC19929'>&nbsp;* angular has a chance to replace the {{hash}} with actual URL, the</div><div class='line' id='LC19930'>&nbsp;* link will be broken and will most likely return a 404 error.</div><div class='line' id='LC19931'>&nbsp;* The `ngHref` directive solves this problem.</div><div class='line' id='LC19932'>&nbsp;*</div><div class='line' id='LC19933'>&nbsp;* The buggy way to write it:</div><div class='line' id='LC19934'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC19935'>&nbsp;* &lt;a href=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</div><div class='line' id='LC19936'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC19937'>&nbsp;*</div><div class='line' id='LC19938'>&nbsp;* The correct way to write it:</div><div class='line' id='LC19939'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC19940'>&nbsp;* &lt;a ng-href=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</div><div class='line' id='LC19941'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC19942'>&nbsp;*</div><div class='line' id='LC19943'>&nbsp;* @element A</div><div class='line' id='LC19944'>&nbsp;* @param {template} ngHref any string which can contain `{{}}` markup.</div><div class='line' id='LC19945'>&nbsp;*</div><div class='line' id='LC19946'>&nbsp;* @example</div><div class='line' id='LC19947'>&nbsp;* This example uses `link` variable inside `href` attribute:</div><div class='line' id='LC19948'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC19949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC19950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input ng-model=&quot;value&quot; /&gt;&lt;br /&gt;</div><div class='line' id='LC19951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-1&quot; href ng-click=&quot;value = 1&quot;&gt;link 1&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</div><div class='line' id='LC19952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-2&quot; href=&quot;&quot; ng-click=&quot;value = 2&quot;&gt;link 2&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</div><div class='line' id='LC19953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-3&quot; ng-href=&quot;/{{&#39;123&#39;}}&quot;&gt;link 3&lt;/a&gt; (link, reload!)&lt;br /&gt;</div><div class='line' id='LC19954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-4&quot; href=&quot;&quot; name=&quot;xx&quot; ng-click=&quot;value = 4&quot;&gt;anchor&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</div><div class='line' id='LC19955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-5&quot; name=&quot;xxx&quot; ng-click=&quot;value = 5&quot;&gt;anchor&lt;/a&gt; (no link)&lt;br /&gt;</div><div class='line' id='LC19956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id=&quot;link-6&quot; ng-href=&quot;{{value}}&quot;&gt;link&lt;/a&gt; (link, change location)</div><div class='line' id='LC19957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC19958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC19959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should execute ng-click but not reload when href without value&#39;, function() {</div><div class='line' id='LC19960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-1&#39;).click();</div><div class='line' id='LC19961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(input(&#39;value&#39;).val()).toEqual(&#39;1&#39;);</div><div class='line' id='LC19962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-1&#39;).attr(&#39;href&#39;)).toBe(&quot;&quot;);</div><div class='line' id='LC19963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19964'><br/></div><div class='line' id='LC19965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should execute ng-click but not reload when href empty string&#39;, function() {</div><div class='line' id='LC19966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-2&#39;).click();</div><div class='line' id='LC19967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(input(&#39;value&#39;).val()).toEqual(&#39;2&#39;);</div><div class='line' id='LC19968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-2&#39;).attr(&#39;href&#39;)).toBe(&quot;&quot;);</div><div class='line' id='LC19969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19970'><br/></div><div class='line' id='LC19971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should execute ng-click and change url when ng-href specified&#39;, function() {</div><div class='line' id='LC19972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-3&#39;).attr(&#39;href&#39;)).toBe(&quot;/123&quot;);</div><div class='line' id='LC19973'><br/></div><div class='line' id='LC19974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-3&#39;).click();</div><div class='line' id='LC19975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(browser().window().path()).toEqual(&#39;/123&#39;);</div><div class='line' id='LC19976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19977'><br/></div><div class='line' id='LC19978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should execute ng-click but not reload when href empty string and name specified&#39;, function() {</div><div class='line' id='LC19979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-4&#39;).click();</div><div class='line' id='LC19980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(input(&#39;value&#39;).val()).toEqual(&#39;4&#39;);</div><div class='line' id='LC19981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-4&#39;).attr(&#39;href&#39;)).toBe(&#39;&#39;);</div><div class='line' id='LC19982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19983'><br/></div><div class='line' id='LC19984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should execute ng-click but not reload when no href but name specified&#39;, function() {</div><div class='line' id='LC19985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-5&#39;).click();</div><div class='line' id='LC19986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(input(&#39;value&#39;).val()).toEqual(&#39;5&#39;);</div><div class='line' id='LC19987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-5&#39;).attr(&#39;href&#39;)).toBe(undefined);</div><div class='line' id='LC19988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19989'><br/></div><div class='line' id='LC19990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should only change url when only ng-href&#39;, function() {</div><div class='line' id='LC19991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;value&#39;).enter(&#39;6&#39;);</div><div class='line' id='LC19992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#link-6&#39;).attr(&#39;href&#39;)).toBe(&#39;6&#39;);</div><div class='line' id='LC19993'><br/></div><div class='line' id='LC19994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#link-6&#39;).click();</div><div class='line' id='LC19995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(browser().location().url()).toEqual(&#39;/6&#39;);</div><div class='line' id='LC19996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC19998'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC19999'>&nbsp;*/</div><div class='line' id='LC20000'><br/></div><div class='line' id='LC20001'>/**</div><div class='line' id='LC20002'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20003'>&nbsp;* @name ng.directive:ngSrc</div><div class='line' id='LC20004'>&nbsp;* @restrict A</div><div class='line' id='LC20005'>&nbsp;*</div><div class='line' id='LC20006'>&nbsp;* @description</div><div class='line' id='LC20007'>&nbsp;* Using Angular markup like `{{hash}}` in a `src` attribute doesn&#39;t</div><div class='line' id='LC20008'>&nbsp;* work right: The browser will fetch from the URL with the literal</div><div class='line' id='LC20009'>&nbsp;* text `{{hash}}` until Angular replaces the expression inside</div><div class='line' id='LC20010'>&nbsp;* `{{hash}}`. The `ngSrc` directive solves this problem.</div><div class='line' id='LC20011'>&nbsp;*</div><div class='line' id='LC20012'>&nbsp;* The buggy way to write it:</div><div class='line' id='LC20013'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC20014'>&nbsp;* &lt;img src=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</div><div class='line' id='LC20015'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC20016'>&nbsp;*</div><div class='line' id='LC20017'>&nbsp;* The correct way to write it:</div><div class='line' id='LC20018'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC20019'>&nbsp;* &lt;img ng-src=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</div><div class='line' id='LC20020'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC20021'>&nbsp;*</div><div class='line' id='LC20022'>&nbsp;* @element IMG</div><div class='line' id='LC20023'>&nbsp;* @param {template} ngSrc any string which can contain `{{}}` markup.</div><div class='line' id='LC20024'>&nbsp;*/</div><div class='line' id='LC20025'><br/></div><div class='line' id='LC20026'>/**</div><div class='line' id='LC20027'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20028'>&nbsp;* @name ng.directive:ngDisabled</div><div class='line' id='LC20029'>&nbsp;* @restrict A</div><div class='line' id='LC20030'>&nbsp;*</div><div class='line' id='LC20031'>&nbsp;* @description</div><div class='line' id='LC20032'>&nbsp;*</div><div class='line' id='LC20033'>&nbsp;* The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:</div><div class='line' id='LC20034'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC20035'>&nbsp;* &lt;div ng-init=&quot;scope = { isDisabled: false }&quot;&gt;</div><div class='line' id='LC20036'>&nbsp;*  &lt;button disabled=&quot;{{scope.isDisabled}}&quot;&gt;Disabled&lt;/button&gt;</div><div class='line' id='LC20037'>&nbsp;* &lt;/div&gt;</div><div class='line' id='LC20038'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC20039'>&nbsp;*</div><div class='line' id='LC20040'>&nbsp;* The HTML specs do not require browsers to preserve the special attributes such as disabled.</div><div class='line' id='LC20041'>&nbsp;* (The presence of them means true and absence means false)</div><div class='line' id='LC20042'>&nbsp;* This prevents the angular compiler from correctly retrieving the binding expression.</div><div class='line' id='LC20043'>&nbsp;* To solve this problem, we introduce the `ngDisabled` directive.</div><div class='line' id='LC20044'>&nbsp;*</div><div class='line' id='LC20045'>&nbsp;* @example</div><div class='line' id='LC20046'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click me to toggle: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC20049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-model=&quot;button&quot; ng-disabled=&quot;checked&quot;&gt;Button&lt;/button&gt;</div><div class='line' id='LC20050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should toggle button&#39;, function() {</div><div class='line' id='LC20053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live :button&#39;).prop(&#39;disabled&#39;)).toBeFalsy();</div><div class='line' id='LC20054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;checked&#39;).check();</div><div class='line' id='LC20055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live :button&#39;).prop(&#39;disabled&#39;)).toBeTruthy();</div><div class='line' id='LC20056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20058'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20059'>&nbsp;*</div><div class='line' id='LC20060'>&nbsp;* @element INPUT</div><div class='line' id='LC20061'>&nbsp;* @param {expression} ngDisabled Angular expression that will be evaluated.</div><div class='line' id='LC20062'>&nbsp;*/</div><div class='line' id='LC20063'><br/></div><div class='line' id='LC20064'><br/></div><div class='line' id='LC20065'>/**</div><div class='line' id='LC20066'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20067'>&nbsp;* @name ng.directive:ngChecked</div><div class='line' id='LC20068'>&nbsp;* @restrict A</div><div class='line' id='LC20069'>&nbsp;*</div><div class='line' id='LC20070'>&nbsp;* @description</div><div class='line' id='LC20071'>&nbsp;* The HTML specs do not require browsers to preserve the special attributes such as checked.</div><div class='line' id='LC20072'>&nbsp;* (The presence of them means true and absence means false)</div><div class='line' id='LC20073'>&nbsp;* This prevents the angular compiler from correctly retrieving the binding expression.</div><div class='line' id='LC20074'>&nbsp;* To solve this problem, we introduce the `ngChecked` directive.</div><div class='line' id='LC20075'>&nbsp;* @example</div><div class='line' id='LC20076'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check me to check both: &lt;input type=&quot;checkbox&quot; ng-model=&quot;master&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC20079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input id=&quot;checkSlave&quot; type=&quot;checkbox&quot; ng-checked=&quot;master&quot;&gt;</div><div class='line' id='LC20080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check both checkBoxes&#39;, function() {</div><div class='line' id='LC20083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #checkSlave&#39;).prop(&#39;checked&#39;)).toBeFalsy();</div><div class='line' id='LC20084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;master&#39;).check();</div><div class='line' id='LC20085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #checkSlave&#39;).prop(&#39;checked&#39;)).toBeTruthy();</div><div class='line' id='LC20086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20088'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20089'>&nbsp;*</div><div class='line' id='LC20090'>&nbsp;* @element INPUT</div><div class='line' id='LC20091'>&nbsp;* @param {expression} ngChecked Angular expression that will be evaluated.</div><div class='line' id='LC20092'>&nbsp;*/</div><div class='line' id='LC20093'><br/></div><div class='line' id='LC20094'><br/></div><div class='line' id='LC20095'>/**</div><div class='line' id='LC20096'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20097'>&nbsp;* @name ng.directive:ngMultiple</div><div class='line' id='LC20098'>&nbsp;* @restrict A</div><div class='line' id='LC20099'>&nbsp;*</div><div class='line' id='LC20100'>&nbsp;* @description</div><div class='line' id='LC20101'>&nbsp;* The HTML specs do not require browsers to preserve the special attributes such as multiple.</div><div class='line' id='LC20102'>&nbsp;* (The presence of them means true and absence means false)</div><div class='line' id='LC20103'>&nbsp;* This prevents the angular compiler from correctly retrieving the binding expression.</div><div class='line' id='LC20104'>&nbsp;* To solve this problem, we introduce the `ngMultiple` directive.</div><div class='line' id='LC20105'>&nbsp;*</div><div class='line' id='LC20106'>&nbsp;* @example</div><div class='line' id='LC20107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check me check multiple: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC20110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select id=&quot;select&quot; ng-multiple=&quot;checked&quot;&gt;</div><div class='line' id='LC20111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;Misko&lt;/option&gt;</div><div class='line' id='LC20112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;Igor&lt;/option&gt;</div><div class='line' id='LC20113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;Vojta&lt;/option&gt;</div><div class='line' id='LC20114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;Di&lt;/option&gt;</div><div class='line' id='LC20115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC20116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should toggle multiple&#39;, function() {</div><div class='line' id='LC20119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #select&#39;).prop(&#39;multiple&#39;)).toBeFalsy();</div><div class='line' id='LC20120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;checked&#39;).check();</div><div class='line' id='LC20121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #select&#39;).prop(&#39;multiple&#39;)).toBeTruthy();</div><div class='line' id='LC20122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20125'>&nbsp;*</div><div class='line' id='LC20126'>&nbsp;* @element SELECT</div><div class='line' id='LC20127'>&nbsp;* @param {expression} ngMultiple Angular expression that will be evaluated.</div><div class='line' id='LC20128'>&nbsp;*/</div><div class='line' id='LC20129'><br/></div><div class='line' id='LC20130'><br/></div><div class='line' id='LC20131'>/**</div><div class='line' id='LC20132'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20133'>&nbsp;* @name ng.directive:ngReadonly</div><div class='line' id='LC20134'>&nbsp;* @restrict A</div><div class='line' id='LC20135'>&nbsp;*</div><div class='line' id='LC20136'>&nbsp;* @description</div><div class='line' id='LC20137'>&nbsp;* The HTML specs do not require browsers to preserve the special attributes such as readonly.</div><div class='line' id='LC20138'>&nbsp;* (The presence of them means true and absence means false)</div><div class='line' id='LC20139'>&nbsp;* This prevents the angular compiler from correctly retrieving the binding expression.</div><div class='line' id='LC20140'>&nbsp;* To solve this problem, we introduce the `ngReadonly` directive.</div><div class='line' id='LC20141'>&nbsp;* @example</div><div class='line' id='LC20142'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check me to make text readonly: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC20145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-readonly=&quot;checked&quot; value=&quot;I&#39;m Angular&quot;/&gt;</div><div class='line' id='LC20146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should toggle readonly attr&#39;, function() {</div><div class='line' id='LC20149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live :text&#39;).prop(&#39;readonly&#39;)).toBeFalsy();</div><div class='line' id='LC20150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;checked&#39;).check();</div><div class='line' id='LC20151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live :text&#39;).prop(&#39;readonly&#39;)).toBeTruthy();</div><div class='line' id='LC20152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20154'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20155'>&nbsp;*</div><div class='line' id='LC20156'>&nbsp;* @element INPUT</div><div class='line' id='LC20157'>&nbsp;* @param {string} expression Angular expression that will be evaluated.</div><div class='line' id='LC20158'>&nbsp;*/</div><div class='line' id='LC20159'><br/></div><div class='line' id='LC20160'><br/></div><div class='line' id='LC20161'>/**</div><div class='line' id='LC20162'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20163'>&nbsp;* @name ng.directive:ngSelected</div><div class='line' id='LC20164'>&nbsp;* @restrict A</div><div class='line' id='LC20165'>&nbsp;*</div><div class='line' id='LC20166'>&nbsp;* @description</div><div class='line' id='LC20167'>&nbsp;* The HTML specs do not require browsers to preserve the special attributes such as selected.</div><div class='line' id='LC20168'>&nbsp;* (The presence of them means true and absence means false)</div><div class='line' id='LC20169'>&nbsp;* This prevents the angular compiler from correctly retrieving the binding expression.</div><div class='line' id='LC20170'>&nbsp;* To solve this problem, we introduced the `ngSelected` directive.</div><div class='line' id='LC20171'>&nbsp;* @example</div><div class='line' id='LC20172'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check me to select: &lt;input type=&quot;checkbox&quot; ng-model=&quot;selected&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC20175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select&gt;</div><div class='line' id='LC20176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;Hello!&lt;/option&gt;</div><div class='line' id='LC20177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option id=&quot;greet&quot; ng-selected=&quot;selected&quot;&gt;Greetings!&lt;/option&gt;</div><div class='line' id='LC20178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC20179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should select Greetings!&#39;, function() {</div><div class='line' id='LC20182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #greet&#39;).prop(&#39;selected&#39;)).toBeFalsy();</div><div class='line' id='LC20183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;selected&#39;).check();</div><div class='line' id='LC20184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #greet&#39;).prop(&#39;selected&#39;)).toBeTruthy();</div><div class='line' id='LC20185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20187'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20188'>&nbsp;*</div><div class='line' id='LC20189'>&nbsp;* @element OPTION</div><div class='line' id='LC20190'>&nbsp;* @param {string} expression Angular expression that will be evaluated.</div><div class='line' id='LC20191'>&nbsp;*/</div><div class='line' id='LC20192'><br/></div><div class='line' id='LC20193'><br/></div><div class='line' id='LC20194'>var ngAttributeAliasDirectives = {};</div><div class='line' id='LC20195'><br/></div><div class='line' id='LC20196'><br/></div><div class='line' id='LC20197'>// boolean attrs are evaluated</div><div class='line' id='LC20198'>forEach(BOOLEAN_ATTR, function(propName, attrName) {</div><div class='line' id='LC20199'>&nbsp;&nbsp;var normalized = directiveNormalize(&#39;ng-&#39; + attrName);</div><div class='line' id='LC20200'>&nbsp;&nbsp;ngAttributeAliasDirectives[normalized] = function() {</div><div class='line' id='LC20201'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC20202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;priority: 100,</div><div class='line' id='LC20203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compile: function() {</div><div class='line' id='LC20204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element, attr) {</div><div class='line' id='LC20205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {</div><div class='line' id='LC20206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(attrName, !!value);</div><div class='line' id='LC20207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20210'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20211'>&nbsp;&nbsp;};</div><div class='line' id='LC20212'>});</div><div class='line' id='LC20213'><br/></div><div class='line' id='LC20214'><br/></div><div class='line' id='LC20215'>// ng-src, ng-href are interpolated</div><div class='line' id='LC20216'>forEach([&#39;src&#39;, &#39;href&#39;], function(attrName) {</div><div class='line' id='LC20217'>&nbsp;&nbsp;var normalized = directiveNormalize(&#39;ng-&#39; + attrName);</div><div class='line' id='LC20218'>&nbsp;&nbsp;ngAttributeAliasDirectives[normalized] = function() {</div><div class='line' id='LC20219'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC20220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;priority: 99, // it needs to run after the attributes are interpolated</div><div class='line' id='LC20221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr) {</div><div class='line' id='LC20222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$observe(normalized, function(value) {</div><div class='line' id='LC20223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!value)</div><div class='line' id='LC20224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC20225'><br/></div><div class='line' id='LC20226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(attrName, value);</div><div class='line' id='LC20227'><br/></div><div class='line' id='LC20228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// on IE, if &quot;ng:src&quot; directive declaration is used and &quot;src&quot; attribute doesn&#39;t exist</div><div class='line' id='LC20229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// then calling element.setAttribute(&#39;src&#39;, &#39;foo&#39;) doesn&#39;t do anything, so we need</div><div class='line' id='LC20230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// to set the property as well to achieve the desired effect.</div><div class='line' id='LC20231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we use attr[attrName] value since $set can sanitize the url.</div><div class='line' id='LC20232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (msie) element.prop(attrName, attr[attrName]);</div><div class='line' id='LC20233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20235'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20236'>&nbsp;&nbsp;};</div><div class='line' id='LC20237'>});</div><div class='line' id='LC20238'><br/></div><div class='line' id='LC20239'>var nullFormCtrl = {</div><div class='line' id='LC20240'>&nbsp;&nbsp;$addControl: noop,</div><div class='line' id='LC20241'>&nbsp;&nbsp;$removeControl: noop,</div><div class='line' id='LC20242'>&nbsp;&nbsp;$setValidity: noop,</div><div class='line' id='LC20243'>&nbsp;&nbsp;$setDirty: noop</div><div class='line' id='LC20244'>};</div><div class='line' id='LC20245'><br/></div><div class='line' id='LC20246'>/**</div><div class='line' id='LC20247'>&nbsp;* @ngdoc object</div><div class='line' id='LC20248'>&nbsp;* @name ng.directive:form.FormController</div><div class='line' id='LC20249'>&nbsp;*</div><div class='line' id='LC20250'>&nbsp;* @property {boolean} $pristine True if user has not interacted with the form yet.</div><div class='line' id='LC20251'>&nbsp;* @property {boolean} $dirty True if user has already interacted with the form.</div><div class='line' id='LC20252'>&nbsp;* @property {boolean} $valid True if all of the containing forms and controls are valid.</div><div class='line' id='LC20253'>&nbsp;* @property {boolean} $invalid True if at least one containing control or form is invalid.</div><div class='line' id='LC20254'>&nbsp;*</div><div class='line' id='LC20255'>&nbsp;* @property {Object} $error Is an object hash, containing references to all invalid controls or</div><div class='line' id='LC20256'>&nbsp;*  forms, where:</div><div class='line' id='LC20257'>&nbsp;*</div><div class='line' id='LC20258'>&nbsp;*  - keys are validation tokens (error names) — such as `required`, `url` or `email`),</div><div class='line' id='LC20259'>&nbsp;*  - values are arrays of controls or forms that are invalid with given error.</div><div class='line' id='LC20260'>&nbsp;*</div><div class='line' id='LC20261'>&nbsp;* @description</div><div class='line' id='LC20262'>&nbsp;* `FormController` keeps track of all its controls and nested forms as well as state of them,</div><div class='line' id='LC20263'>&nbsp;* such as being valid/invalid or dirty/pristine.</div><div class='line' id='LC20264'>&nbsp;*</div><div class='line' id='LC20265'>&nbsp;* Each {@link ng.directive:form form} directive creates an instance</div><div class='line' id='LC20266'>&nbsp;* of `FormController`.</div><div class='line' id='LC20267'>&nbsp;*</div><div class='line' id='LC20268'>&nbsp;*/</div><div class='line' id='LC20269'>//asks for $scope to fool the BC controller module</div><div class='line' id='LC20270'>FormController.$inject = [&#39;$element&#39;, &#39;$attrs&#39;, &#39;$scope&#39;];</div><div class='line' id='LC20271'>function FormController(element, attrs) {</div><div class='line' id='LC20272'>&nbsp;&nbsp;var form = this,</div><div class='line' id='LC20273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentForm = element.parent().controller(&#39;form&#39;) || nullFormCtrl,</div><div class='line' id='LC20274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalidCount = 0, // used to easily determine if we are valid</div><div class='line' id='LC20275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors = form.$error = {};</div><div class='line' id='LC20276'><br/></div><div class='line' id='LC20277'>&nbsp;&nbsp;// init state</div><div class='line' id='LC20278'>&nbsp;&nbsp;form.$name = attrs.name;</div><div class='line' id='LC20279'>&nbsp;&nbsp;form.$dirty = false;</div><div class='line' id='LC20280'>&nbsp;&nbsp;form.$pristine = true;</div><div class='line' id='LC20281'>&nbsp;&nbsp;form.$valid = true;</div><div class='line' id='LC20282'>&nbsp;&nbsp;form.$invalid = false;</div><div class='line' id='LC20283'><br/></div><div class='line' id='LC20284'>&nbsp;&nbsp;parentForm.$addControl(form);</div><div class='line' id='LC20285'><br/></div><div class='line' id='LC20286'>&nbsp;&nbsp;// Setup initial state of the control</div><div class='line' id='LC20287'>&nbsp;&nbsp;element.addClass(PRISTINE_CLASS);</div><div class='line' id='LC20288'>&nbsp;&nbsp;toggleValidCss(true);</div><div class='line' id='LC20289'><br/></div><div class='line' id='LC20290'>&nbsp;&nbsp;// convenience method for easy toggling of classes</div><div class='line' id='LC20291'>&nbsp;&nbsp;function toggleValidCss(isValid, validationErrorKey) {</div><div class='line' id='LC20292'>&nbsp;&nbsp;&nbsp;&nbsp;validationErrorKey = validationErrorKey ? &#39;-&#39; + snake_case(validationErrorKey, &#39;-&#39;) : &#39;&#39;;</div><div class='line' id='LC20293'>&nbsp;&nbsp;&nbsp;&nbsp;element.</div><div class='line' id='LC20294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).</div><div class='line' id='LC20295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);</div><div class='line' id='LC20296'>&nbsp;&nbsp;}</div><div class='line' id='LC20297'><br/></div><div class='line' id='LC20298'>&nbsp;&nbsp;form.$addControl = function(control) {</div><div class='line' id='LC20299'>&nbsp;&nbsp;&nbsp;&nbsp;if (control.$name &amp;&amp; !form.hasOwnProperty(control.$name)) {</div><div class='line' id='LC20300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form[control.$name] = control;</div><div class='line' id='LC20301'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20302'>&nbsp;&nbsp;};</div><div class='line' id='LC20303'><br/></div><div class='line' id='LC20304'>&nbsp;&nbsp;form.$removeControl = function(control) {</div><div class='line' id='LC20305'>&nbsp;&nbsp;&nbsp;&nbsp;if (control.$name &amp;&amp; form[control.$name] === control) {</div><div class='line' id='LC20306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete form[control.$name];</div><div class='line' id='LC20307'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20308'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(errors, function(queue, validationToken) {</div><div class='line' id='LC20309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.$setValidity(validationToken, true, control);</div><div class='line' id='LC20310'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20311'>&nbsp;&nbsp;};</div><div class='line' id='LC20312'><br/></div><div class='line' id='LC20313'>&nbsp;&nbsp;form.$setValidity = function(validationToken, isValid, control) {</div><div class='line' id='LC20314'>&nbsp;&nbsp;&nbsp;&nbsp;var queue = errors[validationToken];</div><div class='line' id='LC20315'><br/></div><div class='line' id='LC20316'>&nbsp;&nbsp;&nbsp;&nbsp;if (isValid) {</div><div class='line' id='LC20317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (queue) {</div><div class='line' id='LC20318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayRemove(queue, control);</div><div class='line' id='LC20319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!queue.length) {</div><div class='line' id='LC20320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalidCount--;</div><div class='line' id='LC20321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!invalidCount) {</div><div class='line' id='LC20322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(isValid);</div><div class='line' id='LC20323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.$valid = true;</div><div class='line' id='LC20324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.$invalid = false;</div><div class='line' id='LC20325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors[validationToken] = false;</div><div class='line' id='LC20327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(true, validationToken);</div><div class='line' id='LC20328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentForm.$setValidity(validationToken, true, form);</div><div class='line' id='LC20329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20331'><br/></div><div class='line' id='LC20332'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC20333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!invalidCount) {</div><div class='line' id='LC20334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(isValid);</div><div class='line' id='LC20335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (queue) {</div><div class='line' id='LC20337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (includes(queue, control)) return;</div><div class='line' id='LC20338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC20339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors[validationToken] = queue = [];</div><div class='line' id='LC20340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalidCount++;</div><div class='line' id='LC20341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(false, validationToken);</div><div class='line' id='LC20342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentForm.$setValidity(validationToken, false, form);</div><div class='line' id='LC20343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;queue.push(control);</div><div class='line' id='LC20345'><br/></div><div class='line' id='LC20346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.$valid = false;</div><div class='line' id='LC20347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.$invalid = true;</div><div class='line' id='LC20348'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20349'>&nbsp;&nbsp;};</div><div class='line' id='LC20350'><br/></div><div class='line' id='LC20351'>&nbsp;&nbsp;form.$setDirty = function() {</div><div class='line' id='LC20352'>&nbsp;&nbsp;&nbsp;&nbsp;element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);</div><div class='line' id='LC20353'>&nbsp;&nbsp;&nbsp;&nbsp;form.$dirty = true;</div><div class='line' id='LC20354'>&nbsp;&nbsp;&nbsp;&nbsp;form.$pristine = false;</div><div class='line' id='LC20355'>&nbsp;&nbsp;&nbsp;&nbsp;parentForm.$setDirty();</div><div class='line' id='LC20356'>&nbsp;&nbsp;};</div><div class='line' id='LC20357'><br/></div><div class='line' id='LC20358'>}</div><div class='line' id='LC20359'><br/></div><div class='line' id='LC20360'><br/></div><div class='line' id='LC20361'>/**</div><div class='line' id='LC20362'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20363'>&nbsp;* @name ng.directive:ngForm</div><div class='line' id='LC20364'>&nbsp;* @restrict EAC</div><div class='line' id='LC20365'>&nbsp;*</div><div class='line' id='LC20366'>&nbsp;* @description</div><div class='line' id='LC20367'>&nbsp;* Nestable alias of {@link ng.directive:form `form`} directive. HTML</div><div class='line' id='LC20368'>&nbsp;* does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a</div><div class='line' id='LC20369'>&nbsp;* sub-group of controls needs to be determined.</div><div class='line' id='LC20370'>&nbsp;*</div><div class='line' id='LC20371'>&nbsp;* @param {string=} name|ngForm Name of the form. If specified, the form controller will be published into</div><div class='line' id='LC20372'>&nbsp;*                       related scope, under this name.</div><div class='line' id='LC20373'>&nbsp;*</div><div class='line' id='LC20374'>&nbsp;*/</div><div class='line' id='LC20375'><br/></div><div class='line' id='LC20376'>&nbsp;/**</div><div class='line' id='LC20377'>&nbsp;* @ngdoc directive</div><div class='line' id='LC20378'>&nbsp;* @name ng.directive:form</div><div class='line' id='LC20379'>&nbsp;* @restrict E</div><div class='line' id='LC20380'>&nbsp;*</div><div class='line' id='LC20381'>&nbsp;* @description</div><div class='line' id='LC20382'>&nbsp;* Directive that instantiates</div><div class='line' id='LC20383'>&nbsp;* {@link ng.directive:form.FormController FormController}.</div><div class='line' id='LC20384'>&nbsp;*</div><div class='line' id='LC20385'>&nbsp;* If `name` attribute is specified, the form controller is published onto the current scope under</div><div class='line' id='LC20386'>&nbsp;* this name.</div><div class='line' id='LC20387'>&nbsp;*</div><div class='line' id='LC20388'>&nbsp;* # Alias: {@link ng.directive:ngForm `ngForm`}</div><div class='line' id='LC20389'>&nbsp;*</div><div class='line' id='LC20390'>&nbsp;* In angular forms can be nested. This means that the outer form is valid when all of the child</div><div class='line' id='LC20391'>&nbsp;* forms are valid as well. However browsers do not allow nesting of `&lt;form&gt;` elements, for this</div><div class='line' id='LC20392'>&nbsp;* reason angular provides {@link ng.directive:ngForm `ngForm`} alias</div><div class='line' id='LC20393'>&nbsp;* which behaves identical to `&lt;form&gt;` but allows form nesting.</div><div class='line' id='LC20394'>&nbsp;*</div><div class='line' id='LC20395'>&nbsp;*</div><div class='line' id='LC20396'>&nbsp;* # CSS classes</div><div class='line' id='LC20397'>&nbsp;*  - `ng-valid` Is set if the form is valid.</div><div class='line' id='LC20398'>&nbsp;*  - `ng-invalid` Is set if the form is invalid.</div><div class='line' id='LC20399'>&nbsp;*  - `ng-pristine` Is set if the form is pristine.</div><div class='line' id='LC20400'>&nbsp;*  - `ng-dirty` Is set if the form is dirty.</div><div class='line' id='LC20401'>&nbsp;*</div><div class='line' id='LC20402'>&nbsp;*</div><div class='line' id='LC20403'>&nbsp;* # Submitting a form and preventing default action</div><div class='line' id='LC20404'>&nbsp;*</div><div class='line' id='LC20405'>&nbsp;* Since the role of forms in client-side Angular applications is different than in classical</div><div class='line' id='LC20406'>&nbsp;* roundtrip apps, it is desirable for the browser not to translate the form submission into a full</div><div class='line' id='LC20407'>&nbsp;* page reload that sends the data to the server. Instead some javascript logic should be triggered</div><div class='line' id='LC20408'>&nbsp;* to handle the form submission in application specific way.</div><div class='line' id='LC20409'>&nbsp;*</div><div class='line' id='LC20410'>&nbsp;* For this reason, Angular prevents the default action (form submission to the server) unless the</div><div class='line' id='LC20411'>&nbsp;* `&lt;form&gt;` element has an `action` attribute specified.</div><div class='line' id='LC20412'>&nbsp;*</div><div class='line' id='LC20413'>&nbsp;* You can use one of the following two ways to specify what javascript method should be called when</div><div class='line' id='LC20414'>&nbsp;* a form is submitted:</div><div class='line' id='LC20415'>&nbsp;*</div><div class='line' id='LC20416'>&nbsp;* - {@link ng.directive:ngSubmit ngSubmit} directive on the form element</div><div class='line' id='LC20417'>&nbsp;* - {@link ng.directive:ngClick ngClick} directive on the first</div><div class='line' id='LC20418'>&nbsp;&nbsp;*  button or input field of type submit (input[type=submit])</div><div class='line' id='LC20419'>&nbsp;*</div><div class='line' id='LC20420'>&nbsp;* To prevent double execution of the handler, use only one of ngSubmit or ngClick directives. This</div><div class='line' id='LC20421'>&nbsp;* is because of the following form submission rules coming from the html spec:</div><div class='line' id='LC20422'>&nbsp;*</div><div class='line' id='LC20423'>&nbsp;* - If a form has only one input field then hitting enter in this field triggers form submit</div><div class='line' id='LC20424'>&nbsp;* (`ngSubmit`)</div><div class='line' id='LC20425'>&nbsp;* - if a form has has 2+ input fields and no buttons or input[type=submit] then hitting enter</div><div class='line' id='LC20426'>&nbsp;* doesn&#39;t trigger submit</div><div class='line' id='LC20427'>&nbsp;* - if a form has one or more input fields and one or more buttons or input[type=submit] then</div><div class='line' id='LC20428'>&nbsp;* hitting enter in any of the input fields will trigger the click handler on the *first* button or</div><div class='line' id='LC20429'>&nbsp;* input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)</div><div class='line' id='LC20430'>&nbsp;*</div><div class='line' id='LC20431'>&nbsp;* @param {string=} name Name of the form. If specified, the form controller will be published into</div><div class='line' id='LC20432'>&nbsp;*                       related scope, under this name.</div><div class='line' id='LC20433'>&nbsp;*</div><div class='line' id='LC20434'>&nbsp;* @example</div><div class='line' id='LC20435'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.userType = &#39;guest&#39;;</div><div class='line' id='LC20440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;userType: &lt;input name=&quot;input&quot; ng-model=&quot;userType&quot; required&gt;</div><div class='line' id='LC20444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;Required!&lt;/span&gt;&lt;br&gt;</div><div class='line' id='LC20445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;userType = {{userType}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC20446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC20447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC20448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC20449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC20450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC20454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;userType&#39;)).toEqual(&#39;guest&#39;);</div><div class='line' id='LC20455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20457'><br/></div><div class='line' id='LC20458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC20459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;userType&#39;).enter(&#39;&#39;);</div><div class='line' id='LC20460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;userType&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20464'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20465'>&nbsp;*/</div><div class='line' id='LC20466'>var formDirectiveFactory = function(isNgForm) {</div><div class='line' id='LC20467'>&nbsp;&nbsp;return [&#39;$timeout&#39;, function($timeout) {</div><div class='line' id='LC20468'>&nbsp;&nbsp;&nbsp;&nbsp;var formDirective = {</div><div class='line' id='LC20469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: &#39;form&#39;,</div><div class='line' id='LC20470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC20471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: FormController,</div><div class='line' id='LC20472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compile: function() {</div><div class='line' id='LC20473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC20474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre: function(scope, formElement, attr, controller) {</div><div class='line' id='LC20475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!attr.action) {</div><div class='line' id='LC20476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we can&#39;t use jq events because if a form is destroyed during submission the default</div><div class='line' id='LC20477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// action is not prevented. see #1238</div><div class='line' id='LC20478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</div><div class='line' id='LC20479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE 9 is not affected because it doesn&#39;t fire a submit event and try to do a full</div><div class='line' id='LC20480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// page reload if the form was destroyed by submission of the form via a click handler</div><div class='line' id='LC20481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// on a button in the form. Looks like an IE9 specific bug.</div><div class='line' id='LC20482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var preventDefaultListener = function(event) {</div><div class='line' id='LC20483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault</div><div class='line' id='LC20484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? event.preventDefault()</div><div class='line' id='LC20485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: event.returnValue = false; // IE</div><div class='line' id='LC20486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20487'><br/></div><div class='line' id='LC20488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addEventListenerFn(formElement[0], &#39;submit&#39;, preventDefaultListener);</div><div class='line' id='LC20489'><br/></div><div class='line' id='LC20490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// unregister the preventDefault listener so that we don&#39;t not leak memory but in a</div><div class='line' id='LC20491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// way that will achieve the prevention of the default action.</div><div class='line' id='LC20492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formElement.bind(&#39;$destroy&#39;, function() {</div><div class='line' id='LC20493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$timeout(function() {</div><div class='line' id='LC20494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeEventListenerFn(formElement[0], &#39;submit&#39;, preventDefaultListener);</div><div class='line' id='LC20495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 0, false);</div><div class='line' id='LC20496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20498'><br/></div><div class='line' id='LC20499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parentFormCtrl = formElement.parent().controller(&#39;form&#39;),</div><div class='line' id='LC20500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias = attr.name || attr.ngForm;</div><div class='line' id='LC20501'><br/></div><div class='line' id='LC20502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (alias) {</div><div class='line' id='LC20503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope[alias] = controller;</div><div class='line' id='LC20504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentFormCtrl) {</div><div class='line' id='LC20506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formElement.bind(&#39;$destroy&#39;, function() {</div><div class='line' id='LC20507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentFormCtrl.$removeControl(controller);</div><div class='line' id='LC20508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (alias) {</div><div class='line' id='LC20509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope[alias] = undefined;</div><div class='line' id='LC20510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards</div><div class='line' id='LC20512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20517'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20518'><br/></div><div class='line' id='LC20519'>&nbsp;&nbsp;&nbsp;&nbsp;return isNgForm ? extend(copy(formDirective), {restrict: &#39;EAC&#39;}) : formDirective;</div><div class='line' id='LC20520'>&nbsp;&nbsp;}];</div><div class='line' id='LC20521'>};</div><div class='line' id='LC20522'><br/></div><div class='line' id='LC20523'>var formDirective = formDirectiveFactory();</div><div class='line' id='LC20524'>var ngFormDirective = formDirectiveFactory(true);</div><div class='line' id='LC20525'><br/></div><div class='line' id='LC20526'>var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&amp;%@!\-\/]))?$/;</div><div class='line' id='LC20527'>var EMAIL_REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;</div><div class='line' id='LC20528'>var NUMBER_REGEXP = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/;</div><div class='line' id='LC20529'><br/></div><div class='line' id='LC20530'>var inputType = {</div><div class='line' id='LC20531'><br/></div><div class='line' id='LC20532'>&nbsp;&nbsp;/**</div><div class='line' id='LC20533'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20534'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.text</div><div class='line' id='LC20535'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20536'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20537'>&nbsp;&nbsp;&nbsp;* Standard HTML text input with angular data binding.</div><div class='line' id='LC20538'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20539'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20540'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20541'>&nbsp;&nbsp;&nbsp;* @param {string=} required Adds `required` validation error key if the value is not entered.</div><div class='line' id='LC20542'>&nbsp;&nbsp;&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC20543'>&nbsp;&nbsp;&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC20544'>&nbsp;&nbsp;&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC20545'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC20546'>&nbsp;&nbsp;&nbsp;*    minlength.</div><div class='line' id='LC20547'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC20548'>&nbsp;&nbsp;&nbsp;*    maxlength.</div><div class='line' id='LC20549'>&nbsp;&nbsp;&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC20550'>&nbsp;&nbsp;&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC20551'>&nbsp;&nbsp;&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC20552'>&nbsp;&nbsp;&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC20553'>&nbsp;&nbsp;&nbsp;*    interaction with the input element.</div><div class='line' id='LC20554'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20555'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.text = &#39;guest&#39;;</div><div class='line' id='LC20561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.word = /^\w*$/;</div><div class='line' id='LC20562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Single word: &lt;input type=&quot;text&quot; name=&quot;input&quot; ng-model=&quot;text&quot;</div><div class='line' id='LC20566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ng-pattern=&quot;word&quot; required&gt;</div><div class='line' id='LC20567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</div><div class='line' id='LC20568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;</div><div class='line' id='LC20569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.pattern&quot;&gt;</div><div class='line' id='LC20570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Single word only!&lt;/span&gt;</div><div class='line' id='LC20571'><br/></div><div class='line' id='LC20572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC20581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;guest&#39;);</div><div class='line' id='LC20582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20584'><br/></div><div class='line' id='LC20585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC20586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;&#39;);</div><div class='line' id='LC20587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20590'><br/></div><div class='line' id='LC20591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if multi word&#39;, function() {</div><div class='line' id='LC20592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;hello world&#39;);</div><div class='line' id='LC20593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20597'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20598'>&nbsp;&nbsp;&#39;text&#39;: textInputType,</div><div class='line' id='LC20599'><br/></div><div class='line' id='LC20600'><br/></div><div class='line' id='LC20601'>&nbsp;&nbsp;/**</div><div class='line' id='LC20602'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20603'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.number</div><div class='line' id='LC20604'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20605'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20606'>&nbsp;&nbsp;&nbsp;* Text input with number validation and transformation. Sets the `number` validation</div><div class='line' id='LC20607'>&nbsp;&nbsp;&nbsp;* error if not a valid number.</div><div class='line' id='LC20608'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20609'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20610'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20611'>&nbsp;&nbsp;&nbsp;* @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.</div><div class='line' id='LC20612'>&nbsp;&nbsp;&nbsp;* @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.</div><div class='line' id='LC20613'>&nbsp;&nbsp;&nbsp;* @param {string=} required Sets `required` validation error key if the value is not entered.</div><div class='line' id='LC20614'>&nbsp;&nbsp;&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC20615'>&nbsp;&nbsp;&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC20616'>&nbsp;&nbsp;&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC20617'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC20618'>&nbsp;&nbsp;&nbsp;*    minlength.</div><div class='line' id='LC20619'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC20620'>&nbsp;&nbsp;&nbsp;*    maxlength.</div><div class='line' id='LC20621'>&nbsp;&nbsp;&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC20622'>&nbsp;&nbsp;&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC20623'>&nbsp;&nbsp;&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC20624'>&nbsp;&nbsp;&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC20625'>&nbsp;&nbsp;&nbsp;*    interaction with the input element.</div><div class='line' id='LC20626'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20627'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.value = 12;</div><div class='line' id='LC20633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Number: &lt;input type=&quot;number&quot; name=&quot;input&quot; ng-model=&quot;value&quot;</div><div class='line' id='LC20637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min=&quot;0&quot; max=&quot;99&quot; required&gt;</div><div class='line' id='LC20638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.required&quot;&gt;</div><div class='line' id='LC20639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;</div><div class='line' id='LC20640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.number&quot;&gt;</div><div class='line' id='LC20641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not valid number!&lt;/span&gt;</div><div class='line' id='LC20642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;value = {{value}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC20651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value&#39;)).toEqual(&#39;12&#39;);</div><div class='line' id='LC20652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20654'><br/></div><div class='line' id='LC20655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC20656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;value&#39;).enter(&#39;&#39;);</div><div class='line' id='LC20657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20660'><br/></div><div class='line' id='LC20661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if over max&#39;, function() {</div><div class='line' id='LC20662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;value&#39;).enter(&#39;123&#39;);</div><div class='line' id='LC20663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20668'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20669'>&nbsp;&nbsp;&#39;number&#39;: numberInputType,</div><div class='line' id='LC20670'><br/></div><div class='line' id='LC20671'><br/></div><div class='line' id='LC20672'>&nbsp;&nbsp;/**</div><div class='line' id='LC20673'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20674'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.url</div><div class='line' id='LC20675'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20676'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20677'>&nbsp;&nbsp;&nbsp;* Text input with URL validation. Sets the `url` validation error key if the content is not a</div><div class='line' id='LC20678'>&nbsp;&nbsp;&nbsp;* valid URL.</div><div class='line' id='LC20679'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20680'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20681'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20682'>&nbsp;&nbsp;&nbsp;* @param {string=} required Sets `required` validation error key if the value is not entered.</div><div class='line' id='LC20683'>&nbsp;&nbsp;&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC20684'>&nbsp;&nbsp;&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC20685'>&nbsp;&nbsp;&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC20686'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC20687'>&nbsp;&nbsp;&nbsp;*    minlength.</div><div class='line' id='LC20688'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC20689'>&nbsp;&nbsp;&nbsp;*    maxlength.</div><div class='line' id='LC20690'>&nbsp;&nbsp;&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC20691'>&nbsp;&nbsp;&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC20692'>&nbsp;&nbsp;&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC20693'>&nbsp;&nbsp;&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC20694'>&nbsp;&nbsp;&nbsp;*    interaction with the input element.</div><div class='line' id='LC20695'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20696'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.text = &#39;http://google.com&#39;;</div><div class='line' id='LC20702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL: &lt;input type=&quot;url&quot; name=&quot;input&quot; ng-model=&quot;text&quot; required&gt;</div><div class='line' id='LC20706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</div><div class='line' id='LC20707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;</div><div class='line' id='LC20708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.url&quot;&gt;</div><div class='line' id='LC20709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not valid url!&lt;/span&gt;</div><div class='line' id='LC20710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.url = {{!!myForm.$error.url}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC20720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;http://google.com&#39;);</div><div class='line' id='LC20721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20723'><br/></div><div class='line' id='LC20724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC20725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;&#39;);</div><div class='line' id='LC20726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20729'><br/></div><div class='line' id='LC20730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if not url&#39;, function() {</div><div class='line' id='LC20731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;xxx&#39;);</div><div class='line' id='LC20732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20736'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20737'>&nbsp;&nbsp;&#39;url&#39;: urlInputType,</div><div class='line' id='LC20738'><br/></div><div class='line' id='LC20739'><br/></div><div class='line' id='LC20740'>&nbsp;&nbsp;/**</div><div class='line' id='LC20741'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20742'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.email</div><div class='line' id='LC20743'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20744'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20745'>&nbsp;&nbsp;&nbsp;* Text input with email validation. Sets the `email` validation error key if not a valid email</div><div class='line' id='LC20746'>&nbsp;&nbsp;&nbsp;* address.</div><div class='line' id='LC20747'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20748'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20749'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20750'>&nbsp;&nbsp;&nbsp;* @param {string=} required Sets `required` validation error key if the value is not entered.</div><div class='line' id='LC20751'>&nbsp;&nbsp;&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC20752'>&nbsp;&nbsp;&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC20753'>&nbsp;&nbsp;&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC20754'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC20755'>&nbsp;&nbsp;&nbsp;*    minlength.</div><div class='line' id='LC20756'>&nbsp;&nbsp;&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC20757'>&nbsp;&nbsp;&nbsp;*    maxlength.</div><div class='line' id='LC20758'>&nbsp;&nbsp;&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC20759'>&nbsp;&nbsp;&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC20760'>&nbsp;&nbsp;&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC20761'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20762'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.text = &#39;me@example.com&#39;;</div><div class='line' id='LC20768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email: &lt;input type=&quot;email&quot; name=&quot;input&quot; ng-model=&quot;text&quot; required&gt;</div><div class='line' id='LC20772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</div><div class='line' id='LC20773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;</div><div class='line' id='LC20774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.email&quot;&gt;</div><div class='line' id='LC20775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not valid email!&lt;/span&gt;</div><div class='line' id='LC20776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.email = {{!!myForm.$error.email}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC20786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;me@example.com&#39;);</div><div class='line' id='LC20787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20789'><br/></div><div class='line' id='LC20790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC20791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;&#39;);</div><div class='line' id='LC20792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</div><div class='line' id='LC20793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20795'><br/></div><div class='line' id='LC20796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if not email&#39;, function() {</div><div class='line' id='LC20797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;xxx&#39;);</div><div class='line' id='LC20798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20802'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20803'>&nbsp;&nbsp;&#39;email&#39;: emailInputType,</div><div class='line' id='LC20804'><br/></div><div class='line' id='LC20805'><br/></div><div class='line' id='LC20806'>&nbsp;&nbsp;/**</div><div class='line' id='LC20807'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20808'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.radio</div><div class='line' id='LC20809'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20810'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20811'>&nbsp;&nbsp;&nbsp;* HTML radio button.</div><div class='line' id='LC20812'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20813'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20814'>&nbsp;&nbsp;&nbsp;* @param {string} value The value to which the expression should be set when selected.</div><div class='line' id='LC20815'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20816'>&nbsp;&nbsp;&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC20817'>&nbsp;&nbsp;&nbsp;*    interaction with the input element.</div><div class='line' id='LC20818'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20819'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.color = &#39;blue&#39;;</div><div class='line' id='LC20825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;red&quot;&gt;  Red &lt;br/&gt;</div><div class='line' id='LC20829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;green&quot;&gt; Green &lt;br/&gt;</div><div class='line' id='LC20830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;blue&quot;&gt; Blue &lt;br/&gt;</div><div class='line' id='LC20831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;color = {{color}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should change state&#39;, function() {</div><div class='line' id='LC20836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;color&#39;)).toEqual(&#39;blue&#39;);</div><div class='line' id='LC20837'><br/></div><div class='line' id='LC20838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;color&#39;).select(&#39;red&#39;);</div><div class='line' id='LC20839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;color&#39;)).toEqual(&#39;red&#39;);</div><div class='line' id='LC20840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20843'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20844'>&nbsp;&nbsp;&#39;radio&#39;: radioInputType,</div><div class='line' id='LC20845'><br/></div><div class='line' id='LC20846'><br/></div><div class='line' id='LC20847'>&nbsp;&nbsp;/**</div><div class='line' id='LC20848'>&nbsp;&nbsp;&nbsp;* @ngdoc inputType</div><div class='line' id='LC20849'>&nbsp;&nbsp;&nbsp;* @name ng.directive:input.checkbox</div><div class='line' id='LC20850'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20851'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC20852'>&nbsp;&nbsp;&nbsp;* HTML checkbox.</div><div class='line' id='LC20853'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20854'>&nbsp;&nbsp;&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC20855'>&nbsp;&nbsp;&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC20856'>&nbsp;&nbsp;&nbsp;* @param {string=} ngTrueValue The value to which the expression should be set when selected.</div><div class='line' id='LC20857'>&nbsp;&nbsp;&nbsp;* @param {string=} ngFalseValue The value to which the expression should be set when not selected.</div><div class='line' id='LC20858'>&nbsp;&nbsp;&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC20859'>&nbsp;&nbsp;&nbsp;*    interaction with the input element.</div><div class='line' id='LC20860'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC20861'>&nbsp;&nbsp;&nbsp;* @example</div><div class='line' id='LC20862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC20863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC20864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC20865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC20866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.value1 = true;</div><div class='line' id='LC20867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.value2 = &#39;YES&#39;</div><div class='line' id='LC20868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC20870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC20871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value1: &lt;input type=&quot;checkbox&quot; ng-model=&quot;value1&quot;&gt; &lt;br/&gt;</div><div class='line' id='LC20872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value2: &lt;input type=&quot;checkbox&quot; ng-model=&quot;value2&quot;</div><div class='line' id='LC20873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ng-true-value=&quot;YES&quot; ng-false-value=&quot;NO&quot;&gt; &lt;br/&gt;</div><div class='line' id='LC20874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;value1 = {{value1}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;value2 = {{value2}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC20876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC20877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC20878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC20879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should change state&#39;, function() {</div><div class='line' id='LC20880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value1&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC20881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value2&#39;)).toEqual(&#39;YES&#39;);</div><div class='line' id='LC20882'><br/></div><div class='line' id='LC20883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;value1&#39;).check();</div><div class='line' id='LC20884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;value2&#39;).check();</div><div class='line' id='LC20885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value1&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC20886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;value2&#39;)).toEqual(&#39;NO&#39;);</div><div class='line' id='LC20887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC20889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC20890'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC20891'>&nbsp;&nbsp;&#39;checkbox&#39;: checkboxInputType,</div><div class='line' id='LC20892'><br/></div><div class='line' id='LC20893'>&nbsp;&nbsp;&#39;hidden&#39;: noop,</div><div class='line' id='LC20894'>&nbsp;&nbsp;&#39;button&#39;: noop,</div><div class='line' id='LC20895'>&nbsp;&nbsp;&#39;submit&#39;: noop,</div><div class='line' id='LC20896'>&nbsp;&nbsp;&#39;reset&#39;: noop</div><div class='line' id='LC20897'>};</div><div class='line' id='LC20898'><br/></div><div class='line' id='LC20899'><br/></div><div class='line' id='LC20900'>function isEmpty(value) {</div><div class='line' id='LC20901'>&nbsp;&nbsp;return isUndefined(value) || value === &#39;&#39; || value === null || value !== value;</div><div class='line' id='LC20902'>}</div><div class='line' id='LC20903'><br/></div><div class='line' id='LC20904'><br/></div><div class='line' id='LC20905'>function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {</div><div class='line' id='LC20906'><br/></div><div class='line' id='LC20907'>&nbsp;&nbsp;var listener = function() {</div><div class='line' id='LC20908'>&nbsp;&nbsp;&nbsp;&nbsp;var value = trim(element.val());</div><div class='line' id='LC20909'><br/></div><div class='line' id='LC20910'>&nbsp;&nbsp;&nbsp;&nbsp;if (ctrl.$viewValue !== value) {</div><div class='line' id='LC20911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC20912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setViewValue(value);</div><div class='line' id='LC20913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20914'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20915'>&nbsp;&nbsp;};</div><div class='line' id='LC20916'><br/></div><div class='line' id='LC20917'>&nbsp;&nbsp;// if the browser does support &quot;input&quot; event, we are fine - except on IE9 which doesn&#39;t fire the</div><div class='line' id='LC20918'>&nbsp;&nbsp;// input event on backspace, delete or cut</div><div class='line' id='LC20919'>&nbsp;&nbsp;if ($sniffer.hasEvent(&#39;input&#39;)) {</div><div class='line' id='LC20920'>&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;input&#39;, listener);</div><div class='line' id='LC20921'>&nbsp;&nbsp;} else {</div><div class='line' id='LC20922'>&nbsp;&nbsp;&nbsp;&nbsp;var timeout;</div><div class='line' id='LC20923'><br/></div><div class='line' id='LC20924'>&nbsp;&nbsp;&nbsp;&nbsp;var deferListener = function() {</div><div class='line' id='LC20925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!timeout) {</div><div class='line' id='LC20926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout = $browser.defer(function() {</div><div class='line' id='LC20927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listener();</div><div class='line' id='LC20928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout = null;</div><div class='line' id='LC20929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20931'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20932'><br/></div><div class='line' id='LC20933'>&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;keydown&#39;, function(event) {</div><div class='line' id='LC20934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key = event.keyCode;</div><div class='line' id='LC20935'><br/></div><div class='line' id='LC20936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ignore</div><div class='line' id='LC20937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//    command            modifiers                   arrows</div><div class='line' id='LC20938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key === 91 || (15 &lt; key &amp;&amp; key &lt; 19) || (37 &lt;= key &amp;&amp; key &lt;= 40)) return;</div><div class='line' id='LC20939'><br/></div><div class='line' id='LC20940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferListener();</div><div class='line' id='LC20941'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC20942'><br/></div><div class='line' id='LC20943'>&nbsp;&nbsp;&nbsp;&nbsp;// if user paste into input using mouse, we need &quot;change&quot; event to catch it</div><div class='line' id='LC20944'>&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;change&#39;, listener);</div><div class='line' id='LC20945'><br/></div><div class='line' id='LC20946'>&nbsp;&nbsp;&nbsp;&nbsp;// if user modifies input value using context menu in IE, we need &quot;paste&quot; and &quot;cut&quot; events to catch it</div><div class='line' id='LC20947'>&nbsp;&nbsp;&nbsp;&nbsp;if ($sniffer.hasEvent(&#39;paste&#39;)) {</div><div class='line' id='LC20948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;paste cut&#39;, deferListener);</div><div class='line' id='LC20949'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20950'>&nbsp;&nbsp;}</div><div class='line' id='LC20951'><br/></div><div class='line' id='LC20952'><br/></div><div class='line' id='LC20953'>&nbsp;&nbsp;ctrl.$render = function() {</div><div class='line' id='LC20954'>&nbsp;&nbsp;&nbsp;&nbsp;element.val(isEmpty(ctrl.$viewValue) ? &#39;&#39; : ctrl.$viewValue);</div><div class='line' id='LC20955'>&nbsp;&nbsp;};</div><div class='line' id='LC20956'><br/></div><div class='line' id='LC20957'>&nbsp;&nbsp;// pattern validator</div><div class='line' id='LC20958'>&nbsp;&nbsp;var pattern = attr.ngPattern,</div><div class='line' id='LC20959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;patternValidator;</div><div class='line' id='LC20960'><br/></div><div class='line' id='LC20961'>&nbsp;&nbsp;var validate = function(regexp, value) {</div><div class='line' id='LC20962'>&nbsp;&nbsp;&nbsp;&nbsp;if (isEmpty(value) || regexp.test(value)) {</div><div class='line' id='LC20963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;pattern&#39;, true);</div><div class='line' id='LC20964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC20965'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC20966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;pattern&#39;, false);</div><div class='line' id='LC20967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC20968'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20969'>&nbsp;&nbsp;};</div><div class='line' id='LC20970'><br/></div><div class='line' id='LC20971'>&nbsp;&nbsp;if (pattern) {</div><div class='line' id='LC20972'>&nbsp;&nbsp;&nbsp;&nbsp;if (pattern.match(/^\/(.*)\/$/)) {</div><div class='line' id='LC20973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern = new RegExp(pattern.substr(1, pattern.length - 2));</div><div class='line' id='LC20974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;patternValidator = function(value) {</div><div class='line' id='LC20975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return validate(pattern, value)</div><div class='line' id='LC20976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20977'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC20978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;patternValidator = function(value) {</div><div class='line' id='LC20979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var patternObj = scope.$eval(pattern);</div><div class='line' id='LC20980'><br/></div><div class='line' id='LC20981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!patternObj || !patternObj.test) {</div><div class='line' id='LC20982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&#39;Expected &#39; + pattern + &#39; to be a RegExp but was &#39; + patternObj);</div><div class='line' id='LC20983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return validate(patternObj, value);</div><div class='line' id='LC20985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC20986'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC20987'><br/></div><div class='line' id='LC20988'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(patternValidator);</div><div class='line' id='LC20989'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(patternValidator);</div><div class='line' id='LC20990'>&nbsp;&nbsp;}</div><div class='line' id='LC20991'><br/></div><div class='line' id='LC20992'>&nbsp;&nbsp;// min length validator</div><div class='line' id='LC20993'>&nbsp;&nbsp;if (attr.ngMinlength) {</div><div class='line' id='LC20994'>&nbsp;&nbsp;&nbsp;&nbsp;var minlength = int(attr.ngMinlength);</div><div class='line' id='LC20995'>&nbsp;&nbsp;&nbsp;&nbsp;var minLengthValidator = function(value) {</div><div class='line' id='LC20996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmpty(value) &amp;&amp; value.length &lt; minlength) {</div><div class='line' id='LC20997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;minlength&#39;, false);</div><div class='line' id='LC20998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC20999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;minlength&#39;, true);</div><div class='line' id='LC21001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21003'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21004'><br/></div><div class='line' id='LC21005'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(minLengthValidator);</div><div class='line' id='LC21006'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(minLengthValidator);</div><div class='line' id='LC21007'>&nbsp;&nbsp;}</div><div class='line' id='LC21008'><br/></div><div class='line' id='LC21009'>&nbsp;&nbsp;// max length validator</div><div class='line' id='LC21010'>&nbsp;&nbsp;if (attr.ngMaxlength) {</div><div class='line' id='LC21011'>&nbsp;&nbsp;&nbsp;&nbsp;var maxlength = int(attr.ngMaxlength);</div><div class='line' id='LC21012'>&nbsp;&nbsp;&nbsp;&nbsp;var maxLengthValidator = function(value) {</div><div class='line' id='LC21013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmpty(value) &amp;&amp; value.length &gt; maxlength) {</div><div class='line' id='LC21014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;maxlength&#39;, false);</div><div class='line' id='LC21015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;maxlength&#39;, true);</div><div class='line' id='LC21018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21020'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21021'><br/></div><div class='line' id='LC21022'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(maxLengthValidator);</div><div class='line' id='LC21023'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(maxLengthValidator);</div><div class='line' id='LC21024'>&nbsp;&nbsp;}</div><div class='line' id='LC21025'>}</div><div class='line' id='LC21026'><br/></div><div class='line' id='LC21027'>function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {</div><div class='line' id='LC21028'>&nbsp;&nbsp;textInputType(scope, element, attr, ctrl, $sniffer, $browser);</div><div class='line' id='LC21029'><br/></div><div class='line' id='LC21030'>&nbsp;&nbsp;ctrl.$parsers.push(function(value) {</div><div class='line' id='LC21031'>&nbsp;&nbsp;&nbsp;&nbsp;var empty = isEmpty(value);</div><div class='line' id='LC21032'>&nbsp;&nbsp;&nbsp;&nbsp;if (empty || NUMBER_REGEXP.test(value)) {</div><div class='line' id='LC21033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;number&#39;, true);</div><div class='line' id='LC21034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value === &#39;&#39; ? null : (empty ? value : parseFloat(value));</div><div class='line' id='LC21035'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;number&#39;, false);</div><div class='line' id='LC21037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21038'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21039'>&nbsp;&nbsp;});</div><div class='line' id='LC21040'><br/></div><div class='line' id='LC21041'>&nbsp;&nbsp;ctrl.$formatters.push(function(value) {</div><div class='line' id='LC21042'>&nbsp;&nbsp;&nbsp;&nbsp;return isEmpty(value) ? &#39;&#39; : &#39;&#39; + value;</div><div class='line' id='LC21043'>&nbsp;&nbsp;});</div><div class='line' id='LC21044'><br/></div><div class='line' id='LC21045'>&nbsp;&nbsp;if (attr.min) {</div><div class='line' id='LC21046'>&nbsp;&nbsp;&nbsp;&nbsp;var min = parseFloat(attr.min);</div><div class='line' id='LC21047'>&nbsp;&nbsp;&nbsp;&nbsp;var minValidator = function(value) {</div><div class='line' id='LC21048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmpty(value) &amp;&amp; value &lt; min) {</div><div class='line' id='LC21049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;min&#39;, false);</div><div class='line' id='LC21050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;min&#39;, true);</div><div class='line' id='LC21053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21055'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21056'><br/></div><div class='line' id='LC21057'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(minValidator);</div><div class='line' id='LC21058'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(minValidator);</div><div class='line' id='LC21059'>&nbsp;&nbsp;}</div><div class='line' id='LC21060'><br/></div><div class='line' id='LC21061'>&nbsp;&nbsp;if (attr.max) {</div><div class='line' id='LC21062'>&nbsp;&nbsp;&nbsp;&nbsp;var max = parseFloat(attr.max);</div><div class='line' id='LC21063'>&nbsp;&nbsp;&nbsp;&nbsp;var maxValidator = function(value) {</div><div class='line' id='LC21064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmpty(value) &amp;&amp; value &gt; max) {</div><div class='line' id='LC21065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;max&#39;, false);</div><div class='line' id='LC21066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;max&#39;, true);</div><div class='line' id='LC21069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21071'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21072'><br/></div><div class='line' id='LC21073'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(maxValidator);</div><div class='line' id='LC21074'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(maxValidator);</div><div class='line' id='LC21075'>&nbsp;&nbsp;}</div><div class='line' id='LC21076'><br/></div><div class='line' id='LC21077'>&nbsp;&nbsp;ctrl.$formatters.push(function(value) {</div><div class='line' id='LC21078'><br/></div><div class='line' id='LC21079'>&nbsp;&nbsp;&nbsp;&nbsp;if (isEmpty(value) || isNumber(value)) {</div><div class='line' id='LC21080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;number&#39;, true);</div><div class='line' id='LC21081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21082'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;number&#39;, false);</div><div class='line' id='LC21084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21085'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21086'>&nbsp;&nbsp;});</div><div class='line' id='LC21087'>}</div><div class='line' id='LC21088'><br/></div><div class='line' id='LC21089'>function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {</div><div class='line' id='LC21090'>&nbsp;&nbsp;textInputType(scope, element, attr, ctrl, $sniffer, $browser);</div><div class='line' id='LC21091'><br/></div><div class='line' id='LC21092'>&nbsp;&nbsp;var urlValidator = function(value) {</div><div class='line' id='LC21093'>&nbsp;&nbsp;&nbsp;&nbsp;if (isEmpty(value) || URL_REGEXP.test(value)) {</div><div class='line' id='LC21094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;url&#39;, true);</div><div class='line' id='LC21095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21096'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;url&#39;, false);</div><div class='line' id='LC21098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21099'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21100'>&nbsp;&nbsp;};</div><div class='line' id='LC21101'><br/></div><div class='line' id='LC21102'>&nbsp;&nbsp;ctrl.$formatters.push(urlValidator);</div><div class='line' id='LC21103'>&nbsp;&nbsp;ctrl.$parsers.push(urlValidator);</div><div class='line' id='LC21104'>}</div><div class='line' id='LC21105'><br/></div><div class='line' id='LC21106'>function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {</div><div class='line' id='LC21107'>&nbsp;&nbsp;textInputType(scope, element, attr, ctrl, $sniffer, $browser);</div><div class='line' id='LC21108'><br/></div><div class='line' id='LC21109'>&nbsp;&nbsp;var emailValidator = function(value) {</div><div class='line' id='LC21110'>&nbsp;&nbsp;&nbsp;&nbsp;if (isEmpty(value) || EMAIL_REGEXP.test(value)) {</div><div class='line' id='LC21111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;email&#39;, true);</div><div class='line' id='LC21112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21113'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;email&#39;, false);</div><div class='line' id='LC21115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21116'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21117'>&nbsp;&nbsp;};</div><div class='line' id='LC21118'><br/></div><div class='line' id='LC21119'>&nbsp;&nbsp;ctrl.$formatters.push(emailValidator);</div><div class='line' id='LC21120'>&nbsp;&nbsp;ctrl.$parsers.push(emailValidator);</div><div class='line' id='LC21121'>}</div><div class='line' id='LC21122'><br/></div><div class='line' id='LC21123'>function radioInputType(scope, element, attr, ctrl) {</div><div class='line' id='LC21124'>&nbsp;&nbsp;// make the name unique, if not defined</div><div class='line' id='LC21125'>&nbsp;&nbsp;if (isUndefined(attr.name)) {</div><div class='line' id='LC21126'>&nbsp;&nbsp;&nbsp;&nbsp;element.attr(&#39;name&#39;, nextUid());</div><div class='line' id='LC21127'>&nbsp;&nbsp;}</div><div class='line' id='LC21128'><br/></div><div class='line' id='LC21129'>&nbsp;&nbsp;element.bind(&#39;click&#39;, function() {</div><div class='line' id='LC21130'>&nbsp;&nbsp;&nbsp;&nbsp;if (element[0].checked) {</div><div class='line' id='LC21131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC21132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setViewValue(attr.value);</div><div class='line' id='LC21133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21134'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21135'>&nbsp;&nbsp;});</div><div class='line' id='LC21136'><br/></div><div class='line' id='LC21137'>&nbsp;&nbsp;ctrl.$render = function() {</div><div class='line' id='LC21138'>&nbsp;&nbsp;&nbsp;&nbsp;var value = attr.value;</div><div class='line' id='LC21139'>&nbsp;&nbsp;&nbsp;&nbsp;element[0].checked = (value == ctrl.$viewValue);</div><div class='line' id='LC21140'>&nbsp;&nbsp;};</div><div class='line' id='LC21141'><br/></div><div class='line' id='LC21142'>&nbsp;&nbsp;attr.$observe(&#39;value&#39;, ctrl.$render);</div><div class='line' id='LC21143'>}</div><div class='line' id='LC21144'><br/></div><div class='line' id='LC21145'>function checkboxInputType(scope, element, attr, ctrl) {</div><div class='line' id='LC21146'>&nbsp;&nbsp;var trueValue = attr.ngTrueValue,</div><div class='line' id='LC21147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;falseValue = attr.ngFalseValue;</div><div class='line' id='LC21148'><br/></div><div class='line' id='LC21149'>&nbsp;&nbsp;if (!isString(trueValue)) trueValue = true;</div><div class='line' id='LC21150'>&nbsp;&nbsp;if (!isString(falseValue)) falseValue = false;</div><div class='line' id='LC21151'><br/></div><div class='line' id='LC21152'>&nbsp;&nbsp;element.bind(&#39;click&#39;, function() {</div><div class='line' id='LC21153'>&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC21154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setViewValue(element[0].checked);</div><div class='line' id='LC21155'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21156'>&nbsp;&nbsp;});</div><div class='line' id='LC21157'><br/></div><div class='line' id='LC21158'>&nbsp;&nbsp;ctrl.$render = function() {</div><div class='line' id='LC21159'>&nbsp;&nbsp;&nbsp;&nbsp;element[0].checked = ctrl.$viewValue;</div><div class='line' id='LC21160'>&nbsp;&nbsp;};</div><div class='line' id='LC21161'><br/></div><div class='line' id='LC21162'>&nbsp;&nbsp;ctrl.$formatters.push(function(value) {</div><div class='line' id='LC21163'>&nbsp;&nbsp;&nbsp;&nbsp;return value === trueValue;</div><div class='line' id='LC21164'>&nbsp;&nbsp;});</div><div class='line' id='LC21165'><br/></div><div class='line' id='LC21166'>&nbsp;&nbsp;ctrl.$parsers.push(function(value) {</div><div class='line' id='LC21167'>&nbsp;&nbsp;&nbsp;&nbsp;return value ? trueValue : falseValue;</div><div class='line' id='LC21168'>&nbsp;&nbsp;});</div><div class='line' id='LC21169'>}</div><div class='line' id='LC21170'><br/></div><div class='line' id='LC21171'><br/></div><div class='line' id='LC21172'>/**</div><div class='line' id='LC21173'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21174'>&nbsp;* @name ng.directive:textarea</div><div class='line' id='LC21175'>&nbsp;* @restrict E</div><div class='line' id='LC21176'>&nbsp;*</div><div class='line' id='LC21177'>&nbsp;* @description</div><div class='line' id='LC21178'>&nbsp;* HTML textarea element control with angular data-binding. The data-binding and validation</div><div class='line' id='LC21179'>&nbsp;* properties of this element are exactly the same as those of the</div><div class='line' id='LC21180'>&nbsp;* {@link ng.directive:input input element}.</div><div class='line' id='LC21181'>&nbsp;*</div><div class='line' id='LC21182'>&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC21183'>&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC21184'>&nbsp;* @param {string=} required Sets `required` validation error key if the value is not entered.</div><div class='line' id='LC21185'>&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC21186'>&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC21187'>&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC21188'>&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC21189'>&nbsp;*    minlength.</div><div class='line' id='LC21190'>&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC21191'>&nbsp;*    maxlength.</div><div class='line' id='LC21192'>&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC21193'>&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC21194'>&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC21195'>&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC21196'>&nbsp;*    interaction with the input element.</div><div class='line' id='LC21197'>&nbsp;*/</div><div class='line' id='LC21198'><br/></div><div class='line' id='LC21199'><br/></div><div class='line' id='LC21200'>/**</div><div class='line' id='LC21201'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21202'>&nbsp;* @name ng.directive:input</div><div class='line' id='LC21203'>&nbsp;* @restrict E</div><div class='line' id='LC21204'>&nbsp;*</div><div class='line' id='LC21205'>&nbsp;* @description</div><div class='line' id='LC21206'>&nbsp;* HTML input element control with angular data-binding. Input control follows HTML5 input types</div><div class='line' id='LC21207'>&nbsp;* and polyfills the HTML5 validation behavior for older browsers.</div><div class='line' id='LC21208'>&nbsp;*</div><div class='line' id='LC21209'>&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC21210'>&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC21211'>&nbsp;* @param {string=} required Sets `required` validation error key if the value is not entered.</div><div class='line' id='LC21212'>&nbsp;* @param {boolean=} ngRequired Sets `required` attribute if set to true</div><div class='line' id='LC21213'>&nbsp;* @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</div><div class='line' id='LC21214'>&nbsp;*    minlength.</div><div class='line' id='LC21215'>&nbsp;* @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</div><div class='line' id='LC21216'>&nbsp;*    maxlength.</div><div class='line' id='LC21217'>&nbsp;* @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the</div><div class='line' id='LC21218'>&nbsp;*    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</div><div class='line' id='LC21219'>&nbsp;*    patterns defined as scope expressions.</div><div class='line' id='LC21220'>&nbsp;* @param {string=} ngChange Angular expression to be executed when input changes due to user</div><div class='line' id='LC21221'>&nbsp;*    interaction with the input element.</div><div class='line' id='LC21222'>&nbsp;*</div><div class='line' id='LC21223'>&nbsp;* @example</div><div class='line' id='LC21224'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC21225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC21226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC21227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC21228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.user = {name: &#39;guest&#39;, last: &#39;visitor&#39;};</div><div class='line' id='LC21229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC21231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC21232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot;&gt;</div><div class='line' id='LC21233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User name: &lt;input type=&quot;text&quot; name=&quot;userName&quot; ng-model=&quot;user.name&quot; required&gt;</div><div class='line' id='LC21234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.userName.$error.required&quot;&gt;</div><div class='line' id='LC21235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;&lt;br&gt;</div><div class='line' id='LC21236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last name: &lt;input type=&quot;text&quot; name=&quot;lastName&quot; ng-model=&quot;user.last&quot;</div><div class='line' id='LC21237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ng-minlength=&quot;3&quot; ng-maxlength=&quot;10&quot;&gt;</div><div class='line' id='LC21238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.lastName.$error.minlength&quot;&gt;</div><div class='line' id='LC21239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Too short!&lt;/span&gt;</div><div class='line' id='LC21240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.lastName.$error.maxlength&quot;&gt;</div><div class='line' id='LC21241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Too long!&lt;/span&gt;&lt;br&gt;</div><div class='line' id='LC21242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC21243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr&gt;</div><div class='line' id='LC21244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;user = {{user}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.userName.$valid = {{myForm.userName.$valid}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.userName.$error = {{myForm.userName.$error}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.lastName.$valid = {{myForm.lastName.$valid}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.lastName.$error = {{myForm.lastName.$error}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.minlength = {{!!myForm.$error.minlength}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.maxlength = {{!!myForm.$error.maxlength}}&lt;/tt&gt;&lt;br&gt;</div><div class='line' id='LC21253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC21254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC21255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC21256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC21257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;,&quot;last&quot;:&quot;visitor&quot;}&#39;);</div><div class='line' id='LC21258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.userName.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21261'><br/></div><div class='line' id='LC21262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty when required&#39;, function() {</div><div class='line' id='LC21263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;user.name&#39;).enter(&#39;&#39;);</div><div class='line' id='LC21264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;last&quot;:&quot;visitor&quot;}&#39;);</div><div class='line' id='LC21265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.userName.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21268'><br/></div><div class='line' id='LC21269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be valid if empty when min length is set&#39;, function() {</div><div class='line' id='LC21270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;user.last&#39;).enter(&#39;&#39;);</div><div class='line' id='LC21271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;,&quot;last&quot;:&quot;&quot;}&#39;);</div><div class='line' id='LC21272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21275'><br/></div><div class='line' id='LC21276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if less than required min length&#39;, function() {</div><div class='line' id='LC21277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;user.last&#39;).enter(&#39;xx&#39;);</div><div class='line' id='LC21278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;}&#39;);</div><div class='line' id='LC21279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.lastName.$error&#39;)).toMatch(/minlength/);</div><div class='line' id='LC21281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21283'><br/></div><div class='line' id='LC21284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if longer than max length&#39;, function() {</div><div class='line' id='LC21285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;user.last&#39;).enter(&#39;some ridiculously long name&#39;);</div><div class='line' id='LC21286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;user&#39;))</div><div class='line' id='LC21287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;}&#39;);</div><div class='line' id='LC21288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.lastName.$error&#39;)).toMatch(/maxlength/);</div><div class='line' id='LC21290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC21293'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC21294'>&nbsp;*/</div><div class='line' id='LC21295'>var inputDirective = [&#39;$browser&#39;, &#39;$sniffer&#39;, function($browser, $sniffer) {</div><div class='line' id='LC21296'>&nbsp;&nbsp;return {</div><div class='line' id='LC21297'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC21298'>&nbsp;&nbsp;&nbsp;&nbsp;require: &#39;?ngModel&#39;,</div><div class='line' id='LC21299'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr, ctrl) {</div><div class='line' id='LC21300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ctrl) {</div><div class='line' id='LC21301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,</div><div class='line' id='LC21302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser);</div><div class='line' id='LC21303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21304'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21305'>&nbsp;&nbsp;};</div><div class='line' id='LC21306'>}];</div><div class='line' id='LC21307'><br/></div><div class='line' id='LC21308'>var VALID_CLASS = &#39;ng-valid&#39;,</div><div class='line' id='LC21309'>&nbsp;&nbsp;&nbsp;&nbsp;INVALID_CLASS = &#39;ng-invalid&#39;,</div><div class='line' id='LC21310'>&nbsp;&nbsp;&nbsp;&nbsp;PRISTINE_CLASS = &#39;ng-pristine&#39;,</div><div class='line' id='LC21311'>&nbsp;&nbsp;&nbsp;&nbsp;DIRTY_CLASS = &#39;ng-dirty&#39;;</div><div class='line' id='LC21312'><br/></div><div class='line' id='LC21313'>/**</div><div class='line' id='LC21314'>&nbsp;* @ngdoc object</div><div class='line' id='LC21315'>&nbsp;* @name ng.directive:ngModel.NgModelController</div><div class='line' id='LC21316'>&nbsp;*</div><div class='line' id='LC21317'>&nbsp;* @property {string} $viewValue Actual string value in the view.</div><div class='line' id='LC21318'>&nbsp;* @property {*} $modelValue The value in the model, that the control is bound to.</div><div class='line' id='LC21319'>&nbsp;* @property {Array.&lt;Function&gt;} $parsers Whenever the control reads value from the DOM, it executes</div><div class='line' id='LC21320'>&nbsp;*     all of these functions to sanitize / convert the value as well as validate.</div><div class='line' id='LC21321'>&nbsp;*</div><div class='line' id='LC21322'>&nbsp;* @property {Array.&lt;Function&gt;} $formatters Whenever the model value changes, it executes all of</div><div class='line' id='LC21323'>&nbsp;*     these functions to convert the value as well as validate.</div><div class='line' id='LC21324'>&nbsp;*</div><div class='line' id='LC21325'>&nbsp;* @property {Object} $error An bject hash with all errors as keys.</div><div class='line' id='LC21326'>&nbsp;*</div><div class='line' id='LC21327'>&nbsp;* @property {boolean} $pristine True if user has not interacted with the control yet.</div><div class='line' id='LC21328'>&nbsp;* @property {boolean} $dirty True if user has already interacted with the control.</div><div class='line' id='LC21329'>&nbsp;* @property {boolean} $valid True if there is no error.</div><div class='line' id='LC21330'>&nbsp;* @property {boolean} $invalid True if at least one error on the control.</div><div class='line' id='LC21331'>&nbsp;*</div><div class='line' id='LC21332'>&nbsp;* @description</div><div class='line' id='LC21333'>&nbsp;*</div><div class='line' id='LC21334'>&nbsp;* `NgModelController` provides API for the `ng-model` directive. The controller contains</div><div class='line' id='LC21335'>&nbsp;* services for data-binding, validation, CSS update, value formatting and parsing. It</div><div class='line' id='LC21336'>&nbsp;* specifically does not contain any logic which deals with DOM rendering or listening to</div><div class='line' id='LC21337'>&nbsp;* DOM events. The `NgModelController` is meant to be extended by other directives where, the</div><div class='line' id='LC21338'>&nbsp;* directive provides DOM manipulation and the `NgModelController` provides the data-binding.</div><div class='line' id='LC21339'>&nbsp;*</div><div class='line' id='LC21340'>&nbsp;* This example shows how to use `NgModelController` with a custom control to achieve</div><div class='line' id='LC21341'>&nbsp;* data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)</div><div class='line' id='LC21342'>&nbsp;* collaborate together to achieve the desired result.</div><div class='line' id='LC21343'>&nbsp;*</div><div class='line' id='LC21344'>&nbsp;* &lt;example module=&quot;customControl&quot;&gt;</div><div class='line' id='LC21345'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;style.css&quot;&gt;</div><div class='line' id='LC21346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[contenteditable] {</div><div class='line' id='LC21347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border: 1px solid black;</div><div class='line' id='LC21348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background-color: white;</div><div class='line' id='LC21349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min-height: 20px;</div><div class='line' id='LC21350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21351'><br/></div><div class='line' id='LC21352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ng-invalid {</div><div class='line' id='LC21353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border: 1px solid red;</div><div class='line' id='LC21354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21355'><br/></div><div class='line' id='LC21356'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC21357'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC21358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.module(&#39;customControl&#39;, []).</div><div class='line' id='LC21359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directive(&#39;contenteditable&#39;, function() {</div><div class='line' id='LC21360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC21361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;A&#39;, // only activate on element attribute</div><div class='line' id='LC21362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require: &#39;?ngModel&#39;, // get a hold of NgModelController</div><div class='line' id='LC21363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attrs, ngModel) {</div><div class='line' id='LC21364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!ngModel) return; // do nothing if no ng-model</div><div class='line' id='LC21365'><br/></div><div class='line' id='LC21366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Specify how UI should be updated</div><div class='line' id='LC21367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModel.$render = function() {</div><div class='line' id='LC21368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(ngModel.$viewValue || &#39;&#39;);</div><div class='line' id='LC21369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21370'><br/></div><div class='line' id='LC21371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Listen for change events to enable binding</div><div class='line' id='LC21372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;blur keyup change&#39;, function() {</div><div class='line' id='LC21373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(read);</div><div class='line' id='LC21374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read(); // initialize</div><div class='line' id='LC21376'><br/></div><div class='line' id='LC21377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Write data to the model</div><div class='line' id='LC21378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function read() {</div><div class='line' id='LC21379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModel.$setViewValue(element.html());</div><div class='line' id='LC21380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21384'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC21385'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC21386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot;&gt;</div><div class='line' id='LC21387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div contenteditable</div><div class='line' id='LC21388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name=&quot;myWidget&quot; ng-model=&quot;userContent&quot;</div><div class='line' id='LC21389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;required&gt;Change me!&lt;/div&gt;</div><div class='line' id='LC21390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-show=&quot;myForm.myWidget.$error.required&quot;&gt;Required!&lt;/span&gt;</div><div class='line' id='LC21391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr&gt;</div><div class='line' id='LC21392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;textarea ng-model=&quot;userContent&quot;&gt;&lt;/textarea&gt;</div><div class='line' id='LC21393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC21394'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC21395'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC21396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should data-bind and become invalid&#39;, function() {</div><div class='line' id='LC21397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var contentEditable = element(&#39;[contenteditable]&#39;);</div><div class='line' id='LC21398'><br/></div><div class='line' id='LC21399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(contentEditable.text()).toEqual(&#39;Change me!&#39;);</div><div class='line' id='LC21400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;userContent&#39;).enter(&#39;&#39;);</div><div class='line' id='LC21401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(contentEditable.text()).toEqual(&#39;&#39;);</div><div class='line' id='LC21402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(contentEditable.prop(&#39;className&#39;)).toMatch(/ng-invalid-required/);</div><div class='line' id='LC21403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21404'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC21405'>&nbsp;* &lt;/example&gt;</div><div class='line' id='LC21406'>&nbsp;*</div><div class='line' id='LC21407'>&nbsp;*/</div><div class='line' id='LC21408'>var NgModelController = [&#39;$scope&#39;, &#39;$exceptionHandler&#39;, &#39;$attrs&#39;, &#39;$element&#39;, &#39;$parse&#39;,</div><div class='line' id='LC21409'>&nbsp;&nbsp;&nbsp;&nbsp;function($scope, $exceptionHandler, $attr, $element, $parse) {</div><div class='line' id='LC21410'>&nbsp;&nbsp;this.$viewValue = Number.NaN;</div><div class='line' id='LC21411'>&nbsp;&nbsp;this.$modelValue = Number.NaN;</div><div class='line' id='LC21412'>&nbsp;&nbsp;this.$parsers = [];</div><div class='line' id='LC21413'>&nbsp;&nbsp;this.$formatters = [];</div><div class='line' id='LC21414'>&nbsp;&nbsp;this.$viewChangeListeners = [];</div><div class='line' id='LC21415'>&nbsp;&nbsp;this.$pristine = true;</div><div class='line' id='LC21416'>&nbsp;&nbsp;this.$dirty = false;</div><div class='line' id='LC21417'>&nbsp;&nbsp;this.$valid = true;</div><div class='line' id='LC21418'>&nbsp;&nbsp;this.$invalid = false;</div><div class='line' id='LC21419'>&nbsp;&nbsp;this.$name = $attr.name;</div><div class='line' id='LC21420'><br/></div><div class='line' id='LC21421'>&nbsp;&nbsp;var ngModelGet = $parse($attr.ngModel),</div><div class='line' id='LC21422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelSet = ngModelGet.assign;</div><div class='line' id='LC21423'><br/></div><div class='line' id='LC21424'>&nbsp;&nbsp;if (!ngModelSet) {</div><div class='line' id='LC21425'>&nbsp;&nbsp;&nbsp;&nbsp;throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + $attr.ngModel +</div><div class='line' id='LC21426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; (&#39; + startingTag($element) + &#39;)&#39;);</div><div class='line' id='LC21427'>&nbsp;&nbsp;}</div><div class='line' id='LC21428'><br/></div><div class='line' id='LC21429'>&nbsp;&nbsp;/**</div><div class='line' id='LC21430'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC21431'>&nbsp;&nbsp;&nbsp;* @name ng.directive:ngModel.NgModelController#$render</div><div class='line' id='LC21432'>&nbsp;&nbsp;&nbsp;* @methodOf ng.directive:ngModel.NgModelController</div><div class='line' id='LC21433'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21434'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC21435'>&nbsp;&nbsp;&nbsp;* Called when the view needs to be updated. It is expected that the user of the ng-model</div><div class='line' id='LC21436'>&nbsp;&nbsp;&nbsp;* directive will implement this method.</div><div class='line' id='LC21437'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC21438'>&nbsp;&nbsp;this.$render = noop;</div><div class='line' id='LC21439'><br/></div><div class='line' id='LC21440'>&nbsp;&nbsp;var parentForm = $element.inheritedData(&#39;$formController&#39;) || nullFormCtrl,</div><div class='line' id='LC21441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalidCount = 0, // used to easily determine if we are valid</div><div class='line' id='LC21442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$error = this.$error = {}; // keep invalid keys here</div><div class='line' id='LC21443'><br/></div><div class='line' id='LC21444'><br/></div><div class='line' id='LC21445'>&nbsp;&nbsp;// Setup initial state of the control</div><div class='line' id='LC21446'>&nbsp;&nbsp;$element.addClass(PRISTINE_CLASS);</div><div class='line' id='LC21447'>&nbsp;&nbsp;toggleValidCss(true);</div><div class='line' id='LC21448'><br/></div><div class='line' id='LC21449'>&nbsp;&nbsp;// convenience method for easy toggling of classes</div><div class='line' id='LC21450'>&nbsp;&nbsp;function toggleValidCss(isValid, validationErrorKey) {</div><div class='line' id='LC21451'>&nbsp;&nbsp;&nbsp;&nbsp;validationErrorKey = validationErrorKey ? &#39;-&#39; + snake_case(validationErrorKey, &#39;-&#39;) : &#39;&#39;;</div><div class='line' id='LC21452'>&nbsp;&nbsp;&nbsp;&nbsp;$element.</div><div class='line' id='LC21453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).</div><div class='line' id='LC21454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);</div><div class='line' id='LC21455'>&nbsp;&nbsp;}</div><div class='line' id='LC21456'><br/></div><div class='line' id='LC21457'>&nbsp;&nbsp;/**</div><div class='line' id='LC21458'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC21459'>&nbsp;&nbsp;&nbsp;* @name ng.directive:ngModel.NgModelController#$setValidity</div><div class='line' id='LC21460'>&nbsp;&nbsp;&nbsp;* @methodOf ng.directive:ngModel.NgModelController</div><div class='line' id='LC21461'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21462'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC21463'>&nbsp;&nbsp;&nbsp;* Change the validity state, and notifies the form when the control changes validity. (i.e. it</div><div class='line' id='LC21464'>&nbsp;&nbsp;&nbsp;* does not notify form if given validator is already marked as invalid).</div><div class='line' id='LC21465'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21466'>&nbsp;&nbsp;&nbsp;* This method should be called by validators - i.e. the parser or formatter functions.</div><div class='line' id='LC21467'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21468'>&nbsp;&nbsp;&nbsp;* @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign</div><div class='line' id='LC21469'>&nbsp;&nbsp;&nbsp;*        to `$error[validationErrorKey]=isValid` so that it is available for data-binding.</div><div class='line' id='LC21470'>&nbsp;&nbsp;&nbsp;*        The `validationErrorKey` should be in camelCase and will get converted into dash-case</div><div class='line' id='LC21471'>&nbsp;&nbsp;&nbsp;*        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`</div><div class='line' id='LC21472'>&nbsp;&nbsp;&nbsp;*        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .</div><div class='line' id='LC21473'>&nbsp;&nbsp;&nbsp;* @param {boolean} isValid Whether the current state is valid (true) or invalid (false).</div><div class='line' id='LC21474'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC21475'>&nbsp;&nbsp;this.$setValidity = function(validationErrorKey, isValid) {</div><div class='line' id='LC21476'>&nbsp;&nbsp;&nbsp;&nbsp;if ($error[validationErrorKey] === !isValid) return;</div><div class='line' id='LC21477'><br/></div><div class='line' id='LC21478'>&nbsp;&nbsp;&nbsp;&nbsp;if (isValid) {</div><div class='line' id='LC21479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($error[validationErrorKey]) invalidCount--;</div><div class='line' id='LC21480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!invalidCount) {</div><div class='line' id='LC21481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(true);</div><div class='line' id='LC21482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$valid = true;</div><div class='line' id='LC21483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$invalid = false;</div><div class='line' id='LC21484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21485'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(false);</div><div class='line' id='LC21487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$invalid = true;</div><div class='line' id='LC21488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$valid = false;</div><div class='line' id='LC21489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalidCount++;</div><div class='line' id='LC21490'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21491'><br/></div><div class='line' id='LC21492'>&nbsp;&nbsp;&nbsp;&nbsp;$error[validationErrorKey] = !isValid;</div><div class='line' id='LC21493'>&nbsp;&nbsp;&nbsp;&nbsp;toggleValidCss(isValid, validationErrorKey);</div><div class='line' id='LC21494'><br/></div><div class='line' id='LC21495'>&nbsp;&nbsp;&nbsp;&nbsp;parentForm.$setValidity(validationErrorKey, isValid, this);</div><div class='line' id='LC21496'>&nbsp;&nbsp;};</div><div class='line' id='LC21497'><br/></div><div class='line' id='LC21498'><br/></div><div class='line' id='LC21499'>&nbsp;&nbsp;/**</div><div class='line' id='LC21500'>&nbsp;&nbsp;&nbsp;* @ngdoc function</div><div class='line' id='LC21501'>&nbsp;&nbsp;&nbsp;* @name ng.directive:ngModel.NgModelController#$setViewValue</div><div class='line' id='LC21502'>&nbsp;&nbsp;&nbsp;* @methodOf ng.directive:ngModel.NgModelController</div><div class='line' id='LC21503'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21504'>&nbsp;&nbsp;&nbsp;* @description</div><div class='line' id='LC21505'>&nbsp;&nbsp;&nbsp;* Read a value from view.</div><div class='line' id='LC21506'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21507'>&nbsp;&nbsp;&nbsp;* This method should be called from within a DOM event handler.</div><div class='line' id='LC21508'>&nbsp;&nbsp;&nbsp;* For example {@link ng.directive:input input} or</div><div class='line' id='LC21509'>&nbsp;&nbsp;&nbsp;* {@link ng.directive:select select} directives call it.</div><div class='line' id='LC21510'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21511'>&nbsp;&nbsp;&nbsp;* It internally calls all `parsers` and if resulted value is valid, updates the model and</div><div class='line' id='LC21512'>&nbsp;&nbsp;&nbsp;* calls all registered change listeners.</div><div class='line' id='LC21513'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC21514'>&nbsp;&nbsp;&nbsp;* @param {string} value Value from the view.</div><div class='line' id='LC21515'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC21516'>&nbsp;&nbsp;this.$setViewValue = function(value) {</div><div class='line' id='LC21517'>&nbsp;&nbsp;&nbsp;&nbsp;this.$viewValue = value;</div><div class='line' id='LC21518'><br/></div><div class='line' id='LC21519'>&nbsp;&nbsp;&nbsp;&nbsp;// change to dirty</div><div class='line' id='LC21520'>&nbsp;&nbsp;&nbsp;&nbsp;if (this.$pristine) {</div><div class='line' id='LC21521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$dirty = true;</div><div class='line' id='LC21522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$pristine = false;</div><div class='line' id='LC21523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);</div><div class='line' id='LC21524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentForm.$setDirty();</div><div class='line' id='LC21525'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21526'><br/></div><div class='line' id='LC21527'>&nbsp;&nbsp;&nbsp;&nbsp;forEach(this.$parsers, function(fn) {</div><div class='line' id='LC21528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = fn(value);</div><div class='line' id='LC21529'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21530'><br/></div><div class='line' id='LC21531'>&nbsp;&nbsp;&nbsp;&nbsp;if (this.$modelValue !== value) {</div><div class='line' id='LC21532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$modelValue = value;</div><div class='line' id='LC21533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelSet($scope, value);</div><div class='line' id='LC21534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(this.$viewChangeListeners, function(listener) {</div><div class='line' id='LC21535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC21536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listener();</div><div class='line' id='LC21537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC21538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$exceptionHandler(e);</div><div class='line' id='LC21539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC21541'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21542'>&nbsp;&nbsp;};</div><div class='line' id='LC21543'><br/></div><div class='line' id='LC21544'>&nbsp;&nbsp;// model -&gt; value</div><div class='line' id='LC21545'>&nbsp;&nbsp;var ctrl = this;</div><div class='line' id='LC21546'><br/></div><div class='line' id='LC21547'>&nbsp;&nbsp;$scope.$watch(function ngModelWatch() {</div><div class='line' id='LC21548'>&nbsp;&nbsp;&nbsp;&nbsp;var value = ngModelGet($scope);</div><div class='line' id='LC21549'><br/></div><div class='line' id='LC21550'>&nbsp;&nbsp;&nbsp;&nbsp;// if scope model value and ngModel value are out of sync</div><div class='line' id='LC21551'>&nbsp;&nbsp;&nbsp;&nbsp;if (ctrl.$modelValue !== value) {</div><div class='line' id='LC21552'><br/></div><div class='line' id='LC21553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var formatters = ctrl.$formatters,</div><div class='line' id='LC21554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;idx = formatters.length;</div><div class='line' id='LC21555'><br/></div><div class='line' id='LC21556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$modelValue = value;</div><div class='line' id='LC21557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(idx--) {</div><div class='line' id='LC21558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = formatters[idx](value);</div><div class='line' id='LC21559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21560'><br/></div><div class='line' id='LC21561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ctrl.$viewValue !== value) {</div><div class='line' id='LC21562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$viewValue = value;</div><div class='line' id='LC21563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$render();</div><div class='line' id='LC21564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21565'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21566'>&nbsp;&nbsp;});</div><div class='line' id='LC21567'>}];</div><div class='line' id='LC21568'><br/></div><div class='line' id='LC21569'><br/></div><div class='line' id='LC21570'>/**</div><div class='line' id='LC21571'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21572'>&nbsp;* @name ng.directive:ngModel</div><div class='line' id='LC21573'>&nbsp;*</div><div class='line' id='LC21574'>&nbsp;* @element input</div><div class='line' id='LC21575'>&nbsp;*</div><div class='line' id='LC21576'>&nbsp;* @description</div><div class='line' id='LC21577'>&nbsp;* Is directive that tells Angular to do two-way data binding. It works together with `input`,</div><div class='line' id='LC21578'>&nbsp;* `select`, `textarea`. You can easily write your own directives to use `ngModel` as well.</div><div class='line' id='LC21579'>&nbsp;*</div><div class='line' id='LC21580'>&nbsp;* `ngModel` is responsible for:</div><div class='line' id='LC21581'>&nbsp;*</div><div class='line' id='LC21582'>&nbsp;* - binding the view into the model, which other directives such as `input`, `textarea` or `select`</div><div class='line' id='LC21583'>&nbsp;*   require,</div><div class='line' id='LC21584'>&nbsp;* - providing validation behavior (i.e. required, number, email, url),</div><div class='line' id='LC21585'>&nbsp;* - keeping state of the control (valid/invalid, dirty/pristine, validation errors),</div><div class='line' id='LC21586'>&nbsp;* - setting related css class onto the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`),</div><div class='line' id='LC21587'>&nbsp;* - register the control with parent {@link ng.directive:form form}.</div><div class='line' id='LC21588'>&nbsp;*</div><div class='line' id='LC21589'>&nbsp;* For basic examples, how to use `ngModel`, see:</div><div class='line' id='LC21590'>&nbsp;*</div><div class='line' id='LC21591'>&nbsp;*  - {@link ng.directive:input input}</div><div class='line' id='LC21592'>&nbsp;*    - {@link ng.directive:input.text text}</div><div class='line' id='LC21593'>&nbsp;*    - {@link ng.directive:input.checkbox checkbox}</div><div class='line' id='LC21594'>&nbsp;*    - {@link ng.directive:input.radio radio}</div><div class='line' id='LC21595'>&nbsp;*    - {@link ng.directive:input.number number}</div><div class='line' id='LC21596'>&nbsp;*    - {@link ng.directive:input.email email}</div><div class='line' id='LC21597'>&nbsp;*    - {@link ng.directive:input.url url}</div><div class='line' id='LC21598'>&nbsp;*  - {@link ng.directive:select select}</div><div class='line' id='LC21599'>&nbsp;*  - {@link ng.directive:textarea textarea}</div><div class='line' id='LC21600'>&nbsp;*</div><div class='line' id='LC21601'>&nbsp;*/</div><div class='line' id='LC21602'>var ngModelDirective = function() {</div><div class='line' id='LC21603'>&nbsp;&nbsp;return {</div><div class='line' id='LC21604'>&nbsp;&nbsp;&nbsp;&nbsp;require: [&#39;ngModel&#39;, &#39;^?form&#39;],</div><div class='line' id='LC21605'>&nbsp;&nbsp;&nbsp;&nbsp;controller: NgModelController,</div><div class='line' id='LC21606'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr, ctrls) {</div><div class='line' id='LC21607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// notify others, especially parent forms</div><div class='line' id='LC21608'><br/></div><div class='line' id='LC21609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var modelCtrl = ctrls[0],</div><div class='line' id='LC21610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formCtrl = ctrls[1] || nullFormCtrl;</div><div class='line' id='LC21611'><br/></div><div class='line' id='LC21612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formCtrl.$addControl(modelCtrl);</div><div class='line' id='LC21613'><br/></div><div class='line' id='LC21614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;$destroy&#39;, function() {</div><div class='line' id='LC21615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formCtrl.$removeControl(modelCtrl);</div><div class='line' id='LC21616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21617'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21618'>&nbsp;&nbsp;};</div><div class='line' id='LC21619'>};</div><div class='line' id='LC21620'><br/></div><div class='line' id='LC21621'><br/></div><div class='line' id='LC21622'>/**</div><div class='line' id='LC21623'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21624'>&nbsp;* @name ng.directive:ngChange</div><div class='line' id='LC21625'>&nbsp;* @restrict E</div><div class='line' id='LC21626'>&nbsp;*</div><div class='line' id='LC21627'>&nbsp;* @description</div><div class='line' id='LC21628'>&nbsp;* Evaluate given expression when user changes the input.</div><div class='line' id='LC21629'>&nbsp;* The expression is not evaluated when the value change is coming from the model.</div><div class='line' id='LC21630'>&nbsp;*</div><div class='line' id='LC21631'>&nbsp;* Note, this directive requires `ngModel` to be present.</div><div class='line' id='LC21632'>&nbsp;*</div><div class='line' id='LC21633'>&nbsp;* @element input</div><div class='line' id='LC21634'>&nbsp;*</div><div class='line' id='LC21635'>&nbsp;* @example</div><div class='line' id='LC21636'>&nbsp;* &lt;doc:example&gt;</div><div class='line' id='LC21637'>&nbsp;*   &lt;doc:source&gt;</div><div class='line' id='LC21638'>&nbsp;*     &lt;script&gt;</div><div class='line' id='LC21639'>&nbsp;*       function Controller($scope) {</div><div class='line' id='LC21640'>&nbsp;*         $scope.counter = 0;</div><div class='line' id='LC21641'>&nbsp;*         $scope.change = function() {</div><div class='line' id='LC21642'>&nbsp;*           $scope.counter++;</div><div class='line' id='LC21643'>&nbsp;*         };</div><div class='line' id='LC21644'>&nbsp;*       }</div><div class='line' id='LC21645'>&nbsp;*     &lt;/script&gt;</div><div class='line' id='LC21646'>&nbsp;*     &lt;div ng-controller=&quot;Controller&quot;&gt;</div><div class='line' id='LC21647'>&nbsp;*       &lt;input type=&quot;checkbox&quot; ng-model=&quot;confirmed&quot; ng-change=&quot;change()&quot; id=&quot;ng-change-example1&quot; /&gt;</div><div class='line' id='LC21648'>&nbsp;*       &lt;input type=&quot;checkbox&quot; ng-model=&quot;confirmed&quot; id=&quot;ng-change-example2&quot; /&gt;</div><div class='line' id='LC21649'>&nbsp;*       &lt;label for=&quot;ng-change-example2&quot;&gt;Confirmed&lt;/label&gt;&lt;br /&gt;</div><div class='line' id='LC21650'>&nbsp;*       debug = {{confirmed}}&lt;br /&gt;</div><div class='line' id='LC21651'>&nbsp;*       counter = {{counter}}</div><div class='line' id='LC21652'>&nbsp;*     &lt;/div&gt;</div><div class='line' id='LC21653'>&nbsp;*   &lt;/doc:source&gt;</div><div class='line' id='LC21654'>&nbsp;*   &lt;doc:scenario&gt;</div><div class='line' id='LC21655'>&nbsp;*     it(&#39;should evaluate the expression if changing from view&#39;, function() {</div><div class='line' id='LC21656'>&nbsp;*       expect(binding(&#39;counter&#39;)).toEqual(&#39;0&#39;);</div><div class='line' id='LC21657'>&nbsp;*       element(&#39;#ng-change-example1&#39;).click();</div><div class='line' id='LC21658'>&nbsp;*       expect(binding(&#39;counter&#39;)).toEqual(&#39;1&#39;);</div><div class='line' id='LC21659'>&nbsp;*       expect(binding(&#39;confirmed&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21660'>&nbsp;*     });</div><div class='line' id='LC21661'>&nbsp;*</div><div class='line' id='LC21662'>&nbsp;*     it(&#39;should not evaluate the expression if changing from model&#39;, function() {</div><div class='line' id='LC21663'>&nbsp;*       element(&#39;#ng-change-example2&#39;).click();</div><div class='line' id='LC21664'>&nbsp;*       expect(binding(&#39;counter&#39;)).toEqual(&#39;0&#39;);</div><div class='line' id='LC21665'>&nbsp;*       expect(binding(&#39;confirmed&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21666'>&nbsp;*     });</div><div class='line' id='LC21667'>&nbsp;*   &lt;/doc:scenario&gt;</div><div class='line' id='LC21668'>&nbsp;* &lt;/doc:example&gt;</div><div class='line' id='LC21669'>&nbsp;*/</div><div class='line' id='LC21670'>var ngChangeDirective = valueFn({</div><div class='line' id='LC21671'>&nbsp;&nbsp;require: &#39;ngModel&#39;,</div><div class='line' id='LC21672'>&nbsp;&nbsp;link: function(scope, element, attr, ctrl) {</div><div class='line' id='LC21673'>&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$viewChangeListeners.push(function() {</div><div class='line' id='LC21674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$eval(attr.ngChange);</div><div class='line' id='LC21675'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21676'>&nbsp;&nbsp;}</div><div class='line' id='LC21677'>});</div><div class='line' id='LC21678'><br/></div><div class='line' id='LC21679'><br/></div><div class='line' id='LC21680'>var requiredDirective = function() {</div><div class='line' id='LC21681'>&nbsp;&nbsp;return {</div><div class='line' id='LC21682'>&nbsp;&nbsp;&nbsp;&nbsp;require: &#39;?ngModel&#39;,</div><div class='line' id='LC21683'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, elm, attr, ctrl) {</div><div class='line' id='LC21684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!ctrl) return;</div><div class='line' id='LC21685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.required = true; // force truthy in case we are on non input element</div><div class='line' id='LC21686'><br/></div><div class='line' id='LC21687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var validator = function(value) {</div><div class='line' id='LC21688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (attr.required &amp;&amp; (isEmpty(value) || value === false)) {</div><div class='line' id='LC21689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;required&#39;, false);</div><div class='line' id='LC21690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC21691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setValidity(&#39;required&#39;, true);</div><div class='line' id='LC21693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC21694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21696'><br/></div><div class='line' id='LC21697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(validator);</div><div class='line' id='LC21698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.unshift(validator);</div><div class='line' id='LC21699'><br/></div><div class='line' id='LC21700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$observe(&#39;required&#39;, function() {</div><div class='line' id='LC21701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator(ctrl.$viewValue);</div><div class='line' id='LC21702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21703'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21704'>&nbsp;&nbsp;};</div><div class='line' id='LC21705'>};</div><div class='line' id='LC21706'><br/></div><div class='line' id='LC21707'><br/></div><div class='line' id='LC21708'>/**</div><div class='line' id='LC21709'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21710'>&nbsp;* @name ng.directive:ngList</div><div class='line' id='LC21711'>&nbsp;*</div><div class='line' id='LC21712'>&nbsp;* @description</div><div class='line' id='LC21713'>&nbsp;* Text input that converts between comma-separated string into an array of strings.</div><div class='line' id='LC21714'>&nbsp;*</div><div class='line' id='LC21715'>&nbsp;* @element input</div><div class='line' id='LC21716'>&nbsp;* @param {string=} ngList optional delimiter that should be used to split the value. If</div><div class='line' id='LC21717'>&nbsp;*   specified in form `/something/` then the value will be converted into a regular expression.</div><div class='line' id='LC21718'>&nbsp;*</div><div class='line' id='LC21719'>&nbsp;* @example</div><div class='line' id='LC21720'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC21721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC21722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC21723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC21724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.names = [&#39;igor&#39;, &#39;misko&#39;, &#39;vojta&#39;];</div><div class='line' id='LC21725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC21727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC21728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List: &lt;input name=&quot;namesInput&quot; ng-model=&quot;names&quot; ng-list required&gt;</div><div class='line' id='LC21729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.required&quot;&gt;</div><div class='line' id='LC21730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Required!&lt;/span&gt;</div><div class='line' id='LC21731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;names = {{names}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.namesInput.$valid = {{myForm.namesInput.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.namesInput.$error = {{myForm.namesInput.$error}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</div><div class='line' id='LC21736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC21737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC21738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC21739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should initialize to model&#39;, function() {</div><div class='line' id='LC21740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;names&#39;)).toEqual(&#39;[&quot;igor&quot;,&quot;misko&quot;,&quot;vojta&quot;]&#39;);</div><div class='line' id='LC21741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.namesInput.$valid&#39;)).toEqual(&#39;true&#39;);</div><div class='line' id='LC21742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21743'><br/></div><div class='line' id='LC21744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should be invalid if empty&#39;, function() {</div><div class='line' id='LC21745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;names&#39;).enter(&#39;&#39;);</div><div class='line' id='LC21746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;names&#39;)).toEqual(&#39;[]&#39;);</div><div class='line' id='LC21747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;myForm.namesInput.$valid&#39;)).toEqual(&#39;false&#39;);</div><div class='line' id='LC21748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC21750'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC21751'>&nbsp;*/</div><div class='line' id='LC21752'>var ngListDirective = function() {</div><div class='line' id='LC21753'>&nbsp;&nbsp;return {</div><div class='line' id='LC21754'>&nbsp;&nbsp;&nbsp;&nbsp;require: &#39;ngModel&#39;,</div><div class='line' id='LC21755'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr, ctrl) {</div><div class='line' id='LC21756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = /\/(.*)\//.exec(attr.ngList),</div><div class='line' id='LC21757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;separator = match &amp;&amp; new RegExp(match[1]) || attr.ngList || &#39;,&#39;;</div><div class='line' id='LC21758'><br/></div><div class='line' id='LC21759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parse = function(viewValue) {</div><div class='line' id='LC21760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var list = [];</div><div class='line' id='LC21761'><br/></div><div class='line' id='LC21762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (viewValue) {</div><div class='line' id='LC21763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(viewValue.split(separator), function(value) {</div><div class='line' id='LC21764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value) list.push(trim(value));</div><div class='line' id='LC21765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21767'><br/></div><div class='line' id='LC21768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return list;</div><div class='line' id='LC21769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21770'><br/></div><div class='line' id='LC21771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$parsers.push(parse);</div><div class='line' id='LC21772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$formatters.push(function(value) {</div><div class='line' id='LC21773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isArray(value)) {</div><div class='line' id='LC21774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.join(&#39;, &#39;);</div><div class='line' id='LC21775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21776'><br/></div><div class='line' id='LC21777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return undefined;</div><div class='line' id='LC21778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21779'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21780'>&nbsp;&nbsp;};</div><div class='line' id='LC21781'>};</div><div class='line' id='LC21782'><br/></div><div class='line' id='LC21783'><br/></div><div class='line' id='LC21784'>var CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/;</div><div class='line' id='LC21785'><br/></div><div class='line' id='LC21786'>var ngValueDirective = function() {</div><div class='line' id='LC21787'>&nbsp;&nbsp;return {</div><div class='line' id='LC21788'>&nbsp;&nbsp;&nbsp;&nbsp;priority: 100,</div><div class='line' id='LC21789'>&nbsp;&nbsp;&nbsp;&nbsp;compile: function(tpl, tplAttr) {</div><div class='line' id='LC21790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {</div><div class='line' id='LC21791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, elm, attr) {</div><div class='line' id='LC21792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;value&#39;, scope.$eval(attr.ngValue));</div><div class='line' id='LC21793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, elm, attr) {</div><div class='line' id='LC21796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(attr.ngValue, function valueWatchAction(value) {</div><div class='line' id='LC21797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;value&#39;, value, false);</div><div class='line' id='LC21798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC21800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21801'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21802'>&nbsp;&nbsp;};</div><div class='line' id='LC21803'>};</div><div class='line' id='LC21804'><br/></div><div class='line' id='LC21805'>/**</div><div class='line' id='LC21806'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21807'>&nbsp;* @name ng.directive:ngBind</div><div class='line' id='LC21808'>&nbsp;*</div><div class='line' id='LC21809'>&nbsp;* @description</div><div class='line' id='LC21810'>&nbsp;* The `ngBind` attribute tells Angular to replace the text content of the specified HTML element</div><div class='line' id='LC21811'>&nbsp;* with the value of a given expression, and to update the text content when the value of that</div><div class='line' id='LC21812'>&nbsp;* expression changes.</div><div class='line' id='LC21813'>&nbsp;*</div><div class='line' id='LC21814'>&nbsp;* Typically, you don&#39;t use `ngBind` directly, but instead you use the double curly markup like</div><div class='line' id='LC21815'>&nbsp;* `{{ expression }}` which is similar but less verbose.</div><div class='line' id='LC21816'>&nbsp;*</div><div class='line' id='LC21817'>&nbsp;* One scenario in which the use of `ngBind` is preferred over `{{ expression }}` binding is when</div><div class='line' id='LC21818'>&nbsp;* it&#39;s desirable to put bindings into template that is momentarily displayed by the browser in its</div><div class='line' id='LC21819'>&nbsp;* raw state before Angular compiles it. Since `ngBind` is an element attribute, it makes the</div><div class='line' id='LC21820'>&nbsp;* bindings invisible to the user while the page is loading.</div><div class='line' id='LC21821'>&nbsp;*</div><div class='line' id='LC21822'>&nbsp;* An alternative solution to this problem would be using the</div><div class='line' id='LC21823'>&nbsp;* {@link ng.directive:ngCloak ngCloak} directive.</div><div class='line' id='LC21824'>&nbsp;*</div><div class='line' id='LC21825'>&nbsp;*</div><div class='line' id='LC21826'>&nbsp;* @element ANY</div><div class='line' id='LC21827'>&nbsp;* @param {expression} ngBind {@link guide/expression Expression} to evaluate.</div><div class='line' id='LC21828'>&nbsp;*</div><div class='line' id='LC21829'>&nbsp;* @example</div><div class='line' id='LC21830'>&nbsp;* Enter a name in the Live Preview text box; the greeting below the text box changes instantly.</div><div class='line' id='LC21831'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC21832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC21833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC21834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC21835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &#39;Whirled&#39;;</div><div class='line' id='LC21836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC21838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC21839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enter name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;&gt;&lt;br&gt;</div><div class='line' id='LC21840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello &lt;span ng-bind=&quot;name&quot;&gt;&lt;/span&gt;!</div><div class='line' id='LC21841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC21842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC21843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC21844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-bind&#39;, function() {</div><div class='line' id='LC21845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).toBe(&#39;Whirled&#39;);</div><div class='line' id='LC21846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;name&#39;).enter(&#39;world&#39;);</div><div class='line' id='LC21847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).toBe(&#39;world&#39;);</div><div class='line' id='LC21848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC21850'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC21851'>&nbsp;*/</div><div class='line' id='LC21852'>var ngBindDirective = ngDirective(function(scope, element, attr) {</div><div class='line' id='LC21853'>&nbsp;&nbsp;element.addClass(&#39;ng-binding&#39;).data(&#39;$binding&#39;, attr.ngBind);</div><div class='line' id='LC21854'>&nbsp;&nbsp;scope.$watch(attr.ngBind, function ngBindWatchAction(value) {</div><div class='line' id='LC21855'>&nbsp;&nbsp;&nbsp;&nbsp;element.text(value == undefined ? &#39;&#39; : value);</div><div class='line' id='LC21856'>&nbsp;&nbsp;});</div><div class='line' id='LC21857'>});</div><div class='line' id='LC21858'><br/></div><div class='line' id='LC21859'><br/></div><div class='line' id='LC21860'>/**</div><div class='line' id='LC21861'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21862'>&nbsp;* @name ng.directive:ngBindTemplate</div><div class='line' id='LC21863'>&nbsp;*</div><div class='line' id='LC21864'>&nbsp;* @description</div><div class='line' id='LC21865'>&nbsp;* The `ngBindTemplate` directive specifies that the element</div><div class='line' id='LC21866'>&nbsp;* text should be replaced with the template in ngBindTemplate.</div><div class='line' id='LC21867'>&nbsp;* Unlike ngBind the ngBindTemplate can contain multiple `{{` `}}`</div><div class='line' id='LC21868'>&nbsp;* expressions. (This is required since some HTML elements</div><div class='line' id='LC21869'>&nbsp;* can not have SPAN elements such as TITLE, or OPTION to name a few.)</div><div class='line' id='LC21870'>&nbsp;*</div><div class='line' id='LC21871'>&nbsp;* @element ANY</div><div class='line' id='LC21872'>&nbsp;* @param {string} ngBindTemplate template of form</div><div class='line' id='LC21873'>&nbsp;*   &lt;tt&gt;{{&lt;/tt&gt; &lt;tt&gt;expression&lt;/tt&gt; &lt;tt&gt;}}&lt;/tt&gt; to eval.</div><div class='line' id='LC21874'>&nbsp;*</div><div class='line' id='LC21875'>&nbsp;* @example</div><div class='line' id='LC21876'>&nbsp;* Try it here: enter text in text box and watch the greeting change.</div><div class='line' id='LC21877'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC21878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC21879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC21880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC21881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.salutation = &#39;Hello&#39;;</div><div class='line' id='LC21882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &#39;World&#39;;</div><div class='line' id='LC21883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC21885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC21886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salutation: &lt;input type=&quot;text&quot; ng-model=&quot;salutation&quot;&gt;&lt;br&gt;</div><div class='line' id='LC21887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;&gt;&lt;br&gt;</div><div class='line' id='LC21888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre ng-bind-template=&quot;{{salutation}} {{name}}!&quot;&gt;&lt;/pre&gt;</div><div class='line' id='LC21889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC21890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC21891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC21892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-bind&#39;, function() {</div><div class='line' id='LC21893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;salutation&#39;)).</div><div class='line' id='LC21894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Hello&#39;);</div><div class='line' id='LC21895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).</div><div class='line' id='LC21896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;World&#39;);</div><div class='line' id='LC21897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;salutation&#39;).enter(&#39;Greetings&#39;);</div><div class='line' id='LC21898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;name&#39;).enter(&#39;user&#39;);</div><div class='line' id='LC21899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;salutation&#39;)).</div><div class='line' id='LC21900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Greetings&#39;);</div><div class='line' id='LC21901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).</div><div class='line' id='LC21902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;user&#39;);</div><div class='line' id='LC21903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC21905'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC21906'>&nbsp;*/</div><div class='line' id='LC21907'>var ngBindTemplateDirective = [&#39;$interpolate&#39;, function($interpolate) {</div><div class='line' id='LC21908'>&nbsp;&nbsp;return function(scope, element, attr) {</div><div class='line' id='LC21909'>&nbsp;&nbsp;&nbsp;&nbsp;// TODO: move this to scenario runner</div><div class='line' id='LC21910'>&nbsp;&nbsp;&nbsp;&nbsp;var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));</div><div class='line' id='LC21911'>&nbsp;&nbsp;&nbsp;&nbsp;element.addClass(&#39;ng-binding&#39;).data(&#39;$binding&#39;, interpolateFn);</div><div class='line' id='LC21912'>&nbsp;&nbsp;&nbsp;&nbsp;attr.$observe(&#39;ngBindTemplate&#39;, function(value) {</div><div class='line' id='LC21913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.text(value);</div><div class='line' id='LC21914'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21915'>&nbsp;&nbsp;}</div><div class='line' id='LC21916'>}];</div><div class='line' id='LC21917'><br/></div><div class='line' id='LC21918'><br/></div><div class='line' id='LC21919'>/**</div><div class='line' id='LC21920'>&nbsp;* @ngdoc directive</div><div class='line' id='LC21921'>&nbsp;* @name ng.directive:ngBindHtmlUnsafe</div><div class='line' id='LC21922'>&nbsp;*</div><div class='line' id='LC21923'>&nbsp;* @description</div><div class='line' id='LC21924'>&nbsp;* Creates a binding that will innerHTML the result of evaluating the `expression` into the current</div><div class='line' id='LC21925'>&nbsp;* element. *The innerHTML-ed content will not be sanitized!* You should use this directive only if</div><div class='line' id='LC21926'>&nbsp;* {@link ngSanitize.directive:ngBindHtml ngBindHtml} directive is too</div><div class='line' id='LC21927'>&nbsp;* restrictive and when you absolutely trust the source of the content you are binding to.</div><div class='line' id='LC21928'>&nbsp;*</div><div class='line' id='LC21929'>&nbsp;* See {@link ngSanitize.$sanitize $sanitize} docs for examples.</div><div class='line' id='LC21930'>&nbsp;*</div><div class='line' id='LC21931'>&nbsp;* @element ANY</div><div class='line' id='LC21932'>&nbsp;* @param {expression} ngBindHtmlUnsafe {@link guide/expression Expression} to evaluate.</div><div class='line' id='LC21933'>&nbsp;*/</div><div class='line' id='LC21934'>var ngBindHtmlUnsafeDirective = [function() {</div><div class='line' id='LC21935'>&nbsp;&nbsp;return function(scope, element, attr) {</div><div class='line' id='LC21936'>&nbsp;&nbsp;&nbsp;&nbsp;element.addClass(&#39;ng-binding&#39;).data(&#39;$binding&#39;, attr.ngBindHtmlUnsafe);</div><div class='line' id='LC21937'>&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {</div><div class='line' id='LC21938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(value || &#39;&#39;);</div><div class='line' id='LC21939'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21940'>&nbsp;&nbsp;};</div><div class='line' id='LC21941'>}];</div><div class='line' id='LC21942'><br/></div><div class='line' id='LC21943'>function classDirective(name, selector) {</div><div class='line' id='LC21944'>&nbsp;&nbsp;name = &#39;ngClass&#39; + name;</div><div class='line' id='LC21945'>&nbsp;&nbsp;return ngDirective(function(scope, element, attr) {</div><div class='line' id='LC21946'>&nbsp;&nbsp;&nbsp;&nbsp;var oldVal = undefined;</div><div class='line' id='LC21947'><br/></div><div class='line' id='LC21948'>&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(attr[name], ngClassWatchAction, true);</div><div class='line' id='LC21949'><br/></div><div class='line' id='LC21950'>&nbsp;&nbsp;&nbsp;&nbsp;attr.$observe(&#39;class&#39;, function(value) {</div><div class='line' id='LC21951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ngClass = scope.$eval(attr[name]);</div><div class='line' id='LC21952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngClassWatchAction(ngClass, ngClass);</div><div class='line' id='LC21953'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21954'><br/></div><div class='line' id='LC21955'><br/></div><div class='line' id='LC21956'>&nbsp;&nbsp;&nbsp;&nbsp;if (name !== &#39;ngClass&#39;) {</div><div class='line' id='LC21957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(&#39;$index&#39;, function($index, old$index) {</div><div class='line' id='LC21958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mod = $index &amp; 1;</div><div class='line' id='LC21959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mod !== old$index &amp; 1) {</div><div class='line' id='LC21960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mod === selector) {</div><div class='line' id='LC21961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addClass(scope.$eval(attr[name]));</div><div class='line' id='LC21962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC21963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeClass(scope.$eval(attr[name]));</div><div class='line' id='LC21964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC21967'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21968'><br/></div><div class='line' id='LC21969'><br/></div><div class='line' id='LC21970'>&nbsp;&nbsp;&nbsp;&nbsp;function ngClassWatchAction(newVal) {</div><div class='line' id='LC21971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (selector === true || scope.$index % 2 === selector) {</div><div class='line' id='LC21972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (oldVal &amp;&amp; !equals(newVal,oldVal)) {</div><div class='line' id='LC21973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeClass(oldVal);</div><div class='line' id='LC21974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addClass(newVal);</div><div class='line' id='LC21976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldVal = copy(newVal);</div><div class='line' id='LC21978'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21979'><br/></div><div class='line' id='LC21980'><br/></div><div class='line' id='LC21981'>&nbsp;&nbsp;&nbsp;&nbsp;function removeClass(classVal) {</div><div class='line' id='LC21982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(classVal) &amp;&amp; !isArray(classVal)) {</div><div class='line' id='LC21983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classVal = map(classVal, function(v, k) { if (v) return k });</div><div class='line' id='LC21984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.removeClass(isArray(classVal) ? classVal.join(&#39; &#39;) : classVal);</div><div class='line' id='LC21986'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21987'><br/></div><div class='line' id='LC21988'><br/></div><div class='line' id='LC21989'>&nbsp;&nbsp;&nbsp;&nbsp;function addClass(classVal) {</div><div class='line' id='LC21990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isObject(classVal) &amp;&amp; !isArray(classVal)) {</div><div class='line' id='LC21991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classVal = map(classVal, function(v, k) { if (v) return k });</div><div class='line' id='LC21992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (classVal) {</div><div class='line' id='LC21994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.addClass(isArray(classVal) ? classVal.join(&#39; &#39;) : classVal);</div><div class='line' id='LC21995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21996'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC21997'>&nbsp;&nbsp;});</div><div class='line' id='LC21998'>}</div><div class='line' id='LC21999'><br/></div><div class='line' id='LC22000'>/**</div><div class='line' id='LC22001'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22002'>&nbsp;* @name ng.directive:ngClass</div><div class='line' id='LC22003'>&nbsp;*</div><div class='line' id='LC22004'>&nbsp;* @description</div><div class='line' id='LC22005'>&nbsp;* The `ngClass` allows you to set CSS class on HTML element dynamically by databinding an</div><div class='line' id='LC22006'>&nbsp;* expression that represents all classes to be added.</div><div class='line' id='LC22007'>&nbsp;*</div><div class='line' id='LC22008'>&nbsp;* The directive won&#39;t add duplicate classes if a particular class was already set.</div><div class='line' id='LC22009'>&nbsp;*</div><div class='line' id='LC22010'>&nbsp;* When the expression changes, the previously added classes are removed and only then the</div><div class='line' id='LC22011'>&nbsp;* new classes are added.</div><div class='line' id='LC22012'>&nbsp;*</div><div class='line' id='LC22013'>&nbsp;* @element ANY</div><div class='line' id='LC22014'>&nbsp;* @param {expression} ngClass {@link guide/expression Expression} to eval. The result</div><div class='line' id='LC22015'>&nbsp;*   of the evaluation can be a string representing space delimited class</div><div class='line' id='LC22016'>&nbsp;*   names, an array, or a map of class names to boolean values.</div><div class='line' id='LC22017'>&nbsp;*</div><div class='line' id='LC22018'>&nbsp;* @example</div><div class='line' id='LC22019'>&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC22020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC22021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;button&quot; value=&quot;set&quot; ng-click=&quot;myVar=&#39;my-class&#39;&quot;&gt;</div><div class='line' id='LC22022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;button&quot; value=&quot;clear&quot; ng-click=&quot;myVar=&#39;&#39;&quot;&gt;</div><div class='line' id='LC22023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</div><div class='line' id='LC22024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-class=&quot;myVar&quot;&gt;Sample Text&lt;/span&gt;</div><div class='line' id='LC22025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;style.css&quot;&gt;</div><div class='line' id='LC22027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.my-class {</div><div class='line' id='LC22028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: red;</div><div class='line' id='LC22029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC22032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-class&#39;, function() {</div><div class='line' id='LC22033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).not().</div><div class='line' id='LC22034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/my-class/);</div><div class='line' id='LC22035'><br/></div><div class='line' id='LC22036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).element(&#39;:button:first&#39;).click();</div><div class='line' id='LC22037'><br/></div><div class='line' id='LC22038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).</div><div class='line' id='LC22039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/my-class/);</div><div class='line' id='LC22040'><br/></div><div class='line' id='LC22041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).element(&#39;:button:last&#39;).click();</div><div class='line' id='LC22042'><br/></div><div class='line' id='LC22043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).not().</div><div class='line' id='LC22044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/my-class/);</div><div class='line' id='LC22045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22047'>&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC22048'>&nbsp;*/</div><div class='line' id='LC22049'>var ngClassDirective = classDirective(&#39;&#39;, true);</div><div class='line' id='LC22050'><br/></div><div class='line' id='LC22051'>/**</div><div class='line' id='LC22052'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22053'>&nbsp;* @name ng.directive:ngClassOdd</div><div class='line' id='LC22054'>&nbsp;*</div><div class='line' id='LC22055'>&nbsp;* @description</div><div class='line' id='LC22056'>&nbsp;* The `ngClassOdd` and `ngClassEven` directives work exactly as</div><div class='line' id='LC22057'>&nbsp;* {@link ng.directive:ngClass ngClass}, except it works in</div><div class='line' id='LC22058'>&nbsp;* conjunction with `ngRepeat` and takes affect only on odd (even) rows.</div><div class='line' id='LC22059'>&nbsp;*</div><div class='line' id='LC22060'>&nbsp;* This directive can be applied only within a scope of an</div><div class='line' id='LC22061'>&nbsp;* {@link ng.directive:ngRepeat ngRepeat}.</div><div class='line' id='LC22062'>&nbsp;*</div><div class='line' id='LC22063'>&nbsp;* @element ANY</div><div class='line' id='LC22064'>&nbsp;* @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result</div><div class='line' id='LC22065'>&nbsp;*   of the evaluation can be a string representing space delimited class names or an array.</div><div class='line' id='LC22066'>&nbsp;*</div><div class='line' id='LC22067'>&nbsp;* @example</div><div class='line' id='LC22068'>&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC22069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC22070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ol ng-init=&quot;names=[&#39;John&#39;, &#39;Mary&#39;, &#39;Cate&#39;, &#39;Suz&#39;]&quot;&gt;</div><div class='line' id='LC22071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li ng-repeat=&quot;name in names&quot;&gt;</div><div class='line' id='LC22072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-class-odd=&quot;&#39;odd&#39;&quot; ng-class-even=&quot;&#39;even&#39;&quot;&gt;</div><div class='line' id='LC22073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{name}}</div><div class='line' id='LC22074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;</div><div class='line' id='LC22075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC22076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ol&gt;</div><div class='line' id='LC22077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;style.css&quot;&gt;</div><div class='line' id='LC22079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.odd {</div><div class='line' id='LC22080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: red;</div><div class='line' id='LC22081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.even {</div><div class='line' id='LC22083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: blue;</div><div class='line' id='LC22084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC22087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-class-odd and ng-class-even&#39;, function() {</div><div class='line' id='LC22088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:first span&#39;).prop(&#39;className&#39;)).</div><div class='line' id='LC22089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/odd/);</div><div class='line' id='LC22090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:last span&#39;).prop(&#39;className&#39;)).</div><div class='line' id='LC22091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/even/);</div><div class='line' id='LC22092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22094'>&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC22095'>&nbsp;*/</div><div class='line' id='LC22096'>var ngClassOddDirective = classDirective(&#39;Odd&#39;, 0);</div><div class='line' id='LC22097'><br/></div><div class='line' id='LC22098'>/**</div><div class='line' id='LC22099'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22100'>&nbsp;* @name ng.directive:ngClassEven</div><div class='line' id='LC22101'>&nbsp;*</div><div class='line' id='LC22102'>&nbsp;* @description</div><div class='line' id='LC22103'>&nbsp;* The `ngClassOdd` and `ngClassEven` directives work exactly as</div><div class='line' id='LC22104'>&nbsp;* {@link ng.directive:ngClass ngClass}, except it works in</div><div class='line' id='LC22105'>&nbsp;* conjunction with `ngRepeat` and takes affect only on odd (even) rows.</div><div class='line' id='LC22106'>&nbsp;*</div><div class='line' id='LC22107'>&nbsp;* This directive can be applied only within a scope of an</div><div class='line' id='LC22108'>&nbsp;* {@link ng.directive:ngRepeat ngRepeat}.</div><div class='line' id='LC22109'>&nbsp;*</div><div class='line' id='LC22110'>&nbsp;* @element ANY</div><div class='line' id='LC22111'>&nbsp;* @param {expression} ngClassEven {@link guide/expression Expression} to eval. The</div><div class='line' id='LC22112'>&nbsp;*   result of the evaluation can be a string representing space delimited class names or an array.</div><div class='line' id='LC22113'>&nbsp;*</div><div class='line' id='LC22114'>&nbsp;* @example</div><div class='line' id='LC22115'>&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC22116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC22117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ol ng-init=&quot;names=[&#39;John&#39;, &#39;Mary&#39;, &#39;Cate&#39;, &#39;Suz&#39;]&quot;&gt;</div><div class='line' id='LC22118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li ng-repeat=&quot;name in names&quot;&gt;</div><div class='line' id='LC22119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-class-odd=&quot;&#39;odd&#39;&quot; ng-class-even=&quot;&#39;even&#39;&quot;&gt;</div><div class='line' id='LC22120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{name}} &amp;nbsp; &amp;nbsp; &amp;nbsp;</div><div class='line' id='LC22121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;</div><div class='line' id='LC22122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC22123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ol&gt;</div><div class='line' id='LC22124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;style.css&quot;&gt;</div><div class='line' id='LC22126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.odd {</div><div class='line' id='LC22127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: red;</div><div class='line' id='LC22128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.even {</div><div class='line' id='LC22130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: blue;</div><div class='line' id='LC22131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC22134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-class-odd and ng-class-even&#39;, function() {</div><div class='line' id='LC22135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:first span&#39;).prop(&#39;className&#39;)).</div><div class='line' id='LC22136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/odd/);</div><div class='line' id='LC22137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:last span&#39;).prop(&#39;className&#39;)).</div><div class='line' id='LC22138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/even/);</div><div class='line' id='LC22139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22141'>&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC22142'>&nbsp;*/</div><div class='line' id='LC22143'>var ngClassEvenDirective = classDirective(&#39;Even&#39;, 1);</div><div class='line' id='LC22144'><br/></div><div class='line' id='LC22145'>/**</div><div class='line' id='LC22146'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22147'>&nbsp;* @name ng.directive:ngCloak</div><div class='line' id='LC22148'>&nbsp;*</div><div class='line' id='LC22149'>&nbsp;* @description</div><div class='line' id='LC22150'>&nbsp;* The `ngCloak` directive is used to prevent the Angular html template from being briefly</div><div class='line' id='LC22151'>&nbsp;* displayed by the browser in its raw (uncompiled) form while your application is loading. Use this</div><div class='line' id='LC22152'>&nbsp;* directive to avoid the undesirable flicker effect caused by the html template display.</div><div class='line' id='LC22153'>&nbsp;*</div><div class='line' id='LC22154'>&nbsp;* The directive can be applied to the `&lt;body&gt;` element, but typically a fine-grained application is</div><div class='line' id='LC22155'>&nbsp;* prefered in order to benefit from progressive rendering of the browser view.</div><div class='line' id='LC22156'>&nbsp;*</div><div class='line' id='LC22157'>&nbsp;* `ngCloak` works in cooperation with a css rule that is embedded within `angular.js` and</div><div class='line' id='LC22158'>&nbsp;*  `angular.min.js` files. Following is the css rule:</div><div class='line' id='LC22159'>&nbsp;*</div><div class='line' id='LC22160'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC22161'>&nbsp;* [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {</div><div class='line' id='LC22162'>&nbsp;*   display: none;</div><div class='line' id='LC22163'>&nbsp;* }</div><div class='line' id='LC22164'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC22165'>&nbsp;*</div><div class='line' id='LC22166'>&nbsp;* When this css rule is loaded by the browser, all html elements (including their children) that</div><div class='line' id='LC22167'>&nbsp;* are tagged with the `ng-cloak` directive are hidden. When Angular comes across this directive</div><div class='line' id='LC22168'>&nbsp;* during the compilation of the template it deletes the `ngCloak` element attribute, which</div><div class='line' id='LC22169'>&nbsp;* makes the compiled element visible.</div><div class='line' id='LC22170'>&nbsp;*</div><div class='line' id='LC22171'>&nbsp;* For the best result, `angular.js` script must be loaded in the head section of the html file;</div><div class='line' id='LC22172'>&nbsp;* alternatively, the css rule (above) must be included in the external stylesheet of the</div><div class='line' id='LC22173'>&nbsp;* application.</div><div class='line' id='LC22174'>&nbsp;*</div><div class='line' id='LC22175'>&nbsp;* Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they</div><div class='line' id='LC22176'>&nbsp;* cannot match the `[ng\:cloak]` selector. To work around this limitation, you must add the css</div><div class='line' id='LC22177'>&nbsp;* class `ngCloak` in addition to `ngCloak` directive as shown in the example below.</div><div class='line' id='LC22178'>&nbsp;*</div><div class='line' id='LC22179'>&nbsp;* @element ANY</div><div class='line' id='LC22180'>&nbsp;*</div><div class='line' id='LC22181'>&nbsp;* @example</div><div class='line' id='LC22182'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;template1&quot; ng-cloak&gt;{{ &#39;hello&#39; }}&lt;/div&gt;</div><div class='line' id='LC22185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;template2&quot; ng-cloak class=&quot;ng-cloak&quot;&gt;{{ &#39;hello IE7&#39; }}&lt;/div&gt;</div><div class='line' id='LC22186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should remove the template directive and css class&#39;, function() {</div><div class='line' id='LC22189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #template1&#39;).attr(&#39;ng-cloak&#39;)).</div><div class='line' id='LC22190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not().toBeDefined();</div><div class='line' id='LC22191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live #template2&#39;).attr(&#39;ng-cloak&#39;)).</div><div class='line' id='LC22192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not().toBeDefined();</div><div class='line' id='LC22193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22195'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22196'>&nbsp;*</div><div class='line' id='LC22197'>&nbsp;*/</div><div class='line' id='LC22198'>var ngCloakDirective = ngDirective({</div><div class='line' id='LC22199'>&nbsp;&nbsp;compile: function(element, attr) {</div><div class='line' id='LC22200'>&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;ngCloak&#39;, undefined);</div><div class='line' id='LC22201'>&nbsp;&nbsp;&nbsp;&nbsp;element.removeClass(&#39;ng-cloak&#39;);</div><div class='line' id='LC22202'>&nbsp;&nbsp;}</div><div class='line' id='LC22203'>});</div><div class='line' id='LC22204'><br/></div><div class='line' id='LC22205'>/**</div><div class='line' id='LC22206'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22207'>&nbsp;* @name ng.directive:ngController</div><div class='line' id='LC22208'>&nbsp;*</div><div class='line' id='LC22209'>&nbsp;* @description</div><div class='line' id='LC22210'>&nbsp;* The `ngController` directive assigns behavior to a scope. This is a key aspect of how angular</div><div class='line' id='LC22211'>&nbsp;* supports the principles behind the Model-View-Controller design pattern.</div><div class='line' id='LC22212'>&nbsp;*</div><div class='line' id='LC22213'>&nbsp;* MVC components in angular:</div><div class='line' id='LC22214'>&nbsp;*</div><div class='line' id='LC22215'>&nbsp;* * Model — The Model is data in scope properties; scopes are attached to the DOM.</div><div class='line' id='LC22216'>&nbsp;* * View — The template (HTML with data bindings) is rendered into the View.</div><div class='line' id='LC22217'>&nbsp;* * Controller — The `ngController` directive specifies a Controller class; the class has</div><div class='line' id='LC22218'>&nbsp;*   methods that typically express the business logic behind the application.</div><div class='line' id='LC22219'>&nbsp;*</div><div class='line' id='LC22220'>&nbsp;* Note that an alternative way to define controllers is via the {@link ng.$route $route} service.</div><div class='line' id='LC22221'>&nbsp;*</div><div class='line' id='LC22222'>&nbsp;* @element ANY</div><div class='line' id='LC22223'>&nbsp;* @scope</div><div class='line' id='LC22224'>&nbsp;* @param {expression} ngController Name of a globally accessible constructor function or an</div><div class='line' id='LC22225'>&nbsp;*     {@link guide/expression expression} that on the current scope evaluates to a</div><div class='line' id='LC22226'>&nbsp;*     constructor function.</div><div class='line' id='LC22227'>&nbsp;*</div><div class='line' id='LC22228'>&nbsp;* @example</div><div class='line' id='LC22229'>&nbsp;* Here is a simple form for editing user contact information. Adding, removing, clearing, and</div><div class='line' id='LC22230'>&nbsp;* greeting are methods declared on the controller (see source tab). These methods can</div><div class='line' id='LC22231'>&nbsp;* easily be called from the angular markup. Notice that the scope becomes the `this` for the</div><div class='line' id='LC22232'>&nbsp;* controller&#39;s instance. This allows for easy access to the view data from the controller. Also</div><div class='line' id='LC22233'>&nbsp;* notice that any changes to the data are automatically reflected in the View without the need</div><div class='line' id='LC22234'>&nbsp;* for a manual update.</div><div class='line' id='LC22235'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC22238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function SettingsController($scope) {</div><div class='line' id='LC22239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &quot;John Smith&quot;;</div><div class='line' id='LC22240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.contacts = [</div><div class='line' id='LC22241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{type:&#39;phone&#39;, value:&#39;408 555 1212&#39;},</div><div class='line' id='LC22242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{type:&#39;email&#39;, value:&#39;john.smith@example.org&#39;} ];</div><div class='line' id='LC22243'><br/></div><div class='line' id='LC22244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.greet = function() {</div><div class='line' id='LC22245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(this.name);</div><div class='line' id='LC22246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22247'><br/></div><div class='line' id='LC22248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.addContact = function() {</div><div class='line' id='LC22249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.contacts.push({type:&#39;email&#39;, value:&#39;yourname@example.org&#39;});</div><div class='line' id='LC22250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22251'><br/></div><div class='line' id='LC22252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.removeContact = function(contactToRemove) {</div><div class='line' id='LC22253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index = this.contacts.indexOf(contactToRemove);</div><div class='line' id='LC22254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.contacts.splice(index, 1);</div><div class='line' id='LC22255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22256'><br/></div><div class='line' id='LC22257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.clearContact = function(contact) {</div><div class='line' id='LC22258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contact.type = &#39;phone&#39;;</div><div class='line' id='LC22259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contact.value = &#39;&#39;;</div><div class='line' id='LC22260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC22263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;SettingsController&quot;&gt;</div><div class='line' id='LC22264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;/&gt;</div><div class='line' id='LC22265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ &lt;a href=&quot;&quot; ng-click=&quot;greet()&quot;&gt;greet&lt;/a&gt; ]&lt;br/&gt;</div><div class='line' id='LC22266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contact:</div><div class='line' id='LC22267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</div><div class='line' id='LC22268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li ng-repeat=&quot;contact in contacts&quot;&gt;</div><div class='line' id='LC22269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;contact.type&quot;&gt;</div><div class='line' id='LC22270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;phone&lt;/option&gt;</div><div class='line' id='LC22271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&gt;email&lt;/option&gt;</div><div class='line' id='LC22272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC22273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-model=&quot;contact.value&quot;/&gt;</div><div class='line' id='LC22274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ &lt;a href=&quot;&quot; ng-click=&quot;clearContact(contact)&quot;&gt;clear&lt;/a&gt;</div><div class='line' id='LC22275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| &lt;a href=&quot;&quot; ng-click=&quot;removeContact(contact)&quot;&gt;X&lt;/a&gt; ]</div><div class='line' id='LC22276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC22277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;[ &lt;a href=&quot;&quot; ng-click=&quot;addContact()&quot;&gt;add&lt;/a&gt; ]&lt;/li&gt;</div><div class='line' id='LC22278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</div><div class='line' id='LC22279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC22280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check controller&#39;, function() {</div><div class='line' id='LC22283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live div&gt;:input&#39;).val()).toBe(&#39;John Smith&#39;);</div><div class='line' id='LC22284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:nth-child(1) input&#39;).val())</div><div class='line' id='LC22285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.toBe(&#39;408 555 1212&#39;);</div><div class='line' id='LC22286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:nth-child(2) input&#39;).val())</div><div class='line' id='LC22287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.toBe(&#39;john.smith@example.org&#39;);</div><div class='line' id='LC22288'><br/></div><div class='line' id='LC22289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live li:first a:contains(&quot;clear&quot;)&#39;).click();</div><div class='line' id='LC22290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:first input&#39;).val()).toBe(&#39;&#39;);</div><div class='line' id='LC22291'><br/></div><div class='line' id='LC22292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live li:last a:contains(&quot;add&quot;)&#39;).click();</div><div class='line' id='LC22293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live li:nth-child(3) input&#39;).val())</div><div class='line' id='LC22294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.toBe(&#39;yourname@example.org&#39;);</div><div class='line' id='LC22295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22297'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22298'>&nbsp;*/</div><div class='line' id='LC22299'>var ngControllerDirective = [function() {</div><div class='line' id='LC22300'>&nbsp;&nbsp;return {</div><div class='line' id='LC22301'>&nbsp;&nbsp;&nbsp;&nbsp;scope: true,</div><div class='line' id='LC22302'>&nbsp;&nbsp;&nbsp;&nbsp;controller: &#39;@&#39;</div><div class='line' id='LC22303'>&nbsp;&nbsp;};</div><div class='line' id='LC22304'>}];</div><div class='line' id='LC22305'><br/></div><div class='line' id='LC22306'>/**</div><div class='line' id='LC22307'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22308'>&nbsp;* @name ng.directive:ngCsp</div><div class='line' id='LC22309'>&nbsp;* @priority 1000</div><div class='line' id='LC22310'>&nbsp;*</div><div class='line' id='LC22311'>&nbsp;* @element html</div><div class='line' id='LC22312'>&nbsp;* @description</div><div class='line' id='LC22313'>&nbsp;* Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.</div><div class='line' id='LC22314'>&nbsp;* </div><div class='line' id='LC22315'>&nbsp;* This is necessary when developing things like Google Chrome Extensions.</div><div class='line' id='LC22316'>&nbsp;* </div><div class='line' id='LC22317'>&nbsp;* CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).</div><div class='line' id='LC22318'>&nbsp;* For us to be compatible, we just need to implement the &quot;getterFn&quot; in $parse without violating</div><div class='line' id='LC22319'>&nbsp;* any of these restrictions.</div><div class='line' id='LC22320'>&nbsp;* </div><div class='line' id='LC22321'>&nbsp;* AngularJS uses `Function(string)` generated functions as a speed optimization. By applying `ngCsp`</div><div class='line' id='LC22322'>&nbsp;* it is be possible to opt into the CSP compatible mode. When this mode is on AngularJS will</div><div class='line' id='LC22323'>&nbsp;* evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will</div><div class='line' id='LC22324'>&nbsp;* be raised.</div><div class='line' id='LC22325'>&nbsp;* </div><div class='line' id='LC22326'>&nbsp;* In order to use this feature put `ngCsp` directive on the root element of the application.</div><div class='line' id='LC22327'>&nbsp;* </div><div class='line' id='LC22328'>&nbsp;* @example</div><div class='line' id='LC22329'>&nbsp;* This example shows how to apply the `ngCsp` directive to the `html` tag.</div><div class='line' id='LC22330'>&nbsp;&nbsp;&nbsp;&lt;pre&gt;</div><div class='line' id='LC22331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!doctype html&gt;</div><div class='line' id='LC22332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;html ng-app ng-csp&gt;</div><div class='line' id='LC22333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div class='line' id='LC22334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div class='line' id='LC22335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/html&gt;</div><div class='line' id='LC22336'>&nbsp;&nbsp;&nbsp;&lt;/pre&gt;</div><div class='line' id='LC22337'>&nbsp;*/</div><div class='line' id='LC22338'><br/></div><div class='line' id='LC22339'>var ngCspDirective = [&#39;$sniffer&#39;, function($sniffer) {</div><div class='line' id='LC22340'>&nbsp;&nbsp;return {</div><div class='line' id='LC22341'>&nbsp;&nbsp;&nbsp;&nbsp;priority: 1000,</div><div class='line' id='LC22342'>&nbsp;&nbsp;&nbsp;&nbsp;compile: function() {</div><div class='line' id='LC22343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$sniffer.csp = true;</div><div class='line' id='LC22344'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22345'>&nbsp;&nbsp;};</div><div class='line' id='LC22346'>}];</div><div class='line' id='LC22347'><br/></div><div class='line' id='LC22348'>/**</div><div class='line' id='LC22349'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22350'>&nbsp;* @name ng.directive:ngClick</div><div class='line' id='LC22351'>&nbsp;*</div><div class='line' id='LC22352'>&nbsp;* @description</div><div class='line' id='LC22353'>&nbsp;* The ngClick allows you to specify custom behavior when</div><div class='line' id='LC22354'>&nbsp;* element is clicked.</div><div class='line' id='LC22355'>&nbsp;*</div><div class='line' id='LC22356'>&nbsp;* @element ANY</div><div class='line' id='LC22357'>&nbsp;* @param {expression} ngClick {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22358'>&nbsp;* click. (Event object is available as `$event`)</div><div class='line' id='LC22359'>&nbsp;*</div><div class='line' id='LC22360'>&nbsp;* @example</div><div class='line' id='LC22361'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button ng-click=&quot;count = count + 1&quot; ng-init=&quot;count=0&quot;&gt;</div><div class='line' id='LC22364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment</div><div class='line' id='LC22365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/button&gt;</div><div class='line' id='LC22366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: {{count}}</div><div class='line' id='LC22367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-click&#39;, function() {</div><div class='line' id='LC22370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;count&#39;)).toBe(&#39;0&#39;);</div><div class='line' id='LC22371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live :button&#39;).click();</div><div class='line' id='LC22372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;count&#39;)).toBe(&#39;1&#39;);</div><div class='line' id='LC22373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22375'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22376'>&nbsp;*/</div><div class='line' id='LC22377'>/*</div><div class='line' id='LC22378'>&nbsp;* A directive that allows creation of custom onclick handlers that are defined as angular</div><div class='line' id='LC22379'>&nbsp;* expressions and are compiled and executed within the current scope.</div><div class='line' id='LC22380'>&nbsp;*</div><div class='line' id='LC22381'>&nbsp;* Events that are handled via these handler are always configured not to propagate further.</div><div class='line' id='LC22382'>&nbsp;*/</div><div class='line' id='LC22383'>var ngEventDirectives = {};</div><div class='line' id='LC22384'>forEach(</div><div class='line' id='LC22385'>&nbsp;&nbsp;&#39;click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave&#39;.split(&#39; &#39;),</div><div class='line' id='LC22386'>&nbsp;&nbsp;function(name) {</div><div class='line' id='LC22387'>&nbsp;&nbsp;&nbsp;&nbsp;var directiveName = directiveNormalize(&#39;ng-&#39; + name);</div><div class='line' id='LC22388'>&nbsp;&nbsp;&nbsp;&nbsp;ngEventDirectives[directiveName] = [&#39;$parse&#39;, function($parse) {</div><div class='line' id='LC22389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element, attr) {</div><div class='line' id='LC22390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fn = $parse(attr[directiveName]);</div><div class='line' id='LC22391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(lowercase(name), function(event) {</div><div class='line' id='LC22392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC22393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn(scope, {$event:event});</div><div class='line' id='LC22394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22397'>&nbsp;&nbsp;&nbsp;&nbsp;}];</div><div class='line' id='LC22398'>&nbsp;&nbsp;}</div><div class='line' id='LC22399'>);</div><div class='line' id='LC22400'><br/></div><div class='line' id='LC22401'>/**</div><div class='line' id='LC22402'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22403'>&nbsp;* @name ng.directive:ngDblclick</div><div class='line' id='LC22404'>&nbsp;*</div><div class='line' id='LC22405'>&nbsp;* @description</div><div class='line' id='LC22406'>&nbsp;* The `ngDblclick` directive allows you to specify custom behavior on dblclick event.</div><div class='line' id='LC22407'>&nbsp;*</div><div class='line' id='LC22408'>&nbsp;* @element ANY</div><div class='line' id='LC22409'>&nbsp;* @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22410'>&nbsp;* dblclick. (Event object is available as `$event`)</div><div class='line' id='LC22411'>&nbsp;*</div><div class='line' id='LC22412'>&nbsp;* @example</div><div class='line' id='LC22413'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22414'>&nbsp;*/</div><div class='line' id='LC22415'><br/></div><div class='line' id='LC22416'><br/></div><div class='line' id='LC22417'>/**</div><div class='line' id='LC22418'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22419'>&nbsp;* @name ng.directive:ngMousedown</div><div class='line' id='LC22420'>&nbsp;*</div><div class='line' id='LC22421'>&nbsp;* @description</div><div class='line' id='LC22422'>&nbsp;* The ngMousedown directive allows you to specify custom behavior on mousedown event.</div><div class='line' id='LC22423'>&nbsp;*</div><div class='line' id='LC22424'>&nbsp;* @element ANY</div><div class='line' id='LC22425'>&nbsp;* @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22426'>&nbsp;* mousedown. (Event object is available as `$event`)</div><div class='line' id='LC22427'>&nbsp;*</div><div class='line' id='LC22428'>&nbsp;* @example</div><div class='line' id='LC22429'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22430'>&nbsp;*/</div><div class='line' id='LC22431'><br/></div><div class='line' id='LC22432'><br/></div><div class='line' id='LC22433'>/**</div><div class='line' id='LC22434'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22435'>&nbsp;* @name ng.directive:ngMouseup</div><div class='line' id='LC22436'>&nbsp;*</div><div class='line' id='LC22437'>&nbsp;* @description</div><div class='line' id='LC22438'>&nbsp;* Specify custom behavior on mouseup event.</div><div class='line' id='LC22439'>&nbsp;*</div><div class='line' id='LC22440'>&nbsp;* @element ANY</div><div class='line' id='LC22441'>&nbsp;* @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22442'>&nbsp;* mouseup. (Event object is available as `$event`)</div><div class='line' id='LC22443'>&nbsp;*</div><div class='line' id='LC22444'>&nbsp;* @example</div><div class='line' id='LC22445'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22446'>&nbsp;*/</div><div class='line' id='LC22447'><br/></div><div class='line' id='LC22448'>/**</div><div class='line' id='LC22449'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22450'>&nbsp;* @name ng.directive:ngMouseover</div><div class='line' id='LC22451'>&nbsp;*</div><div class='line' id='LC22452'>&nbsp;* @description</div><div class='line' id='LC22453'>&nbsp;* Specify custom behavior on mouseover event.</div><div class='line' id='LC22454'>&nbsp;*</div><div class='line' id='LC22455'>&nbsp;* @element ANY</div><div class='line' id='LC22456'>&nbsp;* @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22457'>&nbsp;* mouseover. (Event object is available as `$event`)</div><div class='line' id='LC22458'>&nbsp;*</div><div class='line' id='LC22459'>&nbsp;* @example</div><div class='line' id='LC22460'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22461'>&nbsp;*/</div><div class='line' id='LC22462'><br/></div><div class='line' id='LC22463'><br/></div><div class='line' id='LC22464'>/**</div><div class='line' id='LC22465'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22466'>&nbsp;* @name ng.directive:ngMouseenter</div><div class='line' id='LC22467'>&nbsp;*</div><div class='line' id='LC22468'>&nbsp;* @description</div><div class='line' id='LC22469'>&nbsp;* Specify custom behavior on mouseenter event.</div><div class='line' id='LC22470'>&nbsp;*</div><div class='line' id='LC22471'>&nbsp;* @element ANY</div><div class='line' id='LC22472'>&nbsp;* @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22473'>&nbsp;* mouseenter. (Event object is available as `$event`)</div><div class='line' id='LC22474'>&nbsp;*</div><div class='line' id='LC22475'>&nbsp;* @example</div><div class='line' id='LC22476'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22477'>&nbsp;*/</div><div class='line' id='LC22478'><br/></div><div class='line' id='LC22479'><br/></div><div class='line' id='LC22480'>/**</div><div class='line' id='LC22481'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22482'>&nbsp;* @name ng.directive:ngMouseleave</div><div class='line' id='LC22483'>&nbsp;*</div><div class='line' id='LC22484'>&nbsp;* @description</div><div class='line' id='LC22485'>&nbsp;* Specify custom behavior on mouseleave event.</div><div class='line' id='LC22486'>&nbsp;*</div><div class='line' id='LC22487'>&nbsp;* @element ANY</div><div class='line' id='LC22488'>&nbsp;* @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22489'>&nbsp;* mouseleave. (Event object is available as `$event`)</div><div class='line' id='LC22490'>&nbsp;*</div><div class='line' id='LC22491'>&nbsp;* @example</div><div class='line' id='LC22492'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22493'>&nbsp;*/</div><div class='line' id='LC22494'><br/></div><div class='line' id='LC22495'><br/></div><div class='line' id='LC22496'>/**</div><div class='line' id='LC22497'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22498'>&nbsp;* @name ng.directive:ngMousemove</div><div class='line' id='LC22499'>&nbsp;*</div><div class='line' id='LC22500'>&nbsp;* @description</div><div class='line' id='LC22501'>&nbsp;* Specify custom behavior on mousemove event.</div><div class='line' id='LC22502'>&nbsp;*</div><div class='line' id='LC22503'>&nbsp;* @element ANY</div><div class='line' id='LC22504'>&nbsp;* @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon</div><div class='line' id='LC22505'>&nbsp;* mousemove. (Event object is available as `$event`)</div><div class='line' id='LC22506'>&nbsp;*</div><div class='line' id='LC22507'>&nbsp;* @example</div><div class='line' id='LC22508'>&nbsp;* See {@link ng.directive:ngClick ngClick}</div><div class='line' id='LC22509'>&nbsp;*/</div><div class='line' id='LC22510'><br/></div><div class='line' id='LC22511'><br/></div><div class='line' id='LC22512'>/**</div><div class='line' id='LC22513'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22514'>&nbsp;* @name ng.directive:ngSubmit</div><div class='line' id='LC22515'>&nbsp;*</div><div class='line' id='LC22516'>&nbsp;* @description</div><div class='line' id='LC22517'>&nbsp;* Enables binding angular expressions to onsubmit events.</div><div class='line' id='LC22518'>&nbsp;*</div><div class='line' id='LC22519'>&nbsp;* Additionally it prevents the default action (which for form means sending the request to the</div><div class='line' id='LC22520'>&nbsp;* server and reloading the current page).</div><div class='line' id='LC22521'>&nbsp;*</div><div class='line' id='LC22522'>&nbsp;* @element form</div><div class='line' id='LC22523'>&nbsp;* @param {expression} ngSubmit {@link guide/expression Expression} to eval.</div><div class='line' id='LC22524'>&nbsp;*</div><div class='line' id='LC22525'>&nbsp;* @example</div><div class='line' id='LC22526'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC22529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC22530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.list = [];</div><div class='line' id='LC22531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.text = &#39;hello&#39;;</div><div class='line' id='LC22532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.submit = function() {</div><div class='line' id='LC22533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.text) {</div><div class='line' id='LC22534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.list.push(this.text);</div><div class='line' id='LC22535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.text = &#39;&#39;;</div><div class='line' id='LC22536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC22540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form ng-submit=&quot;submit()&quot; ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC22541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enter text and hit enter:</div><div class='line' id='LC22542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; ng-model=&quot;text&quot; name=&quot;text&quot; /&gt;</div><div class='line' id='LC22543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;submit&quot; id=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</div><div class='line' id='LC22544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;list={{list}}&lt;/pre&gt;</div><div class='line' id='LC22545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div class='line' id='LC22546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-submit&#39;, function() {</div><div class='line' id='LC22549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;list&#39;)).toBe(&#39;[]&#39;);</div><div class='line' id='LC22550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live #submit&#39;).click();</div><div class='line' id='LC22551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;list&#39;)).toBe(&#39;[&quot;hello&quot;]&#39;);</div><div class='line' id='LC22552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(input(&#39;text&#39;).val()).toBe(&#39;&#39;);</div><div class='line' id='LC22553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should ignore empty strings&#39;, function() {</div><div class='line' id='LC22555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;list&#39;)).toBe(&#39;[]&#39;);</div><div class='line' id='LC22556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live #submit&#39;).click();</div><div class='line' id='LC22557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live #submit&#39;).click();</div><div class='line' id='LC22558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;list&#39;)).toBe(&#39;[&quot;hello&quot;]&#39;);</div><div class='line' id='LC22559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22561'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22562'>&nbsp;*/</div><div class='line' id='LC22563'>var ngSubmitDirective = ngDirective(function(scope, element, attrs) {</div><div class='line' id='LC22564'>&nbsp;&nbsp;element.bind(&#39;submit&#39;, function() {</div><div class='line' id='LC22565'>&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(attrs.ngSubmit);</div><div class='line' id='LC22566'>&nbsp;&nbsp;});</div><div class='line' id='LC22567'>});</div><div class='line' id='LC22568'><br/></div><div class='line' id='LC22569'>/**</div><div class='line' id='LC22570'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22571'>&nbsp;* @name ng.directive:ngInclude</div><div class='line' id='LC22572'>&nbsp;* @restrict ECA</div><div class='line' id='LC22573'>&nbsp;*</div><div class='line' id='LC22574'>&nbsp;* @description</div><div class='line' id='LC22575'>&nbsp;* Fetches, compiles and includes an external HTML fragment.</div><div class='line' id='LC22576'>&nbsp;*</div><div class='line' id='LC22577'>&nbsp;* Keep in mind that Same Origin Policy applies to included resources</div><div class='line' id='LC22578'>&nbsp;* (e.g. ngInclude won&#39;t work for cross-domain requests on all browsers and for</div><div class='line' id='LC22579'>&nbsp;*  file:// access on some browsers).</div><div class='line' id='LC22580'>&nbsp;*</div><div class='line' id='LC22581'>&nbsp;* @scope</div><div class='line' id='LC22582'>&nbsp;*</div><div class='line' id='LC22583'>&nbsp;* @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,</div><div class='line' id='LC22584'>&nbsp;*                 make sure you wrap it in quotes, e.g. `src=&quot;&#39;myPartialTemplate.html&#39;&quot;`.</div><div class='line' id='LC22585'>&nbsp;* @param {string=} onload Expression to evaluate when a new partial is loaded.</div><div class='line' id='LC22586'>&nbsp;*</div><div class='line' id='LC22587'>&nbsp;* @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll</div><div class='line' id='LC22588'>&nbsp;*                  $anchorScroll} to scroll the viewport after the content is loaded.</div><div class='line' id='LC22589'>&nbsp;*</div><div class='line' id='LC22590'>&nbsp;*                  - If the attribute is not set, disable scrolling.</div><div class='line' id='LC22591'>&nbsp;*                  - If the attribute is set without value, enable scrolling.</div><div class='line' id='LC22592'>&nbsp;*                  - Otherwise enable scrolling only if the expression evaluates to truthy value.</div><div class='line' id='LC22593'>&nbsp;*</div><div class='line' id='LC22594'>&nbsp;* @example</div><div class='line' id='LC22595'>&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC22596'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC22597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC22598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;template&quot; ng-options=&quot;t.name for t in templates&quot;&gt;</div><div class='line' id='LC22599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option value=&quot;&quot;&gt;(blank)&lt;/option&gt;</div><div class='line' id='LC22600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC22601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url of the template: &lt;tt&gt;{{template.url}}&lt;/tt&gt;</div><div class='line' id='LC22602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;</div><div class='line' id='LC22603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-include src=&quot;template.url&quot;&gt;&lt;/div&gt;</div><div class='line' id='LC22604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC22605'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22606'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC22607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC22608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.templates =</div><div class='line' id='LC22609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ { name: &#39;template1.html&#39;, url: &#39;template1.html&#39;}</div><div class='line' id='LC22610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, { name: &#39;template2.html&#39;, url: &#39;template2.html&#39;} ];</div><div class='line' id='LC22611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.template = $scope.templates[0];</div><div class='line' id='LC22612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22614'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;template1.html&quot;&gt;</div><div class='line' id='LC22615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Content of template1.html</div><div class='line' id='LC22616'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22617'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;template2.html&quot;&gt;</div><div class='line' id='LC22618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Content of template2.html</div><div class='line' id='LC22619'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22620'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC22621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should load template1.html&#39;, function() {</div><div class='line' id='LC22622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).</div><div class='line' id='LC22623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/Content of template1.html/);</div><div class='line' id='LC22624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should load template2.html&#39;, function() {</div><div class='line' id='LC22626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(&#39;template&#39;).option(&#39;1&#39;);</div><div class='line' id='LC22627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).</div><div class='line' id='LC22628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/Content of template2.html/);</div><div class='line' id='LC22629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should change to blank&#39;, function() {</div><div class='line' id='LC22631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(&#39;template&#39;).option(&#39;&#39;);</div><div class='line' id='LC22632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).toEqual(&#39;&#39;);</div><div class='line' id='LC22633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22634'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC22635'>&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC22636'>&nbsp;*/</div><div class='line' id='LC22637'><br/></div><div class='line' id='LC22638'><br/></div><div class='line' id='LC22639'>/**</div><div class='line' id='LC22640'>&nbsp;* @ngdoc event</div><div class='line' id='LC22641'>&nbsp;* @name ng.directive:ngInclude#$includeContentLoaded</div><div class='line' id='LC22642'>&nbsp;* @eventOf ng.directive:ngInclude</div><div class='line' id='LC22643'>&nbsp;* @eventType emit on the current ngInclude scope</div><div class='line' id='LC22644'>&nbsp;* @description</div><div class='line' id='LC22645'>&nbsp;* Emitted every time the ngInclude content is reloaded.</div><div class='line' id='LC22646'>&nbsp;*/</div><div class='line' id='LC22647'>var ngIncludeDirective = [&#39;$http&#39;, &#39;$templateCache&#39;, &#39;$anchorScroll&#39;, &#39;$compile&#39;,</div><div class='line' id='LC22648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function($http,   $templateCache,   $anchorScroll,   $compile) {</div><div class='line' id='LC22649'>&nbsp;&nbsp;return {</div><div class='line' id='LC22650'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;ECA&#39;,</div><div class='line' id='LC22651'>&nbsp;&nbsp;&nbsp;&nbsp;terminal: true,</div><div class='line' id='LC22652'>&nbsp;&nbsp;&nbsp;&nbsp;compile: function(element, attr) {</div><div class='line' id='LC22653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var srcExp = attr.ngInclude || attr.src,</div><div class='line' id='LC22654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onloadExp = attr.onload || &#39;&#39;,</div><div class='line' id='LC22655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoScrollExp = attr.autoscroll;</div><div class='line' id='LC22656'><br/></div><div class='line' id='LC22657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element) {</div><div class='line' id='LC22658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var changeCounter = 0,</div><div class='line' id='LC22659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope;</div><div class='line' id='LC22660'><br/></div><div class='line' id='LC22661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var clearContent = function() {</div><div class='line' id='LC22662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (childScope) {</div><div class='line' id='LC22663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$destroy();</div><div class='line' id='LC22664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = null;</div><div class='line' id='LC22665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22666'><br/></div><div class='line' id='LC22667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(&#39;&#39;);</div><div class='line' id='LC22668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22669'><br/></div><div class='line' id='LC22670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(srcExp, function ngIncludeWatchAction(src) {</div><div class='line' id='LC22671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var thisChangeId = ++changeCounter;</div><div class='line' id='LC22672'><br/></div><div class='line' id='LC22673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (src) {</div><div class='line' id='LC22674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$http.get(src, {cache: $templateCache}).success(function(response) {</div><div class='line' id='LC22675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (thisChangeId !== changeCounter) return;</div><div class='line' id='LC22676'><br/></div><div class='line' id='LC22677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (childScope) childScope.$destroy();</div><div class='line' id='LC22678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = scope.$new();</div><div class='line' id='LC22679'><br/></div><div class='line' id='LC22680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(response);</div><div class='line' id='LC22681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compile(element.contents())(childScope);</div><div class='line' id='LC22682'><br/></div><div class='line' id='LC22683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isDefined(autoScrollExp) &amp;&amp; (!autoScrollExp || scope.$eval(autoScrollExp))) {</div><div class='line' id='LC22684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$anchorScroll();</div><div class='line' id='LC22685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22686'><br/></div><div class='line' id='LC22687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$emit(&#39;$includeContentLoaded&#39;);</div><div class='line' id='LC22688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$eval(onloadExp);</div><div class='line' id='LC22689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).error(function() {</div><div class='line' id='LC22690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (thisChangeId === changeCounter) clearContent();</div><div class='line' id='LC22691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else clearContent();</div><div class='line' id='LC22693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC22695'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22696'>&nbsp;&nbsp;};</div><div class='line' id='LC22697'>}];</div><div class='line' id='LC22698'><br/></div><div class='line' id='LC22699'>/**</div><div class='line' id='LC22700'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22701'>&nbsp;* @name ng.directive:ngInit</div><div class='line' id='LC22702'>&nbsp;*</div><div class='line' id='LC22703'>&nbsp;* @description</div><div class='line' id='LC22704'>&nbsp;* The `ngInit` directive specifies initialization tasks to be executed</div><div class='line' id='LC22705'>&nbsp;*  before the template enters execution mode during bootstrap.</div><div class='line' id='LC22706'>&nbsp;*</div><div class='line' id='LC22707'>&nbsp;* @element ANY</div><div class='line' id='LC22708'>&nbsp;* @param {expression} ngInit {@link guide/expression Expression} to eval.</div><div class='line' id='LC22709'>&nbsp;*</div><div class='line' id='LC22710'>&nbsp;* @example</div><div class='line' id='LC22711'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22713'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-init=&quot;greeting=&#39;Hello&#39;; person=&#39;World&#39;&quot;&gt;</div><div class='line' id='LC22714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{greeting}} {{person}}!</div><div class='line' id='LC22715'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC22716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check greeting&#39;, function() {</div><div class='line' id='LC22719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;greeting&#39;)).toBe(&#39;Hello&#39;);</div><div class='line' id='LC22720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;person&#39;)).toBe(&#39;World&#39;);</div><div class='line' id='LC22721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22723'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22724'>&nbsp;*/</div><div class='line' id='LC22725'>var ngInitDirective = ngDirective({</div><div class='line' id='LC22726'>&nbsp;&nbsp;compile: function() {</div><div class='line' id='LC22727'>&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC22728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre: function(scope, element, attrs) {</div><div class='line' id='LC22729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$eval(attrs.ngInit);</div><div class='line' id='LC22730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22731'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22732'>&nbsp;&nbsp;}</div><div class='line' id='LC22733'>});</div><div class='line' id='LC22734'><br/></div><div class='line' id='LC22735'>/**</div><div class='line' id='LC22736'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22737'>&nbsp;* @name ng.directive:ngNonBindable</div><div class='line' id='LC22738'>&nbsp;* @priority 1000</div><div class='line' id='LC22739'>&nbsp;*</div><div class='line' id='LC22740'>&nbsp;* @description</div><div class='line' id='LC22741'>&nbsp;* Sometimes it is necessary to write code which looks like bindings but which should be left alone</div><div class='line' id='LC22742'>&nbsp;* by angular. Use `ngNonBindable` to make angular ignore a chunk of HTML.</div><div class='line' id='LC22743'>&nbsp;*</div><div class='line' id='LC22744'>&nbsp;* @element ANY</div><div class='line' id='LC22745'>&nbsp;*</div><div class='line' id='LC22746'>&nbsp;* @example</div><div class='line' id='LC22747'>&nbsp;* In this example there are two location where a simple binding (`{{}}`) is present, but the one</div><div class='line' id='LC22748'>&nbsp;* wrapped in `ngNonBindable` is left alone.</div><div class='line' id='LC22749'>&nbsp;*</div><div class='line' id='LC22750'>&nbsp;* @example</div><div class='line' id='LC22751'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;Normal: {{1 + 2}}&lt;/div&gt;</div><div class='line' id='LC22754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-non-bindable&gt;Ignored: {{1 + 2}}&lt;/div&gt;</div><div class='line' id='LC22755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-non-bindable&#39;, function() {</div><div class='line' id='LC22758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).binding(&#39;1 + 2&#39;)).toBe(&#39;3&#39;);</div><div class='line' id='LC22759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(using(&#39;.doc-example-live&#39;).element(&#39;div:last&#39;).text()).</div><div class='line' id='LC22760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toMatch(/1 \+ 2/);</div><div class='line' id='LC22761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22763'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22764'>&nbsp;*/</div><div class='line' id='LC22765'>var ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });</div><div class='line' id='LC22766'><br/></div><div class='line' id='LC22767'>/**</div><div class='line' id='LC22768'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22769'>&nbsp;* @name ng.directive:ngPluralize</div><div class='line' id='LC22770'>&nbsp;* @restrict EA</div><div class='line' id='LC22771'>&nbsp;*</div><div class='line' id='LC22772'>&nbsp;* @description</div><div class='line' id='LC22773'>&nbsp;* # Overview</div><div class='line' id='LC22774'>&nbsp;* `ngPluralize` is a directive that displays messages according to en-US localization rules.</div><div class='line' id='LC22775'>&nbsp;* These rules are bundled with angular.js and the rules can be overridden</div><div class='line' id='LC22776'>&nbsp;* (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive</div><div class='line' id='LC22777'>&nbsp;* by specifying the mappings between</div><div class='line' id='LC22778'>&nbsp;* {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html</div><div class='line' id='LC22779'>&nbsp;* plural categories} and the strings to be displayed.</div><div class='line' id='LC22780'>&nbsp;*</div><div class='line' id='LC22781'>&nbsp;* # Plural categories and explicit number rules</div><div class='line' id='LC22782'>&nbsp;* There are two</div><div class='line' id='LC22783'>&nbsp;* {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html</div><div class='line' id='LC22784'>&nbsp;* plural categories} in Angular&#39;s default en-US locale: &quot;one&quot; and &quot;other&quot;.</div><div class='line' id='LC22785'>&nbsp;*</div><div class='line' id='LC22786'>&nbsp;* While a pural category may match many numbers (for example, in en-US locale, &quot;other&quot; can match</div><div class='line' id='LC22787'>&nbsp;* any number that is not 1), an explicit number rule can only match one number. For example, the</div><div class='line' id='LC22788'>&nbsp;* explicit number rule for &quot;3&quot; matches the number 3. You will see the use of plural categories</div><div class='line' id='LC22789'>&nbsp;* and explicit number rules throughout later parts of this documentation.</div><div class='line' id='LC22790'>&nbsp;*</div><div class='line' id='LC22791'>&nbsp;* # Configuring ngPluralize</div><div class='line' id='LC22792'>&nbsp;* You configure ngPluralize by providing 2 attributes: `count` and `when`.</div><div class='line' id='LC22793'>&nbsp;* You can also provide an optional attribute, `offset`.</div><div class='line' id='LC22794'>&nbsp;*</div><div class='line' id='LC22795'>&nbsp;* The value of the `count` attribute can be either a string or an {@link guide/expression</div><div class='line' id='LC22796'>&nbsp;* Angular expression}; these are evaluated on the current scope for its bound value.</div><div class='line' id='LC22797'>&nbsp;*</div><div class='line' id='LC22798'>&nbsp;* The `when` attribute specifies the mappings between plural categories and the actual</div><div class='line' id='LC22799'>&nbsp;* string to be displayed. The value of the attribute should be a JSON object so that Angular</div><div class='line' id='LC22800'>&nbsp;* can interpret it correctly.</div><div class='line' id='LC22801'>&nbsp;*</div><div class='line' id='LC22802'>&nbsp;* The following example shows how to configure ngPluralize:</div><div class='line' id='LC22803'>&nbsp;*</div><div class='line' id='LC22804'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC22805'>&nbsp;* &lt;ng-pluralize count=&quot;personCount&quot;</div><div class='line' id='LC22806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</div><div class='line' id='LC22807'>&nbsp;*                      &#39;one&#39;: &#39;1 person is viewing.&#39;,</div><div class='line' id='LC22808'>&nbsp;*                      &#39;other&#39;: &#39;{} people are viewing.&#39;}&quot;&gt;</div><div class='line' id='LC22809'>&nbsp;* &lt;/ng-pluralize&gt;</div><div class='line' id='LC22810'>&nbsp;*&lt;/pre&gt;</div><div class='line' id='LC22811'>&nbsp;*</div><div class='line' id='LC22812'>&nbsp;* In the example, `&quot;0: Nobody is viewing.&quot;` is an explicit number rule. If you did not</div><div class='line' id='LC22813'>&nbsp;* specify this rule, 0 would be matched to the &quot;other&quot; category and &quot;0 people are viewing&quot;</div><div class='line' id='LC22814'>&nbsp;* would be shown instead of &quot;Nobody is viewing&quot;. You can specify an explicit number rule for</div><div class='line' id='LC22815'>&nbsp;* other numbers, for example 12, so that instead of showing &quot;12 people are viewing&quot;, you can</div><div class='line' id='LC22816'>&nbsp;* show &quot;a dozen people are viewing&quot;.</div><div class='line' id='LC22817'>&nbsp;*</div><div class='line' id='LC22818'>&nbsp;* You can use a set of closed braces(`{}`) as a placeholder for the number that you want substituted</div><div class='line' id='LC22819'>&nbsp;* into pluralized strings. In the previous example, Angular will replace `{}` with</div><div class='line' id='LC22820'>&nbsp;* &lt;span ng-non-bindable&gt;`{{personCount}}`&lt;/span&gt;. The closed braces `{}` is a placeholder</div><div class='line' id='LC22821'>&nbsp;* for &lt;span ng-non-bindable&gt;{{numberExpression}}&lt;/span&gt;.</div><div class='line' id='LC22822'>&nbsp;*</div><div class='line' id='LC22823'>&nbsp;* # Configuring ngPluralize with offset</div><div class='line' id='LC22824'>&nbsp;* The `offset` attribute allows further customization of pluralized text, which can result in</div><div class='line' id='LC22825'>&nbsp;* a better user experience. For example, instead of the message &quot;4 people are viewing this document&quot;,</div><div class='line' id='LC22826'>&nbsp;* you might display &quot;John, Kate and 2 others are viewing this document&quot;.</div><div class='line' id='LC22827'>&nbsp;* The offset attribute allows you to offset a number by any desired value.</div><div class='line' id='LC22828'>&nbsp;* Let&#39;s take a look at an example:</div><div class='line' id='LC22829'>&nbsp;*</div><div class='line' id='LC22830'>&nbsp;* &lt;pre&gt;</div><div class='line' id='LC22831'>&nbsp;* &lt;ng-pluralize count=&quot;personCount&quot; offset=2</div><div class='line' id='LC22832'>&nbsp;*               when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</div><div class='line' id='LC22833'>&nbsp;*                      &#39;1&#39;: &#39;{{person1}} is viewing.&#39;,</div><div class='line' id='LC22834'>&nbsp;*                      &#39;2&#39;: &#39;{{person1}} and {{person2}} are viewing.&#39;,</div><div class='line' id='LC22835'>&nbsp;*                      &#39;one&#39;: &#39;{{person1}}, {{person2}} and one other person are viewing.&#39;,</div><div class='line' id='LC22836'>&nbsp;*                      &#39;other&#39;: &#39;{{person1}}, {{person2}} and {} other people are viewing.&#39;}&quot;&gt;</div><div class='line' id='LC22837'>&nbsp;* &lt;/ng-pluralize&gt;</div><div class='line' id='LC22838'>&nbsp;* &lt;/pre&gt;</div><div class='line' id='LC22839'>&nbsp;*</div><div class='line' id='LC22840'>&nbsp;* Notice that we are still using two plural categories(one, other), but we added</div><div class='line' id='LC22841'>&nbsp;* three explicit number rules 0, 1 and 2.</div><div class='line' id='LC22842'>&nbsp;* When one person, perhaps John, views the document, &quot;John is viewing&quot; will be shown.</div><div class='line' id='LC22843'>&nbsp;* When three people view the document, no explicit number rule is found, so</div><div class='line' id='LC22844'>&nbsp;* an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.</div><div class='line' id='LC22845'>&nbsp;* In this case, plural category &#39;one&#39; is matched and &quot;John, Marry and one other person are viewing&quot;</div><div class='line' id='LC22846'>&nbsp;* is shown.</div><div class='line' id='LC22847'>&nbsp;*</div><div class='line' id='LC22848'>&nbsp;* Note that when you specify offsets, you must provide explicit number rules for</div><div class='line' id='LC22849'>&nbsp;* numbers from 0 up to and including the offset. If you use an offset of 3, for example,</div><div class='line' id='LC22850'>&nbsp;* you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for</div><div class='line' id='LC22851'>&nbsp;* plural categories &quot;one&quot; and &quot;other&quot;.</div><div class='line' id='LC22852'>&nbsp;*</div><div class='line' id='LC22853'>&nbsp;* @param {string|expression} count The variable to be bounded to.</div><div class='line' id='LC22854'>&nbsp;* @param {string} when The mapping between plural category to its correspoding strings.</div><div class='line' id='LC22855'>&nbsp;* @param {number=} offset Offset to deduct from the total number.</div><div class='line' id='LC22856'>&nbsp;*</div><div class='line' id='LC22857'>&nbsp;* @example</div><div class='line' id='LC22858'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC22859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC22860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC22861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC22862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.person1 = &#39;Igor&#39;;</div><div class='line' id='LC22863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.person2 = &#39;Misko&#39;;</div><div class='line' id='LC22864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.personCount = 1;</div><div class='line' id='LC22865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC22867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC22868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Person 1:&lt;input type=&quot;text&quot; ng-model=&quot;person1&quot; value=&quot;Igor&quot; /&gt;&lt;br/&gt;</div><div class='line' id='LC22869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Person 2:&lt;input type=&quot;text&quot; ng-model=&quot;person2&quot; value=&quot;Misko&quot; /&gt;&lt;br/&gt;</div><div class='line' id='LC22870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Number of People:&lt;input type=&quot;text&quot; ng-model=&quot;personCount&quot; value=&quot;1&quot; /&gt;&lt;br/&gt;</div><div class='line' id='LC22871'><br/></div><div class='line' id='LC22872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- Example with simple pluralization rules for en locale ---&gt;</div><div class='line' id='LC22873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Without Offset:</div><div class='line' id='LC22874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ng-pluralize count=&quot;personCount&quot;</div><div class='line' id='LC22875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</div><div class='line' id='LC22876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;one&#39;: &#39;1 person is viewing.&#39;,</div><div class='line' id='LC22877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;other&#39;: &#39;{} people are viewing.&#39;}&quot;&gt;</div><div class='line' id='LC22878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ng-pluralize&gt;&lt;br&gt;</div><div class='line' id='LC22879'><br/></div><div class='line' id='LC22880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- Example with offset ---&gt;</div><div class='line' id='LC22881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;With Offset(2):</div><div class='line' id='LC22882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ng-pluralize count=&quot;personCount&quot; offset=2</div><div class='line' id='LC22883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</div><div class='line' id='LC22884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;1&#39;: &#39;{{person1}} is viewing.&#39;,</div><div class='line' id='LC22885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;2&#39;: &#39;{{person1}} and {{person2}} are viewing.&#39;,</div><div class='line' id='LC22886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;one&#39;: &#39;{{person1}}, {{person2}} and one other person are viewing.&#39;,</div><div class='line' id='LC22887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;other&#39;: &#39;{{person1}}, {{person2}} and {} other people are viewing.&#39;}&quot;&gt;</div><div class='line' id='LC22888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ng-pluralize&gt;</div><div class='line' id='LC22889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC22890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC22891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC22892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should show correct pluralized string&#39;, function() {</div><div class='line' id='LC22893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</div><div class='line' id='LC22894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;1 person is viewing.&#39;);</div><div class='line' id='LC22895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Igor is viewing.&#39;);</div><div class='line' id='LC22897'><br/></div><div class='line' id='LC22898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;0&#39;);</div><div class='line' id='LC22899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</div><div class='line' id='LC22900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Nobody is viewing.&#39;);</div><div class='line' id='LC22901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Nobody is viewing.&#39;);</div><div class='line' id='LC22903'><br/></div><div class='line' id='LC22904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;2&#39;);</div><div class='line' id='LC22905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</div><div class='line' id='LC22906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;2 people are viewing.&#39;);</div><div class='line' id='LC22907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Igor and Misko are viewing.&#39;);</div><div class='line' id='LC22909'><br/></div><div class='line' id='LC22910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;3&#39;);</div><div class='line' id='LC22911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</div><div class='line' id='LC22912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;3 people are viewing.&#39;);</div><div class='line' id='LC22913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Igor, Misko and one other person are viewing.&#39;);</div><div class='line' id='LC22915'><br/></div><div class='line' id='LC22916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;4&#39;);</div><div class='line' id='LC22917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</div><div class='line' id='LC22918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;4 people are viewing.&#39;);</div><div class='line' id='LC22919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Igor, Misko and 2 other people are viewing.&#39;);</div><div class='line' id='LC22921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22922'><br/></div><div class='line' id='LC22923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should show data-binded names&#39;, function() {</div><div class='line' id='LC22924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;4&#39;);</div><div class='line' id='LC22925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Igor, Misko and 2 other people are viewing.&#39;);</div><div class='line' id='LC22927'><br/></div><div class='line' id='LC22928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;person1&#39;).enter(&#39;Di&#39;);</div><div class='line' id='LC22929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.doc-example-live&#39;).input(&#39;person2&#39;).enter(&#39;Vojta&#39;);</div><div class='line' id='LC22930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</div><div class='line' id='LC22931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toBe(&#39;Di, Vojta and 2 other people are viewing.&#39;);</div><div class='line' id='LC22932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC22934'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC22935'>&nbsp;*/</div><div class='line' id='LC22936'>var ngPluralizeDirective = [&#39;$locale&#39;, &#39;$interpolate&#39;, function($locale, $interpolate) {</div><div class='line' id='LC22937'>&nbsp;&nbsp;var BRACE = /{}/g;</div><div class='line' id='LC22938'>&nbsp;&nbsp;return {</div><div class='line' id='LC22939'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;EA&#39;,</div><div class='line' id='LC22940'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr) {</div><div class='line' id='LC22941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var numberExp = attr.count,</div><div class='line' id='LC22942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whenExp = element.attr(attr.$attr.when), // this is because we have {{}} in attrs</div><div class='line' id='LC22943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset = attr.offset || 0,</div><div class='line' id='LC22944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whens = scope.$eval(whenExp),</div><div class='line' id='LC22945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whensExpFns = {},</div><div class='line' id='LC22946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startSymbol = $interpolate.startSymbol(),</div><div class='line' id='LC22947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;endSymbol = $interpolate.endSymbol();</div><div class='line' id='LC22948'><br/></div><div class='line' id='LC22949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(whens, function(expression, key) {</div><div class='line' id='LC22950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whensExpFns[key] =</div><div class='line' id='LC22951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$interpolate(expression.replace(BRACE, startSymbol + numberExp + &#39;-&#39; +</div><div class='line' id='LC22952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset + endSymbol));</div><div class='line' id='LC22953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22954'><br/></div><div class='line' id='LC22955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(function ngPluralizeWatch() {</div><div class='line' id='LC22956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value = parseFloat(scope.$eval(numberExp));</div><div class='line' id='LC22957'><br/></div><div class='line' id='LC22958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isNaN(value)) {</div><div class='line' id='LC22959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,</div><div class='line' id='LC22960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//check it against pluralization rules in $locale service</div><div class='line' id='LC22961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(value in whens)) value = $locale.pluralCat(value - offset);</div><div class='line' id='LC22962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return whensExpFns[value](scope, element, true);</div><div class='line' id='LC22963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC22964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;&#39;;</div><div class='line' id='LC22965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function ngPluralizeWatchAction(newVal) {</div><div class='line' id='LC22967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.text(newVal);</div><div class='line' id='LC22968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC22969'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC22970'>&nbsp;&nbsp;};</div><div class='line' id='LC22971'>}];</div><div class='line' id='LC22972'><br/></div><div class='line' id='LC22973'>/**</div><div class='line' id='LC22974'>&nbsp;* @ngdoc directive</div><div class='line' id='LC22975'>&nbsp;* @name ng.directive:ngRepeat</div><div class='line' id='LC22976'>&nbsp;*</div><div class='line' id='LC22977'>&nbsp;* @description</div><div class='line' id='LC22978'>&nbsp;* The `ngRepeat` directive instantiates a template once per item from a collection. Each template</div><div class='line' id='LC22979'>&nbsp;* instance gets its own scope, where the given loop variable is set to the current collection item,</div><div class='line' id='LC22980'>&nbsp;* and `$index` is set to the item index or key.</div><div class='line' id='LC22981'>&nbsp;*</div><div class='line' id='LC22982'>&nbsp;* Special properties are exposed on the local scope of each template instance, including:</div><div class='line' id='LC22983'>&nbsp;*</div><div class='line' id='LC22984'>&nbsp;*   * `$index` – `{number}` – iterator offset of the repeated element (0..length-1)</div><div class='line' id='LC22985'>&nbsp;*   * `$first` – `{boolean}` – true if the repeated element is first in the iterator.</div><div class='line' id='LC22986'>&nbsp;*   * `$middle` – `{boolean}` – true if the repeated element is between the first and last in the iterator.</div><div class='line' id='LC22987'>&nbsp;*   * `$last` – `{boolean}` – true if the repeated element is last in the iterator.</div><div class='line' id='LC22988'>&nbsp;*</div><div class='line' id='LC22989'>&nbsp;*</div><div class='line' id='LC22990'>&nbsp;* @element ANY</div><div class='line' id='LC22991'>&nbsp;* @scope</div><div class='line' id='LC22992'>&nbsp;* @priority 1000</div><div class='line' id='LC22993'>&nbsp;* @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. Two</div><div class='line' id='LC22994'>&nbsp;*   formats are currently supported:</div><div class='line' id='LC22995'>&nbsp;*</div><div class='line' id='LC22996'>&nbsp;*   * `variable in expression` – where variable is the user defined loop variable and `expression`</div><div class='line' id='LC22997'>&nbsp;*     is a scope expression giving the collection to enumerate.</div><div class='line' id='LC22998'>&nbsp;*</div><div class='line' id='LC22999'>&nbsp;*     For example: `track in cd.tracks`.</div><div class='line' id='LC23000'>&nbsp;*</div><div class='line' id='LC23001'>&nbsp;*   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,</div><div class='line' id='LC23002'>&nbsp;*     and `expression` is the scope expression giving the collection to enumerate.</div><div class='line' id='LC23003'>&nbsp;*</div><div class='line' id='LC23004'>&nbsp;*     For example: `(name, age) in {&#39;adam&#39;:10, &#39;amalie&#39;:12}`.</div><div class='line' id='LC23005'>&nbsp;*</div><div class='line' id='LC23006'>&nbsp;* @example</div><div class='line' id='LC23007'>&nbsp;* This example initializes the scope to a list of names and</div><div class='line' id='LC23008'>&nbsp;* then uses `ngRepeat` to display every person:</div><div class='line' id='LC23009'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-init=&quot;friends = [{name:&#39;John&#39;, age:25}, {name:&#39;Mary&#39;, age:28}]&quot;&gt;</div><div class='line' id='LC23012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;I have {{friends.length}} friends. They are:</div><div class='line' id='LC23013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</div><div class='line' id='LC23014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li ng-repeat=&quot;friend in friends&quot;&gt;</div><div class='line' id='LC23015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.</div><div class='line' id='LC23016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC23017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</div><div class='line' id='LC23018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-repeat&#39;, function() {</div><div class='line' id='LC23022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r = using(&#39;.doc-example-live&#39;).repeater(&#39;ul li&#39;);</div><div class='line' id='LC23023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(r.count()).toBe(2);</div><div class='line' id='LC23024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(r.row(0)).toEqual([&quot;1&quot;,&quot;John&quot;,&quot;25&quot;]);</div><div class='line' id='LC23025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(r.row(1)).toEqual([&quot;2&quot;,&quot;Mary&quot;,&quot;28&quot;]);</div><div class='line' id='LC23026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23028'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23029'>&nbsp;*/</div><div class='line' id='LC23030'>var ngRepeatDirective = ngDirective({</div><div class='line' id='LC23031'>&nbsp;&nbsp;transclude: &#39;element&#39;,</div><div class='line' id='LC23032'>&nbsp;&nbsp;priority: 1000,</div><div class='line' id='LC23033'>&nbsp;&nbsp;terminal: true,</div><div class='line' id='LC23034'>&nbsp;&nbsp;compile: function(element, attr, linker) {</div><div class='line' id='LC23035'>&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, iterStartElement, attr){</div><div class='line' id='LC23036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var expression = attr.ngRepeat;</div><div class='line' id='LC23037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = expression.match(/^\s*(.+)\s+in\s+(.*)\s*$/),</div><div class='line' id='LC23038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lhs, rhs, valueIdent, keyIdent;</div><div class='line' id='LC23039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (! match) {</div><div class='line' id='LC23040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;Expected ngRepeat in form of &#39;_item_ in _collection_&#39; but got &#39;&quot; +</div><div class='line' id='LC23041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expression + &quot;&#39;.&quot;);</div><div class='line' id='LC23042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lhs = match[1];</div><div class='line' id='LC23044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rhs = match[2];</div><div class='line' id='LC23045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = lhs.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/);</div><div class='line' id='LC23046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!match) {</div><div class='line' id='LC23047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(&quot;&#39;item&#39; in &#39;item in collection&#39; should be identifier or (key, value) but got &#39;&quot; +</div><div class='line' id='LC23048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lhs + &quot;&#39;.&quot;);</div><div class='line' id='LC23049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueIdent = match[3] || match[1];</div><div class='line' id='LC23051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyIdent = match[2];</div><div class='line' id='LC23052'><br/></div><div class='line' id='LC23053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Store a list of elements from previous run. This is a hash where key is the item from the</div><div class='line' id='LC23054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// iterator, and the value is an array of objects with following properties.</div><div class='line' id='LC23055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   - scope: bound scope</div><div class='line' id='LC23056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   - element: previous element.</div><div class='line' id='LC23057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   - index: position</div><div class='line' id='LC23058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We need an array of these objects since the same object can be returned from the iterator.</div><div class='line' id='LC23059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We expect this to be a rare case.</div><div class='line' id='LC23060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lastOrder = new HashQueueMap();</div><div class='line' id='LC23061'><br/></div><div class='line' id='LC23062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(function ngRepeatWatch(scope){</div><div class='line' id='LC23063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, length,</div><div class='line' id='LC23064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection = scope.$eval(rhs),</div><div class='line' id='LC23065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor = iterStartElement,     // current position of the node</div><div class='line' id='LC23066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Same as lastOrder but it has the current state. It will become the</div><div class='line' id='LC23067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// lastOrder on the next iteration.</div><div class='line' id='LC23068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextOrder = new HashQueueMap(),</div><div class='line' id='LC23069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayBound,</div><div class='line' id='LC23070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope,</div><div class='line' id='LC23071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key, value, // key/value of iteration</div><div class='line' id='LC23072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array,</div><div class='line' id='LC23073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last;       // last object information {scope, element, index}</div><div class='line' id='LC23074'><br/></div><div class='line' id='LC23075'><br/></div><div class='line' id='LC23076'><br/></div><div class='line' id='LC23077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isArray(collection)) {</div><div class='line' id='LC23078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if object, extract keys, sort them and use to determine order of iteration over obj props</div><div class='line' id='LC23079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = [];</div><div class='line' id='LC23080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(key in collection) {</div><div class='line' id='LC23081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (collection.hasOwnProperty(key) &amp;&amp; key.charAt(0) != &#39;$&#39;) {</div><div class='line' id='LC23082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.push(key);</div><div class='line' id='LC23083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.sort();</div><div class='line' id='LC23086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = collection || [];</div><div class='line' id='LC23088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23089'><br/></div><div class='line' id='LC23090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayBound = array.length-1;</div><div class='line' id='LC23091'><br/></div><div class='line' id='LC23092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we are not using forEach for perf reasons (trying to avoid #call)</div><div class='line' id='LC23093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = 0, length = array.length; index &lt; length; index++) {</div><div class='line' id='LC23094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = (collection === array) ? index : array[index];</div><div class='line' id='LC23095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = collection[key];</div><div class='line' id='LC23096'><br/></div><div class='line' id='LC23097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last = lastOrder.shift(value);</div><div class='line' id='LC23098'><br/></div><div class='line' id='LC23099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (last) {</div><div class='line' id='LC23100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if we have already seen this object, then we need to reuse the</div><div class='line' id='LC23101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// associated scope/element</div><div class='line' id='LC23102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = last.scope;</div><div class='line' id='LC23103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextOrder.push(value, last);</div><div class='line' id='LC23104'><br/></div><div class='line' id='LC23105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index === last.index) {</div><div class='line' id='LC23106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// do nothing</div><div class='line' id='LC23107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor = last.element;</div><div class='line' id='LC23108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// existing item which got moved</div><div class='line' id='LC23110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last.index = index;</div><div class='line' id='LC23111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// This may be a noop, if the element is next, but I don&#39;t know of a good way to</div><div class='line' id='LC23112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// figure this out,  since it would require extra DOM access, so let&#39;s just hope that</div><div class='line' id='LC23113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the browsers realizes that it is noop, and treats it as such.</div><div class='line' id='LC23114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor.after(last.element);</div><div class='line' id='LC23115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor = last.element;</div><div class='line' id='LC23116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// new item which we don&#39;t know about</div><div class='line' id='LC23119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope = scope.$new();</div><div class='line' id='LC23120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23121'><br/></div><div class='line' id='LC23122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope[valueIdent] = value;</div><div class='line' id='LC23123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyIdent) childScope[keyIdent] = key;</div><div class='line' id='LC23124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$index = index;</div><div class='line' id='LC23125'><br/></div><div class='line' id='LC23126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$first = (index === 0);</div><div class='line' id='LC23127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$last = (index === arrayBound);</div><div class='line' id='LC23128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childScope.$middle = !(childScope.$first || childScope.$last);</div><div class='line' id='LC23129'><br/></div><div class='line' id='LC23130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!last) {</div><div class='line' id='LC23131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linker(childScope, function(clone){</div><div class='line' id='LC23132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor.after(clone);</div><div class='line' id='LC23133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last = {</div><div class='line' id='LC23134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope: childScope,</div><div class='line' id='LC23135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element: (cursor = clone),</div><div class='line' id='LC23136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index: index</div><div class='line' id='LC23137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextOrder.push(value, last);</div><div class='line' id='LC23139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23142'><br/></div><div class='line' id='LC23143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//shrink children</div><div class='line' id='LC23144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in lastOrder) {</div><div class='line' id='LC23145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastOrder.hasOwnProperty(key)) {</div><div class='line' id='LC23146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = lastOrder[key];</div><div class='line' id='LC23147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(array.length) {</div><div class='line' id='LC23148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = array.pop();</div><div class='line' id='LC23149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.element.remove();</div><div class='line' id='LC23150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.scope.$destroy();</div><div class='line' id='LC23151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23154'><br/></div><div class='line' id='LC23155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastOrder = nextOrder;</div><div class='line' id='LC23156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23157'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23158'>&nbsp;&nbsp;}</div><div class='line' id='LC23159'>});</div><div class='line' id='LC23160'><br/></div><div class='line' id='LC23161'>/**</div><div class='line' id='LC23162'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23163'>&nbsp;* @name ng.directive:ngShow</div><div class='line' id='LC23164'>&nbsp;*</div><div class='line' id='LC23165'>&nbsp;* @description</div><div class='line' id='LC23166'>&nbsp;* The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)</div><div class='line' id='LC23167'>&nbsp;* conditionally.</div><div class='line' id='LC23168'>&nbsp;*</div><div class='line' id='LC23169'>&nbsp;* @element ANY</div><div class='line' id='LC23170'>&nbsp;* @param {expression} ngShow If the {@link guide/expression expression} is truthy</div><div class='line' id='LC23171'>&nbsp;*     then the element is shown or hidden respectively.</div><div class='line' id='LC23172'>&nbsp;*</div><div class='line' id='LC23173'>&nbsp;* @example</div><div class='line' id='LC23174'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click me: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC23177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Show: &lt;span ng-show=&quot;checked&quot;&gt;I show up when your checkbox is checked.&lt;/span&gt; &lt;br/&gt;</div><div class='line' id='LC23178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hide: &lt;span ng-hide=&quot;checked&quot;&gt;I hide when your checkbox is checked.&lt;/span&gt;</div><div class='line' id='LC23179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-show / ng-hide&#39;, function() {</div><div class='line' id='LC23182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:first:hidden&#39;).count()).toEqual(1);</div><div class='line' id='LC23183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:last:visible&#39;).count()).toEqual(1);</div><div class='line' id='LC23184'><br/></div><div class='line' id='LC23185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;checked&#39;).check();</div><div class='line' id='LC23186'><br/></div><div class='line' id='LC23187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:first:visible&#39;).count()).toEqual(1);</div><div class='line' id='LC23188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:last:hidden&#39;).count()).toEqual(1);</div><div class='line' id='LC23189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23191'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23192'>&nbsp;*/</div><div class='line' id='LC23193'>//TODO(misko): refactor to remove element from the DOM</div><div class='line' id='LC23194'>var ngShowDirective = ngDirective(function(scope, element, attr){</div><div class='line' id='LC23195'>&nbsp;&nbsp;scope.$watch(attr.ngShow, function ngShowWatchAction(value){</div><div class='line' id='LC23196'>&nbsp;&nbsp;&nbsp;&nbsp;element.css(&#39;display&#39;, toBoolean(value) ? &#39;&#39; : &#39;none&#39;);</div><div class='line' id='LC23197'>&nbsp;&nbsp;});</div><div class='line' id='LC23198'>});</div><div class='line' id='LC23199'><br/></div><div class='line' id='LC23200'><br/></div><div class='line' id='LC23201'>/**</div><div class='line' id='LC23202'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23203'>&nbsp;* @name ng.directive:ngHide</div><div class='line' id='LC23204'>&nbsp;*</div><div class='line' id='LC23205'>&nbsp;* @description</div><div class='line' id='LC23206'>&nbsp;* The `ngHide` and `ngShow` directives hide or show a portion of the DOM tree (HTML)</div><div class='line' id='LC23207'>&nbsp;* conditionally.</div><div class='line' id='LC23208'>&nbsp;*</div><div class='line' id='LC23209'>&nbsp;* @element ANY</div><div class='line' id='LC23210'>&nbsp;* @param {expression} ngHide If the {@link guide/expression expression} is truthy then</div><div class='line' id='LC23211'>&nbsp;*     the element is shown or hidden respectively.</div><div class='line' id='LC23212'>&nbsp;*</div><div class='line' id='LC23213'>&nbsp;* @example</div><div class='line' id='LC23214'>&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click me: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</div><div class='line' id='LC23217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Show: &lt;span ng-show=&quot;checked&quot;&gt;I show up when you checkbox is checked?&lt;/span&gt; &lt;br/&gt;</div><div class='line' id='LC23218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hide: &lt;span ng-hide=&quot;checked&quot;&gt;I hide when you checkbox is checked?&lt;/span&gt;</div><div class='line' id='LC23219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-show / ng-hide&#39;, function() {</div><div class='line' id='LC23222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:first:hidden&#39;).count()).toEqual(1);</div><div class='line' id='LC23223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:last:visible&#39;).count()).toEqual(1);</div><div class='line' id='LC23224'><br/></div><div class='line' id='LC23225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;checked&#39;).check();</div><div class='line' id='LC23226'><br/></div><div class='line' id='LC23227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:first:visible&#39;).count()).toEqual(1);</div><div class='line' id='LC23228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span:last:hidden&#39;).count()).toEqual(1);</div><div class='line' id='LC23229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23231'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23232'>&nbsp;*/</div><div class='line' id='LC23233'>//TODO(misko): refactor to remove element from the DOM</div><div class='line' id='LC23234'>var ngHideDirective = ngDirective(function(scope, element, attr){</div><div class='line' id='LC23235'>&nbsp;&nbsp;scope.$watch(attr.ngHide, function ngHideWatchAction(value){</div><div class='line' id='LC23236'>&nbsp;&nbsp;&nbsp;&nbsp;element.css(&#39;display&#39;, toBoolean(value) ? &#39;none&#39; : &#39;&#39;);</div><div class='line' id='LC23237'>&nbsp;&nbsp;});</div><div class='line' id='LC23238'>});</div><div class='line' id='LC23239'><br/></div><div class='line' id='LC23240'>/**</div><div class='line' id='LC23241'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23242'>&nbsp;* @name ng.directive:ngStyle</div><div class='line' id='LC23243'>&nbsp;*</div><div class='line' id='LC23244'>&nbsp;* @description</div><div class='line' id='LC23245'>&nbsp;* The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.</div><div class='line' id='LC23246'>&nbsp;*</div><div class='line' id='LC23247'>&nbsp;* @element ANY</div><div class='line' id='LC23248'>&nbsp;* @param {expression} ngStyle {@link guide/expression Expression} which evals to an</div><div class='line' id='LC23249'>&nbsp;*      object whose keys are CSS style names and values are corresponding values for those CSS</div><div class='line' id='LC23250'>&nbsp;*      keys.</div><div class='line' id='LC23251'>&nbsp;*</div><div class='line' id='LC23252'>&nbsp;* @example</div><div class='line' id='LC23253'>&nbsp;&nbsp;&nbsp;&lt;example&gt;</div><div class='line' id='LC23254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC23255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;button&quot; value=&quot;set&quot; ng-click=&quot;myStyle={color:&#39;red&#39;}&quot;&gt;</div><div class='line' id='LC23256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;button&quot; value=&quot;clear&quot; ng-click=&quot;myStyle={}&quot;&gt;</div><div class='line' id='LC23257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br/&gt;</div><div class='line' id='LC23258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-style=&quot;myStyle&quot;&gt;Sample Text&lt;/span&gt;</div><div class='line' id='LC23259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;myStyle={{myStyle}}&lt;/pre&gt;</div><div class='line' id='LC23260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;style.css&quot;&gt;</div><div class='line' id='LC23262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;span {</div><div class='line' id='LC23263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: black;</div><div class='line' id='LC23264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC23267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-style&#39;, function() {</div><div class='line' id='LC23268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(0, 0, 0)&#39;);</div><div class='line' id='LC23269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live :button[value=set]&#39;).click();</div><div class='line' id='LC23270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(255, 0, 0)&#39;);</div><div class='line' id='LC23271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;.doc-example-live :button[value=clear]&#39;).click();</div><div class='line' id='LC23272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(0, 0, 0)&#39;);</div><div class='line' id='LC23273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23275'>&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC23276'>&nbsp;*/</div><div class='line' id='LC23277'>var ngStyleDirective = ngDirective(function(scope, element, attr) {</div><div class='line' id='LC23278'>&nbsp;&nbsp;scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {</div><div class='line' id='LC23279'>&nbsp;&nbsp;&nbsp;&nbsp;if (oldStyles &amp;&amp; (newStyles !== oldStyles)) {</div><div class='line' id='LC23280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(oldStyles, function(val, style) { element.css(style, &#39;&#39;);});</div><div class='line' id='LC23281'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23282'>&nbsp;&nbsp;&nbsp;&nbsp;if (newStyles) element.css(newStyles);</div><div class='line' id='LC23283'>&nbsp;&nbsp;}, true);</div><div class='line' id='LC23284'>});</div><div class='line' id='LC23285'><br/></div><div class='line' id='LC23286'>/**</div><div class='line' id='LC23287'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23288'>&nbsp;* @name ng.directive:ngSwitch</div><div class='line' id='LC23289'>&nbsp;* @restrict EA</div><div class='line' id='LC23290'>&nbsp;*</div><div class='line' id='LC23291'>&nbsp;* @description</div><div class='line' id='LC23292'>&nbsp;* Conditionally change the DOM structure.</div><div class='line' id='LC23293'>&nbsp;*</div><div class='line' id='LC23294'>&nbsp;* @usage</div><div class='line' id='LC23295'>&nbsp;* &lt;ANY ng-switch=&quot;expression&quot;&gt;</div><div class='line' id='LC23296'>&nbsp;*   &lt;ANY ng-switch-when=&quot;matchValue1&quot;&gt;...&lt;/ANY&gt;</div><div class='line' id='LC23297'>&nbsp;*   &lt;ANY ng-switch-when=&quot;matchValue2&quot;&gt;...&lt;/ANY&gt;</div><div class='line' id='LC23298'>&nbsp;*   ...</div><div class='line' id='LC23299'>&nbsp;*   &lt;ANY ng-switch-default&gt;...&lt;/ANY&gt;</div><div class='line' id='LC23300'>&nbsp;* &lt;/ANY&gt;</div><div class='line' id='LC23301'>&nbsp;*</div><div class='line' id='LC23302'>&nbsp;* @scope</div><div class='line' id='LC23303'>&nbsp;* @param {*} ngSwitch|on expression to match against &lt;tt&gt;ng-switch-when&lt;/tt&gt;.</div><div class='line' id='LC23304'>&nbsp;* @paramDescription</div><div class='line' id='LC23305'>&nbsp;* On child elments add:</div><div class='line' id='LC23306'>&nbsp;*</div><div class='line' id='LC23307'>&nbsp;* * `ngSwitchWhen`: the case statement to match against. If match then this</div><div class='line' id='LC23308'>&nbsp;*   case will be displayed.</div><div class='line' id='LC23309'>&nbsp;* * `ngSwitchDefault`: the default case when no other casses match.</div><div class='line' id='LC23310'>&nbsp;*</div><div class='line' id='LC23311'>&nbsp;* @example</div><div class='line' id='LC23312'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC23315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC23316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.items = [&#39;settings&#39;, &#39;home&#39;, &#39;other&#39;];</div><div class='line' id='LC23317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.selection = $scope.items[0];</div><div class='line' id='LC23318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC23320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC23321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;selection&quot; ng-options=&quot;item for item in items&quot;&gt;</div><div class='line' id='LC23322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC23323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tt&gt;selection={{selection}}&lt;/tt&gt;</div><div class='line' id='LC23324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;</div><div class='line' id='LC23325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-switch on=&quot;selection&quot; &gt;</div><div class='line' id='LC23326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-switch-when=&quot;settings&quot;&gt;Settings Div&lt;/div&gt;</div><div class='line' id='LC23327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-switch-when=&quot;home&quot;&gt;Home Span&lt;/span&gt;</div><div class='line' id='LC23328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span ng-switch-default&gt;default&lt;/span&gt;</div><div class='line' id='LC23329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should start in settings&#39;, function() {</div><div class='line' id='LC23334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/Settings Div/);</div><div class='line' id='LC23335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should change to home&#39;, function() {</div><div class='line' id='LC23337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(&#39;selection&#39;).option(&#39;home&#39;);</div><div class='line' id='LC23338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/Home Span/);</div><div class='line' id='LC23339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should select deafault&#39;, function() {</div><div class='line' id='LC23341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(&#39;selection&#39;).option(&#39;other&#39;);</div><div class='line' id='LC23342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/default/);</div><div class='line' id='LC23343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23345'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23346'>&nbsp;*/</div><div class='line' id='LC23347'>var NG_SWITCH = &#39;ng-switch&#39;;</div><div class='line' id='LC23348'>var ngSwitchDirective = valueFn({</div><div class='line' id='LC23349'>&nbsp;&nbsp;restrict: &#39;EA&#39;,</div><div class='line' id='LC23350'>&nbsp;&nbsp;require: &#39;ngSwitch&#39;,</div><div class='line' id='LC23351'>&nbsp;&nbsp;// asks for $scope to fool the BC controller module</div><div class='line' id='LC23352'>&nbsp;&nbsp;controller: [&#39;$scope&#39;, function ngSwitchController() {</div><div class='line' id='LC23353'>&nbsp;&nbsp;&nbsp;&nbsp;this.cases = {};</div><div class='line' id='LC23354'>&nbsp;&nbsp;}],</div><div class='line' id='LC23355'>&nbsp;&nbsp;link: function(scope, element, attr, ctrl) {</div><div class='line' id='LC23356'>&nbsp;&nbsp;&nbsp;&nbsp;var watchExpr = attr.ngSwitch || attr.on,</div><div class='line' id='LC23357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedTransclude,</div><div class='line' id='LC23358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedElement,</div><div class='line' id='LC23359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedScope;</div><div class='line' id='LC23360'><br/></div><div class='line' id='LC23361'>&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(watchExpr, function ngSwitchWatchAction(value) {</div><div class='line' id='LC23362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (selectedElement) {</div><div class='line' id='LC23363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedScope.$destroy();</div><div class='line' id='LC23364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedElement.remove();</div><div class='line' id='LC23365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedElement = selectedScope = null;</div><div class='line' id='LC23366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((selectedTransclude = ctrl.cases[&#39;!&#39; + value] || ctrl.cases[&#39;?&#39;])) {</div><div class='line' id='LC23368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$eval(attr.change);</div><div class='line' id='LC23369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedScope = scope.$new();</div><div class='line' id='LC23370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedTransclude(selectedScope, function(caseElement) {</div><div class='line' id='LC23371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedElement = caseElement;</div><div class='line' id='LC23372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.append(caseElement);</div><div class='line' id='LC23373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23375'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23376'>&nbsp;&nbsp;}</div><div class='line' id='LC23377'>});</div><div class='line' id='LC23378'><br/></div><div class='line' id='LC23379'>var ngSwitchWhenDirective = ngDirective({</div><div class='line' id='LC23380'>&nbsp;&nbsp;transclude: &#39;element&#39;,</div><div class='line' id='LC23381'>&nbsp;&nbsp;priority: 500,</div><div class='line' id='LC23382'>&nbsp;&nbsp;require: &#39;^ngSwitch&#39;,</div><div class='line' id='LC23383'>&nbsp;&nbsp;compile: function(element, attrs, transclude) {</div><div class='line' id='LC23384'>&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element, attr, ctrl) {</div><div class='line' id='LC23385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.cases[&#39;!&#39; + attrs.ngSwitchWhen] = transclude;</div><div class='line' id='LC23386'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23387'>&nbsp;&nbsp;}</div><div class='line' id='LC23388'>});</div><div class='line' id='LC23389'><br/></div><div class='line' id='LC23390'>var ngSwitchDefaultDirective = ngDirective({</div><div class='line' id='LC23391'>&nbsp;&nbsp;transclude: &#39;element&#39;,</div><div class='line' id='LC23392'>&nbsp;&nbsp;priority: 500,</div><div class='line' id='LC23393'>&nbsp;&nbsp;require: &#39;^ngSwitch&#39;,</div><div class='line' id='LC23394'>&nbsp;&nbsp;compile: function(element, attrs, transclude) {</div><div class='line' id='LC23395'>&nbsp;&nbsp;&nbsp;&nbsp;return function(scope, element, attr, ctrl) {</div><div class='line' id='LC23396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.cases[&#39;?&#39;] = transclude;</div><div class='line' id='LC23397'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23398'>&nbsp;&nbsp;}</div><div class='line' id='LC23399'>});</div><div class='line' id='LC23400'><br/></div><div class='line' id='LC23401'>/**</div><div class='line' id='LC23402'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23403'>&nbsp;* @name ng.directive:ngTransclude</div><div class='line' id='LC23404'>&nbsp;*</div><div class='line' id='LC23405'>&nbsp;* @description</div><div class='line' id='LC23406'>&nbsp;* Insert the transcluded DOM here.</div><div class='line' id='LC23407'>&nbsp;*</div><div class='line' id='LC23408'>&nbsp;* @element ANY</div><div class='line' id='LC23409'>&nbsp;*</div><div class='line' id='LC23410'>&nbsp;* @example</div><div class='line' id='LC23411'>&nbsp;&nbsp;&nbsp;&lt;doc:example module=&quot;transclude&quot;&gt;</div><div class='line' id='LC23412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC23414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Ctrl($scope) {</div><div class='line' id='LC23415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.title = &#39;Lorem Ipsum&#39;;</div><div class='line' id='LC23416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.text = &#39;Neque porro quisquam est qui dolorem ipsum quia dolor...&#39;;</div><div class='line' id='LC23417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23418'><br/></div><div class='line' id='LC23419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.module(&#39;transclude&#39;, [])</div><div class='line' id='LC23420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.directive(&#39;pane&#39;, function(){</div><div class='line' id='LC23421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC23422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC23423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transclude: true,</div><div class='line' id='LC23424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope: &#39;isolate&#39;,</div><div class='line' id='LC23425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals: { title:&#39;bind&#39; },</div><div class='line' id='LC23426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template: &#39;&lt;div style=&quot;border: 1px solid black;&quot;&gt;&#39; +</div><div class='line' id='LC23427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div style=&quot;background-color: gray&quot;&gt;{{title}}&lt;/div&gt;&#39; +</div><div class='line' id='LC23428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div ng-transclude&gt;&lt;/div&gt;&#39; +</div><div class='line' id='LC23429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39;</div><div class='line' id='LC23430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC23433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class='line' id='LC23434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input ng-model=&quot;title&quot;&gt;&lt;br&gt;</div><div class='line' id='LC23435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;textarea ng-model=&quot;text&quot;&gt;&lt;/textarea&gt; &lt;br/&gt;</div><div class='line' id='LC23436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pane title=&quot;{{title}}&quot;&gt;{{text}}&lt;/pane&gt;</div><div class='line' id='LC23437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should have transcluded&#39;, function() {</div><div class='line' id='LC23441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;title&#39;).enter(&#39;TITLE&#39;);</div><div class='line' id='LC23442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input(&#39;text&#39;).enter(&#39;TEXT&#39;);</div><div class='line' id='LC23443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;title&#39;)).toEqual(&#39;TITLE&#39;);</div><div class='line' id='LC23444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;text&#39;)).toEqual(&#39;TEXT&#39;);</div><div class='line' id='LC23445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23447'>&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23448'>&nbsp;*</div><div class='line' id='LC23449'>&nbsp;*/</div><div class='line' id='LC23450'>var ngTranscludeDirective = ngDirective({</div><div class='line' id='LC23451'>&nbsp;&nbsp;controller: [&#39;$transclude&#39;, &#39;$element&#39;, function($transclude, $element) {</div><div class='line' id='LC23452'>&nbsp;&nbsp;&nbsp;&nbsp;$transclude(function(clone) {</div><div class='line' id='LC23453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.append(clone);</div><div class='line' id='LC23454'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23455'>&nbsp;&nbsp;}]</div><div class='line' id='LC23456'>});</div><div class='line' id='LC23457'><br/></div><div class='line' id='LC23458'>/**</div><div class='line' id='LC23459'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23460'>&nbsp;* @name ng.directive:ngView</div><div class='line' id='LC23461'>&nbsp;* @restrict ECA</div><div class='line' id='LC23462'>&nbsp;*</div><div class='line' id='LC23463'>&nbsp;* @description</div><div class='line' id='LC23464'>&nbsp;* # Overview</div><div class='line' id='LC23465'>&nbsp;* `ngView` is a directive that complements the {@link ng.$route $route} service by</div><div class='line' id='LC23466'>&nbsp;* including the rendered template of the current route into the main layout (`index.html`) file.</div><div class='line' id='LC23467'>&nbsp;* Every time the current route changes, the included view changes with it according to the</div><div class='line' id='LC23468'>&nbsp;* configuration of the `$route` service.</div><div class='line' id='LC23469'>&nbsp;*</div><div class='line' id='LC23470'>&nbsp;* @scope</div><div class='line' id='LC23471'>&nbsp;* @example</div><div class='line' id='LC23472'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;example module=&quot;ngView&quot;&gt;</div><div class='line' id='LC23473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;index.html&quot;&gt;</div><div class='line' id='LC23474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;MainCntl&quot;&gt;</div><div class='line' id='LC23475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Choose:</div><div class='line' id='LC23476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Moby&quot;&gt;Moby&lt;/a&gt; |</div><div class='line' id='LC23477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Moby/ch/1&quot;&gt;Moby: Ch1&lt;/a&gt; |</div><div class='line' id='LC23478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Gatsby&quot;&gt;Gatsby&lt;/a&gt; |</div><div class='line' id='LC23479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Gatsby/ch/4?key=value&quot;&gt;Gatsby: Ch4&lt;/a&gt; |</div><div class='line' id='LC23480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a href=&quot;Book/Scarlet&quot;&gt;Scarlet Letter&lt;/a&gt;&lt;br/&gt;</div><div class='line' id='LC23481'><br/></div><div class='line' id='LC23482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-view&gt;&lt;/div&gt;</div><div class='line' id='LC23483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr /&gt;</div><div class='line' id='LC23484'><br/></div><div class='line' id='LC23485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$location.path() = {{$location.path()}}&lt;/pre&gt;</div><div class='line' id='LC23486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.templateUrl = {{$route.current.templateUrl}}&lt;/pre&gt;</div><div class='line' id='LC23487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.params = {{$route.current.params}}&lt;/pre&gt;</div><div class='line' id='LC23488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$route.current.scope.name = {{$route.current.scope.name}}&lt;/pre&gt;</div><div class='line' id='LC23489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&gt;$routeParams = {{$routeParams}}&lt;/pre&gt;</div><div class='line' id='LC23490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23492'><br/></div><div class='line' id='LC23493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;book.html&quot;&gt;</div><div class='line' id='LC23494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: {{name}}&lt;br /&gt;</div><div class='line' id='LC23495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book Id: {{params.bookId}}&lt;br /&gt;</div><div class='line' id='LC23496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23497'><br/></div><div class='line' id='LC23498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;chapter.html&quot;&gt;</div><div class='line' id='LC23499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: {{name}}&lt;br /&gt;</div><div class='line' id='LC23500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book Id: {{params.bookId}}&lt;br /&gt;</div><div class='line' id='LC23501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chapter Id: {{params.chapterId}}</div><div class='line' id='LC23502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23503'><br/></div><div class='line' id='LC23504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;script.js&quot;&gt;</div><div class='line' id='LC23505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.module(&#39;ngView&#39;, [], function($routeProvider, $locationProvider) {</div><div class='line' id='LC23506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$routeProvider.when(&#39;/Book/:bookId&#39;, {</div><div class='line' id='LC23507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateUrl: &#39;book.html&#39;,</div><div class='line' id='LC23508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: BookCntl</div><div class='line' id='LC23509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$routeProvider.when(&#39;/Book/:bookId/ch/:chapterId&#39;, {</div><div class='line' id='LC23511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templateUrl: &#39;chapter.html&#39;,</div><div class='line' id='LC23512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: ChapterCntl</div><div class='line' id='LC23513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23514'><br/></div><div class='line' id='LC23515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// configure html5 to get links working on jsfiddle</div><div class='line' id='LC23516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$locationProvider.html5Mode(true);</div><div class='line' id='LC23517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23518'><br/></div><div class='line' id='LC23519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function MainCntl($scope, $route, $routeParams, $location) {</div><div class='line' id='LC23520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$route = $route;</div><div class='line' id='LC23521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$location = $location;</div><div class='line' id='LC23522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$routeParams = $routeParams;</div><div class='line' id='LC23523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23524'><br/></div><div class='line' id='LC23525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function BookCntl($scope, $routeParams) {</div><div class='line' id='LC23526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &quot;BookCntl&quot;;</div><div class='line' id='LC23527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.params = $routeParams;</div><div class='line' id='LC23528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23529'><br/></div><div class='line' id='LC23530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ChapterCntl($scope, $routeParams) {</div><div class='line' id='LC23531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.name = &quot;ChapterCntl&quot;;</div><div class='line' id='LC23532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.params = $routeParams;</div><div class='line' id='LC23533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23535'><br/></div><div class='line' id='LC23536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;file name=&quot;scenario.js&quot;&gt;</div><div class='line' id='LC23537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should load and compile correct template&#39;, function() {</div><div class='line' id='LC23538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;a:contains(&quot;Moby: Ch1&quot;)&#39;).click();</div><div class='line' id='LC23539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var content = element(&#39;.doc-example-live [ng-view]&#39;).text();</div><div class='line' id='LC23540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/controller\: ChapterCntl/);</div><div class='line' id='LC23541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Book Id\: Moby/);</div><div class='line' id='LC23542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Chapter Id\: 1/);</div><div class='line' id='LC23543'><br/></div><div class='line' id='LC23544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;a:contains(&quot;Scarlet&quot;)&#39;).click();</div><div class='line' id='LC23545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content = element(&#39;.doc-example-live [ng-view]&#39;).text();</div><div class='line' id='LC23546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/controller\: BookCntl/);</div><div class='line' id='LC23547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(content).toMatch(/Book Id\: Scarlet/);</div><div class='line' id='LC23548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</div><div class='line' id='LC23550'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/example&gt;</div><div class='line' id='LC23551'>&nbsp;*/</div><div class='line' id='LC23552'><br/></div><div class='line' id='LC23553'><br/></div><div class='line' id='LC23554'>/**</div><div class='line' id='LC23555'>&nbsp;* @ngdoc event</div><div class='line' id='LC23556'>&nbsp;* @name ng.directive:ngView#$viewContentLoaded</div><div class='line' id='LC23557'>&nbsp;* @eventOf ng.directive:ngView</div><div class='line' id='LC23558'>&nbsp;* @eventType emit on the current ngView scope</div><div class='line' id='LC23559'>&nbsp;* @description</div><div class='line' id='LC23560'>&nbsp;* Emitted every time the ngView content is reloaded.</div><div class='line' id='LC23561'>&nbsp;*/</div><div class='line' id='LC23562'>var ngViewDirective = [&#39;$http&#39;, &#39;$templateCache&#39;, &#39;$route&#39;, &#39;$anchorScroll&#39;, &#39;$compile&#39;,</div><div class='line' id='LC23563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;$controller&#39;,</div><div class='line' id='LC23564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function($http,   $templateCache,   $route,   $anchorScroll,   $compile,</div><div class='line' id='LC23565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$controller) {</div><div class='line' id='LC23566'>&nbsp;&nbsp;return {</div><div class='line' id='LC23567'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;ECA&#39;,</div><div class='line' id='LC23568'>&nbsp;&nbsp;&nbsp;&nbsp;terminal: true,</div><div class='line' id='LC23569'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr) {</div><div class='line' id='LC23570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lastScope,</div><div class='line' id='LC23571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onloadExp = attr.onload || &#39;&#39;;</div><div class='line' id='LC23572'><br/></div><div class='line' id='LC23573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$on(&#39;$routeChangeSuccess&#39;, update);</div><div class='line' id='LC23574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update();</div><div class='line' id='LC23575'><br/></div><div class='line' id='LC23576'><br/></div><div class='line' id='LC23577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function destroyLastScope() {</div><div class='line' id='LC23578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastScope) {</div><div class='line' id='LC23579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastScope.$destroy();</div><div class='line' id='LC23580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastScope = null;</div><div class='line' id='LC23581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23583'><br/></div><div class='line' id='LC23584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function clearContent() {</div><div class='line' id='LC23585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(&#39;&#39;);</div><div class='line' id='LC23586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroyLastScope();</div><div class='line' id='LC23587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23588'><br/></div><div class='line' id='LC23589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function update() {</div><div class='line' id='LC23590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var locals = $route.current &amp;&amp; $route.current.locals,</div><div class='line' id='LC23591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template = locals &amp;&amp; locals.$template;</div><div class='line' id='LC23592'><br/></div><div class='line' id='LC23593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (template) {</div><div class='line' id='LC23594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.html(template);</div><div class='line' id='LC23595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroyLastScope();</div><div class='line' id='LC23596'><br/></div><div class='line' id='LC23597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var link = $compile(element.contents()),</div><div class='line' id='LC23598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = $route.current,</div><div class='line' id='LC23599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller;</div><div class='line' id='LC23600'><br/></div><div class='line' id='LC23601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastScope = current.scope = scope.$new();</div><div class='line' id='LC23602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (current.controller) {</div><div class='line' id='LC23603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals.$scope = lastScope;</div><div class='line' id='LC23604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller = $controller(current.controller, locals);</div><div class='line' id='LC23605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.children().data(&#39;$ngControllerController&#39;, controller);</div><div class='line' id='LC23606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23607'><br/></div><div class='line' id='LC23608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link(lastScope);</div><div class='line' id='LC23609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastScope.$emit(&#39;$viewContentLoaded&#39;);</div><div class='line' id='LC23610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastScope.$eval(onloadExp);</div><div class='line' id='LC23611'><br/></div><div class='line' id='LC23612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// $anchorScroll might listen on event...</div><div class='line' id='LC23613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$anchorScroll();</div><div class='line' id='LC23614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearContent();</div><div class='line' id='LC23616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23618'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23619'>&nbsp;&nbsp;};</div><div class='line' id='LC23620'>}];</div><div class='line' id='LC23621'><br/></div><div class='line' id='LC23622'>/**</div><div class='line' id='LC23623'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23624'>&nbsp;* @name ng.directive:script</div><div class='line' id='LC23625'>&nbsp;*</div><div class='line' id='LC23626'>&nbsp;* @description</div><div class='line' id='LC23627'>&nbsp;* Load content of a script tag, with type `text/ng-template`, into `$templateCache`, so that the</div><div class='line' id='LC23628'>&nbsp;* template can be used by `ngInclude`, `ngView` or directive templates.</div><div class='line' id='LC23629'>&nbsp;*</div><div class='line' id='LC23630'>&nbsp;* @restrict E</div><div class='line' id='LC23631'>&nbsp;* @param {&#39;text/ng-template&#39;} type must be set to `&#39;text/ng-template&#39;`</div><div class='line' id='LC23632'>&nbsp;*</div><div class='line' id='LC23633'>&nbsp;* @example</div><div class='line' id='LC23634'>&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23635'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/ng-template&quot; id=&quot;/tpl.html&quot;&gt;</div><div class='line' id='LC23637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Content of the template.</div><div class='line' id='LC23638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC23639'><br/></div><div class='line' id='LC23640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a ng-click=&quot;currentTpl=&#39;/tpl.html&#39;&quot; id=&quot;tpl-link&quot;&gt;Load inlined template&lt;/a&gt;</div><div class='line' id='LC23641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;tpl-content&quot; ng-include src=&quot;currentTpl&quot;&gt;&lt;/div&gt;</div><div class='line' id='LC23642'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23643'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should load template defined inside script tag&#39;, function() {</div><div class='line' id='LC23645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element(&#39;#tpl-link&#39;).click();</div><div class='line' id='LC23646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(element(&#39;#tpl-content&#39;).text()).toMatch(/Content of the template/);</div><div class='line' id='LC23647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23648'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23649'>&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23650'>&nbsp;*/</div><div class='line' id='LC23651'>var scriptDirective = [&#39;$templateCache&#39;, function($templateCache) {</div><div class='line' id='LC23652'>&nbsp;&nbsp;return {</div><div class='line' id='LC23653'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC23654'>&nbsp;&nbsp;&nbsp;&nbsp;terminal: true,</div><div class='line' id='LC23655'>&nbsp;&nbsp;&nbsp;&nbsp;compile: function(element, attr) {</div><div class='line' id='LC23656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (attr.type == &#39;text/ng-template&#39;) {</div><div class='line' id='LC23657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var templateUrl = attr.id,</div><div class='line' id='LC23658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE is not consistent, in scripts we have to read .text but in other nodes we have to read .textContent</div><div class='line' id='LC23659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text = element[0].text;</div><div class='line' id='LC23660'><br/></div><div class='line' id='LC23661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$templateCache.put(templateUrl, text);</div><div class='line' id='LC23662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23663'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23664'>&nbsp;&nbsp;};</div><div class='line' id='LC23665'>}];</div><div class='line' id='LC23666'><br/></div><div class='line' id='LC23667'>/**</div><div class='line' id='LC23668'>&nbsp;* @ngdoc directive</div><div class='line' id='LC23669'>&nbsp;* @name ng.directive:select</div><div class='line' id='LC23670'>&nbsp;* @restrict E</div><div class='line' id='LC23671'>&nbsp;*</div><div class='line' id='LC23672'>&nbsp;* @description</div><div class='line' id='LC23673'>&nbsp;* HTML `SELECT` element with angular data-binding.</div><div class='line' id='LC23674'>&nbsp;*</div><div class='line' id='LC23675'>&nbsp;* # `ngOptions`</div><div class='line' id='LC23676'>&nbsp;*</div><div class='line' id='LC23677'>&nbsp;* Optionally `ngOptions` attribute can be used to dynamically generate a list of `&lt;option&gt;`</div><div class='line' id='LC23678'>&nbsp;* elements for a `&lt;select&gt;` element using an array or an object obtained by evaluating the</div><div class='line' id='LC23679'>&nbsp;* `ngOptions` expression.</div><div class='line' id='LC23680'>&nbsp;*˝˝</div><div class='line' id='LC23681'>&nbsp;* When an item in the select menu is select, the value of array element or object property</div><div class='line' id='LC23682'>&nbsp;* represented by the selected option will be bound to the model identified by the `ngModel`</div><div class='line' id='LC23683'>&nbsp;* directive of the parent select element.</div><div class='line' id='LC23684'>&nbsp;*</div><div class='line' id='LC23685'>&nbsp;* Optionally, a single hard-coded `&lt;option&gt;` element, with the value set to an empty string, can</div><div class='line' id='LC23686'>&nbsp;* be nested into the `&lt;select&gt;` element. This element will then represent `null` or &quot;not selected&quot;</div><div class='line' id='LC23687'>&nbsp;* option. See example below for demonstration.</div><div class='line' id='LC23688'>&nbsp;*</div><div class='line' id='LC23689'>&nbsp;* Note: `ngOptions` provides iterator facility for `&lt;option&gt;` element which should be used instead</div><div class='line' id='LC23690'>&nbsp;* of {@link ng.directive:ngRepeat ngRepeat} when you want the</div><div class='line' id='LC23691'>&nbsp;* `select` model to be bound to a non-string value. This is because an option element can currently</div><div class='line' id='LC23692'>&nbsp;* be bound to string values only.</div><div class='line' id='LC23693'>&nbsp;*</div><div class='line' id='LC23694'>&nbsp;* @param {string} ngModel Assignable angular expression to data-bind to.</div><div class='line' id='LC23695'>&nbsp;* @param {string=} name Property name of the form under which the control is published.</div><div class='line' id='LC23696'>&nbsp;* @param {string=} required The control is considered valid only if value is entered.</div><div class='line' id='LC23697'>&nbsp;* @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to</div><div class='line' id='LC23698'>&nbsp;*    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of</div><div class='line' id='LC23699'>&nbsp;*    `required` when you want to data-bind to the `required` attribute.</div><div class='line' id='LC23700'>&nbsp;* @param {comprehension_expression=} ngOptions in one of the following forms:</div><div class='line' id='LC23701'>&nbsp;*</div><div class='line' id='LC23702'>&nbsp;*   * for array data sources:</div><div class='line' id='LC23703'>&nbsp;*     * `label` **`for`** `value` **`in`** `array`</div><div class='line' id='LC23704'>&nbsp;*     * `select` **`as`** `label` **`for`** `value` **`in`** `array`</div><div class='line' id='LC23705'>&nbsp;*     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`</div><div class='line' id='LC23706'>&nbsp;*     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array`</div><div class='line' id='LC23707'>&nbsp;*   * for object data sources:</div><div class='line' id='LC23708'>&nbsp;*     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`</div><div class='line' id='LC23709'>&nbsp;*     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`</div><div class='line' id='LC23710'>&nbsp;*     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`</div><div class='line' id='LC23711'>&nbsp;*     * `select` **`as`** `label` **`group by`** `group`</div><div class='line' id='LC23712'>&nbsp;*         **`for` `(`**`key`**`,`** `value`**`) in`** `object`</div><div class='line' id='LC23713'>&nbsp;*</div><div class='line' id='LC23714'>&nbsp;* Where:</div><div class='line' id='LC23715'>&nbsp;*</div><div class='line' id='LC23716'>&nbsp;*   * `array` / `object`: an expression which evaluates to an array / object to iterate over.</div><div class='line' id='LC23717'>&nbsp;*   * `value`: local variable which will refer to each item in the `array` or each property value</div><div class='line' id='LC23718'>&nbsp;*      of `object` during iteration.</div><div class='line' id='LC23719'>&nbsp;*   * `key`: local variable which will refer to a property name in `object` during iteration.</div><div class='line' id='LC23720'>&nbsp;*   * `label`: The result of this expression will be the label for `&lt;option&gt;` element. The</div><div class='line' id='LC23721'>&nbsp;*     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).</div><div class='line' id='LC23722'>&nbsp;*   * `select`: The result of this expression will be bound to the model of the parent `&lt;select&gt;`</div><div class='line' id='LC23723'>&nbsp;*      element. If not specified, `select` expression will default to `value`.</div><div class='line' id='LC23724'>&nbsp;*   * `group`: The result of this expression will be used to group options using the `&lt;optgroup&gt;`</div><div class='line' id='LC23725'>&nbsp;*      DOM element.</div><div class='line' id='LC23726'>&nbsp;*</div><div class='line' id='LC23727'>&nbsp;* @example</div><div class='line' id='LC23728'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:example&gt;</div><div class='line' id='LC23729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:source&gt;</div><div class='line' id='LC23730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</div><div class='line' id='LC23731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function MyCntrl($scope) {</div><div class='line' id='LC23732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.colors = [</div><div class='line' id='LC23733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;black&#39;, shade:&#39;dark&#39;},</div><div class='line' id='LC23734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;white&#39;, shade:&#39;light&#39;},</div><div class='line' id='LC23735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;red&#39;, shade:&#39;dark&#39;},</div><div class='line' id='LC23736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;blue&#39;, shade:&#39;dark&#39;},</div><div class='line' id='LC23737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name:&#39;yellow&#39;, shade:&#39;light&#39;}</div><div class='line' id='LC23738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];</div><div class='line' id='LC23739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.color = $scope.colors[2]; // red</div><div class='line' id='LC23740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</div><div class='line' id='LC23742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div ng-controller=&quot;MyCntrl&quot;&gt;</div><div class='line' id='LC23743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;</div><div class='line' id='LC23744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li ng-repeat=&quot;color in colors&quot;&gt;</div><div class='line' id='LC23745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name: &lt;input ng-model=&quot;color.name&quot;&gt;</div><div class='line' id='LC23746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&lt;a href ng-click=&quot;colors.splice($index, 1)&quot;&gt;X&lt;/a&gt;]</div><div class='line' id='LC23747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC23748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;</div><div class='line' id='LC23749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&lt;a href ng-click=&quot;colors.push({})&quot;&gt;add&lt;/a&gt;]</div><div class='line' id='LC23750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;</div><div class='line' id='LC23751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;</div><div class='line' id='LC23752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;</div><div class='line' id='LC23753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color (null not allowed):</div><div class='line' id='LC23754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name for c in colors&quot;&gt;&lt;/select&gt;&lt;br&gt;</div><div class='line' id='LC23755'><br/></div><div class='line' id='LC23756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color (null allowed):</div><div class='line' id='LC23757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span  class=&quot;nullable&quot;&gt;</div><div class='line' id='LC23758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name for c in colors&quot;&gt;</div><div class='line' id='LC23759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option value=&quot;&quot;&gt;-- chose color --&lt;/option&gt;</div><div class='line' id='LC23760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;</div><div class='line' id='LC23761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;&lt;br/&gt;</div><div class='line' id='LC23762'><br/></div><div class='line' id='LC23763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color grouped by shade:</div><div class='line' id='LC23764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name group by c.shade for c in colors&quot;&gt;</div><div class='line' id='LC23765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt;&lt;br/&gt;</div><div class='line' id='LC23766'><br/></div><div class='line' id='LC23767'><br/></div><div class='line' id='LC23768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select &lt;a href ng-click=&quot;color={name:&#39;not in list&#39;}&quot;&gt;bogus&lt;/a&gt;.&lt;br&gt;</div><div class='line' id='LC23769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;</div><div class='line' id='LC23770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Currently selected: {{ {selected_color:color}  }}</div><div class='line' id='LC23771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div style=&quot;border:solid 1px black; height:20px&quot;</div><div class='line' id='LC23772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ng-style=&quot;{&#39;background-color&#39;:color.name}&quot;&gt;</div><div class='line' id='LC23773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</div><div class='line' id='LC23775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:source&gt;</div><div class='line' id='LC23776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;doc:scenario&gt;</div><div class='line' id='LC23777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it(&#39;should check ng-options&#39;, function() {</div><div class='line' id='LC23778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;red&#39;);</div><div class='line' id='LC23779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(&#39;color&#39;).option(&#39;0&#39;);</div><div class='line' id='LC23780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;black&#39;);</div><div class='line' id='LC23781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using(&#39;.nullable&#39;).select(&#39;color&#39;).option(&#39;&#39;);</div><div class='line' id='LC23782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;null&#39;);</div><div class='line' id='LC23783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:scenario&gt;</div><div class='line' id='LC23785'>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/doc:example&gt;</div><div class='line' id='LC23786'>&nbsp;*/</div><div class='line' id='LC23787'><br/></div><div class='line' id='LC23788'>var ngOptionsDirective = valueFn({ terminal: true });</div><div class='line' id='LC23789'>var selectDirective = [&#39;$compile&#39;, &#39;$parse&#39;, function($compile,   $parse) {</div><div class='line' id='LC23790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//0000111110000000000022220000000000000000000000333300000000000000444444444444444440000000005555555555555555500000006666666666666666600000000000000077770</div><div class='line' id='LC23791'>&nbsp;&nbsp;var NG_OPTIONS_REGEXP = /^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w\d]*)|(?:\(\s*([\$\w][\$\w\d]*)\s*,\s*([\$\w][\$\w\d]*)\s*\)))\s+in\s+(.*)$/,</div><div class='line' id='LC23792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullModelCtrl = {$setViewValue: noop};</div><div class='line' id='LC23793'><br/></div><div class='line' id='LC23794'>&nbsp;&nbsp;return {</div><div class='line' id='LC23795'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC23796'>&nbsp;&nbsp;&nbsp;&nbsp;require: [&#39;select&#39;, &#39;?ngModel&#39;],</div><div class='line' id='LC23797'>&nbsp;&nbsp;&nbsp;&nbsp;controller: [&#39;$element&#39;, &#39;$scope&#39;, &#39;$attrs&#39;, function($element, $scope, $attrs) {</div><div class='line' id='LC23798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this,</div><div class='line' id='LC23799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionsMap = {},</div><div class='line' id='LC23800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl = nullModelCtrl,</div><div class='line' id='LC23801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullOption,</div><div class='line' id='LC23802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unknownOption;</div><div class='line' id='LC23803'><br/></div><div class='line' id='LC23804'><br/></div><div class='line' id='LC23805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.databound = $attrs.ngModel;</div><div class='line' id='LC23806'><br/></div><div class='line' id='LC23807'><br/></div><div class='line' id='LC23808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {</div><div class='line' id='LC23809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl = ngModelCtrl_;</div><div class='line' id='LC23810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullOption = nullOption_;</div><div class='line' id='LC23811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unknownOption = unknownOption_;</div><div class='line' id='LC23812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23813'><br/></div><div class='line' id='LC23814'><br/></div><div class='line' id='LC23815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.addOption = function(value) {</div><div class='line' id='LC23816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionsMap[value] = true;</div><div class='line' id='LC23817'><br/></div><div class='line' id='LC23818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ngModelCtrl.$viewValue == value) {</div><div class='line' id='LC23819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.val(value);</div><div class='line' id='LC23820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (unknownOption.parent()) unknownOption.remove();</div><div class='line' id='LC23821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23823'><br/></div><div class='line' id='LC23824'><br/></div><div class='line' id='LC23825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.removeOption = function(value) {</div><div class='line' id='LC23826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.hasOption(value)) {</div><div class='line' id='LC23827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete optionsMap[value];</div><div class='line' id='LC23828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ngModelCtrl.$viewValue == value) {</div><div class='line' id='LC23829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderUnknownOption(value);</div><div class='line' id='LC23830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23833'><br/></div><div class='line' id='LC23834'><br/></div><div class='line' id='LC23835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.renderUnknownOption = function(val) {</div><div class='line' id='LC23836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var unknownVal = &#39;? &#39; + hashKey(val) + &#39; ?&#39;;</div><div class='line' id='LC23837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unknownOption.val(unknownVal);</div><div class='line' id='LC23838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.prepend(unknownOption);</div><div class='line' id='LC23839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$element.val(unknownVal);</div><div class='line' id='LC23840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unknownOption.prop(&#39;selected&#39;, true); // needed for IE</div><div class='line' id='LC23841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23842'><br/></div><div class='line' id='LC23843'><br/></div><div class='line' id='LC23844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.hasOption = function(value) {</div><div class='line' id='LC23845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return optionsMap.hasOwnProperty(value);</div><div class='line' id='LC23846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23847'><br/></div><div class='line' id='LC23848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$scope.$on(&#39;$destroy&#39;, function() {</div><div class='line' id='LC23849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// disable unknown option so that we don&#39;t do work when the whole select is being destroyed</div><div class='line' id='LC23850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.renderUnknownOption = noop;</div><div class='line' id='LC23851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23852'>&nbsp;&nbsp;&nbsp;&nbsp;}],</div><div class='line' id='LC23853'><br/></div><div class='line' id='LC23854'>&nbsp;&nbsp;&nbsp;&nbsp;link: function(scope, element, attr, ctrls) {</div><div class='line' id='LC23855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if ngModel is not defined, we don&#39;t need to do anything</div><div class='line' id='LC23856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!ctrls[1]) return;</div><div class='line' id='LC23857'><br/></div><div class='line' id='LC23858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var selectCtrl = ctrls[0],</div><div class='line' id='LC23859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl = ctrls[1],</div><div class='line' id='LC23860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multiple = attr.multiple,</div><div class='line' id='LC23861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionsExp = attr.ngOptions,</div><div class='line' id='LC23862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullOption = false, // if false, user will not be able to select it (used by ngOptions)</div><div class='line' id='LC23863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emptyOption,</div><div class='line' id='LC23864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we can&#39;t just jqLite(&#39;&lt;option&gt;&#39;) since jqLite is not smart enough</div><div class='line' id='LC23865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// to create it in &lt;select&gt; and IE barfs otherwise.</div><div class='line' id='LC23866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionTemplate = jqLite(document.createElement(&#39;option&#39;)),</div><div class='line' id='LC23867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optGroupTemplate =jqLite(document.createElement(&#39;optgroup&#39;)),</div><div class='line' id='LC23868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unknownOption = optionTemplate.clone();</div><div class='line' id='LC23869'><br/></div><div class='line' id='LC23870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// find &quot;null&quot; option</div><div class='line' id='LC23871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var i = 0, children = element.children(), ii = children.length; i &lt; ii; i++) {</div><div class='line' id='LC23872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (children[i].value == &#39;&#39;) {</div><div class='line' id='LC23873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emptyOption = nullOption = children.eq(i);</div><div class='line' id='LC23874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC23875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23877'><br/></div><div class='line' id='LC23878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl.init(ngModelCtrl, nullOption, unknownOption);</div><div class='line' id='LC23879'><br/></div><div class='line' id='LC23880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// required validator</div><div class='line' id='LC23881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (multiple &amp;&amp; (attr.required || attr.ngRequired)) {</div><div class='line' id='LC23882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var requiredValidator = function(value) {</div><div class='line' id='LC23883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl.$setValidity(&#39;required&#39;, !attr.required || (value &amp;&amp; value.length));</div><div class='line' id='LC23884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC23885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23886'><br/></div><div class='line' id='LC23887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl.$parsers.push(requiredValidator);</div><div class='line' id='LC23888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl.$formatters.unshift(requiredValidator);</div><div class='line' id='LC23889'><br/></div><div class='line' id='LC23890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$observe(&#39;required&#39;, function() {</div><div class='line' id='LC23891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requiredValidator(ngModelCtrl.$viewValue);</div><div class='line' id='LC23892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23894'><br/></div><div class='line' id='LC23895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (optionsExp) Options(scope, element, ngModelCtrl);</div><div class='line' id='LC23896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (multiple) Multiple(scope, element, ngModelCtrl);</div><div class='line' id='LC23897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else Single(scope, element, ngModelCtrl, selectCtrl);</div><div class='line' id='LC23898'><br/></div><div class='line' id='LC23899'><br/></div><div class='line' id='LC23900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;////////////////////////////</div><div class='line' id='LC23901'><br/></div><div class='line' id='LC23902'><br/></div><div class='line' id='LC23903'><br/></div><div class='line' id='LC23904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Single(scope, selectElement, ngModelCtrl, selectCtrl) {</div><div class='line' id='LC23905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl.$render = function() {</div><div class='line' id='LC23906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var viewValue = ngModelCtrl.$viewValue;</div><div class='line' id='LC23907'><br/></div><div class='line' id='LC23908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (selectCtrl.hasOption(viewValue)) {</div><div class='line' id='LC23909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (unknownOption.parent()) unknownOption.remove();</div><div class='line' id='LC23910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.val(viewValue);</div><div class='line' id='LC23911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (viewValue === &#39;&#39;) emptyOption.prop(&#39;selected&#39;, true); // to make IE9 happy</div><div class='line' id='LC23912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(viewValue) &amp;&amp; emptyOption) {</div><div class='line' id='LC23914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.val(&#39;&#39;);</div><div class='line' id='LC23915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC23916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl.renderUnknownOption(viewValue);</div><div class='line' id='LC23917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23920'><br/></div><div class='line' id='LC23921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.bind(&#39;change&#39;, function() {</div><div class='line' id='LC23922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC23923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (unknownOption.parent()) unknownOption.remove();</div><div class='line' id='LC23924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngModelCtrl.$setViewValue(selectElement.val());</div><div class='line' id='LC23925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23928'><br/></div><div class='line' id='LC23929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Multiple(scope, selectElement, ctrl) {</div><div class='line' id='LC23930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var lastView;</div><div class='line' id='LC23931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$render = function() {</div><div class='line' id='LC23932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items = new HashMap(ctrl.$viewValue);</div><div class='line' id='LC23933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(selectElement.find(&#39;option&#39;), function(option) {</div><div class='line' id='LC23934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option.selected = isDefined(items.get(option.value));</div><div class='line' id='LC23935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC23937'><br/></div><div class='line' id='LC23938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we have to do it on each watch since ngModel watches reference, but</div><div class='line' id='LC23939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we need to work of an array, so we need to see if anything was inserted/removed</div><div class='line' id='LC23940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(function selectMultipleWatch() {</div><div class='line' id='LC23941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!equals(lastView, ctrl.$viewValue)) {</div><div class='line' id='LC23942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastView = copy(ctrl.$viewValue);</div><div class='line' id='LC23943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$render();</div><div class='line' id='LC23944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23946'><br/></div><div class='line' id='LC23947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.bind(&#39;change&#39;, function() {</div><div class='line' id='LC23948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC23949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var array = [];</div><div class='line' id='LC23950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forEach(selectElement.find(&#39;option&#39;), function(option) {</div><div class='line' id='LC23951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (option.selected) {</div><div class='line' id='LC23952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array.push(option.value);</div><div class='line' id='LC23953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setViewValue(array);</div><div class='line' id='LC23956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC23958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23959'><br/></div><div class='line' id='LC23960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Options(scope, selectElement, ctrl) {</div><div class='line' id='LC23961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match;</div><div class='line' id='LC23962'><br/></div><div class='line' id='LC23963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {</div><div class='line' id='LC23964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw Error(</div><div class='line' id='LC23965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Expected ngOptions in form of &#39;_select_ (as _label_)? for (_key_,)?_value_ in _collection_&#39;&quot; +</div><div class='line' id='LC23966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot; but got &#39;&quot; + optionsExp + &quot;&#39;.&quot;);</div><div class='line' id='LC23967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23968'><br/></div><div class='line' id='LC23969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var displayFn = $parse(match[2] || match[1]),</div><div class='line' id='LC23970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueName = match[4] || match[6],</div><div class='line' id='LC23971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyName = match[5],</div><div class='line' id='LC23972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupByFn = $parse(match[3] || &#39;&#39;),</div><div class='line' id='LC23973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueFn = $parse(match[2] ? match[1] : valueName),</div><div class='line' id='LC23974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesFn = $parse(match[7]),</div><div class='line' id='LC23975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// This is an array of array of existing option groups in DOM. We try to reuse these if possible</div><div class='line' id='LC23976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// optionGroupsCache[0] is the options with no option group</div><div class='line' id='LC23977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element</div><div class='line' id='LC23978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupsCache = [[{element: selectElement, label:&#39;&#39;}]];</div><div class='line' id='LC23979'><br/></div><div class='line' id='LC23980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nullOption) {</div><div class='line' id='LC23981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compile the element since there might be bindings in it</div><div class='line' id='LC23982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$compile(nullOption)(scope);</div><div class='line' id='LC23983'><br/></div><div class='line' id='LC23984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove the class, which is added automatically because we recompile the element and it</div><div class='line' id='LC23985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// becomes the compilation root</div><div class='line' id='LC23986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullOption.removeClass(&#39;ng-scope&#39;);</div><div class='line' id='LC23987'><br/></div><div class='line' id='LC23988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we need to remove it before calling selectElement.html(&#39;&#39;) because otherwise IE will</div><div class='line' id='LC23989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove the label from the element. wtf?</div><div class='line' id='LC23990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nullOption.remove();</div><div class='line' id='LC23991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC23992'><br/></div><div class='line' id='LC23993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// clear contents, we&#39;ll add what&#39;s needed based on the model</div><div class='line' id='LC23994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.html(&#39;&#39;);</div><div class='line' id='LC23995'><br/></div><div class='line' id='LC23996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.bind(&#39;change&#39;, function() {</div><div class='line' id='LC23997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$apply(function() {</div><div class='line' id='LC23998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var optionGroup,</div><div class='line' id='LC23999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection = valuesFn(scope) || [],</div><div class='line' id='LC24000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals = {},</div><div class='line' id='LC24001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key, value, optionElement, index, groupIndex, length, groupLength;</div><div class='line' id='LC24002'><br/></div><div class='line' id='LC24003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (multiple) {</div><div class='line' id='LC24004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = [];</div><div class='line' id='LC24005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (groupIndex = 0, groupLength = optionGroupsCache.length;</div><div class='line' id='LC24006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupIndex &lt; groupLength;</div><div class='line' id='LC24007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupIndex++) {</div><div class='line' id='LC24008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// list of options for that group. (first item has the parent)</div><div class='line' id='LC24009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroup = optionGroupsCache[groupIndex];</div><div class='line' id='LC24010'><br/></div><div class='line' id='LC24011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(index = 1, length = optionGroup.length; index &lt; length; index++) {</div><div class='line' id='LC24012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((optionElement = optionGroup[index].element)[0].selected) {</div><div class='line' id='LC24013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = optionElement.val();</div><div class='line' id='LC24014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyName) locals[keyName] = key;</div><div class='line' id='LC24015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals[valueName] = collection[key];</div><div class='line' id='LC24016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.push(valueFn(scope, locals));</div><div class='line' id='LC24017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = selectElement.val();</div><div class='line' id='LC24022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key == &#39;?&#39;) {</div><div class='line' id='LC24023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = undefined;</div><div class='line' id='LC24024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (key == &#39;&#39;){</div><div class='line' id='LC24025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = null;</div><div class='line' id='LC24026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals[valueName] = collection[key];</div><div class='line' id='LC24028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyName) locals[keyName] = key;</div><div class='line' id='LC24029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = valueFn(scope, locals);</div><div class='line' id='LC24030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$setViewValue(value);</div><div class='line' id='LC24033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24035'><br/></div><div class='line' id='LC24036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl.$render = render;</div><div class='line' id='LC24037'><br/></div><div class='line' id='LC24038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO(vojta): can&#39;t we optimize this ?</div><div class='line' id='LC24039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(render);</div><div class='line' id='LC24040'><br/></div><div class='line' id='LC24041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function render() {</div><div class='line' id='LC24042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var optionGroups = {&#39;&#39;:[]}, // Temporary location for the option groups before we render them</div><div class='line' id='LC24043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupNames = [&#39;&#39;],</div><div class='line' id='LC24044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupName,</div><div class='line' id='LC24045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroup,</div><div class='line' id='LC24046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option,</div><div class='line' id='LC24047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingParent, existingOptions, existingOption,</div><div class='line' id='LC24048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modelValue = ctrl.$modelValue,</div><div class='line' id='LC24049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values = valuesFn(scope) || [],</div><div class='line' id='LC24050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = keyName ? sortedKeys(values) : values,</div><div class='line' id='LC24051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupLength, length,</div><div class='line' id='LC24052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupIndex, index,</div><div class='line' id='LC24053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals = {},</div><div class='line' id='LC24054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selected,</div><div class='line' id='LC24055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedSet = false, // nothing is selected yet</div><div class='line' id='LC24056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement,</div><div class='line' id='LC24057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element,</div><div class='line' id='LC24058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label;</div><div class='line' id='LC24059'><br/></div><div class='line' id='LC24060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (multiple) {</div><div class='line' id='LC24061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedSet = new HashMap(modelValue);</div><div class='line' id='LC24062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24063'><br/></div><div class='line' id='LC24064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We now build up the list of options we need (we merge later)</div><div class='line' id='LC24065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = 0; length = keys.length, index &lt; length; index++) {</div><div class='line' id='LC24066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locals[valueName] = values[keyName ? locals[keyName]=keys[index]:index];</div><div class='line' id='LC24067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupName = groupByFn(scope, locals) || &#39;&#39;;</div><div class='line' id='LC24068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(optionGroup = optionGroups[optionGroupName])) {</div><div class='line' id='LC24069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroup = optionGroups[optionGroupName] = [];</div><div class='line' id='LC24070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupNames.push(optionGroupName);</div><div class='line' id='LC24071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (multiple) {</div><div class='line' id='LC24073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selected = selectedSet.remove(valueFn(scope, locals)) != undefined;</div><div class='line' id='LC24074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selected = modelValue === valueFn(scope, locals);</div><div class='line' id='LC24076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedSet = selectedSet || selected; // see if at least one item is selected</div><div class='line' id='LC24077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label = displayFn(scope, locals); // what will be seen by the user</div><div class='line' id='LC24079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label = label === undefined ? &#39;&#39; : label; // doing displayFn(scope, locals) || &#39;&#39; overwrites zero values</div><div class='line' id='LC24080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroup.push({</div><div class='line' id='LC24081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: keyName ? keys[index] : index,   // either the index into array or key from object</div><div class='line' id='LC24082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label: label,</div><div class='line' id='LC24083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selected: selected                   // determine if we should be selected</div><div class='line' id='LC24084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!multiple) {</div><div class='line' id='LC24087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nullOption || modelValue === null) {</div><div class='line' id='LC24088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// insert null option if we have a placeholder, or the model is null</div><div class='line' id='LC24089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroups[&#39;&#39;].unshift({id:&#39;&#39;, label:&#39;&#39;, selected:!selectedSet});</div><div class='line' id='LC24090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!selectedSet) {</div><div class='line' id='LC24091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// option could not be found, we have to insert the undefined item</div><div class='line' id='LC24092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroups[&#39;&#39;].unshift({id:&#39;?&#39;, label:&#39;&#39;, selected:true});</div><div class='line' id='LC24093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24095'><br/></div><div class='line' id='LC24096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Now we need to update the list of DOM nodes to match the optionGroups we computed above</div><div class='line' id='LC24097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (groupIndex = 0, groupLength = optionGroupNames.length;</div><div class='line' id='LC24098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupIndex &lt; groupLength;</div><div class='line' id='LC24099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;groupIndex++) {</div><div class='line' id='LC24100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// current option group name or &#39;&#39; if no group</div><div class='line' id='LC24101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupName = optionGroupNames[groupIndex];</div><div class='line' id='LC24102'><br/></div><div class='line' id='LC24103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// list of options for that group. (first item has the parent)</div><div class='line' id='LC24104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroup = optionGroups[optionGroupName];</div><div class='line' id='LC24105'><br/></div><div class='line' id='LC24106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (optionGroupsCache.length &lt;= groupIndex) {</div><div class='line' id='LC24107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// we need to grow the optionGroups</div><div class='line' id='LC24108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingParent = {</div><div class='line' id='LC24109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element: optGroupTemplate.clone().attr(&#39;label&#39;, optionGroupName),</div><div class='line' id='LC24110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label: optionGroup.label</div><div class='line' id='LC24111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingOptions = [existingParent];</div><div class='line' id='LC24113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupsCache.push(existingOptions);</div><div class='line' id='LC24114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectElement.append(existingParent.element);</div><div class='line' id='LC24115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingOptions = optionGroupsCache[groupIndex];</div><div class='line' id='LC24117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element</div><div class='line' id='LC24118'><br/></div><div class='line' id='LC24119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// update the OPTGROUP label if not the same.</div><div class='line' id='LC24120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingParent.label != optionGroupName) {</div><div class='line' id='LC24121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingParent.element.attr(&#39;label&#39;, existingParent.label = optionGroupName);</div><div class='line' id='LC24122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24124'><br/></div><div class='line' id='LC24125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement = null;  // start at the beginning</div><div class='line' id='LC24126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(index = 0, length = optionGroup.length; index &lt; length; index++) {</div><div class='line' id='LC24127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option = optionGroup[index];</div><div class='line' id='LC24128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((existingOption = existingOptions[index+1])) {</div><div class='line' id='LC24129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// reuse elements</div><div class='line' id='LC24130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement = existingOption.element;</div><div class='line' id='LC24131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingOption.label !== option.label) {</div><div class='line' id='LC24132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement.text(existingOption.label = option.label);</div><div class='line' id='LC24133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingOption.id !== option.id) {</div><div class='line' id='LC24135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement.val(existingOption.id = option.id);</div><div class='line' id='LC24136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// lastElement.prop(&#39;selected&#39;) provided by jQuery has side-effects</div><div class='line' id='LC24138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastElement[0].selected !== option.selected) {</div><div class='line' id='LC24139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement.prop(&#39;selected&#39;, (existingOption.selected = option.selected));</div><div class='line' id='LC24140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// grow elements</div><div class='line' id='LC24143'><br/></div><div class='line' id='LC24144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if it&#39;s a null option</div><div class='line' id='LC24145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (option.id === &#39;&#39; &amp;&amp; nullOption) {</div><div class='line' id='LC24146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// put back the pre-compiled element</div><div class='line' id='LC24147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element = nullOption;</div><div class='line' id='LC24148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// jQuery(v1.4.2) Bug: We should be able to chain the method calls, but</div><div class='line' id='LC24150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// in this version of jQuery on some browser the .text() returns a string</div><div class='line' id='LC24151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// rather then the element.</div><div class='line' id='LC24152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(element = optionTemplate.clone())</div><div class='line' id='LC24153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.val(option.id)</div><div class='line' id='LC24154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr(&#39;selected&#39;, option.selected)</div><div class='line' id='LC24155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.text(option.label);</div><div class='line' id='LC24156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24157'><br/></div><div class='line' id='LC24158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingOptions.push(existingOption = {</div><div class='line' id='LC24159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element: element,</div><div class='line' id='LC24160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label: option.label,</div><div class='line' id='LC24161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: option.id,</div><div class='line' id='LC24162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selected: option.selected</div><div class='line' id='LC24163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastElement) {</div><div class='line' id='LC24165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement.after(element);</div><div class='line' id='LC24166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingParent.element.append(element);</div><div class='line' id='LC24168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastElement = element;</div><div class='line' id='LC24170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove any excessive OPTIONs in a group</div><div class='line' id='LC24173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++; // increment since the existingOptions[0] is parent element not OPTION</div><div class='line' id='LC24174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(existingOptions.length &gt; index) {</div><div class='line' id='LC24175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingOptions.pop().element.remove();</div><div class='line' id='LC24176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove any excessive OPTGROUPs from select</div><div class='line' id='LC24179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(optionGroupsCache.length &gt; groupIndex) {</div><div class='line' id='LC24180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optionGroupsCache.pop()[0].element.remove();</div><div class='line' id='LC24181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24184'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24185'>&nbsp;&nbsp;}</div><div class='line' id='LC24186'>}];</div><div class='line' id='LC24187'><br/></div><div class='line' id='LC24188'>var optionDirective = [&#39;$interpolate&#39;, function($interpolate) {</div><div class='line' id='LC24189'>&nbsp;&nbsp;var nullSelectCtrl = {</div><div class='line' id='LC24190'>&nbsp;&nbsp;&nbsp;&nbsp;addOption: noop,</div><div class='line' id='LC24191'>&nbsp;&nbsp;&nbsp;&nbsp;removeOption: noop</div><div class='line' id='LC24192'>&nbsp;&nbsp;};</div><div class='line' id='LC24193'><br/></div><div class='line' id='LC24194'>&nbsp;&nbsp;return {</div><div class='line' id='LC24195'>&nbsp;&nbsp;&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC24196'>&nbsp;&nbsp;&nbsp;&nbsp;priority: 100,</div><div class='line' id='LC24197'>&nbsp;&nbsp;&nbsp;&nbsp;compile: function(element, attr) {</div><div class='line' id='LC24198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isUndefined(attr.value)) {</div><div class='line' id='LC24199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var interpolateFn = $interpolate(element.text(), true);</div><div class='line' id='LC24200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!interpolateFn) {</div><div class='line' id='LC24201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;value&#39;, element.text());</div><div class='line' id='LC24202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24204'><br/></div><div class='line' id='LC24205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function (scope, element, attr) {</div><div class='line' id='LC24206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var selectCtrlName = &#39;$selectController&#39;,</div><div class='line' id='LC24207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = element.parent(),</div><div class='line' id='LC24208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl = parent.data(selectCtrlName) ||</div><div class='line' id='LC24209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent.parent().data(selectCtrlName); // in case we are in optgroup</div><div class='line' id='LC24210'><br/></div><div class='line' id='LC24211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (selectCtrl &amp;&amp; selectCtrl.databound) {</div><div class='line' id='LC24212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// For some reason Opera defaults to true and if not overridden this messes up the repeater.</div><div class='line' id='LC24213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We don&#39;t want the view to drive the initialization of the model anyway.</div><div class='line' id='LC24214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.prop(&#39;selected&#39;, false);</div><div class='line' id='LC24215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl = nullSelectCtrl;</div><div class='line' id='LC24217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24218'><br/></div><div class='line' id='LC24219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (interpolateFn) {</div><div class='line' id='LC24220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {</div><div class='line' id='LC24221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attr.$set(&#39;value&#39;, newVal);</div><div class='line' id='LC24222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newVal !== oldVal) selectCtrl.removeOption(oldVal);</div><div class='line' id='LC24223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl.addOption(newVal);</div><div class='line' id='LC24224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl.addOption(attr.value);</div><div class='line' id='LC24227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24228'><br/></div><div class='line' id='LC24229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.bind(&#39;$destroy&#39;, function() {</div><div class='line' id='LC24230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectCtrl.removeOption(attr.value);</div><div class='line' id='LC24231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24233'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24234'>&nbsp;&nbsp;}</div><div class='line' id='LC24235'>}];</div><div class='line' id='LC24236'><br/></div><div class='line' id='LC24237'>var styleDirective = valueFn({</div><div class='line' id='LC24238'>&nbsp;&nbsp;restrict: &#39;E&#39;,</div><div class='line' id='LC24239'>&nbsp;&nbsp;terminal: true</div><div class='line' id='LC24240'>});</div><div class='line' id='LC24241'><br/></div><div class='line' id='LC24242'>/**</div><div class='line' id='LC24243'>&nbsp;* Setup file for the Scenario.</div><div class='line' id='LC24244'>&nbsp;* Must be first in the compilation/bootstrap list.</div><div class='line' id='LC24245'>&nbsp;*/</div><div class='line' id='LC24246'><br/></div><div class='line' id='LC24247'>// Public namespace</div><div class='line' id='LC24248'>angular.scenario = angular.scenario || {};</div><div class='line' id='LC24249'><br/></div><div class='line' id='LC24250'>/**</div><div class='line' id='LC24251'>&nbsp;* Defines a new output format.</div><div class='line' id='LC24252'>&nbsp;*</div><div class='line' id='LC24253'>&nbsp;* @param {string} name the name of the new output format</div><div class='line' id='LC24254'>&nbsp;* @param {function()} fn function(context, runner) that generates the output</div><div class='line' id='LC24255'>&nbsp;*/</div><div class='line' id='LC24256'>angular.scenario.output = angular.scenario.output || function(name, fn) {</div><div class='line' id='LC24257'>&nbsp;&nbsp;angular.scenario.output[name] = fn;</div><div class='line' id='LC24258'>};</div><div class='line' id='LC24259'><br/></div><div class='line' id='LC24260'>/**</div><div class='line' id='LC24261'>&nbsp;* Defines a new DSL statement. If your factory function returns a Future</div><div class='line' id='LC24262'>&nbsp;* it&#39;s returned, otherwise the result is assumed to be a map of functions</div><div class='line' id='LC24263'>&nbsp;* for chaining. Chained functions are subject to the same rules.</div><div class='line' id='LC24264'>&nbsp;*</div><div class='line' id='LC24265'>&nbsp;* Note: All functions on the chain are bound to the chain scope so values</div><div class='line' id='LC24266'>&nbsp;*   set on &quot;this&quot; in your statement function are available in the chained</div><div class='line' id='LC24267'>&nbsp;*   functions.</div><div class='line' id='LC24268'>&nbsp;*</div><div class='line' id='LC24269'>&nbsp;* @param {string} name The name of the statement</div><div class='line' id='LC24270'>&nbsp;* @param {function()} fn Factory function(), return a function for</div><div class='line' id='LC24271'>&nbsp;*  the statement.</div><div class='line' id='LC24272'>&nbsp;*/</div><div class='line' id='LC24273'>angular.scenario.dsl = angular.scenario.dsl || function(name, fn) {</div><div class='line' id='LC24274'>&nbsp;&nbsp;angular.scenario.dsl[name] = function() {</div><div class='line' id='LC24275'>&nbsp;&nbsp;&nbsp;&nbsp;function executeStatement(statement, args) {</div><div class='line' id='LC24276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = statement.apply(this, args);</div><div class='line' id='LC24277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (angular.isFunction(result) || result instanceof angular.scenario.Future)</div><div class='line' id='LC24278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC24279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var chain = angular.extend({}, result);</div><div class='line' id='LC24281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(chain, function(value, name) {</div><div class='line' id='LC24282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (angular.isFunction(value)) {</div><div class='line' id='LC24283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chain[name] = function() {</div><div class='line' id='LC24284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return executeStatement.call(self, value, arguments);</div><div class='line' id='LC24285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chain[name] = value;</div><div class='line' id='LC24288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC24291'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24292'>&nbsp;&nbsp;&nbsp;&nbsp;var statement = fn.apply(this, arguments);</div><div class='line' id='LC24293'>&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC24294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return executeStatement.call(this, statement, arguments);</div><div class='line' id='LC24295'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24296'>&nbsp;&nbsp;};</div><div class='line' id='LC24297'>};</div><div class='line' id='LC24298'><br/></div><div class='line' id='LC24299'>/**</div><div class='line' id='LC24300'>&nbsp;* Defines a new matcher for use with the expects() statement. The value</div><div class='line' id='LC24301'>&nbsp;* this.actual (like in Jasmine) is available in your matcher to compare</div><div class='line' id='LC24302'>&nbsp;* against. Your function should return a boolean. The future is automatically</div><div class='line' id='LC24303'>&nbsp;* created for you.</div><div class='line' id='LC24304'>&nbsp;*</div><div class='line' id='LC24305'>&nbsp;* @param {string} name The name of the matcher</div><div class='line' id='LC24306'>&nbsp;* @param {function()} fn The matching function(expected).</div><div class='line' id='LC24307'>&nbsp;*/</div><div class='line' id='LC24308'>angular.scenario.matcher = angular.scenario.matcher || function(name, fn) {</div><div class='line' id='LC24309'>&nbsp;&nbsp;angular.scenario.matcher[name] = function(expected) {</div><div class='line' id='LC24310'>&nbsp;&nbsp;&nbsp;&nbsp;var prefix = &#39;expect &#39; + this.future.name + &#39; &#39;;</div><div class='line' id='LC24311'>&nbsp;&nbsp;&nbsp;&nbsp;if (this.inverse) {</div><div class='line' id='LC24312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefix += &#39;not &#39;;</div><div class='line' id='LC24313'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24314'>&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24315'>&nbsp;&nbsp;&nbsp;&nbsp;this.addFuture(prefix + name + &#39; &#39; + angular.toJson(expected),</div><div class='line' id='LC24316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(done) {</div><div class='line' id='LC24317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var error;</div><div class='line' id='LC24318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.actual = self.future.value;</div><div class='line' id='LC24319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((self.inverse &amp;&amp; fn.call(self, expected)) ||</div><div class='line' id='LC24320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(!self.inverse &amp;&amp; !fn.call(self, expected))) {</div><div class='line' id='LC24321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error = &#39;expected &#39; + angular.toJson(expected) +</div><div class='line' id='LC24322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39; but was &#39; + angular.toJson(self.actual);</div><div class='line' id='LC24323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(error);</div><div class='line' id='LC24325'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24326'>&nbsp;&nbsp;};</div><div class='line' id='LC24327'>};</div><div class='line' id='LC24328'><br/></div><div class='line' id='LC24329'>/**</div><div class='line' id='LC24330'>&nbsp;* Initialize the scenario runner and run !</div><div class='line' id='LC24331'>&nbsp;*</div><div class='line' id='LC24332'>&nbsp;* Access global window and document object</div><div class='line' id='LC24333'>&nbsp;* Access $runner through closure</div><div class='line' id='LC24334'>&nbsp;*</div><div class='line' id='LC24335'>&nbsp;* @param {Object=} config Config options</div><div class='line' id='LC24336'>&nbsp;*/</div><div class='line' id='LC24337'>angular.scenario.setUpAndRun = function(config) {</div><div class='line' id='LC24338'>&nbsp;&nbsp;var href = window.location.href;</div><div class='line' id='LC24339'>&nbsp;&nbsp;var body = _jQuery(document.body);</div><div class='line' id='LC24340'>&nbsp;&nbsp;var output = [];</div><div class='line' id='LC24341'>&nbsp;&nbsp;var objModel = new angular.scenario.ObjectModel($runner);</div><div class='line' id='LC24342'><br/></div><div class='line' id='LC24343'>&nbsp;&nbsp;if (config &amp;&amp; config.scenario_output) {</div><div class='line' id='LC24344'>&nbsp;&nbsp;&nbsp;&nbsp;output = config.scenario_output.split(&#39;,&#39;);</div><div class='line' id='LC24345'>&nbsp;&nbsp;}</div><div class='line' id='LC24346'><br/></div><div class='line' id='LC24347'>&nbsp;&nbsp;angular.forEach(angular.scenario.output, function(fn, name) {</div><div class='line' id='LC24348'>&nbsp;&nbsp;&nbsp;&nbsp;if (!output.length || indexOf(output,name) != -1) {</div><div class='line' id='LC24349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var context = body.append(&#39;&lt;div&gt;&lt;/div&gt;&#39;).find(&#39;div:last&#39;);</div><div class='line' id='LC24350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context.attr(&#39;id&#39;, name);</div><div class='line' id='LC24351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.call({}, context, $runner, objModel);</div><div class='line' id='LC24352'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24353'>&nbsp;&nbsp;});</div><div class='line' id='LC24354'><br/></div><div class='line' id='LC24355'>&nbsp;&nbsp;if (!/^http/.test(href) &amp;&amp; !/^https/.test(href)) {</div><div class='line' id='LC24356'>&nbsp;&nbsp;&nbsp;&nbsp;body.append(&#39;&lt;p id=&quot;system-error&quot;&gt;&lt;/p&gt;&#39;);</div><div class='line' id='LC24357'>&nbsp;&nbsp;&nbsp;&nbsp;body.find(&#39;#system-error&#39;).text(</div><div class='line' id='LC24358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;Scenario runner must be run using http or https. The protocol &#39; +</div><div class='line' id='LC24359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href.split(&#39;:&#39;)[0] + &#39;:// is not supported.&#39;</div><div class='line' id='LC24360'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC24361'>&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC24362'>&nbsp;&nbsp;}</div><div class='line' id='LC24363'><br/></div><div class='line' id='LC24364'>&nbsp;&nbsp;var appFrame = body.append(&#39;&lt;div id=&quot;application&quot;&gt;&lt;/div&gt;&#39;).find(&#39;#application&#39;);</div><div class='line' id='LC24365'>&nbsp;&nbsp;var application = new angular.scenario.Application(appFrame);</div><div class='line' id='LC24366'><br/></div><div class='line' id='LC24367'>&nbsp;&nbsp;$runner.on(&#39;RunnerEnd&#39;, function() {</div><div class='line' id='LC24368'>&nbsp;&nbsp;&nbsp;&nbsp;appFrame.css(&#39;display&#39;, &#39;none&#39;);</div><div class='line' id='LC24369'>&nbsp;&nbsp;&nbsp;&nbsp;appFrame.find(&#39;iframe&#39;).attr(&#39;src&#39;, &#39;about:blank&#39;);</div><div class='line' id='LC24370'>&nbsp;&nbsp;});</div><div class='line' id='LC24371'><br/></div><div class='line' id='LC24372'>&nbsp;&nbsp;$runner.on(&#39;RunnerError&#39;, function(error) {</div><div class='line' id='LC24373'>&nbsp;&nbsp;&nbsp;&nbsp;if (window.console) {</div><div class='line' id='LC24374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(formatException(error));</div><div class='line' id='LC24375'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Do something for IE</div><div class='line' id='LC24377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(error);</div><div class='line' id='LC24378'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24379'>&nbsp;&nbsp;});</div><div class='line' id='LC24380'><br/></div><div class='line' id='LC24381'>&nbsp;&nbsp;$runner.run(application);</div><div class='line' id='LC24382'>};</div><div class='line' id='LC24383'><br/></div><div class='line' id='LC24384'>/**</div><div class='line' id='LC24385'>&nbsp;* Iterates through list with iterator function that must call the</div><div class='line' id='LC24386'>&nbsp;* continueFunction to continute iterating.</div><div class='line' id='LC24387'>&nbsp;*</div><div class='line' id='LC24388'>&nbsp;* @param {Array} list list to iterate over</div><div class='line' id='LC24389'>&nbsp;* @param {function()} iterator Callback function(value, continueFunction)</div><div class='line' id='LC24390'>&nbsp;* @param {function()} done Callback function(error, result) called when</div><div class='line' id='LC24391'>&nbsp;*   iteration finishes or an error occurs.</div><div class='line' id='LC24392'>&nbsp;*/</div><div class='line' id='LC24393'>function asyncForEach(list, iterator, done) {</div><div class='line' id='LC24394'>&nbsp;&nbsp;var i = 0;</div><div class='line' id='LC24395'>&nbsp;&nbsp;function loop(error, index) {</div><div class='line' id='LC24396'>&nbsp;&nbsp;&nbsp;&nbsp;if (index &amp;&amp; index &gt; i) {</div><div class='line' id='LC24397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = index;</div><div class='line' id='LC24398'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24399'>&nbsp;&nbsp;&nbsp;&nbsp;if (error || i &gt;= list.length) {</div><div class='line' id='LC24400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(error);</div><div class='line' id='LC24401'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC24403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator(list[i++], loop);</div><div class='line' id='LC24404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC24405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(e);</div><div class='line' id='LC24406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24407'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24408'>&nbsp;&nbsp;}</div><div class='line' id='LC24409'>&nbsp;&nbsp;loop();</div><div class='line' id='LC24410'>}</div><div class='line' id='LC24411'><br/></div><div class='line' id='LC24412'>/**</div><div class='line' id='LC24413'>&nbsp;* Formats an exception into a string with the stack trace, but limits</div><div class='line' id='LC24414'>&nbsp;* to a specific line length.</div><div class='line' id='LC24415'>&nbsp;*</div><div class='line' id='LC24416'>&nbsp;* @param {Object} error The exception to format, can be anything throwable</div><div class='line' id='LC24417'>&nbsp;* @param {Number=} [maxStackLines=5] max lines of the stack trace to include</div><div class='line' id='LC24418'>&nbsp;*  default is 5.</div><div class='line' id='LC24419'>&nbsp;*/</div><div class='line' id='LC24420'>function formatException(error, maxStackLines) {</div><div class='line' id='LC24421'>&nbsp;&nbsp;maxStackLines = maxStackLines || 5;</div><div class='line' id='LC24422'>&nbsp;&nbsp;var message = error.toString();</div><div class='line' id='LC24423'>&nbsp;&nbsp;if (error.stack) {</div><div class='line' id='LC24424'>&nbsp;&nbsp;&nbsp;&nbsp;var stack = error.stack.split(&#39;\n&#39;);</div><div class='line' id='LC24425'>&nbsp;&nbsp;&nbsp;&nbsp;if (stack[0].indexOf(message) === -1) {</div><div class='line' id='LC24426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxStackLines++;</div><div class='line' id='LC24427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack.unshift(error.message);</div><div class='line' id='LC24428'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24429'>&nbsp;&nbsp;&nbsp;&nbsp;message = stack.slice(0, maxStackLines).join(&#39;\n&#39;);</div><div class='line' id='LC24430'>&nbsp;&nbsp;}</div><div class='line' id='LC24431'>&nbsp;&nbsp;return message;</div><div class='line' id='LC24432'>}</div><div class='line' id='LC24433'><br/></div><div class='line' id='LC24434'>/**</div><div class='line' id='LC24435'>&nbsp;* Returns a function that gets the file name and line number from a</div><div class='line' id='LC24436'>&nbsp;* location in the stack if available based on the call site.</div><div class='line' id='LC24437'>&nbsp;*</div><div class='line' id='LC24438'>&nbsp;* Note: this returns another function because accessing .stack is very</div><div class='line' id='LC24439'>&nbsp;* expensive in Chrome.</div><div class='line' id='LC24440'>&nbsp;*</div><div class='line' id='LC24441'>&nbsp;* @param {Number} offset Number of stack lines to skip</div><div class='line' id='LC24442'>&nbsp;*/</div><div class='line' id='LC24443'>function callerFile(offset) {</div><div class='line' id='LC24444'>&nbsp;&nbsp;var error = new Error();</div><div class='line' id='LC24445'><br/></div><div class='line' id='LC24446'>&nbsp;&nbsp;return function() {</div><div class='line' id='LC24447'>&nbsp;&nbsp;&nbsp;&nbsp;var line = (error.stack || &#39;&#39;).split(&#39;\n&#39;)[offset];</div><div class='line' id='LC24448'><br/></div><div class='line' id='LC24449'>&nbsp;&nbsp;&nbsp;&nbsp;// Clean up the stack trace line</div><div class='line' id='LC24450'>&nbsp;&nbsp;&nbsp;&nbsp;if (line) {</div><div class='line' id='LC24451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (line.indexOf(&#39;@&#39;) !== -1) {</div><div class='line' id='LC24452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Firefox</div><div class='line' id='LC24453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line = line.substring(line.indexOf(&#39;@&#39;)+1);</div><div class='line' id='LC24454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Chrome</div><div class='line' id='LC24456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line = line.substring(line.indexOf(&#39;(&#39;)+1).replace(&#39;)&#39;, &#39;&#39;);</div><div class='line' id='LC24457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24458'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24459'><br/></div><div class='line' id='LC24460'>&nbsp;&nbsp;&nbsp;&nbsp;return line || &#39;&#39;;</div><div class='line' id='LC24461'>&nbsp;&nbsp;};</div><div class='line' id='LC24462'>}</div><div class='line' id='LC24463'><br/></div><div class='line' id='LC24464'>/**</div><div class='line' id='LC24465'>&nbsp;* Triggers a browser event. Attempts to choose the right event if one is</div><div class='line' id='LC24466'>&nbsp;* not specified.</div><div class='line' id='LC24467'>&nbsp;*</div><div class='line' id='LC24468'>&nbsp;* @param {Object} element Either a wrapped jQuery/jqLite node or a DOMElement</div><div class='line' id='LC24469'>&nbsp;* @param {string} type Optional event type.</div><div class='line' id='LC24470'>&nbsp;* @param {Array.&lt;string&gt;=} keys Optional list of pressed keys</div><div class='line' id='LC24471'>&nbsp;*        (valid values: &#39;alt&#39;, &#39;meta&#39;, &#39;shift&#39;, &#39;ctrl&#39;)</div><div class='line' id='LC24472'>&nbsp;*/</div><div class='line' id='LC24473'>function browserTrigger(element, type, keys) {</div><div class='line' id='LC24474'>&nbsp;&nbsp;if (element &amp;&amp; !element.nodeName) element = element[0];</div><div class='line' id='LC24475'>&nbsp;&nbsp;if (!element) return;</div><div class='line' id='LC24476'>&nbsp;&nbsp;if (!type) {</div><div class='line' id='LC24477'>&nbsp;&nbsp;&nbsp;&nbsp;type = {</div><div class='line' id='LC24478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;text&#39;:            &#39;change&#39;,</div><div class='line' id='LC24479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;textarea&#39;:        &#39;change&#39;,</div><div class='line' id='LC24480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;hidden&#39;:          &#39;change&#39;,</div><div class='line' id='LC24481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;password&#39;:        &#39;change&#39;,</div><div class='line' id='LC24482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;button&#39;:          &#39;click&#39;,</div><div class='line' id='LC24483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;submit&#39;:          &#39;click&#39;,</div><div class='line' id='LC24484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;reset&#39;:           &#39;click&#39;,</div><div class='line' id='LC24485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;image&#39;:           &#39;click&#39;,</div><div class='line' id='LC24486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;checkbox&#39;:        &#39;click&#39;,</div><div class='line' id='LC24487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;radio&#39;:           &#39;click&#39;,</div><div class='line' id='LC24488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;select-one&#39;:      &#39;change&#39;,</div><div class='line' id='LC24489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;select-multiple&#39;: &#39;change&#39;</div><div class='line' id='LC24490'>&nbsp;&nbsp;&nbsp;&nbsp;}[lowercase(element.type)] || &#39;click&#39;;</div><div class='line' id='LC24491'>&nbsp;&nbsp;}</div><div class='line' id='LC24492'>&nbsp;&nbsp;if (lowercase(nodeName_(element)) == &#39;option&#39;) {</div><div class='line' id='LC24493'>&nbsp;&nbsp;&nbsp;&nbsp;element.parentNode.value = element.value;</div><div class='line' id='LC24494'>&nbsp;&nbsp;&nbsp;&nbsp;element = element.parentNode;</div><div class='line' id='LC24495'>&nbsp;&nbsp;&nbsp;&nbsp;type = &#39;change&#39;;</div><div class='line' id='LC24496'>&nbsp;&nbsp;}</div><div class='line' id='LC24497'><br/></div><div class='line' id='LC24498'>&nbsp;&nbsp;keys = keys || [];</div><div class='line' id='LC24499'>&nbsp;&nbsp;function pressed(key) {</div><div class='line' id='LC24500'>&nbsp;&nbsp;&nbsp;&nbsp;return indexOf(keys, key) !== -1;</div><div class='line' id='LC24501'>&nbsp;&nbsp;}</div><div class='line' id='LC24502'><br/></div><div class='line' id='LC24503'>&nbsp;&nbsp;if (msie &lt; 9) {</div><div class='line' id='LC24504'>&nbsp;&nbsp;&nbsp;&nbsp;switch(element.type) {</div><div class='line' id='LC24505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;radio&#39;:</div><div class='line' id='LC24506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;checkbox&#39;:</div><div class='line' id='LC24507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.checked = !element.checked;</div><div class='line' id='LC24508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC24509'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24510'>&nbsp;&nbsp;&nbsp;&nbsp;// WTF!!! Error: Unspecified error.</div><div class='line' id='LC24511'>&nbsp;&nbsp;&nbsp;&nbsp;// Don&#39;t know why, but some elements when detached seem to be in inconsistent state and</div><div class='line' id='LC24512'>&nbsp;&nbsp;&nbsp;&nbsp;// calling .fireEvent() on them will result in very unhelpful error (Error: Unspecified error)</div><div class='line' id='LC24513'>&nbsp;&nbsp;&nbsp;&nbsp;// forcing the browser to compute the element position (by reading its CSS)</div><div class='line' id='LC24514'>&nbsp;&nbsp;&nbsp;&nbsp;// puts the element in consistent state.</div><div class='line' id='LC24515'>&nbsp;&nbsp;&nbsp;&nbsp;element.style.posLeft;</div><div class='line' id='LC24516'><br/></div><div class='line' id='LC24517'>&nbsp;&nbsp;&nbsp;&nbsp;// TODO(vojta): create event objects with pressed keys to get it working on IE&lt;9</div><div class='line' id='LC24518'>&nbsp;&nbsp;&nbsp;&nbsp;var ret = element.fireEvent(&#39;on&#39; + type);</div><div class='line' id='LC24519'>&nbsp;&nbsp;&nbsp;&nbsp;if (lowercase(element.type) == &#39;submit&#39;) {</div><div class='line' id='LC24520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(element) {</div><div class='line' id='LC24521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lowercase(element.nodeName) == &#39;form&#39;) {</div><div class='line' id='LC24522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.fireEvent(&#39;onsubmit&#39;);</div><div class='line' id='LC24523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC24524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element = element.parentNode;</div><div class='line' id='LC24526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24527'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24528'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;</div><div class='line' id='LC24529'>&nbsp;&nbsp;} else {</div><div class='line' id='LC24530'>&nbsp;&nbsp;&nbsp;&nbsp;var evnt = document.createEvent(&#39;MouseEvents&#39;),</div><div class='line' id='LC24531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;originalPreventDefault = evnt.preventDefault,</div><div class='line' id='LC24532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iframe = _jQuery(&#39;#application iframe&#39;)[0],</div><div class='line' id='LC24533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appWindow = iframe ? iframe.contentWindow : window,</div><div class='line' id='LC24534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fakeProcessDefault = true,</div><div class='line' id='LC24535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finalProcessDefault,</div><div class='line' id='LC24536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular = appWindow.angular || {};</div><div class='line' id='LC24537'><br/></div><div class='line' id='LC24538'>&nbsp;&nbsp;&nbsp;&nbsp;// igor: temporary fix for https://bugzilla.mozilla.org/show_bug.cgi?id=684208</div><div class='line' id='LC24539'>&nbsp;&nbsp;&nbsp;&nbsp;angular[&#39;ff-684208-preventDefault&#39;] = false;</div><div class='line' id='LC24540'>&nbsp;&nbsp;&nbsp;&nbsp;evnt.preventDefault = function() {</div><div class='line' id='LC24541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fakeProcessDefault = false;</div><div class='line' id='LC24542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return originalPreventDefault.apply(evnt, arguments);</div><div class='line' id='LC24543'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24544'><br/></div><div class='line' id='LC24545'>&nbsp;&nbsp;&nbsp;&nbsp;evnt.initMouseEvent(type, true, true, window, 0, 0, 0, 0, 0, pressed(&#39;ctrl&#39;), pressed(&#39;alt&#39;),</div><div class='line' id='LC24546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pressed(&#39;shift&#39;), pressed(&#39;meta&#39;), 0, element);</div><div class='line' id='LC24547'><br/></div><div class='line' id='LC24548'>&nbsp;&nbsp;&nbsp;&nbsp;element.dispatchEvent(evnt);</div><div class='line' id='LC24549'>&nbsp;&nbsp;&nbsp;&nbsp;finalProcessDefault = !(angular[&#39;ff-684208-preventDefault&#39;] || !fakeProcessDefault);</div><div class='line' id='LC24550'><br/></div><div class='line' id='LC24551'>&nbsp;&nbsp;&nbsp;&nbsp;delete angular[&#39;ff-684208-preventDefault&#39;];</div><div class='line' id='LC24552'><br/></div><div class='line' id='LC24553'>&nbsp;&nbsp;&nbsp;&nbsp;return finalProcessDefault;</div><div class='line' id='LC24554'>&nbsp;&nbsp;}</div><div class='line' id='LC24555'>}</div><div class='line' id='LC24556'><br/></div><div class='line' id='LC24557'>/**</div><div class='line' id='LC24558'>&nbsp;* Don&#39;t use the jQuery trigger method since it works incorrectly.</div><div class='line' id='LC24559'>&nbsp;*</div><div class='line' id='LC24560'>&nbsp;* jQuery notifies listeners and then changes the state of a checkbox and</div><div class='line' id='LC24561'>&nbsp;* does not create a real browser event. A real click changes the state of</div><div class='line' id='LC24562'>&nbsp;* the checkbox and then notifies listeners.</div><div class='line' id='LC24563'>&nbsp;*</div><div class='line' id='LC24564'>&nbsp;* To work around this we instead use our own handler that fires a real event.</div><div class='line' id='LC24565'>&nbsp;*/</div><div class='line' id='LC24566'>(function(fn){</div><div class='line' id='LC24567'>&nbsp;&nbsp;var parentTrigger = fn.trigger;</div><div class='line' id='LC24568'>&nbsp;&nbsp;fn.trigger = function(type) {</div><div class='line' id='LC24569'>&nbsp;&nbsp;&nbsp;&nbsp;if (/(click|change|keydown|blur|input)/.test(type)) {</div><div class='line' id='LC24570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var processDefaults = [];</div><div class='line' id='LC24571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.each(function(index, node) {</div><div class='line' id='LC24572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;processDefaults.push(browserTrigger(node, type));</div><div class='line' id='LC24573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24574'><br/></div><div class='line' id='LC24575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this is not compatible with jQuery - we return an array of returned values,</div><div class='line' id='LC24576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// so that scenario runner know whether JS code has preventDefault() of the event or not...</div><div class='line' id='LC24577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return processDefaults;</div><div class='line' id='LC24578'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24579'>&nbsp;&nbsp;&nbsp;&nbsp;return parentTrigger.apply(this, arguments);</div><div class='line' id='LC24580'>&nbsp;&nbsp;};</div><div class='line' id='LC24581'>})(_jQuery.fn);</div><div class='line' id='LC24582'><br/></div><div class='line' id='LC24583'>/**</div><div class='line' id='LC24584'>&nbsp;* Finds all bindings with the substring match of name and returns an</div><div class='line' id='LC24585'>&nbsp;* array of their values.</div><div class='line' id='LC24586'>&nbsp;*</div><div class='line' id='LC24587'>&nbsp;* @param {string} bindExp The name to match</div><div class='line' id='LC24588'>&nbsp;* @return {Array.&lt;string&gt;} String of binding values</div><div class='line' id='LC24589'>&nbsp;*/</div><div class='line' id='LC24590'>_jQuery.fn.bindings = function(windowJquery, bindExp) {</div><div class='line' id='LC24591'>&nbsp;&nbsp;var result = [], match,</div><div class='line' id='LC24592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindSelector = &#39;.ng-binding:visible&#39;;</div><div class='line' id='LC24593'>&nbsp;&nbsp;if (angular.isString(bindExp)) {</div><div class='line' id='LC24594'>&nbsp;&nbsp;&nbsp;&nbsp;bindExp = bindExp.replace(/\s/g, &#39;&#39;);</div><div class='line' id='LC24595'>&nbsp;&nbsp;&nbsp;&nbsp;match = function (actualExp) {</div><div class='line' id='LC24596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (actualExp) {</div><div class='line' id='LC24597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actualExp = actualExp.replace(/\s/g, &#39;&#39;);</div><div class='line' id='LC24598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (actualExp == bindExp) return true;</div><div class='line' id='LC24599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (actualExp.indexOf(bindExp) == 0) {</div><div class='line' id='LC24600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return actualExp.charAt(bindExp.length) == &#39;|&#39;;</div><div class='line' id='LC24601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24603'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24604'>&nbsp;&nbsp;} else if (bindExp) {</div><div class='line' id='LC24605'>&nbsp;&nbsp;&nbsp;&nbsp;match = function(actualExp) {</div><div class='line' id='LC24606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return actualExp &amp;&amp; bindExp.exec(actualExp);</div><div class='line' id='LC24607'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24608'>&nbsp;&nbsp;} else {</div><div class='line' id='LC24609'>&nbsp;&nbsp;&nbsp;&nbsp;match = function(actualExp) {</div><div class='line' id='LC24610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!actualExp;</div><div class='line' id='LC24611'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24612'>&nbsp;&nbsp;}</div><div class='line' id='LC24613'>&nbsp;&nbsp;var selection = this.find(bindSelector);</div><div class='line' id='LC24614'>&nbsp;&nbsp;if (this.is(bindSelector)) {</div><div class='line' id='LC24615'>&nbsp;&nbsp;&nbsp;&nbsp;selection = selection.add(this);</div><div class='line' id='LC24616'>&nbsp;&nbsp;}</div><div class='line' id='LC24617'><br/></div><div class='line' id='LC24618'>&nbsp;&nbsp;function push(value) {</div><div class='line' id='LC24619'>&nbsp;&nbsp;&nbsp;&nbsp;if (value == undefined) {</div><div class='line' id='LC24620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = &#39;&#39;;</div><div class='line' id='LC24621'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof value != &#39;string&#39;) {</div><div class='line' id='LC24622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = angular.toJson(value);</div><div class='line' id='LC24623'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24624'>&nbsp;&nbsp;&nbsp;&nbsp;result.push(&#39;&#39; + value);</div><div class='line' id='LC24625'>&nbsp;&nbsp;}</div><div class='line' id='LC24626'><br/></div><div class='line' id='LC24627'>&nbsp;&nbsp;selection.each(function() {</div><div class='line' id='LC24628'>&nbsp;&nbsp;&nbsp;&nbsp;var element = windowJquery(this),</div><div class='line' id='LC24629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding;</div><div class='line' id='LC24630'>&nbsp;&nbsp;&nbsp;&nbsp;if (binding = element.data(&#39;$binding&#39;)) {</div><div class='line' id='LC24631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof binding == &#39;string&#39;) {</div><div class='line' id='LC24632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match(binding)) {</div><div class='line' id='LC24633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(element.scope().$eval(binding));</div><div class='line' id='LC24634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!angular.isArray(binding)) {</div><div class='line' id='LC24637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = [binding];</div><div class='line' id='LC24638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var fns, j=0, jj=binding.length;  j&lt;jj; j++) {</div><div class='line' id='LC24640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fns = binding[j];</div><div class='line' id='LC24641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fns.parts) {</div><div class='line' id='LC24642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fns = fns.parts;</div><div class='line' id='LC24643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC24644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fns = [fns];</div><div class='line' id='LC24645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var scope, fn, i = 0, ii = fns.length; i &lt; ii; i++) {</div><div class='line' id='LC24647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(match((fn = fns[i]).exp)) {</div><div class='line' id='LC24648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push(fn(scope = scope || element.scope()));</div><div class='line' id='LC24649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24653'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24654'>&nbsp;&nbsp;});</div><div class='line' id='LC24655'>&nbsp;&nbsp;return result;</div><div class='line' id='LC24656'>};</div><div class='line' id='LC24657'><br/></div><div class='line' id='LC24658'>/**</div><div class='line' id='LC24659'>&nbsp;* Represents the application currently being tested and abstracts usage</div><div class='line' id='LC24660'>&nbsp;* of iframes or separate windows.</div><div class='line' id='LC24661'>&nbsp;*</div><div class='line' id='LC24662'>&nbsp;* @param {Object} context jQuery wrapper around HTML context.</div><div class='line' id='LC24663'>&nbsp;*/</div><div class='line' id='LC24664'>angular.scenario.Application = function(context) {</div><div class='line' id='LC24665'>&nbsp;&nbsp;this.context = context;</div><div class='line' id='LC24666'>&nbsp;&nbsp;context.append(</div><div class='line' id='LC24667'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;h2&gt;Current URL: &lt;a href=&quot;about:blank&quot;&gt;None&lt;/a&gt;&lt;/h2&gt;&#39; +</div><div class='line' id='LC24668'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div id=&quot;test-frames&quot;&gt;&lt;/div&gt;&#39;</div><div class='line' id='LC24669'>&nbsp;&nbsp;);</div><div class='line' id='LC24670'>};</div><div class='line' id='LC24671'><br/></div><div class='line' id='LC24672'>/**</div><div class='line' id='LC24673'>&nbsp;* Gets the jQuery collection of frames. Don&#39;t use this directly because</div><div class='line' id='LC24674'>&nbsp;* frames may go stale.</div><div class='line' id='LC24675'>&nbsp;*</div><div class='line' id='LC24676'>&nbsp;* @private</div><div class='line' id='LC24677'>&nbsp;* @return {Object} jQuery collection</div><div class='line' id='LC24678'>&nbsp;*/</div><div class='line' id='LC24679'>angular.scenario.Application.prototype.getFrame_ = function() {</div><div class='line' id='LC24680'>&nbsp;&nbsp;return this.context.find(&#39;#test-frames iframe:last&#39;);</div><div class='line' id='LC24681'>};</div><div class='line' id='LC24682'><br/></div><div class='line' id='LC24683'>/**</div><div class='line' id='LC24684'>&nbsp;* Gets the window of the test runner frame. Always favor executeAction()</div><div class='line' id='LC24685'>&nbsp;* instead of this method since it prevents you from getting a stale window.</div><div class='line' id='LC24686'>&nbsp;*</div><div class='line' id='LC24687'>&nbsp;* @private</div><div class='line' id='LC24688'>&nbsp;* @return {Object} the window of the frame</div><div class='line' id='LC24689'>&nbsp;*/</div><div class='line' id='LC24690'>angular.scenario.Application.prototype.getWindow_ = function() {</div><div class='line' id='LC24691'>&nbsp;&nbsp;var contentWindow = this.getFrame_().prop(&#39;contentWindow&#39;);</div><div class='line' id='LC24692'>&nbsp;&nbsp;if (!contentWindow)</div><div class='line' id='LC24693'>&nbsp;&nbsp;&nbsp;&nbsp;throw &#39;Frame window is not accessible.&#39;;</div><div class='line' id='LC24694'>&nbsp;&nbsp;return contentWindow;</div><div class='line' id='LC24695'>};</div><div class='line' id='LC24696'><br/></div><div class='line' id='LC24697'>/**</div><div class='line' id='LC24698'>&nbsp;* Changes the location of the frame.</div><div class='line' id='LC24699'>&nbsp;*</div><div class='line' id='LC24700'>&nbsp;* @param {string} url The URL. If it begins with a # then only the</div><div class='line' id='LC24701'>&nbsp;*   hash of the page is changed.</div><div class='line' id='LC24702'>&nbsp;* @param {function()} loadFn function($window, $document) Called when frame loads.</div><div class='line' id='LC24703'>&nbsp;* @param {function()} errorFn function(error) Called if any error when loading.</div><div class='line' id='LC24704'>&nbsp;*/</div><div class='line' id='LC24705'>angular.scenario.Application.prototype.navigateTo = function(url, loadFn, errorFn) {</div><div class='line' id='LC24706'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24707'>&nbsp;&nbsp;var frame = this.getFrame_();</div><div class='line' id='LC24708'>&nbsp;&nbsp;//TODO(esprehn): Refactor to use rethrow()</div><div class='line' id='LC24709'>&nbsp;&nbsp;errorFn = errorFn || function(e) { throw e; };</div><div class='line' id='LC24710'>&nbsp;&nbsp;if (url === &#39;about:blank&#39;) {</div><div class='line' id='LC24711'>&nbsp;&nbsp;&nbsp;&nbsp;errorFn(&#39;Sandbox Error: Navigating to about:blank is not allowed.&#39;);</div><div class='line' id='LC24712'>&nbsp;&nbsp;} else if (url.charAt(0) === &#39;#&#39;) {</div><div class='line' id='LC24713'>&nbsp;&nbsp;&nbsp;&nbsp;url = frame.attr(&#39;src&#39;).split(&#39;#&#39;)[0] + url;</div><div class='line' id='LC24714'>&nbsp;&nbsp;&nbsp;&nbsp;frame.attr(&#39;src&#39;, url);</div><div class='line' id='LC24715'>&nbsp;&nbsp;&nbsp;&nbsp;this.executeAction(loadFn);</div><div class='line' id='LC24716'>&nbsp;&nbsp;} else {</div><div class='line' id='LC24717'>&nbsp;&nbsp;&nbsp;&nbsp;frame.remove();</div><div class='line' id='LC24718'>&nbsp;&nbsp;&nbsp;&nbsp;this.context.find(&#39;#test-frames&#39;).append(&#39;&lt;iframe&gt;&#39;);</div><div class='line' id='LC24719'>&nbsp;&nbsp;&nbsp;&nbsp;frame = this.getFrame_();</div><div class='line' id='LC24720'>&nbsp;&nbsp;&nbsp;&nbsp;frame.load(function() {</div><div class='line' id='LC24721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.unbind();</div><div class='line' id='LC24722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC24723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.executeAction(loadFn);</div><div class='line' id='LC24724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC24725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorFn(e);</div><div class='line' id='LC24726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24727'>&nbsp;&nbsp;&nbsp;&nbsp;}).attr(&#39;src&#39;, url);</div><div class='line' id='LC24728'>&nbsp;&nbsp;}</div><div class='line' id='LC24729'>&nbsp;&nbsp;this.context.find(&#39;&gt; h2 a&#39;).attr(&#39;href&#39;, url).text(url);</div><div class='line' id='LC24730'>};</div><div class='line' id='LC24731'><br/></div><div class='line' id='LC24732'>/**</div><div class='line' id='LC24733'>&nbsp;* Executes a function in the context of the tested application. Will wait</div><div class='line' id='LC24734'>&nbsp;* for all pending angular xhr requests before executing.</div><div class='line' id='LC24735'>&nbsp;*</div><div class='line' id='LC24736'>&nbsp;* @param {function()} action The callback to execute. function($window, $document)</div><div class='line' id='LC24737'>&nbsp;*  $document is a jQuery wrapped document.</div><div class='line' id='LC24738'>&nbsp;*/</div><div class='line' id='LC24739'>angular.scenario.Application.prototype.executeAction = function(action) {</div><div class='line' id='LC24740'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24741'>&nbsp;&nbsp;var $window = this.getWindow_();</div><div class='line' id='LC24742'>&nbsp;&nbsp;if (!$window.document) {</div><div class='line' id='LC24743'>&nbsp;&nbsp;&nbsp;&nbsp;throw &#39;Sandbox Error: Application document not accessible.&#39;;</div><div class='line' id='LC24744'>&nbsp;&nbsp;}</div><div class='line' id='LC24745'>&nbsp;&nbsp;if (!$window.angular) {</div><div class='line' id='LC24746'>&nbsp;&nbsp;&nbsp;&nbsp;return action.call(this, $window, _jQuery($window.document));</div><div class='line' id='LC24747'>&nbsp;&nbsp;}</div><div class='line' id='LC24748'>&nbsp;&nbsp;angularInit($window.document, function(element) {</div><div class='line' id='LC24749'>&nbsp;&nbsp;&nbsp;&nbsp;var $injector = $window.angular.element(element).injector();</div><div class='line' id='LC24750'>&nbsp;&nbsp;&nbsp;&nbsp;var $element = _jQuery(element);</div><div class='line' id='LC24751'><br/></div><div class='line' id='LC24752'>&nbsp;&nbsp;&nbsp;&nbsp;$element.injector = function() {</div><div class='line' id='LC24753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $injector;</div><div class='line' id='LC24754'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC24755'><br/></div><div class='line' id='LC24756'>&nbsp;&nbsp;&nbsp;&nbsp;$injector.invoke(function($browser){</div><div class='line' id='LC24757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$browser.notifyWhenNoOutstandingRequests(function() {</div><div class='line' id='LC24758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action.call(self, $window, $element);</div><div class='line' id='LC24759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24760'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC24761'>&nbsp;&nbsp;});</div><div class='line' id='LC24762'>};</div><div class='line' id='LC24763'><br/></div><div class='line' id='LC24764'>/**</div><div class='line' id='LC24765'>&nbsp;* The representation of define blocks. Don&#39;t used directly, instead use</div><div class='line' id='LC24766'>&nbsp;* define() in your tests.</div><div class='line' id='LC24767'>&nbsp;*</div><div class='line' id='LC24768'>&nbsp;* @param {string} descName Name of the block</div><div class='line' id='LC24769'>&nbsp;* @param {Object} parent describe or undefined if the root.</div><div class='line' id='LC24770'>&nbsp;*/</div><div class='line' id='LC24771'>angular.scenario.Describe = function(descName, parent) {</div><div class='line' id='LC24772'>&nbsp;&nbsp;this.only = parent &amp;&amp; parent.only;</div><div class='line' id='LC24773'>&nbsp;&nbsp;this.beforeEachFns = [];</div><div class='line' id='LC24774'>&nbsp;&nbsp;this.afterEachFns = [];</div><div class='line' id='LC24775'>&nbsp;&nbsp;this.its = [];</div><div class='line' id='LC24776'>&nbsp;&nbsp;this.children = [];</div><div class='line' id='LC24777'>&nbsp;&nbsp;this.name = descName;</div><div class='line' id='LC24778'>&nbsp;&nbsp;this.parent = parent;</div><div class='line' id='LC24779'>&nbsp;&nbsp;this.id = angular.scenario.Describe.id++;</div><div class='line' id='LC24780'><br/></div><div class='line' id='LC24781'>&nbsp;&nbsp;/**</div><div class='line' id='LC24782'>&nbsp;&nbsp;&nbsp;* Calls all before functions.</div><div class='line' id='LC24783'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC24784'>&nbsp;&nbsp;var beforeEachFns = this.beforeEachFns;</div><div class='line' id='LC24785'>&nbsp;&nbsp;this.setupBefore = function() {</div><div class='line' id='LC24786'>&nbsp;&nbsp;&nbsp;&nbsp;if (parent) parent.setupBefore.call(this);</div><div class='line' id='LC24787'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(beforeEachFns, function(fn) { fn.call(this); }, this);</div><div class='line' id='LC24788'>&nbsp;&nbsp;};</div><div class='line' id='LC24789'><br/></div><div class='line' id='LC24790'>&nbsp;&nbsp;/**</div><div class='line' id='LC24791'>&nbsp;&nbsp;&nbsp;* Calls all after functions.</div><div class='line' id='LC24792'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC24793'>&nbsp;&nbsp;var afterEachFns = this.afterEachFns;</div><div class='line' id='LC24794'>&nbsp;&nbsp;this.setupAfter  = function() {</div><div class='line' id='LC24795'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(afterEachFns, function(fn) { fn.call(this); }, this);</div><div class='line' id='LC24796'>&nbsp;&nbsp;&nbsp;&nbsp;if (parent) parent.setupAfter.call(this);</div><div class='line' id='LC24797'>&nbsp;&nbsp;};</div><div class='line' id='LC24798'>};</div><div class='line' id='LC24799'><br/></div><div class='line' id='LC24800'>// Shared Unique ID generator for every describe block</div><div class='line' id='LC24801'>angular.scenario.Describe.id = 0;</div><div class='line' id='LC24802'><br/></div><div class='line' id='LC24803'>// Shared Unique ID generator for every it (spec)</div><div class='line' id='LC24804'>angular.scenario.Describe.specId = 0;</div><div class='line' id='LC24805'><br/></div><div class='line' id='LC24806'>/**</div><div class='line' id='LC24807'>&nbsp;* Defines a block to execute before each it or nested describe.</div><div class='line' id='LC24808'>&nbsp;*</div><div class='line' id='LC24809'>&nbsp;* @param {function()} body Body of the block.</div><div class='line' id='LC24810'>&nbsp;*/</div><div class='line' id='LC24811'>angular.scenario.Describe.prototype.beforeEach = function(body) {</div><div class='line' id='LC24812'>&nbsp;&nbsp;this.beforeEachFns.push(body);</div><div class='line' id='LC24813'>};</div><div class='line' id='LC24814'><br/></div><div class='line' id='LC24815'>/**</div><div class='line' id='LC24816'>&nbsp;* Defines a block to execute after each it or nested describe.</div><div class='line' id='LC24817'>&nbsp;*</div><div class='line' id='LC24818'>&nbsp;* @param {function()} body Body of the block.</div><div class='line' id='LC24819'>&nbsp;*/</div><div class='line' id='LC24820'>angular.scenario.Describe.prototype.afterEach = function(body) {</div><div class='line' id='LC24821'>&nbsp;&nbsp;this.afterEachFns.push(body);</div><div class='line' id='LC24822'>};</div><div class='line' id='LC24823'><br/></div><div class='line' id='LC24824'>/**</div><div class='line' id='LC24825'>&nbsp;* Creates a new describe block that&#39;s a child of this one.</div><div class='line' id='LC24826'>&nbsp;*</div><div class='line' id='LC24827'>&nbsp;* @param {string} name Name of the block. Appended to the parent block&#39;s name.</div><div class='line' id='LC24828'>&nbsp;* @param {function()} body Body of the block.</div><div class='line' id='LC24829'>&nbsp;*/</div><div class='line' id='LC24830'>angular.scenario.Describe.prototype.describe = function(name, body) {</div><div class='line' id='LC24831'>&nbsp;&nbsp;var child = new angular.scenario.Describe(name, this);</div><div class='line' id='LC24832'>&nbsp;&nbsp;this.children.push(child);</div><div class='line' id='LC24833'>&nbsp;&nbsp;body.call(child);</div><div class='line' id='LC24834'>};</div><div class='line' id='LC24835'><br/></div><div class='line' id='LC24836'>/**</div><div class='line' id='LC24837'>&nbsp;* Same as describe() but makes ddescribe blocks the only to run.</div><div class='line' id='LC24838'>&nbsp;*</div><div class='line' id='LC24839'>&nbsp;* @param {string} name Name of the test.</div><div class='line' id='LC24840'>&nbsp;* @param {function()} body Body of the block.</div><div class='line' id='LC24841'>&nbsp;*/</div><div class='line' id='LC24842'>angular.scenario.Describe.prototype.ddescribe = function(name, body) {</div><div class='line' id='LC24843'>&nbsp;&nbsp;var child = new angular.scenario.Describe(name, this);</div><div class='line' id='LC24844'>&nbsp;&nbsp;child.only = true;</div><div class='line' id='LC24845'>&nbsp;&nbsp;this.children.push(child);</div><div class='line' id='LC24846'>&nbsp;&nbsp;body.call(child);</div><div class='line' id='LC24847'>};</div><div class='line' id='LC24848'><br/></div><div class='line' id='LC24849'>/**</div><div class='line' id='LC24850'>&nbsp;* Use to disable a describe block.</div><div class='line' id='LC24851'>&nbsp;*/</div><div class='line' id='LC24852'>angular.scenario.Describe.prototype.xdescribe = angular.noop;</div><div class='line' id='LC24853'><br/></div><div class='line' id='LC24854'>/**</div><div class='line' id='LC24855'>&nbsp;* Defines a test.</div><div class='line' id='LC24856'>&nbsp;*</div><div class='line' id='LC24857'>&nbsp;* @param {string} name Name of the test.</div><div class='line' id='LC24858'>&nbsp;* @param {function()} vody Body of the block.</div><div class='line' id='LC24859'>&nbsp;*/</div><div class='line' id='LC24860'>angular.scenario.Describe.prototype.it = function(name, body) {</div><div class='line' id='LC24861'>&nbsp;&nbsp;this.its.push({</div><div class='line' id='LC24862'>&nbsp;&nbsp;&nbsp;&nbsp;id: angular.scenario.Describe.specId++,</div><div class='line' id='LC24863'>&nbsp;&nbsp;&nbsp;&nbsp;definition: this,</div><div class='line' id='LC24864'>&nbsp;&nbsp;&nbsp;&nbsp;only: this.only,</div><div class='line' id='LC24865'>&nbsp;&nbsp;&nbsp;&nbsp;name: name,</div><div class='line' id='LC24866'>&nbsp;&nbsp;&nbsp;&nbsp;before: this.setupBefore,</div><div class='line' id='LC24867'>&nbsp;&nbsp;&nbsp;&nbsp;body: body,</div><div class='line' id='LC24868'>&nbsp;&nbsp;&nbsp;&nbsp;after: this.setupAfter</div><div class='line' id='LC24869'>&nbsp;&nbsp;});</div><div class='line' id='LC24870'>};</div><div class='line' id='LC24871'><br/></div><div class='line' id='LC24872'>/**</div><div class='line' id='LC24873'>&nbsp;* Same as it() but makes iit tests the only test to run.</div><div class='line' id='LC24874'>&nbsp;*</div><div class='line' id='LC24875'>&nbsp;* @param {string} name Name of the test.</div><div class='line' id='LC24876'>&nbsp;* @param {function()} body Body of the block.</div><div class='line' id='LC24877'>&nbsp;*/</div><div class='line' id='LC24878'>angular.scenario.Describe.prototype.iit = function(name, body) {</div><div class='line' id='LC24879'>&nbsp;&nbsp;this.it.apply(this, arguments);</div><div class='line' id='LC24880'>&nbsp;&nbsp;this.its[this.its.length-1].only = true;</div><div class='line' id='LC24881'>};</div><div class='line' id='LC24882'><br/></div><div class='line' id='LC24883'>/**</div><div class='line' id='LC24884'>&nbsp;* Use to disable a test block.</div><div class='line' id='LC24885'>&nbsp;*/</div><div class='line' id='LC24886'>angular.scenario.Describe.prototype.xit = angular.noop;</div><div class='line' id='LC24887'><br/></div><div class='line' id='LC24888'>/**</div><div class='line' id='LC24889'>&nbsp;* Gets an array of functions representing all the tests (recursively).</div><div class='line' id='LC24890'>&nbsp;* that can be executed with SpecRunner&#39;s.</div><div class='line' id='LC24891'>&nbsp;*</div><div class='line' id='LC24892'>&nbsp;* @return {Array&lt;Object&gt;} Array of it blocks {</div><div class='line' id='LC24893'>&nbsp;*   definition : Object // parent Describe</div><div class='line' id='LC24894'>&nbsp;*   only: boolean</div><div class='line' id='LC24895'>&nbsp;*   name: string</div><div class='line' id='LC24896'>&nbsp;*   before: Function</div><div class='line' id='LC24897'>&nbsp;*   body: Function</div><div class='line' id='LC24898'>&nbsp;*   after: Function</div><div class='line' id='LC24899'>&nbsp;*  }</div><div class='line' id='LC24900'>&nbsp;*/</div><div class='line' id='LC24901'>angular.scenario.Describe.prototype.getSpecs = function() {</div><div class='line' id='LC24902'>&nbsp;&nbsp;var specs = arguments[0] || [];</div><div class='line' id='LC24903'>&nbsp;&nbsp;angular.forEach(this.children, function(child) {</div><div class='line' id='LC24904'>&nbsp;&nbsp;&nbsp;&nbsp;child.getSpecs(specs);</div><div class='line' id='LC24905'>&nbsp;&nbsp;});</div><div class='line' id='LC24906'>&nbsp;&nbsp;angular.forEach(this.its, function(it) {</div><div class='line' id='LC24907'>&nbsp;&nbsp;&nbsp;&nbsp;specs.push(it);</div><div class='line' id='LC24908'>&nbsp;&nbsp;});</div><div class='line' id='LC24909'>&nbsp;&nbsp;var only = [];</div><div class='line' id='LC24910'>&nbsp;&nbsp;angular.forEach(specs, function(it) {</div><div class='line' id='LC24911'>&nbsp;&nbsp;&nbsp;&nbsp;if (it.only) {</div><div class='line' id='LC24912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;only.push(it);</div><div class='line' id='LC24913'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24914'>&nbsp;&nbsp;});</div><div class='line' id='LC24915'>&nbsp;&nbsp;return (only.length &amp;&amp; only) || specs;</div><div class='line' id='LC24916'>};</div><div class='line' id='LC24917'><br/></div><div class='line' id='LC24918'>/**</div><div class='line' id='LC24919'>&nbsp;* A future action in a spec.</div><div class='line' id='LC24920'>&nbsp;*</div><div class='line' id='LC24921'>&nbsp;* @param {string} name of the future action</div><div class='line' id='LC24922'>&nbsp;* @param {function()} future callback(error, result)</div><div class='line' id='LC24923'>&nbsp;* @param {function()} Optional. function that returns the file/line number.</div><div class='line' id='LC24924'>&nbsp;*/</div><div class='line' id='LC24925'>angular.scenario.Future = function(name, behavior, line) {</div><div class='line' id='LC24926'>&nbsp;&nbsp;this.name = name;</div><div class='line' id='LC24927'>&nbsp;&nbsp;this.behavior = behavior;</div><div class='line' id='LC24928'>&nbsp;&nbsp;this.fulfilled = false;</div><div class='line' id='LC24929'>&nbsp;&nbsp;this.value = undefined;</div><div class='line' id='LC24930'>&nbsp;&nbsp;this.parser = angular.identity;</div><div class='line' id='LC24931'>&nbsp;&nbsp;this.line = line || function() { return &#39;&#39;; };</div><div class='line' id='LC24932'>};</div><div class='line' id='LC24933'><br/></div><div class='line' id='LC24934'>/**</div><div class='line' id='LC24935'>&nbsp;* Executes the behavior of the closure.</div><div class='line' id='LC24936'>&nbsp;*</div><div class='line' id='LC24937'>&nbsp;* @param {function()} doneFn Callback function(error, result)</div><div class='line' id='LC24938'>&nbsp;*/</div><div class='line' id='LC24939'>angular.scenario.Future.prototype.execute = function(doneFn) {</div><div class='line' id='LC24940'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24941'>&nbsp;&nbsp;this.behavior(function(error, result) {</div><div class='line' id='LC24942'>&nbsp;&nbsp;&nbsp;&nbsp;self.fulfilled = true;</div><div class='line' id='LC24943'>&nbsp;&nbsp;&nbsp;&nbsp;if (result) {</div><div class='line' id='LC24944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC24945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = self.parser(result);</div><div class='line' id='LC24946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC24947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error = e;</div><div class='line' id='LC24948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24949'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC24950'>&nbsp;&nbsp;&nbsp;&nbsp;self.value = error || result;</div><div class='line' id='LC24951'>&nbsp;&nbsp;&nbsp;&nbsp;doneFn(error, result);</div><div class='line' id='LC24952'>&nbsp;&nbsp;});</div><div class='line' id='LC24953'>};</div><div class='line' id='LC24954'><br/></div><div class='line' id='LC24955'>/**</div><div class='line' id='LC24956'>&nbsp;* Configures the future to convert it&#39;s final with a function fn(value)</div><div class='line' id='LC24957'>&nbsp;*</div><div class='line' id='LC24958'>&nbsp;* @param {function()} fn function(value) that returns the parsed value</div><div class='line' id='LC24959'>&nbsp;*/</div><div class='line' id='LC24960'>angular.scenario.Future.prototype.parsedWith = function(fn) {</div><div class='line' id='LC24961'>&nbsp;&nbsp;this.parser = fn;</div><div class='line' id='LC24962'>&nbsp;&nbsp;return this;</div><div class='line' id='LC24963'>};</div><div class='line' id='LC24964'><br/></div><div class='line' id='LC24965'>/**</div><div class='line' id='LC24966'>&nbsp;* Configures the future to parse it&#39;s final value from JSON</div><div class='line' id='LC24967'>&nbsp;* into objects.</div><div class='line' id='LC24968'>&nbsp;*/</div><div class='line' id='LC24969'>angular.scenario.Future.prototype.fromJson = function() {</div><div class='line' id='LC24970'>&nbsp;&nbsp;return this.parsedWith(angular.fromJson);</div><div class='line' id='LC24971'>};</div><div class='line' id='LC24972'><br/></div><div class='line' id='LC24973'>/**</div><div class='line' id='LC24974'>&nbsp;* Configures the future to convert it&#39;s final value from objects</div><div class='line' id='LC24975'>&nbsp;* into JSON.</div><div class='line' id='LC24976'>&nbsp;*/</div><div class='line' id='LC24977'>angular.scenario.Future.prototype.toJson = function() {</div><div class='line' id='LC24978'>&nbsp;&nbsp;return this.parsedWith(angular.toJson);</div><div class='line' id='LC24979'>};</div><div class='line' id='LC24980'><br/></div><div class='line' id='LC24981'>/**</div><div class='line' id='LC24982'>&nbsp;* Maintains an object tree from the runner events.</div><div class='line' id='LC24983'>&nbsp;*</div><div class='line' id='LC24984'>&nbsp;* @param {Object} runner The scenario Runner instance to connect to.</div><div class='line' id='LC24985'>&nbsp;*</div><div class='line' id='LC24986'>&nbsp;* TODO(esprehn): Every output type creates one of these, but we probably</div><div class='line' id='LC24987'>&nbsp;*  want one global shared instance. Need to handle events better too</div><div class='line' id='LC24988'>&nbsp;*  so the HTML output doesn&#39;t need to do spec model.getSpec(spec.id)</div><div class='line' id='LC24989'>&nbsp;*  silliness.</div><div class='line' id='LC24990'>&nbsp;*</div><div class='line' id='LC24991'>&nbsp;* TODO(vojta) refactor on, emit methods (from all objects) - use inheritance</div><div class='line' id='LC24992'>&nbsp;*/</div><div class='line' id='LC24993'>angular.scenario.ObjectModel = function(runner) {</div><div class='line' id='LC24994'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC24995'><br/></div><div class='line' id='LC24996'>&nbsp;&nbsp;this.specMap = {};</div><div class='line' id='LC24997'>&nbsp;&nbsp;this.listeners = [];</div><div class='line' id='LC24998'>&nbsp;&nbsp;this.value = {</div><div class='line' id='LC24999'>&nbsp;&nbsp;&nbsp;&nbsp;name: &#39;&#39;,</div><div class='line' id='LC25000'>&nbsp;&nbsp;&nbsp;&nbsp;children: {}</div><div class='line' id='LC25001'>&nbsp;&nbsp;};</div><div class='line' id='LC25002'><br/></div><div class='line' id='LC25003'>&nbsp;&nbsp;runner.on(&#39;SpecBegin&#39;, function(spec) {</div><div class='line' id='LC25004'>&nbsp;&nbsp;&nbsp;&nbsp;var block = self.value,</div><div class='line' id='LC25005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definitions = [];</div><div class='line' id='LC25006'><br/></div><div class='line' id='LC25007'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(self.getDefinitionPath(spec), function(def) {</div><div class='line' id='LC25008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!block.children[def.name]) {</div><div class='line' id='LC25009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block.children[def.name] = {</div><div class='line' id='LC25010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: def.id,</div><div class='line' id='LC25011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: def.name,</div><div class='line' id='LC25012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;children: {},</div><div class='line' id='LC25013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specs: {}</div><div class='line' id='LC25014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block = block.children[def.name];</div><div class='line' id='LC25017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definitions.push(def.name);</div><div class='line' id='LC25018'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25019'><br/></div><div class='line' id='LC25020'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.specMap[spec.id] =</div><div class='line' id='LC25021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block.specs[spec.name] =</div><div class='line' id='LC25022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new angular.scenario.ObjectModel.Spec(spec.id, spec.name, definitions);</div><div class='line' id='LC25023'><br/></div><div class='line' id='LC25024'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25025'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;SpecBegin&#39;, it);</div><div class='line' id='LC25026'>&nbsp;&nbsp;});</div><div class='line' id='LC25027'><br/></div><div class='line' id='LC25028'>&nbsp;&nbsp;runner.on(&#39;SpecError&#39;, function(spec, error) {</div><div class='line' id='LC25029'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id);</div><div class='line' id='LC25030'>&nbsp;&nbsp;&nbsp;&nbsp;it.status = &#39;error&#39;;</div><div class='line' id='LC25031'>&nbsp;&nbsp;&nbsp;&nbsp;it.error = error;</div><div class='line' id='LC25032'><br/></div><div class='line' id='LC25033'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25034'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;SpecError&#39;, it, error);</div><div class='line' id='LC25035'>&nbsp;&nbsp;});</div><div class='line' id='LC25036'><br/></div><div class='line' id='LC25037'>&nbsp;&nbsp;runner.on(&#39;SpecEnd&#39;, function(spec) {</div><div class='line' id='LC25038'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id);</div><div class='line' id='LC25039'>&nbsp;&nbsp;&nbsp;&nbsp;complete(it);</div><div class='line' id='LC25040'><br/></div><div class='line' id='LC25041'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25042'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;SpecEnd&#39;, it);</div><div class='line' id='LC25043'>&nbsp;&nbsp;});</div><div class='line' id='LC25044'><br/></div><div class='line' id='LC25045'>&nbsp;&nbsp;runner.on(&#39;StepBegin&#39;, function(spec, step) {</div><div class='line' id='LC25046'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id);</div><div class='line' id='LC25047'>&nbsp;&nbsp;&nbsp;&nbsp;var step = new angular.scenario.ObjectModel.Step(step.name);</div><div class='line' id='LC25048'>&nbsp;&nbsp;&nbsp;&nbsp;it.steps.push(step);</div><div class='line' id='LC25049'><br/></div><div class='line' id='LC25050'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25051'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepBegin&#39;, it, step);</div><div class='line' id='LC25052'>&nbsp;&nbsp;});</div><div class='line' id='LC25053'><br/></div><div class='line' id='LC25054'>&nbsp;&nbsp;runner.on(&#39;StepEnd&#39;, function(spec) {</div><div class='line' id='LC25055'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id);</div><div class='line' id='LC25056'>&nbsp;&nbsp;&nbsp;&nbsp;var step = it.getLastStep();</div><div class='line' id='LC25057'>&nbsp;&nbsp;&nbsp;&nbsp;if (step.name !== step.name)</div><div class='line' id='LC25058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw &#39;Events fired in the wrong order. Step names don\&#39;t match.&#39;;</div><div class='line' id='LC25059'>&nbsp;&nbsp;&nbsp;&nbsp;complete(step);</div><div class='line' id='LC25060'><br/></div><div class='line' id='LC25061'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25062'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepEnd&#39;, it, step);</div><div class='line' id='LC25063'>&nbsp;&nbsp;});</div><div class='line' id='LC25064'><br/></div><div class='line' id='LC25065'>&nbsp;&nbsp;runner.on(&#39;StepFailure&#39;, function(spec, step, error) {</div><div class='line' id='LC25066'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id),</div><div class='line' id='LC25067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modelStep = it.getLastStep();</div><div class='line' id='LC25068'><br/></div><div class='line' id='LC25069'>&nbsp;&nbsp;&nbsp;&nbsp;modelStep.setErrorStatus(&#39;failure&#39;, error, step.line());</div><div class='line' id='LC25070'>&nbsp;&nbsp;&nbsp;&nbsp;it.setStatusFromStep(modelStep);</div><div class='line' id='LC25071'><br/></div><div class='line' id='LC25072'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25073'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepFailure&#39;, it, modelStep, error);</div><div class='line' id='LC25074'>&nbsp;&nbsp;});</div><div class='line' id='LC25075'><br/></div><div class='line' id='LC25076'>&nbsp;&nbsp;runner.on(&#39;StepError&#39;, function(spec, step, error) {</div><div class='line' id='LC25077'>&nbsp;&nbsp;&nbsp;&nbsp;var it = self.getSpec(spec.id),</div><div class='line' id='LC25078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modelStep = it.getLastStep();</div><div class='line' id='LC25079'><br/></div><div class='line' id='LC25080'>&nbsp;&nbsp;&nbsp;&nbsp;modelStep.setErrorStatus(&#39;error&#39;, error, step.line());</div><div class='line' id='LC25081'>&nbsp;&nbsp;&nbsp;&nbsp;it.setStatusFromStep(modelStep);</div><div class='line' id='LC25082'><br/></div><div class='line' id='LC25083'>&nbsp;&nbsp;&nbsp;&nbsp;// forward the event</div><div class='line' id='LC25084'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepError&#39;, it, modelStep, error);</div><div class='line' id='LC25085'>&nbsp;&nbsp;});</div><div class='line' id='LC25086'><br/></div><div class='line' id='LC25087'>&nbsp;&nbsp;runner.on(&#39;RunnerBegin&#39;, function() {</div><div class='line' id='LC25088'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;RunnerBegin&#39;);</div><div class='line' id='LC25089'>&nbsp;&nbsp;});</div><div class='line' id='LC25090'>&nbsp;&nbsp;runner.on(&#39;RunnerEnd&#39;, function() {</div><div class='line' id='LC25091'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;RunnerEnd&#39;);</div><div class='line' id='LC25092'>&nbsp;&nbsp;});</div><div class='line' id='LC25093'><br/></div><div class='line' id='LC25094'>&nbsp;&nbsp;function complete(item) {</div><div class='line' id='LC25095'>&nbsp;&nbsp;&nbsp;&nbsp;item.endTime = new Date().getTime();</div><div class='line' id='LC25096'>&nbsp;&nbsp;&nbsp;&nbsp;item.duration = item.endTime - item.startTime;</div><div class='line' id='LC25097'>&nbsp;&nbsp;&nbsp;&nbsp;item.status = item.status || &#39;success&#39;;</div><div class='line' id='LC25098'>&nbsp;&nbsp;}</div><div class='line' id='LC25099'>};</div><div class='line' id='LC25100'><br/></div><div class='line' id='LC25101'>/**</div><div class='line' id='LC25102'>&nbsp;* Adds a listener for an event.</div><div class='line' id='LC25103'>&nbsp;*</div><div class='line' id='LC25104'>&nbsp;* @param {string} eventName Name of the event to add a handler for</div><div class='line' id='LC25105'>&nbsp;* @param {function()} listener Function that will be called when event is fired</div><div class='line' id='LC25106'>&nbsp;*/</div><div class='line' id='LC25107'>angular.scenario.ObjectModel.prototype.on = function(eventName, listener) {</div><div class='line' id='LC25108'>&nbsp;&nbsp;eventName = eventName.toLowerCase();</div><div class='line' id='LC25109'>&nbsp;&nbsp;this.listeners[eventName] = this.listeners[eventName] || [];</div><div class='line' id='LC25110'>&nbsp;&nbsp;this.listeners[eventName].push(listener);</div><div class='line' id='LC25111'>};</div><div class='line' id='LC25112'><br/></div><div class='line' id='LC25113'>/**</div><div class='line' id='LC25114'>&nbsp;* Emits an event which notifies listeners and passes extra</div><div class='line' id='LC25115'>&nbsp;* arguments.</div><div class='line' id='LC25116'>&nbsp;*</div><div class='line' id='LC25117'>&nbsp;* @param {string} eventName Name of the event to fire.</div><div class='line' id='LC25118'>&nbsp;*/</div><div class='line' id='LC25119'>angular.scenario.ObjectModel.prototype.emit = function(eventName) {</div><div class='line' id='LC25120'>&nbsp;&nbsp;var self = this,</div><div class='line' id='LC25121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = Array.prototype.slice.call(arguments, 1),</div><div class='line' id='LC25122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventName = eventName.toLowerCase();</div><div class='line' id='LC25123'><br/></div><div class='line' id='LC25124'>&nbsp;&nbsp;if (this.listeners[eventName]) {</div><div class='line' id='LC25125'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(this.listeners[eventName], function(listener) {</div><div class='line' id='LC25126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listener.apply(self, args);</div><div class='line' id='LC25127'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25128'>&nbsp;&nbsp;}</div><div class='line' id='LC25129'>};</div><div class='line' id='LC25130'><br/></div><div class='line' id='LC25131'>/**</div><div class='line' id='LC25132'>&nbsp;* Computes the path of definition describe blocks that wrap around</div><div class='line' id='LC25133'>&nbsp;* this spec.</div><div class='line' id='LC25134'>&nbsp;*</div><div class='line' id='LC25135'>&nbsp;* @param spec Spec to compute the path for.</div><div class='line' id='LC25136'>&nbsp;* @return {Array&lt;Describe&gt;} The describe block path</div><div class='line' id='LC25137'>&nbsp;*/</div><div class='line' id='LC25138'>angular.scenario.ObjectModel.prototype.getDefinitionPath = function(spec) {</div><div class='line' id='LC25139'>&nbsp;&nbsp;var path = [];</div><div class='line' id='LC25140'>&nbsp;&nbsp;var currentDefinition = spec.definition;</div><div class='line' id='LC25141'>&nbsp;&nbsp;while (currentDefinition &amp;&amp; currentDefinition.name) {</div><div class='line' id='LC25142'>&nbsp;&nbsp;&nbsp;&nbsp;path.unshift(currentDefinition);</div><div class='line' id='LC25143'>&nbsp;&nbsp;&nbsp;&nbsp;currentDefinition = currentDefinition.parent;</div><div class='line' id='LC25144'>&nbsp;&nbsp;}</div><div class='line' id='LC25145'>&nbsp;&nbsp;return path;</div><div class='line' id='LC25146'>};</div><div class='line' id='LC25147'><br/></div><div class='line' id='LC25148'>/**</div><div class='line' id='LC25149'>&nbsp;* Gets a spec by id.</div><div class='line' id='LC25150'>&nbsp;*</div><div class='line' id='LC25151'>&nbsp;* @param {string} The id of the spec to get the object for.</div><div class='line' id='LC25152'>&nbsp;* @return {Object} the Spec instance</div><div class='line' id='LC25153'>&nbsp;*/</div><div class='line' id='LC25154'>angular.scenario.ObjectModel.prototype.getSpec = function(id) {</div><div class='line' id='LC25155'>&nbsp;&nbsp;return this.specMap[id];</div><div class='line' id='LC25156'>};</div><div class='line' id='LC25157'><br/></div><div class='line' id='LC25158'>/**</div><div class='line' id='LC25159'>&nbsp;* A single it block.</div><div class='line' id='LC25160'>&nbsp;*</div><div class='line' id='LC25161'>&nbsp;* @param {string} id Id of the spec</div><div class='line' id='LC25162'>&nbsp;* @param {string} name Name of the spec</div><div class='line' id='LC25163'>&nbsp;* @param {Array&lt;string&gt;=} definitionNames List of all describe block names that wrap this spec</div><div class='line' id='LC25164'>&nbsp;*/</div><div class='line' id='LC25165'>angular.scenario.ObjectModel.Spec = function(id, name, definitionNames) {</div><div class='line' id='LC25166'>&nbsp;&nbsp;this.id = id;</div><div class='line' id='LC25167'>&nbsp;&nbsp;this.name = name;</div><div class='line' id='LC25168'>&nbsp;&nbsp;this.startTime = new Date().getTime();</div><div class='line' id='LC25169'>&nbsp;&nbsp;this.steps = [];</div><div class='line' id='LC25170'>&nbsp;&nbsp;this.fullDefinitionName = (definitionNames || []).join(&#39; &#39;);</div><div class='line' id='LC25171'>};</div><div class='line' id='LC25172'><br/></div><div class='line' id='LC25173'>/**</div><div class='line' id='LC25174'>&nbsp;* Adds a new step to the Spec.</div><div class='line' id='LC25175'>&nbsp;*</div><div class='line' id='LC25176'>&nbsp;* @param {string} step Name of the step (really name of the future)</div><div class='line' id='LC25177'>&nbsp;* @return {Object} the added step</div><div class='line' id='LC25178'>&nbsp;*/</div><div class='line' id='LC25179'>angular.scenario.ObjectModel.Spec.prototype.addStep = function(name) {</div><div class='line' id='LC25180'>&nbsp;&nbsp;var step = new angular.scenario.ObjectModel.Step(name);</div><div class='line' id='LC25181'>&nbsp;&nbsp;this.steps.push(step);</div><div class='line' id='LC25182'>&nbsp;&nbsp;return step;</div><div class='line' id='LC25183'>};</div><div class='line' id='LC25184'><br/></div><div class='line' id='LC25185'>/**</div><div class='line' id='LC25186'>&nbsp;* Gets the most recent step.</div><div class='line' id='LC25187'>&nbsp;*</div><div class='line' id='LC25188'>&nbsp;* @return {Object} the step</div><div class='line' id='LC25189'>&nbsp;*/</div><div class='line' id='LC25190'>angular.scenario.ObjectModel.Spec.prototype.getLastStep = function() {</div><div class='line' id='LC25191'>&nbsp;&nbsp;return this.steps[this.steps.length-1];</div><div class='line' id='LC25192'>};</div><div class='line' id='LC25193'><br/></div><div class='line' id='LC25194'>/**</div><div class='line' id='LC25195'>&nbsp;* Set status of the Spec from given Step</div><div class='line' id='LC25196'>&nbsp;*</div><div class='line' id='LC25197'>&nbsp;* @param {angular.scenario.ObjectModel.Step} step</div><div class='line' id='LC25198'>&nbsp;*/</div><div class='line' id='LC25199'>angular.scenario.ObjectModel.Spec.prototype.setStatusFromStep = function(step) {</div><div class='line' id='LC25200'>&nbsp;&nbsp;if (!this.status || step.status == &#39;error&#39;) {</div><div class='line' id='LC25201'>&nbsp;&nbsp;&nbsp;&nbsp;this.status = step.status;</div><div class='line' id='LC25202'>&nbsp;&nbsp;&nbsp;&nbsp;this.error = step.error;</div><div class='line' id='LC25203'>&nbsp;&nbsp;&nbsp;&nbsp;this.line = step.line;</div><div class='line' id='LC25204'>&nbsp;&nbsp;}</div><div class='line' id='LC25205'>};</div><div class='line' id='LC25206'><br/></div><div class='line' id='LC25207'>/**</div><div class='line' id='LC25208'>&nbsp;* A single step inside a Spec.</div><div class='line' id='LC25209'>&nbsp;*</div><div class='line' id='LC25210'>&nbsp;* @param {string} step Name of the step</div><div class='line' id='LC25211'>&nbsp;*/</div><div class='line' id='LC25212'>angular.scenario.ObjectModel.Step = function(name) {</div><div class='line' id='LC25213'>&nbsp;&nbsp;this.name = name;</div><div class='line' id='LC25214'>&nbsp;&nbsp;this.startTime = new Date().getTime();</div><div class='line' id='LC25215'>};</div><div class='line' id='LC25216'><br/></div><div class='line' id='LC25217'>/**</div><div class='line' id='LC25218'>&nbsp;* Helper method for setting all error status related properties</div><div class='line' id='LC25219'>&nbsp;*</div><div class='line' id='LC25220'>&nbsp;* @param {string} status</div><div class='line' id='LC25221'>&nbsp;* @param {string} error</div><div class='line' id='LC25222'>&nbsp;* @param {string} line</div><div class='line' id='LC25223'>&nbsp;*/</div><div class='line' id='LC25224'>angular.scenario.ObjectModel.Step.prototype.setErrorStatus = function(status, error, line) {</div><div class='line' id='LC25225'>&nbsp;&nbsp;this.status = status;</div><div class='line' id='LC25226'>&nbsp;&nbsp;this.error = error;</div><div class='line' id='LC25227'>&nbsp;&nbsp;this.line = line;</div><div class='line' id='LC25228'>};</div><div class='line' id='LC25229'><br/></div><div class='line' id='LC25230'>/**</div><div class='line' id='LC25231'>&nbsp;* Runner for scenarios</div><div class='line' id='LC25232'>&nbsp;*</div><div class='line' id='LC25233'>&nbsp;* Has to be initialized before any test is loaded,</div><div class='line' id='LC25234'>&nbsp;* because it publishes the API into window (global space).</div><div class='line' id='LC25235'>&nbsp;*/</div><div class='line' id='LC25236'>angular.scenario.Runner = function($window) {</div><div class='line' id='LC25237'>&nbsp;&nbsp;this.listeners = [];</div><div class='line' id='LC25238'>&nbsp;&nbsp;this.$window = $window;</div><div class='line' id='LC25239'>&nbsp;&nbsp;this.rootDescribe = new angular.scenario.Describe();</div><div class='line' id='LC25240'>&nbsp;&nbsp;this.currentDescribe = this.rootDescribe;</div><div class='line' id='LC25241'>&nbsp;&nbsp;this.api = {</div><div class='line' id='LC25242'>&nbsp;&nbsp;&nbsp;&nbsp;it: this.it,</div><div class='line' id='LC25243'>&nbsp;&nbsp;&nbsp;&nbsp;iit: this.iit,</div><div class='line' id='LC25244'>&nbsp;&nbsp;&nbsp;&nbsp;xit: angular.noop,</div><div class='line' id='LC25245'>&nbsp;&nbsp;&nbsp;&nbsp;describe: this.describe,</div><div class='line' id='LC25246'>&nbsp;&nbsp;&nbsp;&nbsp;ddescribe: this.ddescribe,</div><div class='line' id='LC25247'>&nbsp;&nbsp;&nbsp;&nbsp;xdescribe: angular.noop,</div><div class='line' id='LC25248'>&nbsp;&nbsp;&nbsp;&nbsp;beforeEach: this.beforeEach,</div><div class='line' id='LC25249'>&nbsp;&nbsp;&nbsp;&nbsp;afterEach: this.afterEach</div><div class='line' id='LC25250'>&nbsp;&nbsp;};</div><div class='line' id='LC25251'>&nbsp;&nbsp;angular.forEach(this.api, angular.bind(this, function(fn, key) {</div><div class='line' id='LC25252'>&nbsp;&nbsp;&nbsp;&nbsp;this.$window[key] = angular.bind(this, fn);</div><div class='line' id='LC25253'>&nbsp;&nbsp;}));</div><div class='line' id='LC25254'>};</div><div class='line' id='LC25255'><br/></div><div class='line' id='LC25256'>/**</div><div class='line' id='LC25257'>&nbsp;* Emits an event which notifies listeners and passes extra</div><div class='line' id='LC25258'>&nbsp;* arguments.</div><div class='line' id='LC25259'>&nbsp;*</div><div class='line' id='LC25260'>&nbsp;* @param {string} eventName Name of the event to fire.</div><div class='line' id='LC25261'>&nbsp;*/</div><div class='line' id='LC25262'>angular.scenario.Runner.prototype.emit = function(eventName) {</div><div class='line' id='LC25263'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25264'>&nbsp;&nbsp;var args = Array.prototype.slice.call(arguments, 1);</div><div class='line' id='LC25265'>&nbsp;&nbsp;eventName = eventName.toLowerCase();</div><div class='line' id='LC25266'>&nbsp;&nbsp;if (!this.listeners[eventName])</div><div class='line' id='LC25267'>&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC25268'>&nbsp;&nbsp;angular.forEach(this.listeners[eventName], function(listener) {</div><div class='line' id='LC25269'>&nbsp;&nbsp;&nbsp;&nbsp;listener.apply(self, args);</div><div class='line' id='LC25270'>&nbsp;&nbsp;});</div><div class='line' id='LC25271'>};</div><div class='line' id='LC25272'><br/></div><div class='line' id='LC25273'>/**</div><div class='line' id='LC25274'>&nbsp;* Adds a listener for an event.</div><div class='line' id='LC25275'>&nbsp;*</div><div class='line' id='LC25276'>&nbsp;* @param {string} eventName The name of the event to add a handler for</div><div class='line' id='LC25277'>&nbsp;* @param {string} listener The fn(...) that takes the extra arguments from emit()</div><div class='line' id='LC25278'>&nbsp;*/</div><div class='line' id='LC25279'>angular.scenario.Runner.prototype.on = function(eventName, listener) {</div><div class='line' id='LC25280'>&nbsp;&nbsp;eventName = eventName.toLowerCase();</div><div class='line' id='LC25281'>&nbsp;&nbsp;this.listeners[eventName] = this.listeners[eventName] || [];</div><div class='line' id='LC25282'>&nbsp;&nbsp;this.listeners[eventName].push(listener);</div><div class='line' id='LC25283'>};</div><div class='line' id='LC25284'><br/></div><div class='line' id='LC25285'>/**</div><div class='line' id='LC25286'>&nbsp;* Defines a describe block of a spec.</div><div class='line' id='LC25287'>&nbsp;*</div><div class='line' id='LC25288'>&nbsp;* @see Describe.js</div><div class='line' id='LC25289'>&nbsp;*</div><div class='line' id='LC25290'>&nbsp;* @param {string} name Name of the block</div><div class='line' id='LC25291'>&nbsp;* @param {function()} body Body of the block</div><div class='line' id='LC25292'>&nbsp;*/</div><div class='line' id='LC25293'>angular.scenario.Runner.prototype.describe = function(name, body) {</div><div class='line' id='LC25294'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25295'>&nbsp;&nbsp;this.currentDescribe.describe(name, function() {</div><div class='line' id='LC25296'>&nbsp;&nbsp;&nbsp;&nbsp;var parentDescribe = self.currentDescribe;</div><div class='line' id='LC25297'>&nbsp;&nbsp;&nbsp;&nbsp;self.currentDescribe = this;</div><div class='line' id='LC25298'>&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body.call(this);</div><div class='line' id='LC25300'>&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC25301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.currentDescribe = parentDescribe;</div><div class='line' id='LC25302'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25303'>&nbsp;&nbsp;});</div><div class='line' id='LC25304'>};</div><div class='line' id='LC25305'><br/></div><div class='line' id='LC25306'>/**</div><div class='line' id='LC25307'>&nbsp;* Same as describe, but makes ddescribe the only blocks to run.</div><div class='line' id='LC25308'>&nbsp;*</div><div class='line' id='LC25309'>&nbsp;* @see Describe.js</div><div class='line' id='LC25310'>&nbsp;*</div><div class='line' id='LC25311'>&nbsp;* @param {string} name Name of the block</div><div class='line' id='LC25312'>&nbsp;* @param {function()} body Body of the block</div><div class='line' id='LC25313'>&nbsp;*/</div><div class='line' id='LC25314'>angular.scenario.Runner.prototype.ddescribe = function(name, body) {</div><div class='line' id='LC25315'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25316'>&nbsp;&nbsp;this.currentDescribe.ddescribe(name, function() {</div><div class='line' id='LC25317'>&nbsp;&nbsp;&nbsp;&nbsp;var parentDescribe = self.currentDescribe;</div><div class='line' id='LC25318'>&nbsp;&nbsp;&nbsp;&nbsp;self.currentDescribe = this;</div><div class='line' id='LC25319'>&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body.call(this);</div><div class='line' id='LC25321'>&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC25322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.currentDescribe = parentDescribe;</div><div class='line' id='LC25323'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25324'>&nbsp;&nbsp;});</div><div class='line' id='LC25325'>};</div><div class='line' id='LC25326'><br/></div><div class='line' id='LC25327'>/**</div><div class='line' id='LC25328'>&nbsp;* Defines a test in a describe block of a spec.</div><div class='line' id='LC25329'>&nbsp;*</div><div class='line' id='LC25330'>&nbsp;* @see Describe.js</div><div class='line' id='LC25331'>&nbsp;*</div><div class='line' id='LC25332'>&nbsp;* @param {string} name Name of the block</div><div class='line' id='LC25333'>&nbsp;* @param {function()} body Body of the block</div><div class='line' id='LC25334'>&nbsp;*/</div><div class='line' id='LC25335'>angular.scenario.Runner.prototype.it = function(name, body) {</div><div class='line' id='LC25336'>&nbsp;&nbsp;this.currentDescribe.it(name, body);</div><div class='line' id='LC25337'>};</div><div class='line' id='LC25338'><br/></div><div class='line' id='LC25339'>/**</div><div class='line' id='LC25340'>&nbsp;* Same as it, but makes iit tests the only tests to run.</div><div class='line' id='LC25341'>&nbsp;*</div><div class='line' id='LC25342'>&nbsp;* @see Describe.js</div><div class='line' id='LC25343'>&nbsp;*</div><div class='line' id='LC25344'>&nbsp;* @param {string} name Name of the block</div><div class='line' id='LC25345'>&nbsp;* @param {function()} body Body of the block</div><div class='line' id='LC25346'>&nbsp;*/</div><div class='line' id='LC25347'>angular.scenario.Runner.prototype.iit = function(name, body) {</div><div class='line' id='LC25348'>&nbsp;&nbsp;this.currentDescribe.iit(name, body);</div><div class='line' id='LC25349'>};</div><div class='line' id='LC25350'><br/></div><div class='line' id='LC25351'>/**</div><div class='line' id='LC25352'>&nbsp;* Defines a function to be called before each it block in the describe</div><div class='line' id='LC25353'>&nbsp;* (and before all nested describes).</div><div class='line' id='LC25354'>&nbsp;*</div><div class='line' id='LC25355'>&nbsp;* @see Describe.js</div><div class='line' id='LC25356'>&nbsp;*</div><div class='line' id='LC25357'>&nbsp;* @param {function()} Callback to execute</div><div class='line' id='LC25358'>&nbsp;*/</div><div class='line' id='LC25359'>angular.scenario.Runner.prototype.beforeEach = function(body) {</div><div class='line' id='LC25360'>&nbsp;&nbsp;this.currentDescribe.beforeEach(body);</div><div class='line' id='LC25361'>};</div><div class='line' id='LC25362'><br/></div><div class='line' id='LC25363'>/**</div><div class='line' id='LC25364'>&nbsp;* Defines a function to be called after each it block in the describe</div><div class='line' id='LC25365'>&nbsp;* (and before all nested describes).</div><div class='line' id='LC25366'>&nbsp;*</div><div class='line' id='LC25367'>&nbsp;* @see Describe.js</div><div class='line' id='LC25368'>&nbsp;*</div><div class='line' id='LC25369'>&nbsp;* @param {function()} Callback to execute</div><div class='line' id='LC25370'>&nbsp;*/</div><div class='line' id='LC25371'>angular.scenario.Runner.prototype.afterEach = function(body) {</div><div class='line' id='LC25372'>&nbsp;&nbsp;this.currentDescribe.afterEach(body);</div><div class='line' id='LC25373'>};</div><div class='line' id='LC25374'><br/></div><div class='line' id='LC25375'>/**</div><div class='line' id='LC25376'>&nbsp;* Creates a new spec runner.</div><div class='line' id='LC25377'>&nbsp;*</div><div class='line' id='LC25378'>&nbsp;* @private</div><div class='line' id='LC25379'>&nbsp;* @param {Object} scope parent scope</div><div class='line' id='LC25380'>&nbsp;*/</div><div class='line' id='LC25381'>angular.scenario.Runner.prototype.createSpecRunner_ = function(scope) {</div><div class='line' id='LC25382'>&nbsp;&nbsp;var child = scope.$new();</div><div class='line' id='LC25383'>&nbsp;&nbsp;var Cls = angular.scenario.SpecRunner;</div><div class='line' id='LC25384'><br/></div><div class='line' id='LC25385'>&nbsp;&nbsp;// Export all the methods to child scope manually as now we don&#39;t mess controllers with scopes</div><div class='line' id='LC25386'>&nbsp;&nbsp;// TODO(vojta): refactor scenario runner so that these objects are not tightly coupled as current</div><div class='line' id='LC25387'>&nbsp;&nbsp;for (var name in Cls.prototype)</div><div class='line' id='LC25388'>&nbsp;&nbsp;&nbsp;&nbsp;child[name] = angular.bind(child, Cls.prototype[name]);</div><div class='line' id='LC25389'><br/></div><div class='line' id='LC25390'>&nbsp;&nbsp;Cls.call(child);</div><div class='line' id='LC25391'>&nbsp;&nbsp;return child;</div><div class='line' id='LC25392'>};</div><div class='line' id='LC25393'><br/></div><div class='line' id='LC25394'>/**</div><div class='line' id='LC25395'>&nbsp;* Runs all the loaded tests with the specified runner class on the</div><div class='line' id='LC25396'>&nbsp;* provided application.</div><div class='line' id='LC25397'>&nbsp;*</div><div class='line' id='LC25398'>&nbsp;* @param {angular.scenario.Application} application App to remote control.</div><div class='line' id='LC25399'>&nbsp;*/</div><div class='line' id='LC25400'>angular.scenario.Runner.prototype.run = function(application) {</div><div class='line' id='LC25401'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25402'>&nbsp;&nbsp;var $root = angular.injector([&#39;ng&#39;]).get(&#39;$rootScope&#39;);</div><div class='line' id='LC25403'>&nbsp;&nbsp;angular.extend($root, this);</div><div class='line' id='LC25404'>&nbsp;&nbsp;angular.forEach(angular.scenario.Runner.prototype, function(fn, name) {</div><div class='line' id='LC25405'>&nbsp;&nbsp;&nbsp;&nbsp;$root[name] = angular.bind(self, fn);</div><div class='line' id='LC25406'>&nbsp;&nbsp;});</div><div class='line' id='LC25407'>&nbsp;&nbsp;$root.application = application;</div><div class='line' id='LC25408'>&nbsp;&nbsp;$root.emit(&#39;RunnerBegin&#39;);</div><div class='line' id='LC25409'>&nbsp;&nbsp;asyncForEach(this.rootDescribe.getSpecs(), function(spec, specDone) {</div><div class='line' id='LC25410'>&nbsp;&nbsp;&nbsp;&nbsp;var dslCache = {};</div><div class='line' id='LC25411'>&nbsp;&nbsp;&nbsp;&nbsp;var runner = self.createSpecRunner_($root);</div><div class='line' id='LC25412'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(angular.scenario.dsl, function(fn, key) {</div><div class='line' id='LC25413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dslCache[key] = fn.call($root);</div><div class='line' id='LC25414'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25415'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(angular.scenario.dsl, function(fn, key) {</div><div class='line' id='LC25416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$window[key] = function() {</div><div class='line' id='LC25417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var line = callerFile(3);</div><div class='line' id='LC25418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scope = runner.$new();</div><div class='line' id='LC25419'><br/></div><div class='line' id='LC25420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make the dsl accessible on the current chain</div><div class='line' id='LC25421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.dsl = {};</div><div class='line' id='LC25422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(dslCache, function(fn, key) {</div><div class='line' id='LC25423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.dsl[key] = function() {</div><div class='line' id='LC25424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return dslCache[key].apply(scope, arguments);</div><div class='line' id='LC25425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25427'><br/></div><div class='line' id='LC25428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make these methods work on the current chain</div><div class='line' id='LC25429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.addFuture = function() {</div><div class='line' id='LC25430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.push.call(arguments, line);</div><div class='line' id='LC25431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return angular.scenario.SpecRunner.</div><div class='line' id='LC25432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prototype.addFuture.apply(scope, arguments);</div><div class='line' id='LC25433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope.addFutureAction = function() {</div><div class='line' id='LC25435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.push.call(arguments, line);</div><div class='line' id='LC25436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return angular.scenario.SpecRunner.</div><div class='line' id='LC25437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prototype.addFutureAction.apply(scope, arguments);</div><div class='line' id='LC25438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25439'><br/></div><div class='line' id='LC25440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return scope.dsl[key].apply(scope, arguments);</div><div class='line' id='LC25441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25442'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25443'>&nbsp;&nbsp;&nbsp;&nbsp;runner.run(spec, function() {</div><div class='line' id='LC25444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runner.$destroy();</div><div class='line' id='LC25445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specDone.apply(this, arguments);</div><div class='line' id='LC25446'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25447'>&nbsp;&nbsp;},</div><div class='line' id='LC25448'>&nbsp;&nbsp;function(error) {</div><div class='line' id='LC25449'>&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC25450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;RunnerError&#39;, error);</div><div class='line' id='LC25451'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25452'>&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;RunnerEnd&#39;);</div><div class='line' id='LC25453'>&nbsp;&nbsp;});</div><div class='line' id='LC25454'>};</div><div class='line' id='LC25455'><br/></div><div class='line' id='LC25456'>/**</div><div class='line' id='LC25457'>&nbsp;* This class is the &quot;this&quot; of the it/beforeEach/afterEach method.</div><div class='line' id='LC25458'>&nbsp;* Responsibilities:</div><div class='line' id='LC25459'>&nbsp;*   - &quot;this&quot; for it/beforeEach/afterEach</div><div class='line' id='LC25460'>&nbsp;*   - keep state for single it/beforeEach/afterEach execution</div><div class='line' id='LC25461'>&nbsp;*   - keep track of all of the futures to execute</div><div class='line' id='LC25462'>&nbsp;*   - run single spec (execute each future)</div><div class='line' id='LC25463'>&nbsp;*/</div><div class='line' id='LC25464'>angular.scenario.SpecRunner = function() {</div><div class='line' id='LC25465'>&nbsp;&nbsp;this.futures = [];</div><div class='line' id='LC25466'>&nbsp;&nbsp;this.afterIndex = 0;</div><div class='line' id='LC25467'>};</div><div class='line' id='LC25468'><br/></div><div class='line' id='LC25469'>/**</div><div class='line' id='LC25470'>&nbsp;* Executes a spec which is an it block with associated before/after functions</div><div class='line' id='LC25471'>&nbsp;* based on the describe nesting.</div><div class='line' id='LC25472'>&nbsp;*</div><div class='line' id='LC25473'>&nbsp;* @param {Object} spec A spec object</div><div class='line' id='LC25474'>&nbsp;* @param {function()} specDone function that is called when the spec finshes. Function(error, index)</div><div class='line' id='LC25475'>&nbsp;*/</div><div class='line' id='LC25476'>angular.scenario.SpecRunner.prototype.run = function(spec, specDone) {</div><div class='line' id='LC25477'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25478'>&nbsp;&nbsp;this.spec = spec;</div><div class='line' id='LC25479'><br/></div><div class='line' id='LC25480'>&nbsp;&nbsp;this.emit(&#39;SpecBegin&#39;, spec);</div><div class='line' id='LC25481'><br/></div><div class='line' id='LC25482'>&nbsp;&nbsp;try {</div><div class='line' id='LC25483'>&nbsp;&nbsp;&nbsp;&nbsp;spec.before.call(this);</div><div class='line' id='LC25484'>&nbsp;&nbsp;&nbsp;&nbsp;spec.body.call(this);</div><div class='line' id='LC25485'>&nbsp;&nbsp;&nbsp;&nbsp;this.afterIndex = this.futures.length;</div><div class='line' id='LC25486'>&nbsp;&nbsp;&nbsp;&nbsp;spec.after.call(this);</div><div class='line' id='LC25487'>&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC25488'>&nbsp;&nbsp;&nbsp;&nbsp;this.emit(&#39;SpecError&#39;, spec, e);</div><div class='line' id='LC25489'>&nbsp;&nbsp;&nbsp;&nbsp;this.emit(&#39;SpecEnd&#39;, spec);</div><div class='line' id='LC25490'>&nbsp;&nbsp;&nbsp;&nbsp;specDone();</div><div class='line' id='LC25491'>&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC25492'>&nbsp;&nbsp;}</div><div class='line' id='LC25493'><br/></div><div class='line' id='LC25494'>&nbsp;&nbsp;var handleError = function(error, done) {</div><div class='line' id='LC25495'>&nbsp;&nbsp;&nbsp;&nbsp;if (self.error) {</div><div class='line' id='LC25496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return done();</div><div class='line' id='LC25497'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25498'>&nbsp;&nbsp;&nbsp;&nbsp;self.error = true;</div><div class='line' id='LC25499'>&nbsp;&nbsp;&nbsp;&nbsp;done(null, self.afterIndex);</div><div class='line' id='LC25500'>&nbsp;&nbsp;};</div><div class='line' id='LC25501'><br/></div><div class='line' id='LC25502'>&nbsp;&nbsp;asyncForEach(</div><div class='line' id='LC25503'>&nbsp;&nbsp;&nbsp;&nbsp;this.futures,</div><div class='line' id='LC25504'>&nbsp;&nbsp;&nbsp;&nbsp;function(future, futureDone) {</div><div class='line' id='LC25505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.step = future;</div><div class='line' id='LC25506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepBegin&#39;, spec, future);</div><div class='line' id='LC25507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;future.execute(function(error) {</div><div class='line' id='LC25509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC25510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepFailure&#39;, spec, future, error);</div><div class='line' id='LC25511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepEnd&#39;, spec, future);</div><div class='line' id='LC25512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handleError(error, futureDone);</div><div class='line' id='LC25513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepEnd&#39;, spec, future);</div><div class='line' id='LC25515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$window.setTimeout(function() { futureDone(); }, 0);</div><div class='line' id='LC25516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC25518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepError&#39;, spec, future, e);</div><div class='line' id='LC25519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;StepEnd&#39;, spec, future);</div><div class='line' id='LC25520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handleError(e, futureDone);</div><div class='line' id='LC25521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25522'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC25523'>&nbsp;&nbsp;&nbsp;&nbsp;function(e) {</div><div class='line' id='LC25524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e) {</div><div class='line' id='LC25525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;SpecError&#39;, spec, e);</div><div class='line' id='LC25526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.emit(&#39;SpecEnd&#39;, spec);</div><div class='line' id='LC25528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Call done in a timeout so exceptions don&#39;t recursively</div><div class='line' id='LC25529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// call this function</div><div class='line' id='LC25530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$window.setTimeout(function() { specDone(); }, 0);</div><div class='line' id='LC25531'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25532'>&nbsp;&nbsp;);</div><div class='line' id='LC25533'>};</div><div class='line' id='LC25534'><br/></div><div class='line' id='LC25535'>/**</div><div class='line' id='LC25536'>&nbsp;* Adds a new future action.</div><div class='line' id='LC25537'>&nbsp;*</div><div class='line' id='LC25538'>&nbsp;* Note: Do not pass line manually. It happens automatically.</div><div class='line' id='LC25539'>&nbsp;*</div><div class='line' id='LC25540'>&nbsp;* @param {string} name Name of the future</div><div class='line' id='LC25541'>&nbsp;* @param {function()} behavior Behavior of the future</div><div class='line' id='LC25542'>&nbsp;* @param {function()} line fn() that returns file/line number</div><div class='line' id='LC25543'>&nbsp;*/</div><div class='line' id='LC25544'>angular.scenario.SpecRunner.prototype.addFuture = function(name, behavior, line) {</div><div class='line' id='LC25545'>&nbsp;&nbsp;var future = new angular.scenario.Future(name, angular.bind(this, behavior), line);</div><div class='line' id='LC25546'>&nbsp;&nbsp;this.futures.push(future);</div><div class='line' id='LC25547'>&nbsp;&nbsp;return future;</div><div class='line' id='LC25548'>};</div><div class='line' id='LC25549'><br/></div><div class='line' id='LC25550'>/**</div><div class='line' id='LC25551'>&nbsp;* Adds a new future action to be executed on the application window.</div><div class='line' id='LC25552'>&nbsp;*</div><div class='line' id='LC25553'>&nbsp;* Note: Do not pass line manually. It happens automatically.</div><div class='line' id='LC25554'>&nbsp;*</div><div class='line' id='LC25555'>&nbsp;* @param {string} name Name of the future</div><div class='line' id='LC25556'>&nbsp;* @param {function()} behavior Behavior of the future</div><div class='line' id='LC25557'>&nbsp;* @param {function()} line fn() that returns file/line number</div><div class='line' id='LC25558'>&nbsp;*/</div><div class='line' id='LC25559'>angular.scenario.SpecRunner.prototype.addFutureAction = function(name, behavior, line) {</div><div class='line' id='LC25560'>&nbsp;&nbsp;var self = this;</div><div class='line' id='LC25561'>&nbsp;&nbsp;var NG = /\[ng\\\:/;</div><div class='line' id='LC25562'>&nbsp;&nbsp;return this.addFuture(name, function(done) {</div><div class='line' id='LC25563'>&nbsp;&nbsp;&nbsp;&nbsp;this.application.executeAction(function($window, $document) {</div><div class='line' id='LC25564'><br/></div><div class='line' id='LC25565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TODO(esprehn): Refactor this so it doesn&#39;t need to be in here.</div><div class='line' id='LC25566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$document.elements = function(selector) {</div><div class='line' id='LC25567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = Array.prototype.slice.call(arguments, 1);</div><div class='line' id='LC25568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selector = (self.selector || &#39;&#39;) + &#39; &#39; + (selector || &#39;&#39;);</div><div class='line' id='LC25569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selector = _jQuery.trim(selector) || &#39;*&#39;;</div><div class='line' id='LC25570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(args, function(value, index) {</div><div class='line' id='LC25571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selector = selector.replace(&#39;$&#39; + (index + 1), value);</div><div class='line' id='LC25572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = $document.find(selector);</div><div class='line' id='LC25574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (selector.match(NG)) {</div><div class='line' id='LC25575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach([&#39;[ng-&#39;,&#39;[data-ng-&#39;,&#39;[x-ng-&#39;], function(value, index){</div><div class='line' id='LC25576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = result.add(selector.replace(NG, value), $document);</div><div class='line' id='LC25577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result.length) {</div><div class='line' id='LC25580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw {</div><div class='line' id='LC25581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: &#39;selector&#39;,</div><div class='line' id='LC25582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message: &#39;Selector &#39; + selector + &#39; did not match any elements.&#39;</div><div class='line' id='LC25583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25585'><br/></div><div class='line' id='LC25586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC25587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25588'><br/></div><div class='line' id='LC25589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;behavior.call(self, $window, $document, done);</div><div class='line' id='LC25591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e) {</div><div class='line' id='LC25592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.type &amp;&amp; e.type === &#39;selector&#39;) {</div><div class='line' id='LC25593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(e.message);</div><div class='line' id='LC25594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC25595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;</div><div class='line' id='LC25596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25598'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25599'>&nbsp;&nbsp;}, line);</div><div class='line' id='LC25600'>};</div><div class='line' id='LC25601'><br/></div><div class='line' id='LC25602'>/**</div><div class='line' id='LC25603'>&nbsp;* Shared DSL statements that are useful to all scenarios.</div><div class='line' id='LC25604'>&nbsp;*/</div><div class='line' id='LC25605'><br/></div><div class='line' id='LC25606'>&nbsp;/**</div><div class='line' id='LC25607'>&nbsp;* Usage:</div><div class='line' id='LC25608'>&nbsp;*    pause() pauses until you call resume() in the console</div><div class='line' id='LC25609'>&nbsp;*/</div><div class='line' id='LC25610'>angular.scenario.dsl(&#39;pause&#39;, function() {</div><div class='line' id='LC25611'>&nbsp;&nbsp;return function() {</div><div class='line' id='LC25612'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFuture(&#39;pausing for you to resume&#39;, function(done) {</div><div class='line' id='LC25613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.emit(&#39;InteractivePause&#39;, this.spec, this.step);</div><div class='line' id='LC25614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$window.resume = function() { done(); };</div><div class='line' id='LC25615'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25616'>&nbsp;&nbsp;};</div><div class='line' id='LC25617'>});</div><div class='line' id='LC25618'><br/></div><div class='line' id='LC25619'>/**</div><div class='line' id='LC25620'>&nbsp;* Usage:</div><div class='line' id='LC25621'>&nbsp;*    sleep(seconds) pauses the test for specified number of seconds</div><div class='line' id='LC25622'>&nbsp;*/</div><div class='line' id='LC25623'>angular.scenario.dsl(&#39;sleep&#39;, function() {</div><div class='line' id='LC25624'>&nbsp;&nbsp;return function(time) {</div><div class='line' id='LC25625'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFuture(&#39;sleep for &#39; + time + &#39; seconds&#39;, function(done) {</div><div class='line' id='LC25626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$window.setTimeout(function() { done(null, time * 1000); }, time * 1000);</div><div class='line' id='LC25627'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25628'>&nbsp;&nbsp;};</div><div class='line' id='LC25629'>});</div><div class='line' id='LC25630'><br/></div><div class='line' id='LC25631'>/**</div><div class='line' id='LC25632'>&nbsp;* Usage:</div><div class='line' id='LC25633'>&nbsp;*    browser().navigateTo(url) Loads the url into the frame</div><div class='line' id='LC25634'>&nbsp;*    browser().navigateTo(url, fn) where fn(url) is called and returns the URL to navigate to</div><div class='line' id='LC25635'>&nbsp;*    browser().reload() refresh the page (reload the same URL)</div><div class='line' id='LC25636'>&nbsp;*    browser().window.href() window.location.href</div><div class='line' id='LC25637'>&nbsp;*    browser().window.path() window.location.pathname</div><div class='line' id='LC25638'>&nbsp;*    browser().window.search() window.location.search</div><div class='line' id='LC25639'>&nbsp;*    browser().window.hash() window.location.hash without # prefix</div><div class='line' id='LC25640'>&nbsp;*    browser().location().url() see ng.$location#url</div><div class='line' id='LC25641'>&nbsp;*    browser().location().path() see ng.$location#path</div><div class='line' id='LC25642'>&nbsp;*    browser().location().search() see ng.$location#search</div><div class='line' id='LC25643'>&nbsp;*    browser().location().hash() see ng.$location#hash</div><div class='line' id='LC25644'>&nbsp;*/</div><div class='line' id='LC25645'>angular.scenario.dsl(&#39;browser&#39;, function() {</div><div class='line' id='LC25646'>&nbsp;&nbsp;var chain = {};</div><div class='line' id='LC25647'><br/></div><div class='line' id='LC25648'>&nbsp;&nbsp;chain.navigateTo = function(url, delegate) {</div><div class='line' id='LC25649'>&nbsp;&nbsp;&nbsp;&nbsp;var application = this.application;</div><div class='line' id='LC25650'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFuture(&quot;browser navigate to &#39;&quot; + url + &quot;&#39;&quot;, function(done) {</div><div class='line' id='LC25651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (delegate) {</div><div class='line' id='LC25652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = delegate.call(this, url);</div><div class='line' id='LC25653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.navigateTo(url, function() {</div><div class='line' id='LC25655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, url);</div><div class='line' id='LC25656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, done);</div><div class='line' id='LC25657'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25658'>&nbsp;&nbsp;};</div><div class='line' id='LC25659'><br/></div><div class='line' id='LC25660'>&nbsp;&nbsp;chain.reload = function() {</div><div class='line' id='LC25661'>&nbsp;&nbsp;&nbsp;&nbsp;var application = this.application;</div><div class='line' id='LC25662'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;browser reload&#39;, function($window, $document, done) {</div><div class='line' id='LC25663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var href = $window.location.href;</div><div class='line' id='LC25664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.navigateTo(href, function() {</div><div class='line' id='LC25665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, href);</div><div class='line' id='LC25666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, done);</div><div class='line' id='LC25667'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25668'>&nbsp;&nbsp;};</div><div class='line' id='LC25669'><br/></div><div class='line' id='LC25670'>&nbsp;&nbsp;chain.window = function() {</div><div class='line' id='LC25671'>&nbsp;&nbsp;&nbsp;&nbsp;var api = {};</div><div class='line' id='LC25672'><br/></div><div class='line' id='LC25673'>&nbsp;&nbsp;&nbsp;&nbsp;api.href = function() {</div><div class='line' id='LC25674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;window.location.href&#39;, function($window, $document, done) {</div><div class='line' id='LC25675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $window.location.href);</div><div class='line' id='LC25676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25677'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25678'><br/></div><div class='line' id='LC25679'>&nbsp;&nbsp;&nbsp;&nbsp;api.path = function() {</div><div class='line' id='LC25680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;window.location.path&#39;, function($window, $document, done) {</div><div class='line' id='LC25681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $window.location.pathname);</div><div class='line' id='LC25682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25683'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25684'><br/></div><div class='line' id='LC25685'>&nbsp;&nbsp;&nbsp;&nbsp;api.search = function() {</div><div class='line' id='LC25686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;window.location.search&#39;, function($window, $document, done) {</div><div class='line' id='LC25687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $window.location.search);</div><div class='line' id='LC25688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25689'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25690'><br/></div><div class='line' id='LC25691'>&nbsp;&nbsp;&nbsp;&nbsp;api.hash = function() {</div><div class='line' id='LC25692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;window.location.hash&#39;, function($window, $document, done) {</div><div class='line' id='LC25693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $window.location.hash.replace(&#39;#&#39;, &#39;&#39;));</div><div class='line' id='LC25694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25695'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25696'><br/></div><div class='line' id='LC25697'>&nbsp;&nbsp;&nbsp;&nbsp;return api;</div><div class='line' id='LC25698'>&nbsp;&nbsp;};</div><div class='line' id='LC25699'><br/></div><div class='line' id='LC25700'>&nbsp;&nbsp;chain.location = function() {</div><div class='line' id='LC25701'>&nbsp;&nbsp;&nbsp;&nbsp;var api = {};</div><div class='line' id='LC25702'><br/></div><div class='line' id='LC25703'>&nbsp;&nbsp;&nbsp;&nbsp;api.url = function() {</div><div class='line' id='LC25704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;$location.url()&#39;, function($window, $document, done) {</div><div class='line' id='LC25705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.injector().get(&#39;$location&#39;).url());</div><div class='line' id='LC25706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25707'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25708'><br/></div><div class='line' id='LC25709'>&nbsp;&nbsp;&nbsp;&nbsp;api.path = function() {</div><div class='line' id='LC25710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;$location.path()&#39;, function($window, $document, done) {</div><div class='line' id='LC25711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.injector().get(&#39;$location&#39;).path());</div><div class='line' id='LC25712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25713'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25714'><br/></div><div class='line' id='LC25715'>&nbsp;&nbsp;&nbsp;&nbsp;api.search = function() {</div><div class='line' id='LC25716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;$location.search()&#39;, function($window, $document, done) {</div><div class='line' id='LC25717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.injector().get(&#39;$location&#39;).search());</div><div class='line' id='LC25718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25719'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25720'><br/></div><div class='line' id='LC25721'>&nbsp;&nbsp;&nbsp;&nbsp;api.hash = function() {</div><div class='line' id='LC25722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;$location.hash()&#39;, function($window, $document, done) {</div><div class='line' id='LC25723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.injector().get(&#39;$location&#39;).hash());</div><div class='line' id='LC25724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25725'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25726'><br/></div><div class='line' id='LC25727'>&nbsp;&nbsp;&nbsp;&nbsp;return api;</div><div class='line' id='LC25728'>&nbsp;&nbsp;};</div><div class='line' id='LC25729'><br/></div><div class='line' id='LC25730'>&nbsp;&nbsp;return function() {</div><div class='line' id='LC25731'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25732'>&nbsp;&nbsp;};</div><div class='line' id='LC25733'>});</div><div class='line' id='LC25734'><br/></div><div class='line' id='LC25735'>/**</div><div class='line' id='LC25736'>&nbsp;* Usage:</div><div class='line' id='LC25737'>&nbsp;*    expect(future).{matcher} where matcher is one of the matchers defined</div><div class='line' id='LC25738'>&nbsp;*    with angular.scenario.matcher</div><div class='line' id='LC25739'>&nbsp;*</div><div class='line' id='LC25740'>&nbsp;* ex. expect(binding(&quot;name&quot;)).toEqual(&quot;Elliott&quot;)</div><div class='line' id='LC25741'>&nbsp;*/</div><div class='line' id='LC25742'>angular.scenario.dsl(&#39;expect&#39;, function() {</div><div class='line' id='LC25743'>&nbsp;&nbsp;var chain = angular.extend({}, angular.scenario.matcher);</div><div class='line' id='LC25744'><br/></div><div class='line' id='LC25745'>&nbsp;&nbsp;chain.not = function() {</div><div class='line' id='LC25746'>&nbsp;&nbsp;&nbsp;&nbsp;this.inverse = true;</div><div class='line' id='LC25747'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25748'>&nbsp;&nbsp;};</div><div class='line' id='LC25749'><br/></div><div class='line' id='LC25750'>&nbsp;&nbsp;return function(future) {</div><div class='line' id='LC25751'>&nbsp;&nbsp;&nbsp;&nbsp;this.future = future;</div><div class='line' id='LC25752'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25753'>&nbsp;&nbsp;};</div><div class='line' id='LC25754'>});</div><div class='line' id='LC25755'><br/></div><div class='line' id='LC25756'>/**</div><div class='line' id='LC25757'>&nbsp;* Usage:</div><div class='line' id='LC25758'>&nbsp;*    using(selector, label) scopes the next DSL element selection</div><div class='line' id='LC25759'>&nbsp;*</div><div class='line' id='LC25760'>&nbsp;* ex.</div><div class='line' id='LC25761'>&nbsp;*   using(&#39;#foo&#39;, &quot;&#39;Foo&#39; text field&quot;).input(&#39;bar&#39;)</div><div class='line' id='LC25762'>&nbsp;*/</div><div class='line' id='LC25763'>angular.scenario.dsl(&#39;using&#39;, function() {</div><div class='line' id='LC25764'>&nbsp;&nbsp;return function(selector, label) {</div><div class='line' id='LC25765'>&nbsp;&nbsp;&nbsp;&nbsp;this.selector = _jQuery.trim((this.selector||&#39;&#39;) + &#39; &#39; + selector);</div><div class='line' id='LC25766'>&nbsp;&nbsp;&nbsp;&nbsp;if (angular.isString(label) &amp;&amp; label.length) {</div><div class='line' id='LC25767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label = label + &#39; ( &#39; + this.selector + &#39; )&#39;;</div><div class='line' id='LC25768'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC25769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label = this.selector;</div><div class='line' id='LC25770'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25771'>&nbsp;&nbsp;&nbsp;&nbsp;return this.dsl;</div><div class='line' id='LC25772'>&nbsp;&nbsp;};</div><div class='line' id='LC25773'>});</div><div class='line' id='LC25774'><br/></div><div class='line' id='LC25775'>/**</div><div class='line' id='LC25776'>&nbsp;* Usage:</div><div class='line' id='LC25777'>&nbsp;*    binding(name) returns the value of the first matching binding</div><div class='line' id='LC25778'>&nbsp;*/</div><div class='line' id='LC25779'>angular.scenario.dsl(&#39;binding&#39;, function() {</div><div class='line' id='LC25780'>&nbsp;&nbsp;return function(name) {</div><div class='line' id='LC25781'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;select binding &#39;&quot; + name + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var values = $document.elements().bindings($window.angular.element, name);</div><div class='line' id='LC25783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!values.length) {</div><div class='line' id='LC25784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return done(&quot;Binding selector &#39;&quot; + name + &quot;&#39; did not match.&quot;);</div><div class='line' id='LC25785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, values[0]);</div><div class='line' id='LC25787'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25788'>&nbsp;&nbsp;};</div><div class='line' id='LC25789'>});</div><div class='line' id='LC25790'><br/></div><div class='line' id='LC25791'>/**</div><div class='line' id='LC25792'>&nbsp;* Usage:</div><div class='line' id='LC25793'>&nbsp;*    input(name).enter(value) enters value in input with specified name</div><div class='line' id='LC25794'>&nbsp;*    input(name).check() checks checkbox</div><div class='line' id='LC25795'>&nbsp;*    input(name).select(value) selects the radio button with specified name/value</div><div class='line' id='LC25796'>&nbsp;*    input(name).val() returns the value of the input.</div><div class='line' id='LC25797'>&nbsp;*/</div><div class='line' id='LC25798'>angular.scenario.dsl(&#39;input&#39;, function() {</div><div class='line' id='LC25799'>&nbsp;&nbsp;var chain = {};</div><div class='line' id='LC25800'>&nbsp;&nbsp;var supportInputEvent =  &#39;oninput&#39; in document.createElement(&#39;div&#39;) &amp;&amp; msie != 9;</div><div class='line' id='LC25801'><br/></div><div class='line' id='LC25802'>&nbsp;&nbsp;chain.enter = function(value, event) {</div><div class='line' id='LC25803'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;input &#39;&quot; + this.name + &quot;&#39; enter &#39;&quot; + value + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var input = $document.elements(&#39;[ng\\:model=&quot;$1&quot;]&#39;, this.name).filter(&#39;:input&#39;);</div><div class='line' id='LC25805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.val(value);</div><div class='line' id='LC25806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.trigger(event || (supportInputEvent ? &#39;input&#39; : &#39;change&#39;));</div><div class='line' id='LC25807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25808'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25809'>&nbsp;&nbsp;};</div><div class='line' id='LC25810'><br/></div><div class='line' id='LC25811'>&nbsp;&nbsp;chain.check = function() {</div><div class='line' id='LC25812'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;checkbox &#39;&quot; + this.name + &quot;&#39; toggle&quot;, function($window, $document, done) {</div><div class='line' id='LC25813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var input = $document.elements(&#39;[ng\\:model=&quot;$1&quot;]&#39;, this.name).filter(&#39;:checkbox&#39;);</div><div class='line' id='LC25814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.trigger(&#39;click&#39;);</div><div class='line' id='LC25815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25816'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25817'>&nbsp;&nbsp;};</div><div class='line' id='LC25818'><br/></div><div class='line' id='LC25819'>&nbsp;&nbsp;chain.select = function(value) {</div><div class='line' id='LC25820'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;radio button &#39;&quot; + this.name + &quot;&#39; toggle &#39;&quot; + value + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var input = $document.</div><div class='line' id='LC25822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elements(&#39;[ng\\:model=&quot;$1&quot;][value=&quot;$2&quot;]&#39;, this.name, value).filter(&#39;:radio&#39;);</div><div class='line' id='LC25823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.trigger(&#39;click&#39;);</div><div class='line' id='LC25824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25825'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25826'>&nbsp;&nbsp;};</div><div class='line' id='LC25827'><br/></div><div class='line' id='LC25828'>&nbsp;&nbsp;chain.val = function() {</div><div class='line' id='LC25829'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;return input val&quot;, function($window, $document, done) {</div><div class='line' id='LC25830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var input = $document.elements(&#39;[ng\\:model=&quot;$1&quot;]&#39;, this.name).filter(&#39;:input&#39;);</div><div class='line' id='LC25831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null,input.val());</div><div class='line' id='LC25832'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25833'>&nbsp;&nbsp;};</div><div class='line' id='LC25834'><br/></div><div class='line' id='LC25835'>&nbsp;&nbsp;return function(name) {</div><div class='line' id='LC25836'>&nbsp;&nbsp;&nbsp;&nbsp;this.name = name;</div><div class='line' id='LC25837'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25838'>&nbsp;&nbsp;};</div><div class='line' id='LC25839'>});</div><div class='line' id='LC25840'><br/></div><div class='line' id='LC25841'><br/></div><div class='line' id='LC25842'>/**</div><div class='line' id='LC25843'>&nbsp;* Usage:</div><div class='line' id='LC25844'>&nbsp;*    repeater(&#39;#products table&#39;, &#39;Product List&#39;).count() number of rows</div><div class='line' id='LC25845'>&nbsp;*    repeater(&#39;#products table&#39;, &#39;Product List&#39;).row(1) all bindings in row as an array</div><div class='line' id='LC25846'>&nbsp;*    repeater(&#39;#products table&#39;, &#39;Product List&#39;).column(&#39;product.name&#39;) all values across all rows in an array</div><div class='line' id='LC25847'>&nbsp;*/</div><div class='line' id='LC25848'>angular.scenario.dsl(&#39;repeater&#39;, function() {</div><div class='line' id='LC25849'>&nbsp;&nbsp;var chain = {};</div><div class='line' id='LC25850'><br/></div><div class='line' id='LC25851'>&nbsp;&nbsp;chain.count = function() {</div><div class='line' id='LC25852'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;repeater &#39;&quot; + this.label + &quot;&#39; count&quot;, function($window, $document, done) {</div><div class='line' id='LC25853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.elements().length);</div><div class='line' id='LC25855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC25856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, 0);</div><div class='line' id='LC25857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25858'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25859'>&nbsp;&nbsp;};</div><div class='line' id='LC25860'><br/></div><div class='line' id='LC25861'>&nbsp;&nbsp;chain.column = function(binding) {</div><div class='line' id='LC25862'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;repeater &#39;&quot; + this.label + &quot;&#39; column &#39;&quot; + binding + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.elements().bindings($window.angular.element, binding));</div><div class='line' id='LC25864'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25865'>&nbsp;&nbsp;};</div><div class='line' id='LC25866'><br/></div><div class='line' id='LC25867'>&nbsp;&nbsp;chain.row = function(index) {</div><div class='line' id='LC25868'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;repeater &#39;&quot; + this.label + &quot;&#39; row &#39;&quot; + index + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var matches = $document.elements().slice(index, index + 1);</div><div class='line' id='LC25870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!matches.length)</div><div class='line' id='LC25871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return done(&#39;row &#39; + index + &#39; out of bounds&#39;);</div><div class='line' id='LC25872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, matches.bindings($window.angular.element));</div><div class='line' id='LC25873'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25874'>&nbsp;&nbsp;};</div><div class='line' id='LC25875'><br/></div><div class='line' id='LC25876'>&nbsp;&nbsp;return function(selector, label) {</div><div class='line' id='LC25877'>&nbsp;&nbsp;&nbsp;&nbsp;this.dsl.using(selector, label);</div><div class='line' id='LC25878'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25879'>&nbsp;&nbsp;};</div><div class='line' id='LC25880'>});</div><div class='line' id='LC25881'><br/></div><div class='line' id='LC25882'>/**</div><div class='line' id='LC25883'>&nbsp;* Usage:</div><div class='line' id='LC25884'>&nbsp;*    select(name).option(&#39;value&#39;) select one option</div><div class='line' id='LC25885'>&nbsp;*    select(name).options(&#39;value1&#39;, &#39;value2&#39;, ...) select options from a multi select</div><div class='line' id='LC25886'>&nbsp;*/</div><div class='line' id='LC25887'>angular.scenario.dsl(&#39;select&#39;, function() {</div><div class='line' id='LC25888'>&nbsp;&nbsp;var chain = {};</div><div class='line' id='LC25889'><br/></div><div class='line' id='LC25890'>&nbsp;&nbsp;chain.option = function(value) {</div><div class='line' id='LC25891'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;select &#39;&quot; + this.name + &quot;&#39; option &#39;&quot; + value + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var select = $document.elements(&#39;select[ng\\:model=&quot;$1&quot;]&#39;, this.name);</div><div class='line' id='LC25893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var option = select.find(&#39;option[value=&quot;&#39; + value + &#39;&quot;]&#39;);</div><div class='line' id='LC25894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (option.length) {</div><div class='line' id='LC25895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.val(value);</div><div class='line' id='LC25896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC25897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;option = select.find(&#39;option:contains(&quot;&#39; + value + &#39;&quot;)&#39;);</div><div class='line' id='LC25898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (option.length) {</div><div class='line' id='LC25899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.val(option.val());</div><div class='line' id='LC25900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.trigger(&#39;change&#39;);</div><div class='line' id='LC25903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25904'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25905'>&nbsp;&nbsp;};</div><div class='line' id='LC25906'><br/></div><div class='line' id='LC25907'>&nbsp;&nbsp;chain.options = function() {</div><div class='line' id='LC25908'>&nbsp;&nbsp;&nbsp;&nbsp;var values = arguments;</div><div class='line' id='LC25909'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;select &#39;&quot; + this.name + &quot;&#39; options &#39;&quot; + values + &quot;&#39;&quot;, function($window, $document, done) {</div><div class='line' id='LC25910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var select = $document.elements(&#39;select[multiple][ng\\:model=&quot;$1&quot;]&#39;, this.name);</div><div class='line' id='LC25911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.val(values);</div><div class='line' id='LC25912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select.trigger(&#39;change&#39;);</div><div class='line' id='LC25913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25914'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25915'>&nbsp;&nbsp;};</div><div class='line' id='LC25916'><br/></div><div class='line' id='LC25917'>&nbsp;&nbsp;return function(name) {</div><div class='line' id='LC25918'>&nbsp;&nbsp;&nbsp;&nbsp;this.name = name;</div><div class='line' id='LC25919'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC25920'>&nbsp;&nbsp;};</div><div class='line' id='LC25921'>});</div><div class='line' id='LC25922'><br/></div><div class='line' id='LC25923'>/**</div><div class='line' id='LC25924'>&nbsp;* Usage:</div><div class='line' id='LC25925'>&nbsp;*    element(selector, label).count() get the number of elements that match selector</div><div class='line' id='LC25926'>&nbsp;*    element(selector, label).click() clicks an element</div><div class='line' id='LC25927'>&nbsp;*    element(selector, label).query(fn) executes fn(selectedElements, done)</div><div class='line' id='LC25928'>&nbsp;*    element(selector, label).{method}() gets the value (as defined by jQuery, ex. val)</div><div class='line' id='LC25929'>&nbsp;*    element(selector, label).{method}(value) sets the value (as defined by jQuery, ex. val)</div><div class='line' id='LC25930'>&nbsp;*    element(selector, label).{method}(key) gets the value (as defined by jQuery, ex. attr)</div><div class='line' id='LC25931'>&nbsp;*    element(selector, label).{method}(key, value) sets the value (as defined by jQuery, ex. attr)</div><div class='line' id='LC25932'>&nbsp;*/</div><div class='line' id='LC25933'>angular.scenario.dsl(&#39;element&#39;, function() {</div><div class='line' id='LC25934'>&nbsp;&nbsp;var KEY_VALUE_METHODS = [&#39;attr&#39;, &#39;css&#39;, &#39;prop&#39;];</div><div class='line' id='LC25935'>&nbsp;&nbsp;var VALUE_METHODS = [</div><div class='line' id='LC25936'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;val&#39;, &#39;text&#39;, &#39;html&#39;, &#39;height&#39;, &#39;innerHeight&#39;, &#39;outerHeight&#39;, &#39;width&#39;,</div><div class='line' id='LC25937'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;innerWidth&#39;, &#39;outerWidth&#39;, &#39;position&#39;, &#39;scrollLeft&#39;, &#39;scrollTop&#39;, &#39;offset&#39;</div><div class='line' id='LC25938'>&nbsp;&nbsp;];</div><div class='line' id='LC25939'>&nbsp;&nbsp;var chain = {};</div><div class='line' id='LC25940'><br/></div><div class='line' id='LC25941'>&nbsp;&nbsp;chain.count = function() {</div><div class='line' id='LC25942'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;element &#39;&quot; + this.label + &quot;&#39; count&quot;, function($window, $document, done) {</div><div class='line' id='LC25943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC25944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, $document.elements().length);</div><div class='line' id='LC25945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC25946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, 0);</div><div class='line' id='LC25947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25948'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25949'>&nbsp;&nbsp;};</div><div class='line' id='LC25950'><br/></div><div class='line' id='LC25951'>&nbsp;&nbsp;chain.click = function() {</div><div class='line' id='LC25952'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&quot;element &#39;&quot; + this.label + &quot;&#39; click&quot;, function($window, $document, done) {</div><div class='line' id='LC25953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var elements = $document.elements();</div><div class='line' id='LC25954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var href = elements.attr(&#39;href&#39;);</div><div class='line' id='LC25955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventProcessDefault = elements.trigger(&#39;click&#39;)[0];</div><div class='line' id='LC25956'><br/></div><div class='line' id='LC25957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (href &amp;&amp; elements[0].nodeName.toUpperCase() === &#39;A&#39; &amp;&amp; eventProcessDefault) {</div><div class='line' id='LC25958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.application.navigateTo(href, function() {</div><div class='line' id='LC25959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, done);</div><div class='line' id='LC25961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC25962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done();</div><div class='line' id='LC25963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC25964'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25965'>&nbsp;&nbsp;};</div><div class='line' id='LC25966'><br/></div><div class='line' id='LC25967'>&nbsp;&nbsp;chain.query = function(fn) {</div><div class='line' id='LC25968'>&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(&#39;element &#39; + this.label + &#39; custom query&#39;, function($window, $document, done) {</div><div class='line' id='LC25969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fn.call(this, $document.elements(), done);</div><div class='line' id='LC25970'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25971'>&nbsp;&nbsp;};</div><div class='line' id='LC25972'><br/></div><div class='line' id='LC25973'>&nbsp;&nbsp;angular.forEach(KEY_VALUE_METHODS, function(methodName) {</div><div class='line' id='LC25974'>&nbsp;&nbsp;&nbsp;&nbsp;chain[methodName] = function(name, value) {</div><div class='line' id='LC25975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = arguments,</div><div class='line' id='LC25976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;futureName = (args.length == 1)</div><div class='line' id='LC25977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &quot;element &#39;&quot; + this.label + &quot;&#39; get &quot; + methodName + &quot; &#39;&quot; + name + &quot;&#39;&quot;</div><div class='line' id='LC25978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &quot;element &#39;&quot; + this.label + &quot;&#39; set &quot; + methodName + &quot; &#39;&quot; + name + &quot;&#39; to &quot; + &quot;&#39;&quot; + value + &quot;&#39;&quot;;</div><div class='line' id='LC25979'><br/></div><div class='line' id='LC25980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(futureName, function($window, $document, done) {</div><div class='line' id='LC25981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var element = $document.elements();</div><div class='line' id='LC25982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, element[methodName].apply(element, args));</div><div class='line' id='LC25983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25984'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25985'>&nbsp;&nbsp;});</div><div class='line' id='LC25986'><br/></div><div class='line' id='LC25987'>&nbsp;&nbsp;angular.forEach(VALUE_METHODS, function(methodName) {</div><div class='line' id='LC25988'>&nbsp;&nbsp;&nbsp;&nbsp;chain[methodName] = function(value) {</div><div class='line' id='LC25989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = arguments,</div><div class='line' id='LC25990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;futureName = (args.length == 0)</div><div class='line' id='LC25991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? &quot;element &#39;&quot; + this.label + &quot;&#39; &quot; + methodName</div><div class='line' id='LC25992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: futureName = &quot;element &#39;&quot; + this.label + &quot;&#39; set &quot; + methodName + &quot; to &#39;&quot; + value + &quot;&#39;&quot;;</div><div class='line' id='LC25993'><br/></div><div class='line' id='LC25994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.addFutureAction(futureName, function($window, $document, done) {</div><div class='line' id='LC25995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var element = $document.elements();</div><div class='line' id='LC25996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done(null, element[methodName].apply(element, args));</div><div class='line' id='LC25997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC25998'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC25999'>&nbsp;&nbsp;});</div><div class='line' id='LC26000'><br/></div><div class='line' id='LC26001'>&nbsp;&nbsp;return function(selector, label) {</div><div class='line' id='LC26002'>&nbsp;&nbsp;&nbsp;&nbsp;this.dsl.using(selector, label);</div><div class='line' id='LC26003'>&nbsp;&nbsp;&nbsp;&nbsp;return chain;</div><div class='line' id='LC26004'>&nbsp;&nbsp;};</div><div class='line' id='LC26005'>});</div><div class='line' id='LC26006'><br/></div><div class='line' id='LC26007'>/**</div><div class='line' id='LC26008'>&nbsp;* Matchers for implementing specs. Follows the Jasmine spec conventions.</div><div class='line' id='LC26009'>&nbsp;*/</div><div class='line' id='LC26010'><br/></div><div class='line' id='LC26011'>angular.scenario.matcher(&#39;toEqual&#39;, function(expected) {</div><div class='line' id='LC26012'>&nbsp;&nbsp;return angular.equals(this.actual, expected);</div><div class='line' id='LC26013'>});</div><div class='line' id='LC26014'><br/></div><div class='line' id='LC26015'>angular.scenario.matcher(&#39;toBe&#39;, function(expected) {</div><div class='line' id='LC26016'>&nbsp;&nbsp;return this.actual === expected;</div><div class='line' id='LC26017'>});</div><div class='line' id='LC26018'><br/></div><div class='line' id='LC26019'>angular.scenario.matcher(&#39;toBeDefined&#39;, function() {</div><div class='line' id='LC26020'>&nbsp;&nbsp;return angular.isDefined(this.actual);</div><div class='line' id='LC26021'>});</div><div class='line' id='LC26022'><br/></div><div class='line' id='LC26023'>angular.scenario.matcher(&#39;toBeTruthy&#39;, function() {</div><div class='line' id='LC26024'>&nbsp;&nbsp;return this.actual;</div><div class='line' id='LC26025'>});</div><div class='line' id='LC26026'><br/></div><div class='line' id='LC26027'>angular.scenario.matcher(&#39;toBeFalsy&#39;, function() {</div><div class='line' id='LC26028'>&nbsp;&nbsp;return !this.actual;</div><div class='line' id='LC26029'>});</div><div class='line' id='LC26030'><br/></div><div class='line' id='LC26031'>angular.scenario.matcher(&#39;toMatch&#39;, function(expected) {</div><div class='line' id='LC26032'>&nbsp;&nbsp;return new RegExp(expected).test(this.actual);</div><div class='line' id='LC26033'>});</div><div class='line' id='LC26034'><br/></div><div class='line' id='LC26035'>angular.scenario.matcher(&#39;toBeNull&#39;, function() {</div><div class='line' id='LC26036'>&nbsp;&nbsp;return this.actual === null;</div><div class='line' id='LC26037'>});</div><div class='line' id='LC26038'><br/></div><div class='line' id='LC26039'>angular.scenario.matcher(&#39;toContain&#39;, function(expected) {</div><div class='line' id='LC26040'>&nbsp;&nbsp;return includes(this.actual, expected);</div><div class='line' id='LC26041'>});</div><div class='line' id='LC26042'><br/></div><div class='line' id='LC26043'>angular.scenario.matcher(&#39;toBeLessThan&#39;, function(expected) {</div><div class='line' id='LC26044'>&nbsp;&nbsp;return this.actual &lt; expected;</div><div class='line' id='LC26045'>});</div><div class='line' id='LC26046'><br/></div><div class='line' id='LC26047'>angular.scenario.matcher(&#39;toBeGreaterThan&#39;, function(expected) {</div><div class='line' id='LC26048'>&nbsp;&nbsp;return this.actual &gt; expected;</div><div class='line' id='LC26049'>});</div><div class='line' id='LC26050'><br/></div><div class='line' id='LC26051'>/**</div><div class='line' id='LC26052'>&nbsp;* User Interface for the Scenario Runner.</div><div class='line' id='LC26053'>&nbsp;*</div><div class='line' id='LC26054'>&nbsp;* TODO(esprehn): This should be refactored now that ObjectModel exists</div><div class='line' id='LC26055'>&nbsp;*  to use angular bindings for the UI.</div><div class='line' id='LC26056'>&nbsp;*/</div><div class='line' id='LC26057'>angular.scenario.output(&#39;html&#39;, function(context, runner, model) {</div><div class='line' id='LC26058'>&nbsp;&nbsp;var specUiMap = {},</div><div class='line' id='LC26059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastStepUiMap = {};</div><div class='line' id='LC26060'><br/></div><div class='line' id='LC26061'>&nbsp;&nbsp;context.append(</div><div class='line' id='LC26062'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div id=&quot;header&quot;&gt;&#39; +</div><div class='line' id='LC26063'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;h1&gt;&lt;span class=&quot;angular&quot;&gt;AngularJS&lt;/span&gt;: Scenario Test Runner&lt;/h1&gt;&#39; +</div><div class='line' id='LC26064'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;ul id=&quot;status-legend&quot; class=&quot;status-display&quot;&gt;&#39; +</div><div class='line' id='LC26065'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;    &lt;li class=&quot;status-error&quot;&gt;0 Errors&lt;/li&gt;&#39; +</div><div class='line' id='LC26066'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;    &lt;li class=&quot;status-failure&quot;&gt;0 Failures&lt;/li&gt;&#39; +</div><div class='line' id='LC26067'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;    &lt;li class=&quot;status-success&quot;&gt;0 Passed&lt;/li&gt;&#39; +</div><div class='line' id='LC26068'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;/ul&gt;&#39; +</div><div class='line' id='LC26069'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39; +</div><div class='line' id='LC26070'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div id=&quot;specs&quot;&gt;&#39; +</div><div class='line' id='LC26071'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;div class=&quot;test-children&quot;&gt;&lt;/div&gt;&#39; +</div><div class='line' id='LC26072'>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39;</div><div class='line' id='LC26073'>&nbsp;&nbsp;);</div><div class='line' id='LC26074'><br/></div><div class='line' id='LC26075'>&nbsp;&nbsp;runner.on(&#39;InteractivePause&#39;, function(spec) {</div><div class='line' id='LC26076'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = lastStepUiMap[spec.id];</div><div class='line' id='LC26077'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;.test-title&#39;).</div><div class='line' id='LC26078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html(&#39;paused... &lt;a href=&quot;javascript:resume()&quot;&gt;resume&lt;/a&gt; when ready.&#39;);</div><div class='line' id='LC26079'>&nbsp;&nbsp;});</div><div class='line' id='LC26080'><br/></div><div class='line' id='LC26081'>&nbsp;&nbsp;runner.on(&#39;SpecBegin&#39;, function(spec) {</div><div class='line' id='LC26082'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = findContext(spec);</div><div class='line' id='LC26083'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .tests&#39;).append(</div><div class='line' id='LC26084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;li class=&quot;status-pending test-it&quot;&gt;&lt;/li&gt;&#39;</div><div class='line' id='LC26085'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC26086'>&nbsp;&nbsp;&nbsp;&nbsp;ui = ui.find(&#39;&gt; .tests li:last&#39;);</div><div class='line' id='LC26087'>&nbsp;&nbsp;&nbsp;&nbsp;ui.append(</div><div class='line' id='LC26088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div class=&quot;test-info&quot;&gt;&#39; +</div><div class='line' id='LC26089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;p class=&quot;test-title&quot;&gt;&#39; +</div><div class='line' id='LC26090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;    &lt;span class=&quot;timer-result&quot;&gt;&lt;/span&gt;&#39; +</div><div class='line' id='LC26091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;    &lt;span class=&quot;test-name&quot;&gt;&lt;/span&gt;&#39; +</div><div class='line' id='LC26092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;/p&gt;&#39; +</div><div class='line' id='LC26093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39; +</div><div class='line' id='LC26094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div class=&quot;scrollpane&quot;&gt;&#39; +</div><div class='line' id='LC26095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;ol class=&quot;test-actions&quot;&gt;&lt;/ol&gt;&#39; +</div><div class='line' id='LC26096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39;</div><div class='line' id='LC26097'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC26098'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .test-info .test-name&#39;).text(spec.name);</div><div class='line' id='LC26099'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .test-info&#39;).click(function() {</div><div class='line' id='LC26100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scrollpane = ui.find(&#39;&gt; .scrollpane&#39;);</div><div class='line' id='LC26101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actions = scrollpane.find(&#39;&gt; .test-actions&#39;);</div><div class='line' id='LC26102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name = context.find(&#39;&gt; .test-info .test-name&#39;);</div><div class='line' id='LC26103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (actions.find(&#39;:visible&#39;).length) {</div><div class='line' id='LC26104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.hide();</div><div class='line' id='LC26105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name.removeClass(&#39;open&#39;).addClass(&#39;closed&#39;);</div><div class='line' id='LC26106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC26107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.show();</div><div class='line' id='LC26108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollpane.attr(&#39;scrollTop&#39;, scrollpane.attr(&#39;scrollHeight&#39;));</div><div class='line' id='LC26109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name.removeClass(&#39;closed&#39;).addClass(&#39;open&#39;);</div><div class='line' id='LC26110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC26111'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC26112'><br/></div><div class='line' id='LC26113'>&nbsp;&nbsp;&nbsp;&nbsp;specUiMap[spec.id] = ui;</div><div class='line' id='LC26114'>&nbsp;&nbsp;});</div><div class='line' id='LC26115'><br/></div><div class='line' id='LC26116'>&nbsp;&nbsp;runner.on(&#39;SpecError&#39;, function(spec, error) {</div><div class='line' id='LC26117'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = specUiMap[spec.id];</div><div class='line' id='LC26118'>&nbsp;&nbsp;&nbsp;&nbsp;ui.append(&#39;&lt;pre&gt;&lt;/pre&gt;&#39;);</div><div class='line' id='LC26119'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; pre&#39;).text(formatException(error));</div><div class='line' id='LC26120'>&nbsp;&nbsp;});</div><div class='line' id='LC26121'><br/></div><div class='line' id='LC26122'>&nbsp;&nbsp;runner.on(&#39;SpecEnd&#39;, function(spec) {</div><div class='line' id='LC26123'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = specUiMap[spec.id];</div><div class='line' id='LC26124'>&nbsp;&nbsp;&nbsp;&nbsp;spec = model.getSpec(spec.id);</div><div class='line' id='LC26125'>&nbsp;&nbsp;&nbsp;&nbsp;ui.removeClass(&#39;status-pending&#39;);</div><div class='line' id='LC26126'>&nbsp;&nbsp;&nbsp;&nbsp;ui.addClass(&#39;status-&#39; + spec.status);</div><div class='line' id='LC26127'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&quot;&gt; .test-info .timer-result&quot;).text(spec.duration + &quot;ms&quot;);</div><div class='line' id='LC26128'>&nbsp;&nbsp;&nbsp;&nbsp;if (spec.status === &#39;success&#39;) {</div><div class='line' id='LC26129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .test-info .test-name&#39;).addClass(&#39;closed&#39;);</div><div class='line' id='LC26130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .scrollpane .test-actions&#39;).hide();</div><div class='line' id='LC26131'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC26132'>&nbsp;&nbsp;&nbsp;&nbsp;updateTotals(spec.status);</div><div class='line' id='LC26133'>&nbsp;&nbsp;});</div><div class='line' id='LC26134'><br/></div><div class='line' id='LC26135'>&nbsp;&nbsp;runner.on(&#39;StepBegin&#39;, function(spec, step) {</div><div class='line' id='LC26136'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = specUiMap[spec.id];</div><div class='line' id='LC26137'>&nbsp;&nbsp;&nbsp;&nbsp;spec = model.getSpec(spec.id);</div><div class='line' id='LC26138'>&nbsp;&nbsp;&nbsp;&nbsp;step = spec.getLastStep();</div><div class='line' id='LC26139'>&nbsp;&nbsp;&nbsp;&nbsp;ui.find(&#39;&gt; .scrollpane .test-actions&#39;).append(&#39;&lt;li class=&quot;status-pending&quot;&gt;&lt;/li&gt;&#39;);</div><div class='line' id='LC26140'>&nbsp;&nbsp;&nbsp;&nbsp;var stepUi = lastStepUiMap[spec.id] = ui.find(&#39;&gt; .scrollpane .test-actions li:last&#39;);</div><div class='line' id='LC26141'>&nbsp;&nbsp;&nbsp;&nbsp;stepUi.append(</div><div class='line' id='LC26142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div class=&quot;timer-result&quot;&gt;&lt;/div&gt;&#39; +</div><div class='line' id='LC26143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div class=&quot;test-title&quot;&gt;&lt;/div&gt;&#39;</div><div class='line' id='LC26144'>&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC26145'>&nbsp;&nbsp;&nbsp;&nbsp;stepUi.find(&#39;&gt; .test-title&#39;).text(step.name);</div><div class='line' id='LC26146'>&nbsp;&nbsp;&nbsp;&nbsp;var scrollpane = stepUi.parents(&#39;.scrollpane&#39;);</div><div class='line' id='LC26147'>&nbsp;&nbsp;&nbsp;&nbsp;scrollpane.attr(&#39;scrollTop&#39;, scrollpane.attr(&#39;scrollHeight&#39;));</div><div class='line' id='LC26148'>&nbsp;&nbsp;});</div><div class='line' id='LC26149'><br/></div><div class='line' id='LC26150'>&nbsp;&nbsp;runner.on(&#39;StepFailure&#39;, function(spec, step, error) {</div><div class='line' id='LC26151'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = lastStepUiMap[spec.id];</div><div class='line' id='LC26152'>&nbsp;&nbsp;&nbsp;&nbsp;addError(ui, step.line, error);</div><div class='line' id='LC26153'>&nbsp;&nbsp;});</div><div class='line' id='LC26154'><br/></div><div class='line' id='LC26155'>&nbsp;&nbsp;runner.on(&#39;StepError&#39;, function(spec, step, error) {</div><div class='line' id='LC26156'>&nbsp;&nbsp;&nbsp;&nbsp;var ui = lastStepUiMap[spec.id];</div><div class='line' id='LC26157'>&nbsp;&nbsp;&nbsp;&nbsp;addError(ui, step.line, error);</div><div class='line' id='LC26158'>&nbsp;&nbsp;});</div><div class='line' id='LC26159'><br/></div><div class='line' id='LC26160'>&nbsp;&nbsp;runner.on(&#39;StepEnd&#39;, function(spec, step) {</div><div class='line' id='LC26161'>&nbsp;&nbsp;&nbsp;&nbsp;var stepUi = lastStepUiMap[spec.id];</div><div class='line' id='LC26162'>&nbsp;&nbsp;&nbsp;&nbsp;spec = model.getSpec(spec.id);</div><div class='line' id='LC26163'>&nbsp;&nbsp;&nbsp;&nbsp;step = spec.getLastStep();</div><div class='line' id='LC26164'>&nbsp;&nbsp;&nbsp;&nbsp;stepUi.find(&#39;.timer-result&#39;).text(step.duration + &#39;ms&#39;);</div><div class='line' id='LC26165'>&nbsp;&nbsp;&nbsp;&nbsp;stepUi.removeClass(&#39;status-pending&#39;);</div><div class='line' id='LC26166'>&nbsp;&nbsp;&nbsp;&nbsp;stepUi.addClass(&#39;status-&#39; + step.status);</div><div class='line' id='LC26167'>&nbsp;&nbsp;&nbsp;&nbsp;var scrollpane = specUiMap[spec.id].find(&#39;&gt; .scrollpane&#39;);</div><div class='line' id='LC26168'>&nbsp;&nbsp;&nbsp;&nbsp;scrollpane.attr(&#39;scrollTop&#39;, scrollpane.attr(&#39;scrollHeight&#39;));</div><div class='line' id='LC26169'>&nbsp;&nbsp;});</div><div class='line' id='LC26170'><br/></div><div class='line' id='LC26171'>&nbsp;&nbsp;/**</div><div class='line' id='LC26172'>&nbsp;&nbsp;&nbsp;* Finds the context of a spec block defined by the passed definition.</div><div class='line' id='LC26173'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC26174'>&nbsp;&nbsp;&nbsp;* @param {Object} The definition created by the Describe object.</div><div class='line' id='LC26175'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC26176'>&nbsp;&nbsp;function findContext(spec) {</div><div class='line' id='LC26177'>&nbsp;&nbsp;&nbsp;&nbsp;var currentContext = context.find(&#39;#specs&#39;);</div><div class='line' id='LC26178'>&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(model.getDefinitionPath(spec), function(defn) {</div><div class='line' id='LC26179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var id = &#39;describe-&#39; + defn.id;</div><div class='line' id='LC26180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!context.find(&#39;#&#39; + id).length) {</div><div class='line' id='LC26181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentContext.find(&#39;&gt; .test-children&#39;).append(</div><div class='line' id='LC26182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;div class=&quot;test-describe&quot; id=&quot;&#39; + id + &#39;&quot;&gt;&#39; +</div><div class='line' id='LC26183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;h2&gt;&lt;/h2&gt;&#39; +</div><div class='line' id='LC26184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;div class=&quot;test-children&quot;&gt;&lt;/div&gt;&#39; +</div><div class='line' id='LC26185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;  &lt;ul class=&quot;tests&quot;&gt;&lt;/ul&gt;&#39; +</div><div class='line' id='LC26186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&lt;/div&gt;&#39;</div><div class='line' id='LC26187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC26188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context.find(&#39;#&#39; + id).find(&#39;&gt; h2&#39;).text(&#39;describe: &#39; + defn.name);</div><div class='line' id='LC26189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC26190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentContext = context.find(&#39;#&#39; + id);</div><div class='line' id='LC26191'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC26192'>&nbsp;&nbsp;&nbsp;&nbsp;return context.find(&#39;#describe-&#39; + spec.definition.id);</div><div class='line' id='LC26193'>&nbsp;&nbsp;}</div><div class='line' id='LC26194'><br/></div><div class='line' id='LC26195'>&nbsp;&nbsp;/**</div><div class='line' id='LC26196'>&nbsp;&nbsp;&nbsp;* Updates the test counter for the status.</div><div class='line' id='LC26197'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC26198'>&nbsp;&nbsp;&nbsp;* @param {string} the status.</div><div class='line' id='LC26199'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC26200'>&nbsp;&nbsp;function updateTotals(status) {</div><div class='line' id='LC26201'>&nbsp;&nbsp;&nbsp;&nbsp;var legend = context.find(&#39;#status-legend .status-&#39; + status);</div><div class='line' id='LC26202'>&nbsp;&nbsp;&nbsp;&nbsp;var parts = legend.text().split(&#39; &#39;);</div><div class='line' id='LC26203'>&nbsp;&nbsp;&nbsp;&nbsp;var value = (parts[0] * 1) + 1;</div><div class='line' id='LC26204'>&nbsp;&nbsp;&nbsp;&nbsp;legend.text(value + &#39; &#39; + parts[1]);</div><div class='line' id='LC26205'>&nbsp;&nbsp;}</div><div class='line' id='LC26206'><br/></div><div class='line' id='LC26207'>&nbsp;&nbsp;/**</div><div class='line' id='LC26208'>&nbsp;&nbsp;&nbsp;* Add an error to a step.</div><div class='line' id='LC26209'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC26210'>&nbsp;&nbsp;&nbsp;* @param {Object} The JQuery wrapped context</div><div class='line' id='LC26211'>&nbsp;&nbsp;&nbsp;* @param {function()} fn() that should return the file/line number of the error</div><div class='line' id='LC26212'>&nbsp;&nbsp;&nbsp;* @param {Object} the error.</div><div class='line' id='LC26213'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC26214'>&nbsp;&nbsp;function addError(context, line, error) {</div><div class='line' id='LC26215'>&nbsp;&nbsp;&nbsp;&nbsp;context.find(&#39;.test-title&#39;).append(&#39;&lt;pre&gt;&lt;/pre&gt;&#39;);</div><div class='line' id='LC26216'>&nbsp;&nbsp;&nbsp;&nbsp;var message = _jQuery.trim(line() + &#39;\n\n&#39; + formatException(error));</div><div class='line' id='LC26217'>&nbsp;&nbsp;&nbsp;&nbsp;context.find(&#39;.test-title pre:last&#39;).text(message);</div><div class='line' id='LC26218'>&nbsp;&nbsp;}</div><div class='line' id='LC26219'>});</div><div class='line' id='LC26220'><br/></div><div class='line' id='LC26221'>/**</div><div class='line' id='LC26222'>&nbsp;* Generates JSON output into a context.</div><div class='line' id='LC26223'>&nbsp;*/</div><div class='line' id='LC26224'>angular.scenario.output(&#39;json&#39;, function(context, runner, model) {</div><div class='line' id='LC26225'>&nbsp;&nbsp;model.on(&#39;RunnerEnd&#39;, function() {</div><div class='line' id='LC26226'>&nbsp;&nbsp;&nbsp;&nbsp;context.text(angular.toJson(model.value));</div><div class='line' id='LC26227'>&nbsp;&nbsp;});</div><div class='line' id='LC26228'>});</div><div class='line' id='LC26229'><br/></div><div class='line' id='LC26230'>/**</div><div class='line' id='LC26231'>&nbsp;* Generates XML output into a context.</div><div class='line' id='LC26232'>&nbsp;*/</div><div class='line' id='LC26233'>angular.scenario.output(&#39;xml&#39;, function(context, runner, model) {</div><div class='line' id='LC26234'>&nbsp;&nbsp;var $ = function(args) {return new context.init(args);};</div><div class='line' id='LC26235'>&nbsp;&nbsp;model.on(&#39;RunnerEnd&#39;, function() {</div><div class='line' id='LC26236'>&nbsp;&nbsp;&nbsp;&nbsp;var scenario = $(&#39;&lt;scenario&gt;&lt;/scenario&gt;&#39;);</div><div class='line' id='LC26237'>&nbsp;&nbsp;&nbsp;&nbsp;context.append(scenario);</div><div class='line' id='LC26238'>&nbsp;&nbsp;&nbsp;&nbsp;serializeXml(scenario, model.value);</div><div class='line' id='LC26239'>&nbsp;&nbsp;});</div><div class='line' id='LC26240'><br/></div><div class='line' id='LC26241'>&nbsp;&nbsp;/**</div><div class='line' id='LC26242'>&nbsp;&nbsp;&nbsp;* Convert the tree into XML.</div><div class='line' id='LC26243'>&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC26244'>&nbsp;&nbsp;&nbsp;* @param {Object} context jQuery context to add the XML to.</div><div class='line' id='LC26245'>&nbsp;&nbsp;&nbsp;* @param {Object} tree node to serialize</div><div class='line' id='LC26246'>&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC26247'>&nbsp;&nbsp;function serializeXml(context, tree) {</div><div class='line' id='LC26248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(tree.children, function(child) {</div><div class='line' id='LC26249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var describeContext = $(&#39;&lt;describe&gt;&lt;/describe&gt;&#39;);</div><div class='line' id='LC26250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;describeContext.attr(&#39;id&#39;, child.id);</div><div class='line' id='LC26251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;describeContext.attr(&#39;name&#39;, child.name);</div><div class='line' id='LC26252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context.append(describeContext);</div><div class='line' id='LC26253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializeXml(describeContext, child);</div><div class='line' id='LC26254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC26255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var its = $(&#39;&lt;its&gt;&lt;/its&gt;&#39;);</div><div class='line' id='LC26256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context.append(its);</div><div class='line' id='LC26257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(tree.specs, function(spec) {</div><div class='line' id='LC26258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var it = $(&#39;&lt;it&gt;&lt;/it&gt;&#39;);</div><div class='line' id='LC26259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.attr(&#39;id&#39;, spec.id);</div><div class='line' id='LC26260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.attr(&#39;name&#39;, spec.name);</div><div class='line' id='LC26261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.attr(&#39;duration&#39;, spec.duration);</div><div class='line' id='LC26262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.attr(&#39;status&#39;, spec.status);</div><div class='line' id='LC26263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;its.append(it);</div><div class='line' id='LC26264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.forEach(spec.steps, function(step) {</div><div class='line' id='LC26265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var stepContext = $(&#39;&lt;step&gt;&lt;/step&gt;&#39;);</div><div class='line' id='LC26266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stepContext.attr(&#39;name&#39;, step.name);</div><div class='line' id='LC26267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stepContext.attr(&#39;duration&#39;, step.duration);</div><div class='line' id='LC26268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stepContext.attr(&#39;status&#39;, step.status);</div><div class='line' id='LC26269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.append(stepContext);</div><div class='line' id='LC26270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (step.error) {</div><div class='line' id='LC26271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var error = $(&#39;&lt;error&gt;&lt;/error&gt;&#39;);</div><div class='line' id='LC26272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stepContext.append(error);</div><div class='line' id='LC26273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error.text(formatException(step.error));</div><div class='line' id='LC26274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC26275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC26276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC26277'>&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC26278'>});</div><div class='line' id='LC26279'><br/></div><div class='line' id='LC26280'>/**</div><div class='line' id='LC26281'>&nbsp;* Creates a global value $result with the result of the runner.</div><div class='line' id='LC26282'>&nbsp;*/</div><div class='line' id='LC26283'>angular.scenario.output(&#39;object&#39;, function(context, runner, model) {</div><div class='line' id='LC26284'>&nbsp;&nbsp;runner.$window.$result = model.value;</div><div class='line' id='LC26285'>});</div><div class='line' id='LC26286'><br/></div><div class='line' id='LC26287'>bindJQuery();</div><div class='line' id='LC26288'>publishExternalAPI(angular);</div><div class='line' id='LC26289'><br/></div><div class='line' id='LC26290'>var $runner = new angular.scenario.Runner(window),</div><div class='line' id='LC26291'>&nbsp;&nbsp;&nbsp;&nbsp;scripts = document.getElementsByTagName(&#39;script&#39;),</div><div class='line' id='LC26292'>&nbsp;&nbsp;&nbsp;&nbsp;script = scripts[scripts.length - 1],</div><div class='line' id='LC26293'>&nbsp;&nbsp;&nbsp;&nbsp;config = {};</div><div class='line' id='LC26294'><br/></div><div class='line' id='LC26295'>angular.forEach(script.attributes, function(attr) {</div><div class='line' id='LC26296'>&nbsp;&nbsp;var match = attr.name.match(/ng[:\-](.*)/);</div><div class='line' id='LC26297'>&nbsp;&nbsp;if (match) {</div><div class='line' id='LC26298'>&nbsp;&nbsp;&nbsp;&nbsp;config[match[1]] = attr.value || true;</div><div class='line' id='LC26299'>&nbsp;&nbsp;}</div><div class='line' id='LC26300'>});</div><div class='line' id='LC26301'><br/></div><div class='line' id='LC26302'>if (config.autotest) {</div><div class='line' id='LC26303'>&nbsp;&nbsp;JQLite(document).ready(function() {</div><div class='line' id='LC26304'>&nbsp;&nbsp;&nbsp;&nbsp;angular.scenario.setUpAndRun(config);</div><div class='line' id='LC26305'>&nbsp;&nbsp;});</div><div class='line' id='LC26306'>}</div><div class='line' id='LC26307'>})(window, document);</div><div class='line' id='LC26308'><br/></div><div class='line' id='LC26309'>angular.element(document).find(&#39;head&#39;).append(&#39;&lt;style type=&quot;text/css&quot;&gt;@charset &quot;UTF-8&quot;;\n\n[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak],\n.ng-cloak, .x-ng-cloak {\n  display: none;\n}\n\nng\\:form {\n  display: block;\n}\n&lt;/style&gt;&#39;);</div><div class='line' id='LC26310'>angular.element(document).find(&#39;head&#39;).append(&#39;&lt;style type=&quot;text/css&quot;&gt;@charset &quot;UTF-8&quot;;\n/* CSS Document */\n\n/** Structure */\nbody {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  font-size: 14px;\n}\n\n#system-error {\n  font-size: 1.5em;\n  text-align: center;\n}\n\n#json, #xml {\n  display: none;\n}\n\n#header {\n  position: fixed;\n  width: 100%;\n}\n\n#specs {\n  padding-top: 50px;\n}\n\n#header .angular {\n  font-family: Courier New, monospace;\n  font-weight: bold;\n}\n\n#header h1 {\n  font-weight: normal;\n  float: left;\n  font-size: 30px;\n  line-height: 30px;\n  margin: 0;\n  padding: 10px 10px;\n  height: 30px;\n}\n\n#application h2,\n#specs h2 {\n  margin: 0;\n  padding: 0.5em;\n  font-size: 1.1em;\n}\n\n#status-legend {\n  margin-top: 10px;\n  margin-right: 10px;\n}\n\n#header,\n#application,\n.test-info,\n.test-actions li {\n  overflow: hidden;\n}\n\n#application {\n  margin: 10px;\n}\n\n#application iframe {\n  width: 100%;\n  height: 758px;\n}\n\n#application .popout {\n  float: right;\n}\n\n#application iframe {\n  border: none;\n}\n\n.tests li,\n.test-actions li,\n.test-it li,\n.test-it ol,\n.status-display {\n  list-style-type: none;\n}\n\n.tests,\n.test-it ol,\n.status-display {\n  margin: 0;\n  padding: 0;\n}\n\n.test-info {\n  margin-left: 1em;\n  margin-top: 0.5em;\n  border-radius: 8px 0 0 8px;\n  -webkit-border-radius: 8px 0 0 8px;\n  -moz-border-radius: 8px 0 0 8px;\n  cursor: pointer;\n}\n\n.test-info:hover .test-name {\n  text-decoration: underline;\n}\n\n.test-info .closed:before {\n  content: \&#39;\\25b8\\00A0\&#39;;\n}\n\n.test-info .open:before {\n  content: \&#39;\\25be\\00A0\&#39;;\n  font-weight: bold;\n}\n\n.test-it ol {\n  margin-left: 2.5em;\n}\n\n.status-display,\n.status-display li {\n  float: right;\n}\n\n.status-display li {\n  padding: 5px 10px;\n}\n\n.timer-result,\n.test-title {\n  display: inline-block;\n  margin: 0;\n  padding: 4px;\n}\n\n.test-actions .test-title,\n.test-actions .test-result {\n  display: table-cell;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n}\n\n.test-actions {\n  display: table;\n}\n\n.test-actions li {\n  display: table-row;\n}\n\n.timer-result {\n  width: 4em;\n  padding: 0 10px;\n  text-align: right;\n  font-family: monospace;\n}\n\n.test-it pre,\n.test-actions pre {\n  clear: left;\n  color: black;\n  margin-left: 6em;\n}\n\n.test-describe {\n  padding-bottom: 0.5em;\n}\n\n.test-describe .test-describe {\n  margin: 5px 5px 10px 2em;\n}\n\n.test-actions .status-pending .test-title:before {\n  content: \&#39;\\00bb\\00A0\&#39;;\n}\n\n.scrollpane {\n   max-height: 20em;\n   overflow: auto;\n}\n\n/** Colors */\n\n#header {\n  background-color: #F2C200;\n}\n\n#specs h2 {\n  border-top: 2px solid #BABAD1;\n}\n\n#specs h2,\n#application h2 {\n  background-color: #efefef;\n}\n\n#application {\n  border: 1px solid #BABAD1;\n}\n\n.test-describe .test-describe {\n  border-left: 1px solid #BABAD1;\n  border-right: 1px solid #BABAD1;\n  border-bottom: 1px solid #BABAD1;\n}\n\n.status-display {\n  border: 1px solid #777;\n}\n\n.status-display .status-pending,\n.status-pending .test-info {\n  background-color: #F9EEBC;\n}\n\n.status-display .status-success,\n.status-success .test-info {\n  background-color: #B1D7A1;\n}\n\n.status-display .status-failure,\n.status-failure .test-info {\n  background-color: #FF8286;\n}\n\n.status-display .status-error,\n.status-error .test-info {\n  background-color: black;\n  color: white;\n}\n\n.test-actions .status-success .test-title {\n  color: #30B30A;\n}\n\n.test-actions .status-failure .test-title {\n  color: #DF0000;\n}\n\n.test-actions .status-error .test-title {\n  color: black;\n}\n\n.test-actions .timer-result {\n  color: #888;\n}\n&lt;/style&gt;&#39;);</div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.09707s from github-fe120-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/angular/angular-seed/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

